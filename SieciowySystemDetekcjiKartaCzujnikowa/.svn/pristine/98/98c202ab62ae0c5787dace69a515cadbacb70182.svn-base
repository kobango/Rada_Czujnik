

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Jun 04 12:44:20 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	intcode
    20  000008  EF04 F006          	goto	3080	;# 
    21                           
    22                           	psect	intcodelo
    23  000018  EF0C F006          	goto	3096	;# 
    24  0000                     _TMR0	set	4054
    25  0000                     _B0CON	set	3712
    26  0000                     _B1CON	set	3728
    27  0000                     _B2CON	set	3744
    28  0000                     _B3CON	set	3760
    29  0000                     _B4CON	set	3776
    30  0000                     _B5CON	set	3792
    31  0000                     _BRGCON1bits	set	3651
    32  0000                     _BRGCON2bits	set	3652
    33  0000                     _BRGCON3bits	set	3653
    34  0000                     _CANCON	set	3951
    35  0000                     _CANSTAT	set	3950
    36  0000                     _ECANCON	set	3954
    37  0000                     _EECON1bits	set	3967
    38  0000                     _EECON2	set	3966
    39  0000                     _INTCONbits	set	4082
    40  0000                     _LATAbits	set	3977
    41  0000                     _MSEL0	set	3705
    42  0000                     _RCON	set	4048
    43  0000                     _RXB0CON	set	3936
    44  0000                     _RXB1CON	set	3888
    45  0000                     _RXF0EIDH	set	3810
    46  0000                     _RXF0EIDL	set	3811
    47  0000                     _RXF0SIDH	set	3808
    48  0000                     _RXF0SIDL	set	3809
    49  0000                     _RXF0SIDLbits	set	3809
    50  0000                     _RXFCON0	set	3654
    51  0000                     _RXFCON1	set	3655
    52  0000                     _RXM0EIDH	set	3834
    53  0000                     _RXM0EIDL	set	3835
    54  0000                     _RXM0SIDH	set	3832
    55  0000                     _RXM0SIDL	set	3833
    56  0000                     _T0CON	set	4053
    57  0000                     _T0CONbits	set	4053
    58  0000                     _TBLPTRH	set	4087
    59  0000                     _TBLPTRL	set	4086
    60  0000                     _TBLPTRU	set	4088
    61  0000                     _TRISA	set	3986
    62  0000                     _TRISAbits	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISCbits	set	3988
    66  0000                     _RXB0D0	set	3942
    67                           
    68 ;;
    69 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    70 ;;
    71 ;; *************** function _main *****************
    72 ;; Defined at:
    73 ;;		line 206 in file "main.c"
    74 ;; Parameters:    Size  Location     Type
    75 ;;		None
    76 ;; Auto vars:     Size  Location     Type
    77 ;;  Delay           1   28[COMRAM] unsigned char 
    78 ;; Return value:  Size  Location     Type
    79 ;;                  2  120[COMRAM] int 
    80 ;; Registers used:
    81 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
    82 ;; Tracked objects:
    83 ;;		On entry : 0/0
    84 ;;		On exit  : 0/0
    85 ;;		Unchanged: 0/0
    86 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    87 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    88 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    89 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    90 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    91 ;;Total ram usage:        2 bytes
    92 ;; Hardware stack levels required when called:    2
    93 ;; This function calls:
    94 ;;		_OdbierzRamke
    95 ;;		_ResetDevice
    96 ;; This function is called by:
    97 ;;		Startup code after reset
    98 ;; This function uses a non-reentrant model
    99 ;;
   100                           
   101                           	psect	text0
   102  000200                     __ptext0:
   103                           	opt stack 0
   104                           
   105                           ; #config settings
   106  000200                     _main:
   107                           	opt stack 29
   108                           
   109                           ;main.c: 207: unsigned char Delay;
   110                           ;main.c: 210: if((RCON&0x3F)!=0x3C)
   111                           
   112                           ;incstack = 0
   113                           ;incstack = 0
   114  000200  50D0               	movf	4048,w,c	;volatile
   115  000202  0B3F               	andlw	63
   116  000204  0A3C               	xorlw	60
   117  000206  A4D8               	btfss	status,2,c
   118                           
   119                           ;main.c: 211: {
   120                           ;main.c: 212: ResetDevice();
   121  000208  ECF4  F001         	call	_ResetDevice	;wreg free
   122                           
   123                           ;main.c: 213: }
   124                           ;main.c: 215: Delay = 5;
   125  00020C  6E1C               	movwf	??_main& (0+255),c
   126  00020E  0E05               	movlw	5
   127  000210  6E1D               	movwf	main@Delay,c
   128  000212  501C               	movf	??_main& (0+255),w,c
   129                           
   130                           ;main.c: 217: TRISA = 0xFF;
   131  000214  6892               	setf	3986,c	;volatile
   132                           
   133                           ;main.c: 218: TRISB = 0xFF;
   134  000216  6893               	setf	3987,c	;volatile
   135                           
   136                           ;main.c: 219: TRISAbits.TRISA5 = 0;
   137  000218  9A92               	bcf	3986,5,c	;volatile
   138                           
   139                           ;main.c: 220: LATAbits.LATA5 = 0;
   140  00021A  9A89               	bcf	3977,5,c	;volatile
   141                           
   142                           ;main.c: 221: TRISC = 0xFF;
   143  00021C  6894               	setf	3988,c	;volatile
   144                           
   145                           ;main.c: 222: TRISCbits.TRISC6 = 0;
   146  00021E  9C94               	bcf	3988,6,c	;volatile
   147                           
   148                           ;main.c: 225: T0CON = 0x00;
   149  000220  0E00               	movlw	0
   150  000222  6ED5               	movwf	4053,c	;volatile
   151                           
   152                           ;main.c: 226: T0CONbits.T0PS = 0x05;
   153  000224  50D5               	movf	4053,w,c	;volatile
   154  000226  0BF8               	andlw	-8
   155  000228  0905               	iorlw	5
   156  00022A  6ED5               	movwf	4053,c	;volatile
   157                           
   158                           ;main.c: 228: INTCONbits.TMR0IE = 0;
   159  00022C  9AF2               	bcf	intcon,5,c	;volatile
   160                           
   161                           ;main.c: 229: INTCONbits.TMR0IF = 0;
   162  00022E  94F2               	bcf	intcon,2,c	;volatile
   163                           
   164                           ;main.c: 231: TMR0 = 62500;
   165  000230  0EF4               	movlw	244
   166  000232  6ED7               	movwf	4055,c	;volatile
   167  000234  0E24               	movlw	36
   168  000236  6ED6               	movwf	4054,c	;volatile
   169                           
   170                           ;main.c: 234: T0CONbits.TMR0ON = 1;
   171  000238  8ED5               	bsf	4053,7,c	;volatile
   172                           
   173                           ;main.c: 237: CANCON = 0x80;
   174  00023A  0E80               	movlw	128
   175  00023C  6E6F               	movwf	3951,c	;volatile
   176  00023E                     l1114:
   177  00023E  506E               	movf	3950,w,c	;volatile
   178  000240  0BE0               	andlw	224
   179  000242  0A80               	xorlw	128
   180  000244  A4D8               	btfss	status,2,c
   181  000246  D7FB               	goto	l1114
   182                           
   183                           ;main.c: 241: }
   184                           ;main.c: 244: ECANCON = 0x90;
   185  000248  0E90               	movlw	144
   186  00024A  6E72               	movwf	3954,c	;volatile
   187                           
   188                           ;main.c: 248: BRGCON1bits.BRP = ((16000000/(2*20*50000))-1);
   189  00024C  010E               	movlb	14	; () banked
   190  00024E  8143               	bsf	67,0,b	;volatile
   191  000250  010E               	movlb	14	; () banked
   192  000252  8343               	bsf	67,1,b	;volatile
   193  000254  010E               	movlb	14	; () banked
   194  000256  8543               	bsf	67,2,b	;volatile
   195  000258  010E               	movlb	14	; () banked
   196  00025A  9743               	bcf	67,3,b	;volatile
   197  00025C  010E               	movlb	14	; () banked
   198  00025E  9943               	bcf	67,4,b	;volatile
   199  000260  010E               	movlb	14	; () banked
   200  000262  9B43               	bcf	67,5,b	;volatile
   201                           
   202                           ; BSR set to: 14
   203                           ;main.c: 249: BRGCON2bits.SEG1PH = 0b111;
   204  000264  010E               	movlb	14	; () banked
   205  000266  8744               	bsf	68,3,b	;volatile
   206  000268  010E               	movlb	14	; () banked
   207  00026A  8944               	bsf	68,4,b	;volatile
   208  00026C  010E               	movlb	14	; () banked
   209  00026E  8B44               	bsf	68,5,b	;volatile
   210                           
   211                           ;main.c: 250: BRGCON2bits.PRSEG = 0b100;
   212  000270  010E               	movlb	14	; () banked
   213  000272  010E               	movlb	14	; () banked
   214  000274  5144               	movf	68,w,b	;volatile
   215  000276  0BF8               	andlw	-8
   216  000278  0904               	iorlw	4
   217  00027A  010E               	movlb	14	; () banked
   218  00027C  6F44               	movwf	68,b	;volatile
   219                           
   220                           ;main.c: 251: BRGCON3bits.SEG2PH = 0b101;
   221  00027E  010E               	movlb	14	; () banked
   222  000280  010E               	movlb	14	; () banked
   223  000282  5145               	movf	69,w,b	;volatile
   224  000284  0BF8               	andlw	-8
   225  000286  0905               	iorlw	5
   226  000288  010E               	movlb	14	; () banked
   227  00028A  6F45               	movwf	69,b	;volatile
   228                           
   229                           ; BSR set to: 14
   230                           ;main.c: 253: BRGCON2bits.SAM = 1;
   231  00028C  010E               	movlb	14	; () banked
   232  00028E  010E               	movlb	14	; () banked
   233  000290  8D44               	bsf	68,6,b	;volatile
   234                           
   235                           ; BSR set to: 14
   236                           ;main.c: 254: BRGCON2bits.SEG2PHTS = 1;
   237  000292  010E               	movlb	14	; () banked
   238  000294  010E               	movlb	14	; () banked
   239  000296  8F44               	bsf	68,7,b	;volatile
   240                           
   241                           ;main.c: 259: MSEL0 = 0x00;
   242  000298  0E00               	movlw	0
   243  00029A  010E               	movlb	14	; () banked
   244  00029C  010E               	movlb	14	; () banked
   245  00029E  6F79               	movwf	121,b	;volatile
   246                           
   247                           ;main.c: 260: RXM0SIDH = 0b11100000;
   248  0002A0  0EE0               	movlw	224
   249  0002A2  010E               	movlb	14	; () banked
   250  0002A4  010E               	movlb	14	; () banked
   251  0002A6  6FF8               	movwf	248,b	;volatile
   252                           
   253                           ;main.c: 261: RXM0SIDL = 0b00001011;
   254  0002A8  0E0B               	movlw	11
   255  0002AA  010E               	movlb	14	; () banked
   256  0002AC  010E               	movlb	14	; () banked
   257  0002AE  6FF9               	movwf	249,b	;volatile
   258                           
   259                           ; BSR set to: 14
   260                           ;main.c: 262: RXM0EIDH = 0xFF;
   261  0002B0  010E               	movlb	14	; () banked
   262  0002B2  010E               	movlb	14	; () banked
   263  0002B4  69FA               	setf	250,b	;volatile
   264                           
   265                           ; BSR set to: 14
   266                           ;main.c: 263: RXM0EIDL = 0xFF;
   267  0002B6  010E               	movlb	14	; () banked
   268  0002B8  010E               	movlb	14	; () banked
   269  0002BA  69FB               	setf	251,b	;volatile
   270                           
   271                           ;main.c: 266: RXF0SIDH = 0x60;
   272  0002BC  0E60               	movlw	96
   273  0002BE  010E               	movlb	14	; () banked
   274  0002C0  010E               	movlb	14	; () banked
   275  0002C2  6FE0               	movwf	224,b	;volatile
   276                           
   277                           ;main.c: 267: RXF0SIDL = 0x01;
   278  0002C4  0E01               	movlw	1
   279  0002C6  010E               	movlb	14	; () banked
   280  0002C8  010E               	movlb	14	; () banked
   281  0002CA  6FE1               	movwf	225,b	;volatile
   282                           
   283                           ; BSR set to: 14
   284                           ;main.c: 268: RXF0SIDLbits.EXIDEN = 1;
   285  0002CC  010E               	movlb	14	; () banked
   286  0002CE  010E               	movlb	14	; () banked
   287  0002D0  87E1               	bsf	225,3,b	;volatile
   288                           
   289                           ;main.c: 269: RXF0EIDH = 0x40;
   290  0002D2  0E40               	movlw	64
   291  0002D4  010E               	movlb	14	; () banked
   292  0002D6  010E               	movlb	14	; () banked
   293  0002D8  6FE2               	movwf	226,b	;volatile
   294                           
   295                           ;main.c: 270: RXF0EIDL = 0;
   296  0002DA  0E00               	movlw	0
   297  0002DC  010E               	movlb	14	; () banked
   298  0002DE  010E               	movlb	14	; () banked
   299  0002E0  6FE3               	movwf	227,b	;volatile
   300                           
   301                           ;main.c: 274: RXFCON0 = 0x01;
   302  0002E2  0E01               	movlw	1
   303  0002E4  010E               	movlb	14	; () banked
   304  0002E6  010E               	movlb	14	; () banked
   305  0002E8  6F46               	movwf	70,b	;volatile
   306                           
   307                           ;main.c: 275: RXFCON1 = 0x00;
   308  0002EA  0E00               	movlw	0
   309  0002EC  010E               	movlb	14	; () banked
   310  0002EE  010E               	movlb	14	; () banked
   311  0002F0  6F47               	movwf	71,b	;volatile
   312                           
   313                           ;main.c: 283: RXB0CON = 0;
   314  0002F2  0E00               	movlw	0
   315  0002F4  6E60               	movwf	3936,c	;volatile
   316                           
   317                           ;main.c: 284: RXB1CON = 0;
   318  0002F6  0E00               	movlw	0
   319  0002F8  010F               	movlb	15	; () banked
   320  0002FA  010F               	movlb	15	; () banked
   321  0002FC  6F30               	movwf	48,b	;volatile
   322                           
   323                           ;main.c: 285: B0CON = 0;
   324  0002FE  0E00               	movlw	0
   325  000300  010E               	movlb	14	; () banked
   326  000302  010E               	movlb	14	; () banked
   327  000304  6F80               	movwf	128,b	;volatile
   328                           
   329                           ;main.c: 286: B1CON = 0;
   330  000306  0E00               	movlw	0
   331  000308  010E               	movlb	14	; () banked
   332  00030A  010E               	movlb	14	; () banked
   333  00030C  6F90               	movwf	144,b	;volatile
   334                           
   335                           ;main.c: 287: B2CON = 0;
   336  00030E  0E00               	movlw	0
   337  000310  010E               	movlb	14	; () banked
   338  000312  010E               	movlb	14	; () banked
   339  000314  6FA0               	movwf	160,b	;volatile
   340                           
   341                           ;main.c: 288: B3CON = 0;
   342  000316  0E00               	movlw	0
   343  000318  010E               	movlb	14	; () banked
   344  00031A  010E               	movlb	14	; () banked
   345  00031C  6FB0               	movwf	176,b	;volatile
   346                           
   347                           ;main.c: 289: B4CON = 0;
   348  00031E  0E00               	movlw	0
   349  000320  010E               	movlb	14	; () banked
   350  000322  010E               	movlb	14	; () banked
   351  000324  6FC0               	movwf	192,b	;volatile
   352                           
   353                           ;main.c: 290: B5CON = 0;
   354  000326  0E00               	movlw	0
   355  000328  010E               	movlb	14	; () banked
   356  00032A  010E               	movlb	14	; () banked
   357  00032C  6FD0               	movwf	208,b	;volatile
   358                           
   359                           ;main.c: 293: CANCON = 0x00;
   360  00032E  0E00               	movlw	0
   361  000330  6E6F               	movwf	3951,c	;volatile
   362  000332                     l1132:
   363  000332  506E               	movf	3950,w,c	;volatile
   364  000334  0BE0               	andlw	224
   365  000336  A4D8               	btfss	status,2,c
   366  000338  D7FC               	goto	l1132
   367                           
   368                           ;main.c: 297: }
   369                           ;main.c: 298: SourceAddr.Val32 = (DWORD)0xC00;
   370  00033A  0E00               	movlw	0
   371  00033C  6E1E               	movwf	_SourceAddr,c
   372  00033E  0E0C               	movlw	12
   373  000340  6E1F               	movwf	_SourceAddr+1,c
   374  000342  0E00               	movlw	0
   375  000344  6E20               	movwf	_SourceAddr+2,c
   376  000346  0E00               	movlw	0
   377  000348  6E21               	movwf	_SourceAddr+3,c
   378                           
   379                           ;main.c: 299: counter = 0;
   380  00034A  6E1C               	movwf	??_main& (0+255),c
   381  00034C  0E00               	movlw	0
   382  00034E  6E23               	movwf	_counter,c
   383  000350  501C               	movf	??_main& (0+255),w,c
   384  000352                     l1138:
   385                           
   386                           ;main.c: 302: {
   387                           ;main.c: 303: OdbierzRamke();
   388  000352  EC10  F000         	call	_OdbierzRamke	;wreg free
   389                           
   390                           ;main.c: 306: if(INTCONbits.TMR0IF == 1)
   391  000356  A4F2               	btfss	intcon,2,c	;volatile
   392  000358  D7FC               	goto	l1138
   393                           
   394                           ;main.c: 307: {
   395                           ;main.c: 308: INTCONbits.TMR0IF = 0;
   396  00035A  94F2               	bcf	intcon,2,c	;volatile
   397  00035C  0004               	clrwdt		;# 
   398                           
   399                           ;main.c: 311: if(++counter >= Delay)
   400  00035E  501D               	movf	main@Delay,w,c
   401  000360  2A23               	incf	_counter,f,c
   402  000362  5C23               	subwf	_counter& (0+255),w,c
   403  000364  A0D8               	btfss	status,0,c
   404  000366  D7F5               	goto	l1138
   405                           
   406                           ;main.c: 312: {
   407                           ;main.c: 313: ResetDevice();
   408  000368  ECF4  F001         	call	_ResetDevice	;wreg free
   409  00036C  D7F2               	goto	l1138
   410  00036E                     __end_of_main:
   411                           	opt stack 0
   412                           intcon	equ	0xFF2
   413                           status	equ	0xFD8
   414                           
   415                           	psect	cinit
   416  000518                     __pcinit:
   417                           	opt stack 0
   418  000518                     start_initialization:
   419                           	opt stack 0
   420  000518                     __initialization:
   421                           	opt stack 0
   422                           
   423                           ; Clear objects allocated to BANK0 (65 bytes)
   424  000518  EE00  F060         	lfsr	0,__pbssBANK0
   425  00051C  0E41               	movlw	65
   426  00051E                     clear_0:
   427  00051E  6AEE               	clrf	postinc0,c
   428  000520  06E8               	decf	wreg,f,c
   429  000522  E1FD               	bnz	clear_0
   430                           
   431                           ; Clear objects allocated to COMRAM (6 bytes)
   432  000524  6A23               	clrf	(__pbssCOMRAM+5)& (0+255),c
   433  000526  6A22               	clrf	(__pbssCOMRAM+4)& (0+255),c
   434  000528  6A21               	clrf	(__pbssCOMRAM+3)& (0+255),c
   435  00052A  6A20               	clrf	(__pbssCOMRAM+2)& (0+255),c
   436  00052C  6A1F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   437  00052E  6A1E               	clrf	__pbssCOMRAM& (0+255),c
   438  000530                     end_of_initialization:
   439                           	opt stack 0
   440  000530                     __end_of__initialization:
   441                           	opt stack 0
   442  000530  0E00               	movlw	low (__Lmediumconst shr (0+16))
   443  000532  6EF8               	movwf	tblptru,c
   444  000534  0100               	movlb	0
   445  000536  EF00  F001         	goto	_main	;jump to C main() function
   446                           tblptru	equ	0xFF8
   447                           intcon	equ	0xFF2
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           status	equ	0xFD8
   451                           
   452                           	psect	bssCOMRAM
   453  00001E                     __pbssCOMRAM:
   454                           	opt stack 0
   455  00001E                     _SourceAddr:
   456                           	opt stack 0
   457  00001E                     	ds	4
   458  000022                     OdbierzRamke@iloscBajtow:
   459                           	opt stack 0
   460  000022                     	ds	1
   461  000023                     _counter:
   462                           	opt stack 0
   463  000023                     	ds	1
   464                           tblptru	equ	0xFF8
   465                           intcon	equ	0xFF2
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           status	equ	0xFD8
   469                           
   470                           	psect	bssBANK0
   471  000060                     __pbssBANK0:
   472                           	opt stack 0
   473  000060                     _buforCAN:
   474                           	opt stack 0
   475  000060                     	ds	65
   476                           tblptru	equ	0xFF8
   477                           intcon	equ	0xFF2
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           status	equ	0xFD8
   481                           
   482                           	psect	cstackCOMRAM
   483  000001                     __pcstackCOMRAM:
   484                           	opt stack 0
   485  000001                     ?_EraseFlash:
   486                           	opt stack 0
   487  000001                     ?_WriteBytesFlash:
   488                           	opt stack 0
   489  000001                     EraseFlash@startaddr:
   490                           	opt stack 0
   491  000001                     WriteBytesFlash@startaddr:
   492                           	opt stack 0
   493                           
   494                           ; 4 bytes @ 0x0
   495  000001                     	ds	4
   496  000005                     WriteBytesFlash@num_bytes:
   497                           	opt stack 0
   498  000005                     EraseFlash@endaddr:
   499                           	opt stack 0
   500                           
   501                           ; 4 bytes @ 0x4
   502  000005                     	ds	2
   503  000007                     WriteBytesFlash@flash_array:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x6
   507  000007                     	ds	2
   508  000009                     ??_EraseFlash:
   509  000009                     ??_WriteBytesFlash:
   510                           
   511                           ; 0 bytes @ 0x8
   512  000009                     	ds	1
   513  00000A                     EraseFlash@flag:
   514                           	opt stack 0
   515  00000A                     WriteBytesFlash@saveptr:
   516                           	opt stack 0
   517                           
   518                           ; 3 bytes @ 0x9
   519  00000A                     	ds	1
   520  00000B                     EraseFlash@flash_addr:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0xA
   524  00000B                     	ds	2
   525  00000D                     WriteBytesFlash@write_byte:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0xC
   529  00000D                     	ds	1
   530  00000E                     WriteBytesFlash@flag:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0xD
   534  00000E                     	ds	1
   535  00000F                     WriteBytesFlash@startptr:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0xE
   539  00000F                     	ds	3
   540  000012                     WriteBytesFlash@saddress:
   541                           	opt stack 0
   542                           
   543                           ; 4 bytes @ 0x11
   544  000012                     	ds	4
   545  000016                     ??_OdbierzRamke:
   546                           
   547                           ; 0 bytes @ 0x15
   548  000016                     	ds	1
   549  000017                     OdbierzRamke@pointerU8:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x16
   553  000017                     	ds	2
   554  000019                     OdbierzRamke@k:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x18
   558  000019                     	ds	1
   559  00001A                     OdbierzRamke@tempCON:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x19
   563  00001A                     	ds	1
   564  00001B                     OdbierzRamke@i:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x1A
   568  00001B                     	ds	1
   569  00001C                     ??_main:
   570                           
   571                           ; 0 bytes @ 0x1B
   572  00001C                     	ds	1
   573  00001D                     main@Delay:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x1C
   577  00001D                     	ds	1
   578                           tblptru	equ	0xFF8
   579                           intcon	equ	0xFF2
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           status	equ	0xFD8
   583                           
   584 ;; *************** function _ResetDevice *****************
   585 ;; Defined at:
   586 ;;		line 200 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;		None               void
   593 ;; Registers used:
   594 ;;		None
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text1
   614  0003E8                     __ptext1:
   615                           	opt stack 0
   616  0003E8                     _ResetDevice:
   617                           	opt stack 30
   618                           
   619                           ;incstack = 0
   620                           ;incstack = 0
   621  0003E8  EF00 F006          	goto	3072	;# 
   622  0003EC  0012               	return	
   623  0003EE                     __end_of_ResetDevice:
   624                           	opt stack 0
   625                           tblptru	equ	0xFF8
   626                           intcon	equ	0xFF2
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           status	equ	0xFD8
   630                           
   631 ;; *************** function _OdbierzRamke *****************
   632 ;; Defined at:
   633 ;;		line 113 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  pointerU8       2   22[COMRAM] PTR volatile unsigned ch
   638 ;;		 -> RXB0D0(1), 
   639 ;;  tempU16         2    0        unsigned int 
   640 ;;  i               1   26[COMRAM] unsigned char 
   641 ;;  tempCON         1   25[COMRAM] unsigned char 
   642 ;;  k               1   24[COMRAM] unsigned char 
   643 ;; Return value:  Size  Location     Type
   644 ;;		None               void
   645 ;; Registers used:
   646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   655 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   656 ;;Total ram usage:        6 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    1
   659 ;; This function calls:
   660 ;;		_EraseFlash
   661 ;;		_WriteBytesFlash
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text2
   668  000020                     __ptext2:
   669                           	opt stack 0
   670  000020                     _OdbierzRamke:
   671                           	opt stack 29
   672                           
   673                           ;main.c: 114: volatile unsigned char *pointerU8;
   674                           ;main.c: 115: unsigned char i, k,tempCON = 0;
   675                           
   676                           ;incstack = 0
   677                           ;incstack = 0
   678  000020  6E16               	movwf	??_OdbierzRamke& (0+255),c
   679  000022  0E00               	movlw	0
   680  000024  6E1A               	movwf	OdbierzRamke@tempCON,c
   681  000026  5016               	movf	??_OdbierzRamke& (0+255),w,c
   682                           
   683                           ;main.c: 116: static unsigned char iloscBajtow = 0;
   684                           ;main.c: 117: unsigned int tempU16;
   685                           ;main.c: 119: k = CANCON&0x0F;
   686  000028  506F               	movf	3951,w,c	;volatile
   687  00002A  0B0F               	andlw	15
   688  00002C  6E19               	movwf	OdbierzRamke@k,c
   689                           
   690                           ;main.c: 121: ECANCON = 0x90 | k;
   691  00002E  5019               	movf	OdbierzRamke@k,w,c
   692  000030  0990               	iorlw	144
   693  000032  6E72               	movwf	3954,c	;volatile
   694                           
   695                           ;main.c: 124: switch(k)
   696  000034  D018               	goto	l1030
   697  000036                     l92:
   698                           
   699                           ;main.c: 127: tempCON = RXB0CON;
   700  000036  CF60 F01A          	movff	3936,OdbierzRamke@tempCON	;volatile
   701                           
   702                           ;main.c: 128: break;
   703  00003A  D02E               	goto	l93
   704  00003C                     l94:
   705                           
   706                           ;main.c: 130: tempCON = RXB1CON;
   707  00003C  CF30 F01A          	movff	3888,OdbierzRamke@tempCON	;volatile
   708                           
   709                           ;main.c: 131: break;
   710  000040  D02B               	goto	l93
   711  000042                     l95:
   712                           
   713                           ;main.c: 133: tempCON = B0CON;
   714  000042  CE80 F01A          	movff	3712,OdbierzRamke@tempCON	;volatile
   715                           
   716                           ;main.c: 134: break;
   717  000046  D028               	goto	l93
   718  000048                     l96:
   719                           
   720                           ;main.c: 136: tempCON = B1CON;
   721  000048  CE90 F01A          	movff	3728,OdbierzRamke@tempCON	;volatile
   722                           
   723                           ;main.c: 137: break;
   724  00004C  D025               	goto	l93
   725  00004E                     l97:
   726                           
   727                           ;main.c: 139: tempCON = B2CON;
   728  00004E  CEA0 F01A          	movff	3744,OdbierzRamke@tempCON	;volatile
   729                           
   730                           ;main.c: 140: break;
   731  000052  D022               	goto	l93
   732  000054                     l98:
   733                           
   734                           ;main.c: 142: tempCON = B3CON;
   735  000054  CEB0 F01A          	movff	3760,OdbierzRamke@tempCON	;volatile
   736                           
   737                           ;main.c: 143: break;
   738  000058  D01F               	goto	l93
   739  00005A                     l99:
   740                           
   741                           ;main.c: 145: tempCON = B4CON;
   742  00005A  CEC0 F01A          	movff	3776,OdbierzRamke@tempCON	;volatile
   743                           
   744                           ;main.c: 146: break;
   745  00005E  D01C               	goto	l93
   746  000060                     l100:
   747                           
   748                           ;main.c: 148: tempCON = B5CON;
   749  000060  CED0 F01A          	movff	3792,OdbierzRamke@tempCON	;volatile
   750                           
   751                           ;main.c: 149: break;
   752  000064  D019               	goto	l93
   753  000066                     l1030:
   754  000066  5019               	movf	OdbierzRamke@k,w,c
   755                           
   756                           ; Switch size 1, requested type "space"
   757                           ; Number of cases is 8, Range of values is 0 to 7
   758                           ; switch strategies available:
   759                           ; Name         Instructions Cycles
   760                           ; simple_byte           25    13 (average)
   761                           ;	Chosen strategy is simple_byte
   762  000068  0A00               	xorlw	0	; case 0
   763  00006A  B4D8               	btfsc	status,2,c
   764  00006C  D7E4               	goto	l92
   765  00006E  0A01               	xorlw	1	; case 1
   766  000070  B4D8               	btfsc	status,2,c
   767  000072  D7E4               	goto	l94
   768  000074  0A03               	xorlw	3	; case 2
   769  000076  B4D8               	btfsc	status,2,c
   770  000078  D7E4               	goto	l95
   771  00007A  0A01               	xorlw	1	; case 3
   772  00007C  B4D8               	btfsc	status,2,c
   773  00007E  D7E4               	goto	l96
   774  000080  0A07               	xorlw	7	; case 4
   775  000082  B4D8               	btfsc	status,2,c
   776  000084  D7E4               	goto	l97
   777  000086  0A01               	xorlw	1	; case 5
   778  000088  B4D8               	btfsc	status,2,c
   779  00008A  D7E4               	goto	l98
   780  00008C  0A03               	xorlw	3	; case 6
   781  00008E  B4D8               	btfsc	status,2,c
   782  000090  D7E4               	goto	l99
   783  000092  0A01               	xorlw	1	; case 7
   784  000094  B4D8               	btfsc	status,2,c
   785  000096  D7E4               	goto	l100
   786  000098                     l93:
   787                           
   788                           ;main.c: 152: if((tempCON & 0x80) > 0)
   789  000098  AE1A               	btfss	OdbierzRamke@tempCON,7,c
   790  00009A  0012               	return	
   791                           
   792                           ;main.c: 153: {
   793                           ;main.c: 154: pointerU8 = &RXB0D0;
   794  00009C  0E0F               	movlw	15	;volatile
   795  00009E  6E18               	movwf	OdbierzRamke@pointerU8+1,c
   796  0000A0  0E66               	movlw	102	;volatile
   797  0000A2  6E17               	movwf	OdbierzRamke@pointerU8,c
   798                           
   799                           ;main.c: 155: for(i=0;i<8;i++)
   800  0000A4  6E16               	movwf	??_OdbierzRamke& (0+255),c
   801  0000A6  0E00               	movlw	0
   802  0000A8  6E1B               	movwf	OdbierzRamke@i,c
   803  0000AA  5016               	movf	??_OdbierzRamke& (0+255),w,c
   804  0000AC  D016               	goto	L1
   805  0000AE                     l1038:
   806                           
   807                           ;main.c: 156: {
   808                           ;main.c: 157: buforCAN[iloscBajtow++]=(*(pointerU8+i));
   809  0000AE  501B               	movf	OdbierzRamke@i,w,c
   810  0000B0  0D01               	mullw	1
   811  0000B2  50F3               	movf	prodl,w,c
   812  0000B4  2417               	addwf	OdbierzRamke@pointerU8,w,c
   813  0000B6  6ED9               	movwf	fsr2l,c
   814  0000B8  50F4               	movf	prodh,w,c
   815  0000BA  2018               	addwfc	OdbierzRamke@pointerU8+1,w,c
   816  0000BC  6EDA               	movwf	fsr2h,c
   817  0000BE  5022               	movf	OdbierzRamke@iloscBajtow,w,c
   818  0000C0  0D01               	mullw	1
   819  0000C2  0100               	movlb	0	; () banked
   820  0000C4  0E60               	movlw	low _buforCAN
   821  0000C6  24F3               	addwf	prodl,w,c
   822  0000C8  6EE1               	movwf	fsr1l,c
   823  0000CA  0100               	movlb	0	; () banked
   824  0000CC  0E00               	movlw	high _buforCAN
   825  0000CE  20F4               	addwfc	prodh,w,c
   826  0000D0  6EE2               	movwf	fsr1h,c
   827  0000D2  CFDF FFE7          	movff	indf2,indf1
   828                           
   829                           ; BSR set to: 0
   830  0000D6  2A22               	incf	OdbierzRamke@iloscBajtow,f,c
   831                           
   832                           ; BSR set to: 0
   833  0000D8  2A1B               	incf	OdbierzRamke@i,f,c
   834  0000DA                     L1:
   835                           
   836                           ; BSR set to: 0
   837  0000DA  0E07               	movlw	7
   838  0000DC  641B               	cpfsgt	OdbierzRamke@i,c
   839  0000DE  D7E7               	goto	l1038
   840                           
   841                           ;main.c: 158: }
   842                           ;main.c: 159: if((iloscBajtow >= 64))
   843                           
   844                           ; BSR set to: 0
   845  0000E0  0E3F               	movlw	63
   846  0000E2  6422               	cpfsgt	OdbierzRamke@iloscBajtow,c
   847  0000E4  D043               	goto	l1058
   848                           
   849                           ;main.c: 160: {
   850                           ;main.c: 161: LATAbits.LATA5 = !LATAbits.LATA5;
   851  0000E6  BA89               	btfsc	3977,5,c	;volatile
   852  0000E8  D002               	goto	u350
   853  0000EA  0E01               	movlw	1
   854  0000EC  D001               	goto	u356
   855  0000EE                     u350:
   856  0000EE  0E00               	movlw	0
   857  0000F0                     u356:
   858  0000F0  6E16               	movwf	??_OdbierzRamke& (0+255),c
   859  0000F2  3A16               	swapf	??_OdbierzRamke,f,c
   860  0000F4  4616               	rlncf	??_OdbierzRamke,f,c
   861  0000F6  5089               	movf	3977,w,c	;volatile
   862  0000F8  1816               	xorwf	??_OdbierzRamke,w,c
   863  0000FA  0BDF               	andlw	-33
   864  0000FC  1816               	xorwf	??_OdbierzRamke,w,c
   865  0000FE  6E89               	movwf	3977,c	;volatile
   866                           
   867                           ;main.c: 162: EraseFlash(SourceAddr.Val32, SourceAddr.Val32+(unsigned long)64);
   868  000100  C01E  F001         	movff	_SourceAddr,?_EraseFlash
   869  000104  C01F  F002         	movff	_SourceAddr+1,?_EraseFlash+1
   870  000108  C020  F003         	movff	_SourceAddr+2,?_EraseFlash+2
   871  00010C  C021  F004         	movff	_SourceAddr+3,?_EraseFlash+3
   872  000110  0E40               	movlw	64
   873  000112  241E               	addwf	_SourceAddr,w,c
   874  000114  6E05               	movwf	?_EraseFlash+4,c
   875  000116  0E00               	movlw	0
   876  000118  201F               	addwfc	_SourceAddr+1,w,c
   877  00011A  6E06               	movwf	?_EraseFlash+5,c
   878  00011C  0E00               	movlw	0
   879  00011E  2020               	addwfc	_SourceAddr+2,w,c
   880  000120  6E07               	movwf	?_EraseFlash+6,c
   881  000122  0E00               	movlw	0
   882  000124  2021               	addwfc	_SourceAddr+3,w,c
   883  000126  6E08               	movwf	?_EraseFlash+7,c
   884  000128  ECB7  F001         	call	_EraseFlash	;wreg free
   885                           
   886                           ;main.c: 163: WriteBytesFlash(SourceAddr.Val32,64,buforCAN);
   887  00012C  C01E  F001         	movff	_SourceAddr,?_WriteBytesFlash
   888  000130  C01F  F002         	movff	_SourceAddr+1,?_WriteBytesFlash+1
   889  000134  C020  F003         	movff	_SourceAddr+2,?_WriteBytesFlash+2
   890  000138  C021  F004         	movff	_SourceAddr+3,?_WriteBytesFlash+3
   891  00013C  0E00               	movlw	0
   892  00013E  6E06               	movwf	?_WriteBytesFlash+5,c
   893  000140  0E40               	movlw	64
   894  000142  6E05               	movwf	?_WriteBytesFlash+4,c
   895  000144  0100               	movlb	0	; () banked
   896  000146  0E00               	movlw	high _buforCAN
   897  000148  6E08               	movwf	?_WriteBytesFlash+7,c
   898  00014A  0100               	movlb	0	; () banked
   899  00014C  0E60               	movlw	low _buforCAN
   900  00014E  6E07               	movwf	?_WriteBytesFlash+6,c
   901  000150  EC03  F002         	call	_WriteBytesFlash	;wreg free
   902                           
   903                           ;main.c: 164: SourceAddr.Val32 += 64;
   904  000154  0E40               	movlw	64
   905  000156  261E               	addwf	_SourceAddr,f,c
   906  000158  0E00               	movlw	0
   907  00015A  221F               	addwfc	_SourceAddr+1,f,c
   908  00015C  0E00               	movlw	0
   909  00015E  2220               	addwfc	_SourceAddr+2,f,c
   910  000160  0E00               	movlw	0
   911  000162  2221               	addwfc	_SourceAddr+3,f,c
   912                           
   913                           ;main.c: 165: iloscBajtow = 0;
   914  000164  6E16               	movwf	??_OdbierzRamke& (0+255),c
   915  000166  0E00               	movlw	0
   916  000168  6E22               	movwf	OdbierzRamke@iloscBajtow,c
   917  00016A  5016               	movf	??_OdbierzRamke& (0+255),w,c
   918  00016C                     l1058:
   919                           
   920                           ;main.c: 166: }
   921                           ;main.c: 167: TMR0 = 62500;
   922  00016C  0EF4               	movlw	244
   923  00016E  6ED7               	movwf	4055,c	;volatile
   924  000170  0E24               	movlw	36
   925  000172  6ED6               	movwf	4054,c	;volatile
   926                           
   927                           ;main.c: 168: counter = 0;
   928  000174  6E16               	movwf	??_OdbierzRamke& (0+255),c
   929  000176  0E00               	movlw	0
   930  000178  6E23               	movwf	_counter,c
   931  00017A  5016               	movf	??_OdbierzRamke& (0+255),w,c
   932  00017C  0004               	clrwdt		;# 
   933                           
   934                           ;main.c: 170: switch(k)
   935  00017E  D026               	goto	l1080
   936  000180                     l1062:
   937                           
   938                           ;main.c: 173: RXB0CON = 0;
   939  000180  0E00               	movlw	0
   940  000182  6E60               	movwf	3936,c	;volatile
   941                           
   942                           ;main.c: 174: break;
   943  000184  0012               	return	
   944  000186                     l1064:
   945                           
   946                           ;main.c: 176: RXB1CON = 0;
   947  000186  0E00               	movlw	0
   948  000188  010F               	movlb	15	; () banked
   949  00018A  010F               	movlb	15	; () banked
   950  00018C  6F30               	movwf	48,b	;volatile
   951                           
   952                           ;main.c: 177: break;
   953  00018E  0012               	return	
   954  000190                     l1066:
   955                           
   956                           ;main.c: 179: B0CON = 0;
   957  000190  0E00               	movlw	0
   958  000192  010E               	movlb	14	; () banked
   959  000194  010E               	movlb	14	; () banked
   960  000196  6F80               	movwf	128,b	;volatile
   961                           
   962                           ;main.c: 180: break;
   963  000198  0012               	return	
   964  00019A                     l1068:
   965                           
   966                           ;main.c: 182: B1CON = 0;
   967  00019A  0E00               	movlw	0
   968  00019C  010E               	movlb	14	; () banked
   969  00019E  010E               	movlb	14	; () banked
   970  0001A0  6F90               	movwf	144,b	;volatile
   971                           
   972                           ;main.c: 183: break;
   973  0001A2  0012               	return	
   974  0001A4                     l1070:
   975                           
   976                           ;main.c: 185: B2CON = 0;
   977  0001A4  0E00               	movlw	0
   978  0001A6  010E               	movlb	14	; () banked
   979  0001A8  010E               	movlb	14	; () banked
   980  0001AA  6FA0               	movwf	160,b	;volatile
   981                           
   982                           ;main.c: 186: break;
   983  0001AC  0012               	return	
   984  0001AE                     l1072:
   985                           
   986                           ;main.c: 188: B3CON = 0;
   987  0001AE  0E00               	movlw	0
   988  0001B0  010E               	movlb	14	; () banked
   989  0001B2  010E               	movlb	14	; () banked
   990  0001B4  6FB0               	movwf	176,b	;volatile
   991                           
   992                           ;main.c: 189: break;
   993  0001B6  0012               	return	
   994  0001B8                     l1074:
   995                           
   996                           ;main.c: 191: B4CON = 0;
   997  0001B8  0E00               	movlw	0
   998  0001BA  010E               	movlb	14	; () banked
   999  0001BC  010E               	movlb	14	; () banked
  1000  0001BE  6FC0               	movwf	192,b	;volatile
  1001                           
  1002                           ;main.c: 192: break;
  1003  0001C0  0012               	return	
  1004  0001C2                     l1076:
  1005                           
  1006                           ;main.c: 194: B5CON = 0;
  1007  0001C2  0E00               	movlw	0
  1008  0001C4  010E               	movlb	14	; () banked
  1009  0001C6  010E               	movlb	14	; () banked
  1010  0001C8  6FD0               	movwf	208,b	;volatile
  1011                           
  1012                           ;main.c: 195: break;
  1013  0001CA  0012               	return	
  1014  0001CC                     l1080:
  1015  0001CC  5019               	movf	OdbierzRamke@k,w,c
  1016                           
  1017                           ; Switch size 1, requested type "space"
  1018                           ; Number of cases is 8, Range of values is 0 to 7
  1019                           ; switch strategies available:
  1020                           ; Name         Instructions Cycles
  1021                           ; simple_byte           25    13 (average)
  1022                           ;	Chosen strategy is simple_byte
  1023  0001CE  0A00               	xorlw	0	; case 0
  1024  0001D0  B4D8               	btfsc	status,2,c
  1025  0001D2  D7D6               	goto	l1062
  1026  0001D4  0A01               	xorlw	1	; case 1
  1027  0001D6  B4D8               	btfsc	status,2,c
  1028  0001D8  D7D6               	goto	l1064
  1029  0001DA  0A03               	xorlw	3	; case 2
  1030  0001DC  B4D8               	btfsc	status,2,c
  1031  0001DE  D7D8               	goto	l1066
  1032  0001E0  0A01               	xorlw	1	; case 3
  1033  0001E2  B4D8               	btfsc	status,2,c
  1034  0001E4  D7DA               	goto	l1068
  1035  0001E6  0A07               	xorlw	7	; case 4
  1036  0001E8  B4D8               	btfsc	status,2,c
  1037  0001EA  D7DC               	goto	l1070
  1038  0001EC  0A01               	xorlw	1	; case 5
  1039  0001EE  B4D8               	btfsc	status,2,c
  1040  0001F0  D7DE               	goto	l1072
  1041  0001F2  0A03               	xorlw	3	; case 6
  1042  0001F4  B4D8               	btfsc	status,2,c
  1043  0001F6  D7E0               	goto	l1074
  1044  0001F8  0A01               	xorlw	1	; case 7
  1045  0001FA  A4D8               	btfss	status,2,c
  1046  0001FC  0012               	return	
  1047  0001FE  D7E1               	goto	l1076
  1048  000200                     __end_of_OdbierzRamke:
  1049                           	opt stack 0
  1050                           tblptru	equ	0xFF8
  1051                           prodh	equ	0xFF4
  1052                           prodl	equ	0xFF3
  1053                           intcon	equ	0xFF2
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           indf1	equ	0xFE7
  1057                           fsr1h	equ	0xFE2
  1058                           fsr1l	equ	0xFE1
  1059                           indf2	equ	0xFDF
  1060                           fsr2h	equ	0xFDA
  1061                           fsr2l	equ	0xFD9
  1062                           status	equ	0xFD8
  1063                           
  1064 ;; *************** function _WriteBytesFlash *****************
  1065 ;; Defined at:
  1066 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Flash\WriteBytesFlash.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  startaddr       4    0[COMRAM] unsigned long 
  1069 ;;  num_bytes       2    4[COMRAM] unsigned int 
  1070 ;;  flash_array     2    6[COMRAM] PTR unsigned char 
  1071 ;;		 -> buforCAN(65), 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  saddress        4   17[COMRAM] unsigned long 
  1074 ;;  startptr        3   14[COMRAM] PTR unsigned char 
  1075 ;;		 -> ROM(2047), 
  1076 ;;  saveptr         3    9[COMRAM] PTR unsigned char 
  1077 ;;		 -> ROM(2047), 
  1078 ;;  flag            1   13[COMRAM] unsigned char 
  1079 ;;  write_byte      1   12[COMRAM] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;		None               void
  1082 ;; Registers used:
  1083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1089 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1090 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;Total ram usage:       21 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_OdbierzRamke
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text3
  1103  000406                     __ptext3:
  1104                           	opt stack 0
  1105  000406                     _WriteBytesFlash:
  1106                           	opt stack 29
  1107                           
  1108                           ;incstack = 0
  1109                           ;incstack = 0
  1110  000406  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1111  000408  0E00               	movlw	0
  1112  00040A  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1113  00040C  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1114  00040E  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1115  000410  0E00               	movlw	0
  1116  000412  6E0E               	movwf	WriteBytesFlash@flag,c
  1117  000414  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1118  000416  C001  F012         	movff	WriteBytesFlash@startaddr,WriteBytesFlash@saddress
  1119  00041A  C002  F013         	movff	WriteBytesFlash@startaddr+1,WriteBytesFlash@saddress+1
  1120  00041E  C003  F014         	movff	WriteBytesFlash@startaddr+2,WriteBytesFlash@saddress+2
  1121  000422  C004  F015         	movff	WriteBytesFlash@startaddr+3,WriteBytesFlash@saddress+3
  1122  000426  0E06               	movlw	6
  1123  000428  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1124  00042A                     u245:
  1125  00042A  90D8               	bcf	status,0,c
  1126  00042C  3204               	rrcf	WriteBytesFlash@startaddr+3,f,c
  1127  00042E  3203               	rrcf	WriteBytesFlash@startaddr+2,f,c
  1128  000430  3202               	rrcf	WriteBytesFlash@startaddr+1,f,c
  1129  000432  3201               	rrcf	WriteBytesFlash@startaddr,f,c
  1130  000434  2E09               	decfsz	??_WriteBytesFlash& (0+255),f,c
  1131  000436  D7F9               	goto	u245
  1132  000438  0E06               	movlw	6
  1133  00043A                     u255:
  1134  00043A  90D8               	bcf	status,0,c
  1135  00043C  3601               	rlcf	WriteBytesFlash@startaddr,f,c
  1136  00043E  3602               	rlcf	WriteBytesFlash@startaddr+1,f,c
  1137  000440  3603               	rlcf	WriteBytesFlash@startaddr+2,f,c
  1138  000442  3604               	rlcf	WriteBytesFlash@startaddr+3,f,c
  1139  000444  2EE8               	decfsz	wreg,f,c
  1140  000446  D7F9               	goto	u255
  1141  000448  0E40               	movlw	64
  1142  00044A  2601               	addwf	WriteBytesFlash@startaddr,f,c
  1143  00044C  0E00               	movlw	0
  1144  00044E  2202               	addwfc	WriteBytesFlash@startaddr+1,f,c
  1145  000450  0E00               	movlw	0
  1146  000452  2203               	addwfc	WriteBytesFlash@startaddr+2,f,c
  1147  000454  0E00               	movlw	0
  1148  000456  2204               	addwfc	WriteBytesFlash@startaddr+3,f,c
  1149  000458  5012               	movf	WriteBytesFlash@saddress,w,c
  1150  00045A  0800               	sublw	0
  1151  00045C  2401               	addwf	WriteBytesFlash@startaddr,w,c
  1152  00045E  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1153  000460  D056               	goto	l1020
  1154  000462                     l162:
  1155  000462  C012  F00F         	movff	WriteBytesFlash@saddress,WriteBytesFlash@startptr
  1156  000466  C013  F010         	movff	WriteBytesFlash@saddress+1,WriteBytesFlash@startptr+1
  1157  00046A  C014  F011         	movff	WriteBytesFlash@saddress+2,WriteBytesFlash@startptr+2
  1158  00046E  D01C               	goto	l998
  1159  000470                     l988:
  1160  000470  C007  FFD9         	movff	WriteBytesFlash@flash_array,fsr2l
  1161  000474  C008  FFDA         	movff	WriteBytesFlash@flash_array+1,fsr2h
  1162  000478  50DF               	movf	indf2,w,c
  1163  00047A  C00F  FFF6         	movff	WriteBytesFlash@startptr,tblptrl
  1164  00047E  C010  FFF7         	movff	WriteBytesFlash@startptr+1,tblptrh
  1165  000482  C011  FFF8         	movff	WriteBytesFlash@startptr+2,tblptru
  1166  000486  6EF5               	movwf	tablat,c
  1167  000488  000C               	tblwt		*
  1168  00048A  4A07               	infsnz	WriteBytesFlash@flash_array,f,c
  1169  00048C  2A08               	incf	WriteBytesFlash@flash_array+1,f,c
  1170  00048E  0E01               	movlw	1
  1171  000490  260F               	addwf	WriteBytesFlash@startptr,f,c
  1172  000492  0E00               	movlw	0
  1173  000494  2210               	addwfc	WriteBytesFlash@startptr+1,f,c
  1174  000496  0E00               	movlw	0
  1175  000498  2211               	addwfc	WriteBytesFlash@startptr+2,f,c
  1176  00049A  0605               	decf	WriteBytesFlash@num_bytes,f,c
  1177  00049C  A0D8               	btfss	status,0,c
  1178  00049E  0606               	decf	WriteBytesFlash@num_bytes+1,f,c
  1179  0004A0  5006               	movf	(WriteBytesFlash@num_bytes+1)& (0+255),w,c
  1180  0004A2  1005               	iorwf	WriteBytesFlash@num_bytes& (0+255),w,c
  1181  0004A4  B4D8               	btfsc	status,2,c
  1182  0004A6  D004               	goto	l166
  1183  0004A8                     l998:
  1184  0004A8  060D               	decf	WriteBytesFlash@write_byte,f,c
  1185  0004AA  280D               	incf	WriteBytesFlash@write_byte& (0+255),w,c
  1186  0004AC  A4D8               	btfss	status,2,c
  1187  0004AE  D7E0               	goto	l988
  1188  0004B0                     l166:
  1189  0004B0  C00F  F00A         	movff	WriteBytesFlash@startptr,WriteBytesFlash@saveptr
  1190  0004B4  C010  F00B         	movff	WriteBytesFlash@startptr+1,WriteBytesFlash@saveptr+1
  1191  0004B8  C011  F00C         	movff	WriteBytesFlash@startptr+2,WriteBytesFlash@saveptr+2
  1192  0004BC  C012  F00F         	movff	WriteBytesFlash@saddress,WriteBytesFlash@startptr
  1193  0004C0  C013  F010         	movff	WriteBytesFlash@saddress+1,WriteBytesFlash@startptr+1
  1194  0004C4  C014  F011         	movff	WriteBytesFlash@saddress+2,WriteBytesFlash@startptr+2
  1195  0004C8  8E7F               	bsf	3967,7,c	;volatile
  1196  0004CA  9C7F               	bcf	3967,6,c	;volatile
  1197  0004CC  847F               	bsf	3967,2,c	;volatile
  1198  0004CE  AEF2               	btfss	intcon,7,c	;volatile
  1199  0004D0  D005               	goto	l1004
  1200  0004D2  9EF2               	bcf	intcon,7,c	;volatile
  1201  0004D4  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1202  0004D6  0E01               	movlw	1
  1203  0004D8  6E0E               	movwf	WriteBytesFlash@flag,c
  1204  0004DA  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1205  0004DC                     l1004:
  1206  0004DC  0E55               	movlw	85
  1207  0004DE  6E7E               	movwf	3966,c	;volatile
  1208  0004E0  0EAA               	movlw	170
  1209  0004E2  6E7E               	movwf	3966,c	;volatile
  1210  0004E4  827F               	bsf	3967,1,c	;volatile
  1211  0004E6  947F               	bcf	3967,2,c	;volatile
  1212  0004E8  500E               	movf	WriteBytesFlash@flag,w,c
  1213  0004EA  B4D8               	btfsc	status,2,c
  1214  0004EC  D005               	goto	l168
  1215  0004EE  8EF2               	bsf	intcon,7,c	;volatile
  1216  0004F0  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1217  0004F2  0E00               	movlw	0
  1218  0004F4  6E0E               	movwf	WriteBytesFlash@flag,c
  1219  0004F6  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1220  0004F8                     l168:
  1221  0004F8  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1222  0004FA  0E40               	movlw	64
  1223  0004FC  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1224  0004FE  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1225  000500  500A               	movf	WriteBytesFlash@saveptr,w,c
  1226  000502  6E12               	movwf	WriteBytesFlash@saddress,c
  1227  000504  500B               	movf	WriteBytesFlash@saveptr+1,w,c
  1228  000506  6E13               	movwf	WriteBytesFlash@saddress+1,c
  1229  000508  500C               	movf	WriteBytesFlash@saveptr+2,w,c
  1230  00050A  6E14               	movwf	WriteBytesFlash@saddress+2,c
  1231  00050C  6A15               	clrf	WriteBytesFlash@saddress+3,c
  1232  00050E                     l1020:
  1233  00050E  5006               	movf	WriteBytesFlash@num_bytes+1,w,c
  1234  000510  1005               	iorwf	WriteBytesFlash@num_bytes,w,c
  1235  000512  B4D8               	btfsc	status,2,c
  1236  000514  0012               	return	
  1237  000516  D7A5               	goto	l162
  1238  000518                     __end_of_WriteBytesFlash:
  1239                           	opt stack 0
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           prodh	equ	0xFF4
  1245                           prodl	equ	0xFF3
  1246                           intcon	equ	0xFF2
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           indf1	equ	0xFE7
  1250                           fsr1h	equ	0xFE2
  1251                           fsr1l	equ	0xFE1
  1252                           indf2	equ	0xFDF
  1253                           fsr2h	equ	0xFDA
  1254                           fsr2l	equ	0xFD9
  1255                           status	equ	0xFD8
  1256                           
  1257 ;; *************** function _EraseFlash *****************
  1258 ;; Defined at:
  1259 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Flash\EraseFlash.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  startaddr       4    0[COMRAM] unsigned long 
  1262 ;;  endaddr         4    4[COMRAM] unsigned long 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  flash_addr      4   10[COMRAM] struct .
  1265 ;;  flag            1    9[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;		None               void
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1276 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1278 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1279 ;;Total ram usage:       14 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_OdbierzRamke
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text4
  1289  00036E                     __ptext4:
  1290                           	opt stack 0
  1291  00036E                     _EraseFlash:
  1292                           	opt stack 29
  1293                           
  1294                           ;incstack = 0
  1295                           ;incstack = 0
  1296  00036E  6E09               	movwf	??_EraseFlash& (0+255),c
  1297  000370  0E00               	movlw	0
  1298  000372  6E0A               	movwf	EraseFlash@flag,c
  1299  000374  5009               	movf	??_EraseFlash& (0+255),w,c
  1300  000376  C001  F00B         	movff	EraseFlash@startaddr,EraseFlash@flash_addr
  1301  00037A  C002  F00C         	movff	EraseFlash@startaddr+1,EraseFlash@flash_addr+1
  1302  00037E  C003  F00D         	movff	EraseFlash@startaddr+2,EraseFlash@flash_addr+2
  1303  000382  C004  F00E         	movff	EraseFlash@startaddr+3,EraseFlash@flash_addr+3
  1304  000386  D025               	goto	l147
  1305  000388                     l148:
  1306  000388  C00D  FFF8         	movff	EraseFlash@flash_addr+2,tblptru	;volatile
  1307  00038C  C00C  FFF7         	movff	EraseFlash@flash_addr+1,tblptrh	;volatile
  1308  000390  C00B  FFF6         	movff	EraseFlash@flash_addr,tblptrl	;volatile
  1309  000394  8E7F               	bsf	3967,7,c	;volatile
  1310  000396  9C7F               	bcf	3967,6,c	;volatile
  1311  000398  847F               	bsf	3967,2,c	;volatile
  1312  00039A  887F               	bsf	3967,4,c	;volatile
  1313  00039C  AEF2               	btfss	intcon,7,c	;volatile
  1314  00039E  D005               	goto	l964
  1315  0003A0  9EF2               	bcf	intcon,7,c	;volatile
  1316  0003A2  6E09               	movwf	??_EraseFlash& (0+255),c
  1317  0003A4  0E01               	movlw	1
  1318  0003A6  6E0A               	movwf	EraseFlash@flag,c
  1319  0003A8  5009               	movf	??_EraseFlash& (0+255),w,c
  1320  0003AA                     l964:
  1321  0003AA  0E55               	movlw	85
  1322  0003AC  6E7E               	movwf	3966,c	;volatile
  1323  0003AE  0EAA               	movlw	170
  1324  0003B0  6E7E               	movwf	3966,c	;volatile
  1325  0003B2  827F               	bsf	3967,1,c	;volatile
  1326  0003B4  500A               	movf	EraseFlash@flag,w,c
  1327  0003B6  A4D8               	btfss	status,2,c
  1328  0003B8  8EF2               	bsf	intcon,7,c	;volatile
  1329  0003BA  0E40               	movlw	64
  1330  0003BC  240B               	addwf	EraseFlash@flash_addr,w,c
  1331  0003BE  6E0B               	movwf	EraseFlash@flash_addr,c
  1332  0003C0  0E00               	movlw	0
  1333  0003C2  200C               	addwfc	EraseFlash@flash_addr+1,w,c
  1334  0003C4  6E0C               	movwf	EraseFlash@flash_addr+1,c
  1335  0003C6  0E00               	movlw	0
  1336  0003C8  200D               	addwfc	EraseFlash@flash_addr+2,w,c
  1337  0003CA  6E0D               	movwf	EraseFlash@flash_addr+2,c
  1338  0003CC  0E00               	movlw	0
  1339  0003CE  200E               	addwfc	EraseFlash@flash_addr+3,w,c
  1340  0003D0  6E0E               	movwf	EraseFlash@flash_addr+3,c
  1341  0003D2                     l147:
  1342  0003D2  5005               	movf	EraseFlash@endaddr,w,c
  1343  0003D4  5C0B               	subwf	EraseFlash@flash_addr,w,c
  1344  0003D6  5006               	movf	EraseFlash@endaddr+1,w,c
  1345  0003D8  580C               	subwfb	EraseFlash@flash_addr+1,w,c
  1346  0003DA  5007               	movf	EraseFlash@endaddr+2,w,c
  1347  0003DC  580D               	subwfb	EraseFlash@flash_addr+2,w,c
  1348  0003DE  5008               	movf	EraseFlash@endaddr+3,w,c
  1349  0003E0  580E               	subwfb	EraseFlash@flash_addr+3,w,c
  1350  0003E2  B0D8               	btfsc	status,0,c
  1351  0003E4  0012               	return	
  1352  0003E6  D7D0               	goto	l148
  1353  0003E8                     __end_of_EraseFlash:
  1354                           	opt stack 0
  1355  0000                     tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           intcon	equ	0xFF2
  1362                           postinc0	equ	0xFEE
  1363                           wreg	equ	0xFE8
  1364                           indf1	equ	0xFE7
  1365                           fsr1h	equ	0xFE2
  1366                           fsr1l	equ	0xFE1
  1367                           indf2	equ	0xFDF
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           prodh	equ	0xFF4
  1376                           prodl	equ	0xFF3
  1377                           intcon	equ	0xFF2
  1378                           postinc0	equ	0xFEE
  1379                           wreg	equ	0xFE8
  1380                           indf1	equ	0xFE7
  1381                           fsr1h	equ	0xFE2
  1382                           fsr1l	equ	0xFE1
  1383                           indf2	equ	0xFDF
  1384                           fsr2h	equ	0xFDA
  1385                           fsr2l	equ	0xFD9
  1386                           status	equ	0xFD8
  1387                           
  1388                           	psect	rparam
  1389  0000                     tblptru	equ	0xFF8
  1390                           tblptrh	equ	0xFF7
  1391                           tblptrl	equ	0xFF6
  1392                           tablat	equ	0xFF5
  1393                           prodh	equ	0xFF4
  1394                           prodl	equ	0xFF3
  1395                           intcon	equ	0xFF2
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           indf1	equ	0xFE7
  1399                           fsr1h	equ	0xFE2
  1400                           fsr1l	equ	0xFE1
  1401                           indf2	equ	0xFDF
  1402                           fsr2h	equ	0xFDA
  1403                           fsr2l	equ	0xFD9
  1404                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      35
    BANK0           160      0      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    WriteBytesFlash@saveptr	PTR unsigned char  size(3) Largest target is 2047
		 -> ROM(CODE[2047]), 

    WriteBytesFlash@flash_array	PTR unsigned char  size(2) Largest target is 65
		 -> buforCAN(BANK0[65]), 

    WriteBytesFlash@startptr	PTR unsigned char  size(3) Largest target is 2047
		 -> ROM(CODE[2047]), 

    OdbierzRamke@pointerU8	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXB0D0(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_OdbierzRamke
    _OdbierzRamke->_WriteBytesFlash

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     696
                                             27 COMRAM     2     2      0
                       _OdbierzRamke
                        _ResetDevice
 ---------------------------------------------------------------------------------
 (1) _ResetDevice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OdbierzRamke                                         8     8      0     673
                                             21 COMRAM     6     6      0
                         _EraseFlash
                    _WriteBytesFlash
 ---------------------------------------------------------------------------------
 (2) _WriteBytesFlash                                     21    13      8     302
                                              0 COMRAM    21    13      8
 ---------------------------------------------------------------------------------
 (2) _EraseFlash                                          14     6      8     182
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OdbierzRamke
     _EraseFlash
     _WriteBytesFlash
   _ResetDevice

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      41       5       40.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      23       1       36.8%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64       6        0.0%
DATA                 0      0      66       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Jun 04 12:44:20 2014

                        l92 0036                          l93 0098                          l94 003C  
                        l95 0042                          l96 0048                          l97 004E  
                        l98 0054                          l99 005A                 __CFG_BORV$1 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                         l100 0060                         l162 0462  
                       l147 03D2                         l148 0388                         l166 04B0  
                       l168 04F8                         l964 03AA                         l988 0470  
                       l998 04A8                __CFG_CPB$OFF 000000                         u245 042A  
                       u350 00EE                         u255 043A                __CFG_CPD$OFF 000000  
                       u356 00F0                         prod 000FF3                         wreg 000FE8  
                      l1004 04DC                        l1020 050E                        l1030 0066  
                      l1114 023E                        l1132 0332                        l1070 01A4  
                      l1062 0180                        l1038 00AE                        l1072 01AE  
                      l1064 0186                        l1080 01CC                        l1074 01B8  
                      l1066 0190                        l1058 016C                        l1138 0352  
                      l1076 01C2                        l1068 019A                        _RCON 000FD0  
                      _TMR0 000FD6                __CFG_WRTB$ON 000000                __CFG_WRTC$ON 000000  
             ?_OdbierzRamke 0001                        _main 0200                        fsr2h 000FDA  
                      indf1 000FE7                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9               __CFG_BOREN$ON 000000                        prodh 000FF4  
                      prodl 000FF3                        start 001C               __CFG_IESO$OFF 000000  
    WriteBytesFlash@saveptr 000A               __CFG_FOSC$HS1 000000               __CFG_MCLRE$ON 000000  
                     _B0CON 000E80                       _B1CON 000E90                       _B2CON 000EA0  
                     _B3CON 000EB0                       _B4CON 000EC0                       _B5CON 000ED0  
                     ?_main 0001                       _T0CON 000FD5                       _MSEL0 000E79  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
             __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
                _EraseFlash 036E               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
   WriteBytesFlash@saddress 0012                       tablat 000FF5              ??_OdbierzRamke 0016  
                     status 000FD8             __initialization 0518     WriteBytesFlash@startptr 000F  
              __end_of_main 036E                      ??_main 001C               __activetblptr 000002  
            __CFG_RETEN$OFF 000000   WriteBytesFlash@write_byte 000D               ??_ResetDevice 0001  
                    _CANCON 000F6F                      _EECON2 000F7E             __CFG_BBSIZ$BB1K 000000  
         EraseFlash@endaddr 0005                      _RXB0D0 000F66              __CFG_PWRTEN$ON 000000  
            __CFG_XINST$OFF 000000              __CFG_STVREN$ON 000000                      clear_0 051E  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
               ?_EraseFlash 0001                  _SourceAddr 001E                  __accesstop 0060  
   __end_of__initialization 0530    WriteBytesFlash@num_bytes 0005         __end_of_ResetDevice 03EE  
            __pcstackCOMRAM 0001    WriteBytesFlash@startaddr 0001        __end_of_OdbierzRamke 0200  
                __pbssBANK0 0060             __CFG_PLLCFG$OFF 000000         __size_of_EraseFlash 007A  
  __size_of_WriteBytesFlash 0112                     _ECANCON 000F72                     _CANSTAT 000F6E  
             OdbierzRamke@i 001B               OdbierzRamke@k 0019            __CFG_CANMX$PORTC 000000  
                   _TBLPTRH 000FF7                     _TBLPTRL 000FF6                     _TBLPTRU 000FF8  
                   _RXB0CON 000F60             __CFG_WDTPS$1024 000000                     _RXB1CON 000F30  
                   _RXFCON0 000E46                     _RXFCON1 000E47                 _ResetDevice 03E8  
                   __Hparam 0000                     __Lparam 0000                     __pcinit 0518  
                   __ramtop 0F00                     __ptext0 0200                     __ptext1 03E8  
                   __ptext2 0020                     __ptext3 0406                     __ptext4 036E  
                 _T0CONbits 000FD5                     _counter 0023           __CFG_MSSPMSK$MSK7 000000  
      end_of_initialization 0530        EraseFlash@flash_addr 000B               __Lmediumconst 0000  
     OdbierzRamke@pointerU8 0017       __size_of_OdbierzRamke 01E0                     postinc0 000FEE  
         ??_WriteBytesFlash 0009                   _TRISAbits 000F92                   _TRISCbits 000F94  
              ??_EraseFlash 0009                _OdbierzRamke 0020          __end_of_EraseFlash 03E8  
WriteBytesFlash@flash_array 0007         start_initialization 0518         OdbierzRamke@tempCON 001A  
               __pbssCOMRAM 001E                 _BRGCON1bits 000E43                 _BRGCON2bits 000E44  
               _BRGCON3bits 000E45                ?_ResetDevice 0001     OdbierzRamke@iloscBajtow 0022  
                  _LATAbits 000F89                    _RXF0EIDH 000EE2                    _RXF0EIDL 000EE3  
           _WriteBytesFlash 0406                    _RXF0SIDH 000EE0                    _RXF0SIDL 000EE1  
                  _RXM0EIDH 000EFA                    _RXM0EIDL 000EFB                    _RXM0SIDH 000EF8  
                  _RXM0SIDL 000EF9                   main@Delay 001D            __CFG_SOSCSEL$DIG 000000  
            EraseFlash@flag 000A                  _EECON1bits 000F7F                    __Hrparam 0000  
                  __Lrparam 0000         EraseFlash@startaddr 0001                _RXF0SIDLbits 000EE1  
                  _buforCAN 0060        __size_of_ResetDevice 0006               __size_of_main 016E  
   __end_of_WriteBytesFlash 0518         WriteBytesFlash@flag 000E         __CFG_INTOSCSEL$HIGH 000000  
        __CFG_WDTEN$SWDTDIS 000000                  _INTCONbits 000FF2         __CFG_BORPWR$ZPBORMV 000000  
          ?_WriteBytesFlash 0001  
