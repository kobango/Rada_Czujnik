

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Tue Aug 20 13:28:29 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataCOMRAM,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	intcode
    25  000008  EF04 F006          	goto	3080	;# 
    26                           
    27                           	psect	intcodelo
    28  000018  EF0C F006          	goto	3096	;# 
    29  0000                     
    30                           	psect	idataCOMRAM
    31  0003F6                     __pidataCOMRAM:
    32                           	opt stack 0
    33                           
    34                           ;initializer for LED_Update@pos1
    35  0003F6  0001               	dw	1
    36                           
    37                           ;initializer for LED_Update@pos2
    38  0003F8  0001               	dw	1
    39                           
    40                           ;initializer for _Fulfillment_Lvl
    41  0003FA  0014               	dw	20
    42                           
    43                           ;initializer for LED_Update@Green
    44  0003FC  01                 	db	1
    45  0000                     _TMR0	set	4054
    46  0000                     _B0CON	set	3616
    47  0000                     _B1CON	set	3632
    48  0000                     _B2CON	set	3648
    49  0000                     _B3CON	set	3664
    50  0000                     _B4CON	set	3680
    51  0000                     _B5CON	set	3696
    52  0000                     _BRGCON1bits	set	3952
    53  0000                     _BRGCON2bits	set	3953
    54  0000                     _BRGCON3bits	set	3954
    55  0000                     _CANCON	set	3951
    56  0000                     _CANSTAT	set	3950
    57  0000                     _ECANCON	set	3959
    58  0000                     _EECON1bits	set	4006
    59  0000                     _EECON2	set	4007
    60  0000                     _INTCONbits	set	4082
    61  0000                     _LATA	set	3977
    62  0000                     _LATB	set	3978
    63  0000                     _LATD	set	3980
    64  0000                     _LATE	set	3981
    65  0000                     _MSEL0	set	3568
    66  0000                     _RCON	set	4048
    67  0000                     _RXB0CON	set	3936
    68  0000                     _RXB1CON	set	3920
    69  0000                     _RXF0EIDH	set	3842
    70  0000                     _RXF0EIDL	set	3843
    71  0000                     _RXF0SIDH	set	3840
    72  0000                     _RXF0SIDL	set	3841
    73  0000                     _RXF0SIDLbits	set	3841
    74  0000                     _RXFCON0	set	3540
    75  0000                     _RXFCON1	set	3541
    76  0000                     _RXM0EIDH	set	3866
    77  0000                     _RXM0EIDL	set	3867
    78  0000                     _RXM0SIDH	set	3864
    79  0000                     _RXM0SIDL	set	3865
    80  0000                     _T0CON	set	4053
    81  0000                     _T0CONbits	set	4053
    82  0000                     _TBLPTRH	set	4087
    83  0000                     _TBLPTRL	set	4086
    84  0000                     _TBLPTRU	set	4088
    85  0000                     _TRISA	set	3986
    86  0000                     _TRISAbits	set	3986
    87  0000                     _TRISB	set	3987
    88  0000                     _TRISC	set	3988
    89  0000                     _TRISCbits	set	3988
    90  0000                     _TRISD	set	3989
    91  0000                     _TRISE	set	3990
    92  0000                     _RXB0D0	set	3942
    93                           
    94                           ; #config settings
    95  0000                     
    96                           	psect	cinit
    97  0003B4                     __pcinit:
    98                           	opt stack 0
    99  0003B4                     start_initialization:
   100                           	opt stack 0
   101  0003B4                     __initialization:
   102                           	opt stack 0
   103                           
   104                           ; Clear objects allocated to BANK0 (65 bytes)
   105  0003B4  EE00  F060         	lfsr	0,__pbssBANK0
   106  0003B8  0E41               	movlw	65
   107  0003BA                     clear_0:
   108  0003BA  6AEE               	clrf	postinc0,c
   109  0003BC  06E8               	decf	wreg,f,c
   110  0003BE  E1FD               	bnz	clear_0
   111                           
   112                           ; Clear objects allocated to COMRAM (9 bytes)
   113  0003C0  EE00  F01F         	lfsr	0,__pbssCOMRAM
   114  0003C4  0E09               	movlw	9
   115  0003C6                     clear_1:
   116  0003C6  6AEE               	clrf	postinc0,c
   117  0003C8  06E8               	decf	wreg,f,c
   118  0003CA  E1FD               	bnz	clear_1
   119                           
   120                           ; Initialize objects allocated to COMRAM (7 bytes)
   121                           ; load TBLPTR registers with __pidataCOMRAM
   122  0003CC  0EF6               	movlw	low __pidataCOMRAM
   123  0003CE  6EF6               	movwf	tblptrl,c
   124  0003D0  0E03               	movlw	high __pidataCOMRAM
   125  0003D2  6EF7               	movwf	tblptrh,c
   126  0003D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   127  0003D6  6EF8               	movwf	tblptru,c
   128  0003D8  EE00  F028         	lfsr	0,__pdataCOMRAM
   129  0003DC  EE10 F007          	lfsr	1,7
   130  0003E0                     copy_data0:
   131  0003E0  0009               	tblrd		*+
   132  0003E2  CFF5 FFEE          	movff	tablat,postinc0
   133  0003E6  50E5               	movf	postdec1,w,c
   134  0003E8  50E1               	movf	fsr1l,w,c
   135  0003EA  E1FA               	bnz	copy_data0
   136  0003EC                     end_of_initialization:
   137                           	opt stack 0
   138  0003EC                     __end_of__initialization:
   139                           	opt stack 0
   140  0003EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  0003EE  6EF8               	movwf	tblptru,c
   142  0003F0  0100               	movlb	0
   143  0003F2  EF2B  F001         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	bssCOMRAM
   154  00001F                     __pbssCOMRAM:
   155                           	opt stack 0
   156  00001F                     _SourceAddr:
   157                           	opt stack 0
   158  00001F                     	ds	4
   159  000023                     	ds	1
   160  000024                     _LOCK:
   161                           	opt stack 0
   162  000024                     	ds	1
   163  000025                     _counter:
   164                           	opt stack 0
   165  000025                     	ds	1
   166  000026                     _iloscBajtow:
   167                           	opt stack 0
   168  000026                     	ds	1
   169  000027                     _ramekInicjalizacji:
   170                           	opt stack 0
   171  000027                     	ds	1
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	dataCOMRAM
   182  000028                     __pdataCOMRAM:
   183                           	opt stack 0
   184  000028                     LED_Update@pos1:
   185                           	opt stack 0
   186  000028                     	ds	2
   187  00002A                     LED_Update@pos2:
   188                           	opt stack 0
   189  00002A                     	ds	2
   190  00002C                     _Fulfillment_Lvl:
   191                           	opt stack 0
   192  00002C                     	ds	2
   193  00002E                     LED_Update@Green:
   194                           	opt stack 0
   195  00002E                     	ds	1
   196                           tblptru	equ	0xFF8
   197                           tblptrh	equ	0xFF7
   198                           tblptrl	equ	0xFF6
   199                           tablat	equ	0xFF5
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           postdec1	equ	0xFE5
   203                           fsr1l	equ	0xFE1
   204                           
   205                           	psect	bssBANK0
   206  000060                     __pbssBANK0:
   207                           	opt stack 0
   208  000060                     _buforCAN:
   209                           	opt stack 0
   210  000060                     	ds	65
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           postdec1	equ	0xFE5
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	cstackCOMRAM
   221  000001                     __pcstackCOMRAM:
   222                           	opt stack 0
   223  000001                     ?_EraseFlash:
   224                           	opt stack 0
   225  000001                     ?_WriteBytesFlash:
   226                           	opt stack 0
   227  000001                     ?_LED_Control:
   228                           	opt stack 0
   229  000001                     LED_Control@color:
   230                           	opt stack 0
   231  000001                     EraseFlash@startaddr:
   232                           	opt stack 0
   233  000001                     WriteBytesFlash@startaddr:
   234                           	opt stack 0
   235                           
   236                           ; 4 bytes @ 0x0
   237  000001                     	ds	1
   238  000002                     LED_Control@diode:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x1
   242  000002                     	ds	2
   243  000004                     LED_Control@cos:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x3
   247  000004                     	ds	1
   248  000005                     WriteBytesFlash@num_bytes:
   249                           	opt stack 0
   250  000005                     EraseFlash@endaddr:
   251                           	opt stack 0
   252                           
   253                           ; 4 bytes @ 0x4
   254  000005                     	ds	1
   255  000006                     ??_LED_Error:
   256  000006                     ??_LED_Clear:
   257                           
   258                           ; 0 bytes @ 0x5
   259  000006                     	ds	1
   260  000007                     WriteBytesFlash@flash_array:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x6
   264  000007                     	ds	2
   265  000009                     ??_EraseFlash:
   266  000009                     ??_WriteBytesFlash:
   267                           
   268                           ; 0 bytes @ 0x8
   269  000009                     	ds	1
   270  00000A                     EraseFlash@flag:
   271                           	opt stack 0
   272  00000A                     WriteBytesFlash@saveptr:
   273                           	opt stack 0
   274                           
   275                           ; 3 bytes @ 0x9
   276  00000A                     	ds	1
   277  00000B                     EraseFlash@flash_addr:
   278                           	opt stack 0
   279                           
   280                           ; 4 bytes @ 0xA
   281  00000B                     	ds	2
   282  00000D                     WriteBytesFlash@write_byte:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0xC
   286  00000D                     	ds	1
   287  00000E                     WriteBytesFlash@flag:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0xD
   291  00000E                     	ds	1
   292  00000F                     WriteBytesFlash@startptr:
   293                           	opt stack 0
   294                           
   295                           ; 3 bytes @ 0xE
   296  00000F                     	ds	3
   297  000012                     WriteBytesFlash@saddress:
   298                           	opt stack 0
   299                           
   300                           ; 4 bytes @ 0x11
   301  000012                     	ds	4
   302  000016                     ??_OdbierzRamke:
   303                           
   304                           ; 0 bytes @ 0x15
   305  000016                     	ds	2
   306  000018                     OdbierzRamke@pointerU8:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x17
   310  000018                     	ds	2
   311  00001A                     OdbierzRamke@k:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x19
   315  00001A                     	ds	1
   316  00001B                     OdbierzRamke@tempCON:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x1A
   320  00001B                     	ds	1
   321  00001C                     OdbierzRamke@i:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x1B
   325  00001C                     	ds	1
   326  00001D                     ??_main:
   327                           
   328                           ; 0 bytes @ 0x1C
   329  00001D                     	ds	1
   330  00001E                     main@Delay:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x1D
   334  00001E                     	ds	1
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 221 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  Delay           1   29[COMRAM] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  2  133[COMRAM] int 
   356 ;; Registers used:
   357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   367 ;;Total ram usage:        2 bytes
   368 ;; Hardware stack levels required when called:    3
   369 ;; This function calls:
   370 ;;		_OdbierzRamke
   371 ;;		_ResetDevice
   372 ;;		_LED_Clear
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text0
   379  000256                     __ptext0:
   380                           	opt stack 0
   381  000256                     _main:
   382                           	opt stack 28
   383                           
   384                           ;main.c: 222: unsigned char Delay;
   385                           ;main.c: 225: if((RCON&0x3F)!=0x3C)
   386                           
   387                           ;incstack = 0
   388                           ;incstack = 0
   389  000256  50D0               	movf	4048,w,c	;volatile
   390  000258  0B3F               	andlw	63
   391  00025A  0A3C               	xorlw	60
   392  00025C  A4D8               	btfss	status,2,c
   393                           
   394                           ;main.c: 226: {
   395                           ;main.c: 227: ResetDevice();
   396  00025E  EC06  F000         	call	_ResetDevice	;wreg free
   397                           
   398                           ;main.c: 228: }
   399                           ;main.c: 230: Delay = 5;
   400  000262  6E1D               	movwf	??_main& (0+255),c
   401  000264  0E05               	movlw	5
   402  000266  6E1E               	movwf	main@Delay,c
   403  000268  501D               	movf	??_main& (0+255),w,c
   404                           
   405                           ;main.c: 232: TRISA = 0xFF;
   406  00026A  6892               	setf	3986,c	;volatile
   407                           
   408                           ;main.c: 233: TRISB = 0xFF;
   409  00026C  6893               	setf	3987,c	;volatile
   410                           
   411                           ;main.c: 234: TRISAbits.TRISA5 = 0;
   412  00026E  9A92               	bcf	3986,5,c	;volatile
   413                           
   414                           ;main.c: 235: LED_Clear();
   415  000270  EC73  F003         	call	_LED_Clear	;wreg free
   416                           
   417                           ;main.c: 236: TRISC = 0xFF;
   418  000274  6894               	setf	3988,c	;volatile
   419                           
   420                           ;main.c: 237: TRISCbits.TRISC6 = 0;
   421  000276  9C94               	bcf	3988,6,c	;volatile
   422                           
   423                           ;main.c: 240: T0CON = 0x00;
   424  000278  0E00               	movlw	0
   425  00027A  6ED5               	movwf	4053,c	;volatile
   426                           
   427                           ;main.c: 241: T0CONbits.T0PS = 0x05;
   428  00027C  50D5               	movf	4053,w,c	;volatile
   429  00027E  0BF8               	andlw	-8
   430  000280  0905               	iorlw	5
   431  000282  6ED5               	movwf	4053,c	;volatile
   432                           
   433                           ;main.c: 243: INTCONbits.TMR0IE = 0;
   434  000284  9AF2               	bcf	intcon,5,c	;volatile
   435                           
   436                           ;main.c: 244: INTCONbits.TMR0IF = 0;
   437  000286  94F2               	bcf	intcon,2,c	;volatile
   438                           
   439                           ;main.c: 246: TMR0 = 62500;
   440  000288  0EF4               	movlw	244
   441  00028A  6ED7               	movwf	4055,c	;volatile
   442  00028C  0E24               	movlw	36
   443  00028E  6ED6               	movwf	4054,c	;volatile
   444                           
   445                           ;main.c: 249: T0CONbits.TMR0ON = 1;
   446  000290  8ED5               	bsf	4053,7,c	;volatile
   447                           
   448                           ;main.c: 252: CANCON = 0x80;
   449  000292  0E80               	movlw	128
   450  000294  6E6F               	movwf	3951,c	;volatile
   451  000296                     l1769:
   452  000296  506E               	movf	3950,w,c	;volatile
   453  000298  0BE0               	andlw	224
   454  00029A  0A80               	xorlw	128
   455  00029C  A4D8               	btfss	status,2,c
   456  00029E  D7FB               	goto	l1769
   457                           
   458                           ;main.c: 256: }
   459                           ;main.c: 259: ECANCON = 0x90;
   460  0002A0  0E90               	movlw	144
   461  0002A2  6E77               	movwf	3959,c	;volatile
   462                           
   463                           ;main.c: 263: BRGCON1bits.BRP0 = ((16000000/(2*20*50000))-1) & 0b000001;
   464  0002A4  8070               	bsf	3952,0,c	;volatile
   465                           
   466                           ;main.c: 264: BRGCON1bits.BRP1 = (((16000000/(2*20*50000))-1) >> 1) & 0b000001;
   467  0002A6  8270               	bsf	3952,1,c	;volatile
   468                           
   469                           ;main.c: 265: BRGCON1bits.BRP2 = (((16000000/(2*20*50000))-1) >> 2) & 0b000001;
   470  0002A8  8470               	bsf	3952,2,c	;volatile
   471                           
   472                           ;main.c: 266: BRGCON1bits.BRP3 = (((16000000/(2*20*50000))-1) >> 3) & 0b000001;
   473  0002AA  9670               	bcf	3952,3,c	;volatile
   474                           
   475                           ;main.c: 267: BRGCON1bits.BRP4 = (((16000000/(2*20*50000))-1) >> 4) & 0b000001;
   476  0002AC  9870               	bcf	3952,4,c	;volatile
   477                           
   478                           ;main.c: 268: BRGCON1bits.BRP5 = (((16000000/(2*20*50000))-1) >> 5) & 0b000001;
   479  0002AE  9A70               	bcf	3952,5,c	;volatile
   480                           
   481                           ;main.c: 270: BRGCON1bits.SJW0 = 1;
   482  0002B0  8C70               	bsf	3952,6,c	;volatile
   483                           
   484                           ;main.c: 271: BRGCON1bits.SJW1 = 1;
   485  0002B2  8E70               	bsf	3952,7,c	;volatile
   486                           
   487                           ;main.c: 273: BRGCON2bits.SEG1PH0 = 1;
   488  0002B4  8671               	bsf	3953,3,c	;volatile
   489                           
   490                           ;main.c: 274: BRGCON2bits.SEG1PH1 = 1;
   491  0002B6  8871               	bsf	3953,4,c	;volatile
   492                           
   493                           ;main.c: 275: BRGCON2bits.SEG1PH2 = 1;
   494  0002B8  8A71               	bsf	3953,5,c	;volatile
   495                           
   496                           ;main.c: 277: BRGCON2bits.PRSEG2 = 1;
   497  0002BA  8471               	bsf	3953,2,c	;volatile
   498                           
   499                           ;main.c: 278: BRGCON2bits.PRSEG1 = 0;
   500  0002BC  9271               	bcf	3953,1,c	;volatile
   501                           
   502                           ;main.c: 279: BRGCON2bits.PRSEG0 = 0;
   503  0002BE  9071               	bcf	3953,0,c	;volatile
   504                           
   505                           ;main.c: 281: BRGCON3bits.SEG2PH0 = 1;
   506  0002C0  8072               	bsf	3954,0,c	;volatile
   507                           
   508                           ;main.c: 282: BRGCON3bits.SEG2PH1 = 0;
   509  0002C2  9272               	bcf	3954,1,c	;volatile
   510                           
   511                           ;main.c: 283: BRGCON3bits.SEG2PH2 = 1;
   512  0002C4  8472               	bsf	3954,2,c	;volatile
   513                           
   514                           ;main.c: 285: BRGCON2bits.SAM = 1;
   515  0002C6  8C71               	bsf	3953,6,c	;volatile
   516                           
   517                           ;main.c: 286: BRGCON2bits.SEG2PHTS = 1;
   518  0002C8  8E71               	bsf	3953,7,c	;volatile
   519                           
   520                           ;main.c: 288: BRGCON2bits.SAM = 1;
   521  0002CA  8C71               	bsf	3953,6,c	;volatile
   522                           
   523                           ;main.c: 289: BRGCON2bits.SEG2PHTS = 1;
   524  0002CC  8E71               	bsf	3953,7,c	;volatile
   525                           
   526                           ;main.c: 294: MSEL0 = 0x00;
   527  0002CE  0E00               	movlw	0
   528  0002D0  010D               	movlb	13	; () banked
   529  0002D2  010D               	movlb	13	; () banked
   530  0002D4  6FF0               	movwf	240,b	;volatile
   531                           
   532                           ;main.c: 295: RXM0SIDH = 0b11100000;
   533  0002D6  0EE0               	movlw	224
   534  0002D8  010F               	movlb	15	; () banked
   535  0002DA  010F               	movlb	15	; () banked
   536  0002DC  6F18               	movwf	24,b	;volatile
   537                           
   538                           ;main.c: 296: RXM0SIDL = 0b00001011;
   539  0002DE  0E0B               	movlw	11
   540  0002E0  010F               	movlb	15	; () banked
   541  0002E2  010F               	movlb	15	; () banked
   542  0002E4  6F19               	movwf	25,b	;volatile
   543                           
   544                           ; BSR set to: 15
   545                           ;main.c: 297: RXM0EIDH = 0xFF;
   546  0002E6  010F               	movlb	15	; () banked
   547  0002E8  010F               	movlb	15	; () banked
   548  0002EA  691A               	setf	26,b	;volatile
   549                           
   550                           ; BSR set to: 15
   551                           ;main.c: 298: RXM0EIDL = 0xFF;
   552  0002EC  010F               	movlb	15	; () banked
   553  0002EE  010F               	movlb	15	; () banked
   554  0002F0  691B               	setf	27,b	;volatile
   555                           
   556                           ;main.c: 301: RXF0SIDH = 0x60;
   557  0002F2  0E60               	movlw	96
   558  0002F4  010F               	movlb	15	; () banked
   559  0002F6  010F               	movlb	15	; () banked
   560  0002F8  6F00               	movwf	0,b	;volatile
   561                           
   562                           ;main.c: 302: RXF0SIDL = 0x01;
   563  0002FA  0E01               	movlw	1
   564  0002FC  010F               	movlb	15	; () banked
   565  0002FE  010F               	movlb	15	; () banked
   566  000300  6F01               	movwf	1,b	;volatile
   567                           
   568                           ; BSR set to: 15
   569                           ;main.c: 303: RXF0SIDLbits.EXIDEN = 1;
   570  000302  010F               	movlb	15	; () banked
   571  000304  010F               	movlb	15	; () banked
   572  000306  8701               	bsf	1,3,b	;volatile
   573                           
   574                           ;main.c: 304: RXF0EIDH = 0x40;
   575  000308  0E40               	movlw	64
   576  00030A  010F               	movlb	15	; () banked
   577  00030C  010F               	movlb	15	; () banked
   578  00030E  6F02               	movwf	2,b	;volatile
   579                           
   580                           ;main.c: 305: RXF0EIDL = 0;
   581  000310  0E00               	movlw	0
   582  000312  010F               	movlb	15	; () banked
   583  000314  010F               	movlb	15	; () banked
   584  000316  6F03               	movwf	3,b	;volatile
   585                           
   586                           ;main.c: 309: RXFCON0 = 0x01;
   587  000318  0E01               	movlw	1
   588  00031A  010D               	movlb	13	; () banked
   589  00031C  010D               	movlb	13	; () banked
   590  00031E  6FD4               	movwf	212,b	;volatile
   591                           
   592                           ;main.c: 310: RXFCON1 = 0x00;
   593  000320  0E00               	movlw	0
   594  000322  010D               	movlb	13	; () banked
   595  000324  010D               	movlb	13	; () banked
   596  000326  6FD5               	movwf	213,b	;volatile
   597                           
   598                           ;main.c: 318: RXB0CON = 0;
   599  000328  0E00               	movlw	0
   600  00032A  6E60               	movwf	3936,c	;volatile
   601                           
   602                           ;main.c: 319: RXB1CON = 0;
   603  00032C  0E00               	movlw	0
   604  00032E  010F               	movlb	15	; () banked
   605  000330  010F               	movlb	15	; () banked
   606  000332  6F50               	movwf	80,b	;volatile
   607                           
   608                           ;main.c: 320: B0CON = 0;
   609  000334  0E00               	movlw	0
   610  000336  010E               	movlb	14	; () banked
   611  000338  010E               	movlb	14	; () banked
   612  00033A  6F20               	movwf	32,b	;volatile
   613                           
   614                           ;main.c: 321: B1CON = 0;
   615  00033C  0E00               	movlw	0
   616  00033E  010E               	movlb	14	; () banked
   617  000340  010E               	movlb	14	; () banked
   618  000342  6F30               	movwf	48,b	;volatile
   619                           
   620                           ;main.c: 322: B2CON = 0;
   621  000344  0E00               	movlw	0
   622  000346  010E               	movlb	14	; () banked
   623  000348  010E               	movlb	14	; () banked
   624  00034A  6F40               	movwf	64,b	;volatile
   625                           
   626                           ;main.c: 323: B3CON = 0;
   627  00034C  0E00               	movlw	0
   628  00034E  010E               	movlb	14	; () banked
   629  000350  010E               	movlb	14	; () banked
   630  000352  6F50               	movwf	80,b	;volatile
   631                           
   632                           ;main.c: 324: B4CON = 0;
   633  000354  0E00               	movlw	0
   634  000356  010E               	movlb	14	; () banked
   635  000358  010E               	movlb	14	; () banked
   636  00035A  6F60               	movwf	96,b	;volatile
   637                           
   638                           ;main.c: 325: B5CON = 0;
   639  00035C  0E00               	movlw	0
   640  00035E  010E               	movlb	14	; () banked
   641  000360  010E               	movlb	14	; () banked
   642  000362  6F70               	movwf	112,b	;volatile
   643                           
   644                           ;main.c: 328: CANCON = 0x00;
   645  000364  0E00               	movlw	0
   646  000366  6E6F               	movwf	3951,c	;volatile
   647  000368                     l1821:
   648  000368  506E               	movf	3950,w,c	;volatile
   649  00036A  0BE0               	andlw	224
   650  00036C  A4D8               	btfss	status,2,c
   651  00036E  D7FC               	goto	l1821
   652                           
   653                           ;main.c: 332: }
   654                           ;main.c: 333: SourceAddr.Val32 = (DWORD)0xC00;
   655  000370  0E00               	movlw	0
   656  000372  6E1F               	movwf	_SourceAddr,c
   657  000374  0E0C               	movlw	12
   658  000376  6E20               	movwf	_SourceAddr+1,c
   659  000378  0E00               	movlw	0
   660  00037A  6E21               	movwf	_SourceAddr+2,c
   661  00037C  0E00               	movlw	0
   662  00037E  6E22               	movwf	_SourceAddr+3,c
   663                           
   664                           ;main.c: 334: counter = 0;
   665  000380  6E1D               	movwf	??_main& (0+255),c
   666  000382  0E00               	movlw	0
   667  000384  6E25               	movwf	_counter,c
   668  000386  501D               	movf	??_main& (0+255),w,c
   669                           
   670                           ;main.c: 335: iloscBajtow = 0;
   671  000388  6E1D               	movwf	??_main& (0+255),c
   672  00038A  0E00               	movlw	0
   673  00038C  6E26               	movwf	_iloscBajtow,c
   674  00038E  501D               	movf	??_main& (0+255),w,c
   675                           
   676                           ;main.c: 336: ramekInicjalizacji = 0;
   677  000390  6E1D               	movwf	??_main& (0+255),c
   678  000392  0E00               	movlw	0
   679  000394  6E27               	movwf	_ramekInicjalizacji,c
   680  000396  501D               	movf	??_main& (0+255),w,c
   681  000398                     l1831:
   682                           
   683                           ;main.c: 338: {
   684                           ;main.c: 339: OdbierzRamke();
   685  000398  EC10  F000         	call	_OdbierzRamke	;wreg free
   686                           
   687                           ;main.c: 342: if(INTCONbits.TMR0IF == 1)
   688  00039C  A4F2               	btfss	intcon,2,c	;volatile
   689  00039E  D7FC               	goto	l1831
   690                           
   691                           ;main.c: 343: {
   692                           ;main.c: 344: INTCONbits.TMR0IF = 0;
   693  0003A0  94F2               	bcf	intcon,2,c	;volatile
   694  0003A2  0004               	clrwdt		;# 
   695                           
   696                           ;main.c: 347: if(++counter >= Delay)
   697  0003A4  501E               	movf	main@Delay,w,c
   698  0003A6  2A25               	incf	_counter,f,c
   699  0003A8  5C25               	subwf	_counter& (0+255),w,c
   700  0003AA  A0D8               	btfss	status,0,c
   701  0003AC  D7F5               	goto	l1831
   702                           
   703                           ;main.c: 348: {
   704                           ;main.c: 349: ResetDevice();
   705  0003AE  EC06  F000         	call	_ResetDevice	;wreg free
   706  0003B2  D7F2               	goto	l1831
   707  0003B4                     __end_of_main:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           intcon	equ	0xFF2
   714                           postinc0	equ	0xFEE
   715                           wreg	equ	0xFE8
   716                           postdec1	equ	0xFE5
   717                           fsr1l	equ	0xFE1
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function _LED_Clear *****************
   721 ;; Defined at:
   722 ;;		line 68 in file "LED.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  2   42[COMRAM] unsigned int 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   740 ;;Total ram usage:        1 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    1
   743 ;; This function calls:
   744 ;;		_LED_Control
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text1
   751  0006E6                     __ptext1:
   752                           	opt stack 0
   753  0006E6                     _LED_Clear:
   754                           	opt stack 29
   755                           
   756                           ;LED.c: 69: LED_Control(RED,0b0000000000);
   757                           
   758                           ;incstack = 0
   759                           ;incstack = 0
   760  0006E6  6E06               	movwf	??_LED_Clear& (0+255),c
   761  0006E8  0E00               	movlw	0
   762  0006EA  6E01               	movwf	?_LED_Control,c
   763  0006EC  5006               	movf	??_LED_Clear& (0+255),w,c
   764  0006EE  0E00               	movlw	0
   765  0006F0  6E03               	movwf	?_LED_Control+2,c
   766  0006F2  0E00               	movlw	0
   767  0006F4  6E02               	movwf	?_LED_Control+1,c
   768  0006F6  EC03  F002         	call	_LED_Control	;wreg free
   769                           
   770                           ;LED.c: 70: LED_Control(GREEN,0b1010101010);
   771  0006FA  6E06               	movwf	??_LED_Clear& (0+255),c
   772  0006FC  0E01               	movlw	1
   773  0006FE  6E01               	movwf	?_LED_Control,c
   774  000700  5006               	movf	??_LED_Clear& (0+255),w,c
   775  000702  0E02               	movlw	2
   776  000704  6E03               	movwf	?_LED_Control+2,c
   777  000706  0EAA               	movlw	170
   778  000708  6E02               	movwf	?_LED_Control+1,c
   779  00070A  EC03  F002         	call	_LED_Control	;wreg free
   780                           
   781                           ;LED.c: 71: return 1;
   782                           ;	Return value of _LED_Clear is never used
   783  00070E  0012               	return	
   784  000710                     __end_of_LED_Clear:
   785                           	opt stack 0
   786                           tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           tblptrl	equ	0xFF6
   789                           tablat	equ	0xFF5
   790                           intcon	equ	0xFF2
   791                           postinc0	equ	0xFEE
   792                           wreg	equ	0xFE8
   793                           postdec1	equ	0xFE5
   794                           fsr1l	equ	0xFE1
   795                           status	equ	0xFD8
   796                           
   797 ;; *************** function _OdbierzRamke *****************
   798 ;; Defined at:
   799 ;;		line 108 in file "main.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  pointerU8       2   23[COMRAM] PTR volatile unsigned ch
   804 ;;		 -> RXB0D0(1), 
   805 ;;  tempU16         2    0        unsigned int 
   806 ;;  i               1   27[COMRAM] unsigned char 
   807 ;;  tempCON         1   26[COMRAM] unsigned char 
   808 ;;  k               1   25[COMRAM] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;		None               void
   811 ;; Registers used:
   812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   819 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   821 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   822 ;;Total ram usage:        7 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    2
   825 ;; This function calls:
   826 ;;		_ResetDevice
   827 ;;		_LED_Error
   828 ;;		_EraseFlash
   829 ;;		_WriteBytesFlash
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text2
   836  000020                     __ptext2:
   837                           	opt stack 0
   838  000020                     _OdbierzRamke:
   839                           	opt stack 28
   840                           
   841                           ;main.c: 109: volatile unsigned char *pointerU8;
   842                           ;main.c: 110: unsigned char i, k,tempCON = 0;
   843                           
   844                           ;incstack = 0
   845                           ;incstack = 0
   846  000020  6E16               	movwf	??_OdbierzRamke& (0+255),c
   847  000022  0E00               	movlw	0
   848  000024  6E1B               	movwf	OdbierzRamke@tempCON,c
   849  000026  5016               	movf	??_OdbierzRamke& (0+255),w,c
   850                           
   851                           ;main.c: 111: unsigned int tempU16;
   852                           ;main.c: 113: k = CANCON&0x0F;
   853  000028  506F               	movf	3951,w,c	;volatile
   854  00002A  0B0F               	andlw	15
   855  00002C  6E1A               	movwf	OdbierzRamke@k,c
   856                           
   857                           ;main.c: 115: ECANCON = 0x90 | k;
   858  00002E  501A               	movf	OdbierzRamke@k,w,c
   859  000030  0990               	iorlw	144
   860  000032  6E77               	movwf	3959,c	;volatile
   861                           
   862                           ;main.c: 118: switch(k)
   863  000034  D018               	goto	l1661
   864  000036                     l98:
   865                           
   866                           ;main.c: 121: tempCON = RXB0CON;
   867  000036  CF60 F01B          	movff	3936,OdbierzRamke@tempCON	;volatile
   868                           
   869                           ;main.c: 122: break;
   870  00003A  D02E               	goto	l99
   871  00003C                     l100:
   872                           
   873                           ;main.c: 124: tempCON = RXB1CON;
   874  00003C  CF50 F01B          	movff	3920,OdbierzRamke@tempCON	;volatile
   875                           
   876                           ;main.c: 125: break;
   877  000040  D02B               	goto	l99
   878  000042                     l101:
   879                           
   880                           ;main.c: 127: tempCON = B0CON;
   881  000042  CE20 F01B          	movff	3616,OdbierzRamke@tempCON	;volatile
   882                           
   883                           ;main.c: 128: break;
   884  000046  D028               	goto	l99
   885  000048                     l102:
   886                           
   887                           ;main.c: 130: tempCON = B1CON;
   888  000048  CE30 F01B          	movff	3632,OdbierzRamke@tempCON	;volatile
   889                           
   890                           ;main.c: 131: break;
   891  00004C  D025               	goto	l99
   892  00004E                     l103:
   893                           
   894                           ;main.c: 133: tempCON = B2CON;
   895  00004E  CE40 F01B          	movff	3648,OdbierzRamke@tempCON	;volatile
   896                           
   897                           ;main.c: 134: break;
   898  000052  D022               	goto	l99
   899  000054                     l104:
   900                           
   901                           ;main.c: 136: tempCON = B3CON;
   902  000054  CE50 F01B          	movff	3664,OdbierzRamke@tempCON	;volatile
   903                           
   904                           ;main.c: 137: break;
   905  000058  D01F               	goto	l99
   906  00005A                     l105:
   907                           
   908                           ;main.c: 139: tempCON = B4CON;
   909  00005A  CE60 F01B          	movff	3680,OdbierzRamke@tempCON	;volatile
   910                           
   911                           ;main.c: 140: break;
   912  00005E  D01C               	goto	l99
   913  000060                     l106:
   914                           
   915                           ;main.c: 142: tempCON = B5CON;
   916  000060  CE70 F01B          	movff	3696,OdbierzRamke@tempCON	;volatile
   917                           
   918                           ;main.c: 143: break;
   919  000064  D019               	goto	l99
   920  000066                     l1661:
   921  000066  501A               	movf	OdbierzRamke@k,w,c
   922                           
   923                           ; Switch size 1, requested type "space"
   924                           ; Number of cases is 8, Range of values is 0 to 7
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte           25    13 (average)
   928                           ;	Chosen strategy is simple_byte
   929  000068  0A00               	xorlw	0	; case 0
   930  00006A  B4D8               	btfsc	status,2,c
   931  00006C  D7E4               	goto	l98
   932  00006E  0A01               	xorlw	1	; case 1
   933  000070  B4D8               	btfsc	status,2,c
   934  000072  D7E4               	goto	l100
   935  000074  0A03               	xorlw	3	; case 2
   936  000076  B4D8               	btfsc	status,2,c
   937  000078  D7E4               	goto	l101
   938  00007A  0A01               	xorlw	1	; case 3
   939  00007C  B4D8               	btfsc	status,2,c
   940  00007E  D7E4               	goto	l102
   941  000080  0A07               	xorlw	7	; case 4
   942  000082  B4D8               	btfsc	status,2,c
   943  000084  D7E4               	goto	l103
   944  000086  0A01               	xorlw	1	; case 5
   945  000088  B4D8               	btfsc	status,2,c
   946  00008A  D7E4               	goto	l104
   947  00008C  0A03               	xorlw	3	; case 6
   948  00008E  B4D8               	btfsc	status,2,c
   949  000090  D7E4               	goto	l105
   950  000092  0A01               	xorlw	1	; case 7
   951  000094  B4D8               	btfsc	status,2,c
   952  000096  D7E4               	goto	l106
   953  000098                     l99:
   954                           
   955                           ;main.c: 146: if((tempCON & 0x80) > 0)
   956  000098  AE1B               	btfss	OdbierzRamke@tempCON,7,c
   957  00009A  D0DC               	goto	l128
   958                           
   959                           ;main.c: 147: {
   960                           ;main.c: 148: pointerU8 = &RXB0D0;
   961  00009C  0E0F               	movlw	15	;volatile
   962  00009E  6E19               	movwf	OdbierzRamke@pointerU8+1,c
   963  0000A0  0E66               	movlw	102	;volatile
   964  0000A2  6E18               	movwf	OdbierzRamke@pointerU8,c
   965                           
   966                           ;main.c: 149: for(i=0;i<8;i++)
   967  0000A4  6E16               	movwf	??_OdbierzRamke& (0+255),c
   968  0000A6  0E00               	movlw	0
   969  0000A8  6E1C               	movwf	OdbierzRamke@i,c
   970  0000AA  5016               	movf	??_OdbierzRamke& (0+255),w,c
   971  0000AC  D016               	goto	L2
   972  0000AE                     l1669:
   973                           
   974                           ;main.c: 150: {
   975                           ;main.c: 151: buforCAN[iloscBajtow++]=(*(pointerU8+i));
   976  0000AE  501C               	movf	OdbierzRamke@i,w,c
   977  0000B0  0D01               	mullw	1
   978  0000B2  50F3               	movf	prodl,w,c
   979  0000B4  2418               	addwf	OdbierzRamke@pointerU8,w,c
   980  0000B6  6ED9               	movwf	fsr2l,c
   981  0000B8  50F4               	movf	prodh,w,c
   982  0000BA  2019               	addwfc	OdbierzRamke@pointerU8+1,w,c
   983  0000BC  6EDA               	movwf	fsr2h,c
   984  0000BE  5026               	movf	_iloscBajtow,w,c
   985  0000C0  0D01               	mullw	1
   986  0000C2  0100               	movlb	0	; () banked
   987  0000C4  0E60               	movlw	low _buforCAN
   988  0000C6  24F3               	addwf	prodl,w,c
   989  0000C8  6EE1               	movwf	fsr1l,c
   990  0000CA  0100               	movlb	0	; () banked
   991  0000CC  0E00               	movlw	high _buforCAN
   992  0000CE  20F4               	addwfc	prodh,w,c
   993  0000D0  6EE2               	movwf	fsr1h,c
   994  0000D2  CFDF FFE7          	movff	indf2,indf1
   995                           
   996                           ; BSR set to: 0
   997  0000D6  2A26               	incf	_iloscBajtow,f,c
   998                           
   999                           ; BSR set to: 0
  1000  0000D8  2A1C               	incf	OdbierzRamke@i,f,c
  1001  0000DA                     L2:
  1002                           
  1003                           ; BSR set to: 0
  1004  0000DA  0E07               	movlw	7
  1005  0000DC  641C               	cpfsgt	OdbierzRamke@i,c
  1006  0000DE  D7E7               	goto	l1669
  1007                           
  1008                           ;main.c: 152: }
  1009                           ;main.c: 153: if(ramekInicjalizacji < 10)
  1010                           
  1011                           ; BSR set to: 0
  1012  0000E0  0E0A               	movlw	10
  1013  0000E2  6027               	cpfslt	_ramekInicjalizacji,c
  1014  0000E4  D034               	goto	l1703
  1015                           
  1016                           ;main.c: 154: {
  1017                           ;main.c: 155: for(i=0; i<8; i++)
  1018  0000E6  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1019  0000E8  0E00               	movlw	0
  1020  0000EA  6E1C               	movwf	OdbierzRamke@i,c
  1021  0000EC  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1022  0000EE  D01B               	goto	L3
  1023  0000F0                     l1685:
  1024                           
  1025                           ;main.c: 156: {
  1026                           ;main.c: 157: if(buforCAN[i] != ((ramekInicjalizacji*10)+i))
  1027  0000F0  501C               	movf	OdbierzRamke@i,w,c
  1028  0000F2  0D01               	mullw	1
  1029  0000F4  0100               	movlb	0	; () banked
  1030  0000F6  0E60               	movlw	low _buforCAN
  1031  0000F8  24F3               	addwf	prodl,w,c
  1032  0000FA  6ED9               	movwf	fsr2l,c
  1033  0000FC  0100               	movlb	0	; () banked
  1034  0000FE  0E00               	movlw	high _buforCAN
  1035  000100  20F4               	addwfc	prodh,w,c
  1036  000102  6EDA               	movwf	fsr2h,c
  1037  000104  50DF               	movf	indf2,w,c
  1038  000106  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1039  000108  6A17               	clrf	(??_OdbierzRamke+1)& (0+255),c
  1040  00010A  5027               	movf	_ramekInicjalizacji,w,c
  1041  00010C  0D0A               	mullw	10
  1042  00010E  501C               	movf	OdbierzRamke@i,w,c
  1043  000110  26F3               	addwf	prodl,f,c
  1044  000112  0E00               	movlw	0
  1045  000114  22F4               	addwfc	prodh,f,c
  1046  000116  5017               	movf	??_OdbierzRamke+1,w,c
  1047  000118  18F4               	xorwf	prodh,w,c
  1048  00011A  E102               	bnz	u945
  1049  00011C  5016               	movf	??_OdbierzRamke,w,c
  1050  00011E  18F3               	xorwf	prodl,w,c
  1051  000120                     u945:
  1052  000120  A4D8               	btfss	status,2,c
  1053  000122  D004               	goto	l1693
  1054                           
  1055                           ; BSR set to: 0
  1056                           
  1057                           ; BSR set to: 0
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;main.c: 158: {
  1061                           ;main.c: 159: break;
  1062  000124  2A1C               	incf	OdbierzRamke@i,f,c
  1063  000126                     L3:
  1064                           
  1065                           ; BSR set to: 0
  1066  000126  0E07               	movlw	7
  1067  000128  641C               	cpfsgt	OdbierzRamke@i,c
  1068  00012A  D7E2               	goto	l1685
  1069  00012C                     l1693:
  1070                           
  1071                           ;main.c: 160: }
  1072                           ;main.c: 161: }
  1073                           ;main.c: 162: if(i==8)
  1074  00012C  501C               	movf	OdbierzRamke@i,w,c
  1075  00012E  0A08               	xorlw	8
  1076  000130  A4D8               	btfss	status,2,c
  1077  000132  D006               	goto	l1699
  1078                           
  1079                           ;main.c: 163: {
  1080                           ;main.c: 164: iloscBajtow = 0;
  1081  000134  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1082  000136  0E00               	movlw	0
  1083  000138  6E26               	movwf	_iloscBajtow,c
  1084  00013A  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1085                           
  1086                           ;main.c: 165: ramekInicjalizacji++;
  1087  00013C  2A27               	incf	_ramekInicjalizacji,f,c
  1088                           
  1089                           ;main.c: 166: }
  1090  00013E  D042               	goto	l1713
  1091  000140                     l1699:
  1092                           
  1093                           ;main.c: 167: else
  1094                           ;main.c: 168: {
  1095                           ;main.c: 170: iloscBajtow = 0;
  1096  000140  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1097  000142  0E00               	movlw	0
  1098  000144  6E26               	movwf	_iloscBajtow,c
  1099  000146  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1100                           
  1101                           ;main.c: 171: ResetDevice();
  1102  000148  EC06  F000         	call	_ResetDevice	;wreg free
  1103  00014C  D03B               	goto	l1713
  1104  00014E                     l1703:
  1105                           
  1106                           ;main.c: 174: else if((iloscBajtow >= 64))
  1107  00014E  0E3F               	movlw	63
  1108  000150  6426               	cpfsgt	_iloscBajtow,c
  1109  000152  D038               	goto	l1713
  1110                           
  1111                           ;main.c: 175: {
  1112                           ;main.c: 176: LED_Error();
  1113  000154  EC88  F003         	call	_LED_Error	;wreg free
  1114                           
  1115                           ;main.c: 177: EraseFlash(SourceAddr.Val32, SourceAddr.Val32+(unsigned long)64);
  1116  000158  C01F  F001         	movff	_SourceAddr,?_EraseFlash
  1117  00015C  C020  F002         	movff	_SourceAddr+1,?_EraseFlash+1
  1118  000160  C021  F003         	movff	_SourceAddr+2,?_EraseFlash+2
  1119  000164  C022  F004         	movff	_SourceAddr+3,?_EraseFlash+3
  1120  000168  0E40               	movlw	64
  1121  00016A  241F               	addwf	_SourceAddr,w,c
  1122  00016C  6E05               	movwf	?_EraseFlash+4,c
  1123  00016E  0E00               	movlw	0
  1124  000170  2020               	addwfc	_SourceAddr+1,w,c
  1125  000172  6E06               	movwf	?_EraseFlash+5,c
  1126  000174  0E00               	movlw	0
  1127  000176  2021               	addwfc	_SourceAddr+2,w,c
  1128  000178  6E07               	movwf	?_EraseFlash+6,c
  1129  00017A  0E00               	movlw	0
  1130  00017C  2022               	addwfc	_SourceAddr+3,w,c
  1131  00017E  6E08               	movwf	?_EraseFlash+7,c
  1132  000180  EC36  F003         	call	_EraseFlash	;wreg free
  1133                           
  1134                           ;main.c: 178: WriteBytesFlash(SourceAddr.Val32,64,buforCAN);
  1135  000184  C01F  F001         	movff	_SourceAddr,?_WriteBytesFlash
  1136  000188  C020  F002         	movff	_SourceAddr+1,?_WriteBytesFlash+1
  1137  00018C  C021  F003         	movff	_SourceAddr+2,?_WriteBytesFlash+2
  1138  000190  C022  F004         	movff	_SourceAddr+3,?_WriteBytesFlash+3
  1139  000194  0E00               	movlw	0
  1140  000196  6E06               	movwf	?_WriteBytesFlash+5,c
  1141  000198  0E40               	movlw	64
  1142  00019A  6E05               	movwf	?_WriteBytesFlash+4,c
  1143  00019C  0100               	movlb	0	; () banked
  1144  00019E  0E00               	movlw	high _buforCAN
  1145  0001A0  6E08               	movwf	?_WriteBytesFlash+7,c
  1146  0001A2  0100               	movlb	0	; () banked
  1147  0001A4  0E60               	movlw	low _buforCAN
  1148  0001A6  6E07               	movwf	?_WriteBytesFlash+6,c
  1149  0001A8  ECAD  F002         	call	_WriteBytesFlash	;wreg free
  1150                           
  1151                           ;main.c: 179: SourceAddr.Val32 += 64;
  1152  0001AC  0E40               	movlw	64
  1153  0001AE  261F               	addwf	_SourceAddr,f,c
  1154  0001B0  0E00               	movlw	0
  1155  0001B2  2220               	addwfc	_SourceAddr+1,f,c
  1156  0001B4  0E00               	movlw	0
  1157  0001B6  2221               	addwfc	_SourceAddr+2,f,c
  1158  0001B8  0E00               	movlw	0
  1159  0001BA  2222               	addwfc	_SourceAddr+3,f,c
  1160                           
  1161                           ;main.c: 180: iloscBajtow = 0;
  1162  0001BC  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1163  0001BE  0E00               	movlw	0
  1164  0001C0  6E26               	movwf	_iloscBajtow,c
  1165  0001C2  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1166  0001C4                     l1713:
  1167                           
  1168                           ;main.c: 181: }
  1169                           ;main.c: 182: TMR0 = 62500;
  1170  0001C4  0EF4               	movlw	244
  1171  0001C6  6ED7               	movwf	4055,c	;volatile
  1172  0001C8  0E24               	movlw	36
  1173  0001CA  6ED6               	movwf	4054,c	;volatile
  1174                           
  1175                           ;main.c: 183: counter = 0;
  1176  0001CC  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1177  0001CE  0E00               	movlw	0
  1178  0001D0  6E25               	movwf	_counter,c
  1179  0001D2  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1180  0001D4  0004               	clrwdt		;# 
  1181                           
  1182                           ;main.c: 185: switch(k)
  1183  0001D6  D025               	goto	l1735
  1184  0001D8                     l1717:
  1185                           
  1186                           ;main.c: 188: RXB0CON = 0;
  1187  0001D8  0E00               	movlw	0
  1188  0001DA  6E60               	movwf	3936,c	;volatile
  1189                           
  1190                           ;main.c: 189: break;
  1191  0001DC  D03B               	goto	l128
  1192  0001DE                     l1719:
  1193                           
  1194                           ;main.c: 191: RXB1CON = 0;
  1195  0001DE  0E00               	movlw	0
  1196  0001E0  010F               	movlb	15	; () banked
  1197  0001E2  010F               	movlb	15	; () banked
  1198  0001E4  D012               	goto	L1
  1199  0001E6                     l1721:
  1200                           
  1201                           ;main.c: 194: B0CON = 0;
  1202  0001E6  0E00               	movlw	0
  1203  0001E8  010E               	movlb	14	; () banked
  1204  0001EA  010E               	movlb	14	; () banked
  1205  0001EC  6F20               	movwf	32,b	;volatile
  1206                           
  1207                           ;main.c: 195: break;
  1208  0001EE  D032               	goto	l128
  1209  0001F0                     l1723:
  1210                           
  1211                           ;main.c: 197: B1CON = 0;
  1212  0001F0  0E00               	movlw	0
  1213  0001F2  010E               	movlb	14	; () banked
  1214  0001F4  010E               	movlb	14	; () banked
  1215  0001F6  6F30               	movwf	48,b	;volatile
  1216                           
  1217                           ;main.c: 198: break;
  1218  0001F8  D02D               	goto	l128
  1219  0001FA                     l1725:
  1220                           
  1221                           ;main.c: 200: B2CON = 0;
  1222  0001FA  0E00               	movlw	0
  1223  0001FC  010E               	movlb	14	; () banked
  1224  0001FE  010E               	movlb	14	; () banked
  1225  000200  6F40               	movwf	64,b	;volatile
  1226                           
  1227                           ;main.c: 201: break;
  1228  000202  D028               	goto	l128
  1229  000204                     l1727:
  1230                           
  1231                           ;main.c: 203: B3CON = 0;
  1232  000204  0E00               	movlw	0
  1233  000206  010E               	movlb	14	; () banked
  1234  000208  010E               	movlb	14	; () banked
  1235  00020A                     L1:
  1236  00020A  6F50               	movwf	80,b	;volatile
  1237                           
  1238                           ;main.c: 204: break;
  1239  00020C  D023               	goto	l128
  1240  00020E                     l1729:
  1241                           
  1242                           ;main.c: 206: B4CON = 0;
  1243  00020E  0E00               	movlw	0
  1244  000210  010E               	movlb	14	; () banked
  1245  000212  010E               	movlb	14	; () banked
  1246  000214  6F60               	movwf	96,b	;volatile
  1247                           
  1248                           ;main.c: 207: break;
  1249  000216  D01E               	goto	l128
  1250  000218                     l1731:
  1251                           
  1252                           ;main.c: 209: B5CON = 0;
  1253  000218  0E00               	movlw	0
  1254  00021A  010E               	movlb	14	; () banked
  1255  00021C  010E               	movlb	14	; () banked
  1256  00021E  6F70               	movwf	112,b	;volatile
  1257                           
  1258                           ;main.c: 210: break;
  1259  000220  D019               	goto	l128
  1260  000222                     l1735:
  1261  000222  501A               	movf	OdbierzRamke@k,w,c
  1262                           
  1263                           ; Switch size 1, requested type "space"
  1264                           ; Number of cases is 8, Range of values is 0 to 7
  1265                           ; switch strategies available:
  1266                           ; Name         Instructions Cycles
  1267                           ; simple_byte           25    13 (average)
  1268                           ;	Chosen strategy is simple_byte
  1269  000224  0A00               	xorlw	0	; case 0
  1270  000226  B4D8               	btfsc	status,2,c
  1271  000228  D7D7               	goto	l1717
  1272  00022A  0A01               	xorlw	1	; case 1
  1273  00022C  B4D8               	btfsc	status,2,c
  1274  00022E  D7D7               	goto	l1719
  1275  000230  0A03               	xorlw	3	; case 2
  1276  000232  B4D8               	btfsc	status,2,c
  1277  000234  D7D8               	goto	l1721
  1278  000236  0A01               	xorlw	1	; case 3
  1279  000238  B4D8               	btfsc	status,2,c
  1280  00023A  D7DA               	goto	l1723
  1281  00023C  0A07               	xorlw	7	; case 4
  1282  00023E  B4D8               	btfsc	status,2,c
  1283  000240  D7DC               	goto	l1725
  1284  000242  0A01               	xorlw	1	; case 5
  1285  000244  B4D8               	btfsc	status,2,c
  1286  000246  D7DE               	goto	l1727
  1287  000248  0A03               	xorlw	3	; case 6
  1288  00024A  B4D8               	btfsc	status,2,c
  1289  00024C  D7E0               	goto	l1729
  1290  00024E  0A01               	xorlw	1	; case 7
  1291  000250  B4D8               	btfsc	status,2,c
  1292  000252  D7E2               	goto	l1731
  1293  000254                     l128:
  1294  000254  0012               	return	
  1295  000256                     __end_of_OdbierzRamke:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           prodh	equ	0xFF4
  1302                           prodl	equ	0xFF3
  1303                           intcon	equ	0xFF2
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           indf1	equ	0xFE7
  1307                           postdec1	equ	0xFE5
  1308                           fsr1h	equ	0xFE2
  1309                           fsr1l	equ	0xFE1
  1310                           indf2	equ	0xFDF
  1311                           fsr2h	equ	0xFDA
  1312                           fsr2l	equ	0xFD9
  1313                           status	equ	0xFD8
  1314                           
  1315 ;; *************** function _WriteBytesFlash *****************
  1316 ;; Defined at:
  1317 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Flash\WriteBytesFlash.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  startaddr       4    0[COMRAM] unsigned long 
  1320 ;;  num_bytes       2    4[COMRAM] unsigned int 
  1321 ;;  flash_array     2    6[COMRAM] PTR unsigned char 
  1322 ;;		 -> buforCAN(65), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  saddress        4   17[COMRAM] unsigned long 
  1325 ;;  startptr        3   14[COMRAM] PTR unsigned char 
  1326 ;;		 -> ROM(2047), 
  1327 ;;  saveptr         3    9[COMRAM] PTR unsigned char 
  1328 ;;		 -> ROM(2047), 
  1329 ;;  flag            1   13[COMRAM] unsigned char 
  1330 ;;  write_byte      1   12[COMRAM] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;		None               void
  1333 ;; Registers used:
  1334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1340 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1341 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1343 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;Total ram usage:       21 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_OdbierzRamke
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text3
  1354  00055A                     __ptext3:
  1355                           	opt stack 0
  1356  00055A                     _WriteBytesFlash:
  1357                           	opt stack 29
  1358                           
  1359                           ;incstack = 0
  1360                           ;incstack = 0
  1361  00055A  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1362  00055C  0E00               	movlw	0
  1363  00055E  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1364  000560  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1365  000562  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1366  000564  0E00               	movlw	0
  1367  000566  6E0E               	movwf	WriteBytesFlash@flag,c
  1368  000568  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1369  00056A  C001  F012         	movff	WriteBytesFlash@startaddr,WriteBytesFlash@saddress
  1370  00056E  C002  F013         	movff	WriteBytesFlash@startaddr+1,WriteBytesFlash@saddress+1
  1371  000572  C003  F014         	movff	WriteBytesFlash@startaddr+2,WriteBytesFlash@saddress+2
  1372  000576  C004  F015         	movff	WriteBytesFlash@startaddr+3,WriteBytesFlash@saddress+3
  1373  00057A  0E06               	movlw	6
  1374  00057C  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1375  00057E                     u565:
  1376  00057E  90D8               	bcf	status,0,c
  1377  000580  3204               	rrcf	WriteBytesFlash@startaddr+3,f,c
  1378  000582  3203               	rrcf	WriteBytesFlash@startaddr+2,f,c
  1379  000584  3202               	rrcf	WriteBytesFlash@startaddr+1,f,c
  1380  000586  3201               	rrcf	WriteBytesFlash@startaddr,f,c
  1381  000588  2E09               	decfsz	??_WriteBytesFlash& (0+255),f,c
  1382  00058A  D7F9               	goto	u565
  1383  00058C  0E06               	movlw	6
  1384  00058E                     u575:
  1385  00058E  90D8               	bcf	status,0,c
  1386  000590  3601               	rlcf	WriteBytesFlash@startaddr,f,c
  1387  000592  3602               	rlcf	WriteBytesFlash@startaddr+1,f,c
  1388  000594  3603               	rlcf	WriteBytesFlash@startaddr+2,f,c
  1389  000596  3604               	rlcf	WriteBytesFlash@startaddr+3,f,c
  1390  000598  2EE8               	decfsz	wreg,f,c
  1391  00059A  D7F9               	goto	u575
  1392  00059C  0E40               	movlw	64
  1393  00059E  2601               	addwf	WriteBytesFlash@startaddr,f,c
  1394  0005A0  0E00               	movlw	0
  1395  0005A2  2202               	addwfc	WriteBytesFlash@startaddr+1,f,c
  1396  0005A4  0E00               	movlw	0
  1397  0005A6  2203               	addwfc	WriteBytesFlash@startaddr+2,f,c
  1398  0005A8  0E00               	movlw	0
  1399  0005AA  2204               	addwfc	WriteBytesFlash@startaddr+3,f,c
  1400  0005AC  5012               	movf	WriteBytesFlash@saddress,w,c
  1401  0005AE  0800               	sublw	0
  1402  0005B0  2401               	addwf	WriteBytesFlash@startaddr,w,c
  1403  0005B2  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1404  0005B4  D056               	goto	l1463
  1405  0005B6                     l303:
  1406  0005B6  C012  F00F         	movff	WriteBytesFlash@saddress,WriteBytesFlash@startptr
  1407  0005BA  C013  F010         	movff	WriteBytesFlash@saddress+1,WriteBytesFlash@startptr+1
  1408  0005BE  C014  F011         	movff	WriteBytesFlash@saddress+2,WriteBytesFlash@startptr+2
  1409  0005C2  D01C               	goto	l1441
  1410  0005C4                     l1431:
  1411  0005C4  C007  FFD9         	movff	WriteBytesFlash@flash_array,fsr2l
  1412  0005C8  C008  FFDA         	movff	WriteBytesFlash@flash_array+1,fsr2h
  1413  0005CC  50DF               	movf	indf2,w,c
  1414  0005CE  C00F  FFF6         	movff	WriteBytesFlash@startptr,tblptrl
  1415  0005D2  C010  FFF7         	movff	WriteBytesFlash@startptr+1,tblptrh
  1416  0005D6  C011  FFF8         	movff	WriteBytesFlash@startptr+2,tblptru
  1417  0005DA  6EF5               	movwf	tablat,c
  1418  0005DC  000C               	tblwt		*
  1419  0005DE  4A07               	infsnz	WriteBytesFlash@flash_array,f,c
  1420  0005E0  2A08               	incf	WriteBytesFlash@flash_array+1,f,c
  1421  0005E2  0E01               	movlw	1
  1422  0005E4  260F               	addwf	WriteBytesFlash@startptr,f,c
  1423  0005E6  0E00               	movlw	0
  1424  0005E8  2210               	addwfc	WriteBytesFlash@startptr+1,f,c
  1425  0005EA  0E00               	movlw	0
  1426  0005EC  2211               	addwfc	WriteBytesFlash@startptr+2,f,c
  1427  0005EE  0605               	decf	WriteBytesFlash@num_bytes,f,c
  1428  0005F0  A0D8               	btfss	status,0,c
  1429  0005F2  0606               	decf	WriteBytesFlash@num_bytes+1,f,c
  1430  0005F4  5006               	movf	(WriteBytesFlash@num_bytes+1)& (0+255),w,c
  1431  0005F6  1005               	iorwf	WriteBytesFlash@num_bytes& (0+255),w,c
  1432  0005F8  B4D8               	btfsc	status,2,c
  1433  0005FA  D004               	goto	l307
  1434  0005FC                     l1441:
  1435  0005FC  060D               	decf	WriteBytesFlash@write_byte,f,c
  1436  0005FE  280D               	incf	WriteBytesFlash@write_byte& (0+255),w,c
  1437  000600  A4D8               	btfss	status,2,c
  1438  000602  D7E0               	goto	l1431
  1439  000604                     l307:
  1440  000604  C00F  F00A         	movff	WriteBytesFlash@startptr,WriteBytesFlash@saveptr
  1441  000608  C010  F00B         	movff	WriteBytesFlash@startptr+1,WriteBytesFlash@saveptr+1
  1442  00060C  C011  F00C         	movff	WriteBytesFlash@startptr+2,WriteBytesFlash@saveptr+2
  1443  000610  C012  F00F         	movff	WriteBytesFlash@saddress,WriteBytesFlash@startptr
  1444  000614  C013  F010         	movff	WriteBytesFlash@saddress+1,WriteBytesFlash@startptr+1
  1445  000618  C014  F011         	movff	WriteBytesFlash@saddress+2,WriteBytesFlash@startptr+2
  1446  00061C  8EA6               	bsf	4006,7,c	;volatile
  1447  00061E  9CA6               	bcf	4006,6,c	;volatile
  1448  000620  84A6               	bsf	4006,2,c	;volatile
  1449  000622  AEF2               	btfss	intcon,7,c	;volatile
  1450  000624  D005               	goto	l1447
  1451  000626  9EF2               	bcf	intcon,7,c	;volatile
  1452  000628  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1453  00062A  0E01               	movlw	1
  1454  00062C  6E0E               	movwf	WriteBytesFlash@flag,c
  1455  00062E  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1456  000630                     l1447:
  1457  000630  0E55               	movlw	85
  1458  000632  6EA7               	movwf	4007,c	;volatile
  1459  000634  0EAA               	movlw	170
  1460  000636  6EA7               	movwf	4007,c	;volatile
  1461  000638  82A6               	bsf	4006,1,c	;volatile
  1462  00063A  94A6               	bcf	4006,2,c	;volatile
  1463  00063C  500E               	movf	WriteBytesFlash@flag,w,c
  1464  00063E  B4D8               	btfsc	status,2,c
  1465  000640  D005               	goto	l309
  1466  000642  8EF2               	bsf	intcon,7,c	;volatile
  1467  000644  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1468  000646  0E00               	movlw	0
  1469  000648  6E0E               	movwf	WriteBytesFlash@flag,c
  1470  00064A  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1471  00064C                     l309:
  1472  00064C  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1473  00064E  0E40               	movlw	64
  1474  000650  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1475  000652  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1476  000654  500A               	movf	WriteBytesFlash@saveptr,w,c
  1477  000656  6E12               	movwf	WriteBytesFlash@saddress,c
  1478  000658  500B               	movf	WriteBytesFlash@saveptr+1,w,c
  1479  00065A  6E13               	movwf	WriteBytesFlash@saddress+1,c
  1480  00065C  500C               	movf	WriteBytesFlash@saveptr+2,w,c
  1481  00065E  6E14               	movwf	WriteBytesFlash@saddress+2,c
  1482  000660  6A15               	clrf	WriteBytesFlash@saddress+3,c
  1483  000662                     l1463:
  1484  000662  5006               	movf	WriteBytesFlash@num_bytes+1,w,c
  1485  000664  1005               	iorwf	WriteBytesFlash@num_bytes,w,c
  1486  000666  B4D8               	btfsc	status,2,c
  1487  000668  0012               	return	
  1488  00066A  D7A5               	goto	l303
  1489  00066C                     __end_of_WriteBytesFlash:
  1490                           	opt stack 0
  1491                           tblptru	equ	0xFF8
  1492                           tblptrh	equ	0xFF7
  1493                           tblptrl	equ	0xFF6
  1494                           tablat	equ	0xFF5
  1495                           prodh	equ	0xFF4
  1496                           prodl	equ	0xFF3
  1497                           intcon	equ	0xFF2
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           indf1	equ	0xFE7
  1501                           postdec1	equ	0xFE5
  1502                           fsr1h	equ	0xFE2
  1503                           fsr1l	equ	0xFE1
  1504                           indf2	equ	0xFDF
  1505                           fsr2h	equ	0xFDA
  1506                           fsr2l	equ	0xFD9
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _EraseFlash *****************
  1510 ;; Defined at:
  1511 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Flash\EraseFlash.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  startaddr       4    0[COMRAM] unsigned long 
  1514 ;;  endaddr         4    4[COMRAM] unsigned long 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  flash_addr      4   10[COMRAM] struct .
  1517 ;;  flag            1    9[COMRAM] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;		None               void
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1527 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1530 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1531 ;;Total ram usage:       14 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_OdbierzRamke
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text4
  1541  00066C                     __ptext4:
  1542                           	opt stack 0
  1543  00066C                     _EraseFlash:
  1544                           	opt stack 29
  1545                           
  1546                           ;incstack = 0
  1547                           ;incstack = 0
  1548  00066C  6E09               	movwf	??_EraseFlash& (0+255),c
  1549  00066E  0E00               	movlw	0
  1550  000670  6E0A               	movwf	EraseFlash@flag,c
  1551  000672  5009               	movf	??_EraseFlash& (0+255),w,c
  1552  000674  C001  F00B         	movff	EraseFlash@startaddr,EraseFlash@flash_addr
  1553  000678  C002  F00C         	movff	EraseFlash@startaddr+1,EraseFlash@flash_addr+1
  1554  00067C  C003  F00D         	movff	EraseFlash@startaddr+2,EraseFlash@flash_addr+2
  1555  000680  C004  F00E         	movff	EraseFlash@startaddr+3,EraseFlash@flash_addr+3
  1556  000684  D025               	goto	l288
  1557  000686                     l289:
  1558  000686  C00D  FFF8         	movff	EraseFlash@flash_addr+2,tblptru	;volatile
  1559  00068A  C00C  FFF7         	movff	EraseFlash@flash_addr+1,tblptrh	;volatile
  1560  00068E  C00B  FFF6         	movff	EraseFlash@flash_addr,tblptrl	;volatile
  1561  000692  8EA6               	bsf	4006,7,c	;volatile
  1562  000694  9CA6               	bcf	4006,6,c	;volatile
  1563  000696  84A6               	bsf	4006,2,c	;volatile
  1564  000698  88A6               	bsf	4006,4,c	;volatile
  1565  00069A  AEF2               	btfss	intcon,7,c	;volatile
  1566  00069C  D005               	goto	l1407
  1567  00069E  9EF2               	bcf	intcon,7,c	;volatile
  1568  0006A0  6E09               	movwf	??_EraseFlash& (0+255),c
  1569  0006A2  0E01               	movlw	1
  1570  0006A4  6E0A               	movwf	EraseFlash@flag,c
  1571  0006A6  5009               	movf	??_EraseFlash& (0+255),w,c
  1572  0006A8                     l1407:
  1573  0006A8  0E55               	movlw	85
  1574  0006AA  6EA7               	movwf	4007,c	;volatile
  1575  0006AC  0EAA               	movlw	170
  1576  0006AE  6EA7               	movwf	4007,c	;volatile
  1577  0006B0  82A6               	bsf	4006,1,c	;volatile
  1578  0006B2  500A               	movf	EraseFlash@flag,w,c
  1579  0006B4  A4D8               	btfss	status,2,c
  1580  0006B6  8EF2               	bsf	intcon,7,c	;volatile
  1581  0006B8  0E40               	movlw	64
  1582  0006BA  240B               	addwf	EraseFlash@flash_addr,w,c
  1583  0006BC  6E0B               	movwf	EraseFlash@flash_addr,c
  1584  0006BE  0E00               	movlw	0
  1585  0006C0  200C               	addwfc	EraseFlash@flash_addr+1,w,c
  1586  0006C2  6E0C               	movwf	EraseFlash@flash_addr+1,c
  1587  0006C4  0E00               	movlw	0
  1588  0006C6  200D               	addwfc	EraseFlash@flash_addr+2,w,c
  1589  0006C8  6E0D               	movwf	EraseFlash@flash_addr+2,c
  1590  0006CA  0E00               	movlw	0
  1591  0006CC  200E               	addwfc	EraseFlash@flash_addr+3,w,c
  1592  0006CE  6E0E               	movwf	EraseFlash@flash_addr+3,c
  1593  0006D0                     l288:
  1594  0006D0  5005               	movf	EraseFlash@endaddr,w,c
  1595  0006D2  5C0B               	subwf	EraseFlash@flash_addr,w,c
  1596  0006D4  5006               	movf	EraseFlash@endaddr+1,w,c
  1597  0006D6  580C               	subwfb	EraseFlash@flash_addr+1,w,c
  1598  0006D8  5007               	movf	EraseFlash@endaddr+2,w,c
  1599  0006DA  580D               	subwfb	EraseFlash@flash_addr+2,w,c
  1600  0006DC  5008               	movf	EraseFlash@endaddr+3,w,c
  1601  0006DE  580E               	subwfb	EraseFlash@flash_addr+3,w,c
  1602  0006E0  B0D8               	btfsc	status,0,c
  1603  0006E2  0012               	return	
  1604  0006E4  D7D0               	goto	l289
  1605  0006E6                     __end_of_EraseFlash:
  1606                           	opt stack 0
  1607                           tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           prodh	equ	0xFF4
  1612                           prodl	equ	0xFF3
  1613                           intcon	equ	0xFF2
  1614                           postinc0	equ	0xFEE
  1615                           wreg	equ	0xFE8
  1616                           indf1	equ	0xFE7
  1617                           postdec1	equ	0xFE5
  1618                           fsr1h	equ	0xFE2
  1619                           fsr1l	equ	0xFE1
  1620                           indf2	equ	0xFDF
  1621                           fsr2h	equ	0xFDA
  1622                           fsr2l	equ	0xFD9
  1623                           status	equ	0xFD8
  1624                           
  1625 ;; *************** function _LED_Error *****************
  1626 ;; Defined at:
  1627 ;;		line 50 in file "LED.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  2   26[COMRAM] unsigned int 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1645 ;;Total ram usage:        1 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    1
  1648 ;; This function calls:
  1649 ;;		_LED_Control
  1650 ;; This function is called by:
  1651 ;;		_OdbierzRamke
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text5
  1656  000710                     __ptext5:
  1657                           	opt stack 0
  1658  000710                     _LED_Error:
  1659                           	opt stack 28
  1660                           
  1661                           ;LED.c: 51: LED_Control(RED,0b1010101010);
  1662                           
  1663                           ;incstack = 0
  1664                           ;incstack = 0
  1665  000710  6E06               	movwf	??_LED_Error& (0+255),c
  1666  000712  0E00               	movlw	0
  1667  000714  6E01               	movwf	?_LED_Control,c
  1668  000716  5006               	movf	??_LED_Error& (0+255),w,c
  1669  000718  0E02               	movlw	2
  1670  00071A  6E03               	movwf	?_LED_Control+2,c
  1671  00071C  0EAA               	movlw	170
  1672  00071E  6E02               	movwf	?_LED_Control+1,c
  1673  000720  EC03  F002         	call	_LED_Control	;wreg free
  1674                           
  1675                           ;LED.c: 52: LED_Control(GREEN,0b0000000000);
  1676  000724  6E06               	movwf	??_LED_Error& (0+255),c
  1677  000726  0E01               	movlw	1
  1678  000728  6E01               	movwf	?_LED_Control,c
  1679  00072A  5006               	movf	??_LED_Error& (0+255),w,c
  1680  00072C  0E00               	movlw	0
  1681  00072E  6E03               	movwf	?_LED_Control+2,c
  1682  000730  0E00               	movlw	0
  1683  000732  6E02               	movwf	?_LED_Control+1,c
  1684  000734  EC03  F002         	call	_LED_Control	;wreg free
  1685                           
  1686                           ;LED.c: 53: return 1;
  1687                           ;	Return value of _LED_Error is never used
  1688  000738  0012               	return	
  1689  00073A                     __end_of_LED_Error:
  1690                           	opt stack 0
  1691                           tblptru	equ	0xFF8
  1692                           tblptrh	equ	0xFF7
  1693                           tblptrl	equ	0xFF6
  1694                           tablat	equ	0xFF5
  1695                           prodh	equ	0xFF4
  1696                           prodl	equ	0xFF3
  1697                           intcon	equ	0xFF2
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           indf1	equ	0xFE7
  1701                           postdec1	equ	0xFE5
  1702                           fsr1h	equ	0xFE2
  1703                           fsr1l	equ	0xFE1
  1704                           indf2	equ	0xFDF
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _LED_Control *****************
  1710 ;; Defined at:
  1711 ;;		line 300 in file "LED.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  color           1    0[COMRAM] enum E16889
  1714 ;;  diode           2    1[COMRAM] unsigned int 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  cos             2    3[COMRAM] unsigned int 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      unsigned char 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1726 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;Total ram usage:        5 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_LED_Error
  1736 ;;		_LED_Clear
  1737 ;;		_LED_Update
  1738 ;;		_LED_Light_Pos
  1739 ;;		_INI_LED_Start
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text6
  1744  000406                     __ptext6:
  1745                           	opt stack 0
  1746  000406                     _LED_Control:
  1747                           	opt stack 29
  1748                           
  1749                           ;LED.c: 301: UINT cos =1;
  1750                           
  1751                           ;incstack = 0
  1752                           ;incstack = 0
  1753  000406  0E00               	movlw	0
  1754  000408  6E05               	movwf	LED_Control@cos+1,c
  1755  00040A  0E01               	movlw	1
  1756  00040C  6E04               	movwf	LED_Control@cos,c
  1757                           
  1758                           ;LED.c: 302: if(color == RED)
  1759  00040E  6601               	tstfsz	LED_Control@color,c
  1760  000410  D050               	goto	l231
  1761                           
  1762                           ;LED.c: 303: {
  1763                           ;LED.c: 305: if((diode & 0b0000000001)== 0b0000000001)
  1764  000412  A002               	btfss	LED_Control@diode,0,c
  1765  000414  D003               	goto	l1473
  1766                           
  1767                           ;LED.c: 306: {
  1768                           ;LED.c: 307: LATD = LATD | ~0b11101111;
  1769  000416  508C               	movf	3980,w,c	;volatile
  1770  000418  0910               	iorlw	16
  1771  00041A  D002               	goto	L4
  1772  00041C                     l1473:
  1773                           
  1774                           ;LED.c: 309: else
  1775                           ;LED.c: 310: {
  1776                           ;LED.c: 311: LATD = LATD &0b11101111;
  1777  00041C  508C               	movf	3980,w,c	;volatile
  1778  00041E  0BEF               	andlw	239
  1779  000420                     L4:
  1780  000420  6E8C               	movwf	3980,c	;volatile
  1781                           
  1782                           ;LED.c: 312: }
  1783                           ;LED.c: 314: if((diode & 0b0000000010) == 0b0000000010)
  1784  000422  A202               	btfss	LED_Control@diode,1,c
  1785  000424  D003               	goto	l1479
  1786                           
  1787                           ;LED.c: 315: {
  1788                           ;LED.c: 316: LATD = LATD | ~0b10111111;
  1789  000426  508C               	movf	3980,w,c	;volatile
  1790  000428  0940               	iorlw	64
  1791  00042A  D002               	goto	L5
  1792  00042C                     l1479:
  1793                           
  1794                           ;LED.c: 318: else
  1795                           ;LED.c: 319: {
  1796                           ;LED.c: 320: LATD = LATD & 0b10111111;
  1797  00042C  508C               	movf	3980,w,c	;volatile
  1798  00042E  0BBF               	andlw	191
  1799  000430                     L5:
  1800  000430  6E8C               	movwf	3980,c	;volatile
  1801                           
  1802                           ;LED.c: 321: }
  1803                           ;LED.c: 323: if((diode & 0b0000000100) == 0b0000000100)
  1804  000432  A402               	btfss	LED_Control@diode,2,c
  1805  000434  D003               	goto	l1485
  1806                           
  1807                           ;LED.c: 324: {
  1808                           ;LED.c: 325: LATB = LATB | ~0b11111110;
  1809  000436  508A               	movf	3978,w,c	;volatile
  1810  000438  0901               	iorlw	1
  1811  00043A  D002               	goto	L6
  1812  00043C                     l1485:
  1813                           
  1814                           ;LED.c: 327: else
  1815                           ;LED.c: 328: {
  1816                           ;LED.c: 329: LATB = LATB & 0b11111110;
  1817  00043C  508A               	movf	3978,w,c	;volatile
  1818  00043E  0BFE               	andlw	254
  1819  000440                     L6:
  1820  000440  6E8A               	movwf	3978,c	;volatile
  1821                           
  1822                           ;LED.c: 330: }
  1823                           ;LED.c: 333: if((diode & 0b0000001000) == 0b0000001000)
  1824  000442  A602               	btfss	LED_Control@diode,3,c
  1825  000444  D003               	goto	l1491
  1826                           
  1827                           ;LED.c: 334: {
  1828                           ;LED.c: 335: LATA = LATA | ~0b11111101;
  1829  000446  5089               	movf	3977,w,c	;volatile
  1830  000448  0902               	iorlw	2
  1831  00044A  D002               	goto	L7
  1832  00044C                     l1491:
  1833                           
  1834                           ;LED.c: 337: else
  1835                           ;LED.c: 338: {
  1836                           ;LED.c: 339: LATA = LATA & 0b11111101;
  1837  00044C  5089               	movf	3977,w,c	;volatile
  1838  00044E  0BFD               	andlw	253
  1839  000450                     L7:
  1840  000450  6E89               	movwf	3977,c	;volatile
  1841                           
  1842                           ;LED.c: 340: }
  1843                           ;LED.c: 343: if((diode & 0b0000010000) == 0b0000010000)
  1844  000452  A802               	btfss	LED_Control@diode,4,c
  1845  000454  D003               	goto	l1497
  1846                           
  1847                           ;LED.c: 344: {
  1848                           ;LED.c: 345: LATA = LATA | ~0b11110111;
  1849  000456  5089               	movf	3977,w,c	;volatile
  1850  000458  0908               	iorlw	8
  1851  00045A  D002               	goto	L8
  1852  00045C                     l1497:
  1853                           
  1854                           ;LED.c: 347: else
  1855                           ;LED.c: 348: {
  1856                           ;LED.c: 349: LATA = LATA & 0b11110111;
  1857  00045C  5089               	movf	3977,w,c	;volatile
  1858  00045E  0BF7               	andlw	247
  1859  000460                     L8:
  1860  000460  6E89               	movwf	3977,c	;volatile
  1861                           
  1862                           ;LED.c: 350: }
  1863                           ;LED.c: 353: if((diode & 0b0000100000) == 0b0000100000)
  1864  000462  AA02               	btfss	LED_Control@diode,5,c
  1865  000464  D003               	goto	l1503
  1866                           
  1867                           ;LED.c: 354: {
  1868                           ;LED.c: 355: LATA = LATA | ~0b11011111;
  1869  000466  5089               	movf	3977,w,c	;volatile
  1870  000468  0920               	iorlw	32
  1871  00046A  D002               	goto	L9
  1872  00046C                     l1503:
  1873                           
  1874                           ;LED.c: 357: else
  1875                           ;LED.c: 358: {
  1876                           ;LED.c: 359: LATA = LATA & 0b11011111;
  1877  00046C  5089               	movf	3977,w,c	;volatile
  1878  00046E  0BDF               	andlw	223
  1879  000470                     L9:
  1880  000470  6E89               	movwf	3977,c	;volatile
  1881                           
  1882                           ;LED.c: 360: }
  1883                           ;LED.c: 362: if((diode & 0b0001000000) == 0b0001000000)
  1884  000472  AC02               	btfss	LED_Control@diode,6,c
  1885  000474  D003               	goto	l1509
  1886                           
  1887                           ;LED.c: 363: {
  1888                           ;LED.c: 364: LATE = LATE | ~0b11111101;
  1889  000476  508D               	movf	3981,w,c	;volatile
  1890  000478  0902               	iorlw	2
  1891  00047A  D002               	goto	L10
  1892  00047C                     l1509:
  1893                           
  1894                           ;LED.c: 366: else
  1895                           ;LED.c: 367: {
  1896                           ;LED.c: 368: LATE = LATE & 0b11111101;
  1897  00047C  508D               	movf	3981,w,c	;volatile
  1898  00047E  0BFD               	andlw	253
  1899  000480                     L10:
  1900  000480  6E8D               	movwf	3981,c	;volatile
  1901                           
  1902                           ;LED.c: 369: }
  1903                           ;LED.c: 371: if((diode & 0b0010000000) == 0b0010000000)
  1904  000482  AE02               	btfss	LED_Control@diode,7,c
  1905  000484  D003               	goto	l1515
  1906                           
  1907                           ;LED.c: 372: {
  1908                           ;LED.c: 373: LATA = LATA | ~0b01111111;
  1909  000486  5089               	movf	3977,w,c	;volatile
  1910  000488  0980               	iorlw	128
  1911  00048A  D002               	goto	L11
  1912  00048C                     l1515:
  1913                           
  1914                           ;LED.c: 375: else
  1915                           ;LED.c: 376: {
  1916                           ;LED.c: 377: LATA = LATA & 0b01111111;
  1917  00048C  5089               	movf	3977,w,c	;volatile
  1918  00048E  0B7F               	andlw	127
  1919  000490                     L11:
  1920  000490  6E89               	movwf	3977,c	;volatile
  1921                           
  1922                           ;LED.c: 378: }
  1923                           ;LED.c: 381: if((diode & 0b0100000000) == 0b0100000000)
  1924  000492  A003               	btfss	LED_Control@diode+1,0,c
  1925  000494  D003               	goto	l1521
  1926                           
  1927                           ;LED.c: 382: {
  1928                           ;LED.c: 383: LATD = LATD | ~0b11111110;
  1929  000496  508C               	movf	3980,w,c	;volatile
  1930  000498  0901               	iorlw	1
  1931  00049A  D002               	goto	L12
  1932  00049C                     l1521:
  1933                           
  1934                           ;LED.c: 385: else
  1935                           ;LED.c: 386: {
  1936                           ;LED.c: 387: LATD = LATD & 0b11111110;
  1937  00049C  508C               	movf	3980,w,c	;volatile
  1938  00049E  0BFE               	andlw	254
  1939  0004A0                     L12:
  1940  0004A0  6E8C               	movwf	3980,c	;volatile
  1941                           
  1942                           ;LED.c: 388: }
  1943                           ;LED.c: 390: if((diode & 0b1000000000) == 0b1000000000)
  1944  0004A2  A203               	btfss	LED_Control@diode+1,1,c
  1945  0004A4  D003               	goto	l1527
  1946                           
  1947                           ;LED.c: 391: {
  1948                           ;LED.c: 392: LATD = LATD | ~0b11111011;
  1949  0004A6  508C               	movf	3980,w,c	;volatile
  1950  0004A8  0904               	iorlw	4
  1951  0004AA  D002               	goto	L13
  1952  0004AC                     l1527:
  1953                           
  1954                           ;LED.c: 394: else
  1955                           ;LED.c: 395: {
  1956                           ;LED.c: 396: LATD = LATD & 0b11111011;
  1957  0004AC  508C               	movf	3980,w,c	;volatile
  1958  0004AE  0BFB               	andlw	251
  1959  0004B0                     L13:
  1960  0004B0  6E8C               	movwf	3980,c	;volatile
  1961  0004B2                     l231:
  1962                           
  1963                           ;LED.c: 397: }
  1964                           ;LED.c: 399: }
  1965                           ;LED.c: 401: if(color == GREEN)
  1966  0004B2  0401               	decf	LED_Control@color,w,c
  1967  0004B4  A4D8               	btfss	status,2,c
  1968  0004B6  D050               	goto	l273
  1969                           
  1970                           ;LED.c: 402: {
  1971                           ;LED.c: 404: if((diode & 0b0000000001) == 0b0000000001)
  1972  0004B8  A002               	btfss	LED_Control@diode,0,c
  1973  0004BA  D003               	goto	l1533
  1974                           
  1975                           ;LED.c: 405: {
  1976                           ;LED.c: 406: LATD = LATD | ~0b11011111;
  1977  0004BC  508C               	movf	3980,w,c	;volatile
  1978  0004BE  0920               	iorlw	32
  1979  0004C0  D002               	goto	L14
  1980  0004C2                     l1533:
  1981                           
  1982                           ;LED.c: 408: else
  1983                           ;LED.c: 409: {
  1984                           ;LED.c: 410: LATD = LATD & 0b11011111;
  1985  0004C2  508C               	movf	3980,w,c	;volatile
  1986  0004C4  0BDF               	andlw	223
  1987  0004C6                     L14:
  1988  0004C6  6E8C               	movwf	3980,c	;volatile
  1989                           
  1990                           ;LED.c: 411: }
  1991                           ;LED.c: 414: if((diode & 0b0000000010) == 0b0000000010)
  1992  0004C8  A202               	btfss	LED_Control@diode,1,c
  1993  0004CA  D003               	goto	l1539
  1994                           
  1995                           ;LED.c: 415: {
  1996                           ;LED.c: 416: LATD = LATD | ~0b01111111;
  1997  0004CC  508C               	movf	3980,w,c	;volatile
  1998  0004CE  0980               	iorlw	128
  1999  0004D0  D002               	goto	L15
  2000  0004D2                     l1539:
  2001                           
  2002                           ;LED.c: 418: else
  2003                           ;LED.c: 419: {
  2004                           ;LED.c: 420: LATD = LATD & 0b01111111;
  2005  0004D2  508C               	movf	3980,w,c	;volatile
  2006  0004D4  0B7F               	andlw	127
  2007  0004D6                     L15:
  2008  0004D6  6E8C               	movwf	3980,c	;volatile
  2009                           
  2010                           ;LED.c: 421: }
  2011                           ;LED.c: 424: if((diode & 0b0000000100) == 0b0000000100)
  2012  0004D8  A402               	btfss	LED_Control@diode,2,c
  2013  0004DA  D003               	goto	l1545
  2014                           
  2015                           ;LED.c: 425: {
  2016                           ;LED.c: 426: LATB = LATB | ~0b11111101;
  2017  0004DC  508A               	movf	3978,w,c	;volatile
  2018  0004DE  0902               	iorlw	2
  2019  0004E0  D002               	goto	L16
  2020  0004E2                     l1545:
  2021                           
  2022                           ;LED.c: 428: else
  2023                           ;LED.c: 429: {
  2024                           ;LED.c: 430: LATB = LATB & 0b11111101;
  2025  0004E2  508A               	movf	3978,w,c	;volatile
  2026  0004E4  0BFD               	andlw	253
  2027  0004E6                     L16:
  2028  0004E6  6E8A               	movwf	3978,c	;volatile
  2029                           
  2030                           ;LED.c: 431: }
  2031                           ;LED.c: 433: if((diode & 0b0000001000) == 0b0000001000)
  2032  0004E8  A602               	btfss	LED_Control@diode,3,c
  2033  0004EA  D003               	goto	l1551
  2034                           
  2035                           ;LED.c: 434: {
  2036                           ;LED.c: 435: LATA = LATA | ~0b11111011;
  2037  0004EC  5089               	movf	3977,w,c	;volatile
  2038  0004EE  0904               	iorlw	4
  2039  0004F0  D002               	goto	L17
  2040  0004F2                     l1551:
  2041                           
  2042                           ;LED.c: 437: else
  2043                           ;LED.c: 438: {
  2044                           ;LED.c: 439: LATA = LATA & 0b11111011;
  2045  0004F2  5089               	movf	3977,w,c	;volatile
  2046  0004F4  0BFB               	andlw	251
  2047  0004F6                     L17:
  2048  0004F6  6E89               	movwf	3977,c	;volatile
  2049                           
  2050                           ;LED.c: 440: }
  2051                           ;LED.c: 443: if((diode & 0b0000010000) == 0b0000010000)
  2052  0004F8  A802               	btfss	LED_Control@diode,4,c
  2053  0004FA  D003               	goto	l1557
  2054                           
  2055                           ;LED.c: 444: {
  2056                           ;LED.c: 445: LATA = LATA | ~0b11101111;
  2057  0004FC  5089               	movf	3977,w,c	;volatile
  2058  0004FE  0910               	iorlw	16
  2059  000500  D002               	goto	L18
  2060  000502                     l1557:
  2061                           
  2062                           ;LED.c: 447: else
  2063                           ;LED.c: 448: {
  2064                           ;LED.c: 449: LATA = LATA & 0b11101111;
  2065  000502  5089               	movf	3977,w,c	;volatile
  2066  000504  0BEF               	andlw	239
  2067  000506                     L18:
  2068  000506  6E89               	movwf	3977,c	;volatile
  2069                           
  2070                           ;LED.c: 450: }
  2071                           ;LED.c: 453: if((diode & 0b0000100000) == 0b0000100000)
  2072  000508  AA02               	btfss	LED_Control@diode,5,c
  2073  00050A  D003               	goto	l1563
  2074                           
  2075                           ;LED.c: 454: {
  2076                           ;LED.c: 455: LATE = LATE | ~0b11111110;
  2077  00050C  508D               	movf	3981,w,c	;volatile
  2078  00050E  0901               	iorlw	1
  2079  000510  D002               	goto	L19
  2080  000512                     l1563:
  2081                           
  2082                           ;LED.c: 457: else
  2083                           ;LED.c: 458: {
  2084                           ;LED.c: 459: LATE = LATE & 0b11111110;
  2085  000512  508D               	movf	3981,w,c	;volatile
  2086  000514  0BFE               	andlw	254
  2087  000516                     L19:
  2088  000516  6E8D               	movwf	3981,c	;volatile
  2089                           
  2090                           ;LED.c: 460: }
  2091                           ;LED.c: 463: if((diode & 0b0001000000) == 0b0001000000)
  2092  000518  AC02               	btfss	LED_Control@diode,6,c
  2093  00051A  D003               	goto	l1569
  2094                           
  2095                           ;LED.c: 464: {
  2096                           ;LED.c: 465: LATE = LATE | ~0b11111011;
  2097  00051C  508D               	movf	3981,w,c	;volatile
  2098  00051E  0904               	iorlw	4
  2099  000520  D002               	goto	L20
  2100  000522                     l1569:
  2101                           
  2102                           ;LED.c: 467: else
  2103                           ;LED.c: 468: {
  2104                           ;LED.c: 469: LATE = LATE & 0b11111011;
  2105  000522  508D               	movf	3981,w,c	;volatile
  2106  000524  0BFB               	andlw	251
  2107  000526                     L20:
  2108  000526  6E8D               	movwf	3981,c	;volatile
  2109                           
  2110                           ;LED.c: 470: }
  2111                           ;LED.c: 472: if((diode & 0b0010000000) == 0b0010000000)
  2112  000528  AE02               	btfss	LED_Control@diode,7,c
  2113  00052A  D003               	goto	l1575
  2114                           
  2115                           ;LED.c: 473: {
  2116                           ;LED.c: 474: LATA = LATA | ~0b10111111;
  2117  00052C  5089               	movf	3977,w,c	;volatile
  2118  00052E  0940               	iorlw	64
  2119  000530  D002               	goto	L21
  2120  000532                     l1575:
  2121                           
  2122                           ;LED.c: 476: else
  2123                           ;LED.c: 477: {
  2124                           ;LED.c: 478: LATA = LATA & 0b10111111;
  2125  000532  5089               	movf	3977,w,c	;volatile
  2126  000534  0BBF               	andlw	191
  2127  000536                     L21:
  2128  000536  6E89               	movwf	3977,c	;volatile
  2129                           
  2130                           ;LED.c: 479: }
  2131                           ;LED.c: 481: if((diode & 0b0100000000) == 0b0100000000)
  2132  000538  A003               	btfss	LED_Control@diode+1,0,c
  2133  00053A  D003               	goto	l1581
  2134                           
  2135                           ;LED.c: 482: {
  2136                           ;LED.c: 483: LATD = LATD | ~0b11111101;
  2137  00053C  508C               	movf	3980,w,c	;volatile
  2138  00053E  0902               	iorlw	2
  2139  000540  D002               	goto	L22
  2140  000542                     l1581:
  2141                           
  2142                           ;LED.c: 485: else
  2143                           ;LED.c: 486: {
  2144                           ;LED.c: 487: LATD = LATD & 0b11111101;
  2145  000542  508C               	movf	3980,w,c	;volatile
  2146  000544  0BFD               	andlw	253
  2147  000546                     L22:
  2148  000546  6E8C               	movwf	3980,c	;volatile
  2149                           
  2150                           ;LED.c: 488: }
  2151                           ;LED.c: 490: if((diode & 0b1000000000) == 0b1000000000)
  2152  000548  A203               	btfss	LED_Control@diode+1,1,c
  2153  00054A  D003               	goto	l1587
  2154                           
  2155                           ;LED.c: 491: {
  2156                           ;LED.c: 492: LATD = LATD | ~0b11110111;
  2157  00054C  508C               	movf	3980,w,c	;volatile
  2158  00054E  0908               	iorlw	8
  2159  000550  D002               	goto	L23
  2160  000552                     l1587:
  2161                           
  2162                           ;LED.c: 494: else
  2163                           ;LED.c: 495: {
  2164                           ;LED.c: 496: LATD = LATD &0b11110111;
  2165  000552  508C               	movf	3980,w,c	;volatile
  2166  000554  0BF7               	andlw	247
  2167  000556                     L23:
  2168  000556  6E8C               	movwf	3980,c	;volatile
  2169  000558                     l273:
  2170  000558  0012               	return	
  2171  00055A                     __end_of_LED_Control:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           intcon	equ	0xFF2
  2180                           postinc0	equ	0xFEE
  2181                           wreg	equ	0xFE8
  2182                           indf1	equ	0xFE7
  2183                           postdec1	equ	0xFE5
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           indf2	equ	0xFDF
  2187                           fsr2h	equ	0xFDA
  2188                           fsr2l	equ	0xFD9
  2189                           status	equ	0xFD8
  2190                           
  2191 ;; *************** function _ResetDevice *****************
  2192 ;; Defined at:
  2193 ;;		line 215 in file "main.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;		None               void
  2200 ;; Registers used:
  2201 ;;		None
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_OdbierzRamke
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text7
  2222  00000C                     __ptext7:
  2223                           	opt stack 0
  2224  00000C                     _ResetDevice:
  2225                           	opt stack 30
  2226                           
  2227                           ;incstack = 0
  2228                           ;incstack = 0
  2229  00000C  EF00 F006          	goto	3072	;# 
  2230  000010  0012               	return	
  2231  000012                     __end_of_ResetDevice:
  2232                           	opt stack 0
  2233  0000                     tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           prodh	equ	0xFF4
  2238                           prodl	equ	0xFF3
  2239                           intcon	equ	0xFF2
  2240                           postinc0	equ	0xFEE
  2241                           wreg	equ	0xFE8
  2242                           indf1	equ	0xFE7
  2243                           postdec1	equ	0xFE5
  2244                           fsr1h	equ	0xFE2
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           prodh	equ	0xFF4
  2255                           prodl	equ	0xFF3
  2256                           intcon	equ	0xFF2
  2257                           postinc0	equ	0xFEE
  2258                           wreg	equ	0xFE8
  2259                           indf1	equ	0xFE7
  2260                           postdec1	equ	0xFE5
  2261                           fsr1h	equ	0xFE2
  2262                           fsr1l	equ	0xFE1
  2263                           indf2	equ	0xFDF
  2264                           fsr2h	equ	0xFDA
  2265                           fsr2l	equ	0xFD9
  2266                           status	equ	0xFD8
  2267                           
  2268                           	psect	rparam
  2269  0000                     tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           prodh	equ	0xFF4
  2274                           prodl	equ	0xFF3
  2275                           intcon	equ	0xFF2
  2276                           postinc0	equ	0xFEE
  2277                           wreg	equ	0xFE8
  2278                           indf1	equ	0xFE7
  2279                           postdec1	equ	0xFE5
  2280                           fsr1h	equ	0xFE2
  2281                           fsr1l	equ	0xFE1
  2282                           indf2	equ	0xFDF
  2283                           fsr2h	equ	0xFDA
  2284                           fsr2l	equ	0xFD9
  2285                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      46
    BANK0           160      0      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    WriteBytesFlash@saveptr	PTR unsigned char  size(3) Largest target is 2047
		 -> ROM(CODE[2047]), 

    WriteBytesFlash@flash_array	PTR unsigned char  size(2) Largest target is 65
		 -> buforCAN(BANK0[65]), 

    WriteBytesFlash@startptr	PTR unsigned char  size(3) Largest target is 2047
		 -> ROM(CODE[2047]), 

    OdbierzRamke@pointerU8	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXB0D0(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_OdbierzRamke
    _LED_Clear->_LED_Control
    _OdbierzRamke->_WriteBytesFlash
    _LED_Error->_LED_Control

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1778
                                             28 COMRAM     2     2      0
                       _OdbierzRamke
                        _ResetDevice
                          _LED_Clear
 ---------------------------------------------------------------------------------
 (1) _LED_Clear                                            1     1      0     485
                                              5 COMRAM     1     1      0
                        _LED_Control
 ---------------------------------------------------------------------------------
 (1) _OdbierzRamke                                         9     9      0    1270
                                             21 COMRAM     7     7      0
                        _ResetDevice
                          _LED_Error
                         _EraseFlash
                    _WriteBytesFlash
 ---------------------------------------------------------------------------------
 (2) _WriteBytesFlash                                     21    13      8     302
                                              0 COMRAM    21    13      8
 ---------------------------------------------------------------------------------
 (2) _EraseFlash                                          14     6      8     182
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _LED_Error                                            1     1      0     485
                                              5 COMRAM     1     1      0
                        _LED_Control
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          5     2      3     485
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _ResetDevice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OdbierzRamke
     _ResetDevice
     _LED_Error
       _LED_Control
     _EraseFlash
     _WriteBytesFlash
   _ResetDevice
   _LED_Clear
     _LED_Control

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      41       5       40.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      2E       1       48.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       3       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      20        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Tue Aug 20 13:28:29 2019

                        l98 0036                          l99 0098                 __CFG_BORV$3 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                         l100 003C                         l101 0042  
                       l102 0048                         l103 004E                         l104 0054  
                       l105 005A                         l106 0060                         l231 04B2  
                       l303 05B6                         l128 0254                         l307 0604  
                       l309 064C                         l273 0558                         l288 06D0  
                       l289 0686                __CFG_CPB$OFF 000000                __CFG_CPD$OFF 000000  
                       u565 057E                         u575 058E                         u945 0120  
                       prod 000FF3                ?_LED_Control 0001                         wreg 000FE8  
              __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000                        l1503 046C  
                      l1407 06A8                        l1431 05C4                        l1521 049C  
                      l1441 05FC                        l1515 048C                        l1533 04C2  
                      l1509 047C                        l1551 04F2                        l1527 04AC  
                      l1447 0630                        l1463 0662                        l1703 014E  
                      l1545 04E2                        l1473 041C                        l1721 01E6  
                      l1713 01C4                        l1563 0512                        l1539 04D2  
                      l1491 044C                        l1731 0218                        l1723 01F0  
                      l1581 0542                        l1557 0502                        l1485 043C  
                      l1725 01FA                        l1717 01D8                        l1661 0066  
                      l1821 0368                        l1575 0532                        l1479 042C  
                      l1727 0204                        l1719 01DE                        l1735 0222  
                      l1831 0398                        l1569 0522                        l1497 045C  
                      l1729 020E                        l1587 0552                        l1693 012C  
                      l1685 00F0                        l1669 00AE                        l1769 0296  
                      l1699 0140                        _LATA 000F89                        _LATB 000F8A  
                      _LATD 000F8C                        _LATE 000F8D                        _LOCK 0024  
                      _RCON 000FD0                        _TMR0 000FD6            LED_Control@diode 0002  
             ?_OdbierzRamke 0001                        _main 0256            LED_Control@color 0001  
                      fsr2h 000FDA                        indf1 000FE7                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9          __size_of_LED_Clear 002A  
                      prodh 000FF4                        prodl 000FF3                        start 001C  
        __size_of_LED_Error 002A               __CFG_IESO$OFF 000000      WriteBytesFlash@saveptr 000A  
             __CFG_MCLRE$ON 000000                       _B0CON 000E20                       _B1CON 000E30  
                     _B2CON 000E40                       _B3CON 000E50                       _B4CON 000E60  
                     _B5CON 000E70                       ?_main 0001                       _T0CON 000FD5  
                     _MSEL0 000DF0                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000                  _EraseFlash 066C               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
   WriteBytesFlash@saddress 0012                       tablat 000FF5              ??_OdbierzRamke 0016  
                     status 000FD8              __CFG_PBADEN$ON 000000             __initialization 03B4  
   WriteBytesFlash@startptr 000F                __end_of_main 03B4                      ??_main 001D  
             __activetblptr 000002           __end_of_LED_Clear 0710           __end_of_LED_Error 073A  
 WriteBytesFlash@write_byte 000D               ??_ResetDevice 0001                      _CANCON 000F6F  
                    _EECON2 000FA7             __CFG_BBSIZ$1024 000000           EraseFlash@endaddr 0005  
                    _RXB0D0 000F66              __CFG_XINST$OFF 000000              __CFG_STVREN$ON 000000  
                    clear_0 03BA                      clear_1 03C6             __CFG_BOREN$BOHW 000000  
              __pdataCOMRAM 0028                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                 ?_EraseFlash 0001        __size_of_LED_Control 0154  
                _SourceAddr 001F                  __accesstop 0060     __end_of__initialization 03EC  
  WriteBytesFlash@num_bytes 0005         __end_of_ResetDevice 0012              __pcstackCOMRAM 0001  
  WriteBytesFlash@startaddr 0001        __end_of_OdbierzRamke 0256                  __pbssBANK0 0060  
       __size_of_EraseFlash 007A    __size_of_WriteBytesFlash 0112                     _ECANCON 000F77  
                   _CANSTAT 000F6E               OdbierzRamke@i 001C               OdbierzRamke@k 001A  
                   _TBLPTRH 000FF7                     _TBLPTRL 000FF6                     _TBLPTRU 000FF8  
                   _RXB0CON 000F60                     _RXB1CON 000F50                     _RXFCON0 000DD4  
                   _RXFCON1 000DD5                 _ResetDevice 000C                     __Hparam 0000  
                   __Lparam 0000                     __pcinit 03B4                     __ramtop 0D00  
                   __ptext0 0256                     __ptext1 06E6                     __ptext2 0020  
                   __ptext3 055A                     __ptext4 066C                     __ptext5 0710  
                   __ptext6 0406                     __ptext7 000C                   _T0CONbits 000FD5  
                   _counter 0025                   _LED_Clear 06E6                   _LED_Error 0710  
      end_of_initialization 03EC        EraseFlash@flash_addr 000B               __Lmediumconst 0000  
     OdbierzRamke@pointerU8 0018                     postdec1 000FE5       __size_of_OdbierzRamke 0236  
                   postinc0 000FEE               LED_Update@Red 0023           ??_WriteBytesFlash 0009  
                 _TRISAbits 000F92                   _TRISCbits 000F94                ??_EraseFlash 0009  
                ?_LED_Clear 0001                  ?_LED_Error 0001                _OdbierzRamke 0020  
        __end_of_EraseFlash 06E6  WriteBytesFlash@flash_array 0007               __pidataCOMRAM 03F6  
             ??_LED_Control 0004         start_initialization 03B4            __CFG_OSC$IRCIO67 000000  
          __CFG_LPT1OSC$OFF 000000         OdbierzRamke@tempCON 001B             _Fulfillment_Lvl 002C  
               __pbssCOMRAM 001F                 _BRGCON1bits 000F70                 _BRGCON2bits 000F71  
               _BRGCON3bits 000F72                 ??_LED_Clear 0006                ?_ResetDevice 0001  
               ??_LED_Error 0006         __end_of_LED_Control 055A            __CFG_WDTPS$32768 000000  
                  _RXF0EIDH 000F02                    _RXF0EIDL 000F03             _WriteBytesFlash 055A  
                  _RXF0SIDH 000F00                    _RXF0SIDL 000F01                    _RXM0EIDH 000F1A  
                  _RXM0EIDL 000F1B                    _RXM0SIDH 000F18                    _RXM0SIDL 000F19  
                 main@Delay 001E              LED_Control@cos 0004                 _LED_Control 0406  
            EraseFlash@flag 000A                   copy_data0 03E0                  _EECON1bits 000FA6  
                  __Hrparam 0000                    __Lrparam 0000         EraseFlash@startaddr 0001  
               _iloscBajtow 0026          _ramekInicjalizacji 0027                _RXF0SIDLbits 000F01  
                  _buforCAN 0060        __size_of_ResetDevice 0006               __size_of_main 015E  
   __end_of_WriteBytesFlash 066C         WriteBytesFlash@flag 000E                  _INTCONbits 000FF2  
           LED_Update@Green 002E              LED_Update@pos1 0028              LED_Update@pos2 002A  
          ?_WriteBytesFlash 0001  
