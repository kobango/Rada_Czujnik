

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Jul 31 13:53:46 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataCOMRAM,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	intcode
    25  000008  EF04 F006          	goto	3080	;# 
    26                           
    27                           	psect	intcodelo
    28  000018  EF0C F006          	goto	3096	;# 
    29  0000                     
    30                           	psect	idataCOMRAM
    31  0003F2                     __pidataCOMRAM:
    32                           	opt stack 0
    33                           
    34                           ;initializer for LED_Update@pos1
    35  0003F2  0001               	dw	1
    36                           
    37                           ;initializer for LED_Update@pos2
    38  0003F4  0001               	dw	1
    39                           
    40                           ;initializer for _Fulfillment_Lvl
    41  0003F6  0014               	dw	20
    42                           
    43                           ;initializer for LED_Update@Green
    44  0003F8  01                 	db	1
    45  0000                     _TMR0	set	4054
    46  0000                     _B0CON	set	3616
    47  0000                     _B1CON	set	3632
    48  0000                     _B2CON	set	3648
    49  0000                     _B3CON	set	3664
    50  0000                     _B4CON	set	3680
    51  0000                     _B5CON	set	3696
    52  0000                     _BRGCON1bits	set	3952
    53  0000                     _BRGCON2bits	set	3953
    54  0000                     _BRGCON3bits	set	3954
    55  0000                     _CANCON	set	3951
    56  0000                     _CANSTAT	set	3950
    57  0000                     _ECANCON	set	3959
    58  0000                     _EECON1bits	set	4006
    59  0000                     _EECON2	set	4007
    60  0000                     _INTCONbits	set	4082
    61  0000                     _LATA	set	3977
    62  0000                     _LATB	set	3978
    63  0000                     _LATD	set	3980
    64  0000                     _LATE	set	3981
    65  0000                     _MSEL0	set	3568
    66  0000                     _RCON	set	4048
    67  0000                     _RXB0CON	set	3936
    68  0000                     _RXB1CON	set	3920
    69  0000                     _RXF0EIDH	set	3842
    70  0000                     _RXF0EIDL	set	3843
    71  0000                     _RXF0SIDH	set	3840
    72  0000                     _RXF0SIDL	set	3841
    73  0000                     _RXF0SIDLbits	set	3841
    74  0000                     _RXFCON0	set	3540
    75  0000                     _RXFCON1	set	3541
    76  0000                     _RXM0EIDH	set	3866
    77  0000                     _RXM0EIDL	set	3867
    78  0000                     _RXM0SIDH	set	3864
    79  0000                     _RXM0SIDL	set	3865
    80  0000                     _T0CON	set	4053
    81  0000                     _T0CONbits	set	4053
    82  0000                     _TBLPTRH	set	4087
    83  0000                     _TBLPTRL	set	4086
    84  0000                     _TBLPTRU	set	4088
    85  0000                     _TRISA	set	3986
    86  0000                     _TRISAbits	set	3986
    87  0000                     _TRISB	set	3987
    88  0000                     _TRISC	set	3988
    89  0000                     _TRISCbits	set	3988
    90  0000                     _TRISD	set	3989
    91  0000                     _TRISE	set	3990
    92  0000                     _RXB0D0	set	3942
    93                           
    94                           ; #config settings
    95  0000                     
    96                           	psect	cinit
    97  0003B0                     __pcinit:
    98                           	opt stack 0
    99  0003B0                     start_initialization:
   100                           	opt stack 0
   101  0003B0                     __initialization:
   102                           	opt stack 0
   103                           
   104                           ; Clear objects allocated to BANK0 (65 bytes)
   105  0003B0  EE00  F060         	lfsr	0,__pbssBANK0
   106  0003B4  0E41               	movlw	65
   107  0003B6                     clear_0:
   108  0003B6  6AEE               	clrf	postinc0,c
   109  0003B8  06E8               	decf	wreg,f,c
   110  0003BA  E1FD               	bnz	clear_0
   111                           
   112                           ; Clear objects allocated to COMRAM (9 bytes)
   113  0003BC  EE00  F01F         	lfsr	0,__pbssCOMRAM
   114  0003C0  0E09               	movlw	9
   115  0003C2                     clear_1:
   116  0003C2  6AEE               	clrf	postinc0,c
   117  0003C4  06E8               	decf	wreg,f,c
   118  0003C6  E1FD               	bnz	clear_1
   119                           
   120                           ; Initialize objects allocated to COMRAM (7 bytes)
   121                           ; load TBLPTR registers with __pidataCOMRAM
   122  0003C8  0EF2               	movlw	low __pidataCOMRAM
   123  0003CA  6EF6               	movwf	tblptrl,c
   124  0003CC  0E03               	movlw	high __pidataCOMRAM
   125  0003CE  6EF7               	movwf	tblptrh,c
   126  0003D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   127  0003D2  6EF8               	movwf	tblptru,c
   128  0003D4  EE00  F028         	lfsr	0,__pdataCOMRAM
   129  0003D8  EE10 F007          	lfsr	1,7
   130  0003DC                     copy_data0:
   131  0003DC  0009               	tblrd		*+
   132  0003DE  CFF5 FFEE          	movff	tablat,postinc0
   133  0003E2  50E5               	movf	postdec1,w,c
   134  0003E4  50E1               	movf	fsr1l,w,c
   135  0003E6  E1FA               	bnz	copy_data0
   136  0003E8                     end_of_initialization:
   137                           	opt stack 0
   138  0003E8                     __end_of__initialization:
   139                           	opt stack 0
   140  0003E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  0003EA  6EF8               	movwf	tblptru,c
   142  0003EC  0100               	movlb	0
   143  0003EE  EF2B  F001         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           postdec1	equ	0xFE5
   151                           fsr1l	equ	0xFE1
   152                           
   153                           	psect	bssCOMRAM
   154  00001F                     __pbssCOMRAM:
   155                           	opt stack 0
   156  00001F                     _SourceAddr:
   157                           	opt stack 0
   158  00001F                     	ds	4
   159  000023                     	ds	1
   160  000024                     _LOCK:
   161                           	opt stack 0
   162  000024                     	ds	1
   163  000025                     _counter:
   164                           	opt stack 0
   165  000025                     	ds	1
   166  000026                     _iloscBajtow:
   167                           	opt stack 0
   168  000026                     	ds	1
   169  000027                     _ramekInicjalizacji:
   170                           	opt stack 0
   171  000027                     	ds	1
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	dataCOMRAM
   182  000028                     __pdataCOMRAM:
   183                           	opt stack 0
   184  000028                     LED_Update@pos1:
   185                           	opt stack 0
   186  000028                     	ds	2
   187  00002A                     LED_Update@pos2:
   188                           	opt stack 0
   189  00002A                     	ds	2
   190  00002C                     _Fulfillment_Lvl:
   191                           	opt stack 0
   192  00002C                     	ds	2
   193  00002E                     LED_Update@Green:
   194                           	opt stack 0
   195  00002E                     	ds	1
   196                           tblptru	equ	0xFF8
   197                           tblptrh	equ	0xFF7
   198                           tblptrl	equ	0xFF6
   199                           tablat	equ	0xFF5
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           postdec1	equ	0xFE5
   203                           fsr1l	equ	0xFE1
   204                           
   205                           	psect	bssBANK0
   206  000060                     __pbssBANK0:
   207                           	opt stack 0
   208  000060                     _buforCAN:
   209                           	opt stack 0
   210  000060                     	ds	65
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           postdec1	equ	0xFE5
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	cstackCOMRAM
   221  000001                     __pcstackCOMRAM:
   222                           	opt stack 0
   223  000001                     ?_EraseFlash:
   224                           	opt stack 0
   225  000001                     ?_WriteBytesFlash:
   226                           	opt stack 0
   227  000001                     ?_LED_Control:
   228                           	opt stack 0
   229  000001                     LED_Control@color:
   230                           	opt stack 0
   231  000001                     EraseFlash@startaddr:
   232                           	opt stack 0
   233  000001                     WriteBytesFlash@startaddr:
   234                           	opt stack 0
   235                           
   236                           ; 4 bytes @ 0x0
   237  000001                     	ds	1
   238  000002                     LED_Control@diode:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x1
   242  000002                     	ds	2
   243  000004                     LED_Control@cos:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x3
   247  000004                     	ds	1
   248  000005                     WriteBytesFlash@num_bytes:
   249                           	opt stack 0
   250  000005                     EraseFlash@endaddr:
   251                           	opt stack 0
   252                           
   253                           ; 4 bytes @ 0x4
   254  000005                     	ds	1
   255  000006                     ??_LED_Error:
   256  000006                     ??_LED_Clear:
   257                           
   258                           ; 0 bytes @ 0x5
   259  000006                     	ds	1
   260  000007                     WriteBytesFlash@flash_array:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x6
   264  000007                     	ds	2
   265  000009                     ??_EraseFlash:
   266  000009                     ??_WriteBytesFlash:
   267                           
   268                           ; 0 bytes @ 0x8
   269  000009                     	ds	1
   270  00000A                     EraseFlash@flag:
   271                           	opt stack 0
   272  00000A                     WriteBytesFlash@saveptr:
   273                           	opt stack 0
   274                           
   275                           ; 3 bytes @ 0x9
   276  00000A                     	ds	1
   277  00000B                     EraseFlash@flash_addr:
   278                           	opt stack 0
   279                           
   280                           ; 4 bytes @ 0xA
   281  00000B                     	ds	2
   282  00000D                     WriteBytesFlash@write_byte:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0xC
   286  00000D                     	ds	1
   287  00000E                     WriteBytesFlash@flag:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0xD
   291  00000E                     	ds	1
   292  00000F                     WriteBytesFlash@startptr:
   293                           	opt stack 0
   294                           
   295                           ; 3 bytes @ 0xE
   296  00000F                     	ds	3
   297  000012                     WriteBytesFlash@saddress:
   298                           	opt stack 0
   299                           
   300                           ; 4 bytes @ 0x11
   301  000012                     	ds	4
   302  000016                     ??_OdbierzRamke:
   303                           
   304                           ; 0 bytes @ 0x15
   305  000016                     	ds	2
   306  000018                     OdbierzRamke@pointerU8:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x17
   310  000018                     	ds	2
   311  00001A                     OdbierzRamke@k:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x19
   315  00001A                     	ds	1
   316  00001B                     OdbierzRamke@tempCON:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x1A
   320  00001B                     	ds	1
   321  00001C                     OdbierzRamke@i:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x1B
   325  00001C                     	ds	1
   326  00001D                     ??_main:
   327                           
   328                           ; 0 bytes @ 0x1C
   329  00001D                     	ds	1
   330  00001E                     main@Delay:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x1D
   334  00001E                     	ds	1
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 219 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  Delay           1   29[COMRAM] unsigned char 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  2  133[COMRAM] int 
   356 ;; Registers used:
   357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   367 ;;Total ram usage:        2 bytes
   368 ;; Hardware stack levels required when called:    3
   369 ;; This function calls:
   370 ;;		_OdbierzRamke
   371 ;;		_ResetDevice
   372 ;;		_LED_Clear
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text0
   379  000256                     __ptext0:
   380                           	opt stack 0
   381  000256                     _main:
   382                           	opt stack 28
   383                           
   384                           ;main.c: 220: unsigned char Delay;
   385                           ;main.c: 223: if((RCON&0x3F)!=0x3C)
   386                           
   387                           ;incstack = 0
   388                           ;incstack = 0
   389  000256  50D0               	movf	4048,w,c	;volatile
   390  000258  0B3F               	andlw	63
   391  00025A  0A3C               	xorlw	60
   392  00025C  A4D8               	btfss	status,2,c
   393                           
   394                           ;main.c: 224: {
   395                           ;main.c: 225: ResetDevice();
   396  00025E  ECFD  F001         	call	_ResetDevice	;wreg free
   397                           
   398                           ;main.c: 226: }
   399                           ;main.c: 228: Delay = 5;
   400  000262  6E1D               	movwf	??_main& (0+255),c
   401  000264  0E05               	movlw	5
   402  000266  6E1E               	movwf	main@Delay,c
   403  000268  501D               	movf	??_main& (0+255),w,c
   404                           
   405                           ;main.c: 230: TRISA = 0xFF;
   406  00026A  6892               	setf	3986,c	;volatile
   407                           
   408                           ;main.c: 231: TRISB = 0xFF;
   409  00026C  6893               	setf	3987,c	;volatile
   410                           
   411                           ;main.c: 232: TRISAbits.TRISA5 = 0;
   412  00026E  9A92               	bcf	3986,5,c	;volatile
   413                           
   414                           ;main.c: 233: LED_Clear();
   415  000270  EC73  F003         	call	_LED_Clear	;wreg free
   416                           
   417                           ;main.c: 234: TRISC = 0xFF;
   418  000274  6894               	setf	3988,c	;volatile
   419                           
   420                           ;main.c: 235: TRISCbits.TRISC6 = 0;
   421  000276  9C94               	bcf	3988,6,c	;volatile
   422                           
   423                           ;main.c: 238: T0CON = 0x00;
   424  000278  0E00               	movlw	0
   425  00027A  6ED5               	movwf	4053,c	;volatile
   426                           
   427                           ;main.c: 239: T0CONbits.T0PS = 0x05;
   428  00027C  50D5               	movf	4053,w,c	;volatile
   429  00027E  0BF8               	andlw	-8
   430  000280  0905               	iorlw	5
   431  000282  6ED5               	movwf	4053,c	;volatile
   432                           
   433                           ;main.c: 241: INTCONbits.TMR0IE = 0;
   434  000284  9AF2               	bcf	intcon,5,c	;volatile
   435                           
   436                           ;main.c: 242: INTCONbits.TMR0IF = 0;
   437  000286  94F2               	bcf	intcon,2,c	;volatile
   438                           
   439                           ;main.c: 244: TMR0 = 62500;
   440  000288  0EF4               	movlw	244
   441  00028A  6ED7               	movwf	4055,c	;volatile
   442  00028C  0E24               	movlw	36
   443  00028E  6ED6               	movwf	4054,c	;volatile
   444                           
   445                           ;main.c: 247: T0CONbits.TMR0ON = 1;
   446  000290  8ED5               	bsf	4053,7,c	;volatile
   447                           
   448                           ;main.c: 250: CANCON = 0x80;
   449  000292  0E80               	movlw	128
   450  000294  6E6F               	movwf	3951,c	;volatile
   451  000296                     l1765:
   452  000296  506E               	movf	3950,w,c	;volatile
   453  000298  0BE0               	andlw	224
   454  00029A  0A80               	xorlw	128
   455  00029C  A4D8               	btfss	status,2,c
   456  00029E  D7FB               	goto	l1765
   457                           
   458                           ;main.c: 254: }
   459                           ;main.c: 257: ECANCON = 0x90;
   460  0002A0  0E90               	movlw	144
   461  0002A2  6E77               	movwf	3959,c	;volatile
   462                           
   463                           ;main.c: 261: BRGCON1bits.BRP0 = ((16000000/(2*20*50000))-1) & 0b000001;
   464  0002A4  8070               	bsf	3952,0,c	;volatile
   465                           
   466                           ;main.c: 262: BRGCON1bits.BRP1 = (((16000000/(2*20*50000))-1) >> 1) & 0b000001;
   467  0002A6  8270               	bsf	3952,1,c	;volatile
   468                           
   469                           ;main.c: 263: BRGCON1bits.BRP2 = (((16000000/(2*20*50000))-1) >> 2) & 0b000001;
   470  0002A8  8470               	bsf	3952,2,c	;volatile
   471                           
   472                           ;main.c: 264: BRGCON1bits.BRP3 = (((16000000/(2*20*50000))-1) >> 3) & 0b000001;
   473  0002AA  9670               	bcf	3952,3,c	;volatile
   474                           
   475                           ;main.c: 265: BRGCON1bits.BRP4 = (((16000000/(2*20*50000))-1) >> 4) & 0b000001;
   476  0002AC  9870               	bcf	3952,4,c	;volatile
   477                           
   478                           ;main.c: 266: BRGCON1bits.BRP5 = (((16000000/(2*20*50000))-1) >> 5) & 0b000001;
   479  0002AE  9A70               	bcf	3952,5,c	;volatile
   480                           
   481                           ;main.c: 268: BRGCON1bits.SJW0 = 1;
   482  0002B0  8C70               	bsf	3952,6,c	;volatile
   483                           
   484                           ;main.c: 269: BRGCON1bits.SJW1 = 1;
   485  0002B2  8E70               	bsf	3952,7,c	;volatile
   486                           
   487                           ;main.c: 271: BRGCON2bits.SEG1PH0 = 1;
   488  0002B4  8671               	bsf	3953,3,c	;volatile
   489                           
   490                           ;main.c: 272: BRGCON2bits.SEG1PH1 = 1;
   491  0002B6  8871               	bsf	3953,4,c	;volatile
   492                           
   493                           ;main.c: 273: BRGCON2bits.SEG1PH2 = 1;
   494  0002B8  8A71               	bsf	3953,5,c	;volatile
   495                           
   496                           ;main.c: 275: BRGCON2bits.PRSEG2 = 1;
   497  0002BA  8471               	bsf	3953,2,c	;volatile
   498                           
   499                           ;main.c: 276: BRGCON2bits.PRSEG1 = 0;
   500  0002BC  9271               	bcf	3953,1,c	;volatile
   501                           
   502                           ;main.c: 277: BRGCON2bits.PRSEG0 = 0;
   503  0002BE  9071               	bcf	3953,0,c	;volatile
   504                           
   505                           ;main.c: 279: BRGCON3bits.SEG2PH0 = 1;
   506  0002C0  8072               	bsf	3954,0,c	;volatile
   507                           
   508                           ;main.c: 280: BRGCON3bits.SEG2PH1 = 0;
   509  0002C2  9272               	bcf	3954,1,c	;volatile
   510                           
   511                           ;main.c: 281: BRGCON3bits.SEG2PH2 = 1;
   512  0002C4  8472               	bsf	3954,2,c	;volatile
   513                           
   514                           ;main.c: 283: BRGCON2bits.SAM = 1;
   515  0002C6  8C71               	bsf	3953,6,c	;volatile
   516                           
   517                           ;main.c: 284: BRGCON2bits.SEG2PHTS = 1;
   518  0002C8  8E71               	bsf	3953,7,c	;volatile
   519                           
   520                           ;main.c: 289: MSEL0 = 0x00;
   521  0002CA  0E00               	movlw	0
   522  0002CC  010D               	movlb	13	; () banked
   523  0002CE  010D               	movlb	13	; () banked
   524  0002D0  6FF0               	movwf	240,b	;volatile
   525                           
   526                           ;main.c: 290: RXM0SIDH = 0b11100000;
   527  0002D2  0EE0               	movlw	224
   528  0002D4  010F               	movlb	15	; () banked
   529  0002D6  010F               	movlb	15	; () banked
   530  0002D8  6F18               	movwf	24,b	;volatile
   531                           
   532                           ;main.c: 291: RXM0SIDL = 0b00001011;
   533  0002DA  0E0B               	movlw	11
   534  0002DC  010F               	movlb	15	; () banked
   535  0002DE  010F               	movlb	15	; () banked
   536  0002E0  6F19               	movwf	25,b	;volatile
   537                           
   538                           ; BSR set to: 15
   539                           ;main.c: 292: RXM0EIDH = 0xFF;
   540  0002E2  010F               	movlb	15	; () banked
   541  0002E4  010F               	movlb	15	; () banked
   542  0002E6  691A               	setf	26,b	;volatile
   543                           
   544                           ; BSR set to: 15
   545                           ;main.c: 293: RXM0EIDL = 0xFF;
   546  0002E8  010F               	movlb	15	; () banked
   547  0002EA  010F               	movlb	15	; () banked
   548  0002EC  691B               	setf	27,b	;volatile
   549                           
   550                           ;main.c: 296: RXF0SIDH = 0x60;
   551  0002EE  0E60               	movlw	96
   552  0002F0  010F               	movlb	15	; () banked
   553  0002F2  010F               	movlb	15	; () banked
   554  0002F4  6F00               	movwf	0,b	;volatile
   555                           
   556                           ;main.c: 297: RXF0SIDL = 0x01;
   557  0002F6  0E01               	movlw	1
   558  0002F8  010F               	movlb	15	; () banked
   559  0002FA  010F               	movlb	15	; () banked
   560  0002FC  6F01               	movwf	1,b	;volatile
   561                           
   562                           ; BSR set to: 15
   563                           ;main.c: 298: RXF0SIDLbits.EXIDEN = 1;
   564  0002FE  010F               	movlb	15	; () banked
   565  000300  010F               	movlb	15	; () banked
   566  000302  8701               	bsf	1,3,b	;volatile
   567                           
   568                           ;main.c: 299: RXF0EIDH = 0x40;
   569  000304  0E40               	movlw	64
   570  000306  010F               	movlb	15	; () banked
   571  000308  010F               	movlb	15	; () banked
   572  00030A  6F02               	movwf	2,b	;volatile
   573                           
   574                           ;main.c: 300: RXF0EIDL = 0;
   575  00030C  0E00               	movlw	0
   576  00030E  010F               	movlb	15	; () banked
   577  000310  010F               	movlb	15	; () banked
   578  000312  6F03               	movwf	3,b	;volatile
   579                           
   580                           ;main.c: 304: RXFCON0 = 0x01;
   581  000314  0E01               	movlw	1
   582  000316  010D               	movlb	13	; () banked
   583  000318  010D               	movlb	13	; () banked
   584  00031A  6FD4               	movwf	212,b	;volatile
   585                           
   586                           ;main.c: 305: RXFCON1 = 0x00;
   587  00031C  0E00               	movlw	0
   588  00031E  010D               	movlb	13	; () banked
   589  000320  010D               	movlb	13	; () banked
   590  000322  6FD5               	movwf	213,b	;volatile
   591                           
   592                           ;main.c: 313: RXB0CON = 0;
   593  000324  0E00               	movlw	0
   594  000326  6E60               	movwf	3936,c	;volatile
   595                           
   596                           ;main.c: 314: RXB1CON = 0;
   597  000328  0E00               	movlw	0
   598  00032A  010F               	movlb	15	; () banked
   599  00032C  010F               	movlb	15	; () banked
   600  00032E  6F50               	movwf	80,b	;volatile
   601                           
   602                           ;main.c: 315: B0CON = 0;
   603  000330  0E00               	movlw	0
   604  000332  010E               	movlb	14	; () banked
   605  000334  010E               	movlb	14	; () banked
   606  000336  6F20               	movwf	32,b	;volatile
   607                           
   608                           ;main.c: 316: B1CON = 0;
   609  000338  0E00               	movlw	0
   610  00033A  010E               	movlb	14	; () banked
   611  00033C  010E               	movlb	14	; () banked
   612  00033E  6F30               	movwf	48,b	;volatile
   613                           
   614                           ;main.c: 317: B2CON = 0;
   615  000340  0E00               	movlw	0
   616  000342  010E               	movlb	14	; () banked
   617  000344  010E               	movlb	14	; () banked
   618  000346  6F40               	movwf	64,b	;volatile
   619                           
   620                           ;main.c: 318: B3CON = 0;
   621  000348  0E00               	movlw	0
   622  00034A  010E               	movlb	14	; () banked
   623  00034C  010E               	movlb	14	; () banked
   624  00034E  6F50               	movwf	80,b	;volatile
   625                           
   626                           ;main.c: 319: B4CON = 0;
   627  000350  0E00               	movlw	0
   628  000352  010E               	movlb	14	; () banked
   629  000354  010E               	movlb	14	; () banked
   630  000356  6F60               	movwf	96,b	;volatile
   631                           
   632                           ;main.c: 320: B5CON = 0;
   633  000358  0E00               	movlw	0
   634  00035A  010E               	movlb	14	; () banked
   635  00035C  010E               	movlb	14	; () banked
   636  00035E  6F70               	movwf	112,b	;volatile
   637                           
   638                           ;main.c: 323: CANCON = 0x00;
   639  000360  0E00               	movlw	0
   640  000362  6E6F               	movwf	3951,c	;volatile
   641  000364                     l1813:
   642  000364  506E               	movf	3950,w,c	;volatile
   643  000366  0BE0               	andlw	224
   644  000368  A4D8               	btfss	status,2,c
   645  00036A  D7FC               	goto	l1813
   646                           
   647                           ;main.c: 327: }
   648                           ;main.c: 328: SourceAddr.Val32 = (DWORD)0xC00;
   649  00036C  0E00               	movlw	0
   650  00036E  6E1F               	movwf	_SourceAddr,c
   651  000370  0E0C               	movlw	12
   652  000372  6E20               	movwf	_SourceAddr+1,c
   653  000374  0E00               	movlw	0
   654  000376  6E21               	movwf	_SourceAddr+2,c
   655  000378  0E00               	movlw	0
   656  00037A  6E22               	movwf	_SourceAddr+3,c
   657                           
   658                           ;main.c: 329: counter = 0;
   659  00037C  6E1D               	movwf	??_main& (0+255),c
   660  00037E  0E00               	movlw	0
   661  000380  6E25               	movwf	_counter,c
   662  000382  501D               	movf	??_main& (0+255),w,c
   663                           
   664                           ;main.c: 330: iloscBajtow = 0;
   665  000384  6E1D               	movwf	??_main& (0+255),c
   666  000386  0E00               	movlw	0
   667  000388  6E26               	movwf	_iloscBajtow,c
   668  00038A  501D               	movf	??_main& (0+255),w,c
   669                           
   670                           ;main.c: 331: ramekInicjalizacji = 0;
   671  00038C  6E1D               	movwf	??_main& (0+255),c
   672  00038E  0E00               	movlw	0
   673  000390  6E27               	movwf	_ramekInicjalizacji,c
   674  000392  501D               	movf	??_main& (0+255),w,c
   675  000394                     l1823:
   676                           
   677                           ;main.c: 333: {
   678                           ;main.c: 334: OdbierzRamke();
   679  000394  EC10  F000         	call	_OdbierzRamke	;wreg free
   680                           
   681                           ;main.c: 337: if(INTCONbits.TMR0IF == 1)
   682  000398  A4F2               	btfss	intcon,2,c	;volatile
   683  00039A  D7FC               	goto	l1823
   684                           
   685                           ;main.c: 338: {
   686                           ;main.c: 339: INTCONbits.TMR0IF = 0;
   687  00039C  94F2               	bcf	intcon,2,c	;volatile
   688  00039E  0004               	clrwdt		;# 
   689                           
   690                           ;main.c: 342: if(++counter >= Delay)
   691  0003A0  501E               	movf	main@Delay,w,c
   692  0003A2  2A25               	incf	_counter,f,c
   693  0003A4  5C25               	subwf	_counter& (0+255),w,c
   694  0003A6  A0D8               	btfss	status,0,c
   695  0003A8  D7F5               	goto	l1823
   696                           
   697                           ;main.c: 343: {
   698                           ;main.c: 344: ResetDevice();
   699  0003AA  ECFD  F001         	call	_ResetDevice	;wreg free
   700  0003AE  D7F2               	goto	l1823
   701  0003B0                     __end_of_main:
   702                           	opt stack 0
   703                           tblptru	equ	0xFF8
   704                           tblptrh	equ	0xFF7
   705                           tblptrl	equ	0xFF6
   706                           tablat	equ	0xFF5
   707                           intcon	equ	0xFF2
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           status	equ	0xFD8
   713                           
   714 ;; *************** function _LED_Clear *****************
   715 ;; Defined at:
   716 ;;		line 68 in file "LED.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  2   42[COMRAM] unsigned int 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   734 ;;Total ram usage:        1 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    1
   737 ;; This function calls:
   738 ;;		_LED_Control
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text1
   745  0006E6                     __ptext1:
   746                           	opt stack 0
   747  0006E6                     _LED_Clear:
   748                           	opt stack 29
   749                           
   750                           ;LED.c: 69: LED_Control(RED,0b0000000000);
   751                           
   752                           ;incstack = 0
   753                           ;incstack = 0
   754  0006E6  6E06               	movwf	??_LED_Clear& (0+255),c
   755  0006E8  0E00               	movlw	0
   756  0006EA  6E01               	movwf	?_LED_Control,c
   757  0006EC  5006               	movf	??_LED_Clear& (0+255),w,c
   758  0006EE  0E00               	movlw	0
   759  0006F0  6E03               	movwf	?_LED_Control+2,c
   760  0006F2  0E00               	movlw	0
   761  0006F4  6E02               	movwf	?_LED_Control+1,c
   762  0006F6  EC03  F002         	call	_LED_Control	;wreg free
   763                           
   764                           ;LED.c: 70: LED_Control(GREEN,0b1010101010);
   765  0006FA  6E06               	movwf	??_LED_Clear& (0+255),c
   766  0006FC  0E01               	movlw	1
   767  0006FE  6E01               	movwf	?_LED_Control,c
   768  000700  5006               	movf	??_LED_Clear& (0+255),w,c
   769  000702  0E02               	movlw	2
   770  000704  6E03               	movwf	?_LED_Control+2,c
   771  000706  0EAA               	movlw	170
   772  000708  6E02               	movwf	?_LED_Control+1,c
   773  00070A  EC03  F002         	call	_LED_Control	;wreg free
   774                           
   775                           ;LED.c: 71: return 1;
   776                           ;	Return value of _LED_Clear is never used
   777  00070E  0012               	return	
   778  000710                     __end_of_LED_Clear:
   779                           	opt stack 0
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           intcon	equ	0xFF2
   785                           postinc0	equ	0xFEE
   786                           wreg	equ	0xFE8
   787                           postdec1	equ	0xFE5
   788                           fsr1l	equ	0xFE1
   789                           status	equ	0xFD8
   790                           
   791 ;; *************** function _OdbierzRamke *****************
   792 ;; Defined at:
   793 ;;		line 106 in file "main.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  pointerU8       2   23[COMRAM] PTR volatile unsigned ch
   798 ;;		 -> RXB0D0(1), 
   799 ;;  tempU16         2    0        unsigned int 
   800 ;;  i               1   27[COMRAM] unsigned char 
   801 ;;  tempCON         1   26[COMRAM] unsigned char 
   802 ;;  k               1   25[COMRAM] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;		None               void
   805 ;; Registers used:
   806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   813 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   814 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   815 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   816 ;;Total ram usage:        7 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    2
   819 ;; This function calls:
   820 ;;		_ResetDevice
   821 ;;		_LED_Error
   822 ;;		_EraseFlash
   823 ;;		_WriteBytesFlash
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text2
   830  000020                     __ptext2:
   831                           	opt stack 0
   832  000020                     _OdbierzRamke:
   833                           	opt stack 28
   834                           
   835                           ;main.c: 107: volatile unsigned char *pointerU8;
   836                           ;main.c: 108: unsigned char i, k,tempCON = 0;
   837                           
   838                           ;incstack = 0
   839                           ;incstack = 0
   840  000020  6E16               	movwf	??_OdbierzRamke& (0+255),c
   841  000022  0E00               	movlw	0
   842  000024  6E1B               	movwf	OdbierzRamke@tempCON,c
   843  000026  5016               	movf	??_OdbierzRamke& (0+255),w,c
   844                           
   845                           ;main.c: 109: unsigned int tempU16;
   846                           ;main.c: 111: k = CANCON&0x0F;
   847  000028  506F               	movf	3951,w,c	;volatile
   848  00002A  0B0F               	andlw	15
   849  00002C  6E1A               	movwf	OdbierzRamke@k,c
   850                           
   851                           ;main.c: 113: ECANCON = 0x90 | k;
   852  00002E  501A               	movf	OdbierzRamke@k,w,c
   853  000030  0990               	iorlw	144
   854  000032  6E77               	movwf	3959,c	;volatile
   855                           
   856                           ;main.c: 116: switch(k)
   857  000034  D018               	goto	l1657
   858  000036                     l98:
   859                           
   860                           ;main.c: 119: tempCON = RXB0CON;
   861  000036  CF60 F01B          	movff	3936,OdbierzRamke@tempCON	;volatile
   862                           
   863                           ;main.c: 120: break;
   864  00003A  D02E               	goto	l99
   865  00003C                     l100:
   866                           
   867                           ;main.c: 122: tempCON = RXB1CON;
   868  00003C  CF50 F01B          	movff	3920,OdbierzRamke@tempCON	;volatile
   869                           
   870                           ;main.c: 123: break;
   871  000040  D02B               	goto	l99
   872  000042                     l101:
   873                           
   874                           ;main.c: 125: tempCON = B0CON;
   875  000042  CE20 F01B          	movff	3616,OdbierzRamke@tempCON	;volatile
   876                           
   877                           ;main.c: 126: break;
   878  000046  D028               	goto	l99
   879  000048                     l102:
   880                           
   881                           ;main.c: 128: tempCON = B1CON;
   882  000048  CE30 F01B          	movff	3632,OdbierzRamke@tempCON	;volatile
   883                           
   884                           ;main.c: 129: break;
   885  00004C  D025               	goto	l99
   886  00004E                     l103:
   887                           
   888                           ;main.c: 131: tempCON = B2CON;
   889  00004E  CE40 F01B          	movff	3648,OdbierzRamke@tempCON	;volatile
   890                           
   891                           ;main.c: 132: break;
   892  000052  D022               	goto	l99
   893  000054                     l104:
   894                           
   895                           ;main.c: 134: tempCON = B3CON;
   896  000054  CE50 F01B          	movff	3664,OdbierzRamke@tempCON	;volatile
   897                           
   898                           ;main.c: 135: break;
   899  000058  D01F               	goto	l99
   900  00005A                     l105:
   901                           
   902                           ;main.c: 137: tempCON = B4CON;
   903  00005A  CE60 F01B          	movff	3680,OdbierzRamke@tempCON	;volatile
   904                           
   905                           ;main.c: 138: break;
   906  00005E  D01C               	goto	l99
   907  000060                     l106:
   908                           
   909                           ;main.c: 140: tempCON = B5CON;
   910  000060  CE70 F01B          	movff	3696,OdbierzRamke@tempCON	;volatile
   911                           
   912                           ;main.c: 141: break;
   913  000064  D019               	goto	l99
   914  000066                     l1657:
   915  000066  501A               	movf	OdbierzRamke@k,w,c
   916                           
   917                           ; Switch size 1, requested type "space"
   918                           ; Number of cases is 8, Range of values is 0 to 7
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte           25    13 (average)
   922                           ;	Chosen strategy is simple_byte
   923  000068  0A00               	xorlw	0	; case 0
   924  00006A  B4D8               	btfsc	status,2,c
   925  00006C  D7E4               	goto	l98
   926  00006E  0A01               	xorlw	1	; case 1
   927  000070  B4D8               	btfsc	status,2,c
   928  000072  D7E4               	goto	l100
   929  000074  0A03               	xorlw	3	; case 2
   930  000076  B4D8               	btfsc	status,2,c
   931  000078  D7E4               	goto	l101
   932  00007A  0A01               	xorlw	1	; case 3
   933  00007C  B4D8               	btfsc	status,2,c
   934  00007E  D7E4               	goto	l102
   935  000080  0A07               	xorlw	7	; case 4
   936  000082  B4D8               	btfsc	status,2,c
   937  000084  D7E4               	goto	l103
   938  000086  0A01               	xorlw	1	; case 5
   939  000088  B4D8               	btfsc	status,2,c
   940  00008A  D7E4               	goto	l104
   941  00008C  0A03               	xorlw	3	; case 6
   942  00008E  B4D8               	btfsc	status,2,c
   943  000090  D7E4               	goto	l105
   944  000092  0A01               	xorlw	1	; case 7
   945  000094  B4D8               	btfsc	status,2,c
   946  000096  D7E4               	goto	l106
   947  000098                     l99:
   948                           
   949                           ;main.c: 144: if((tempCON & 0x80) > 0)
   950  000098  AE1B               	btfss	OdbierzRamke@tempCON,7,c
   951  00009A  D0DC               	goto	l128
   952                           
   953                           ;main.c: 145: {
   954                           ;main.c: 146: pointerU8 = &RXB0D0;
   955  00009C  0E0F               	movlw	15	;volatile
   956  00009E  6E19               	movwf	OdbierzRamke@pointerU8+1,c
   957  0000A0  0E66               	movlw	102	;volatile
   958  0000A2  6E18               	movwf	OdbierzRamke@pointerU8,c
   959                           
   960                           ;main.c: 147: for(i=0;i<8;i++)
   961  0000A4  6E16               	movwf	??_OdbierzRamke& (0+255),c
   962  0000A6  0E00               	movlw	0
   963  0000A8  6E1C               	movwf	OdbierzRamke@i,c
   964  0000AA  5016               	movf	??_OdbierzRamke& (0+255),w,c
   965  0000AC  D016               	goto	L2
   966  0000AE                     l1665:
   967                           
   968                           ;main.c: 148: {
   969                           ;main.c: 149: buforCAN[iloscBajtow++]=(*(pointerU8+i));
   970  0000AE  501C               	movf	OdbierzRamke@i,w,c
   971  0000B0  0D01               	mullw	1
   972  0000B2  50F3               	movf	prodl,w,c
   973  0000B4  2418               	addwf	OdbierzRamke@pointerU8,w,c
   974  0000B6  6ED9               	movwf	fsr2l,c
   975  0000B8  50F4               	movf	prodh,w,c
   976  0000BA  2019               	addwfc	OdbierzRamke@pointerU8+1,w,c
   977  0000BC  6EDA               	movwf	fsr2h,c
   978  0000BE  5026               	movf	_iloscBajtow,w,c
   979  0000C0  0D01               	mullw	1
   980  0000C2  0100               	movlb	0	; () banked
   981  0000C4  0E60               	movlw	low _buforCAN
   982  0000C6  24F3               	addwf	prodl,w,c
   983  0000C8  6EE1               	movwf	fsr1l,c
   984  0000CA  0100               	movlb	0	; () banked
   985  0000CC  0E00               	movlw	high _buforCAN
   986  0000CE  20F4               	addwfc	prodh,w,c
   987  0000D0  6EE2               	movwf	fsr1h,c
   988  0000D2  CFDF FFE7          	movff	indf2,indf1
   989                           
   990                           ; BSR set to: 0
   991  0000D6  2A26               	incf	_iloscBajtow,f,c
   992                           
   993                           ; BSR set to: 0
   994  0000D8  2A1C               	incf	OdbierzRamke@i,f,c
   995  0000DA                     L2:
   996                           
   997                           ; BSR set to: 0
   998  0000DA  0E07               	movlw	7
   999  0000DC  641C               	cpfsgt	OdbierzRamke@i,c
  1000  0000DE  D7E7               	goto	l1665
  1001                           
  1002                           ;main.c: 150: }
  1003                           ;main.c: 151: if(ramekInicjalizacji < 10)
  1004                           
  1005                           ; BSR set to: 0
  1006  0000E0  0E0A               	movlw	10
  1007  0000E2  6027               	cpfslt	_ramekInicjalizacji,c
  1008  0000E4  D034               	goto	l1699
  1009                           
  1010                           ;main.c: 152: {
  1011                           ;main.c: 153: for(i=0; i<8; i++)
  1012  0000E6  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1013  0000E8  0E00               	movlw	0
  1014  0000EA  6E1C               	movwf	OdbierzRamke@i,c
  1015  0000EC  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1016  0000EE  D01B               	goto	L3
  1017  0000F0                     l1681:
  1018                           
  1019                           ;main.c: 154: {
  1020                           ;main.c: 155: if(buforCAN[i] != ((ramekInicjalizacji*10)+i))
  1021  0000F0  501C               	movf	OdbierzRamke@i,w,c
  1022  0000F2  0D01               	mullw	1
  1023  0000F4  0100               	movlb	0	; () banked
  1024  0000F6  0E60               	movlw	low _buforCAN
  1025  0000F8  24F3               	addwf	prodl,w,c
  1026  0000FA  6ED9               	movwf	fsr2l,c
  1027  0000FC  0100               	movlb	0	; () banked
  1028  0000FE  0E00               	movlw	high _buforCAN
  1029  000100  20F4               	addwfc	prodh,w,c
  1030  000102  6EDA               	movwf	fsr2h,c
  1031  000104  50DF               	movf	indf2,w,c
  1032  000106  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1033  000108  6A17               	clrf	(??_OdbierzRamke+1)& (0+255),c
  1034  00010A  5027               	movf	_ramekInicjalizacji,w,c
  1035  00010C  0D0A               	mullw	10
  1036  00010E  501C               	movf	OdbierzRamke@i,w,c
  1037  000110  26F3               	addwf	prodl,f,c
  1038  000112  0E00               	movlw	0
  1039  000114  22F4               	addwfc	prodh,f,c
  1040  000116  5017               	movf	??_OdbierzRamke+1,w,c
  1041  000118  18F4               	xorwf	prodh,w,c
  1042  00011A  E102               	bnz	u945
  1043  00011C  5016               	movf	??_OdbierzRamke,w,c
  1044  00011E  18F3               	xorwf	prodl,w,c
  1045  000120                     u945:
  1046  000120  A4D8               	btfss	status,2,c
  1047  000122  D004               	goto	l1689
  1048                           
  1049                           ; BSR set to: 0
  1050                           
  1051                           ; BSR set to: 0
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;main.c: 156: {
  1055                           ;main.c: 157: break;
  1056  000124  2A1C               	incf	OdbierzRamke@i,f,c
  1057  000126                     L3:
  1058                           
  1059                           ; BSR set to: 0
  1060  000126  0E07               	movlw	7
  1061  000128  641C               	cpfsgt	OdbierzRamke@i,c
  1062  00012A  D7E2               	goto	l1681
  1063  00012C                     l1689:
  1064                           
  1065                           ;main.c: 158: }
  1066                           ;main.c: 159: }
  1067                           ;main.c: 160: if(i==8)
  1068  00012C  501C               	movf	OdbierzRamke@i,w,c
  1069  00012E  0A08               	xorlw	8
  1070  000130  A4D8               	btfss	status,2,c
  1071  000132  D006               	goto	l1695
  1072                           
  1073                           ;main.c: 161: {
  1074                           ;main.c: 162: iloscBajtow = 0;
  1075  000134  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1076  000136  0E00               	movlw	0
  1077  000138  6E26               	movwf	_iloscBajtow,c
  1078  00013A  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1079                           
  1080                           ;main.c: 163: ramekInicjalizacji++;
  1081  00013C  2A27               	incf	_ramekInicjalizacji,f,c
  1082                           
  1083                           ;main.c: 164: }
  1084  00013E  D042               	goto	l1709
  1085  000140                     l1695:
  1086                           
  1087                           ;main.c: 165: else
  1088                           ;main.c: 166: {
  1089                           ;main.c: 168: iloscBajtow = 0;
  1090  000140  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1091  000142  0E00               	movlw	0
  1092  000144  6E26               	movwf	_iloscBajtow,c
  1093  000146  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1094                           
  1095                           ;main.c: 169: ResetDevice();
  1096  000148  ECFD  F001         	call	_ResetDevice	;wreg free
  1097  00014C  D03B               	goto	l1709
  1098  00014E                     l1699:
  1099                           
  1100                           ;main.c: 172: else if((iloscBajtow >= 64))
  1101  00014E  0E3F               	movlw	63
  1102  000150  6426               	cpfsgt	_iloscBajtow,c
  1103  000152  D038               	goto	l1709
  1104                           
  1105                           ;main.c: 173: {
  1106                           ;main.c: 174: LED_Error();
  1107  000154  EC88  F003         	call	_LED_Error	;wreg free
  1108                           
  1109                           ;main.c: 175: EraseFlash(SourceAddr.Val32, SourceAddr.Val32+(unsigned long)64);
  1110  000158  C01F  F001         	movff	_SourceAddr,?_EraseFlash
  1111  00015C  C020  F002         	movff	_SourceAddr+1,?_EraseFlash+1
  1112  000160  C021  F003         	movff	_SourceAddr+2,?_EraseFlash+2
  1113  000164  C022  F004         	movff	_SourceAddr+3,?_EraseFlash+3
  1114  000168  0E40               	movlw	64
  1115  00016A  241F               	addwf	_SourceAddr,w,c
  1116  00016C  6E05               	movwf	?_EraseFlash+4,c
  1117  00016E  0E00               	movlw	0
  1118  000170  2020               	addwfc	_SourceAddr+1,w,c
  1119  000172  6E06               	movwf	?_EraseFlash+5,c
  1120  000174  0E00               	movlw	0
  1121  000176  2021               	addwfc	_SourceAddr+2,w,c
  1122  000178  6E07               	movwf	?_EraseFlash+6,c
  1123  00017A  0E00               	movlw	0
  1124  00017C  2022               	addwfc	_SourceAddr+3,w,c
  1125  00017E  6E08               	movwf	?_EraseFlash+7,c
  1126  000180  EC36  F003         	call	_EraseFlash	;wreg free
  1127                           
  1128                           ;main.c: 176: WriteBytesFlash(SourceAddr.Val32,64,buforCAN);
  1129  000184  C01F  F001         	movff	_SourceAddr,?_WriteBytesFlash
  1130  000188  C020  F002         	movff	_SourceAddr+1,?_WriteBytesFlash+1
  1131  00018C  C021  F003         	movff	_SourceAddr+2,?_WriteBytesFlash+2
  1132  000190  C022  F004         	movff	_SourceAddr+3,?_WriteBytesFlash+3
  1133  000194  0E00               	movlw	0
  1134  000196  6E06               	movwf	?_WriteBytesFlash+5,c
  1135  000198  0E40               	movlw	64
  1136  00019A  6E05               	movwf	?_WriteBytesFlash+4,c
  1137  00019C  0100               	movlb	0	; () banked
  1138  00019E  0E00               	movlw	high _buforCAN
  1139  0001A0  6E08               	movwf	?_WriteBytesFlash+7,c
  1140  0001A2  0100               	movlb	0	; () banked
  1141  0001A4  0E60               	movlw	low _buforCAN
  1142  0001A6  6E07               	movwf	?_WriteBytesFlash+6,c
  1143  0001A8  ECAD  F002         	call	_WriteBytesFlash	;wreg free
  1144                           
  1145                           ;main.c: 177: SourceAddr.Val32 += 64;
  1146  0001AC  0E40               	movlw	64
  1147  0001AE  261F               	addwf	_SourceAddr,f,c
  1148  0001B0  0E00               	movlw	0
  1149  0001B2  2220               	addwfc	_SourceAddr+1,f,c
  1150  0001B4  0E00               	movlw	0
  1151  0001B6  2221               	addwfc	_SourceAddr+2,f,c
  1152  0001B8  0E00               	movlw	0
  1153  0001BA  2222               	addwfc	_SourceAddr+3,f,c
  1154                           
  1155                           ;main.c: 178: iloscBajtow = 0;
  1156  0001BC  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1157  0001BE  0E00               	movlw	0
  1158  0001C0  6E26               	movwf	_iloscBajtow,c
  1159  0001C2  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1160  0001C4                     l1709:
  1161                           
  1162                           ;main.c: 179: }
  1163                           ;main.c: 180: TMR0 = 62500;
  1164  0001C4  0EF4               	movlw	244
  1165  0001C6  6ED7               	movwf	4055,c	;volatile
  1166  0001C8  0E24               	movlw	36
  1167  0001CA  6ED6               	movwf	4054,c	;volatile
  1168                           
  1169                           ;main.c: 181: counter = 0;
  1170  0001CC  6E16               	movwf	??_OdbierzRamke& (0+255),c
  1171  0001CE  0E00               	movlw	0
  1172  0001D0  6E25               	movwf	_counter,c
  1173  0001D2  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1174  0001D4  0004               	clrwdt		;# 
  1175                           
  1176                           ;main.c: 183: switch(k)
  1177  0001D6  D025               	goto	l1731
  1178  0001D8                     l1713:
  1179                           
  1180                           ;main.c: 186: RXB0CON = 0;
  1181  0001D8  0E00               	movlw	0
  1182  0001DA  6E60               	movwf	3936,c	;volatile
  1183                           
  1184                           ;main.c: 187: break;
  1185  0001DC  D03B               	goto	l128
  1186  0001DE                     l1715:
  1187                           
  1188                           ;main.c: 189: RXB1CON = 0;
  1189  0001DE  0E00               	movlw	0
  1190  0001E0  010F               	movlb	15	; () banked
  1191  0001E2  010F               	movlb	15	; () banked
  1192  0001E4  D012               	goto	L1
  1193  0001E6                     l1717:
  1194                           
  1195                           ;main.c: 192: B0CON = 0;
  1196  0001E6  0E00               	movlw	0
  1197  0001E8  010E               	movlb	14	; () banked
  1198  0001EA  010E               	movlb	14	; () banked
  1199  0001EC  6F20               	movwf	32,b	;volatile
  1200                           
  1201                           ;main.c: 193: break;
  1202  0001EE  D032               	goto	l128
  1203  0001F0                     l1719:
  1204                           
  1205                           ;main.c: 195: B1CON = 0;
  1206  0001F0  0E00               	movlw	0
  1207  0001F2  010E               	movlb	14	; () banked
  1208  0001F4  010E               	movlb	14	; () banked
  1209  0001F6  6F30               	movwf	48,b	;volatile
  1210                           
  1211                           ;main.c: 196: break;
  1212  0001F8  D02D               	goto	l128
  1213  0001FA                     l1721:
  1214                           
  1215                           ;main.c: 198: B2CON = 0;
  1216  0001FA  0E00               	movlw	0
  1217  0001FC  010E               	movlb	14	; () banked
  1218  0001FE  010E               	movlb	14	; () banked
  1219  000200  6F40               	movwf	64,b	;volatile
  1220                           
  1221                           ;main.c: 199: break;
  1222  000202  D028               	goto	l128
  1223  000204                     l1723:
  1224                           
  1225                           ;main.c: 201: B3CON = 0;
  1226  000204  0E00               	movlw	0
  1227  000206  010E               	movlb	14	; () banked
  1228  000208  010E               	movlb	14	; () banked
  1229  00020A                     L1:
  1230  00020A  6F50               	movwf	80,b	;volatile
  1231                           
  1232                           ;main.c: 202: break;
  1233  00020C  D023               	goto	l128
  1234  00020E                     l1725:
  1235                           
  1236                           ;main.c: 204: B4CON = 0;
  1237  00020E  0E00               	movlw	0
  1238  000210  010E               	movlb	14	; () banked
  1239  000212  010E               	movlb	14	; () banked
  1240  000214  6F60               	movwf	96,b	;volatile
  1241                           
  1242                           ;main.c: 205: break;
  1243  000216  D01E               	goto	l128
  1244  000218                     l1727:
  1245                           
  1246                           ;main.c: 207: B5CON = 0;
  1247  000218  0E00               	movlw	0
  1248  00021A  010E               	movlb	14	; () banked
  1249  00021C  010E               	movlb	14	; () banked
  1250  00021E  6F70               	movwf	112,b	;volatile
  1251                           
  1252                           ;main.c: 208: break;
  1253  000220  D019               	goto	l128
  1254  000222                     l1731:
  1255  000222  501A               	movf	OdbierzRamke@k,w,c
  1256                           
  1257                           ; Switch size 1, requested type "space"
  1258                           ; Number of cases is 8, Range of values is 0 to 7
  1259                           ; switch strategies available:
  1260                           ; Name         Instructions Cycles
  1261                           ; simple_byte           25    13 (average)
  1262                           ;	Chosen strategy is simple_byte
  1263  000224  0A00               	xorlw	0	; case 0
  1264  000226  B4D8               	btfsc	status,2,c
  1265  000228  D7D7               	goto	l1713
  1266  00022A  0A01               	xorlw	1	; case 1
  1267  00022C  B4D8               	btfsc	status,2,c
  1268  00022E  D7D7               	goto	l1715
  1269  000230  0A03               	xorlw	3	; case 2
  1270  000232  B4D8               	btfsc	status,2,c
  1271  000234  D7D8               	goto	l1717
  1272  000236  0A01               	xorlw	1	; case 3
  1273  000238  B4D8               	btfsc	status,2,c
  1274  00023A  D7DA               	goto	l1719
  1275  00023C  0A07               	xorlw	7	; case 4
  1276  00023E  B4D8               	btfsc	status,2,c
  1277  000240  D7DC               	goto	l1721
  1278  000242  0A01               	xorlw	1	; case 5
  1279  000244  B4D8               	btfsc	status,2,c
  1280  000246  D7DE               	goto	l1723
  1281  000248  0A03               	xorlw	3	; case 6
  1282  00024A  B4D8               	btfsc	status,2,c
  1283  00024C  D7E0               	goto	l1725
  1284  00024E  0A01               	xorlw	1	; case 7
  1285  000250  B4D8               	btfsc	status,2,c
  1286  000252  D7E2               	goto	l1727
  1287  000254                     l128:
  1288  000254  0012               	return	
  1289  000256                     __end_of_OdbierzRamke:
  1290                           	opt stack 0
  1291                           tblptru	equ	0xFF8
  1292                           tblptrh	equ	0xFF7
  1293                           tblptrl	equ	0xFF6
  1294                           tablat	equ	0xFF5
  1295                           prodh	equ	0xFF4
  1296                           prodl	equ	0xFF3
  1297                           intcon	equ	0xFF2
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           indf1	equ	0xFE7
  1301                           postdec1	equ	0xFE5
  1302                           fsr1h	equ	0xFE2
  1303                           fsr1l	equ	0xFE1
  1304                           indf2	equ	0xFDF
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _WriteBytesFlash *****************
  1310 ;; Defined at:
  1311 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Flash\WriteBytesFlash.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  startaddr       4    0[COMRAM] unsigned long 
  1314 ;;  num_bytes       2    4[COMRAM] unsigned int 
  1315 ;;  flash_array     2    6[COMRAM] PTR unsigned char 
  1316 ;;		 -> buforCAN(65), 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  saddress        4   17[COMRAM] unsigned long 
  1319 ;;  startptr        3   14[COMRAM] PTR unsigned char 
  1320 ;;		 -> ROM(2047), 
  1321 ;;  saveptr         3    9[COMRAM] PTR unsigned char 
  1322 ;;		 -> ROM(2047), 
  1323 ;;  flag            1   13[COMRAM] unsigned char 
  1324 ;;  write_byte      1   12[COMRAM] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;		None               void
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1334 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1335 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1337 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1338 ;;Total ram usage:       21 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_OdbierzRamke
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text3
  1348  00055A                     __ptext3:
  1349                           	opt stack 0
  1350  00055A                     _WriteBytesFlash:
  1351                           	opt stack 29
  1352                           
  1353                           ;incstack = 0
  1354                           ;incstack = 0
  1355  00055A  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1356  00055C  0E00               	movlw	0
  1357  00055E  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1358  000560  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1359  000562  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1360  000564  0E00               	movlw	0
  1361  000566  6E0E               	movwf	WriteBytesFlash@flag,c
  1362  000568  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1363  00056A  C001  F012         	movff	WriteBytesFlash@startaddr,WriteBytesFlash@saddress
  1364  00056E  C002  F013         	movff	WriteBytesFlash@startaddr+1,WriteBytesFlash@saddress+1
  1365  000572  C003  F014         	movff	WriteBytesFlash@startaddr+2,WriteBytesFlash@saddress+2
  1366  000576  C004  F015         	movff	WriteBytesFlash@startaddr+3,WriteBytesFlash@saddress+3
  1367  00057A  0E06               	movlw	6
  1368  00057C  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1369  00057E                     u565:
  1370  00057E  90D8               	bcf	status,0,c
  1371  000580  3204               	rrcf	WriteBytesFlash@startaddr+3,f,c
  1372  000582  3203               	rrcf	WriteBytesFlash@startaddr+2,f,c
  1373  000584  3202               	rrcf	WriteBytesFlash@startaddr+1,f,c
  1374  000586  3201               	rrcf	WriteBytesFlash@startaddr,f,c
  1375  000588  2E09               	decfsz	??_WriteBytesFlash& (0+255),f,c
  1376  00058A  D7F9               	goto	u565
  1377  00058C  0E06               	movlw	6
  1378  00058E                     u575:
  1379  00058E  90D8               	bcf	status,0,c
  1380  000590  3601               	rlcf	WriteBytesFlash@startaddr,f,c
  1381  000592  3602               	rlcf	WriteBytesFlash@startaddr+1,f,c
  1382  000594  3603               	rlcf	WriteBytesFlash@startaddr+2,f,c
  1383  000596  3604               	rlcf	WriteBytesFlash@startaddr+3,f,c
  1384  000598  2EE8               	decfsz	wreg,f,c
  1385  00059A  D7F9               	goto	u575
  1386  00059C  0E40               	movlw	64
  1387  00059E  2601               	addwf	WriteBytesFlash@startaddr,f,c
  1388  0005A0  0E00               	movlw	0
  1389  0005A2  2202               	addwfc	WriteBytesFlash@startaddr+1,f,c
  1390  0005A4  0E00               	movlw	0
  1391  0005A6  2203               	addwfc	WriteBytesFlash@startaddr+2,f,c
  1392  0005A8  0E00               	movlw	0
  1393  0005AA  2204               	addwfc	WriteBytesFlash@startaddr+3,f,c
  1394  0005AC  5012               	movf	WriteBytesFlash@saddress,w,c
  1395  0005AE  0800               	sublw	0
  1396  0005B0  2401               	addwf	WriteBytesFlash@startaddr,w,c
  1397  0005B2  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1398  0005B4  D056               	goto	l1459
  1399  0005B6                     l303:
  1400  0005B6  C012  F00F         	movff	WriteBytesFlash@saddress,WriteBytesFlash@startptr
  1401  0005BA  C013  F010         	movff	WriteBytesFlash@saddress+1,WriteBytesFlash@startptr+1
  1402  0005BE  C014  F011         	movff	WriteBytesFlash@saddress+2,WriteBytesFlash@startptr+2
  1403  0005C2  D01C               	goto	l1437
  1404  0005C4                     l1427:
  1405  0005C4  C007  FFD9         	movff	WriteBytesFlash@flash_array,fsr2l
  1406  0005C8  C008  FFDA         	movff	WriteBytesFlash@flash_array+1,fsr2h
  1407  0005CC  50DF               	movf	indf2,w,c
  1408  0005CE  C00F  FFF6         	movff	WriteBytesFlash@startptr,tblptrl
  1409  0005D2  C010  FFF7         	movff	WriteBytesFlash@startptr+1,tblptrh
  1410  0005D6  C011  FFF8         	movff	WriteBytesFlash@startptr+2,tblptru
  1411  0005DA  6EF5               	movwf	tablat,c
  1412  0005DC  000C               	tblwt		*
  1413  0005DE  4A07               	infsnz	WriteBytesFlash@flash_array,f,c
  1414  0005E0  2A08               	incf	WriteBytesFlash@flash_array+1,f,c
  1415  0005E2  0E01               	movlw	1
  1416  0005E4  260F               	addwf	WriteBytesFlash@startptr,f,c
  1417  0005E6  0E00               	movlw	0
  1418  0005E8  2210               	addwfc	WriteBytesFlash@startptr+1,f,c
  1419  0005EA  0E00               	movlw	0
  1420  0005EC  2211               	addwfc	WriteBytesFlash@startptr+2,f,c
  1421  0005EE  0605               	decf	WriteBytesFlash@num_bytes,f,c
  1422  0005F0  A0D8               	btfss	status,0,c
  1423  0005F2  0606               	decf	WriteBytesFlash@num_bytes+1,f,c
  1424  0005F4  5006               	movf	(WriteBytesFlash@num_bytes+1)& (0+255),w,c
  1425  0005F6  1005               	iorwf	WriteBytesFlash@num_bytes& (0+255),w,c
  1426  0005F8  B4D8               	btfsc	status,2,c
  1427  0005FA  D004               	goto	l307
  1428  0005FC                     l1437:
  1429  0005FC  060D               	decf	WriteBytesFlash@write_byte,f,c
  1430  0005FE  280D               	incf	WriteBytesFlash@write_byte& (0+255),w,c
  1431  000600  A4D8               	btfss	status,2,c
  1432  000602  D7E0               	goto	l1427
  1433  000604                     l307:
  1434  000604  C00F  F00A         	movff	WriteBytesFlash@startptr,WriteBytesFlash@saveptr
  1435  000608  C010  F00B         	movff	WriteBytesFlash@startptr+1,WriteBytesFlash@saveptr+1
  1436  00060C  C011  F00C         	movff	WriteBytesFlash@startptr+2,WriteBytesFlash@saveptr+2
  1437  000610  C012  F00F         	movff	WriteBytesFlash@saddress,WriteBytesFlash@startptr
  1438  000614  C013  F010         	movff	WriteBytesFlash@saddress+1,WriteBytesFlash@startptr+1
  1439  000618  C014  F011         	movff	WriteBytesFlash@saddress+2,WriteBytesFlash@startptr+2
  1440  00061C  8EA6               	bsf	4006,7,c	;volatile
  1441  00061E  9CA6               	bcf	4006,6,c	;volatile
  1442  000620  84A6               	bsf	4006,2,c	;volatile
  1443  000622  AEF2               	btfss	intcon,7,c	;volatile
  1444  000624  D005               	goto	l1443
  1445  000626  9EF2               	bcf	intcon,7,c	;volatile
  1446  000628  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1447  00062A  0E01               	movlw	1
  1448  00062C  6E0E               	movwf	WriteBytesFlash@flag,c
  1449  00062E  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1450  000630                     l1443:
  1451  000630  0E55               	movlw	85
  1452  000632  6EA7               	movwf	4007,c	;volatile
  1453  000634  0EAA               	movlw	170
  1454  000636  6EA7               	movwf	4007,c	;volatile
  1455  000638  82A6               	bsf	4006,1,c	;volatile
  1456  00063A  94A6               	bcf	4006,2,c	;volatile
  1457  00063C  500E               	movf	WriteBytesFlash@flag,w,c
  1458  00063E  B4D8               	btfsc	status,2,c
  1459  000640  D005               	goto	l309
  1460  000642  8EF2               	bsf	intcon,7,c	;volatile
  1461  000644  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1462  000646  0E00               	movlw	0
  1463  000648  6E0E               	movwf	WriteBytesFlash@flag,c
  1464  00064A  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1465  00064C                     l309:
  1466  00064C  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1467  00064E  0E40               	movlw	64
  1468  000650  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1469  000652  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1470  000654  500A               	movf	WriteBytesFlash@saveptr,w,c
  1471  000656  6E12               	movwf	WriteBytesFlash@saddress,c
  1472  000658  500B               	movf	WriteBytesFlash@saveptr+1,w,c
  1473  00065A  6E13               	movwf	WriteBytesFlash@saddress+1,c
  1474  00065C  500C               	movf	WriteBytesFlash@saveptr+2,w,c
  1475  00065E  6E14               	movwf	WriteBytesFlash@saddress+2,c
  1476  000660  6A15               	clrf	WriteBytesFlash@saddress+3,c
  1477  000662                     l1459:
  1478  000662  5006               	movf	WriteBytesFlash@num_bytes+1,w,c
  1479  000664  1005               	iorwf	WriteBytesFlash@num_bytes,w,c
  1480  000666  B4D8               	btfsc	status,2,c
  1481  000668  0012               	return	
  1482  00066A  D7A5               	goto	l303
  1483  00066C                     __end_of_WriteBytesFlash:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           prodh	equ	0xFF4
  1490                           prodl	equ	0xFF3
  1491                           intcon	equ	0xFF2
  1492                           postinc0	equ	0xFEE
  1493                           wreg	equ	0xFE8
  1494                           indf1	equ	0xFE7
  1495                           postdec1	equ	0xFE5
  1496                           fsr1h	equ	0xFE2
  1497                           fsr1l	equ	0xFE1
  1498                           indf2	equ	0xFDF
  1499                           fsr2h	equ	0xFDA
  1500                           fsr2l	equ	0xFD9
  1501                           status	equ	0xFD8
  1502                           
  1503 ;; *************** function _EraseFlash *****************
  1504 ;; Defined at:
  1505 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Flash\EraseFlash.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  startaddr       4    0[COMRAM] unsigned long 
  1508 ;;  endaddr         4    4[COMRAM] unsigned long 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  flash_addr      4   10[COMRAM] struct .
  1511 ;;  flag            1    9[COMRAM] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;		None               void
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1521 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1522 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;Total ram usage:       14 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_OdbierzRamke
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text4
  1535  00066C                     __ptext4:
  1536                           	opt stack 0
  1537  00066C                     _EraseFlash:
  1538                           	opt stack 29
  1539                           
  1540                           ;incstack = 0
  1541                           ;incstack = 0
  1542  00066C  6E09               	movwf	??_EraseFlash& (0+255),c
  1543  00066E  0E00               	movlw	0
  1544  000670  6E0A               	movwf	EraseFlash@flag,c
  1545  000672  5009               	movf	??_EraseFlash& (0+255),w,c
  1546  000674  C001  F00B         	movff	EraseFlash@startaddr,EraseFlash@flash_addr
  1547  000678  C002  F00C         	movff	EraseFlash@startaddr+1,EraseFlash@flash_addr+1
  1548  00067C  C003  F00D         	movff	EraseFlash@startaddr+2,EraseFlash@flash_addr+2
  1549  000680  C004  F00E         	movff	EraseFlash@startaddr+3,EraseFlash@flash_addr+3
  1550  000684  D025               	goto	l288
  1551  000686                     l289:
  1552  000686  C00D  FFF8         	movff	EraseFlash@flash_addr+2,tblptru	;volatile
  1553  00068A  C00C  FFF7         	movff	EraseFlash@flash_addr+1,tblptrh	;volatile
  1554  00068E  C00B  FFF6         	movff	EraseFlash@flash_addr,tblptrl	;volatile
  1555  000692  8EA6               	bsf	4006,7,c	;volatile
  1556  000694  9CA6               	bcf	4006,6,c	;volatile
  1557  000696  84A6               	bsf	4006,2,c	;volatile
  1558  000698  88A6               	bsf	4006,4,c	;volatile
  1559  00069A  AEF2               	btfss	intcon,7,c	;volatile
  1560  00069C  D005               	goto	l1403
  1561  00069E  9EF2               	bcf	intcon,7,c	;volatile
  1562  0006A0  6E09               	movwf	??_EraseFlash& (0+255),c
  1563  0006A2  0E01               	movlw	1
  1564  0006A4  6E0A               	movwf	EraseFlash@flag,c
  1565  0006A6  5009               	movf	??_EraseFlash& (0+255),w,c
  1566  0006A8                     l1403:
  1567  0006A8  0E55               	movlw	85
  1568  0006AA  6EA7               	movwf	4007,c	;volatile
  1569  0006AC  0EAA               	movlw	170
  1570  0006AE  6EA7               	movwf	4007,c	;volatile
  1571  0006B0  82A6               	bsf	4006,1,c	;volatile
  1572  0006B2  500A               	movf	EraseFlash@flag,w,c
  1573  0006B4  A4D8               	btfss	status,2,c
  1574  0006B6  8EF2               	bsf	intcon,7,c	;volatile
  1575  0006B8  0E40               	movlw	64
  1576  0006BA  240B               	addwf	EraseFlash@flash_addr,w,c
  1577  0006BC  6E0B               	movwf	EraseFlash@flash_addr,c
  1578  0006BE  0E00               	movlw	0
  1579  0006C0  200C               	addwfc	EraseFlash@flash_addr+1,w,c
  1580  0006C2  6E0C               	movwf	EraseFlash@flash_addr+1,c
  1581  0006C4  0E00               	movlw	0
  1582  0006C6  200D               	addwfc	EraseFlash@flash_addr+2,w,c
  1583  0006C8  6E0D               	movwf	EraseFlash@flash_addr+2,c
  1584  0006CA  0E00               	movlw	0
  1585  0006CC  200E               	addwfc	EraseFlash@flash_addr+3,w,c
  1586  0006CE  6E0E               	movwf	EraseFlash@flash_addr+3,c
  1587  0006D0                     l288:
  1588  0006D0  5005               	movf	EraseFlash@endaddr,w,c
  1589  0006D2  5C0B               	subwf	EraseFlash@flash_addr,w,c
  1590  0006D4  5006               	movf	EraseFlash@endaddr+1,w,c
  1591  0006D6  580C               	subwfb	EraseFlash@flash_addr+1,w,c
  1592  0006D8  5007               	movf	EraseFlash@endaddr+2,w,c
  1593  0006DA  580D               	subwfb	EraseFlash@flash_addr+2,w,c
  1594  0006DC  5008               	movf	EraseFlash@endaddr+3,w,c
  1595  0006DE  580E               	subwfb	EraseFlash@flash_addr+3,w,c
  1596  0006E0  B0D8               	btfsc	status,0,c
  1597  0006E2  0012               	return	
  1598  0006E4  D7D0               	goto	l289
  1599  0006E6                     __end_of_EraseFlash:
  1600                           	opt stack 0
  1601                           tblptru	equ	0xFF8
  1602                           tblptrh	equ	0xFF7
  1603                           tblptrl	equ	0xFF6
  1604                           tablat	equ	0xFF5
  1605                           prodh	equ	0xFF4
  1606                           prodl	equ	0xFF3
  1607                           intcon	equ	0xFF2
  1608                           postinc0	equ	0xFEE
  1609                           wreg	equ	0xFE8
  1610                           indf1	equ	0xFE7
  1611                           postdec1	equ	0xFE5
  1612                           fsr1h	equ	0xFE2
  1613                           fsr1l	equ	0xFE1
  1614                           indf2	equ	0xFDF
  1615                           fsr2h	equ	0xFDA
  1616                           fsr2l	equ	0xFD9
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _LED_Error *****************
  1620 ;; Defined at:
  1621 ;;		line 50 in file "LED.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2   26[COMRAM] unsigned int 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;Total ram usage:        1 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    1
  1642 ;; This function calls:
  1643 ;;		_LED_Control
  1644 ;; This function is called by:
  1645 ;;		_OdbierzRamke
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text5
  1650  000710                     __ptext5:
  1651                           	opt stack 0
  1652  000710                     _LED_Error:
  1653                           	opt stack 28
  1654                           
  1655                           ;LED.c: 51: LED_Control(RED,0b1010101010);
  1656                           
  1657                           ;incstack = 0
  1658                           ;incstack = 0
  1659  000710  6E06               	movwf	??_LED_Error& (0+255),c
  1660  000712  0E00               	movlw	0
  1661  000714  6E01               	movwf	?_LED_Control,c
  1662  000716  5006               	movf	??_LED_Error& (0+255),w,c
  1663  000718  0E02               	movlw	2
  1664  00071A  6E03               	movwf	?_LED_Control+2,c
  1665  00071C  0EAA               	movlw	170
  1666  00071E  6E02               	movwf	?_LED_Control+1,c
  1667  000720  EC03  F002         	call	_LED_Control	;wreg free
  1668                           
  1669                           ;LED.c: 52: LED_Control(GREEN,0b0000000000);
  1670  000724  6E06               	movwf	??_LED_Error& (0+255),c
  1671  000726  0E01               	movlw	1
  1672  000728  6E01               	movwf	?_LED_Control,c
  1673  00072A  5006               	movf	??_LED_Error& (0+255),w,c
  1674  00072C  0E00               	movlw	0
  1675  00072E  6E03               	movwf	?_LED_Control+2,c
  1676  000730  0E00               	movlw	0
  1677  000732  6E02               	movwf	?_LED_Control+1,c
  1678  000734  EC03  F002         	call	_LED_Control	;wreg free
  1679                           
  1680                           ;LED.c: 53: return 1;
  1681                           ;	Return value of _LED_Error is never used
  1682  000738  0012               	return	
  1683  00073A                     __end_of_LED_Error:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           prodh	equ	0xFF4
  1690                           prodl	equ	0xFF3
  1691                           intcon	equ	0xFF2
  1692                           postinc0	equ	0xFEE
  1693                           wreg	equ	0xFE8
  1694                           indf1	equ	0xFE7
  1695                           postdec1	equ	0xFE5
  1696                           fsr1h	equ	0xFE2
  1697                           fsr1l	equ	0xFE1
  1698                           indf2	equ	0xFDF
  1699                           fsr2h	equ	0xFDA
  1700                           fsr2l	equ	0xFD9
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function _LED_Control *****************
  1704 ;; Defined at:
  1705 ;;		line 300 in file "LED.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  color           1    0[COMRAM] enum E16889
  1708 ;;  diode           2    1[COMRAM] unsigned int 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  cos             2    3[COMRAM] unsigned int 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      unsigned char 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1720 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1723 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1724 ;;Total ram usage:        5 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_LED_Error
  1730 ;;		_LED_Clear
  1731 ;;		_LED_Update
  1732 ;;		_LED_Light_Pos
  1733 ;;		_INI_LED_Start
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text6
  1738  000406                     __ptext6:
  1739                           	opt stack 0
  1740  000406                     _LED_Control:
  1741                           	opt stack 29
  1742                           
  1743                           ;LED.c: 301: UINT cos =1;
  1744                           
  1745                           ;incstack = 0
  1746                           ;incstack = 0
  1747  000406  0E00               	movlw	0
  1748  000408  6E05               	movwf	LED_Control@cos+1,c
  1749  00040A  0E01               	movlw	1
  1750  00040C  6E04               	movwf	LED_Control@cos,c
  1751                           
  1752                           ;LED.c: 302: if(color == RED)
  1753  00040E  6601               	tstfsz	LED_Control@color,c
  1754  000410  D050               	goto	l231
  1755                           
  1756                           ;LED.c: 303: {
  1757                           ;LED.c: 305: if((diode & 0b0000000001)== 0b0000000001)
  1758  000412  A002               	btfss	LED_Control@diode,0,c
  1759  000414  D003               	goto	l1469
  1760                           
  1761                           ;LED.c: 306: {
  1762                           ;LED.c: 307: LATD = LATD | ~0b11101111;
  1763  000416  508C               	movf	3980,w,c	;volatile
  1764  000418  0910               	iorlw	16
  1765  00041A  D002               	goto	L4
  1766  00041C                     l1469:
  1767                           
  1768                           ;LED.c: 309: else
  1769                           ;LED.c: 310: {
  1770                           ;LED.c: 311: LATD = LATD &0b11101111;
  1771  00041C  508C               	movf	3980,w,c	;volatile
  1772  00041E  0BEF               	andlw	239
  1773  000420                     L4:
  1774  000420  6E8C               	movwf	3980,c	;volatile
  1775                           
  1776                           ;LED.c: 312: }
  1777                           ;LED.c: 314: if((diode & 0b0000000010) == 0b0000000010)
  1778  000422  A202               	btfss	LED_Control@diode,1,c
  1779  000424  D003               	goto	l1475
  1780                           
  1781                           ;LED.c: 315: {
  1782                           ;LED.c: 316: LATD = LATD | ~0b10111111;
  1783  000426  508C               	movf	3980,w,c	;volatile
  1784  000428  0940               	iorlw	64
  1785  00042A  D002               	goto	L5
  1786  00042C                     l1475:
  1787                           
  1788                           ;LED.c: 318: else
  1789                           ;LED.c: 319: {
  1790                           ;LED.c: 320: LATD = LATD & 0b10111111;
  1791  00042C  508C               	movf	3980,w,c	;volatile
  1792  00042E  0BBF               	andlw	191
  1793  000430                     L5:
  1794  000430  6E8C               	movwf	3980,c	;volatile
  1795                           
  1796                           ;LED.c: 321: }
  1797                           ;LED.c: 323: if((diode & 0b0000000100) == 0b0000000100)
  1798  000432  A402               	btfss	LED_Control@diode,2,c
  1799  000434  D003               	goto	l1481
  1800                           
  1801                           ;LED.c: 324: {
  1802                           ;LED.c: 325: LATB = LATB | ~0b11111110;
  1803  000436  508A               	movf	3978,w,c	;volatile
  1804  000438  0901               	iorlw	1
  1805  00043A  D002               	goto	L6
  1806  00043C                     l1481:
  1807                           
  1808                           ;LED.c: 327: else
  1809                           ;LED.c: 328: {
  1810                           ;LED.c: 329: LATB = LATB & 0b11111110;
  1811  00043C  508A               	movf	3978,w,c	;volatile
  1812  00043E  0BFE               	andlw	254
  1813  000440                     L6:
  1814  000440  6E8A               	movwf	3978,c	;volatile
  1815                           
  1816                           ;LED.c: 330: }
  1817                           ;LED.c: 333: if((diode & 0b0000001000) == 0b0000001000)
  1818  000442  A602               	btfss	LED_Control@diode,3,c
  1819  000444  D003               	goto	l1487
  1820                           
  1821                           ;LED.c: 334: {
  1822                           ;LED.c: 335: LATA = LATA | ~0b11111101;
  1823  000446  5089               	movf	3977,w,c	;volatile
  1824  000448  0902               	iorlw	2
  1825  00044A  D002               	goto	L7
  1826  00044C                     l1487:
  1827                           
  1828                           ;LED.c: 337: else
  1829                           ;LED.c: 338: {
  1830                           ;LED.c: 339: LATA = LATA & 0b11111101;
  1831  00044C  5089               	movf	3977,w,c	;volatile
  1832  00044E  0BFD               	andlw	253
  1833  000450                     L7:
  1834  000450  6E89               	movwf	3977,c	;volatile
  1835                           
  1836                           ;LED.c: 340: }
  1837                           ;LED.c: 343: if((diode & 0b0000010000) == 0b0000010000)
  1838  000452  A802               	btfss	LED_Control@diode,4,c
  1839  000454  D003               	goto	l1493
  1840                           
  1841                           ;LED.c: 344: {
  1842                           ;LED.c: 345: LATA = LATA | ~0b11110111;
  1843  000456  5089               	movf	3977,w,c	;volatile
  1844  000458  0908               	iorlw	8
  1845  00045A  D002               	goto	L8
  1846  00045C                     l1493:
  1847                           
  1848                           ;LED.c: 347: else
  1849                           ;LED.c: 348: {
  1850                           ;LED.c: 349: LATA = LATA & 0b11110111;
  1851  00045C  5089               	movf	3977,w,c	;volatile
  1852  00045E  0BF7               	andlw	247
  1853  000460                     L8:
  1854  000460  6E89               	movwf	3977,c	;volatile
  1855                           
  1856                           ;LED.c: 350: }
  1857                           ;LED.c: 353: if((diode & 0b0000100000) == 0b0000100000)
  1858  000462  AA02               	btfss	LED_Control@diode,5,c
  1859  000464  D003               	goto	l1499
  1860                           
  1861                           ;LED.c: 354: {
  1862                           ;LED.c: 355: LATA = LATA | ~0b11011111;
  1863  000466  5089               	movf	3977,w,c	;volatile
  1864  000468  0920               	iorlw	32
  1865  00046A  D002               	goto	L9
  1866  00046C                     l1499:
  1867                           
  1868                           ;LED.c: 357: else
  1869                           ;LED.c: 358: {
  1870                           ;LED.c: 359: LATA = LATA & 0b11011111;
  1871  00046C  5089               	movf	3977,w,c	;volatile
  1872  00046E  0BDF               	andlw	223
  1873  000470                     L9:
  1874  000470  6E89               	movwf	3977,c	;volatile
  1875                           
  1876                           ;LED.c: 360: }
  1877                           ;LED.c: 362: if((diode & 0b0001000000) == 0b0001000000)
  1878  000472  AC02               	btfss	LED_Control@diode,6,c
  1879  000474  D003               	goto	l1505
  1880                           
  1881                           ;LED.c: 363: {
  1882                           ;LED.c: 364: LATE = LATE | ~0b11111101;
  1883  000476  508D               	movf	3981,w,c	;volatile
  1884  000478  0902               	iorlw	2
  1885  00047A  D002               	goto	L10
  1886  00047C                     l1505:
  1887                           
  1888                           ;LED.c: 366: else
  1889                           ;LED.c: 367: {
  1890                           ;LED.c: 368: LATE = LATE & 0b11111101;
  1891  00047C  508D               	movf	3981,w,c	;volatile
  1892  00047E  0BFD               	andlw	253
  1893  000480                     L10:
  1894  000480  6E8D               	movwf	3981,c	;volatile
  1895                           
  1896                           ;LED.c: 369: }
  1897                           ;LED.c: 371: if((diode & 0b0010000000) == 0b0010000000)
  1898  000482  AE02               	btfss	LED_Control@diode,7,c
  1899  000484  D003               	goto	l1511
  1900                           
  1901                           ;LED.c: 372: {
  1902                           ;LED.c: 373: LATA = LATA | ~0b01111111;
  1903  000486  5089               	movf	3977,w,c	;volatile
  1904  000488  0980               	iorlw	128
  1905  00048A  D002               	goto	L11
  1906  00048C                     l1511:
  1907                           
  1908                           ;LED.c: 375: else
  1909                           ;LED.c: 376: {
  1910                           ;LED.c: 377: LATA = LATA & 0b01111111;
  1911  00048C  5089               	movf	3977,w,c	;volatile
  1912  00048E  0B7F               	andlw	127
  1913  000490                     L11:
  1914  000490  6E89               	movwf	3977,c	;volatile
  1915                           
  1916                           ;LED.c: 378: }
  1917                           ;LED.c: 381: if((diode & 0b0100000000) == 0b0100000000)
  1918  000492  A003               	btfss	LED_Control@diode+1,0,c
  1919  000494  D003               	goto	l1517
  1920                           
  1921                           ;LED.c: 382: {
  1922                           ;LED.c: 383: LATD = LATD | ~0b11111110;
  1923  000496  508C               	movf	3980,w,c	;volatile
  1924  000498  0901               	iorlw	1
  1925  00049A  D002               	goto	L12
  1926  00049C                     l1517:
  1927                           
  1928                           ;LED.c: 385: else
  1929                           ;LED.c: 386: {
  1930                           ;LED.c: 387: LATD = LATD & 0b11111110;
  1931  00049C  508C               	movf	3980,w,c	;volatile
  1932  00049E  0BFE               	andlw	254
  1933  0004A0                     L12:
  1934  0004A0  6E8C               	movwf	3980,c	;volatile
  1935                           
  1936                           ;LED.c: 388: }
  1937                           ;LED.c: 390: if((diode & 0b1000000000) == 0b1000000000)
  1938  0004A2  A203               	btfss	LED_Control@diode+1,1,c
  1939  0004A4  D003               	goto	l1523
  1940                           
  1941                           ;LED.c: 391: {
  1942                           ;LED.c: 392: LATD = LATD | ~0b11111011;
  1943  0004A6  508C               	movf	3980,w,c	;volatile
  1944  0004A8  0904               	iorlw	4
  1945  0004AA  D002               	goto	L13
  1946  0004AC                     l1523:
  1947                           
  1948                           ;LED.c: 394: else
  1949                           ;LED.c: 395: {
  1950                           ;LED.c: 396: LATD = LATD & 0b11111011;
  1951  0004AC  508C               	movf	3980,w,c	;volatile
  1952  0004AE  0BFB               	andlw	251
  1953  0004B0                     L13:
  1954  0004B0  6E8C               	movwf	3980,c	;volatile
  1955  0004B2                     l231:
  1956                           
  1957                           ;LED.c: 397: }
  1958                           ;LED.c: 399: }
  1959                           ;LED.c: 401: if(color == GREEN)
  1960  0004B2  0401               	decf	LED_Control@color,w,c
  1961  0004B4  A4D8               	btfss	status,2,c
  1962  0004B6  D050               	goto	l273
  1963                           
  1964                           ;LED.c: 402: {
  1965                           ;LED.c: 404: if((diode & 0b0000000001) == 0b0000000001)
  1966  0004B8  A002               	btfss	LED_Control@diode,0,c
  1967  0004BA  D003               	goto	l1529
  1968                           
  1969                           ;LED.c: 405: {
  1970                           ;LED.c: 406: LATD = LATD | ~0b11011111;
  1971  0004BC  508C               	movf	3980,w,c	;volatile
  1972  0004BE  0920               	iorlw	32
  1973  0004C0  D002               	goto	L14
  1974  0004C2                     l1529:
  1975                           
  1976                           ;LED.c: 408: else
  1977                           ;LED.c: 409: {
  1978                           ;LED.c: 410: LATD = LATD & 0b11011111;
  1979  0004C2  508C               	movf	3980,w,c	;volatile
  1980  0004C4  0BDF               	andlw	223
  1981  0004C6                     L14:
  1982  0004C6  6E8C               	movwf	3980,c	;volatile
  1983                           
  1984                           ;LED.c: 411: }
  1985                           ;LED.c: 414: if((diode & 0b0000000010) == 0b0000000010)
  1986  0004C8  A202               	btfss	LED_Control@diode,1,c
  1987  0004CA  D003               	goto	l1535
  1988                           
  1989                           ;LED.c: 415: {
  1990                           ;LED.c: 416: LATD = LATD | ~0b01111111;
  1991  0004CC  508C               	movf	3980,w,c	;volatile
  1992  0004CE  0980               	iorlw	128
  1993  0004D0  D002               	goto	L15
  1994  0004D2                     l1535:
  1995                           
  1996                           ;LED.c: 418: else
  1997                           ;LED.c: 419: {
  1998                           ;LED.c: 420: LATD = LATD & 0b01111111;
  1999  0004D2  508C               	movf	3980,w,c	;volatile
  2000  0004D4  0B7F               	andlw	127
  2001  0004D6                     L15:
  2002  0004D6  6E8C               	movwf	3980,c	;volatile
  2003                           
  2004                           ;LED.c: 421: }
  2005                           ;LED.c: 424: if((diode & 0b0000000100) == 0b0000000100)
  2006  0004D8  A402               	btfss	LED_Control@diode,2,c
  2007  0004DA  D003               	goto	l1541
  2008                           
  2009                           ;LED.c: 425: {
  2010                           ;LED.c: 426: LATB = LATB | ~0b11111101;
  2011  0004DC  508A               	movf	3978,w,c	;volatile
  2012  0004DE  0902               	iorlw	2
  2013  0004E0  D002               	goto	L16
  2014  0004E2                     l1541:
  2015                           
  2016                           ;LED.c: 428: else
  2017                           ;LED.c: 429: {
  2018                           ;LED.c: 430: LATB = LATB & 0b11111101;
  2019  0004E2  508A               	movf	3978,w,c	;volatile
  2020  0004E4  0BFD               	andlw	253
  2021  0004E6                     L16:
  2022  0004E6  6E8A               	movwf	3978,c	;volatile
  2023                           
  2024                           ;LED.c: 431: }
  2025                           ;LED.c: 433: if((diode & 0b0000001000) == 0b0000001000)
  2026  0004E8  A602               	btfss	LED_Control@diode,3,c
  2027  0004EA  D003               	goto	l1547
  2028                           
  2029                           ;LED.c: 434: {
  2030                           ;LED.c: 435: LATA = LATA | ~0b11111011;
  2031  0004EC  5089               	movf	3977,w,c	;volatile
  2032  0004EE  0904               	iorlw	4
  2033  0004F0  D002               	goto	L17
  2034  0004F2                     l1547:
  2035                           
  2036                           ;LED.c: 437: else
  2037                           ;LED.c: 438: {
  2038                           ;LED.c: 439: LATA = LATA & 0b11111011;
  2039  0004F2  5089               	movf	3977,w,c	;volatile
  2040  0004F4  0BFB               	andlw	251
  2041  0004F6                     L17:
  2042  0004F6  6E89               	movwf	3977,c	;volatile
  2043                           
  2044                           ;LED.c: 440: }
  2045                           ;LED.c: 443: if((diode & 0b0000010000) == 0b0000010000)
  2046  0004F8  A802               	btfss	LED_Control@diode,4,c
  2047  0004FA  D003               	goto	l1553
  2048                           
  2049                           ;LED.c: 444: {
  2050                           ;LED.c: 445: LATA = LATA | ~0b11101111;
  2051  0004FC  5089               	movf	3977,w,c	;volatile
  2052  0004FE  0910               	iorlw	16
  2053  000500  D002               	goto	L18
  2054  000502                     l1553:
  2055                           
  2056                           ;LED.c: 447: else
  2057                           ;LED.c: 448: {
  2058                           ;LED.c: 449: LATA = LATA & 0b11101111;
  2059  000502  5089               	movf	3977,w,c	;volatile
  2060  000504  0BEF               	andlw	239
  2061  000506                     L18:
  2062  000506  6E89               	movwf	3977,c	;volatile
  2063                           
  2064                           ;LED.c: 450: }
  2065                           ;LED.c: 453: if((diode & 0b0000100000) == 0b0000100000)
  2066  000508  AA02               	btfss	LED_Control@diode,5,c
  2067  00050A  D003               	goto	l1559
  2068                           
  2069                           ;LED.c: 454: {
  2070                           ;LED.c: 455: LATE = LATE | ~0b11111110;
  2071  00050C  508D               	movf	3981,w,c	;volatile
  2072  00050E  0901               	iorlw	1
  2073  000510  D002               	goto	L19
  2074  000512                     l1559:
  2075                           
  2076                           ;LED.c: 457: else
  2077                           ;LED.c: 458: {
  2078                           ;LED.c: 459: LATE = LATE & 0b11111110;
  2079  000512  508D               	movf	3981,w,c	;volatile
  2080  000514  0BFE               	andlw	254
  2081  000516                     L19:
  2082  000516  6E8D               	movwf	3981,c	;volatile
  2083                           
  2084                           ;LED.c: 460: }
  2085                           ;LED.c: 463: if((diode & 0b0001000000) == 0b0001000000)
  2086  000518  AC02               	btfss	LED_Control@diode,6,c
  2087  00051A  D003               	goto	l1565
  2088                           
  2089                           ;LED.c: 464: {
  2090                           ;LED.c: 465: LATE = LATE | ~0b11111011;
  2091  00051C  508D               	movf	3981,w,c	;volatile
  2092  00051E  0904               	iorlw	4
  2093  000520  D002               	goto	L20
  2094  000522                     l1565:
  2095                           
  2096                           ;LED.c: 467: else
  2097                           ;LED.c: 468: {
  2098                           ;LED.c: 469: LATE = LATE & 0b11111011;
  2099  000522  508D               	movf	3981,w,c	;volatile
  2100  000524  0BFB               	andlw	251
  2101  000526                     L20:
  2102  000526  6E8D               	movwf	3981,c	;volatile
  2103                           
  2104                           ;LED.c: 470: }
  2105                           ;LED.c: 472: if((diode & 0b0010000000) == 0b0010000000)
  2106  000528  AE02               	btfss	LED_Control@diode,7,c
  2107  00052A  D003               	goto	l1571
  2108                           
  2109                           ;LED.c: 473: {
  2110                           ;LED.c: 474: LATA = LATA | ~0b10111111;
  2111  00052C  5089               	movf	3977,w,c	;volatile
  2112  00052E  0940               	iorlw	64
  2113  000530  D002               	goto	L21
  2114  000532                     l1571:
  2115                           
  2116                           ;LED.c: 476: else
  2117                           ;LED.c: 477: {
  2118                           ;LED.c: 478: LATA = LATA & 0b10111111;
  2119  000532  5089               	movf	3977,w,c	;volatile
  2120  000534  0BBF               	andlw	191
  2121  000536                     L21:
  2122  000536  6E89               	movwf	3977,c	;volatile
  2123                           
  2124                           ;LED.c: 479: }
  2125                           ;LED.c: 481: if((diode & 0b0100000000) == 0b0100000000)
  2126  000538  A003               	btfss	LED_Control@diode+1,0,c
  2127  00053A  D003               	goto	l1577
  2128                           
  2129                           ;LED.c: 482: {
  2130                           ;LED.c: 483: LATD = LATD | ~0b11111101;
  2131  00053C  508C               	movf	3980,w,c	;volatile
  2132  00053E  0902               	iorlw	2
  2133  000540  D002               	goto	L22
  2134  000542                     l1577:
  2135                           
  2136                           ;LED.c: 485: else
  2137                           ;LED.c: 486: {
  2138                           ;LED.c: 487: LATD = LATD & 0b11111101;
  2139  000542  508C               	movf	3980,w,c	;volatile
  2140  000544  0BFD               	andlw	253
  2141  000546                     L22:
  2142  000546  6E8C               	movwf	3980,c	;volatile
  2143                           
  2144                           ;LED.c: 488: }
  2145                           ;LED.c: 490: if((diode & 0b1000000000) == 0b1000000000)
  2146  000548  A203               	btfss	LED_Control@diode+1,1,c
  2147  00054A  D003               	goto	l1583
  2148                           
  2149                           ;LED.c: 491: {
  2150                           ;LED.c: 492: LATD = LATD | ~0b11110111;
  2151  00054C  508C               	movf	3980,w,c	;volatile
  2152  00054E  0908               	iorlw	8
  2153  000550  D002               	goto	L23
  2154  000552                     l1583:
  2155                           
  2156                           ;LED.c: 494: else
  2157                           ;LED.c: 495: {
  2158                           ;LED.c: 496: LATD = LATD &0b11110111;
  2159  000552  508C               	movf	3980,w,c	;volatile
  2160  000554  0BF7               	andlw	247
  2161  000556                     L23:
  2162  000556  6E8C               	movwf	3980,c	;volatile
  2163  000558                     l273:
  2164  000558  0012               	return	
  2165  00055A                     __end_of_LED_Control:
  2166                           	opt stack 0
  2167                           tblptru	equ	0xFF8
  2168                           tblptrh	equ	0xFF7
  2169                           tblptrl	equ	0xFF6
  2170                           tablat	equ	0xFF5
  2171                           prodh	equ	0xFF4
  2172                           prodl	equ	0xFF3
  2173                           intcon	equ	0xFF2
  2174                           postinc0	equ	0xFEE
  2175                           wreg	equ	0xFE8
  2176                           indf1	equ	0xFE7
  2177                           postdec1	equ	0xFE5
  2178                           fsr1h	equ	0xFE2
  2179                           fsr1l	equ	0xFE1
  2180                           indf2	equ	0xFDF
  2181                           fsr2h	equ	0xFDA
  2182                           fsr2l	equ	0xFD9
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function _ResetDevice *****************
  2186 ;; Defined at:
  2187 ;;		line 213 in file "main.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;		None               void
  2194 ;; Registers used:
  2195 ;;		None
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_OdbierzRamke
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text7
  2216  0003FA                     __ptext7:
  2217                           	opt stack 0
  2218  0003FA                     _ResetDevice:
  2219                           	opt stack 30
  2220                           
  2221                           ;incstack = 0
  2222                           ;incstack = 0
  2223  0003FA  EF00 F006          	goto	3072	;# 
  2224  0003FE  0012               	return	
  2225  000400                     __end_of_ResetDevice:
  2226                           	opt stack 0
  2227  0000                     tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           prodh	equ	0xFF4
  2232                           prodl	equ	0xFF3
  2233                           intcon	equ	0xFF2
  2234                           postinc0	equ	0xFEE
  2235                           wreg	equ	0xFE8
  2236                           indf1	equ	0xFE7
  2237                           postdec1	equ	0xFE5
  2238                           fsr1h	equ	0xFE2
  2239                           fsr1l	equ	0xFE1
  2240                           indf2	equ	0xFDF
  2241                           fsr2h	equ	0xFDA
  2242                           fsr2l	equ	0xFD9
  2243                           status	equ	0xFD8
  2244                           tblptru	equ	0xFF8
  2245                           tblptrh	equ	0xFF7
  2246                           tblptrl	equ	0xFF6
  2247                           tablat	equ	0xFF5
  2248                           prodh	equ	0xFF4
  2249                           prodl	equ	0xFF3
  2250                           intcon	equ	0xFF2
  2251                           postinc0	equ	0xFEE
  2252                           wreg	equ	0xFE8
  2253                           indf1	equ	0xFE7
  2254                           postdec1	equ	0xFE5
  2255                           fsr1h	equ	0xFE2
  2256                           fsr1l	equ	0xFE1
  2257                           indf2	equ	0xFDF
  2258                           fsr2h	equ	0xFDA
  2259                           fsr2l	equ	0xFD9
  2260                           status	equ	0xFD8
  2261                           
  2262                           	psect	rparam
  2263  0000                     tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           prodh	equ	0xFF4
  2268                           prodl	equ	0xFF3
  2269                           intcon	equ	0xFF2
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           indf1	equ	0xFE7
  2273                           postdec1	equ	0xFE5
  2274                           fsr1h	equ	0xFE2
  2275                           fsr1l	equ	0xFE1
  2276                           indf2	equ	0xFDF
  2277                           fsr2h	equ	0xFDA
  2278                           fsr2l	equ	0xFD9
  2279                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      46
    BANK0           160      0      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    WriteBytesFlash@saveptr	PTR unsigned char  size(3) Largest target is 2047
		 -> ROM(CODE[2047]), 

    WriteBytesFlash@flash_array	PTR unsigned char  size(2) Largest target is 65
		 -> buforCAN(BANK0[65]), 

    WriteBytesFlash@startptr	PTR unsigned char  size(3) Largest target is 2047
		 -> ROM(CODE[2047]), 

    OdbierzRamke@pointerU8	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXB0D0(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_OdbierzRamke
    _LED_Clear->_LED_Control
    _OdbierzRamke->_WriteBytesFlash
    _LED_Error->_LED_Control

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1778
                                             28 COMRAM     2     2      0
                       _OdbierzRamke
                        _ResetDevice
                          _LED_Clear
 ---------------------------------------------------------------------------------
 (1) _LED_Clear                                            1     1      0     485
                                              5 COMRAM     1     1      0
                        _LED_Control
 ---------------------------------------------------------------------------------
 (1) _OdbierzRamke                                         9     9      0    1270
                                             21 COMRAM     7     7      0
                        _ResetDevice
                          _LED_Error
                         _EraseFlash
                    _WriteBytesFlash
 ---------------------------------------------------------------------------------
 (2) _WriteBytesFlash                                     21    13      8     302
                                              0 COMRAM    21    13      8
 ---------------------------------------------------------------------------------
 (2) _EraseFlash                                          14     6      8     182
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _LED_Error                                            1     1      0     485
                                              5 COMRAM     1     1      0
                        _LED_Control
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          5     2      3     485
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _ResetDevice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OdbierzRamke
     _ResetDevice
     _LED_Error
       _LED_Control
     _EraseFlash
     _WriteBytesFlash
   _ResetDevice
   _LED_Clear
     _LED_Control

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      41       5       40.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      2E       1       48.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       3       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      20        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Jul 31 13:53:46 2019

                        l98 0036                          l99 0098                 __CFG_BORV$3 000000  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                         l100 003C                         l101 0042  
                       l102 0048                         l103 004E                         l104 0054  
                       l105 005A                         l106 0060                         l231 04B2  
                       l303 05B6                         l128 0254                         l307 0604  
                       l309 064C                         l273 0558                         l288 06D0  
                       l289 0686                __CFG_CPB$OFF 000000                __CFG_CPD$OFF 000000  
                       u565 057E                         u575 058E                         u945 0120  
                       prod 000FF3                ?_LED_Control 0001                         wreg 000FE8  
              __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000                        l1403 06A8  
                      l1511 048C                        l1505 047C                        l1523 04AC  
                      l1443 0630                        l1427 05C4                        l1541 04E2  
                      l1517 049C                        l1437 05FC                        l1535 04D2  
                      l1553 0502                        l1529 04C2                        l1481 043C  
                      l1721 01FA                        l1713 01D8                        l1571 0532  
                      l1547 04F2                        l1475 042C                        l1459 0662  
                      l1723 0204                        l1715 01DE                        l1731 0222  
                      l1565 0522                        l1493 045C                        l1469 041C  
                      l1725 020E                        l1717 01E6                        l1709 01C4  
                      l1813 0364                        l1583 0552                        l1559 0512  
                      l1487 044C                        l1727 0218                        l1719 01F0  
                      l1823 0394                        l1577 0542                        l1681 00F0  
                      l1665 00AE                        l1657 0066                        l1499 046C  
                      l1765 0296                        l1695 0140                        l1689 012C  
                      l1699 014E                        _LATA 000F89                        _LATB 000F8A  
                      _LATD 000F8C                        _LATE 000F8D                        _LOCK 0024  
                      _RCON 000FD0                        _TMR0 000FD6            LED_Control@diode 0002  
             ?_OdbierzRamke 0001                        _main 0256            LED_Control@color 0001  
                      fsr2h 000FDA                        indf1 000FE7                        fsr1l 000FE1  
                      indf2 000FDF                        fsr2l 000FD9          __size_of_LED_Clear 002A  
                      prodh 000FF4                        prodl 000FF3                        start 001C  
        __size_of_LED_Error 002A               __CFG_IESO$OFF 000000      WriteBytesFlash@saveptr 000A  
             __CFG_MCLRE$ON 000000                       _B0CON 000E20                       _B1CON 000E30  
                     _B2CON 000E40                       _B3CON 000E50                       _B4CON 000E60  
                     _B5CON 000E70                       ?_main 0001                       _T0CON 000FD5  
                     _MSEL0 000DF0                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000                  _EraseFlash 066C               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
   WriteBytesFlash@saddress 0012                       tablat 000FF5              ??_OdbierzRamke 0016  
                     status 000FD8              __CFG_PBADEN$ON 000000             __initialization 03B0  
   WriteBytesFlash@startptr 000F                __end_of_main 03B0                      ??_main 001D  
             __activetblptr 000002           __end_of_LED_Clear 0710           __end_of_LED_Error 073A  
 WriteBytesFlash@write_byte 000D               ??_ResetDevice 0001                      _CANCON 000F6F  
                    _EECON2 000FA7             __CFG_BBSIZ$1024 000000           EraseFlash@endaddr 0005  
                    _RXB0D0 000F66              __CFG_XINST$OFF 000000              __CFG_STVREN$ON 000000  
                    clear_0 03B6                      clear_1 03C2             __CFG_BOREN$BOHW 000000  
              __pdataCOMRAM 0028                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                 ?_EraseFlash 0001        __size_of_LED_Control 0154  
                _SourceAddr 001F                  __accesstop 0060     __end_of__initialization 03E8  
  WriteBytesFlash@num_bytes 0005         __end_of_ResetDevice 0400              __pcstackCOMRAM 0001  
  WriteBytesFlash@startaddr 0001        __end_of_OdbierzRamke 0256                  __pbssBANK0 0060  
       __size_of_EraseFlash 007A    __size_of_WriteBytesFlash 0112                     _ECANCON 000F77  
                   _CANSTAT 000F6E               OdbierzRamke@i 001C               OdbierzRamke@k 001A  
                   _TBLPTRH 000FF7                     _TBLPTRL 000FF6                     _TBLPTRU 000FF8  
                   _RXB0CON 000F60                     _RXB1CON 000F50                     _RXFCON0 000DD4  
                   _RXFCON1 000DD5                 _ResetDevice 03FA                     __Hparam 0000  
                   __Lparam 0000                     __pcinit 03B0                     __ramtop 0D00  
                   __ptext0 0256                     __ptext1 06E6                     __ptext2 0020  
                   __ptext3 055A                     __ptext4 066C                     __ptext5 0710  
                   __ptext6 0406                     __ptext7 03FA                   _T0CONbits 000FD5  
                   _counter 0025                   _LED_Clear 06E6                   _LED_Error 0710  
      end_of_initialization 03E8        EraseFlash@flash_addr 000B               __Lmediumconst 0000  
     OdbierzRamke@pointerU8 0018                     postdec1 000FE5       __size_of_OdbierzRamke 0236  
                   postinc0 000FEE               LED_Update@Red 0023           ??_WriteBytesFlash 0009  
                 _TRISAbits 000F92                   _TRISCbits 000F94                ??_EraseFlash 0009  
                ?_LED_Clear 0001                  ?_LED_Error 0001                _OdbierzRamke 0020  
        __end_of_EraseFlash 06E6  WriteBytesFlash@flash_array 0007               __pidataCOMRAM 03F2  
             ??_LED_Control 0004         start_initialization 03B0            __CFG_OSC$IRCIO67 000000  
          __CFG_LPT1OSC$OFF 000000         OdbierzRamke@tempCON 001B             _Fulfillment_Lvl 002C  
               __pbssCOMRAM 001F                 _BRGCON1bits 000F70                 _BRGCON2bits 000F71  
               _BRGCON3bits 000F72                 ??_LED_Clear 0006                ?_ResetDevice 0001  
               ??_LED_Error 0006         __end_of_LED_Control 055A            __CFG_WDTPS$32768 000000  
                  _RXF0EIDH 000F02                    _RXF0EIDL 000F03             _WriteBytesFlash 055A  
                  _RXF0SIDH 000F00                    _RXF0SIDL 000F01                    _RXM0EIDH 000F1A  
                  _RXM0EIDL 000F1B                    _RXM0SIDH 000F18                    _RXM0SIDL 000F19  
                 main@Delay 001E              LED_Control@cos 0004                 _LED_Control 0406  
            EraseFlash@flag 000A                   copy_data0 03DC                  _EECON1bits 000FA6  
                  __Hrparam 0000                    __Lrparam 0000         EraseFlash@startaddr 0001  
               _iloscBajtow 0026          _ramekInicjalizacji 0027                _RXF0SIDLbits 000F01  
                  _buforCAN 0060        __size_of_ResetDevice 0006               __size_of_main 015A  
   __end_of_WriteBytesFlash 066C         WriteBytesFlash@flag 000E                  _INTCONbits 000FF2  
           LED_Update@Green 002E              LED_Update@pos1 0028              LED_Update@pos2 002A  
          ?_WriteBytesFlash 0001  
