

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Jul 10 06:23:53 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	intcode
    20  000008  EF04 F006          	goto	3080	;# 
    21                           
    22                           	psect	intcodelo
    23  000018  EF0C F006          	goto	3096	;# 
    24  0000                     _TMR0	set	4054
    25  0000                     _B0CON	set	3712
    26  0000                     _B1CON	set	3728
    27  0000                     _B2CON	set	3744
    28  0000                     _B3CON	set	3760
    29  0000                     _B4CON	set	3776
    30  0000                     _B5CON	set	3792
    31  0000                     _BRGCON1bits	set	3651
    32  0000                     _BRGCON2bits	set	3652
    33  0000                     _BRGCON3bits	set	3653
    34  0000                     _CANCON	set	3951
    35  0000                     _CANSTAT	set	3950
    36  0000                     _ECANCON	set	3954
    37  0000                     _EECON1bits	set	3967
    38  0000                     _EECON2	set	3966
    39  0000                     _INTCONbits	set	4082
    40  0000                     _LATAbits	set	3977
    41  0000                     _MSEL0	set	3705
    42  0000                     _RCON	set	4048
    43  0000                     _RXB0CON	set	3936
    44  0000                     _RXB1CON	set	3888
    45  0000                     _RXF0EIDH	set	3810
    46  0000                     _RXF0EIDL	set	3811
    47  0000                     _RXF0SIDH	set	3808
    48  0000                     _RXF0SIDL	set	3809
    49  0000                     _RXF0SIDLbits	set	3809
    50  0000                     _RXFCON0	set	3654
    51  0000                     _RXFCON1	set	3655
    52  0000                     _RXM0EIDH	set	3834
    53  0000                     _RXM0EIDL	set	3835
    54  0000                     _RXM0SIDH	set	3832
    55  0000                     _RXM0SIDL	set	3833
    56  0000                     _T0CON	set	4053
    57  0000                     _T0CONbits	set	4053
    58  0000                     _TBLPTRH	set	4087
    59  0000                     _TBLPTRL	set	4086
    60  0000                     _TBLPTRU	set	4088
    61  0000                     _TRISA	set	3986
    62  0000                     _TRISAbits	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISCbits	set	3988
    66  0000                     _RXB0D0	set	3942
    67                           
    68 ;;
    69 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    70 ;;
    71 ;; *************** function _main *****************
    72 ;; Defined at:
    73 ;;		line 227 in file "main.c"
    74 ;; Parameters:    Size  Location     Type
    75 ;;		None
    76 ;; Auto vars:     Size  Location     Type
    77 ;;  Delay           1   29[COMRAM] unsigned char 
    78 ;; Return value:  Size  Location     Type
    79 ;;                  2  131[COMRAM] int 
    80 ;; Registers used:
    81 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
    82 ;; Tracked objects:
    83 ;;		On entry : 0/0
    84 ;;		On exit  : 0/0
    85 ;;		Unchanged: 0/0
    86 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    87 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    88 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    89 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    90 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    91 ;;Total ram usage:        2 bytes
    92 ;; Hardware stack levels required when called:    2
    93 ;; This function calls:
    94 ;;		_OdbierzRamke
    95 ;;		_ResetDevice
    96 ;; This function is called by:
    97 ;;		Startup code after reset
    98 ;; This function uses a non-reentrant model
    99 ;;
   100                           
   101                           	psect	text0
   102  00026E                     __ptext0:
   103                           	opt stack 0
   104                           
   105                           ; #config settings
   106  00026E                     _main:
   107                           	opt stack 29
   108                           
   109                           ;main.c: 228: unsigned char Delay;
   110                           ;main.c: 231: if((RCON&0x3F)!=0x3C)
   111                           
   112                           ;incstack = 0
   113                           ;incstack = 0
   114  00026E  50D0               	movf	4048,w,c	;volatile
   115  000270  0B3F               	andlw	63
   116  000272  0A3C               	xorlw	60
   117  000274  A4D8               	btfss	status,2,c
   118                           
   119                           ;main.c: 232: {
   120                           ;main.c: 233: ResetDevice();
   121  000276  ECFA  F001         	call	_ResetDevice	;wreg free
   122                           
   123                           ;main.c: 234: }
   124                           ;main.c: 236: Delay = 5;
   125  00027A  6E1D               	movwf	??_main& (0+255),c
   126  00027C  0E05               	movlw	5
   127  00027E  6E1E               	movwf	main@Delay,c
   128  000280  501D               	movf	??_main& (0+255),w,c
   129                           
   130                           ;main.c: 238: TRISA = 0xFF;
   131  000282  6892               	setf	3986,c	;volatile
   132                           
   133                           ;main.c: 239: TRISB = 0xFF;
   134  000284  6893               	setf	3987,c	;volatile
   135                           
   136                           ;main.c: 240: TRISAbits.TRISA5 = 0;
   137  000286  9A92               	bcf	3986,5,c	;volatile
   138                           
   139                           ;main.c: 241: LATAbits.LATA5 = 0;
   140  000288  9A89               	bcf	3977,5,c	;volatile
   141                           
   142                           ;main.c: 242: TRISC = 0xFF;
   143  00028A  6894               	setf	3988,c	;volatile
   144                           
   145                           ;main.c: 243: TRISCbits.TRISC6 = 0;
   146  00028C  9C94               	bcf	3988,6,c	;volatile
   147                           
   148                           ;main.c: 246: T0CON = 0x00;
   149  00028E  0E00               	movlw	0
   150  000290  6ED5               	movwf	4053,c	;volatile
   151                           
   152                           ;main.c: 247: T0CONbits.T0PS = 0x05;
   153  000292  50D5               	movf	4053,w,c	;volatile
   154  000294  0BF8               	andlw	-8
   155  000296  0905               	iorlw	5
   156  000298  6ED5               	movwf	4053,c	;volatile
   157                           
   158                           ;main.c: 249: INTCONbits.TMR0IE = 0;
   159  00029A  9AF2               	bcf	intcon,5,c	;volatile
   160                           
   161                           ;main.c: 250: INTCONbits.TMR0IF = 0;
   162  00029C  94F2               	bcf	intcon,2,c	;volatile
   163                           
   164                           ;main.c: 252: TMR0 = 62500;
   165  00029E  0EF4               	movlw	244
   166  0002A0  6ED7               	movwf	4055,c	;volatile
   167  0002A2  0E24               	movlw	36
   168  0002A4  6ED6               	movwf	4054,c	;volatile
   169                           
   170                           ;main.c: 255: T0CONbits.TMR0ON = 1;
   171  0002A6  8ED5               	bsf	4053,7,c	;volatile
   172                           
   173                           ;main.c: 258: CANCON = 0x80;
   174  0002A8  0E80               	movlw	128
   175  0002AA  6E6F               	movwf	3951,c	;volatile
   176  0002AC                     l1183:
   177  0002AC  506E               	movf	3950,w,c	;volatile
   178  0002AE  0BE0               	andlw	224
   179  0002B0  0A80               	xorlw	128
   180  0002B2  A4D8               	btfss	status,2,c
   181  0002B4  D7FB               	goto	l1183
   182                           
   183                           ;main.c: 262: }
   184                           ;main.c: 265: ECANCON = 0x90;
   185  0002B6  0E90               	movlw	144
   186  0002B8  6E72               	movwf	3954,c	;volatile
   187                           
   188                           ;main.c: 269: BRGCON1bits.BRP = ((16000000/(2*20*50000))-1);
   189  0002BA  010E               	movlb	14	; () banked
   190  0002BC  8143               	bsf	67,0,b	;volatile
   191  0002BE  010E               	movlb	14	; () banked
   192  0002C0  8343               	bsf	67,1,b	;volatile
   193  0002C2  010E               	movlb	14	; () banked
   194  0002C4  8543               	bsf	67,2,b	;volatile
   195  0002C6  010E               	movlb	14	; () banked
   196  0002C8  9743               	bcf	67,3,b	;volatile
   197  0002CA  010E               	movlb	14	; () banked
   198  0002CC  9943               	bcf	67,4,b	;volatile
   199  0002CE  010E               	movlb	14	; () banked
   200  0002D0  9B43               	bcf	67,5,b	;volatile
   201                           
   202                           ;main.c: 270: BRGCON1bits.SJW = 0x3;
   203  0002D2  0EC0               	movlw	192
   204  0002D4  010E               	movlb	14	; () banked
   205  0002D6  010E               	movlb	14	; () banked
   206  0002D8  1343               	iorwf	67,f,b	;volatile
   207                           
   208                           ; BSR set to: 14
   209                           ;main.c: 271: BRGCON2bits.SEG1PH = 0b111;
   210  0002DA  010E               	movlb	14	; () banked
   211  0002DC  8744               	bsf	68,3,b	;volatile
   212  0002DE  010E               	movlb	14	; () banked
   213  0002E0  8944               	bsf	68,4,b	;volatile
   214  0002E2  010E               	movlb	14	; () banked
   215  0002E4  8B44               	bsf	68,5,b	;volatile
   216                           
   217                           ;main.c: 272: BRGCON2bits.PRSEG = 0b100;
   218  0002E6  010E               	movlb	14	; () banked
   219  0002E8  010E               	movlb	14	; () banked
   220  0002EA  5144               	movf	68,w,b	;volatile
   221  0002EC  0BF8               	andlw	-8
   222  0002EE  0904               	iorlw	4
   223  0002F0  010E               	movlb	14	; () banked
   224  0002F2  6F44               	movwf	68,b	;volatile
   225                           
   226                           ;main.c: 273: BRGCON3bits.SEG2PH = 0b101;
   227  0002F4  010E               	movlb	14	; () banked
   228  0002F6  010E               	movlb	14	; () banked
   229  0002F8  5145               	movf	69,w,b	;volatile
   230  0002FA  0BF8               	andlw	-8
   231  0002FC  0905               	iorlw	5
   232  0002FE  010E               	movlb	14	; () banked
   233  000300  6F45               	movwf	69,b	;volatile
   234                           
   235                           ; BSR set to: 14
   236                           ;main.c: 275: BRGCON2bits.SAM = 1;
   237  000302  010E               	movlb	14	; () banked
   238  000304  010E               	movlb	14	; () banked
   239  000306  8D44               	bsf	68,6,b	;volatile
   240                           
   241                           ; BSR set to: 14
   242                           ;main.c: 276: BRGCON2bits.SEG2PHTS = 1;
   243  000308  010E               	movlb	14	; () banked
   244  00030A  010E               	movlb	14	; () banked
   245  00030C  8F44               	bsf	68,7,b	;volatile
   246                           
   247                           ;main.c: 281: MSEL0 = 0x00;
   248  00030E  0E00               	movlw	0
   249  000310  010E               	movlb	14	; () banked
   250  000312  010E               	movlb	14	; () banked
   251  000314  6F79               	movwf	121,b	;volatile
   252                           
   253                           ;main.c: 282: RXM0SIDH = 0b11100000;
   254  000316  0EE0               	movlw	224
   255  000318  010E               	movlb	14	; () banked
   256  00031A  010E               	movlb	14	; () banked
   257  00031C  6FF8               	movwf	248,b	;volatile
   258                           
   259                           ;main.c: 283: RXM0SIDL = 0b00001011;
   260  00031E  0E0B               	movlw	11
   261  000320  010E               	movlb	14	; () banked
   262  000322  010E               	movlb	14	; () banked
   263  000324  6FF9               	movwf	249,b	;volatile
   264                           
   265                           ; BSR set to: 14
   266                           ;main.c: 284: RXM0EIDH = 0xFF;
   267  000326  010E               	movlb	14	; () banked
   268  000328  010E               	movlb	14	; () banked
   269  00032A  69FA               	setf	250,b	;volatile
   270                           
   271                           ; BSR set to: 14
   272                           ;main.c: 285: RXM0EIDL = 0xFF;
   273  00032C  010E               	movlb	14	; () banked
   274  00032E  010E               	movlb	14	; () banked
   275  000330  69FB               	setf	251,b	;volatile
   276                           
   277                           ;main.c: 288: RXF0SIDH = 0x60;
   278  000332  0E60               	movlw	96
   279  000334  010E               	movlb	14	; () banked
   280  000336  010E               	movlb	14	; () banked
   281  000338  6FE0               	movwf	224,b	;volatile
   282                           
   283                           ;main.c: 289: RXF0SIDL = 0x01;
   284  00033A  0E01               	movlw	1
   285  00033C  010E               	movlb	14	; () banked
   286  00033E  010E               	movlb	14	; () banked
   287  000340  6FE1               	movwf	225,b	;volatile
   288                           
   289                           ; BSR set to: 14
   290                           ;main.c: 290: RXF0SIDLbits.EXIDEN = 1;
   291  000342  010E               	movlb	14	; () banked
   292  000344  010E               	movlb	14	; () banked
   293  000346  87E1               	bsf	225,3,b	;volatile
   294                           
   295                           ;main.c: 291: RXF0EIDH = 0x40;
   296  000348  0E40               	movlw	64
   297  00034A  010E               	movlb	14	; () banked
   298  00034C  010E               	movlb	14	; () banked
   299  00034E  6FE2               	movwf	226,b	;volatile
   300                           
   301                           ;main.c: 292: RXF0EIDL = 0;
   302  000350  0E00               	movlw	0
   303  000352  010E               	movlb	14	; () banked
   304  000354  010E               	movlb	14	; () banked
   305  000356  6FE3               	movwf	227,b	;volatile
   306                           
   307                           ;main.c: 296: RXFCON0 = 0x01;
   308  000358  0E01               	movlw	1
   309  00035A  010E               	movlb	14	; () banked
   310  00035C  010E               	movlb	14	; () banked
   311  00035E  6F46               	movwf	70,b	;volatile
   312                           
   313                           ;main.c: 297: RXFCON1 = 0x00;
   314  000360  0E00               	movlw	0
   315  000362  010E               	movlb	14	; () banked
   316  000364  010E               	movlb	14	; () banked
   317  000366  6F47               	movwf	71,b	;volatile
   318                           
   319                           ;main.c: 305: RXB0CON = 0;
   320  000368  0E00               	movlw	0
   321  00036A  6E60               	movwf	3936,c	;volatile
   322                           
   323                           ;main.c: 306: RXB1CON = 0;
   324  00036C  0E00               	movlw	0
   325  00036E  010F               	movlb	15	; () banked
   326  000370  010F               	movlb	15	; () banked
   327  000372  6F30               	movwf	48,b	;volatile
   328                           
   329                           ;main.c: 307: B0CON = 0;
   330  000374  0E00               	movlw	0
   331  000376  010E               	movlb	14	; () banked
   332  000378  010E               	movlb	14	; () banked
   333  00037A  6F80               	movwf	128,b	;volatile
   334                           
   335                           ;main.c: 308: B1CON = 0;
   336  00037C  0E00               	movlw	0
   337  00037E  010E               	movlb	14	; () banked
   338  000380  010E               	movlb	14	; () banked
   339  000382  6F90               	movwf	144,b	;volatile
   340                           
   341                           ;main.c: 309: B2CON = 0;
   342  000384  0E00               	movlw	0
   343  000386  010E               	movlb	14	; () banked
   344  000388  010E               	movlb	14	; () banked
   345  00038A  6FA0               	movwf	160,b	;volatile
   346                           
   347                           ;main.c: 310: B3CON = 0;
   348  00038C  0E00               	movlw	0
   349  00038E  010E               	movlb	14	; () banked
   350  000390  010E               	movlb	14	; () banked
   351  000392  6FB0               	movwf	176,b	;volatile
   352                           
   353                           ;main.c: 311: B4CON = 0;
   354  000394  0E00               	movlw	0
   355  000396  010E               	movlb	14	; () banked
   356  000398  010E               	movlb	14	; () banked
   357  00039A  6FC0               	movwf	192,b	;volatile
   358                           
   359                           ;main.c: 312: B5CON = 0;
   360  00039C  0E00               	movlw	0
   361  00039E  010E               	movlb	14	; () banked
   362  0003A0  010E               	movlb	14	; () banked
   363  0003A2  6FD0               	movwf	208,b	;volatile
   364                           
   365                           ;main.c: 315: CANCON = 0x00;
   366  0003A4  0E00               	movlw	0
   367  0003A6  6E6F               	movwf	3951,c	;volatile
   368  0003A8                     l1201:
   369  0003A8  506E               	movf	3950,w,c	;volatile
   370  0003AA  0BE0               	andlw	224
   371  0003AC  A4D8               	btfss	status,2,c
   372  0003AE  D7FC               	goto	l1201
   373                           
   374                           ;main.c: 319: }
   375                           ;main.c: 320: SourceAddr.Val32 = (DWORD)0xC00;
   376  0003B0  0E00               	movlw	0
   377  0003B2  6E1F               	movwf	_SourceAddr,c
   378  0003B4  0E0C               	movlw	12
   379  0003B6  6E20               	movwf	_SourceAddr+1,c
   380  0003B8  0E00               	movlw	0
   381  0003BA  6E21               	movwf	_SourceAddr+2,c
   382  0003BC  0E00               	movlw	0
   383  0003BE  6E22               	movwf	_SourceAddr+3,c
   384                           
   385                           ;main.c: 321: counter = 0;
   386  0003C0  6E1D               	movwf	??_main& (0+255),c
   387  0003C2  0E00               	movlw	0
   388  0003C4  6E23               	movwf	_counter,c
   389  0003C6  501D               	movf	??_main& (0+255),w,c
   390                           
   391                           ;main.c: 322: iloscBajtow = 0;
   392  0003C8  6E1D               	movwf	??_main& (0+255),c
   393  0003CA  0E00               	movlw	0
   394  0003CC  6E24               	movwf	_iloscBajtow,c
   395  0003CE  501D               	movf	??_main& (0+255),w,c
   396                           
   397                           ;main.c: 323: ramekInicjalizacji = 0;
   398  0003D0  6E1D               	movwf	??_main& (0+255),c
   399  0003D2  0E00               	movlw	0
   400  0003D4  6E25               	movwf	_ramekInicjalizacji,c
   401  0003D6  501D               	movf	??_main& (0+255),w,c
   402  0003D8                     l1211:
   403                           
   404                           ;main.c: 325: {
   405                           ;main.c: 326: OdbierzRamke();
   406  0003D8  EC10  F000         	call	_OdbierzRamke	;wreg free
   407                           
   408                           ;main.c: 329: if(INTCONbits.TMR0IF == 1)
   409  0003DC  A4F2               	btfss	intcon,2,c	;volatile
   410  0003DE  D7FC               	goto	l1211
   411                           
   412                           ;main.c: 330: {
   413                           ;main.c: 331: INTCONbits.TMR0IF = 0;
   414  0003E0  94F2               	bcf	intcon,2,c	;volatile
   415  0003E2  0004               	clrwdt		;# 
   416                           
   417                           ;main.c: 334: if(++counter >= Delay)
   418  0003E4  501E               	movf	main@Delay,w,c
   419  0003E6  2A23               	incf	_counter,f,c
   420  0003E8  5C23               	subwf	_counter& (0+255),w,c
   421  0003EA  A0D8               	btfss	status,0,c
   422  0003EC  D7F5               	goto	l1211
   423                           
   424                           ;main.c: 335: {
   425                           ;main.c: 336: ResetDevice();
   426  0003EE  ECFA  F001         	call	_ResetDevice	;wreg free
   427  0003F2  D7F2               	goto	l1211
   428  0003F4                     __end_of_main:
   429                           	opt stack 0
   430                           intcon	equ	0xFF2
   431                           status	equ	0xFD8
   432                           
   433                           	psect	cinit
   434  000592                     __pcinit:
   435                           	opt stack 0
   436  000592                     start_initialization:
   437                           	opt stack 0
   438  000592                     __initialization:
   439                           	opt stack 0
   440                           
   441                           ; Clear objects allocated to BANK0 (65 bytes)
   442  000592  EE00  F060         	lfsr	0,__pbssBANK0
   443  000596  0E41               	movlw	65
   444  000598                     clear_0:
   445  000598  6AEE               	clrf	postinc0,c
   446  00059A  06E8               	decf	wreg,f,c
   447  00059C  E1FD               	bnz	clear_0
   448                           
   449                           ; Clear objects allocated to COMRAM (7 bytes)
   450  00059E  EE00  F01F         	lfsr	0,__pbssCOMRAM
   451  0005A2  0E07               	movlw	7
   452  0005A4                     clear_1:
   453  0005A4  6AEE               	clrf	postinc0,c
   454  0005A6  06E8               	decf	wreg,f,c
   455  0005A8  E1FD               	bnz	clear_1
   456  0005AA                     end_of_initialization:
   457                           	opt stack 0
   458  0005AA                     __end_of__initialization:
   459                           	opt stack 0
   460  0005AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   461  0005AC  6EF8               	movwf	tblptru,c
   462  0005AE  0100               	movlb	0
   463  0005B0  EF37  F001         	goto	_main	;jump to C main() function
   464                           tblptru	equ	0xFF8
   465                           intcon	equ	0xFF2
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           status	equ	0xFD8
   469                           
   470                           	psect	bssCOMRAM
   471  00001F                     __pbssCOMRAM:
   472                           	opt stack 0
   473  00001F                     _SourceAddr:
   474                           	opt stack 0
   475  00001F                     	ds	4
   476  000023                     _counter:
   477                           	opt stack 0
   478  000023                     	ds	1
   479  000024                     _iloscBajtow:
   480                           	opt stack 0
   481  000024                     	ds	1
   482  000025                     _ramekInicjalizacji:
   483                           	opt stack 0
   484  000025                     	ds	1
   485                           tblptru	equ	0xFF8
   486                           intcon	equ	0xFF2
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           status	equ	0xFD8
   490                           
   491                           	psect	bssBANK0
   492  000060                     __pbssBANK0:
   493                           	opt stack 0
   494  000060                     _buforCAN:
   495                           	opt stack 0
   496  000060                     	ds	65
   497                           tblptru	equ	0xFF8
   498                           intcon	equ	0xFF2
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           status	equ	0xFD8
   502                           
   503                           	psect	cstackCOMRAM
   504  000001                     __pcstackCOMRAM:
   505                           	opt stack 0
   506  000001                     ?_EraseFlash:
   507                           	opt stack 0
   508  000001                     ?_WriteBytesFlash:
   509                           	opt stack 0
   510  000001                     EraseFlash@startaddr:
   511                           	opt stack 0
   512  000001                     WriteBytesFlash@startaddr:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x0
   516  000001                     	ds	4
   517  000005                     WriteBytesFlash@num_bytes:
   518                           	opt stack 0
   519  000005                     EraseFlash@endaddr:
   520                           	opt stack 0
   521                           
   522                           ; 4 bytes @ 0x4
   523  000005                     	ds	2
   524  000007                     WriteBytesFlash@flash_array:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x6
   528  000007                     	ds	2
   529  000009                     ??_EraseFlash:
   530  000009                     ??_WriteBytesFlash:
   531                           
   532                           ; 0 bytes @ 0x8
   533  000009                     	ds	1
   534  00000A                     EraseFlash@flag:
   535                           	opt stack 0
   536  00000A                     WriteBytesFlash@saveptr:
   537                           	opt stack 0
   538                           
   539                           ; 3 bytes @ 0x9
   540  00000A                     	ds	1
   541  00000B                     EraseFlash@flash_addr:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0xA
   545  00000B                     	ds	2
   546  00000D                     WriteBytesFlash@write_byte:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0xC
   550  00000D                     	ds	1
   551  00000E                     WriteBytesFlash@flag:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xD
   555  00000E                     	ds	1
   556  00000F                     WriteBytesFlash@startptr:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0xE
   560  00000F                     	ds	3
   561  000012                     WriteBytesFlash@saddress:
   562                           	opt stack 0
   563                           
   564                           ; 4 bytes @ 0x11
   565  000012                     	ds	4
   566  000016                     ??_OdbierzRamke:
   567                           
   568                           ; 0 bytes @ 0x15
   569  000016                     	ds	2
   570  000018                     OdbierzRamke@pointerU8:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x17
   574  000018                     	ds	2
   575  00001A                     OdbierzRamke@k:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x19
   579  00001A                     	ds	1
   580  00001B                     OdbierzRamke@tempCON:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x1A
   584  00001B                     	ds	1
   585  00001C                     OdbierzRamke@i:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x1B
   589  00001C                     	ds	1
   590  00001D                     ??_main:
   591                           
   592                           ; 0 bytes @ 0x1C
   593  00001D                     	ds	1
   594  00001E                     main@Delay:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x1D
   598  00001E                     	ds	1
   599                           tblptru	equ	0xFF8
   600                           intcon	equ	0xFF2
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           status	equ	0xFD8
   604                           
   605 ;; *************** function _OdbierzRamke *****************
   606 ;; Defined at:
   607 ;;		line 114 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  pointerU8       2   23[COMRAM] PTR volatile unsigned ch
   612 ;;		 -> RXB0D0(1), 
   613 ;;  tempU16         2    0        unsigned int 
   614 ;;  i               1   27[COMRAM] unsigned char 
   615 ;;  tempCON         1   26[COMRAM] unsigned char 
   616 ;;  k               1   25[COMRAM] unsigned char 
   617 ;; Return value:  Size  Location     Type
   618 ;;		None               void
   619 ;; Registers used:
   620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   627 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;Total ram usage:        7 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    1
   633 ;; This function calls:
   634 ;;		_ResetDevice
   635 ;;		_EraseFlash
   636 ;;		_WriteBytesFlash
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text1
   643  000020                     __ptext1:
   644                           	opt stack 0
   645  000020                     _OdbierzRamke:
   646                           	opt stack 29
   647                           
   648                           ;main.c: 115: volatile unsigned char *pointerU8;
   649                           ;main.c: 116: unsigned char i, k,tempCON = 0;
   650                           
   651                           ;incstack = 0
   652                           ;incstack = 0
   653  000020  6E16               	movwf	??_OdbierzRamke& (0+255),c
   654  000022  0E00               	movlw	0
   655  000024  6E1B               	movwf	OdbierzRamke@tempCON,c
   656  000026  5016               	movf	??_OdbierzRamke& (0+255),w,c
   657                           
   658                           ;main.c: 117: unsigned int tempU16;
   659                           ;main.c: 119: k = CANCON&0x0F;
   660  000028  506F               	movf	3951,w,c	;volatile
   661  00002A  0B0F               	andlw	15
   662  00002C  6E1A               	movwf	OdbierzRamke@k,c
   663                           
   664                           ;main.c: 121: ECANCON = 0x90 | k;
   665  00002E  501A               	movf	OdbierzRamke@k,w,c
   666  000030  0990               	iorlw	144
   667  000032  6E72               	movwf	3954,c	;volatile
   668                           
   669                           ;main.c: 124: switch(k)
   670  000034  D018               	goto	l1073
   671  000036                     l96:
   672                           
   673                           ;main.c: 127: tempCON = RXB0CON;
   674  000036  CF60 F01B          	movff	3936,OdbierzRamke@tempCON	;volatile
   675                           
   676                           ;main.c: 128: break;
   677  00003A  D02E               	goto	l97
   678  00003C                     l98:
   679                           
   680                           ;main.c: 130: tempCON = RXB1CON;
   681  00003C  CF30 F01B          	movff	3888,OdbierzRamke@tempCON	;volatile
   682                           
   683                           ;main.c: 131: break;
   684  000040  D02B               	goto	l97
   685  000042                     l99:
   686                           
   687                           ;main.c: 133: tempCON = B0CON;
   688  000042  CE80 F01B          	movff	3712,OdbierzRamke@tempCON	;volatile
   689                           
   690                           ;main.c: 134: break;
   691  000046  D028               	goto	l97
   692  000048                     l100:
   693                           
   694                           ;main.c: 136: tempCON = B1CON;
   695  000048  CE90 F01B          	movff	3728,OdbierzRamke@tempCON	;volatile
   696                           
   697                           ;main.c: 137: break;
   698  00004C  D025               	goto	l97
   699  00004E                     l101:
   700                           
   701                           ;main.c: 139: tempCON = B2CON;
   702  00004E  CEA0 F01B          	movff	3744,OdbierzRamke@tempCON	;volatile
   703                           
   704                           ;main.c: 140: break;
   705  000052  D022               	goto	l97
   706  000054                     l102:
   707                           
   708                           ;main.c: 142: tempCON = B3CON;
   709  000054  CEB0 F01B          	movff	3760,OdbierzRamke@tempCON	;volatile
   710                           
   711                           ;main.c: 143: break;
   712  000058  D01F               	goto	l97
   713  00005A                     l103:
   714                           
   715                           ;main.c: 145: tempCON = B4CON;
   716  00005A  CEC0 F01B          	movff	3776,OdbierzRamke@tempCON	;volatile
   717                           
   718                           ;main.c: 146: break;
   719  00005E  D01C               	goto	l97
   720  000060                     l104:
   721                           
   722                           ;main.c: 148: tempCON = B5CON;
   723  000060  CED0 F01B          	movff	3792,OdbierzRamke@tempCON	;volatile
   724                           
   725                           ;main.c: 149: break;
   726  000064  D019               	goto	l97
   727  000066                     l1073:
   728  000066  501A               	movf	OdbierzRamke@k,w,c
   729                           
   730                           ; Switch size 1, requested type "space"
   731                           ; Number of cases is 8, Range of values is 0 to 7
   732                           ; switch strategies available:
   733                           ; Name         Instructions Cycles
   734                           ; simple_byte           25    13 (average)
   735                           ;	Chosen strategy is simple_byte
   736  000068  0A00               	xorlw	0	; case 0
   737  00006A  B4D8               	btfsc	status,2,c
   738  00006C  D7E4               	goto	l96
   739  00006E  0A01               	xorlw	1	; case 1
   740  000070  B4D8               	btfsc	status,2,c
   741  000072  D7E4               	goto	l98
   742  000074  0A03               	xorlw	3	; case 2
   743  000076  B4D8               	btfsc	status,2,c
   744  000078  D7E4               	goto	l99
   745  00007A  0A01               	xorlw	1	; case 3
   746  00007C  B4D8               	btfsc	status,2,c
   747  00007E  D7E4               	goto	l100
   748  000080  0A07               	xorlw	7	; case 4
   749  000082  B4D8               	btfsc	status,2,c
   750  000084  D7E4               	goto	l101
   751  000086  0A01               	xorlw	1	; case 5
   752  000088  B4D8               	btfsc	status,2,c
   753  00008A  D7E4               	goto	l102
   754  00008C  0A03               	xorlw	3	; case 6
   755  00008E  B4D8               	btfsc	status,2,c
   756  000090  D7E4               	goto	l103
   757  000092  0A01               	xorlw	1	; case 7
   758  000094  B4D8               	btfsc	status,2,c
   759  000096  D7E4               	goto	l104
   760  000098                     l97:
   761                           
   762                           ;main.c: 152: if((tempCON & 0x80) > 0)
   763  000098  AE1B               	btfss	OdbierzRamke@tempCON,7,c
   764  00009A  0012               	return	
   765                           
   766                           ;main.c: 153: {
   767                           ;main.c: 154: pointerU8 = &RXB0D0;
   768  00009C  0E0F               	movlw	15	;volatile
   769  00009E  6E19               	movwf	OdbierzRamke@pointerU8+1,c
   770  0000A0  0E66               	movlw	102	;volatile
   771  0000A2  6E18               	movwf	OdbierzRamke@pointerU8,c
   772                           
   773                           ;main.c: 155: for(i=0;i<8;i++)
   774  0000A4  6E16               	movwf	??_OdbierzRamke& (0+255),c
   775  0000A6  0E00               	movlw	0
   776  0000A8  6E1C               	movwf	OdbierzRamke@i,c
   777  0000AA  5016               	movf	??_OdbierzRamke& (0+255),w,c
   778  0000AC  D016               	goto	L1
   779  0000AE                     l1081:
   780                           
   781                           ;main.c: 156: {
   782                           ;main.c: 157: buforCAN[iloscBajtow++]=(*(pointerU8+i));
   783  0000AE  501C               	movf	OdbierzRamke@i,w,c
   784  0000B0  0D01               	mullw	1
   785  0000B2  50F3               	movf	prodl,w,c
   786  0000B4  2418               	addwf	OdbierzRamke@pointerU8,w,c
   787  0000B6  6ED9               	movwf	fsr2l,c
   788  0000B8  50F4               	movf	prodh,w,c
   789  0000BA  2019               	addwfc	OdbierzRamke@pointerU8+1,w,c
   790  0000BC  6EDA               	movwf	fsr2h,c
   791  0000BE  5024               	movf	_iloscBajtow,w,c
   792  0000C0  0D01               	mullw	1
   793  0000C2  0100               	movlb	0	; () banked
   794  0000C4  0E60               	movlw	low _buforCAN
   795  0000C6  24F3               	addwf	prodl,w,c
   796  0000C8  6EE1               	movwf	fsr1l,c
   797  0000CA  0100               	movlb	0	; () banked
   798  0000CC  0E00               	movlw	high _buforCAN
   799  0000CE  20F4               	addwfc	prodh,w,c
   800  0000D0  6EE2               	movwf	fsr1h,c
   801  0000D2  CFDF FFE7          	movff	indf2,indf1
   802                           
   803                           ; BSR set to: 0
   804  0000D6  2A24               	incf	_iloscBajtow,f,c
   805                           
   806                           ; BSR set to: 0
   807  0000D8  2A1C               	incf	OdbierzRamke@i,f,c
   808  0000DA                     L1:
   809                           
   810                           ; BSR set to: 0
   811  0000DA  0E07               	movlw	7
   812  0000DC  641C               	cpfsgt	OdbierzRamke@i,c
   813  0000DE  D7E7               	goto	l1081
   814                           
   815                           ;main.c: 158: }
   816                           ;main.c: 159: if(ramekInicjalizacji < 10)
   817                           
   818                           ; BSR set to: 0
   819  0000E0  0E0A               	movlw	10
   820  0000E2  6025               	cpfslt	_ramekInicjalizacji,c
   821  0000E4  D034               	goto	l1115
   822                           
   823                           ;main.c: 160: {
   824                           ;main.c: 161: for(i=0; i<8; i++)
   825  0000E6  6E16               	movwf	??_OdbierzRamke& (0+255),c
   826  0000E8  0E00               	movlw	0
   827  0000EA  6E1C               	movwf	OdbierzRamke@i,c
   828  0000EC  5016               	movf	??_OdbierzRamke& (0+255),w,c
   829  0000EE  D01B               	goto	L2
   830  0000F0                     l1097:
   831                           
   832                           ;main.c: 162: {
   833                           ;main.c: 163: if(buforCAN[i] != ((ramekInicjalizacji*10)+i))
   834  0000F0  501C               	movf	OdbierzRamke@i,w,c
   835  0000F2  0D01               	mullw	1
   836  0000F4  0100               	movlb	0	; () banked
   837  0000F6  0E60               	movlw	low _buforCAN
   838  0000F8  24F3               	addwf	prodl,w,c
   839  0000FA  6ED9               	movwf	fsr2l,c
   840  0000FC  0100               	movlb	0	; () banked
   841  0000FE  0E00               	movlw	high _buforCAN
   842  000100  20F4               	addwfc	prodh,w,c
   843  000102  6EDA               	movwf	fsr2h,c
   844  000104  50DF               	movf	indf2,w,c
   845  000106  6E16               	movwf	??_OdbierzRamke& (0+255),c
   846  000108  6A17               	clrf	(??_OdbierzRamke+1)& (0+255),c
   847  00010A  5025               	movf	_ramekInicjalizacji,w,c
   848  00010C  0D0A               	mullw	10
   849  00010E  501C               	movf	OdbierzRamke@i,w,c
   850  000110  26F3               	addwf	prodl,f,c
   851  000112  0E00               	movlw	0
   852  000114  22F4               	addwfc	prodh,f,c
   853  000116  5017               	movf	??_OdbierzRamke+1,w,c
   854  000118  18F4               	xorwf	prodh,w,c
   855  00011A  E102               	bnz	u415
   856  00011C  5016               	movf	??_OdbierzRamke,w,c
   857  00011E  18F3               	xorwf	prodl,w,c
   858  000120                     u415:
   859  000120  A4D8               	btfss	status,2,c
   860  000122  D004               	goto	l1105
   861                           
   862                           ; BSR set to: 0
   863                           
   864                           ; BSR set to: 0
   865                           
   866                           ; BSR set to: 0
   867                           ;main.c: 164: {
   868                           ;main.c: 165: break;
   869  000124  2A1C               	incf	OdbierzRamke@i,f,c
   870  000126                     L2:
   871                           
   872                           ; BSR set to: 0
   873  000126  0E07               	movlw	7
   874  000128  641C               	cpfsgt	OdbierzRamke@i,c
   875  00012A  D7E2               	goto	l1097
   876  00012C                     l1105:
   877                           
   878                           ;main.c: 166: }
   879                           ;main.c: 167: }
   880                           ;main.c: 168: if(i==8)
   881  00012C  501C               	movf	OdbierzRamke@i,w,c
   882  00012E  0A08               	xorlw	8
   883  000130  A4D8               	btfss	status,2,c
   884  000132  D006               	goto	l1111
   885                           
   886                           ;main.c: 169: {
   887                           ;main.c: 170: iloscBajtow = 0;
   888  000134  6E16               	movwf	??_OdbierzRamke& (0+255),c
   889  000136  0E00               	movlw	0
   890  000138  6E24               	movwf	_iloscBajtow,c
   891  00013A  5016               	movf	??_OdbierzRamke& (0+255),w,c
   892                           
   893                           ;main.c: 171: ramekInicjalizacji++;
   894  00013C  2A25               	incf	_ramekInicjalizacji,f,c
   895                           
   896                           ;main.c: 172: }
   897  00013E  D04D               	goto	l1127
   898  000140                     l1111:
   899                           
   900                           ;main.c: 173: else
   901                           ;main.c: 174: {
   902                           ;main.c: 176: iloscBajtow = 0;
   903  000140  6E16               	movwf	??_OdbierzRamke& (0+255),c
   904  000142  0E00               	movlw	0
   905  000144  6E24               	movwf	_iloscBajtow,c
   906  000146  5016               	movf	??_OdbierzRamke& (0+255),w,c
   907                           
   908                           ;main.c: 177: ResetDevice();
   909  000148  ECFA  F001         	call	_ResetDevice	;wreg free
   910  00014C  D046               	goto	l1127
   911  00014E                     l1115:
   912                           
   913                           ;main.c: 180: else if((iloscBajtow >= 64))
   914  00014E  0E3F               	movlw	63
   915  000150  6424               	cpfsgt	_iloscBajtow,c
   916  000152  D043               	goto	l1127
   917                           
   918                           ;main.c: 181: {
   919                           ;main.c: 182: LATAbits.LATA5 = !LATAbits.LATA5;
   920  000154  BA89               	btfsc	3977,5,c	;volatile
   921  000156  D002               	goto	u450
   922  000158  0E01               	movlw	1
   923  00015A  D001               	goto	u456
   924  00015C                     u450:
   925  00015C  0E00               	movlw	0
   926  00015E                     u456:
   927  00015E  6E16               	movwf	??_OdbierzRamke& (0+255),c
   928  000160  3A16               	swapf	??_OdbierzRamke,f,c
   929  000162  4616               	rlncf	??_OdbierzRamke,f,c
   930  000164  5089               	movf	3977,w,c	;volatile
   931  000166  1816               	xorwf	??_OdbierzRamke,w,c
   932  000168  0BDF               	andlw	-33
   933  00016A  1816               	xorwf	??_OdbierzRamke,w,c
   934  00016C  6E89               	movwf	3977,c	;volatile
   935                           
   936                           ;main.c: 183: EraseFlash(SourceAddr.Val32, SourceAddr.Val32+(unsigned long)64);
   937  00016E  C01F  F001         	movff	_SourceAddr,?_EraseFlash
   938  000172  C020  F002         	movff	_SourceAddr+1,?_EraseFlash+1
   939  000176  C021  F003         	movff	_SourceAddr+2,?_EraseFlash+2
   940  00017A  C022  F004         	movff	_SourceAddr+3,?_EraseFlash+3
   941  00017E  0E40               	movlw	64
   942  000180  241F               	addwf	_SourceAddr,w,c
   943  000182  6E05               	movwf	?_EraseFlash+4,c
   944  000184  0E00               	movlw	0
   945  000186  2020               	addwfc	_SourceAddr+1,w,c
   946  000188  6E06               	movwf	?_EraseFlash+5,c
   947  00018A  0E00               	movlw	0
   948  00018C  2021               	addwfc	_SourceAddr+2,w,c
   949  00018E  6E07               	movwf	?_EraseFlash+6,c
   950  000190  0E00               	movlw	0
   951  000192  2022               	addwfc	_SourceAddr+3,w,c
   952  000194  6E08               	movwf	?_EraseFlash+7,c
   953  000196  EC8C  F002         	call	_EraseFlash	;wreg free
   954                           
   955                           ;main.c: 184: WriteBytesFlash(SourceAddr.Val32,64,buforCAN);
   956  00019A  C01F  F001         	movff	_SourceAddr,?_WriteBytesFlash
   957  00019E  C020  F002         	movff	_SourceAddr+1,?_WriteBytesFlash+1
   958  0001A2  C021  F003         	movff	_SourceAddr+2,?_WriteBytesFlash+2
   959  0001A6  C022  F004         	movff	_SourceAddr+3,?_WriteBytesFlash+3
   960  0001AA  0E00               	movlw	0
   961  0001AC  6E06               	movwf	?_WriteBytesFlash+5,c
   962  0001AE  0E40               	movlw	64
   963  0001B0  6E05               	movwf	?_WriteBytesFlash+4,c
   964  0001B2  0100               	movlb	0	; () banked
   965  0001B4  0E00               	movlw	high _buforCAN
   966  0001B6  6E08               	movwf	?_WriteBytesFlash+7,c
   967  0001B8  0100               	movlb	0	; () banked
   968  0001BA  0E60               	movlw	low _buforCAN
   969  0001BC  6E07               	movwf	?_WriteBytesFlash+6,c
   970  0001BE  EC03  F002         	call	_WriteBytesFlash	;wreg free
   971                           
   972                           ;main.c: 185: SourceAddr.Val32 += 64;
   973  0001C2  0E40               	movlw	64
   974  0001C4  261F               	addwf	_SourceAddr,f,c
   975  0001C6  0E00               	movlw	0
   976  0001C8  2220               	addwfc	_SourceAddr+1,f,c
   977  0001CA  0E00               	movlw	0
   978  0001CC  2221               	addwfc	_SourceAddr+2,f,c
   979  0001CE  0E00               	movlw	0
   980  0001D0  2222               	addwfc	_SourceAddr+3,f,c
   981                           
   982                           ;main.c: 186: iloscBajtow = 0;
   983  0001D2  6E16               	movwf	??_OdbierzRamke& (0+255),c
   984  0001D4  0E00               	movlw	0
   985  0001D6  6E24               	movwf	_iloscBajtow,c
   986  0001D8  5016               	movf	??_OdbierzRamke& (0+255),w,c
   987  0001DA                     l1127:
   988                           
   989                           ;main.c: 187: }
   990                           ;main.c: 188: TMR0 = 62500;
   991  0001DA  0EF4               	movlw	244
   992  0001DC  6ED7               	movwf	4055,c	;volatile
   993  0001DE  0E24               	movlw	36
   994  0001E0  6ED6               	movwf	4054,c	;volatile
   995                           
   996                           ;main.c: 189: counter = 0;
   997  0001E2  6E16               	movwf	??_OdbierzRamke& (0+255),c
   998  0001E4  0E00               	movlw	0
   999  0001E6  6E23               	movwf	_counter,c
  1000  0001E8  5016               	movf	??_OdbierzRamke& (0+255),w,c
  1001  0001EA  0004               	clrwdt		;# 
  1002                           
  1003                           ;main.c: 191: switch(k)
  1004  0001EC  D026               	goto	l1149
  1005  0001EE                     l1131:
  1006                           
  1007                           ;main.c: 194: RXB0CON = 0;
  1008  0001EE  0E00               	movlw	0
  1009  0001F0  6E60               	movwf	3936,c	;volatile
  1010                           
  1011                           ;main.c: 195: break;
  1012  0001F2  0012               	return	
  1013  0001F4                     l1133:
  1014                           
  1015                           ;main.c: 197: RXB1CON = 0;
  1016  0001F4  0E00               	movlw	0
  1017  0001F6  010F               	movlb	15	; () banked
  1018  0001F8  010F               	movlb	15	; () banked
  1019  0001FA  6F30               	movwf	48,b	;volatile
  1020                           
  1021                           ;main.c: 198: break;
  1022  0001FC  0012               	return	
  1023  0001FE                     l1135:
  1024                           
  1025                           ;main.c: 200: B0CON = 0;
  1026  0001FE  0E00               	movlw	0
  1027  000200  010E               	movlb	14	; () banked
  1028  000202  010E               	movlb	14	; () banked
  1029  000204  6F80               	movwf	128,b	;volatile
  1030                           
  1031                           ;main.c: 201: break;
  1032  000206  0012               	return	
  1033  000208                     l1137:
  1034                           
  1035                           ;main.c: 203: B1CON = 0;
  1036  000208  0E00               	movlw	0
  1037  00020A  010E               	movlb	14	; () banked
  1038  00020C  010E               	movlb	14	; () banked
  1039  00020E  6F90               	movwf	144,b	;volatile
  1040                           
  1041                           ;main.c: 204: break;
  1042  000210  0012               	return	
  1043  000212                     l1139:
  1044                           
  1045                           ;main.c: 206: B2CON = 0;
  1046  000212  0E00               	movlw	0
  1047  000214  010E               	movlb	14	; () banked
  1048  000216  010E               	movlb	14	; () banked
  1049  000218  6FA0               	movwf	160,b	;volatile
  1050                           
  1051                           ;main.c: 207: break;
  1052  00021A  0012               	return	
  1053  00021C                     l1141:
  1054                           
  1055                           ;main.c: 209: B3CON = 0;
  1056  00021C  0E00               	movlw	0
  1057  00021E  010E               	movlb	14	; () banked
  1058  000220  010E               	movlb	14	; () banked
  1059  000222  6FB0               	movwf	176,b	;volatile
  1060                           
  1061                           ;main.c: 210: break;
  1062  000224  0012               	return	
  1063  000226                     l1143:
  1064                           
  1065                           ;main.c: 212: B4CON = 0;
  1066  000226  0E00               	movlw	0
  1067  000228  010E               	movlb	14	; () banked
  1068  00022A  010E               	movlb	14	; () banked
  1069  00022C  6FC0               	movwf	192,b	;volatile
  1070                           
  1071                           ;main.c: 213: break;
  1072  00022E  0012               	return	
  1073  000230                     l1145:
  1074                           
  1075                           ;main.c: 215: B5CON = 0;
  1076  000230  0E00               	movlw	0
  1077  000232  010E               	movlb	14	; () banked
  1078  000234  010E               	movlb	14	; () banked
  1079  000236  6FD0               	movwf	208,b	;volatile
  1080                           
  1081                           ;main.c: 216: break;
  1082  000238  0012               	return	
  1083  00023A                     l1149:
  1084  00023A  501A               	movf	OdbierzRamke@k,w,c
  1085                           
  1086                           ; Switch size 1, requested type "space"
  1087                           ; Number of cases is 8, Range of values is 0 to 7
  1088                           ; switch strategies available:
  1089                           ; Name         Instructions Cycles
  1090                           ; simple_byte           25    13 (average)
  1091                           ;	Chosen strategy is simple_byte
  1092  00023C  0A00               	xorlw	0	; case 0
  1093  00023E  B4D8               	btfsc	status,2,c
  1094  000240  D7D6               	goto	l1131
  1095  000242  0A01               	xorlw	1	; case 1
  1096  000244  B4D8               	btfsc	status,2,c
  1097  000246  D7D6               	goto	l1133
  1098  000248  0A03               	xorlw	3	; case 2
  1099  00024A  B4D8               	btfsc	status,2,c
  1100  00024C  D7D8               	goto	l1135
  1101  00024E  0A01               	xorlw	1	; case 3
  1102  000250  B4D8               	btfsc	status,2,c
  1103  000252  D7DA               	goto	l1137
  1104  000254  0A07               	xorlw	7	; case 4
  1105  000256  B4D8               	btfsc	status,2,c
  1106  000258  D7DC               	goto	l1139
  1107  00025A  0A01               	xorlw	1	; case 5
  1108  00025C  B4D8               	btfsc	status,2,c
  1109  00025E  D7DE               	goto	l1141
  1110  000260  0A03               	xorlw	3	; case 6
  1111  000262  B4D8               	btfsc	status,2,c
  1112  000264  D7E0               	goto	l1143
  1113  000266  0A01               	xorlw	1	; case 7
  1114  000268  A4D8               	btfss	status,2,c
  1115  00026A  0012               	return	
  1116  00026C  D7E1               	goto	l1145
  1117  00026E                     __end_of_OdbierzRamke:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           prodh	equ	0xFF4
  1121                           prodl	equ	0xFF3
  1122                           intcon	equ	0xFF2
  1123                           postinc0	equ	0xFEE
  1124                           wreg	equ	0xFE8
  1125                           indf1	equ	0xFE7
  1126                           fsr1h	equ	0xFE2
  1127                           fsr1l	equ	0xFE1
  1128                           indf2	equ	0xFDF
  1129                           fsr2h	equ	0xFDA
  1130                           fsr2l	equ	0xFD9
  1131                           status	equ	0xFD8
  1132                           
  1133 ;; *************** function _WriteBytesFlash *****************
  1134 ;; Defined at:
  1135 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Flash\WriteBytesFlash.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  startaddr       4    0[COMRAM] unsigned long 
  1138 ;;  num_bytes       2    4[COMRAM] unsigned int 
  1139 ;;  flash_array     2    6[COMRAM] PTR unsigned char 
  1140 ;;		 -> buforCAN(65), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  saddress        4   17[COMRAM] unsigned long 
  1143 ;;  startptr        3   14[COMRAM] PTR unsigned char 
  1144 ;;		 -> ROM(2047), 
  1145 ;;  saveptr         3    9[COMRAM] PTR unsigned char 
  1146 ;;		 -> ROM(2047), 
  1147 ;;  flag            1   13[COMRAM] unsigned char 
  1148 ;;  write_byte      1   12[COMRAM] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;		None               void
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1158 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1159 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1161 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1162 ;;Total ram usage:       21 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_OdbierzRamke
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           	psect	text2
  1172  000406                     __ptext2:
  1173                           	opt stack 0
  1174  000406                     _WriteBytesFlash:
  1175                           	opt stack 29
  1176                           
  1177                           ;incstack = 0
  1178                           ;incstack = 0
  1179  000406  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1180  000408  0E00               	movlw	0
  1181  00040A  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1182  00040C  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1183  00040E  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1184  000410  0E00               	movlw	0
  1185  000412  6E0E               	movwf	WriteBytesFlash@flag,c
  1186  000414  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1187  000416  C001  F012         	movff	WriteBytesFlash@startaddr,WriteBytesFlash@saddress
  1188  00041A  C002  F013         	movff	WriteBytesFlash@startaddr+1,WriteBytesFlash@saddress+1
  1189  00041E  C003  F014         	movff	WriteBytesFlash@startaddr+2,WriteBytesFlash@saddress+2
  1190  000422  C004  F015         	movff	WriteBytesFlash@startaddr+3,WriteBytesFlash@saddress+3
  1191  000426  0E06               	movlw	6
  1192  000428  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1193  00042A                     u295:
  1194  00042A  90D8               	bcf	status,0,c
  1195  00042C  3204               	rrcf	WriteBytesFlash@startaddr+3,f,c
  1196  00042E  3203               	rrcf	WriteBytesFlash@startaddr+2,f,c
  1197  000430  3202               	rrcf	WriteBytesFlash@startaddr+1,f,c
  1198  000432  3201               	rrcf	WriteBytesFlash@startaddr,f,c
  1199  000434  2E09               	decfsz	??_WriteBytesFlash& (0+255),f,c
  1200  000436  D7F9               	goto	u295
  1201  000438  0E06               	movlw	6
  1202  00043A                     u305:
  1203  00043A  90D8               	bcf	status,0,c
  1204  00043C  3601               	rlcf	WriteBytesFlash@startaddr,f,c
  1205  00043E  3602               	rlcf	WriteBytesFlash@startaddr+1,f,c
  1206  000440  3603               	rlcf	WriteBytesFlash@startaddr+2,f,c
  1207  000442  3604               	rlcf	WriteBytesFlash@startaddr+3,f,c
  1208  000444  2EE8               	decfsz	wreg,f,c
  1209  000446  D7F9               	goto	u305
  1210  000448  0E40               	movlw	64
  1211  00044A  2601               	addwf	WriteBytesFlash@startaddr,f,c
  1212  00044C  0E00               	movlw	0
  1213  00044E  2202               	addwfc	WriteBytesFlash@startaddr+1,f,c
  1214  000450  0E00               	movlw	0
  1215  000452  2203               	addwfc	WriteBytesFlash@startaddr+2,f,c
  1216  000454  0E00               	movlw	0
  1217  000456  2204               	addwfc	WriteBytesFlash@startaddr+3,f,c
  1218  000458  5012               	movf	WriteBytesFlash@saddress,w,c
  1219  00045A  0800               	sublw	0
  1220  00045C  2401               	addwf	WriteBytesFlash@startaddr,w,c
  1221  00045E  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1222  000460  D056               	goto	l1063
  1223  000462                     l173:
  1224  000462  C012  F00F         	movff	WriteBytesFlash@saddress,WriteBytesFlash@startptr
  1225  000466  C013  F010         	movff	WriteBytesFlash@saddress+1,WriteBytesFlash@startptr+1
  1226  00046A  C014  F011         	movff	WriteBytesFlash@saddress+2,WriteBytesFlash@startptr+2
  1227  00046E  D01C               	goto	l1041
  1228  000470                     l1031:
  1229  000470  C007  FFD9         	movff	WriteBytesFlash@flash_array,fsr2l
  1230  000474  C008  FFDA         	movff	WriteBytesFlash@flash_array+1,fsr2h
  1231  000478  50DF               	movf	indf2,w,c
  1232  00047A  C00F  FFF6         	movff	WriteBytesFlash@startptr,tblptrl
  1233  00047E  C010  FFF7         	movff	WriteBytesFlash@startptr+1,tblptrh
  1234  000482  C011  FFF8         	movff	WriteBytesFlash@startptr+2,tblptru
  1235  000486  6EF5               	movwf	tablat,c
  1236  000488  000C               	tblwt		*
  1237  00048A  4A07               	infsnz	WriteBytesFlash@flash_array,f,c
  1238  00048C  2A08               	incf	WriteBytesFlash@flash_array+1,f,c
  1239  00048E  0E01               	movlw	1
  1240  000490  260F               	addwf	WriteBytesFlash@startptr,f,c
  1241  000492  0E00               	movlw	0
  1242  000494  2210               	addwfc	WriteBytesFlash@startptr+1,f,c
  1243  000496  0E00               	movlw	0
  1244  000498  2211               	addwfc	WriteBytesFlash@startptr+2,f,c
  1245  00049A  0605               	decf	WriteBytesFlash@num_bytes,f,c
  1246  00049C  A0D8               	btfss	status,0,c
  1247  00049E  0606               	decf	WriteBytesFlash@num_bytes+1,f,c
  1248  0004A0  5006               	movf	(WriteBytesFlash@num_bytes+1)& (0+255),w,c
  1249  0004A2  1005               	iorwf	WriteBytesFlash@num_bytes& (0+255),w,c
  1250  0004A4  B4D8               	btfsc	status,2,c
  1251  0004A6  D004               	goto	l177
  1252  0004A8                     l1041:
  1253  0004A8  060D               	decf	WriteBytesFlash@write_byte,f,c
  1254  0004AA  280D               	incf	WriteBytesFlash@write_byte& (0+255),w,c
  1255  0004AC  A4D8               	btfss	status,2,c
  1256  0004AE  D7E0               	goto	l1031
  1257  0004B0                     l177:
  1258  0004B0  C00F  F00A         	movff	WriteBytesFlash@startptr,WriteBytesFlash@saveptr
  1259  0004B4  C010  F00B         	movff	WriteBytesFlash@startptr+1,WriteBytesFlash@saveptr+1
  1260  0004B8  C011  F00C         	movff	WriteBytesFlash@startptr+2,WriteBytesFlash@saveptr+2
  1261  0004BC  C012  F00F         	movff	WriteBytesFlash@saddress,WriteBytesFlash@startptr
  1262  0004C0  C013  F010         	movff	WriteBytesFlash@saddress+1,WriteBytesFlash@startptr+1
  1263  0004C4  C014  F011         	movff	WriteBytesFlash@saddress+2,WriteBytesFlash@startptr+2
  1264  0004C8  8E7F               	bsf	3967,7,c	;volatile
  1265  0004CA  9C7F               	bcf	3967,6,c	;volatile
  1266  0004CC  847F               	bsf	3967,2,c	;volatile
  1267  0004CE  AEF2               	btfss	intcon,7,c	;volatile
  1268  0004D0  D005               	goto	l1047
  1269  0004D2  9EF2               	bcf	intcon,7,c	;volatile
  1270  0004D4  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1271  0004D6  0E01               	movlw	1
  1272  0004D8  6E0E               	movwf	WriteBytesFlash@flag,c
  1273  0004DA  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1274  0004DC                     l1047:
  1275  0004DC  0E55               	movlw	85
  1276  0004DE  6E7E               	movwf	3966,c	;volatile
  1277  0004E0  0EAA               	movlw	170
  1278  0004E2  6E7E               	movwf	3966,c	;volatile
  1279  0004E4  827F               	bsf	3967,1,c	;volatile
  1280  0004E6  947F               	bcf	3967,2,c	;volatile
  1281  0004E8  500E               	movf	WriteBytesFlash@flag,w,c
  1282  0004EA  B4D8               	btfsc	status,2,c
  1283  0004EC  D005               	goto	l179
  1284  0004EE  8EF2               	bsf	intcon,7,c	;volatile
  1285  0004F0  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1286  0004F2  0E00               	movlw	0
  1287  0004F4  6E0E               	movwf	WriteBytesFlash@flag,c
  1288  0004F6  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1289  0004F8                     l179:
  1290  0004F8  6E09               	movwf	??_WriteBytesFlash& (0+255),c
  1291  0004FA  0E40               	movlw	64
  1292  0004FC  6E0D               	movwf	WriteBytesFlash@write_byte,c
  1293  0004FE  5009               	movf	??_WriteBytesFlash& (0+255),w,c
  1294  000500  500A               	movf	WriteBytesFlash@saveptr,w,c
  1295  000502  6E12               	movwf	WriteBytesFlash@saddress,c
  1296  000504  500B               	movf	WriteBytesFlash@saveptr+1,w,c
  1297  000506  6E13               	movwf	WriteBytesFlash@saddress+1,c
  1298  000508  500C               	movf	WriteBytesFlash@saveptr+2,w,c
  1299  00050A  6E14               	movwf	WriteBytesFlash@saddress+2,c
  1300  00050C  6A15               	clrf	WriteBytesFlash@saddress+3,c
  1301  00050E                     l1063:
  1302  00050E  5006               	movf	WriteBytesFlash@num_bytes+1,w,c
  1303  000510  1005               	iorwf	WriteBytesFlash@num_bytes,w,c
  1304  000512  B4D8               	btfsc	status,2,c
  1305  000514  0012               	return	
  1306  000516  D7A5               	goto	l173
  1307  000518                     __end_of_WriteBytesFlash:
  1308                           	opt stack 0
  1309                           tblptru	equ	0xFF8
  1310                           tblptrh	equ	0xFF7
  1311                           tblptrl	equ	0xFF6
  1312                           tablat	equ	0xFF5
  1313                           prodh	equ	0xFF4
  1314                           prodl	equ	0xFF3
  1315                           intcon	equ	0xFF2
  1316                           postinc0	equ	0xFEE
  1317                           wreg	equ	0xFE8
  1318                           indf1	equ	0xFE7
  1319                           fsr1h	equ	0xFE2
  1320                           fsr1l	equ	0xFE1
  1321                           indf2	equ	0xFDF
  1322                           fsr2h	equ	0xFDA
  1323                           fsr2l	equ	0xFD9
  1324                           status	equ	0xFD8
  1325                           
  1326 ;; *************** function _EraseFlash *****************
  1327 ;; Defined at:
  1328 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Flash\EraseFlash.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  startaddr       4    0[COMRAM] unsigned long 
  1331 ;;  endaddr         4    4[COMRAM] unsigned long 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  flash_addr      4   10[COMRAM] struct .
  1334 ;;  flag            1    9[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1344 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1345 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1347 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1348 ;;Total ram usage:       14 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_OdbierzRamke
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text3
  1358  000518                     __ptext3:
  1359                           	opt stack 0
  1360  000518                     _EraseFlash:
  1361                           	opt stack 29
  1362                           
  1363                           ;incstack = 0
  1364                           ;incstack = 0
  1365  000518  6E09               	movwf	??_EraseFlash& (0+255),c
  1366  00051A  0E00               	movlw	0
  1367  00051C  6E0A               	movwf	EraseFlash@flag,c
  1368  00051E  5009               	movf	??_EraseFlash& (0+255),w,c
  1369  000520  C001  F00B         	movff	EraseFlash@startaddr,EraseFlash@flash_addr
  1370  000524  C002  F00C         	movff	EraseFlash@startaddr+1,EraseFlash@flash_addr+1
  1371  000528  C003  F00D         	movff	EraseFlash@startaddr+2,EraseFlash@flash_addr+2
  1372  00052C  C004  F00E         	movff	EraseFlash@startaddr+3,EraseFlash@flash_addr+3
  1373  000530  D025               	goto	l158
  1374  000532                     l159:
  1375  000532  C00D  FFF8         	movff	EraseFlash@flash_addr+2,tblptru	;volatile
  1376  000536  C00C  FFF7         	movff	EraseFlash@flash_addr+1,tblptrh	;volatile
  1377  00053A  C00B  FFF6         	movff	EraseFlash@flash_addr,tblptrl	;volatile
  1378  00053E  8E7F               	bsf	3967,7,c	;volatile
  1379  000540  9C7F               	bcf	3967,6,c	;volatile
  1380  000542  847F               	bsf	3967,2,c	;volatile
  1381  000544  887F               	bsf	3967,4,c	;volatile
  1382  000546  AEF2               	btfss	intcon,7,c	;volatile
  1383  000548  D005               	goto	l1007
  1384  00054A  9EF2               	bcf	intcon,7,c	;volatile
  1385  00054C  6E09               	movwf	??_EraseFlash& (0+255),c
  1386  00054E  0E01               	movlw	1
  1387  000550  6E0A               	movwf	EraseFlash@flag,c
  1388  000552  5009               	movf	??_EraseFlash& (0+255),w,c
  1389  000554                     l1007:
  1390  000554  0E55               	movlw	85
  1391  000556  6E7E               	movwf	3966,c	;volatile
  1392  000558  0EAA               	movlw	170
  1393  00055A  6E7E               	movwf	3966,c	;volatile
  1394  00055C  827F               	bsf	3967,1,c	;volatile
  1395  00055E  500A               	movf	EraseFlash@flag,w,c
  1396  000560  A4D8               	btfss	status,2,c
  1397  000562  8EF2               	bsf	intcon,7,c	;volatile
  1398  000564  0E40               	movlw	64
  1399  000566  240B               	addwf	EraseFlash@flash_addr,w,c
  1400  000568  6E0B               	movwf	EraseFlash@flash_addr,c
  1401  00056A  0E00               	movlw	0
  1402  00056C  200C               	addwfc	EraseFlash@flash_addr+1,w,c
  1403  00056E  6E0C               	movwf	EraseFlash@flash_addr+1,c
  1404  000570  0E00               	movlw	0
  1405  000572  200D               	addwfc	EraseFlash@flash_addr+2,w,c
  1406  000574  6E0D               	movwf	EraseFlash@flash_addr+2,c
  1407  000576  0E00               	movlw	0
  1408  000578  200E               	addwfc	EraseFlash@flash_addr+3,w,c
  1409  00057A  6E0E               	movwf	EraseFlash@flash_addr+3,c
  1410  00057C                     l158:
  1411  00057C  5005               	movf	EraseFlash@endaddr,w,c
  1412  00057E  5C0B               	subwf	EraseFlash@flash_addr,w,c
  1413  000580  5006               	movf	EraseFlash@endaddr+1,w,c
  1414  000582  580C               	subwfb	EraseFlash@flash_addr+1,w,c
  1415  000584  5007               	movf	EraseFlash@endaddr+2,w,c
  1416  000586  580D               	subwfb	EraseFlash@flash_addr+2,w,c
  1417  000588  5008               	movf	EraseFlash@endaddr+3,w,c
  1418  00058A  580E               	subwfb	EraseFlash@flash_addr+3,w,c
  1419  00058C  B0D8               	btfsc	status,0,c
  1420  00058E  0012               	return	
  1421  000590  D7D0               	goto	l159
  1422  000592                     __end_of_EraseFlash:
  1423                           	opt stack 0
  1424                           tblptru	equ	0xFF8
  1425                           tblptrh	equ	0xFF7
  1426                           tblptrl	equ	0xFF6
  1427                           tablat	equ	0xFF5
  1428                           prodh	equ	0xFF4
  1429                           prodl	equ	0xFF3
  1430                           intcon	equ	0xFF2
  1431                           postinc0	equ	0xFEE
  1432                           wreg	equ	0xFE8
  1433                           indf1	equ	0xFE7
  1434                           fsr1h	equ	0xFE2
  1435                           fsr1l	equ	0xFE1
  1436                           indf2	equ	0xFDF
  1437                           fsr2h	equ	0xFDA
  1438                           fsr2l	equ	0xFD9
  1439                           status	equ	0xFD8
  1440                           
  1441 ;; *************** function _ResetDevice *****************
  1442 ;; Defined at:
  1443 ;;		line 221 in file "main.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;		None               void
  1450 ;; Registers used:
  1451 ;;		None
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_OdbierzRamke
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text4
  1472  0003F4                     __ptext4:
  1473                           	opt stack 0
  1474  0003F4                     _ResetDevice:
  1475                           	opt stack 30
  1476                           
  1477                           ;incstack = 0
  1478                           ;incstack = 0
  1479  0003F4  EF00 F006          	goto	3072	;# 
  1480  0003F8  0012               	return	
  1481  0003FA                     __end_of_ResetDevice:
  1482                           	opt stack 0
  1483  0000                     tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           prodh	equ	0xFF4
  1488                           prodl	equ	0xFF3
  1489                           intcon	equ	0xFF2
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           indf1	equ	0xFE7
  1493                           fsr1h	equ	0xFE2
  1494                           fsr1l	equ	0xFE1
  1495                           indf2	equ	0xFDF
  1496                           fsr2h	equ	0xFDA
  1497                           fsr2l	equ	0xFD9
  1498                           status	equ	0xFD8
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           prodh	equ	0xFF4
  1504                           prodl	equ	0xFF3
  1505                           intcon	equ	0xFF2
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           indf1	equ	0xFE7
  1509                           fsr1h	equ	0xFE2
  1510                           fsr1l	equ	0xFE1
  1511                           indf2	equ	0xFDF
  1512                           fsr2h	equ	0xFDA
  1513                           fsr2l	equ	0xFD9
  1514                           status	equ	0xFD8
  1515                           
  1516                           	psect	rparam
  1517  0000                     tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           intcon	equ	0xFF2
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           indf1	equ	0xFE7
  1527                           fsr1h	equ	0xFE2
  1528                           fsr1l	equ	0xFE1
  1529                           indf2	equ	0xFDF
  1530                           fsr2h	equ	0xFDA
  1531                           fsr2l	equ	0xFD9
  1532                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      37
    BANK0           160      0      65
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    WriteBytesFlash@saveptr	PTR unsigned char  size(3) Largest target is 2047
		 -> ROM(CODE[2047]), 

    WriteBytesFlash@flash_array	PTR unsigned char  size(2) Largest target is 65
		 -> buforCAN(BANK0[65]), 

    WriteBytesFlash@startptr	PTR unsigned char  size(3) Largest target is 2047
		 -> ROM(CODE[2047]), 

    OdbierzRamke@pointerU8	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXB0D0(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_OdbierzRamke
    _OdbierzRamke->_WriteBytesFlash

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     808
                                             28 COMRAM     2     2      0
                       _OdbierzRamke
                        _ResetDevice
 ---------------------------------------------------------------------------------
 (1) _OdbierzRamke                                         9     9      0     785
                                             21 COMRAM     7     7      0
                        _ResetDevice
                         _EraseFlash
                    _WriteBytesFlash
 ---------------------------------------------------------------------------------
 (2) _WriteBytesFlash                                     21    13      8     302
                                              0 COMRAM    21    13      8
 ---------------------------------------------------------------------------------
 (2) _EraseFlash                                          14     6      8     182
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ResetDevice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OdbierzRamke
     _ResetDevice
     _EraseFlash
     _WriteBytesFlash
   _ResetDevice

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      41       5       40.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      25       1       38.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      66       6        0.0%
DATA                 0      0      68       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Jul 10 06:23:53 2019

                        l96 0036                          l97 0098                          l98 003C  
                        l99 0042                 __CFG_BORV$1 000000                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000  
                       l100 0048                         l101 004E                         l102 0054  
                       l103 005A                         l104 0060                         l173 0462  
                       l158 057C                         l159 0532                         l177 04B0  
                       l179 04F8                __CFG_CPB$OFF 000000                         u305 043A  
                       u415 0120                         u450 015C                __CFG_CPD$OFF 000000  
                       u295 042A                         u456 015E                         prod 000FF3  
                       wreg 000FE8                        l1007 0554                        l1031 0470  
                      l1111 0140                        l1041 04A8                        l1105 012C  
                      l1201 03A8                        l1131 01EE                        l1115 014E  
                      l1211 03D8                        l1141 021C                        l1133 01F4  
                      l1047 04DC                        l1063 050E                        l1143 0226  
                      l1135 01FE                        l1127 01DA                        l1145 0230  
                      l1137 0208                        l1081 00AE                        l1073 0066  
                      l1139 0212                        l1149 023A                        l1183 02AC  
                      l1097 00F0                        _RCON 000FD0                        _TMR0 000FD6  
              __CFG_WRTB$ON 000000                __CFG_WRTC$ON 000000               ?_OdbierzRamke 0001  
                      _main 026E                        fsr2h 000FDA                        indf1 000FE7  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
             __CFG_BOREN$ON 000000                        prodh 000FF4                        prodl 000FF3  
                      start 001C               __CFG_IESO$OFF 000000      WriteBytesFlash@saveptr 000A  
             __CFG_FOSC$HS1 000000               __CFG_MCLRE$ON 000000                       _B0CON 000E80  
                     _B1CON 000E90                       _B2CON 000EA0                       _B3CON 000EB0  
                     _B4CON 000EC0                       _B5CON 000ED0                       ?_main 0001  
                     _T0CON 000FD5                       _MSEL0 000E79                       _TRISA 000F92  
                     _TRISB 000F93                       _TRISC 000F94               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000                  _EraseFlash 0518  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000     WriteBytesFlash@saddress 0012  
                     tablat 000FF5              ??_OdbierzRamke 0016                       status 000FD8  
           __initialization 0592     WriteBytesFlash@startptr 000F                __end_of_main 03F4  
                    ??_main 001D               __activetblptr 000002              __CFG_RETEN$OFF 000000  
 WriteBytesFlash@write_byte 000D               ??_ResetDevice 0001                      _CANCON 000F6F  
                    _EECON2 000F7E             __CFG_BBSIZ$BB1K 000000           EraseFlash@endaddr 0005  
                    _RXB0D0 000F66              __CFG_PWRTEN$ON 000000              __CFG_XINST$OFF 000000  
            __CFG_STVREN$ON 000000                      clear_0 0598                      clear_1 05A4  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
               ?_EraseFlash 0001                  _SourceAddr 001F                  __accesstop 0060  
   __end_of__initialization 05AA    WriteBytesFlash@num_bytes 0005         __end_of_ResetDevice 03FA  
            __pcstackCOMRAM 0001    WriteBytesFlash@startaddr 0001        __end_of_OdbierzRamke 026E  
                __pbssBANK0 0060             __CFG_PLLCFG$OFF 000000         __size_of_EraseFlash 007A  
  __size_of_WriteBytesFlash 0112                     _ECANCON 000F72                     _CANSTAT 000F6E  
             OdbierzRamke@i 001C               OdbierzRamke@k 001A            __CFG_CANMX$PORTC 000000  
                   _TBLPTRH 000FF7                     _TBLPTRL 000FF6                     _TBLPTRU 000FF8  
                   _RXB0CON 000F60             __CFG_WDTPS$1024 000000                     _RXB1CON 000F30  
                   _RXFCON0 000E46                     _RXFCON1 000E47                 _ResetDevice 03F4  
                   __Hparam 0000                     __Lparam 0000                     __pcinit 0592  
                   __ramtop 0F00                     __ptext0 026E                     __ptext1 0020  
                   __ptext2 0406                     __ptext3 0518                     __ptext4 03F4  
                 _T0CONbits 000FD5                     _counter 0023           __CFG_MSSPMSK$MSK7 000000  
      end_of_initialization 05AA        EraseFlash@flash_addr 000B               __Lmediumconst 0000  
     OdbierzRamke@pointerU8 0018       __size_of_OdbierzRamke 024E                     postinc0 000FEE  
         ??_WriteBytesFlash 0009                   _TRISAbits 000F92                   _TRISCbits 000F94  
              ??_EraseFlash 0009                _OdbierzRamke 0020          __end_of_EraseFlash 0592  
WriteBytesFlash@flash_array 0007         start_initialization 0592         OdbierzRamke@tempCON 001B  
               __pbssCOMRAM 001F                 _BRGCON1bits 000E43                 _BRGCON2bits 000E44  
               _BRGCON3bits 000E45                ?_ResetDevice 0001                    _LATAbits 000F89  
                  _RXF0EIDH 000EE2                    _RXF0EIDL 000EE3             _WriteBytesFlash 0406  
                  _RXF0SIDH 000EE0                    _RXF0SIDL 000EE1                    _RXM0EIDH 000EFA  
                  _RXM0EIDL 000EFB                    _RXM0SIDH 000EF8                    _RXM0SIDL 000EF9  
                 main@Delay 001E            __CFG_SOSCSEL$DIG 000000              EraseFlash@flag 000A  
                _EECON1bits 000F7F                    __Hrparam 0000                    __Lrparam 0000  
       EraseFlash@startaddr 0001                 _iloscBajtow 0024          _ramekInicjalizacji 0025  
              _RXF0SIDLbits 000EE1                    _buforCAN 0060        __size_of_ResetDevice 0006  
             __size_of_main 0186     __end_of_WriteBytesFlash 0518         WriteBytesFlash@flag 000E  
       __CFG_INTOSCSEL$HIGH 000000          __CFG_WDTEN$SWDTDIS 000000                  _INTCONbits 000FF2  
       __CFG_BORPWR$ZPBORMV 000000            ?_WriteBytesFlash 0001  
