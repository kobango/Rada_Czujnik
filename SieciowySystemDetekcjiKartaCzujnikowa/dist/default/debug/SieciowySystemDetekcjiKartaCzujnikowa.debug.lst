

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul 18 14:24:16 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4680 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  001052                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for MOC_Frame_Counter@zeta
    96  001052  0011               	dw	17
    97                           
    98                           ;initializer for LED_Update@pos2
    99  001054  0001               	dw	1
   100                           
   101                           ;initializer for LED_Update@pos1
   102  001056  0001               	dw	1
   103                           
   104                           ;initializer for _Fulfillment_Lvl
   105  001058  0014               	dw	20
   106                           
   107                           ;initializer for LED_Update@Green
   108  00105A  01                 	db	1
   109  0000                     _MSEL3	set	3571
   110  0000                     _MSEL2	set	3570
   111  0000                     _MSEL1	set	3569
   112  0000                     _MSEL0	set	3568
   113  0000                     _BIE0	set	3578
   114  0000                     _BSEL0	set	3576
   115  0000                     _B5CON	set	3696
   116  0000                     _B4CON	set	3680
   117  0000                     _B3CON	set	3664
   118  0000                     _B2CON	set	3648
   119  0000                     _B1CON	set	3632
   120  0000                     _B0CON	set	3616
   121  0000                     _TXB0CONbits	set	3904
   122  0000                     _RXF2EIDL	set	3851
   123  0000                     _RXF2EIDH	set	3850
   124  0000                     _RXF2SIDLbits	set	3849
   125  0000                     _RXF2SIDL	set	3849
   126  0000                     _RXF2SIDH	set	3848
   127  0000                     _RXF1EIDL	set	3847
   128  0000                     _RXF1EIDH	set	3846
   129  0000                     _RXF1SIDLbits	set	3845
   130  0000                     _RXF1SIDL	set	3845
   131  0000                     _RXF1SIDH	set	3844
   132  0000                     _RXF0EIDL	set	3843
   133  0000                     _RXF0EIDH	set	3842
   134  0000                     _RXF0SIDLbits	set	3841
   135  0000                     _RXF0SIDL	set	3841
   136  0000                     _RXF0SIDH	set	3840
   137  0000                     _RXM1EIDL	set	3871
   138  0000                     _RXM1EIDH	set	3870
   139  0000                     _RXM1SIDL	set	3869
   140  0000                     _RXM1SIDH	set	3868
   141  0000                     _RXM0EIDL	set	3867
   142  0000                     _RXM0EIDH	set	3866
   143  0000                     _RXM0SIDL	set	3865
   144  0000                     _RXM0SIDH	set	3864
   145  0000                     _RXB1CON	set	3920
   146  0000                     _TXB0CON	set	3904
   147  0000                     _TRISC	set	3988
   148  0000                     _LATC	set	3979
   149  0000                     _LATE	set	3981
   150  0000                     _LATA	set	3977
   151  0000                     _LATB	set	3978
   152  0000                     _LATD	set	3980
   153  0000                     _TRISD	set	3989
   154  0000                     _TRISE	set	3990
   155  0000                     _TRISB	set	3987
   156  0000                     _TRISA	set	3986
   157  0000                     _RXB0DLCbits	set	3941
   158  0000                     _RXB0DLC	set	3941
   159  0000                     _RXB0SIDH	set	3937
   160  0000                     _RXB0SIDLbits	set	3938
   161  0000                     _RXB0SIDL	set	3938
   162  0000                     _RXB0EIDH	set	3939
   163  0000                     _RXB0EIDL	set	3940
   164  0000                     _COMSTATbits	set	3956
   165  0000                     _RXB0CONbits	set	3936
   166  0000                     _BRGCON3bits	set	3954
   167  0000                     _BRGCON2bits	set	3953
   168  0000                     _BRGCON1bits	set	3952
   169  0000                     _CIOCON	set	3955
   170  0000                     _ECANCON	set	3959
   171  0000                     _RXB0CON	set	3936
   172  0000                     _CANSTAT	set	3950
   173  0000                     _CANCON	set	3951
   174  0000                     _RXB0D0	set	3942
   175  0000                     _WDTCONbits	set	4049
   176  0000                     _RCONbits	set	4048
   177  0000                     _T1CON	set	4045
   178  0000                     _TMR1H	set	4047
   179  0000                     _TMR1L	set	4046
   180  0000                     _PIR3	set	4004
   181  0000                     _IPR3	set	4005
   182  0000                     _PIE3	set	4003
   183  0000                     _RCON	set	4048
   184  0000                     _TMR1IF	set	31984
   185  0000                     _TMR1IP	set	31992
   186  0000                     _IPEN	set	32391
   187  0000                     _TMR1ON	set	32360
   188  0000                     _TMR1IE	set	31976
   189  0000                     _IRCF0	set	32412
   190  0000                     _IRCF1	set	32413
   191  0000                     _IRCF2	set	32414
   192  0000                     _INTCONbits	set	4082
   193  0000                     _PEIE	set	32662
   194                           
   195                           ; #config settings
   196  0000                     
   197                           	psect	cinit
   198  000CC6                     __pcinit:
   199                           	opt callstack 0
   200  000CC6                     start_initialization:
   201                           	opt callstack 0
   202  000CC6                     __initialization:
   203                           	opt callstack 0
   204                           
   205                           ; Initialize objects allocated to COMRAM (9 bytes)
   206                           ; load TBLPTR registers with __pidataCOMRAM
   207  000CC6  0E52               	movlw	low __pidataCOMRAM
   208  000CC8  6EF6               	movwf	tblptrl,c
   209  000CCA  0E10               	movlw	high __pidataCOMRAM
   210  000CCC  6EF7               	movwf	tblptrh,c
   211  000CCE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   212  000CD0  6EF8               	movwf	tblptru,c
   213  000CD2  EE00  F04B         	lfsr	0,__pdataCOMRAM
   214  000CD6  EE10 F009          	lfsr	1,9
   215  000CDA                     copy_data0:
   216  000CDA  0009               	tblrd		*+
   217  000CDC  CFF5 FFEE          	movff	tablat,postinc0
   218  000CE0  50E5               	movf	postdec1,w,c
   219  000CE2  50E1               	movf	fsr1l,w,c
   220  000CE4  E1FA               	bnz	copy_data0
   221                           
   222                           ; Clear objects allocated to BIGRAM (544 bytes)
   223  000CE6  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   224  000CEA  EE12 F020          	lfsr	1,544
   225  000CEE                     clear_0:
   226  000CEE  6AEE               	clrf	postinc0,c
   227  000CF0  50E5               	movf	postdec1,w,c
   228  000CF2  50E1               	movf	fsr1l,w,c
   229  000CF4  E1FC               	bnz	clear_0
   230  000CF6  50E2               	movf	fsr1h,w,c
   231  000CF8  E1FA               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to BANK0 (102 bytes)
   234  000CFA  EE00  F060         	lfsr	0,__pbssBANK0
   235  000CFE  0E66               	movlw	102
   236  000D00                     clear_1:
   237  000D00  6AEE               	clrf	postinc0,c
   238  000D02  06E8               	decf	wreg,f,c
   239  000D04  E1FD               	bnz	clear_1
   240                           
   241                           ; Clear objects allocated to COMRAM (21 bytes)
   242  000D06  EE00  F036         	lfsr	0,__pbssCOMRAM
   243  000D0A  0E15               	movlw	21
   244  000D0C                     clear_2:
   245  000D0C  6AEE               	clrf	postinc0,c
   246  000D0E  06E8               	decf	wreg,f,c
   247  000D10  E1FD               	bnz	clear_2
   248  000D12                     end_of_initialization:
   249                           	opt callstack 0
   250  000D12                     __end_of__initialization:
   251                           	opt callstack 0
   252  000D12  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253  000D14  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254  000D16  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  000D18  6EF8               	movwf	tblptru,c
   256  000D1A  0100               	movlb	0
   257  000D1C  EF66  F007         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260  000036                     __pbssCOMRAM:
   261                           	opt callstack 0
   262  000036                     _Flagi:
   263                           	opt callstack 0
   264  000036                     	ds	5
   265  00003B                     _DaneCan:
   266                           	opt callstack 0
   267  00003B                     	ds	4
   268  00003F                     _DetectorLedRadar:
   269                           	opt callstack 0
   270  00003F                     	ds	3
   271  000042                     _TMR1_Update_flag:
   272                           	opt callstack 0
   273  000042                     	ds	2
   274  000044                     _Dane:
   275                           	opt callstack 0
   276  000044                     	ds	2
   277  000046                     	ds	1
   278  000047                     	ds	1
   279  000048                     ISR_low@ramkaStanuU8:
   280                           	opt callstack 0
   281  000048                     	ds	1
   282  000049                     	ds	1
   283  00004A                     _LOCK:
   284                           	opt callstack 0
   285  00004A                     	ds	1
   286                           
   287                           	psect	dataCOMRAM
   288  00004B                     __pdataCOMRAM:
   289                           	opt callstack 0
   290  00004B                     MOC_Frame_Counter@zeta:
   291                           	opt callstack 0
   292  00004B                     	ds	2
   293  00004D                     LED_Update@pos2:
   294                           	opt callstack 0
   295  00004D                     	ds	2
   296  00004F                     LED_Update@pos1:
   297                           	opt callstack 0
   298  00004F                     	ds	2
   299  000051                     _Fulfillment_Lvl:
   300                           	opt callstack 0
   301  000051                     	ds	2
   302  000053                     LED_Update@Green:
   303                           	opt callstack 0
   304  000053                     	ds	1
   305                           
   306                           	psect	bssBANK0
   307  000060                     __pbssBANK0:
   308                           	opt callstack 0
   309  000060                     _ramkaCanRxKarty:
   310                           	opt callstack 0
   311  000060                     	ds	85
   312  0000B5                     _ramkaCanTxKarty:
   313                           	opt callstack 0
   314  0000B5                     	ds	17
   315                           
   316                           	psect	bssBIGRAM
   317  0000C6                     __pbssBIGRAM:
   318                           	opt callstack 0
   319  0000C6                     _wartosciSasiada:
   320                           	opt callstack 0
   321  0000C6                     	ds	544
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	opt callstack 0
   326  000001                     TMR1_Timer_reset@t1L:
   327                           	opt callstack 0
   328  000001                     i1TMR1_Update_flag_Set@a:
   329                           	opt callstack 0
   330                           
   331                           ; 2 bytes @ 0x0
   332  000001                     	ds	1
   333  000002                     TMR1_Timer_reset@t1H:
   334                           	opt callstack 0
   335                           
   336                           ; 1 bytes @ 0x1
   337  000002                     	ds	1
   338  000003                     ??_ISR_low:
   339  000003                     
   340                           ; 1 bytes @ 0x2
   341  000003                     	ds	3
   342  000006                     ??_CAN_Setup:
   343  000006                     ?_TMR1_Update_flag_Get:
   344                           	opt callstack 0
   345  000006                     ?_LED_Right:
   346                           	opt callstack 0
   347  000006                     ?_LED_Left:
   348                           	opt callstack 0
   349  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   350                           	opt callstack 0
   351  000006                     ?_MOC_Frame_Counter:
   352                           	opt callstack 0
   353  000006                     ?_MOC_Aktualna_Temperatura:
   354                           	opt callstack 0
   355  000006                     ?_MOC_NOTWORK:
   356                           	opt callstack 0
   357  000006                     ?___wmul:
   358                           	opt callstack 0
   359  000006                     ?___awdiv:
   360                           	opt callstack 0
   361  000006                     ?___lwdiv:
   362                           	opt callstack 0
   363  000006                     LOCK_Set@k:
   364                           	opt callstack 0
   365  000006                     CAN_MoveBuffIntoFrame@Ram:
   366                           	opt callstack 0
   367  000006                     CAN_GenID@message:
   368                           	opt callstack 0
   369  000006                     LED_Right@a:
   370                           	opt callstack 0
   371  000006                     LED_Left@a:
   372                           	opt callstack 0
   373  000006                     LED_Control@diode:
   374                           	opt callstack 0
   375  000006                     TMR1_Update_flag_Set@a:
   376                           	opt callstack 0
   377  000006                     IsInNeighbors@message_adress:
   378                           	opt callstack 0
   379  000006                     ___wmul@multiplier:
   380                           	opt callstack 0
   381  000006                     ___awdiv@dividend:
   382                           	opt callstack 0
   383  000006                     ___lwdiv@dividend:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x5
   387  000006                     	ds	2
   388  000008                     ??_LED_Right:
   389  000008                     ??_IsInNeighbors:
   390  000008                     CAN_GenID@frameID:
   391                           	opt callstack 0
   392  000008                     CAN_MoveBuffIntoFrame@Buf:
   393                           	opt callstack 0
   394  000008                     LED_Left@b:
   395                           	opt callstack 0
   396  000008                     ___wmul@multiplicand:
   397                           	opt callstack 0
   398  000008                     ___awdiv@divisor:
   399                           	opt callstack 0
   400  000008                     ___lwdiv@divisor:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x7
   404  000008                     	ds	1
   405  000009                     ??_CAN_GenID:
   406                           
   407                           ; 1 bytes @ 0x8
   408  000009                     	ds	1
   409  00000A                     CAN_MoveBuffIntoFrame@i:
   410                           	opt callstack 0
   411  00000A                     LED_Control@color:
   412                           	opt callstack 0
   413  00000A                     ___awdiv@counter:
   414                           	opt callstack 0
   415  00000A                     LED_Right@b:
   416                           	opt callstack 0
   417  00000A                     ___wmul@product:
   418                           	opt callstack 0
   419  00000A                     ___lwdiv@quotient:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x9
   423  00000A                     	ds	1
   424  00000B                     ___awdiv@sign:
   425                           	opt callstack 0
   426  00000B                     CAN_SendFrame@message:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0xA
   430  00000B                     	ds	1
   431  00000C                     ___lwdiv@counter:
   432                           	opt callstack 0
   433  00000C                     IsInNeighbors@i:
   434                           	opt callstack 0
   435  00000C                     FRAME_AdressOfNeighbors@message:
   436                           	opt callstack 0
   437  00000C                     ___awdiv@quotient:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0xB
   441  00000C                     	ds	1
   442  00000D                     ??_CAN_SendFrame:
   443  00000D                     LED_Light_Pos@pos:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0xC
   447  00000D                     	ds	1
   448  00000E                     CAN_TakeFrame@message:
   449                           	opt callstack 0
   450  00000E                     FRAME_SensorExcitationStatus@message:
   451                           	opt callstack 0
   452  00000E                     FRAME_AdressOfNeighbors@nrRamki:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0xD
   456  00000E                     	ds	1
   457  00000F                     LED_Light_Pos@fulfillment:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0xE
   461  00000F                     	ds	1
   462  000010                     ??_CAN_TakeFrame:
   463  000010                     ??_FRAME_AdressOfNeighbors:
   464                           
   465                           ; 1 bytes @ 0xF
   466  000010                     	ds	1
   467  000011                     LED_Light_Pos@color:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0x10
   471  000011                     	ds	1
   472  000012                     CAN_TakeFrame@tempCON:
   473                           	opt callstack 0
   474  000012                     LED_Light_Pos@LED_array:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x11
   478  000012                     	ds	1
   479  000013                     CAN_TakeFrame@k:
   480                           	opt callstack 0
   481                           
   482                           ; 1 bytes @ 0x12
   483  000013                     	ds	1
   484  000014                     LED_Light_Pos@pos2:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x13
   488  000014                     	ds	2
   489  000016                     LED_Light_Pos@flage:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x15
   493  000016                     	ds	2
   494  000018                     
   495                           ; 1 bytes @ 0x17
   496  000018                     	ds	6
   497  00001E                     FRAME_AdressOfNeighbors@i:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x1D
   501  00001E                     	ds	2
   502  000020                     FRAME_HandleCanFrame@message:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x1F
   506  000020                     	ds	2
   507  000022                     ??_FRAME_HandleCanFrame:
   508                           
   509                           ; 1 bytes @ 0x21
   510  000022                     	ds	2
   511  000024                     FRAME_HandleCanFrame@identyfikator:
   512                           	opt callstack 0
   513                           
   514                           ; 1 bytes @ 0x23
   515  000024                     	ds	1
   516  000025                     TRM_DataTransmition@canMessage:
   517                           	opt callstack 0
   518                           
   519                           ; 17 bytes @ 0x24
   520  000025                     	ds	17
   521  000036                     
   522                           ; 1 bytes @ 0x35
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 94 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels required when called:    7
   548 ;; This function calls:
   549 ;;		_INI_All
   550 ;;		_LED_Update
   551 ;;		_TMR1_Update_flag_Get
   552 ;;		_TMR1_Update_flag_Set
   553 ;;		_TRM_DataTransmition
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560  000ECC                     __ptext0:
   561                           	opt callstack 0
   562  000ECC                     _main:
   563                           	opt callstack 24
   564                           
   565                           ;main.c: 96:     INI_All();
   566                           
   567                           ;incstack = 0
   568  000ECC  ECE9  F007         	call	_INI_All	;wreg free
   569                           
   570                           ;main.c: 98:     RCON = 0xFF;
   571  000ED0  68D0               	setf	4048,c	;volatile
   572  000ED2                     l2859:
   573                           
   574                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   575  000ED2  B03F               	btfsc	_DetectorLedRadar,0,c
   576                           
   577                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   578  000ED4  903F               	bcf	_DetectorLedRadar,0,c
   579                           
   580                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   581  000ED6  EC1F  F008         	call	_TMR1_Update_flag_Get	;wreg free
   582  000EDA  0406               	decf	?_TMR1_Update_flag_Get,w,c
   583  000EDC  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   584  000EDE  A4D8               	btfss	status,2,c
   585  000EE0  D008               	goto	l2869
   586                           
   587                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   588  000EE2  ECC6  F005         	call	_LED_Update	;wreg free
   589                           
   590                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   591  000EE6  0E00               	movlw	0
   592  000EE8  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   593  000EEA  0E00               	movlw	0
   594  000EEC  6E06               	movwf	TMR1_Update_flag_Set@a,c
   595  000EEE  EC1A  F008         	call	_TMR1_Update_flag_Set	;wreg free
   596  000EF2                     l2869:
   597                           
   598                           ;main.c: 115:         TRM_DataTransmition();
   599  000EF2  EC06  F007         	call	_TRM_DataTransmition	;wreg free
   600  000EF6  0004               	clrwdt		;# 
   601                           
   602                           ;main.c: 117:     }
   603  000EF8  D7EC               	goto	l2859
   604  000EFA                     __end_of_main:
   605                           	opt callstack 0
   606                           
   607 ;; *************** function _TRM_DataTransmition *****************
   608 ;; Defined at:
   609 ;;		line 19 in file "TRM.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  canMessage     17   36[COMRAM] struct .
   614 ;;  i               1    0        unsigned char 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   625 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   627 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   628 ;;Total ram usage:       17 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    6
   631 ;; This function calls:
   632 ;;		_CAN_TakeFrame
   633 ;;		_FRAME_HandleCanFrame
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text1
   640  000E0C                     __ptext1:
   641                           	opt callstack 0
   642  000E0C                     _TRM_DataTransmition:
   643                           	opt callstack 24
   644                           
   645                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   646                           
   647                           ;incstack = 0
   648  000E0C  A03B               	btfss	_DaneCan,0,c
   649  000E0E  D013               	goto	l2827
   650                           
   651                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   652  000E10  0E02               	movlw	2
   653  000E12  6E26               	movwf	TRM_DataTransmition@canMessage+1,c
   654                           
   655                           ;TRM.c: 30:         canMessage.id.Val = 0;
   656  000E14  0E00               	movlw	0
   657  000E16  6E29               	movwf	TRM_DataTransmition@canMessage+4,c
   658  000E18  0E00               	movlw	0
   659  000E1A  6E2A               	movwf	TRM_DataTransmition@canMessage+5,c
   660  000E1C  0E00               	movlw	0
   661  000E1E  6E2B               	movwf	TRM_DataTransmition@canMessage+6,c
   662  000E20  0E00               	movlw	0
   663  000E22  6E2C               	movwf	TRM_DataTransmition@canMessage+7,c
   664                           
   665                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   666  000E24  0E04               	movlw	4
   667  000E26  6E2B               	movwf	TRM_DataTransmition@canMessage+6,c
   668                           
   669                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   670  000E28  0E25               	movlw	low TRM_DataTransmition@canMessage
   671  000E2A  6E20               	movwf	FRAME_HandleCanFrame@message,c
   672  000E2C  0E00               	movlw	high TRM_DataTransmition@canMessage
   673  000E2E  6E21               	movwf	FRAME_HandleCanFrame@message+1,c
   674  000E30  EC00  F004         	call	_FRAME_HandleCanFrame	;wreg free
   675                           
   676                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   677  000E34  903B               	bcf	_DaneCan,0,c
   678  000E36                     l2827:
   679                           
   680                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   681  000E36  0E25               	movlw	low TRM_DataTransmition@canMessage
   682  000E38  6E0E               	movwf	CAN_TakeFrame@message,c
   683  000E3A  0E00               	movlw	high TRM_DataTransmition@canMessage
   684  000E3C  6E0F               	movwf	CAN_TakeFrame@message+1,c
   685  000E3E  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   686  000E42  0900               	iorlw	0
   687  000E44  B4D8               	btfsc	status,2,c
   688  000E46  0012               	return	
   689                           
   690                           ;TRM.c: 62:         {;TRM.c: 63:             FRAME_HandleCanFrame(&canMessage);
   691  000E48  0E25               	movlw	low TRM_DataTransmition@canMessage
   692  000E4A  6E20               	movwf	FRAME_HandleCanFrame@message,c
   693  000E4C  0E00               	movlw	high TRM_DataTransmition@canMessage
   694  000E4E  6E21               	movwf	FRAME_HandleCanFrame@message+1,c
   695  000E50  EC00  F004         	call	_FRAME_HandleCanFrame	;wreg free
   696                           
   697                           ;TRM.c: 64:         }
   698  000E54  0012               	return		;funcret
   699  000E56                     __end_of_TRM_DataTransmition:
   700                           	opt callstack 0
   701                           
   702 ;; *************** function _FRAME_HandleCanFrame *****************
   703 ;; Defined at:
   704 ;;		line 486 in file "FRAME.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  message         2   31[COMRAM] PTR struct .
   707 ;;		 -> TRM_DataTransmition@canMessage(17), 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  identyfikato    1   35[COMRAM] unsigned char 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   722 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   723 ;;Total ram usage:        5 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; Hardware stack levels required when called:    5
   726 ;; This function calls:
   727 ;;		_CAN_GenID
   728 ;;		_CAN_SendFrame
   729 ;;		_FRAME_AdressOfNeighbors
   730 ;;		_FRAME_SensorExcitationStatus
   731 ;;		_LED_Error
   732 ;;		___awdiv
   733 ;; This function is called by:
   734 ;;		_TRM_DataTransmition
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text2
   739  000800                     __ptext2:
   740                           	opt callstack 0
   741  000800                     _FRAME_HandleCanFrame:
   742                           	opt callstack 24
   743                           
   744                           ;FRAME.c: 486: void FRAME_HandleCanFrame(mID * message);FRAME.c: 487: {;FRAME.c: 488:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   745                           
   746                           ;incstack = 0
   747  000800  EE20 F006          	lfsr	2,6
   748  000804  5020               	movf	FRAME_HandleCanFrame@message,w,c
   749  000806  26D9               	addwf	fsr2l,f,c
   750  000808  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   751  00080A  22DA               	addwfc	fsr2h,f,c
   752  00080C  50DF               	movf	indf2,w,c
   753  00080E  6E22               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   754  000810  5022               	movf	??_FRAME_HandleCanFrame,w,c
   755  000812  6E06               	movwf	___awdiv@dividend,c
   756  000814  6A07               	clrf	___awdiv@dividend+1,c
   757  000816  0E00               	movlw	0
   758  000818  6E09               	movwf	___awdiv@divisor+1,c
   759  00081A  0E04               	movlw	4
   760  00081C  6E08               	movwf	___awdiv@divisor,c
   761  00081E  EC84  F005         	call	___awdiv	;wreg free
   762  000822  5006               	movf	?___awdiv,w,c
   763  000824  6E24               	movwf	FRAME_HandleCanFrame@identyfikator,c
   764                           
   765                           ;FRAME.c: 491:     switch(identyfikator)
   766  000826  D014               	goto	l2775
   767  000828                     l2769:
   768                           
   769                           ;FRAME.c: 494:             FRAME_SensorExcitationStatus(message);
   770  000828  C020  F00E         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   771  00082C  C021  F00F         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   772  000830  EC78  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   773                           
   774                           ;FRAME.c: 495:             break;
   775  000834  D019               	goto	l2777
   776  000836                     l2771:
   777                           
   778                           ;FRAME.c: 538:           FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   779  000836  C020  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   780  00083A  C021  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   781  00083E  0EF0               	movlw	240
   782  000840  2424               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   783  000842  6E0E               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   784  000844  6A0F               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   785  000846  0EFF               	movlw	255
   786  000848  220F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   787  00084A  EC6E  F001         	call	_FRAME_AdressOfNeighbors	;wreg free
   788                           
   789                           ;FRAME.c: 540:             break;
   790  00084E  D00C               	goto	l2777
   791  000850                     l2775:
   792  000850  5024               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   793  000852  6E22               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   794  000854  6A23               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   795                           
   796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   797                           ; Switch size 1, requested type "simple"
   798                           ; Number of cases is 1, Range of values is 0 to 0
   799                           ; switch strategies available:
   800                           ; Name         Instructions Cycles
   801                           ; simple_byte            4     3 (average)
   802                           ;	Chosen strategy is simple_byte
   803  000856  5023               	movf	??_FRAME_HandleCanFrame+1,w,c
   804  000858  0A00               	xorlw	0	; case 0
   805  00085A  A4D8               	btfss	status,2,c
   806  00085C  D7EC               	goto	l2771
   807                           
   808                           ; Switch size 1, requested type "simple"
   809                           ; Number of cases is 1, Range of values is 1 to 1
   810                           ; switch strategies available:
   811                           ; Name         Instructions Cycles
   812                           ; simple_byte            4     3 (average)
   813                           ;	Chosen strategy is simple_byte
   814  00085E  5022               	movf	??_FRAME_HandleCanFrame,w,c
   815  000860  0A01               	xorlw	1	; case 1
   816  000862  B4D8               	btfsc	status,2,c
   817  000864  D7E1               	goto	l2769
   818  000866  D7E7               	goto	l2771
   819  000868                     l2777:
   820                           
   821                           ;FRAME.c: 542:     if(message->message_type == 0x02)
   822  000868  EE20 F001          	lfsr	2,1
   823  00086C  5020               	movf	FRAME_HandleCanFrame@message,w,c
   824  00086E  26D9               	addwf	fsr2l,f,c
   825  000870  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   826  000872  22DA               	addwfc	fsr2h,f,c
   827  000874  0E02               	movlw	2
   828  000876  18DE               	xorwf	postinc2,w,c
   829  000878  A4D8               	btfss	status,2,c
   830  00087A  0012               	return	
   831                           
   832                           ;FRAME.c: 543:     {;FRAME.c: 545:         message->frame_type = 0x03;
   833  00087C  EE20 F002          	lfsr	2,2
   834  000880  5020               	movf	FRAME_HandleCanFrame@message,w,c
   835  000882  26D9               	addwf	fsr2l,f,c
   836  000884  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   837  000886  22DA               	addwfc	fsr2h,f,c
   838  000888  0E03               	movlw	3
   839  00088A  6EDF               	movwf	indf2,c
   840                           
   841                           ;FRAME.c: 546:         message->message_type = 0x01;
   842  00088C  EE20 F001          	lfsr	2,1
   843  000890  5020               	movf	FRAME_HandleCanFrame@message,w,c
   844  000892  26D9               	addwf	fsr2l,f,c
   845  000894  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   846  000896  22DA               	addwfc	fsr2h,f,c
   847  000898  0E01               	movlw	1
   848  00089A  6EDF               	movwf	indf2,c
   849                           
   850                           ;FRAME.c: 547:         message->id.Val = 0;
   851  00089C  EE20 F004          	lfsr	2,4
   852  0008A0  5020               	movf	FRAME_HandleCanFrame@message,w,c
   853  0008A2  26D9               	addwf	fsr2l,f,c
   854  0008A4  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   855  0008A6  22DA               	addwfc	fsr2h,f,c
   856  0008A8  6ADE               	clrf	postinc2,c
   857  0008AA  6ADE               	clrf	postinc2,c
   858  0008AC  6ADE               	clrf	postinc2,c
   859  0008AE  6ADD               	clrf	postdec2,c
   860                           
   861                           ;FRAME.c: 549:         message->id.v[2] = identyfikator*4;
   862  0008B0  5024               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   863  0008B2  0D04               	mullw	4
   864  0008B4  EE20 F006          	lfsr	2,6
   865  0008B8  5020               	movf	FRAME_HandleCanFrame@message,w,c
   866  0008BA  26D9               	addwf	fsr2l,f,c
   867  0008BC  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   868  0008BE  22DA               	addwfc	fsr2h,f,c
   869  0008C0  CFF3 FFDF          	movff	prodl,indf2
   870                           
   871                           ;FRAME.c: 550:         CAN_GenID(message,identyfikator);
   872  0008C4  C020  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   873  0008C8  C021  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   874  0008CC  C024  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
   875  0008D0  EC3A  F005         	call	_CAN_GenID	;wreg free
   876                           
   877                           ;FRAME.c: 551:         CAN_SendFrame(message);
   878  0008D4  C020  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
   879  0008D8  C021  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
   880  0008DC  ECA0  F002         	call	_CAN_SendFrame	;wreg free
   881                           
   882                           ;FRAME.c: 562:        while(RXB0CONbits.FILHIT3)
   883  0008E0  D004               	goto	l514
   884  0008E2                     l515:
   885                           
   886                           ;FRAME.c: 563:        {;FRAME.c: 564:            if(TXB0CONbits.TXERR == 1){
   887  0008E2  010F               	movlb	15	; () banked
   888  0008E4  B940               	btfsc	64,4,b	;volatile
   889                           
   890                           ; BSR set to: 15
   891                           ;FRAME.c: 565:                LED_Error();
   892  0008E6  ECCB  F007         	call	_LED_Error	;wreg free
   893  0008EA                     l514:
   894                           
   895                           ;FRAME.c: 562:        while(RXB0CONbits.FILHIT3)
   896  0008EA  A660               	btfss	3936,3,c	;volatile
   897  0008EC  0012               	return	
   898  0008EE  D7F9               	goto	l515
   899  0008F0                     __end_of_FRAME_HandleCanFrame:
   900                           	opt callstack 0
   901                           
   902 ;; *************** function _LED_Error *****************
   903 ;; Defined at:
   904 ;;		line 37 in file "LED.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  2  255[None  ] unsigned int 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   922 ;;Total ram usage:        0 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    4
   925 ;; This function calls:
   926 ;;		_LED_Control
   927 ;; This function is called by:
   928 ;;		_FRAME_HandleCanFrame
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text3
   933  000F96                     __ptext3:
   934                           	opt callstack 0
   935  000F96                     _LED_Error:
   936                           	opt callstack 24
   937                           
   938                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
   939                           
   940                           ;incstack = 0
   941  000F96  0E02               	movlw	2
   942  000F98  6E07               	movwf	LED_Control@diode+1,c
   943  000F9A  0EAA               	movlw	170
   944  000F9C  6E06               	movwf	LED_Control@diode,c
   945  000F9E  0E00               	movlw	0
   946  000FA0  EC57  F003         	call	_LED_Control
   947                           
   948                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
   949  000FA4  0E00               	movlw	0
   950  000FA6  6E07               	movwf	LED_Control@diode+1,c
   951  000FA8  0E00               	movlw	0
   952  000FAA  6E06               	movwf	LED_Control@diode,c
   953  000FAC  0E01               	movlw	1
   954  000FAE  EC57  F003         	call	_LED_Control
   955  000FB2  0012               	return		;funcret
   956  000FB4                     __end_of_LED_Error:
   957                           	opt callstack 0
   958                           
   959 ;; *************** function _FRAME_SensorExcitationStatus *****************
   960 ;; Defined at:
   961 ;;		line 33 in file "FRAME.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  message         2   13[COMRAM] PTR struct .
   964 ;;		 -> TRM_DataTransmition@canMessage(17), 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   980 ;;Total ram usage:        3 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    4
   983 ;; This function calls:
   984 ;;		_IsInNeighbors
   985 ;;		_LOCK_Get
   986 ;;		_LOCK_Set
   987 ;;		_MOC_Aktualna_Temperatura
   988 ;;		_MOC_Frame_Counter
   989 ;;		_MOC_NOTWORK
   990 ;;		_MOC_Wynikowa_wartosc_roznicowa
   991 ;; This function is called by:
   992 ;;		_FRAME_HandleCanFrame
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text4
   997  0008F0                     __ptext4:
   998                           	opt callstack 0
   999  0008F0                     _FRAME_SensorExcitationStatus:
  1000                           	opt callstack 24
  1001                           
  1002                           ;FRAME.c: 33: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 34: {;FRAM
      +                          E.c: 35:     if(message->message_type == 0x02)
  1003                           
  1004                           ;incstack = 0
  1005  0008F0  EE20 F001          	lfsr	2,1
  1006  0008F4  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1007  0008F6  26D9               	addwf	fsr2l,f,c
  1008  0008F8  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1009  0008FA  22DA               	addwfc	fsr2h,f,c
  1010  0008FC  0E02               	movlw	2
  1011  0008FE  18DE               	xorwf	postinc2,w,c
  1012  000900  A4D8               	btfss	status,2,c
  1013  000902  D047               	goto	l2521
  1014                           
  1015                           ;FRAME.c: 36:     {;FRAME.c: 37:         message->data_length = 6;
  1016  000904  EE20 F010          	lfsr	2,16
  1017  000908  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1018  00090A  26D9               	addwf	fsr2l,f,c
  1019  00090C  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1020  00090E  22DA               	addwfc	fsr2h,f,c
  1021  000910  0E06               	movlw	6
  1022  000912  6EDF               	movwf	indf2,c
  1023                           
  1024                           ;FRAME.c: 43:         message->data[0] = LOCK_Get();
  1025  000914  EE20 F008          	lfsr	2,8
  1026  000918  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1027  00091A  26D9               	addwf	fsr2l,f,c
  1028  00091C  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1029  00091E  22DA               	addwfc	fsr2h,f,c
  1030  000920  EC39  F008         	call	_LOCK_Get	;wreg free
  1031  000924  6EDF               	movwf	indf2,c
  1032                           
  1033                           ;FRAME.c: 44:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1034  000926  EE20 F009          	lfsr	2,9
  1035  00092A  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1036  00092C  26D9               	addwf	fsr2l,f,c
  1037  00092E  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1038  000930  22DA               	addwfc	fsr2h,f,c
  1039  000932  EC10  F008         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1040  000936  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1041  00093A  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1042  00093C  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1043  00093E  6EDF               	movwf	indf2,c
  1044                           
  1045                           ;FRAME.c: 45:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1046  000940  EE20 F00A          	lfsr	2,10
  1047  000944  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1048  000946  26D9               	addwf	fsr2l,f,c
  1049  000948  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1050  00094A  22DA               	addwfc	fsr2h,f,c
  1051  00094C  EC10  F008         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1052  000950  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1053  000952  6EDF               	movwf	indf2,c
  1054                           
  1055                           ;FRAME.c: 46:         message->data[3] = MOC_Frame_Counter();
  1056  000954  EE20 F00B          	lfsr	2,11
  1057  000958  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1058  00095A  26D9               	addwf	fsr2l,f,c
  1059  00095C  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1060  00095E  22DA               	addwfc	fsr2h,f,c
  1061  000960  EC02  F008         	call	_MOC_Frame_Counter	;wreg free
  1062  000964  5006               	movf	?_MOC_Frame_Counter,w,c
  1063  000966  6EDF               	movwf	indf2,c
  1064                           
  1065                           ;FRAME.c: 47:         message->data[4] = MOC_Aktualna_Temperatura();
  1066  000968  EE20 F00C          	lfsr	2,12
  1067  00096C  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1068  00096E  26D9               	addwf	fsr2l,f,c
  1069  000970  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1070  000972  22DA               	addwfc	fsr2h,f,c
  1071  000974  EC15  F008         	call	_MOC_Aktualna_Temperatura	;wreg free
  1072  000978  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1073  00097A  6EDF               	movwf	indf2,c
  1074                           
  1075                           ;FRAME.c: 48:         message->data[5] = MOC_NOTWORK();
  1076  00097C  EE20 F00D          	lfsr	2,13
  1077  000980  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1078  000982  26D9               	addwf	fsr2l,f,c
  1079  000984  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1080  000986  22DA               	addwfc	fsr2h,f,c
  1081  000988  EC2E  F008         	call	_MOC_NOTWORK	;wreg free
  1082  00098C  5006               	movf	?_MOC_NOTWORK,w,c
  1083  00098E  6EDF               	movwf	indf2,c
  1084                           
  1085                           ;FRAME.c: 58:     }
  1086  000990  0012               	return	
  1087  000992                     l2521:
  1088                           
  1089                           ;FRAME.c: 60:     {;FRAME.c: 61:         if(IsInNeighbors(message->id.w[0]))
  1090  000992  EE20 F004          	lfsr	2,4
  1091  000996  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1092  000998  26D9               	addwf	fsr2l,f,c
  1093  00099A  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1094  00099C  22DA               	addwfc	fsr2h,f,c
  1095  00099E  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1096  0009A2  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1097  0009A6  ECB9  F006         	call	_IsInNeighbors	;wreg free
  1098  0009AA  0900               	iorlw	0
  1099  0009AC  B4D8               	btfsc	status,2,c
  1100  0009AE  0012               	return	
  1101                           
  1102                           ;FRAME.c: 62:         {;FRAME.c: 63:         LOCK_Set(message->data[0]);
  1103  0009B0  EE20 F008          	lfsr	2,8
  1104  0009B4  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1105  0009B6  26D9               	addwf	fsr2l,f,c
  1106  0009B8  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1107  0009BA  22DA               	addwfc	fsr2h,f,c
  1108  0009BC  50DF               	movf	indf2,w,c
  1109  0009BE  EC32  F008         	call	_LOCK_Set
  1110  0009C2  0012               	return		;funcret
  1111  0009C4                     __end_of_FRAME_SensorExcitationStatus:
  1112                           	opt callstack 0
  1113                           
  1114 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1115 ;; Defined at:
  1116 ;;		line 33 in file "MOC_Funct.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  2    5[COMRAM] unsigned int 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1134 ;;Total ram usage:        2 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    3
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_FRAME_SensorExcitationStatus
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text5
  1145  001020                     __ptext5:
  1146                           	opt callstack 0
  1147  001020                     _MOC_Wynikowa_wartosc_roznicowa:
  1148                           	opt callstack 24
  1149                           
  1150                           ;MOC_Funct.c: 35:     return 0x0220;
  1151                           
  1152                           ;incstack = 0
  1153  001020  0E02               	movlw	2
  1154  001022  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1155  001024  0E20               	movlw	32
  1156  001026  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1157  001028  0012               	return		;funcret
  1158  00102A                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1159                           	opt callstack 0
  1160                           
  1161 ;; *************** function _MOC_NOTWORK *****************
  1162 ;; Defined at:
  1163 ;;		line 47 in file "MOC_Funct.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  2    5[COMRAM] unsigned int 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1181 ;;Total ram usage:        2 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    3
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_FRAME_SensorExcitationStatus
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text6
  1192  00105C                     __ptext6:
  1193                           	opt callstack 0
  1194  00105C                     _MOC_NOTWORK:
  1195                           	opt callstack 24
  1196                           
  1197                           ;MOC_Funct.c: 49:     return 0xFF;
  1198                           
  1199                           ;incstack = 0
  1200  00105C  0E00               	movlw	0
  1201  00105E  6E07               	movwf	?_MOC_NOTWORK+1,c
  1202  001060  6806               	setf	?_MOC_NOTWORK,c
  1203  001062  0012               	return		;funcret
  1204  001064                     __end_of_MOC_NOTWORK:
  1205                           	opt callstack 0
  1206                           
  1207 ;; *************** function _MOC_Frame_Counter *****************
  1208 ;; Defined at:
  1209 ;;		line 38 in file "MOC_Funct.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  2    5[COMRAM] unsigned int 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1227 ;;Total ram usage:        2 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    3
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_FRAME_SensorExcitationStatus
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text7
  1238  001004                     __ptext7:
  1239                           	opt callstack 0
  1240  001004                     _MOC_Frame_Counter:
  1241                           	opt callstack 24
  1242                           
  1243                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1244                           
  1245                           ;incstack = 0
  1246  001004  504B               	movf	MOC_Frame_Counter@zeta,w,c
  1247  001006  6E06               	movwf	?_MOC_Frame_Counter,c
  1248  001008  504C               	movf	MOC_Frame_Counter@zeta+1,w,c
  1249  00100A  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1250  00100C  4A4B               	infsnz	MOC_Frame_Counter@zeta,f,c
  1251  00100E  2A4C               	incf	MOC_Frame_Counter@zeta+1,f,c
  1252  001010  0012               	return		;funcret
  1253  001012                     __end_of_MOC_Frame_Counter:
  1254                           	opt callstack 0
  1255                           
  1256 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1257 ;; Defined at:
  1258 ;;		line 43 in file "MOC_Funct.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2    5[COMRAM] unsigned int 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1276 ;;Total ram usage:        2 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    3
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_FRAME_SensorExcitationStatus
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text8
  1287  00102A                     __ptext8:
  1288                           	opt callstack 0
  1289  00102A                     _MOC_Aktualna_Temperatura:
  1290                           	opt callstack 24
  1291                           
  1292                           ;MOC_Funct.c: 45:     return 0x1B;
  1293                           
  1294                           ;incstack = 0
  1295  00102A  0E00               	movlw	0
  1296  00102C  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1297  00102E  0E1B               	movlw	27
  1298  001030  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1299  001032  0012               	return		;funcret
  1300  001034                     __end_of_MOC_Aktualna_Temperatura:
  1301                           	opt callstack 0
  1302                           
  1303 ;; *************** function _LOCK_Set *****************
  1304 ;; Defined at:
  1305 ;;		line 52 in file "LED.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  k               1    wreg     unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  k               1    5[COMRAM] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    3
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_FRAME_SensorExcitationStatus
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text9
  1334  001064                     __ptext9:
  1335                           	opt callstack 0
  1336  001064                     _LOCK_Set:
  1337                           	opt callstack 24
  1338                           
  1339                           ;incstack = 0
  1340                           ;LOCK_Set@k stored from wreg
  1341  001064  6E06               	movwf	LOCK_Set@k,c
  1342                           
  1343                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1344  001066  C006  F04A         	movff	LOCK_Set@k,_LOCK
  1345  00106A  0012               	return		;funcret
  1346  00106C                     __end_of_LOCK_Set:
  1347                           	opt callstack 0
  1348                           
  1349 ;; *************** function _LOCK_Get *****************
  1350 ;; Defined at:
  1351 ;;		line 57 in file "LED.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      unsigned char 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    3
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_FRAME_SensorExcitationStatus
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text10
  1380  001072                     __ptext10:
  1381                           	opt callstack 0
  1382  001072                     _LOCK_Get:
  1383                           	opt callstack 24
  1384                           
  1385                           ;LED.c: 59:     return LOCK;
  1386                           
  1387                           ;incstack = 0
  1388  001072  504A               	movf	_LOCK,w,c
  1389  001074  0012               	return		;funcret
  1390  001076                     __end_of_LOCK_Get:
  1391                           	opt callstack 0
  1392                           
  1393 ;; *************** function _IsInNeighbors *****************
  1394 ;; Defined at:
  1395 ;;		line 68 in file "FRAME.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  message_adre    2    5[COMRAM] unsigned int 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  i               2   11[COMRAM] unsigned short 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      unsigned char 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1411 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1412 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;Total ram usage:        8 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    3
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_FRAME_SensorExcitationStatus
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text11
  1424  000D72                     __ptext11:
  1425                           	opt callstack 0
  1426  000D72                     _IsInNeighbors:
  1427                           	opt callstack 24
  1428                           
  1429                           ;FRAME.c: 68: static BYTE IsInNeighbors(UINT message_adress);FRAME.c: 69: {;FRAME.c: 70:
      +                               WORD i;;FRAME.c: 72:     for(i=0; i<4; i++)
  1430                           
  1431                           ;incstack = 0
  1432  000D72  0E00               	movlw	0
  1433  000D74  6E0D               	movwf	IsInNeighbors@i+1,c
  1434  000D76  0E00               	movlw	0
  1435  000D78  6E0C               	movwf	IsInNeighbors@i,c
  1436  000D7A                     l2367:
  1437                           
  1438                           ;FRAME.c: 73:         {;FRAME.c: 74:             if(message_adress == Dane->sasiedzi[i+(
      +                          4*0x10)].adres )
  1439  000D7A  0E0E               	movlw	14
  1440  000D7C  6E08               	movwf	??_IsInNeighbors& (0+255),c
  1441  000D7E  0E01               	movlw	1
  1442  000D80  6E09               	movwf	(??_IsInNeighbors+1)& (0+255),c
  1443  000D82  90D8               	bcf	status,0,c
  1444  000D84  340C               	rlcf	IsInNeighbors@i,w,c
  1445  000D86  6ED9               	movwf	fsr2l,c
  1446  000D88  340D               	rlcf	IsInNeighbors@i+1,w,c
  1447  000D8A  6EDA               	movwf	fsr2h,c
  1448  000D8C  90D8               	bcf	status,0,c
  1449  000D8E  36D9               	rlcf	fsr2l,f,c
  1450  000D90  36DA               	rlcf	fsr2h,f,c
  1451  000D92  5008               	movf	??_IsInNeighbors,w,c
  1452  000D94  26D9               	addwf	fsr2l,f,c
  1453  000D96  5009               	movf	??_IsInNeighbors+1,w,c
  1454  000D98  22DA               	addwfc	fsr2h,f,c
  1455  000D9A  5006               	movf	IsInNeighbors@message_adress,w,c
  1456  000D9C  18DE               	xorwf	postinc2,w,c
  1457  000D9E  E106               	bnz	l2373
  1458  000DA0  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1459  000DA2  18DE               	xorwf	postinc2,w,c
  1460  000DA4  A4D8               	btfss	status,2,c
  1461  000DA6  D002               	goto	l2373
  1462                           
  1463                           ;FRAME.c: 75:             {;FRAME.c: 76:                 return 1;
  1464  000DA8  0E01               	movlw	1
  1465  000DAA  0012               	return	
  1466  000DAC                     l2373:
  1467                           
  1468                           ;FRAME.c: 80:         }
  1469  000DAC  4A0C               	infsnz	IsInNeighbors@i,f,c
  1470  000DAE  2A0D               	incf	IsInNeighbors@i+1,f,c
  1471  000DB0  500D               	movf	IsInNeighbors@i+1,w,c
  1472  000DB2  E104               	bnz	u970
  1473  000DB4  0E04               	movlw	4
  1474  000DB6  5C0C               	subwf	IsInNeighbors@i,w,c
  1475  000DB8  A0D8               	btfss	status,0,c
  1476  000DBA  D7DF               	goto	l2367
  1477  000DBC                     u970:
  1478                           
  1479                           ;FRAME.c: 81:     return 0;
  1480  000DBC  0E00               	movlw	0
  1481  000DBE  0012               	return		;funcret
  1482  000DC0                     __end_of_IsInNeighbors:
  1483                           	opt callstack 0
  1484                           
  1485 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1486 ;; Defined at:
  1487 ;;		line 450 in file "FRAME.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  message         2   11[COMRAM] PTR struct .
  1490 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1491 ;;  nrRamki         2   13[COMRAM] unsigned short 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  i               2   29[COMRAM] unsigned short 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1503 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1506 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1507 ;;Total ram usage:       20 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    4
  1510 ;; This function calls:
  1511 ;;		___wmul
  1512 ;; This function is called by:
  1513 ;;		_FRAME_HandleCanFrame
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text12
  1518  0002DC                     __ptext12:
  1519                           	opt callstack 0
  1520  0002DC                     _FRAME_AdressOfNeighbors:
  1521                           	opt callstack 24
  1522                           
  1523                           ;FRAME.c: 450: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          451: {;FRAME.c: 452:     WORD i;;FRAME.c: 456:     if(message->message_type == 0x02)
  1524                           
  1525                           ;incstack = 0
  1526  0002DC  EE20 F001          	lfsr	2,1
  1527  0002E0  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1528  0002E2  26D9               	addwf	fsr2l,f,c
  1529  0002E4  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1530  0002E6  22DA               	addwfc	fsr2h,f,c
  1531  0002E8  0E02               	movlw	2
  1532  0002EA  18DE               	xorwf	postinc2,w,c
  1533  0002EC  A4D8               	btfss	status,2,c
  1534  0002EE  D07F               	goto	l2541
  1535                           
  1536                           ;FRAME.c: 457:     {;FRAME.c: 459:         message->data_length = 8;
  1537  0002F0  EE20 F010          	lfsr	2,16
  1538  0002F4  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1539  0002F6  26D9               	addwf	fsr2l,f,c
  1540  0002F8  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1541  0002FA  22DA               	addwfc	fsr2h,f,c
  1542  0002FC  0E08               	movlw	8
  1543  0002FE  6EDF               	movwf	indf2,c
  1544                           
  1545                           ;FRAME.c: 460:         for(i=0; i<4; i++)
  1546  000300  0E00               	movlw	0
  1547  000302  6E1F               	movwf	FRAME_AdressOfNeighbors@i+1,c
  1548  000304  0E00               	movlw	0
  1549  000306  6E1E               	movwf	FRAME_AdressOfNeighbors@i,c
  1550  000308                     l2535:
  1551                           
  1552                           ;FRAME.c: 461:         {;FRAME.c: 462:             message->data[2*i] = (BYTE)(Dane->sas
      +                          iedzi[i+(4*nrRamki)].adres >> 8);
  1553  000308  C01E  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  1554  00030C  C01F  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  1555  000310  90D8               	bcf	status,0,c
  1556  000312  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1557  000314  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1558  000316  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  1559  00031A  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  1560  00031E  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  1561  000320  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1562  000322  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1563  000324  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1564  000326  0E08               	movlw	8
  1565  000328  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  1566  00032A  6ED9               	movwf	fsr2l,c
  1567  00032C  0E00               	movlw	0
  1568  00032E  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  1569  000330  6EDA               	movwf	fsr2h,c
  1570  000332  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  1571  000336  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  1572  00033A  90D8               	bcf	status,0,c
  1573  00033C  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1574  00033E  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1575  000340  90D8               	bcf	status,0,c
  1576  000342  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1577  000344  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1578  000346  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  1579  000348  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1580  00034A  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1581  00034C  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1582  00034E  90D8               	bcf	status,0,c
  1583  000350  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1584  000352  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1585  000354  90D8               	bcf	status,0,c
  1586  000356  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1587  000358  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1588  00035A  0E0E               	movlw	14
  1589  00035C  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1590  00035E  6EE1               	movwf	fsr1l,c
  1591  000360  0E00               	movlw	0
  1592  000362  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1593  000364  6EE2               	movwf	fsr1h,c
  1594  000366  CFE6 F016          	movff	postinc1,??_FRAME_AdressOfNeighbors+6
  1595  00036A  CFE5 F017          	movff	postdec1,??_FRAME_AdressOfNeighbors+7
  1596  00036E  C017  F016         	movff	??_FRAME_AdressOfNeighbors+7,??_FRAME_AdressOfNeighbors+6
  1597  000372  6A17               	clrf	??_FRAME_AdressOfNeighbors+7,c
  1598  000374  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  1599  000376  6EDF               	movwf	indf2,c
  1600                           
  1601                           ;FRAME.c: 463:             message->data[(2*i)+1] = (BYTE)Dane->sasiedzi[i+(4*nrRamki)].
      +                          adres;
  1602  000378  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  1603  00037C  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  1604  000380  90D8               	bcf	status,0,c
  1605  000382  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1606  000384  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1607  000386  90D8               	bcf	status,0,c
  1608  000388  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1609  00038A  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1610  00038C  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  1611  00038E  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  1612  000390  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1613  000392  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  1614  000394  90D8               	bcf	status,0,c
  1615  000396  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1616  000398  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1617  00039A  90D8               	bcf	status,0,c
  1618  00039C  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1619  00039E  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1620  0003A0  0E0E               	movlw	14
  1621  0003A2  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  1622  0003A4  6ED9               	movwf	fsr2l,c
  1623  0003A6  0E00               	movlw	0
  1624  0003A8  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  1625  0003AA  6EDA               	movwf	fsr2h,c
  1626  0003AC  C01E  F012         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+2
  1627  0003B0  C01F  F013         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+3
  1628  0003B4  90D8               	bcf	status,0,c
  1629  0003B6  3612               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  1630  0003B8  3613               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  1631  0003BA  C00C  F014         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  1632  0003BE  C00D  F015         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  1633  0003C2  5012               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  1634  0003C4  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1635  0003C6  5013               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  1636  0003C8  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1637  0003CA  0E09               	movlw	9
  1638  0003CC  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1639  0003CE  6EE1               	movwf	fsr1l,c
  1640  0003D0  0E00               	movlw	0
  1641  0003D2  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1642  0003D4  6EE2               	movwf	fsr1h,c
  1643  0003D6  CFDF FFE7          	movff	indf2,indf1
  1644                           
  1645                           ;FRAME.c: 464:         }
  1646  0003DA  4A1E               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  1647  0003DC  2A1F               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  1648  0003DE  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1649  0003E0  E105               	bnz	u1090
  1650  0003E2  0E04               	movlw	4
  1651  0003E4  5C1E               	subwf	FRAME_AdressOfNeighbors@i,w,c
  1652  0003E6  B0D8               	btfsc	status,0,c
  1653  0003E8  0012               	return	
  1654  0003EA  D78E               	goto	l2535
  1655  0003EC                     u1090:
  1656  0003EC  0012               	return	
  1657  0003EE                     l2541:
  1658                           
  1659                           ;FRAME.c: 468:     {;FRAME.c: 470:         for(i=0; i<4; i++)
  1660  0003EE  0E00               	movlw	0
  1661  0003F0  6E1F               	movwf	FRAME_AdressOfNeighbors@i+1,c
  1662  0003F2  0E00               	movlw	0
  1663  0003F4  6E1E               	movwf	FRAME_AdressOfNeighbors@i,c
  1664  0003F6                     l2547:
  1665                           
  1666                           ;FRAME.c: 471:         {;FRAME.c: 472:             Dane->sasiedzi[i+(4*nrRamki)].adres =
      +                           ((WORD)message->data[2*i] << 8) |
  1667  0003F6  C01E  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  1668  0003FA  C01F  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  1669  0003FE  90D8               	bcf	status,0,c
  1670  000400  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1671  000402  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1672  000404  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  1673  000408  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  1674  00040C  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  1675  00040E  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1676  000410  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1677  000412  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1678  000414  0E08               	movlw	8
  1679  000416  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  1680  000418  6ED9               	movwf	fsr2l,c
  1681  00041A  0E00               	movlw	0
  1682  00041C  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  1683  00041E  6EDA               	movwf	fsr2h,c
  1684  000420  50DF               	movf	indf2,w,c
  1685  000422  6E14               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  1686  000424  5014               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  1687  000426  6E16               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  1688  000428  6A15               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  1689  00042A  C01E  F017         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+7
  1690  00042E  C01F  F018         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+8
  1691  000432  90D8               	bcf	status,0,c
  1692  000434  3617               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  1693  000436  3618               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  1694  000438  C00C  F019         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  1695  00043C  C00D  F01A         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  1696  000440  5017               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  1697  000442  2619               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  1698  000444  5018               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  1699  000446  221A               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  1700  000448  0E09               	movlw	9
  1701  00044A  2419               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  1702  00044C  6ED9               	movwf	fsr2l,c
  1703  00044E  0E00               	movlw	0
  1704  000450  201A               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  1705  000452  6EDA               	movwf	fsr2h,c
  1706  000454  50DF               	movf	indf2,w,c
  1707  000456  6E1B               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  1708  000458  501B               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  1709  00045A  1215               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  1710  00045C  0E00               	movlw	0
  1711  00045E  1216               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  1712  000460  C00E  F01C         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+12
  1713  000464  C00F  F01D         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+13
  1714  000468  90D8               	bcf	status,0,c
  1715  00046A  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1716  00046C  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  1717  00046E  90D8               	bcf	status,0,c
  1718  000470  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1719  000472  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  1720  000474  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  1721  000476  261C               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  1722  000478  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1723  00047A  221D               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  1724  00047C  90D8               	bcf	status,0,c
  1725  00047E  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1726  000480  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  1727  000482  90D8               	bcf	status,0,c
  1728  000484  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1729  000486  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  1730  000488  0E0E               	movlw	14
  1731  00048A  241C               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  1732  00048C  6ED9               	movwf	fsr2l,c
  1733  00048E  0E00               	movlw	0
  1734  000490  201D               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  1735  000492  6EDA               	movwf	fsr2h,c
  1736  000494  C015  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  1737  000498  C016  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  1738                           
  1739                           ;FRAME.c: 475:             Dane->sasiedzi[i+(4*nrRamki)].pointerNaSasiada = &wartosciSas
      +                          iada[i+(4*nrRamki)];
  1740  00049C  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  1741  0004A0  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  1742  0004A4  90D8               	bcf	status,0,c
  1743  0004A6  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1744  0004A8  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1745  0004AA  90D8               	bcf	status,0,c
  1746  0004AC  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1747  0004AE  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1748  0004B0  C010  F006         	movff	??_FRAME_AdressOfNeighbors,___wmul@multiplier
  1749  0004B4  C011  F007         	movff	??_FRAME_AdressOfNeighbors+1,___wmul@multiplier+1
  1750  0004B8  0E00               	movlw	0
  1751  0004BA  6E09               	movwf	___wmul@multiplicand+1,c
  1752  0004BC  0E44               	movlw	68
  1753  0004BE  6E08               	movwf	___wmul@multiplicand,c
  1754  0004C0  ECA6  F007         	call	___wmul	;wreg free
  1755  0004C4  0EC6               	movlw	low _wartosciSasiada
  1756  0004C6  6E12               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  1757  0004C8  0E00               	movlw	high _wartosciSasiada
  1758  0004CA  6E13               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  1759  0004CC  5006               	movf	?___wmul,w,c
  1760  0004CE  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1761  0004D0  5007               	movf	?___wmul+1,w,c
  1762  0004D2  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1763  0004D4  C01E  F006         	movff	FRAME_AdressOfNeighbors@i,___wmul@multiplier
  1764  0004D8  C01F  F007         	movff	FRAME_AdressOfNeighbors@i+1,___wmul@multiplier+1
  1765  0004DC  0E00               	movlw	0
  1766  0004DE  6E09               	movwf	___wmul@multiplicand+1,c
  1767  0004E0  0E44               	movlw	68
  1768  0004E2  6E08               	movwf	___wmul@multiplicand,c
  1769  0004E4  ECA6  F007         	call	___wmul	;wreg free
  1770  0004E8  5006               	movf	?___wmul,w,c
  1771  0004EA  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1772  0004EC  5007               	movf	?___wmul+1,w,c
  1773  0004EE  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1774  0004F0  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  1775  0004F4  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  1776  0004F8  90D8               	bcf	status,0,c
  1777  0004FA  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1778  0004FC  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1779  0004FE  90D8               	bcf	status,0,c
  1780  000500  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1781  000502  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1782  000504  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  1783  000506  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1784  000508  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1785  00050A  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1786  00050C  90D8               	bcf	status,0,c
  1787  00050E  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1788  000510  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1789  000512  90D8               	bcf	status,0,c
  1790  000514  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1791  000516  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1792  000518  0E10               	movlw	16
  1793  00051A  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1794  00051C  6ED9               	movwf	fsr2l,c
  1795  00051E  0E00               	movlw	0
  1796  000520  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1797  000522  6EDA               	movwf	fsr2h,c
  1798  000524  C012  FFDE         	movff	??_FRAME_AdressOfNeighbors+2,postinc2
  1799  000528  C013  FFDD         	movff	??_FRAME_AdressOfNeighbors+3,postdec2
  1800                           
  1801                           ;FRAME.c: 476:         }
  1802  00052C  4A1E               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  1803  00052E  2A1F               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  1804  000530  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1805  000532  E105               	bnz	u1100
  1806  000534  0E04               	movlw	4
  1807  000536  5C1E               	subwf	FRAME_AdressOfNeighbors@i,w,c
  1808  000538  B0D8               	btfsc	status,0,c
  1809  00053A  0012               	return	
  1810  00053C  D75C               	goto	l2547
  1811  00053E                     u1100:
  1812  00053E  0012               	return		;funcret
  1813  000540                     __end_of_FRAME_AdressOfNeighbors:
  1814                           	opt callstack 0
  1815                           
  1816 ;; *************** function ___wmul *****************
  1817 ;; Defined at:
  1818 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  multiplier      2    5[COMRAM] unsigned int 
  1821 ;;  multiplicand    2    7[COMRAM] unsigned int 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  product         2    9[COMRAM] unsigned int 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  2    5[COMRAM] unsigned int 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0, prodl, prodh
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1836 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;Total ram usage:        6 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    3
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_IsInNeighbors
  1844 ;;		_FRAME_AdressOfNeighbors
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text13
  1849  000F4C                     __ptext13:
  1850                           	opt callstack 0
  1851  000F4C                     ___wmul:
  1852                           	opt callstack 24
  1853                           
  1854                           ;incstack = 0
  1855  000F4C  5006               	movf	___wmul@multiplier,w,c
  1856  000F4E  0208               	mulwf	___wmul@multiplicand,c
  1857  000F50  CFF3 F00A          	movff	prodl,___wmul@product
  1858  000F54  CFF4 F00B          	movff	prodh,___wmul@product+1
  1859  000F58  5006               	movf	___wmul@multiplier,w,c
  1860  000F5A  0209               	mulwf	___wmul@multiplicand+1,c
  1861  000F5C  50F3               	movf	prodl,w,c
  1862  000F5E  260B               	addwf	___wmul@product+1,f,c
  1863  000F60  5007               	movf	___wmul@multiplier+1,w,c
  1864  000F62  0208               	mulwf	___wmul@multiplicand,c
  1865  000F64  50F3               	movf	prodl,w,c
  1866  000F66  260B               	addwf	___wmul@product+1,f,c
  1867  000F68  C00A  F006         	movff	___wmul@product,?___wmul
  1868  000F6C  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  1869  000F70  0012               	return		;funcret
  1870  000F72                     __end_of___wmul:
  1871                           	opt callstack 0
  1872                           
  1873 ;; *************** function _CAN_SendFrame *****************
  1874 ;; Defined at:
  1875 ;;		line 183 in file "CAN.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  message         2   10[COMRAM] PTR struct .
  1878 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;Total ram usage:        5 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    4
  1897 ;; This function calls:
  1898 ;;		_CAN_MoveBuffIntoFrame
  1899 ;; This function is called by:
  1900 ;;		_FRAME_HandleCanFrame
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text14
  1905  000540                     __ptext14:
  1906                           	opt callstack 0
  1907  000540                     _CAN_SendFrame:
  1908                           	opt callstack 24
  1909                           
  1910                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  1911                           
  1912                           ;incstack = 0
  1913                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  1914  000540  0E83               	movlw	131
  1915  000542  6E77               	movwf	3959,c	;volatile
  1916                           
  1917                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  1918  000544  A660               	btfss	3936,3,c	;volatile
  1919  000546  D00A               	goto	l179
  1920                           
  1921                           ;CAN.c: 195:         ECANCON = 0x84;
  1922  000548  0E84               	movlw	132
  1923  00054A  6E77               	movwf	3959,c	;volatile
  1924                           
  1925                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  1926  00054C  A660               	btfss	3936,3,c	;volatile
  1927  00054E  D006               	goto	l179
  1928                           
  1929                           ;CAN.c: 201:         ECANCON = 0x85;
  1930  000550  0E85               	movlw	133
  1931  000552  6E77               	movwf	3959,c	;volatile
  1932                           
  1933                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  1934  000554  A660               	btfss	3936,3,c	;volatile
  1935  000556  D002               	goto	l179
  1936  000558  D7F3               	goto	_CAN_SendFrame
  1937  00055A                     l180:
  1938  00055A  00FF               	reset		;# 
  1939  00055C                     l179:
  1940                           
  1941                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  1942  00055C  B474               	btfsc	3956,2,c	;volatile
  1943  00055E  D7FD               	goto	l180
  1944                           
  1945                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  1946  000560  0E00               	movlw	0
  1947  000562  6E41               	movwf	_DetectorLedRadar+2,c
  1948                           
  1949                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  1950  000564  EE20 F004          	lfsr	2,4
  1951  000568  500B               	movf	CAN_SendFrame@message,w,c
  1952  00056A  26D9               	addwf	fsr2l,f,c
  1953  00056C  500C               	movf	CAN_SendFrame@message+1,w,c
  1954  00056E  22DA               	addwfc	fsr2h,f,c
  1955  000570  50DF               	movf	indf2,w,c
  1956  000572  6E64               	movwf	3940,c	;volatile
  1957                           
  1958                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  1959  000574  EE20 F005          	lfsr	2,5
  1960  000578  500B               	movf	CAN_SendFrame@message,w,c
  1961  00057A  26D9               	addwf	fsr2l,f,c
  1962  00057C  500C               	movf	CAN_SendFrame@message+1,w,c
  1963  00057E  22DA               	addwfc	fsr2h,f,c
  1964  000580  50DF               	movf	indf2,w,c
  1965  000582  6E63               	movwf	3939,c	;volatile
  1966                           
  1967                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  1968  000584  EE20 F006          	lfsr	2,6
  1969  000588  500B               	movf	CAN_SendFrame@message,w,c
  1970  00058A  26D9               	addwf	fsr2l,f,c
  1971  00058C  500C               	movf	CAN_SendFrame@message+1,w,c
  1972  00058E  22DA               	addwfc	fsr2h,f,c
  1973  000590  50DF               	movf	indf2,w,c
  1974  000592  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  1975  000594  0E03               	movlw	3
  1976  000596  160D               	andwf	??_CAN_SendFrame,f,c
  1977  000598  EE20 F006          	lfsr	2,6
  1978  00059C  500B               	movf	CAN_SendFrame@message,w,c
  1979  00059E  26D9               	addwf	fsr2l,f,c
  1980  0005A0  500C               	movf	CAN_SendFrame@message+1,w,c
  1981  0005A2  22DA               	addwfc	fsr2h,f,c
  1982  0005A4  50DF               	movf	indf2,w,c
  1983  0005A6  0BFC               	andlw	252
  1984  0005A8  0D08               	mullw	8
  1985  0005AA  50F3               	movf	prodl,w,c
  1986  0005AC  100D               	iorwf	??_CAN_SendFrame,w,c
  1987  0005AE  6E62               	movwf	3938,c	;volatile
  1988                           
  1989                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  1990  0005B0  8662               	bsf	3938,3,c	;volatile
  1991                           
  1992                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  1993  0005B2  EE20 F006          	lfsr	2,6
  1994  0005B6  500B               	movf	CAN_SendFrame@message,w,c
  1995  0005B8  26D9               	addwf	fsr2l,f,c
  1996  0005BA  500C               	movf	CAN_SendFrame@message+1,w,c
  1997  0005BC  22DA               	addwfc	fsr2h,f,c
  1998  0005BE  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  1999  0005C2  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2000  0005C6  0E05               	movlw	5
  2001  0005C8  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2002  0005CA                     u1025:
  2003  0005CA  90D8               	bcf	status,0,c
  2004  0005CC  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2005  0005CE  320D               	rrcf	??_CAN_SendFrame,f,c
  2006  0005D0  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2007  0005D2  D7FB               	goto	u1025
  2008  0005D4  500D               	movf	??_CAN_SendFrame,w,c
  2009  0005D6  6E61               	movwf	3937,c	;volatile
  2010                           
  2011                           ;CAN.c: 220:     RXB0DLC = 0;
  2012  0005D8  0E00               	movlw	0
  2013  0005DA  6E65               	movwf	3941,c	;volatile
  2014                           
  2015                           ;CAN.c: 222:     if(message->message_type==0x02)
  2016  0005DC  EE20 F001          	lfsr	2,1
  2017  0005E0  500B               	movf	CAN_SendFrame@message,w,c
  2018  0005E2  26D9               	addwf	fsr2l,f,c
  2019  0005E4  500C               	movf	CAN_SendFrame@message+1,w,c
  2020  0005E6  22DA               	addwfc	fsr2h,f,c
  2021  0005E8  0E02               	movlw	2
  2022  0005EA  18DE               	xorwf	postinc2,w,c
  2023  0005EC  A4D8               	btfss	status,2,c
  2024  0005EE  D002               	goto	l2459
  2025                           
  2026                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2027  0005F0  8C65               	bsf	3941,6,c	;volatile
  2028                           
  2029                           ;CAN.c: 225:     }
  2030  0005F2  D05A               	goto	l2463
  2031  0005F4                     l2459:
  2032                           
  2033                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2034  0005F4  EE20 F010          	lfsr	2,16
  2035  0005F8  500B               	movf	CAN_SendFrame@message,w,c
  2036  0005FA  26D9               	addwf	fsr2l,f,c
  2037  0005FC  500C               	movf	CAN_SendFrame@message+1,w,c
  2038  0005FE  22DA               	addwfc	fsr2h,f,c
  2039  000600  50DF               	movf	indf2,w,c
  2040  000602  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2041  000604  0E0F               	movlw	15
  2042  000606  160D               	andwf	??_CAN_SendFrame,f,c
  2043  000608  5065               	movf	3941,w,c	;volatile
  2044  00060A  180D               	xorwf	??_CAN_SendFrame,w,c
  2045  00060C  0BFE               	andlw	-2
  2046  00060E  180D               	xorwf	??_CAN_SendFrame,w,c
  2047  000610  6E65               	movwf	3941,c	;volatile
  2048                           
  2049                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2050  000612  EE20 F010          	lfsr	2,16
  2051  000616  500B               	movf	CAN_SendFrame@message,w,c
  2052  000618  26D9               	addwf	fsr2l,f,c
  2053  00061A  500C               	movf	CAN_SendFrame@message+1,w,c
  2054  00061C  22DA               	addwfc	fsr2h,f,c
  2055  00061E  50DF               	movf	indf2,w,c
  2056  000620  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2057  000622  90D8               	bcf	status,0,c
  2058  000624  320D               	rrcf	??_CAN_SendFrame,f,c
  2059  000626  0E07               	movlw	7
  2060  000628  160D               	andwf	??_CAN_SendFrame,f,c
  2061  00062A  460D               	rlncf	??_CAN_SendFrame,f,c
  2062  00062C  5065               	movf	3941,w,c	;volatile
  2063  00062E  180D               	xorwf	??_CAN_SendFrame,w,c
  2064  000630  0BFD               	andlw	-3
  2065  000632  180D               	xorwf	??_CAN_SendFrame,w,c
  2066  000634  6E65               	movwf	3941,c	;volatile
  2067                           
  2068                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2069  000636  EE20 F010          	lfsr	2,16
  2070  00063A  500B               	movf	CAN_SendFrame@message,w,c
  2071  00063C  26D9               	addwf	fsr2l,f,c
  2072  00063E  500C               	movf	CAN_SendFrame@message+1,w,c
  2073  000640  22DA               	addwfc	fsr2h,f,c
  2074  000642  50DF               	movf	indf2,w,c
  2075  000644  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2076  000646  90D8               	bcf	status,0,c
  2077  000648  320D               	rrcf	??_CAN_SendFrame,f,c
  2078  00064A  90D8               	bcf	status,0,c
  2079  00064C  320D               	rrcf	??_CAN_SendFrame,f,c
  2080  00064E  0E03               	movlw	3
  2081  000650  160D               	andwf	??_CAN_SendFrame,f,c
  2082  000652  460D               	rlncf	??_CAN_SendFrame,f,c
  2083  000654  460D               	rlncf	??_CAN_SendFrame,f,c
  2084  000656  5065               	movf	3941,w,c	;volatile
  2085  000658  180D               	xorwf	??_CAN_SendFrame,w,c
  2086  00065A  0BFB               	andlw	-5
  2087  00065C  180D               	xorwf	??_CAN_SendFrame,w,c
  2088  00065E  6E65               	movwf	3941,c	;volatile
  2089                           
  2090                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2091  000660  EE20 F010          	lfsr	2,16
  2092  000664  500B               	movf	CAN_SendFrame@message,w,c
  2093  000666  26D9               	addwf	fsr2l,f,c
  2094  000668  500C               	movf	CAN_SendFrame@message+1,w,c
  2095  00066A  22DA               	addwfc	fsr2h,f,c
  2096  00066C  50DF               	movf	indf2,w,c
  2097  00066E  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2098  000670  90D8               	bcf	status,0,c
  2099  000672  320D               	rrcf	??_CAN_SendFrame,f,c
  2100  000674  90D8               	bcf	status,0,c
  2101  000676  320D               	rrcf	??_CAN_SendFrame,f,c
  2102  000678  90D8               	bcf	status,0,c
  2103  00067A  320D               	rrcf	??_CAN_SendFrame,f,c
  2104  00067C  0E01               	movlw	1
  2105  00067E  160D               	andwf	??_CAN_SendFrame,f,c
  2106  000680  460D               	rlncf	??_CAN_SendFrame,f,c
  2107  000682  460D               	rlncf	??_CAN_SendFrame,f,c
  2108  000684  460D               	rlncf	??_CAN_SendFrame,f,c
  2109  000686  5065               	movf	3941,w,c	;volatile
  2110  000688  180D               	xorwf	??_CAN_SendFrame,w,c
  2111  00068A  0BF7               	andlw	-9
  2112  00068C  180D               	xorwf	??_CAN_SendFrame,w,c
  2113  00068E  6E65               	movwf	3941,c	;volatile
  2114                           
  2115                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2116  000690  0E66               	movlw	102
  2117  000692  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2118  000694  0E0F               	movlw	15
  2119  000696  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2120  000698  0E08               	movlw	8
  2121  00069A  240B               	addwf	CAN_SendFrame@message,w,c
  2122  00069C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2123  00069E  0E00               	movlw	0
  2124  0006A0  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2125  0006A2  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2126  0006A4  EC7D  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2127  0006A8                     l2463:
  2128                           
  2129                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2130  0006A8  8660               	bsf	3936,3,c	;volatile
  2131                           
  2132                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2133  0006AA  883F               	bsf	_DetectorLedRadar,4,c
  2134  0006AC  0012               	return		;funcret
  2135  0006AE                     __end_of_CAN_SendFrame:
  2136                           	opt callstack 0
  2137                           
  2138 ;; *************** function _CAN_GenID *****************
  2139 ;; Defined at:
  2140 ;;		line 382 in file "CAN.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  message         2    5[COMRAM] PTR struct .
  2143 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2144 ;;  frameID         1    7[COMRAM] unsigned char 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2156 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;Total ram usage:        7 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    3
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_FRAME_HandleCanFrame
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text15
  2171  000A74                     __ptext15:
  2172                           	opt callstack 0
  2173  000A74                     _CAN_GenID:
  2174                           	opt callstack 25
  2175                           
  2176                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2177                           
  2178                           ;incstack = 0
  2179  000A74  EE20 F002          	lfsr	2,2
  2180  000A78  5006               	movf	CAN_GenID@message,w,c
  2181  000A7A  26D9               	addwf	fsr2l,f,c
  2182  000A7C  5007               	movf	CAN_GenID@message+1,w,c
  2183  000A7E  22DA               	addwfc	fsr2h,f,c
  2184  000A80  0E03               	movlw	3
  2185  000A82  6EDF               	movwf	indf2,c
  2186                           
  2187                           ;CAN.c: 386:     message->message_type = 0x01;
  2188  000A84  EE20 F001          	lfsr	2,1
  2189  000A88  5006               	movf	CAN_GenID@message,w,c
  2190  000A8A  26D9               	addwf	fsr2l,f,c
  2191  000A8C  5007               	movf	CAN_GenID@message+1,w,c
  2192  000A8E  22DA               	addwfc	fsr2h,f,c
  2193  000A90  0E01               	movlw	1
  2194  000A92  6EDF               	movwf	indf2,c
  2195                           
  2196                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2197  000A94  5008               	movf	CAN_GenID@frameID,w,c
  2198  000A96  6E09               	movwf	??_CAN_GenID& (0+255),c
  2199  000A98  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2200  000A9A  90D8               	bcf	status,0,c
  2201  000A9C  3609               	rlcf	??_CAN_GenID,f,c
  2202  000A9E  360A               	rlcf	??_CAN_GenID+1,f,c
  2203  000AA0  90D8               	bcf	status,0,c
  2204  000AA2  3609               	rlcf	??_CAN_GenID,f,c
  2205  000AA4  360A               	rlcf	??_CAN_GenID+1,f,c
  2206  000AA6  EE20 F006          	lfsr	2,6
  2207  000AAA  5006               	movf	CAN_GenID@message,w,c
  2208  000AAC  26D9               	addwf	fsr2l,f,c
  2209  000AAE  5007               	movf	CAN_GenID@message+1,w,c
  2210  000AB0  22DA               	addwfc	fsr2h,f,c
  2211  000AB2  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2212  000AB6  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2213                           
  2214                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  2215  000ABA  0E2C               	movlw	44
  2216  000ABC  6E09               	movwf	??_CAN_GenID& (0+255),c
  2217  000ABE  0E01               	movlw	1
  2218  000AC0  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  2219  000AC2  EE20  F03D         	lfsr	2,_DaneCan+2
  2220  000AC6  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  2221  000ACA  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  2222  000ACE  5009               	movf	??_CAN_GenID,w,c
  2223  000AD0  260B               	addwf	??_CAN_GenID+2,f,c
  2224  000AD2  500A               	movf	??_CAN_GenID+1,w,c
  2225  000AD4  220C               	addwfc	??_CAN_GenID+3,f,c
  2226  000AD6  EE20 F004          	lfsr	2,4
  2227  000ADA  5006               	movf	CAN_GenID@message,w,c
  2228  000ADC  26D9               	addwf	fsr2l,f,c
  2229  000ADE  5007               	movf	CAN_GenID@message+1,w,c
  2230  000AE0  22DA               	addwfc	fsr2h,f,c
  2231  000AE2  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  2232  000AE6  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  2233                           
  2234                           ;CAN.c: 391:     message ->id.bits.b16 = 0;
  2235  000AEA  EE20 F006          	lfsr	2,6
  2236  000AEE  5006               	movf	CAN_GenID@message,w,c
  2237  000AF0  26D9               	addwf	fsr2l,f,c
  2238  000AF2  5007               	movf	CAN_GenID@message+1,w,c
  2239  000AF4  22DA               	addwfc	fsr2h,f,c
  2240  000AF6  90DF               	bcf	indf2,0,c
  2241                           
  2242                           ;CAN.c: 392:     message ->id.bits.b17 = 0;
  2243  000AF8  EE20 F006          	lfsr	2,6
  2244  000AFC  5006               	movf	CAN_GenID@message,w,c
  2245  000AFE  26D9               	addwf	fsr2l,f,c
  2246  000B00  5007               	movf	CAN_GenID@message+1,w,c
  2247  000B02  22DA               	addwfc	fsr2h,f,c
  2248  000B04  92DF               	bcf	indf2,1,c
  2249  000B06  0012               	return		;funcret
  2250  000B08                     __end_of_CAN_GenID:
  2251                           	opt callstack 0
  2252                           
  2253 ;; *************** function _CAN_TakeFrame *****************
  2254 ;; Defined at:
  2255 ;;		line 247 in file "CAN.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  message         2   13[COMRAM] PTR struct .
  2258 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  k               1   18[COMRAM] unsigned char 
  2261 ;;  tempCON         1   17[COMRAM] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      enum E10433
  2264 ;; Registers used:
  2265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;Total ram usage:        6 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    4
  2278 ;; This function calls:
  2279 ;;		_CAN_MoveBuffIntoFrame
  2280 ;;		___awdiv
  2281 ;; This function is called by:
  2282 ;;		_TRM_DataTransmition
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text16
  2287  000060                     __ptext16:
  2288                           	opt callstack 0
  2289  000060                     _CAN_TakeFrame:
  2290                           	opt callstack 25
  2291                           
  2292                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2293                           
  2294                           ;incstack = 0
  2295  000060  506F               	movf	3951,w,c	;volatile
  2296  000062  0B0F               	andlw	15
  2297  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2298                           
  2299                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2300  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2301  000068  0990               	iorlw	144
  2302  00006A  6E77               	movwf	3959,c	;volatile
  2303                           
  2304                           ;CAN.c: 256:     switch(k)
  2305  00006C  D018               	goto	l2643
  2306  00006E                     l188:
  2307                           
  2308                           ;CAN.c: 259:             tempCON = RXB0CON;
  2309  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2310                           
  2311                           ;CAN.c: 260:             break;
  2312  000072  D035               	goto	l189
  2313  000074                     l190:
  2314                           
  2315                           ;CAN.c: 262:             tempCON = RXB1CON;
  2316  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2317                           
  2318                           ;CAN.c: 263:             break;
  2319  000078  D032               	goto	l189
  2320  00007A                     l191:
  2321                           
  2322                           ;CAN.c: 265:             tempCON = B0CON;
  2323  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2324                           
  2325                           ;CAN.c: 266:             break;
  2326  00007E  D02F               	goto	l189
  2327  000080                     l192:
  2328                           
  2329                           ;CAN.c: 268:             tempCON = B1CON;
  2330  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2331                           
  2332                           ;CAN.c: 269:             break;
  2333  000084  D02C               	goto	l189
  2334  000086                     l193:
  2335                           
  2336                           ;CAN.c: 271:             tempCON = B2CON;
  2337  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2338                           
  2339                           ;CAN.c: 272:             break;
  2340  00008A  D029               	goto	l189
  2341  00008C                     l194:
  2342                           
  2343                           ;CAN.c: 274:             tempCON = B3CON;
  2344  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2345                           
  2346                           ;CAN.c: 275:             break;
  2347  000090  D026               	goto	l189
  2348  000092                     l195:
  2349                           
  2350                           ;CAN.c: 277:             tempCON = B4CON;
  2351  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2352                           
  2353                           ;CAN.c: 278:             break;
  2354  000096  D023               	goto	l189
  2355  000098                     l196:
  2356                           
  2357                           ;CAN.c: 280:             tempCON = B5CON;
  2358  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2359                           
  2360                           ;CAN.c: 281:             break;
  2361  00009C  D020               	goto	l189
  2362  00009E                     l2643:
  2363  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2364  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2365  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2366                           
  2367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2368                           ; Switch size 1, requested type "simple"
  2369                           ; Number of cases is 1, Range of values is 0 to 0
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; simple_byte            4     3 (average)
  2373                           ;	Chosen strategy is simple_byte
  2374  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2375  0000A6  0A00               	xorlw	0	; case 0
  2376  0000A8  A4D8               	btfss	status,2,c
  2377  0000AA  D019               	goto	l189
  2378                           
  2379                           ; Switch size 1, requested type "simple"
  2380                           ; Number of cases is 8, Range of values is 0 to 7
  2381                           ; switch strategies available:
  2382                           ; Name         Instructions Cycles
  2383                           ; simple_byte           25    13 (average)
  2384                           ;	Chosen strategy is simple_byte
  2385  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2386  0000AE  0A00               	xorlw	0	; case 0
  2387  0000B0  B4D8               	btfsc	status,2,c
  2388  0000B2  D7DD               	goto	l188
  2389  0000B4  0A01               	xorlw	1	; case 1
  2390  0000B6  B4D8               	btfsc	status,2,c
  2391  0000B8  D7DD               	goto	l190
  2392  0000BA  0A03               	xorlw	3	; case 2
  2393  0000BC  B4D8               	btfsc	status,2,c
  2394  0000BE  D7DD               	goto	l191
  2395  0000C0  0A01               	xorlw	1	; case 3
  2396  0000C2  B4D8               	btfsc	status,2,c
  2397  0000C4  D7DD               	goto	l192
  2398  0000C6  0A07               	xorlw	7	; case 4
  2399  0000C8  B4D8               	btfsc	status,2,c
  2400  0000CA  D7DD               	goto	l193
  2401  0000CC  0A01               	xorlw	1	; case 5
  2402  0000CE  B4D8               	btfsc	status,2,c
  2403  0000D0  D7DD               	goto	l194
  2404  0000D2  0A03               	xorlw	3	; case 6
  2405  0000D4  B4D8               	btfsc	status,2,c
  2406  0000D6  D7DD               	goto	l195
  2407  0000D8  0A01               	xorlw	1	; case 7
  2408  0000DA  B4D8               	btfsc	status,2,c
  2409  0000DC  D7DD               	goto	l196
  2410  0000DE                     l189:
  2411                           
  2412                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2413  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2414  0000E0  D0A5               	goto	l2679
  2415                           
  2416                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2417  0000E2  EE20 F003          	lfsr	2,3
  2418  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2419  0000E8  26D9               	addwf	fsr2l,f,c
  2420  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2421  0000EC  22DA               	addwfc	fsr2h,f,c
  2422  0000EE  5060               	movf	3936,w,c	;volatile
  2423  0000F0  0B1F               	andlw	31
  2424  0000F2  6EDF               	movwf	indf2,c
  2425                           
  2426                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2427  0000F4  EE20 F004          	lfsr	2,4
  2428  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2429  0000FA  26D9               	addwf	fsr2l,f,c
  2430  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2431  0000FE  22DA               	addwfc	fsr2h,f,c
  2432  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2433                           
  2434                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2435  000104  EE20 F005          	lfsr	2,5
  2436  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2437  00010A  26D9               	addwf	fsr2l,f,c
  2438  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2439  00010E  22DA               	addwfc	fsr2h,f,c
  2440  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2441                           
  2442                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2443  000114  EE20 F006          	lfsr	2,6
  2444  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2445  00011A  26D9               	addwf	fsr2l,f,c
  2446  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2447  00011E  22DA               	addwfc	fsr2h,f,c
  2448  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2449  000124  0E03               	movlw	3
  2450  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2451  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2452  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2453  00012E  0E00               	movlw	0
  2454  000130  6E09               	movwf	___awdiv@divisor+1,c
  2455  000132  0E08               	movlw	8
  2456  000134  6E08               	movwf	___awdiv@divisor,c
  2457  000136  EC84  F005         	call	___awdiv	;wreg free
  2458  00013A  5006               	movf	?___awdiv,w,c
  2459  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2460  00013E  6EDF               	movwf	indf2,c
  2461                           
  2462                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2463  000140  5061               	movf	3937,w,c	;volatile
  2464  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2465  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2466  000146  0E05               	movlw	5
  2467  000148                     u1235:
  2468  000148  90D8               	bcf	status,0,c
  2469  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2470  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2471  00014E  2EE8               	decfsz	wreg,f,c
  2472  000150  D7FB               	goto	u1235
  2473  000152  EE20 F006          	lfsr	2,6
  2474  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2475  000158  26D9               	addwf	fsr2l,f,c
  2476  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2477  00015C  22DA               	addwfc	fsr2h,f,c
  2478  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2479  000160  12DE               	iorwf	postinc2,f,c
  2480  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2481  000164  12DD               	iorwf	postdec2,f,c
  2482                           
  2483                           ;CAN.c: 292:         message->frame_type=0x03;
  2484  000166  EE20 F002          	lfsr	2,2
  2485  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2486  00016C  26D9               	addwf	fsr2l,f,c
  2487  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2488  000170  22DA               	addwfc	fsr2h,f,c
  2489  000172  0E03               	movlw	3
  2490  000174  6EDF               	movwf	indf2,c
  2491                           
  2492                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2493  000176  BC65               	btfsc	3941,6,c	;volatile
  2494  000178  D068               	goto	l2685
  2495                           
  2496                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2497  00017A  EE20 F001          	lfsr	2,1
  2498  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2499  000180  26D9               	addwf	fsr2l,f,c
  2500  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2501  000184  22DA               	addwfc	fsr2h,f,c
  2502  000186  0E01               	movlw	1
  2503  000188  6EDF               	movwf	indf2,c
  2504                           
  2505                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2506  00018A  EE20 F010          	lfsr	2,16
  2507  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2508  000190  26D9               	addwf	fsr2l,f,c
  2509  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2510  000194  22DA               	addwfc	fsr2h,f,c
  2511  000196  5065               	movf	3941,w,c	;volatile
  2512  000198  0B0F               	andlw	15
  2513  00019A  6EDF               	movwf	indf2,c
  2514                           
  2515                           ;CAN.c: 300:             if(message->data_length > 8)
  2516  00019C  EE20 F010          	lfsr	2,16
  2517  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2518  0001A2  26D9               	addwf	fsr2l,f,c
  2519  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2520  0001A6  22DA               	addwfc	fsr2h,f,c
  2521  0001A8  0E08               	movlw	8
  2522  0001AA  64DF               	cpfsgt	indf2,c
  2523  0001AC  D041               	goto	l2683
  2524  0001AE  D01E               	goto	l2677
  2525  0001B0                     l2659:
  2526                           
  2527                           ;CAN.c: 306:                         RXB0CON = 0;
  2528  0001B0  0E00               	movlw	0
  2529  0001B2  6E60               	movwf	3936,c	;volatile
  2530                           
  2531                           ;CAN.c: 307:                         break;
  2532  0001B4  D03B               	goto	l2679
  2533  0001B6                     l2661:
  2534                           
  2535                           ;CAN.c: 309:                         RXB1CON = 0;
  2536  0001B6  0E00               	movlw	0
  2537  0001B8  010F               	movlb	15	; () banked
  2538  0001BA  D00E               	goto	L1
  2539  0001BC                     l2663:
  2540                           
  2541                           ;CAN.c: 312:                         B0CON = 0;
  2542  0001BC  0E00               	movlw	0
  2543  0001BE  010E               	movlb	14	; () banked
  2544  0001C0  6F20               	movwf	32,b	;volatile
  2545                           
  2546                           ;CAN.c: 313:                         break;
  2547  0001C2  D034               	goto	l2679
  2548  0001C4                     l2665:
  2549                           
  2550                           ;CAN.c: 315:                         B1CON = 0;
  2551  0001C4  0E00               	movlw	0
  2552  0001C6  010E               	movlb	14	; () banked
  2553  0001C8  6F30               	movwf	48,b	;volatile
  2554                           
  2555                           ;CAN.c: 316:                         break;
  2556  0001CA  D030               	goto	l2679
  2557  0001CC                     l2667:
  2558                           
  2559                           ;CAN.c: 318:                         B2CON = 0;
  2560  0001CC  0E00               	movlw	0
  2561  0001CE  010E               	movlb	14	; () banked
  2562  0001D0  6F40               	movwf	64,b	;volatile
  2563                           
  2564                           ;CAN.c: 319:                         break;
  2565  0001D2  D02C               	goto	l2679
  2566  0001D4                     l2669:
  2567                           
  2568                           ;CAN.c: 321:                         B3CON = 0;
  2569  0001D4  0E00               	movlw	0
  2570  0001D6  010E               	movlb	14	; () banked
  2571  0001D8                     L1:
  2572  0001D8  6F50               	movwf	80,b	;volatile
  2573                           
  2574                           ;CAN.c: 322:                         break;
  2575  0001DA  D028               	goto	l2679
  2576  0001DC                     l2671:
  2577                           
  2578                           ;CAN.c: 324:                         B4CON = 0;
  2579  0001DC  0E00               	movlw	0
  2580  0001DE  010E               	movlb	14	; () banked
  2581  0001E0  6F60               	movwf	96,b	;volatile
  2582                           
  2583                           ;CAN.c: 325:                         break;
  2584  0001E2  D024               	goto	l2679
  2585  0001E4                     l2673:
  2586                           
  2587                           ;CAN.c: 327:                         B5CON = 0;
  2588  0001E4  0E00               	movlw	0
  2589  0001E6  010E               	movlb	14	; () banked
  2590  0001E8  6F70               	movwf	112,b	;volatile
  2591                           
  2592                           ;CAN.c: 328:                         break;
  2593  0001EA  D020               	goto	l2679
  2594  0001EC                     l2677:
  2595  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2596  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2597  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2598                           
  2599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2600                           ; Switch size 1, requested type "simple"
  2601                           ; Number of cases is 1, Range of values is 0 to 0
  2602                           ; switch strategies available:
  2603                           ; Name         Instructions Cycles
  2604                           ; simple_byte            4     3 (average)
  2605                           ;	Chosen strategy is simple_byte
  2606  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2607  0001F4  0A00               	xorlw	0	; case 0
  2608  0001F6  A4D8               	btfss	status,2,c
  2609  0001F8  D019               	goto	l2679
  2610                           
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 8, Range of values is 0 to 7
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte           25    13 (average)
  2616                           ;	Chosen strategy is simple_byte
  2617  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2618  0001FC  0A00               	xorlw	0	; case 0
  2619  0001FE  B4D8               	btfsc	status,2,c
  2620  000200  D7D7               	goto	l2659
  2621  000202  0A01               	xorlw	1	; case 1
  2622  000204  B4D8               	btfsc	status,2,c
  2623  000206  D7D7               	goto	l2661
  2624  000208  0A03               	xorlw	3	; case 2
  2625  00020A  B4D8               	btfsc	status,2,c
  2626  00020C  D7D7               	goto	l2663
  2627  00020E  0A01               	xorlw	1	; case 3
  2628  000210  B4D8               	btfsc	status,2,c
  2629  000212  D7D8               	goto	l2665
  2630  000214  0A07               	xorlw	7	; case 4
  2631  000216  B4D8               	btfsc	status,2,c
  2632  000218  D7D9               	goto	l2667
  2633  00021A  0A01               	xorlw	1	; case 5
  2634  00021C  B4D8               	btfsc	status,2,c
  2635  00021E  D7DA               	goto	l2669
  2636  000220  0A03               	xorlw	3	; case 6
  2637  000222  B4D8               	btfsc	status,2,c
  2638  000224  D7DB               	goto	l2671
  2639  000226  0A01               	xorlw	1	; case 7
  2640  000228  B4D8               	btfsc	status,2,c
  2641  00022A  D7DC               	goto	l2673
  2642  00022C                     l2679:
  2643                           
  2644                           ;CAN.c: 330:                 return FALSE;
  2645  00022C  0E00               	movlw	0
  2646  00022E  0012               	return	
  2647  000230                     l2683:
  2648                           
  2649                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2650  000230  0E08               	movlw	8
  2651  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  2652  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2653  000236  0E00               	movlw	0
  2654  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2655  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2656  00023C  0E66               	movlw	102
  2657  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2658  000240  0E0F               	movlw	15
  2659  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2660  000244  EC7D  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2661                           
  2662                           ;CAN.c: 333:         }
  2663  000248  D027               	goto	l2705
  2664  00024A                     l2685:
  2665                           
  2666                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  2667  00024A  EE20 F001          	lfsr	2,1
  2668  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  2669  000250  26D9               	addwf	fsr2l,f,c
  2670  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  2671  000254  22DA               	addwfc	fsr2h,f,c
  2672  000256  0E02               	movlw	2
  2673  000258  6EDF               	movwf	indf2,c
  2674  00025A  D01E               	goto	l2705
  2675  00025C                     l2687:
  2676                           
  2677                           ;CAN.c: 343:                 RXB0CON = 0;
  2678  00025C  0E00               	movlw	0
  2679  00025E  6E60               	movwf	3936,c	;volatile
  2680                           
  2681                           ;CAN.c: 344:                 break;
  2682  000260  D03B               	goto	l2707
  2683  000262                     l2689:
  2684                           
  2685                           ;CAN.c: 346:                 RXB1CON = 0;
  2686  000262  0E00               	movlw	0
  2687  000264  010F               	movlb	15	; () banked
  2688  000266  D00E               	goto	L2
  2689  000268                     l2691:
  2690                           
  2691                           ;CAN.c: 349:                 B0CON = 0;
  2692  000268  0E00               	movlw	0
  2693  00026A  010E               	movlb	14	; () banked
  2694  00026C  6F20               	movwf	32,b	;volatile
  2695                           
  2696                           ;CAN.c: 350:                 break;
  2697  00026E  D034               	goto	l2707
  2698  000270                     l2693:
  2699                           
  2700                           ;CAN.c: 352:                 B1CON = 0;
  2701  000270  0E00               	movlw	0
  2702  000272  010E               	movlb	14	; () banked
  2703  000274  6F30               	movwf	48,b	;volatile
  2704                           
  2705                           ;CAN.c: 353:                 break;
  2706  000276  D030               	goto	l2707
  2707  000278                     l2695:
  2708                           
  2709                           ;CAN.c: 355:                 B2CON = 0;
  2710  000278  0E00               	movlw	0
  2711  00027A  010E               	movlb	14	; () banked
  2712  00027C  6F40               	movwf	64,b	;volatile
  2713                           
  2714                           ;CAN.c: 356:                 break;
  2715  00027E  D02C               	goto	l2707
  2716  000280                     l2697:
  2717                           
  2718                           ;CAN.c: 358:                 B3CON = 0;
  2719  000280  0E00               	movlw	0
  2720  000282  010E               	movlb	14	; () banked
  2721  000284                     L2:
  2722  000284  6F50               	movwf	80,b	;volatile
  2723                           
  2724                           ;CAN.c: 359:                 break;
  2725  000286  D028               	goto	l2707
  2726  000288                     l2699:
  2727                           
  2728                           ;CAN.c: 361:                 B4CON = 0;
  2729  000288  0E00               	movlw	0
  2730  00028A  010E               	movlb	14	; () banked
  2731  00028C  6F60               	movwf	96,b	;volatile
  2732                           
  2733                           ;CAN.c: 362:                 break;
  2734  00028E  D024               	goto	l2707
  2735  000290                     l2701:
  2736                           
  2737                           ;CAN.c: 364:                 B5CON = 0;
  2738  000290  0E00               	movlw	0
  2739  000292  010E               	movlb	14	; () banked
  2740  000294  6F70               	movwf	112,b	;volatile
  2741                           
  2742                           ;CAN.c: 365:                 break;
  2743  000296  D020               	goto	l2707
  2744  000298                     l2705:
  2745  000298  5013               	movf	CAN_TakeFrame@k,w,c
  2746  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2747  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2748                           
  2749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2750                           ; Switch size 1, requested type "simple"
  2751                           ; Number of cases is 1, Range of values is 0 to 0
  2752                           ; switch strategies available:
  2753                           ; Name         Instructions Cycles
  2754                           ; simple_byte            4     3 (average)
  2755                           ;	Chosen strategy is simple_byte
  2756  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  2757  0002A0  0A00               	xorlw	0	; case 0
  2758  0002A2  A4D8               	btfss	status,2,c
  2759  0002A4  D019               	goto	l2707
  2760                           
  2761                           ; Switch size 1, requested type "simple"
  2762                           ; Number of cases is 8, Range of values is 0 to 7
  2763                           ; switch strategies available:
  2764                           ; Name         Instructions Cycles
  2765                           ; simple_byte           25    13 (average)
  2766                           ;	Chosen strategy is simple_byte
  2767  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  2768  0002A8  0A00               	xorlw	0	; case 0
  2769  0002AA  B4D8               	btfsc	status,2,c
  2770  0002AC  D7D7               	goto	l2687
  2771  0002AE  0A01               	xorlw	1	; case 1
  2772  0002B0  B4D8               	btfsc	status,2,c
  2773  0002B2  D7D7               	goto	l2689
  2774  0002B4  0A03               	xorlw	3	; case 2
  2775  0002B6  B4D8               	btfsc	status,2,c
  2776  0002B8  D7D7               	goto	l2691
  2777  0002BA  0A01               	xorlw	1	; case 3
  2778  0002BC  B4D8               	btfsc	status,2,c
  2779  0002BE  D7D8               	goto	l2693
  2780  0002C0  0A07               	xorlw	7	; case 4
  2781  0002C2  B4D8               	btfsc	status,2,c
  2782  0002C4  D7D9               	goto	l2695
  2783  0002C6  0A01               	xorlw	1	; case 5
  2784  0002C8  B4D8               	btfsc	status,2,c
  2785  0002CA  D7DA               	goto	l2697
  2786  0002CC  0A03               	xorlw	3	; case 6
  2787  0002CE  B4D8               	btfsc	status,2,c
  2788  0002D0  D7DB               	goto	l2699
  2789  0002D2  0A01               	xorlw	1	; case 7
  2790  0002D4  B4D8               	btfsc	status,2,c
  2791  0002D6  D7DC               	goto	l2701
  2792  0002D8                     l2707:
  2793                           
  2794                           ;CAN.c: 367:         return TRUE;
  2795  0002D8  0E01               	movlw	1
  2796  0002DA  0012               	return		;funcret
  2797  0002DC                     __end_of_CAN_TakeFrame:
  2798                           	opt callstack 0
  2799                           
  2800 ;; *************** function ___awdiv *****************
  2801 ;; Defined at:
  2802 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  dividend        2    5[COMRAM] int 
  2805 ;;  divisor         2    7[COMRAM] int 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  quotient        2   11[COMRAM] int 
  2808 ;;  sign            1   10[COMRAM] unsigned char 
  2809 ;;  counter         1    9[COMRAM] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  2    5[COMRAM] int 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2823 ;;Total ram usage:        8 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    3
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_CAN_TakeFrame
  2830 ;;		_FRAME_HandleCanFrame
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text17
  2835  000B08                     __ptext17:
  2836                           	opt callstack 0
  2837  000B08                     ___awdiv:
  2838                           	opt callstack 25
  2839                           
  2840                           ;incstack = 0
  2841  000B08  0E00               	movlw	0
  2842  000B0A  6E0B               	movwf	___awdiv@sign,c
  2843  000B0C  AE09               	btfss	___awdiv@divisor+1,7,c
  2844  000B0E  D006               	goto	l2563
  2845  000B10  6C08               	negf	___awdiv@divisor,c
  2846  000B12  1E09               	comf	___awdiv@divisor+1,f,c
  2847  000B14  B0D8               	btfsc	status,0,c
  2848  000B16  2A09               	incf	___awdiv@divisor+1,f,c
  2849  000B18  0E01               	movlw	1
  2850  000B1A  6E0B               	movwf	___awdiv@sign,c
  2851  000B1C                     l2563:
  2852  000B1C  AE07               	btfss	___awdiv@dividend+1,7,c
  2853  000B1E  D006               	goto	l2569
  2854  000B20  6C06               	negf	___awdiv@dividend,c
  2855  000B22  1E07               	comf	___awdiv@dividend+1,f,c
  2856  000B24  B0D8               	btfsc	status,0,c
  2857  000B26  2A07               	incf	___awdiv@dividend+1,f,c
  2858  000B28  0E01               	movlw	1
  2859  000B2A  1A0B               	xorwf	___awdiv@sign,f,c
  2860  000B2C                     l2569:
  2861  000B2C  0E00               	movlw	0
  2862  000B2E  6E0D               	movwf	___awdiv@quotient+1,c
  2863  000B30  0E00               	movlw	0
  2864  000B32  6E0C               	movwf	___awdiv@quotient,c
  2865  000B34  5008               	movf	___awdiv@divisor,w,c
  2866  000B36  1009               	iorwf	___awdiv@divisor+1,w,c
  2867  000B38  B4D8               	btfsc	status,2,c
  2868  000B3A  D01C               	goto	l2591
  2869  000B3C  0E01               	movlw	1
  2870  000B3E  6E0A               	movwf	___awdiv@counter,c
  2871  000B40  D004               	goto	l2577
  2872  000B42                     l2575:
  2873  000B42  90D8               	bcf	status,0,c
  2874  000B44  3608               	rlcf	___awdiv@divisor,f,c
  2875  000B46  3609               	rlcf	___awdiv@divisor+1,f,c
  2876  000B48  2A0A               	incf	___awdiv@counter,f,c
  2877  000B4A                     l2577:
  2878  000B4A  AE09               	btfss	___awdiv@divisor+1,7,c
  2879  000B4C  D7FA               	goto	l2575
  2880  000B4E                     u1140:
  2881  000B4E  90D8               	bcf	status,0,c
  2882  000B50  360C               	rlcf	___awdiv@quotient,f,c
  2883  000B52  360D               	rlcf	___awdiv@quotient+1,f,c
  2884  000B54  5008               	movf	___awdiv@divisor,w,c
  2885  000B56  5C06               	subwf	___awdiv@dividend,w,c
  2886  000B58  5009               	movf	___awdiv@divisor+1,w,c
  2887  000B5A  5807               	subwfb	___awdiv@dividend+1,w,c
  2888  000B5C  A0D8               	btfss	status,0,c
  2889  000B5E  D005               	goto	l2587
  2890  000B60  5008               	movf	___awdiv@divisor,w,c
  2891  000B62  5E06               	subwf	___awdiv@dividend,f,c
  2892  000B64  5009               	movf	___awdiv@divisor+1,w,c
  2893  000B66  5A07               	subwfb	___awdiv@dividend+1,f,c
  2894  000B68  800C               	bsf	___awdiv@quotient,0,c
  2895  000B6A                     l2587:
  2896  000B6A  90D8               	bcf	status,0,c
  2897  000B6C  3209               	rrcf	___awdiv@divisor+1,f,c
  2898  000B6E  3208               	rrcf	___awdiv@divisor,f,c
  2899  000B70  2E0A               	decfsz	___awdiv@counter,f,c
  2900  000B72  D7ED               	goto	u1140
  2901  000B74                     l2591:
  2902  000B74  500B               	movf	___awdiv@sign,w,c
  2903  000B76  B4D8               	btfsc	status,2,c
  2904  000B78  D004               	goto	l2595
  2905  000B7A  6C0C               	negf	___awdiv@quotient,c
  2906  000B7C  1E0D               	comf	___awdiv@quotient+1,f,c
  2907  000B7E  B0D8               	btfsc	status,0,c
  2908  000B80  2A0D               	incf	___awdiv@quotient+1,f,c
  2909  000B82                     l2595:
  2910  000B82  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  2911  000B86  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  2912  000B8A  0012               	return		;funcret
  2913  000B8C                     __end_of___awdiv:
  2914                           	opt callstack 0
  2915                           
  2916 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  2917 ;; Defined at:
  2918 ;;		line 169 in file "CAN.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  2921 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2922 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  2923 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  i               1    9[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;Total ram usage:        5 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    3
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_CAN_SendFrame
  2946 ;;		_CAN_TakeFrame
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text18
  2951  000EFA                     __ptext18:
  2952                           	opt callstack 0
  2953  000EFA                     _CAN_MoveBuffIntoFrame:
  2954                           	opt callstack 24
  2955                           
  2956                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  2957                           
  2958                           ;incstack = 0
  2959  000EFA  0E00               	movlw	0
  2960  000EFC  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  2961  000EFE                     l2207:
  2962                           
  2963                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  2964  000EFE  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2965  000F00  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  2966  000F02  6ED9               	movwf	fsr2l,c
  2967  000F04  0E00               	movlw	0
  2968  000F06  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  2969  000F08  6EDA               	movwf	fsr2h,c
  2970  000F0A  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2971  000F0C  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  2972  000F0E  6EE1               	movwf	fsr1l,c
  2973  000F10  0E00               	movlw	0
  2974  000F12  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  2975  000F14  6EE2               	movwf	fsr1h,c
  2976  000F16  CFDF FFE7          	movff	indf2,indf1
  2977                           
  2978                           ;CAN.c: 175:     }
  2979  000F1A  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  2980  000F1C  0E07               	movlw	7
  2981  000F1E  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  2982  000F20  D7EE               	goto	l2207
  2983  000F22  0012               	return	
  2984  000F24                     __end_of_CAN_MoveBuffIntoFrame:
  2985                           	opt callstack 0
  2986                           
  2987 ;; *************** function _TMR1_Update_flag_Set *****************
  2988 ;; Defined at:
  2989 ;;		line 32 in file "TMR1.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  a               2    5[COMRAM] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		None
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;Total ram usage:        2 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    3
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text19
  3018  001034                     __ptext19:
  3019                           	opt callstack 0
  3020  001034                     _TMR1_Update_flag_Set:
  3021                           	opt callstack 27
  3022                           
  3023                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3024                           
  3025                           ;incstack = 0
  3026  001034  C006  F042         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3027  001038  C007  F043         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3028  00103C  0012               	return		;funcret
  3029  00103E                     __end_of_TMR1_Update_flag_Set:
  3030                           	opt callstack 0
  3031                           
  3032 ;; *************** function _TMR1_Update_flag_Get *****************
  3033 ;; Defined at:
  3034 ;;		line 47 in file "TMR1.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  2    5[COMRAM] unsigned int 
  3041 ;; Registers used:
  3042 ;;		None
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;Total ram usage:        2 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    3
  3055 ;; This function calls:
  3056 ;;		Nothing
  3057 ;; This function is called by:
  3058 ;;		_main
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text20
  3063  00103E                     __ptext20:
  3064                           	opt callstack 0
  3065  00103E                     _TMR1_Update_flag_Get:
  3066                           	opt callstack 27
  3067                           
  3068                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3069                           
  3070                           ;incstack = 0
  3071  00103E  C042  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3072  001042  C043  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3073  001046  0012               	return		;funcret
  3074  001048                     __end_of_TMR1_Update_flag_Get:
  3075                           	opt callstack 0
  3076                           
  3077 ;; *************** function _LED_Update *****************
  3078 ;; Defined at:
  3079 ;;		line 105 in file "LED.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      unsigned char 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    5
  3100 ;; This function calls:
  3101 ;;		_LED_Control
  3102 ;;		_LED_Left
  3103 ;;		_LED_Light_Pos
  3104 ;;		_LED_Right
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text21
  3111  000B8C                     __ptext21:
  3112                           	opt callstack 0
  3113  000B8C                     _LED_Update:
  3114                           	opt callstack 25
  3115                           
  3116                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  3117                           
  3118                           ;incstack = 0
  3119  000B8C  504A               	movf	_LOCK,w,c
  3120  000B8E  A4D8               	btfss	status,2,c
  3121  000B90  D013               	goto	l2811
  3122                           
  3123                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  3124  000B92  0E00               	movlw	0
  3125  000B94  6E07               	movwf	LED_Control@diode+1,c
  3126  000B96  0E00               	movlw	0
  3127  000B98  6E06               	movwf	LED_Control@diode,c
  3128  000B9A  0E00               	movlw	0
  3129  000B9C  EC57  F003         	call	_LED_Control
  3130                           
  3131                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3132  000BA0  C04D  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3133  000BA4  C04E  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3134  000BA8  C051  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3135  000BAC  C052  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3136  000BB0  5053               	movf	LED_Update@Green,w,c
  3137  000BB2  ECE2  F004         	call	_LED_Light_Pos
  3138                           
  3139                           ;LED.c: 117:     }
  3140  000BB6  D012               	goto	l283
  3141  000BB8                     l2811:
  3142                           
  3143                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  3144  000BB8  0E00               	movlw	0
  3145  000BBA  6E07               	movwf	LED_Control@diode+1,c
  3146  000BBC  0E00               	movlw	0
  3147  000BBE  6E06               	movwf	LED_Control@diode,c
  3148  000BC0  5053               	movf	LED_Update@Green,w,c
  3149  000BC2  EC57  F003         	call	_LED_Control
  3150                           
  3151                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3152  000BC6  C04F  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3153  000BCA  C050  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3154  000BCE  C051  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3155  000BD2  C052  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3156  000BD6  0E00               	movlw	0
  3157  000BD8  ECE2  F004         	call	_LED_Light_Pos
  3158  000BDC                     l283:
  3159                           
  3160                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  3161  000BDC  C04F  F006         	movff	LED_Update@pos1,LED_Right@a
  3162  000BE0  C050  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3163  000BE4  ECE0  F006         	call	_LED_Right	;wreg free
  3164  000BE8  C006  F04F         	movff	?_LED_Right,LED_Update@pos1
  3165  000BEC  C007  F050         	movff	?_LED_Right+1,LED_Update@pos1+1
  3166                           
  3167                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  3168  000BF0  C04D  F006         	movff	LED_Update@pos2,LED_Left@a
  3169  000BF4  C04E  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3170  000BF8  EC2B  F007         	call	_LED_Left	;wreg free
  3171  000BFC  C006  F04D         	movff	?_LED_Left,LED_Update@pos2
  3172  000C00  C007  F04E         	movff	?_LED_Left+1,LED_Update@pos2+1
  3173  000C04  0012               	return		;funcret
  3174  000C06                     __end_of_LED_Update:
  3175                           	opt callstack 0
  3176                           
  3177 ;; *************** function _LED_Light_Pos *****************
  3178 ;; Defined at:
  3179 ;;		line 196 in file "LED.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  color           1    wreg     enum E10644
  3182 ;;  pos             2   12[COMRAM] unsigned int 
  3183 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  color           1   16[COMRAM] enum E10644
  3186 ;;  flage           2   21[COMRAM] unsigned int 
  3187 ;;  pos2            2   19[COMRAM] unsigned int 
  3188 ;;  LED_array       2   17[COMRAM] unsigned int 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  2   12[COMRAM] unsigned int 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;Total ram usage:       11 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    4
  3205 ;; This function calls:
  3206 ;;		_LED_Control
  3207 ;;		_LED_Left
  3208 ;;		_LED_Right
  3209 ;;		___lwdiv
  3210 ;; This function is called by:
  3211 ;;		_LED_Update
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text22
  3216  0009C4                     __ptext22:
  3217                           	opt callstack 0
  3218  0009C4                     _LED_Light_Pos:
  3219                           	opt callstack 25
  3220                           
  3221                           ;incstack = 0
  3222                           ;LED_Light_Pos@color stored from wreg
  3223  0009C4  6E11               	movwf	LED_Light_Pos@color,c
  3224                           
  3225                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  3226  0009C6  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3227  0009CA  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3228                           
  3229                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  3230  0009CE  0E00               	movlw	0
  3231  0009D0  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3232  0009D2  0E00               	movlw	0
  3233  0009D4  6E12               	movwf	LED_Light_Pos@LED_array,c
  3234                           
  3235                           ;LED.c: 200:     UINT flage = fulfillment/10;
  3236  0009D6  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3237  0009DA  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3238  0009DE  0E00               	movlw	0
  3239  0009E0  6E09               	movwf	___lwdiv@divisor+1,c
  3240  0009E2  0E0A               	movlw	10
  3241  0009E4  6E08               	movwf	___lwdiv@divisor,c
  3242  0009E6  EC90  F006         	call	___lwdiv	;wreg free
  3243  0009EA  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3244  0009EE  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3245                           
  3246                           ;LED.c: 201:     if(color == RED)
  3247  0009F2  5011               	movf	LED_Light_Pos@color,w,c
  3248  0009F4  B4D8               	btfsc	status,2,c
  3249  0009F6  D017               	goto	l2745
  3250  0009F8  D031               	goto	l2753
  3251  0009FA                     l2739:
  3252                           
  3253                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  3254  0009FA  5012               	movf	LED_Light_Pos@LED_array,w,c
  3255  0009FC  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3256  0009FE  6E12               	movwf	LED_Light_Pos@LED_array,c
  3257  000A00  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3258  000A02  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3259  000A04  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3260                           
  3261                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  3262  000A06  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3263  000A0A  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3264  000A0E  EC2B  F007         	call	_LED_Left	;wreg free
  3265  000A12  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3266  000A16  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3267                           
  3268                           ;LED.c: 207:             flage = flage - 1;
  3269  000A1A  0EFF               	movlw	255
  3270  000A1C  2416               	addwf	LED_Light_Pos@flage,w,c
  3271  000A1E  6E16               	movwf	LED_Light_Pos@flage,c
  3272  000A20  0EFF               	movlw	255
  3273  000A22  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3274  000A24  6E17               	movwf	LED_Light_Pos@flage+1,c
  3275  000A26                     l2745:
  3276                           
  3277                           ;LED.c: 203:         while(flage>0)
  3278  000A26  5016               	movf	LED_Light_Pos@flage,w,c
  3279  000A28  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3280  000A2A  B4D8               	btfsc	status,2,c
  3281  000A2C  D01B               	goto	u1280
  3282  000A2E  D7E5               	goto	l2739
  3283  000A30                     l2747:
  3284                           
  3285                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  3286  000A30  5012               	movf	LED_Light_Pos@LED_array,w,c
  3287  000A32  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3288  000A34  6E12               	movwf	LED_Light_Pos@LED_array,c
  3289  000A36  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3290  000A38  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3291  000A3A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3292                           
  3293                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  3294  000A3C  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3295  000A40  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3296  000A44  ECE0  F006         	call	_LED_Right	;wreg free
  3297  000A48  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3298  000A4C  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3299                           
  3300                           ;LED.c: 216:             flage = flage - 1;
  3301  000A50  0EFF               	movlw	255
  3302  000A52  2416               	addwf	LED_Light_Pos@flage,w,c
  3303  000A54  6E16               	movwf	LED_Light_Pos@flage,c
  3304  000A56  0EFF               	movlw	255
  3305  000A58  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3306  000A5A  6E17               	movwf	LED_Light_Pos@flage+1,c
  3307  000A5C                     l2753:
  3308                           
  3309                           ;LED.c: 212:         while(flage>0)
  3310  000A5C  5016               	movf	LED_Light_Pos@flage,w,c
  3311  000A5E  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3312  000A60  A4D8               	btfss	status,2,c
  3313  000A62  D7E6               	goto	l2747
  3314  000A64                     u1280:
  3315                           
  3316                           ;LED.c: 219:     LED_Control(color, LED_array);
  3317  000A64  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3318  000A68  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3319  000A6C  5011               	movf	LED_Light_Pos@color,w,c
  3320  000A6E  EC57  F003         	call	_LED_Control
  3321  000A72  0012               	return		;funcret
  3322  000A74                     __end_of_LED_Light_Pos:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function ___lwdiv *****************
  3326 ;; Defined at:
  3327 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  dividend        2    5[COMRAM] unsigned int 
  3330 ;;  divisor         2    7[COMRAM] unsigned int 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  quotient        2    9[COMRAM] unsigned int 
  3333 ;;  counter         1   11[COMRAM] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  2    5[COMRAM] unsigned int 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;Total ram usage:        7 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    3
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_LED_Light_Pos
  3354 ;;		_FRAME_Plot
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text23
  3359  000D20                     __ptext23:
  3360                           	opt callstack 0
  3361  000D20                     ___lwdiv:
  3362                           	opt callstack 25
  3363                           
  3364                           ;incstack = 0
  3365  000D20  0E00               	movlw	0
  3366  000D22  6E0B               	movwf	___lwdiv@quotient+1,c
  3367  000D24  0E00               	movlw	0
  3368  000D26  6E0A               	movwf	___lwdiv@quotient,c
  3369  000D28  5008               	movf	___lwdiv@divisor,w,c
  3370  000D2A  1009               	iorwf	___lwdiv@divisor+1,w,c
  3371  000D2C  B4D8               	btfsc	status,2,c
  3372  000D2E  D01C               	goto	l1145
  3373  000D30  0E01               	movlw	1
  3374  000D32  6E0C               	movwf	___lwdiv@counter,c
  3375  000D34  D004               	goto	l2607
  3376  000D36                     l2605:
  3377  000D36  90D8               	bcf	status,0,c
  3378  000D38  3608               	rlcf	___lwdiv@divisor,f,c
  3379  000D3A  3609               	rlcf	___lwdiv@divisor+1,f,c
  3380  000D3C  2A0C               	incf	___lwdiv@counter,f,c
  3381  000D3E                     l2607:
  3382  000D3E  AE09               	btfss	___lwdiv@divisor+1,7,c
  3383  000D40  D7FA               	goto	l2605
  3384  000D42                     u1180:
  3385  000D42  90D8               	bcf	status,0,c
  3386  000D44  360A               	rlcf	___lwdiv@quotient,f,c
  3387  000D46  360B               	rlcf	___lwdiv@quotient+1,f,c
  3388  000D48  5008               	movf	___lwdiv@divisor,w,c
  3389  000D4A  5C06               	subwf	___lwdiv@dividend,w,c
  3390  000D4C  5009               	movf	___lwdiv@divisor+1,w,c
  3391  000D4E  5807               	subwfb	___lwdiv@dividend+1,w,c
  3392  000D50  A0D8               	btfss	status,0,c
  3393  000D52  D005               	goto	l2617
  3394  000D54  5008               	movf	___lwdiv@divisor,w,c
  3395  000D56  5E06               	subwf	___lwdiv@dividend,f,c
  3396  000D58  5009               	movf	___lwdiv@divisor+1,w,c
  3397  000D5A  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3398  000D5C  800A               	bsf	___lwdiv@quotient,0,c
  3399  000D5E                     l2617:
  3400  000D5E  90D8               	bcf	status,0,c
  3401  000D60  3209               	rrcf	___lwdiv@divisor+1,f,c
  3402  000D62  3208               	rrcf	___lwdiv@divisor,f,c
  3403  000D64  2E0C               	decfsz	___lwdiv@counter,f,c
  3404  000D66  D7ED               	goto	u1180
  3405  000D68                     l1145:
  3406  000D68  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3407  000D6C  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3408  000D70  0012               	return		;funcret
  3409  000D72                     __end_of___lwdiv:
  3410                           	opt callstack 0
  3411                           
  3412 ;; *************** function _LED_Right *****************
  3413 ;; Defined at:
  3414 ;;		line 140 in file "LED.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  a               2    5[COMRAM] unsigned int 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  b               2    9[COMRAM] unsigned int 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  2    5[COMRAM] unsigned int 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;Total ram usage:        6 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    3
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_LED_Update
  3439 ;;		_LED_Light_Pos
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text24
  3444  000DC0                     __ptext24:
  3445                           	opt callstack 0
  3446  000DC0                     _LED_Right:
  3447                           	opt callstack 26
  3448                           
  3449                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3450                           
  3451                           ;incstack = 0
  3452  000DC0  A006               	btfss	LED_Right@a,0,c
  3453  000DC2  D018               	goto	l2483
  3454                           
  3455                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  3456  000DC4  0EFE               	movlw	254
  3457  000DC6  1406               	andwf	LED_Right@a,w,c
  3458  000DC8  6E0A               	movwf	LED_Right@b,c
  3459  000DCA  0E03               	movlw	3
  3460  000DCC  1407               	andwf	LED_Right@a+1,w,c
  3461  000DCE  6E0B               	movwf	LED_Right@b+1,c
  3462                           
  3463                           ;LED.c: 145:         b = b >> 1;
  3464  000DD0  90D8               	bcf	status,0,c
  3465  000DD2  300B               	rrcf	LED_Right@b+1,w,c
  3466  000DD4  6E08               	movwf	??_LED_Right& (0+255),c
  3467  000DD6  300A               	rrcf	LED_Right@b,w,c
  3468  000DD8  6E0A               	movwf	LED_Right@b,c
  3469  000DDA  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3470                           
  3471                           ;LED.c: 146:         b = b | 0b1000000000;
  3472  000DDE  0E00               	movlw	0
  3473  000DE0  100A               	iorwf	LED_Right@b,w,c
  3474  000DE2  6E0A               	movwf	LED_Right@b,c
  3475  000DE4  0E02               	movlw	2
  3476  000DE6  100B               	iorwf	LED_Right@b+1,w,c
  3477  000DE8  6E0B               	movwf	LED_Right@b+1,c
  3478                           
  3479                           ;LED.c: 147:         return b;
  3480  000DEA  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3481  000DEE  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3482  000DF2  0012               	return	
  3483  000DF4                     l2483:
  3484                           
  3485                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  3486  000DF4  90D8               	bcf	status,0,c
  3487  000DF6  3007               	rrcf	LED_Right@a+1,w,c
  3488  000DF8  6E08               	movwf	??_LED_Right& (0+255),c
  3489  000DFA  3006               	rrcf	LED_Right@a,w,c
  3490  000DFC  6E06               	movwf	LED_Right@a,c
  3491  000DFE  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3492                           
  3493                           ;LED.c: 152:         return a;
  3494  000E02  C006  F006         	movff	LED_Right@a,?_LED_Right
  3495  000E06  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3496  000E0A  0012               	return		;funcret
  3497  000E0C                     __end_of_LED_Right:
  3498                           	opt callstack 0
  3499                           
  3500 ;; *************** function _LED_Left *****************
  3501 ;; Defined at:
  3502 ;;		line 167 in file "LED.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  a               2    5[COMRAM] unsigned int 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  b               2    7[COMRAM] unsigned int 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  2    5[COMRAM] unsigned int 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3519 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3520 ;;Total ram usage:        4 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    3
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_LED_Update
  3527 ;;		_LED_Light_Pos
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text25
  3532  000E56                     __ptext25:
  3533                           	opt callstack 0
  3534  000E56                     _LED_Left:
  3535                           	opt callstack 25
  3536                           
  3537                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3538                           
  3539                           ;incstack = 0
  3540  000E56  A207               	btfss	LED_Left@a+1,1,c
  3541  000E58  D015               	goto	l2499
  3542                           
  3543                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  3544  000E5A  0EFF               	movlw	255
  3545  000E5C  1406               	andwf	LED_Left@a,w,c
  3546  000E5E  6E08               	movwf	LED_Left@b,c
  3547  000E60  0E01               	movlw	1
  3548  000E62  1407               	andwf	LED_Left@a+1,w,c
  3549  000E64  6E09               	movwf	LED_Left@b+1,c
  3550                           
  3551                           ;LED.c: 172:         b = b << 1;
  3552  000E66  90D8               	bcf	status,0,c
  3553  000E68  3408               	rlcf	LED_Left@b,w,c
  3554  000E6A  6E08               	movwf	LED_Left@b,c
  3555  000E6C  3409               	rlcf	LED_Left@b+1,w,c
  3556  000E6E  6E09               	movwf	LED_Left@b+1,c
  3557                           
  3558                           ;LED.c: 173:         b = b | 0b0000000001;
  3559  000E70  0E01               	movlw	1
  3560  000E72  1008               	iorwf	LED_Left@b,w,c
  3561  000E74  6E08               	movwf	LED_Left@b,c
  3562  000E76  5009               	movf	LED_Left@b+1,w,c
  3563  000E78  6E09               	movwf	LED_Left@b+1,c
  3564                           
  3565                           ;LED.c: 174:         return b;
  3566  000E7A  C008  F006         	movff	LED_Left@b,?_LED_Left
  3567  000E7E  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3568  000E82  0012               	return	
  3569  000E84                     l2499:
  3570                           
  3571                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  3572  000E84  90D8               	bcf	status,0,c
  3573  000E86  3406               	rlcf	LED_Left@a,w,c
  3574  000E88  6E06               	movwf	LED_Left@a,c
  3575  000E8A  3407               	rlcf	LED_Left@a+1,w,c
  3576  000E8C  6E07               	movwf	LED_Left@a+1,c
  3577                           
  3578                           ;LED.c: 179:         return a;
  3579  000E8E  C006  F006         	movff	LED_Left@a,?_LED_Left
  3580  000E92  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3581  000E96  0012               	return		;funcret
  3582  000E98                     __end_of_LED_Left:
  3583                           	opt callstack 0
  3584                           
  3585 ;; *************** function _INI_All *****************
  3586 ;; Defined at:
  3587 ;;		line 52 in file "INI.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      void 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    5
  3608 ;; This function calls:
  3609 ;;		_CAN_Setup
  3610 ;;		_INI_GlobalInterrupt
  3611 ;;		_INI_LED_Start
  3612 ;;		_INI_OUTPUT
  3613 ;;		_INI_Timer
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text26
  3620  000FD2                     __ptext26:
  3621                           	opt callstack 0
  3622  000FD2                     _INI_All:
  3623                           	opt callstack 25
  3624                           
  3625                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3626                           
  3627                           ;incstack = 0
  3628  000FD2  80D1               	bsf	4049,0,c	;volatile
  3629  000FD4  0004               	clrwdt		;# 
  3630                           
  3631                           ;INI.c: 64:     INI_OUTPUT();
  3632  000FD6  ECDA  F007         	call	_INI_OUTPUT	;wreg free
  3633                           
  3634                           ;INI.c: 66:     CAN_Setup();
  3635  000FDA  EC35  F006         	call	_CAN_Setup	;wreg free
  3636                           
  3637                           ;INI.c: 67:     INI_GlobalInterrupt();
  3638  000FDE  EC09  F008         	call	_INI_GlobalInterrupt	;wreg free
  3639                           
  3640                           ;INI.c: 69:     INI_Timer();
  3641  000FE2  ECF6  F007         	call	_INI_Timer	;wreg free
  3642                           
  3643                           ;INI.c: 71:     INI_LED_Start();
  3644  000FE6  EC4C  F007         	call	_INI_LED_Start	;wreg free
  3645  000FEA  0012               	return		;funcret
  3646  000FEC                     __end_of_INI_All:
  3647                           	opt callstack 0
  3648                           
  3649 ;; *************** function _INI_Timer *****************
  3650 ;; Defined at:
  3651 ;;		line 92 in file "TMR1.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;		None
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      unsigned char 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3669 ;;Total ram usage:        0 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    3
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_INI_All
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text27
  3680  000FEC                     __ptext27:
  3681                           	opt callstack 0
  3682  000FEC                     _INI_Timer:
  3683                           	opt callstack 26
  3684                           
  3685                           ;TMR1.c: 96:     IRCF2 = 1;
  3686                           
  3687                           ;incstack = 0
  3688  000FEC  8CD3               	bsf	4051,6,c	;volatile
  3689                           
  3690                           ;TMR1.c: 97:     IRCF1 = 1;
  3691  000FEE  8AD3               	bsf	4051,5,c	;volatile
  3692                           
  3693                           ;TMR1.c: 98:     IRCF0 = 1;
  3694  000FF0  88D3               	bsf	4051,4,c	;volatile
  3695                           
  3696                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3697  000FF2  0E3D               	movlw	61
  3698  000FF4  6ECD               	movwf	4045,c	;volatile
  3699                           
  3700                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3701  000FF6  0E9E               	movlw	158
  3702  000FF8  6ECF               	movwf	4047,c	;volatile
  3703                           
  3704                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  3705  000FFA  0E57               	movlw	87
  3706  000FFC  6ECE               	movwf	4046,c	;volatile
  3707                           
  3708                           ;TMR1.c: 102:     TMR1IE=1;
  3709  000FFE  809D               	bsf	3997,0,c	;volatile
  3710                           
  3711                           ;TMR1.c: 103:     TMR1ON = 1;
  3712  001000  80CD               	bsf	4045,0,c	;volatile
  3713  001002  0012               	return		;funcret
  3714  001004                     __end_of_INI_Timer:
  3715                           	opt callstack 0
  3716                           
  3717 ;; *************** function _INI_OUTPUT *****************
  3718 ;; Defined at:
  3719 ;;		line 27 in file "INI.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    3
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_INI_All
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text28
  3748  000FB4                     __ptext28:
  3749                           	opt callstack 0
  3750  000FB4                     _INI_OUTPUT:
  3751                           	opt callstack 26
  3752                           
  3753                           ;INI.c: 31:     LATA = 0;
  3754                           
  3755                           ;incstack = 0
  3756  000FB4  0E00               	movlw	0
  3757  000FB6  6E89               	movwf	3977,c	;volatile
  3758                           
  3759                           ;INI.c: 32:     LATB = 0;
  3760  000FB8  0E00               	movlw	0
  3761  000FBA  6E8A               	movwf	3978,c	;volatile
  3762                           
  3763                           ;INI.c: 33:     LATC = 0;
  3764  000FBC  0E00               	movlw	0
  3765  000FBE  6E8B               	movwf	3979,c	;volatile
  3766                           
  3767                           ;INI.c: 34:     TRISA = 0x0C;
  3768  000FC0  0E0C               	movlw	12
  3769  000FC2  6E92               	movwf	3986,c	;volatile
  3770                           
  3771                           ;INI.c: 35:     TRISB = 0b10001000;
  3772  000FC4  0E88               	movlw	136
  3773  000FC6  6E93               	movwf	3987,c	;volatile
  3774                           
  3775                           ;INI.c: 36:     TRISC = 0xBF;
  3776  000FC8  0EBF               	movlw	191
  3777  000FCA  6E94               	movwf	3988,c	;volatile
  3778                           
  3779                           ;INI.c: 37:     RCONbits.IPEN = 1;
  3780  000FCC  8ED0               	bsf	4048,7,c	;volatile
  3781                           
  3782                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  3783  000FCE  863F               	bsf	_DetectorLedRadar,3,c
  3784  000FD0  0012               	return		;funcret
  3785  000FD2                     __end_of_INI_OUTPUT:
  3786                           	opt callstack 0
  3787                           
  3788 ;; *************** function _INI_LED_Start *****************
  3789 ;; Defined at:
  3790 ;;		line 231 in file "LED.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    4
  3811 ;; This function calls:
  3812 ;;		_LED_Control
  3813 ;; This function is called by:
  3814 ;;		_INI_All
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text29
  3819  000E98                     __ptext29:
  3820                           	opt callstack 0
  3821  000E98                     _INI_LED_Start:
  3822                           	opt callstack 25
  3823                           
  3824                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  3825                           
  3826                           ;incstack = 0
  3827  000E98  5092               	movf	3986,w,c	;volatile
  3828  000E9A  0B01               	andlw	1
  3829  000E9C  6E92               	movwf	3986,c	;volatile
  3830                           
  3831                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  3832  000E9E  5093               	movf	3987,w,c	;volatile
  3833  000EA0  0BFC               	andlw	252
  3834  000EA2  6E93               	movwf	3987,c	;volatile
  3835                           
  3836                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  3837  000EA4  5096               	movf	3990,w,c	;volatile
  3838  000EA6  0BF8               	andlw	248
  3839  000EA8  6E96               	movwf	3990,c	;volatile
  3840                           
  3841                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  3842  000EAA  0E00               	movlw	0
  3843  000EAC  6E95               	movwf	3989,c	;volatile
  3844                           
  3845                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  3846  000EAE  0E00               	movlw	0
  3847  000EB0  6E07               	movwf	LED_Control@diode+1,c
  3848  000EB2  0E00               	movlw	0
  3849  000EB4  6E06               	movwf	LED_Control@diode,c
  3850  000EB6  0E00               	movlw	0
  3851  000EB8  EC57  F003         	call	_LED_Control
  3852                           
  3853                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  3854  000EBC  0E00               	movlw	0
  3855  000EBE  6E07               	movwf	LED_Control@diode+1,c
  3856  000EC0  0E00               	movlw	0
  3857  000EC2  6E06               	movwf	LED_Control@diode,c
  3858  000EC4  0E01               	movlw	1
  3859  000EC6  EC57  F003         	call	_LED_Control
  3860  000ECA  0012               	return		;funcret
  3861  000ECC                     __end_of_INI_LED_Start:
  3862                           	opt callstack 0
  3863                           
  3864 ;; *************** function _LED_Control *****************
  3865 ;; Defined at:
  3866 ;;		line 256 in file "LED.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  color           1    wreg     enum E10644
  3869 ;;  diode           2    5[COMRAM] unsigned int 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  color           1    9[COMRAM] enum E10644
  3872 ;;  cos             2    0        unsigned int 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      unsigned char 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;Total ram usage:        5 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    3
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_LED_Error
  3893 ;;		_LED_Update
  3894 ;;		_LED_Light_Pos
  3895 ;;		_INI_LED_Start
  3896 ;;		_LED_Clear
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text30
  3901  0006AE                     __ptext30:
  3902                           	opt callstack 0
  3903  0006AE                     _LED_Control:
  3904                           	opt callstack 24
  3905                           
  3906                           ;incstack = 0
  3907                           ;LED_Control@color stored from wreg
  3908  0006AE  6E0A               	movwf	LED_Control@color,c
  3909                           
  3910                           ;LED.c: 259:     if(color == RED)
  3911  0006B0  500A               	movf	LED_Control@color,w,c
  3912  0006B2  A4D8               	btfss	status,2,c
  3913  0006B4  D050               	goto	l311
  3914                           
  3915                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  3916  0006B6  A006               	btfss	LED_Control@diode,0,c
  3917  0006B8  D003               	goto	l2221
  3918                           
  3919                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  3920  0006BA  508C               	movf	3980,w,c	;volatile
  3921  0006BC  0910               	iorlw	16
  3922  0006BE  D002               	goto	L3
  3923  0006C0                     l2221:
  3924                           
  3925                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  3926  0006C0  508C               	movf	3980,w,c	;volatile
  3927  0006C2  0BEF               	andlw	239
  3928  0006C4                     L3:
  3929  0006C4  6E8C               	movwf	3980,c	;volatile
  3930                           
  3931                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  3932  0006C6  A206               	btfss	LED_Control@diode,1,c
  3933  0006C8  D003               	goto	l2227
  3934                           
  3935                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  3936  0006CA  508C               	movf	3980,w,c	;volatile
  3937  0006CC  0940               	iorlw	64
  3938  0006CE  D002               	goto	L4
  3939  0006D0                     l2227:
  3940                           
  3941                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  3942  0006D0  508C               	movf	3980,w,c	;volatile
  3943  0006D2  0BBF               	andlw	191
  3944  0006D4                     L4:
  3945  0006D4  6E8C               	movwf	3980,c	;volatile
  3946                           
  3947                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  3948  0006D6  A406               	btfss	LED_Control@diode,2,c
  3949  0006D8  D003               	goto	l2233
  3950                           
  3951                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  3952  0006DA  508A               	movf	3978,w,c	;volatile
  3953  0006DC  0901               	iorlw	1
  3954  0006DE  D002               	goto	L5
  3955  0006E0                     l2233:
  3956                           
  3957                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  3958  0006E0  508A               	movf	3978,w,c	;volatile
  3959  0006E2  0BFE               	andlw	254
  3960  0006E4                     L5:
  3961  0006E4  6E8A               	movwf	3978,c	;volatile
  3962                           
  3963                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  3964  0006E6  A606               	btfss	LED_Control@diode,3,c
  3965  0006E8  D003               	goto	l2239
  3966                           
  3967                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  3968  0006EA  5089               	movf	3977,w,c	;volatile
  3969  0006EC  0902               	iorlw	2
  3970  0006EE  D002               	goto	L6
  3971  0006F0                     l2239:
  3972                           
  3973                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  3974  0006F0  5089               	movf	3977,w,c	;volatile
  3975  0006F2  0BFD               	andlw	253
  3976  0006F4                     L6:
  3977  0006F4  6E89               	movwf	3977,c	;volatile
  3978                           
  3979                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  3980  0006F6  A806               	btfss	LED_Control@diode,4,c
  3981  0006F8  D003               	goto	l2245
  3982                           
  3983                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  3984  0006FA  5089               	movf	3977,w,c	;volatile
  3985  0006FC  0908               	iorlw	8
  3986  0006FE  D002               	goto	L7
  3987  000700                     l2245:
  3988                           
  3989                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  3990  000700  5089               	movf	3977,w,c	;volatile
  3991  000702  0BF7               	andlw	247
  3992  000704                     L7:
  3993  000704  6E89               	movwf	3977,c	;volatile
  3994                           
  3995                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  3996  000706  AA06               	btfss	LED_Control@diode,5,c
  3997  000708  D003               	goto	l2251
  3998                           
  3999                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  4000  00070A  5089               	movf	3977,w,c	;volatile
  4001  00070C  0920               	iorlw	32
  4002  00070E  D002               	goto	L8
  4003  000710                     l2251:
  4004                           
  4005                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  4006  000710  5089               	movf	3977,w,c	;volatile
  4007  000712  0BDF               	andlw	223
  4008  000714                     L8:
  4009  000714  6E89               	movwf	3977,c	;volatile
  4010                           
  4011                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  4012  000716  AC06               	btfss	LED_Control@diode,6,c
  4013  000718  D003               	goto	l2257
  4014                           
  4015                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  4016  00071A  508D               	movf	3981,w,c	;volatile
  4017  00071C  0902               	iorlw	2
  4018  00071E  D002               	goto	L9
  4019  000720                     l2257:
  4020                           
  4021                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  4022  000720  508D               	movf	3981,w,c	;volatile
  4023  000722  0BFD               	andlw	253
  4024  000724                     L9:
  4025  000724  6E8D               	movwf	3981,c	;volatile
  4026                           
  4027                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  4028  000726  AE06               	btfss	LED_Control@diode,7,c
  4029  000728  D003               	goto	l2263
  4030                           
  4031                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  4032  00072A  5089               	movf	3977,w,c	;volatile
  4033  00072C  0980               	iorlw	128
  4034  00072E  D002               	goto	L10
  4035  000730                     l2263:
  4036                           
  4037                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  4038  000730  5089               	movf	3977,w,c	;volatile
  4039  000732  0B7F               	andlw	127
  4040  000734                     L10:
  4041  000734  6E89               	movwf	3977,c	;volatile
  4042                           
  4043                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  4044  000736  A007               	btfss	LED_Control@diode+1,0,c
  4045  000738  D003               	goto	l2269
  4046                           
  4047                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  4048  00073A  508C               	movf	3980,w,c	;volatile
  4049  00073C  0901               	iorlw	1
  4050  00073E  D002               	goto	L11
  4051  000740                     l2269:
  4052                           
  4053                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  4054  000740  508C               	movf	3980,w,c	;volatile
  4055  000742  0BFE               	andlw	254
  4056  000744                     L11:
  4057  000744  6E8C               	movwf	3980,c	;volatile
  4058                           
  4059                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  4060  000746  A207               	btfss	LED_Control@diode+1,1,c
  4061  000748  D003               	goto	l2275
  4062                           
  4063                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  4064  00074A  508C               	movf	3980,w,c	;volatile
  4065  00074C  0904               	iorlw	4
  4066  00074E  D002               	goto	L12
  4067  000750                     l2275:
  4068                           
  4069                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  4070  000750  508C               	movf	3980,w,c	;volatile
  4071  000752  0BFB               	andlw	251
  4072  000754                     L12:
  4073  000754  6E8C               	movwf	3980,c	;volatile
  4074  000756                     l311:
  4075                           
  4076                           ;LED.c: 358:     if(color == GREEN)
  4077  000756  040A               	decf	LED_Control@color,w,c
  4078  000758  A4D8               	btfss	status,2,c
  4079  00075A  0012               	return	
  4080                           
  4081                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  4082  00075C  A006               	btfss	LED_Control@diode,0,c
  4083  00075E  D003               	goto	l2281
  4084                           
  4085                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  4086  000760  508C               	movf	3980,w,c	;volatile
  4087  000762  0920               	iorlw	32
  4088  000764  D002               	goto	L13
  4089  000766                     l2281:
  4090                           
  4091                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  4092  000766  508C               	movf	3980,w,c	;volatile
  4093  000768  0BDF               	andlw	223
  4094  00076A                     L13:
  4095  00076A  6E8C               	movwf	3980,c	;volatile
  4096                           
  4097                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  4098  00076C  A206               	btfss	LED_Control@diode,1,c
  4099  00076E  D003               	goto	l2287
  4100                           
  4101                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  4102  000770  508C               	movf	3980,w,c	;volatile
  4103  000772  0980               	iorlw	128
  4104  000774  D002               	goto	L14
  4105  000776                     l2287:
  4106                           
  4107                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  4108  000776  508C               	movf	3980,w,c	;volatile
  4109  000778  0B7F               	andlw	127
  4110  00077A                     L14:
  4111  00077A  6E8C               	movwf	3980,c	;volatile
  4112                           
  4113                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  4114  00077C  A406               	btfss	LED_Control@diode,2,c
  4115  00077E  D003               	goto	l2293
  4116                           
  4117                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  4118  000780  508A               	movf	3978,w,c	;volatile
  4119  000782  0902               	iorlw	2
  4120  000784  D002               	goto	L15
  4121  000786                     l2293:
  4122                           
  4123                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  4124  000786  508A               	movf	3978,w,c	;volatile
  4125  000788  0BFD               	andlw	253
  4126  00078A                     L15:
  4127  00078A  6E8A               	movwf	3978,c	;volatile
  4128                           
  4129                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  4130  00078C  A606               	btfss	LED_Control@diode,3,c
  4131  00078E  D003               	goto	l2299
  4132                           
  4133                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  4134  000790  5089               	movf	3977,w,c	;volatile
  4135  000792  0904               	iorlw	4
  4136  000794  D002               	goto	L16
  4137  000796                     l2299:
  4138                           
  4139                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  4140  000796  5089               	movf	3977,w,c	;volatile
  4141  000798  0BFB               	andlw	251
  4142  00079A                     L16:
  4143  00079A  6E89               	movwf	3977,c	;volatile
  4144                           
  4145                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  4146  00079C  A806               	btfss	LED_Control@diode,4,c
  4147  00079E  D003               	goto	l2305
  4148                           
  4149                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  4150  0007A0  5089               	movf	3977,w,c	;volatile
  4151  0007A2  0910               	iorlw	16
  4152  0007A4  D002               	goto	L17
  4153  0007A6                     l2305:
  4154                           
  4155                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  4156  0007A6  5089               	movf	3977,w,c	;volatile
  4157  0007A8  0BEF               	andlw	239
  4158  0007AA                     L17:
  4159  0007AA  6E89               	movwf	3977,c	;volatile
  4160                           
  4161                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  4162  0007AC  AA06               	btfss	LED_Control@diode,5,c
  4163  0007AE  D003               	goto	l2311
  4164                           
  4165                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  4166  0007B0  508D               	movf	3981,w,c	;volatile
  4167  0007B2  0901               	iorlw	1
  4168  0007B4  D002               	goto	L18
  4169  0007B6                     l2311:
  4170                           
  4171                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  4172  0007B6  508D               	movf	3981,w,c	;volatile
  4173  0007B8  0BFE               	andlw	254
  4174  0007BA                     L18:
  4175  0007BA  6E8D               	movwf	3981,c	;volatile
  4176                           
  4177                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  4178  0007BC  AC06               	btfss	LED_Control@diode,6,c
  4179  0007BE  D003               	goto	l2317
  4180                           
  4181                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  4182  0007C0  508D               	movf	3981,w,c	;volatile
  4183  0007C2  0904               	iorlw	4
  4184  0007C4  D002               	goto	L19
  4185  0007C6                     l2317:
  4186                           
  4187                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  4188  0007C6  508D               	movf	3981,w,c	;volatile
  4189  0007C8  0BFB               	andlw	251
  4190  0007CA                     L19:
  4191  0007CA  6E8D               	movwf	3981,c	;volatile
  4192                           
  4193                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  4194  0007CC  AE06               	btfss	LED_Control@diode,7,c
  4195  0007CE  D003               	goto	l2323
  4196                           
  4197                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  4198  0007D0  5089               	movf	3977,w,c	;volatile
  4199  0007D2  0940               	iorlw	64
  4200  0007D4  D002               	goto	L20
  4201  0007D6                     l2323:
  4202                           
  4203                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  4204  0007D6  5089               	movf	3977,w,c	;volatile
  4205  0007D8  0BBF               	andlw	191
  4206  0007DA                     L20:
  4207  0007DA  6E89               	movwf	3977,c	;volatile
  4208                           
  4209                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  4210  0007DC  A007               	btfss	LED_Control@diode+1,0,c
  4211  0007DE  D003               	goto	l2329
  4212                           
  4213                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  4214  0007E0  508C               	movf	3980,w,c	;volatile
  4215  0007E2  0902               	iorlw	2
  4216  0007E4  D002               	goto	L21
  4217  0007E6                     l2329:
  4218                           
  4219                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  4220  0007E6  508C               	movf	3980,w,c	;volatile
  4221  0007E8  0BFD               	andlw	253
  4222  0007EA                     L21:
  4223  0007EA  6E8C               	movwf	3980,c	;volatile
  4224                           
  4225                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  4226  0007EC  A207               	btfss	LED_Control@diode+1,1,c
  4227  0007EE  D004               	goto	l2335
  4228                           
  4229                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  4230  0007F0  508C               	movf	3980,w,c	;volatile
  4231  0007F2  0908               	iorlw	8
  4232  0007F4  6E8C               	movwf	3980,c	;volatile
  4233                           
  4234                           ;LED.c: 450:         }
  4235  0007F6  0012               	return	
  4236  0007F8                     l2335:
  4237                           
  4238                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  4239  0007F8  508C               	movf	3980,w,c	;volatile
  4240  0007FA  0BF7               	andlw	247
  4241  0007FC  6E8C               	movwf	3980,c	;volatile
  4242  0007FE  0012               	return		;funcret
  4243  000800                     __end_of_LED_Control:
  4244                           	opt callstack 0
  4245                           
  4246 ;; *************** function _INI_GlobalInterrupt *****************
  4247 ;; Defined at:
  4248 ;;		line 74 in file "INI.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		None
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    3
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_INI_All
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text31
  4277  001012                     __ptext31:
  4278                           	opt callstack 0
  4279  001012                     _INI_GlobalInterrupt:
  4280                           	opt callstack 26
  4281                           
  4282                           ;INI.c: 76: INTCONbits.GIEH=1;
  4283                           
  4284                           ;incstack = 0
  4285  001012  8EF2               	bsf	4082,7,c	;volatile
  4286                           
  4287                           ;INI.c: 77: INTCONbits.GIEL=1;
  4288  001014  8CF2               	bsf	4082,6,c	;volatile
  4289                           
  4290                           ;INI.c: 78: RCONbits.IPEN=1;
  4291  001016  8ED0               	bsf	4048,7,c	;volatile
  4292                           
  4293                           ;INI.c: 79: IPEN =1;
  4294  001018  8ED0               	bsf	4048,7,c	;volatile
  4295                           
  4296                           ;INI.c: 81: PEIE=1;
  4297  00101A  8CF2               	bsf	4082,6,c	;volatile
  4298                           
  4299                           ;INI.c: 82: TMR1IP = 0;
  4300  00101C  909F               	bcf	3999,0,c	;volatile
  4301  00101E  0012               	return		;funcret
  4302  001020                     __end_of_INI_GlobalInterrupt:
  4303                           	opt callstack 0
  4304                           
  4305 ;; *************** function _CAN_Setup *****************
  4306 ;; Defined at:
  4307 ;;		line 22 in file "CAN.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    4
  4328 ;; This function calls:
  4329 ;;		_CAN_SetupClock
  4330 ;;		_CAN_SetupMask
  4331 ;; This function is called by:
  4332 ;;		_INI_All
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text32
  4337  000C6A                     __ptext32:
  4338                           	opt callstack 0
  4339  000C6A                     _CAN_Setup:
  4340                           	opt callstack 25
  4341                           
  4342                           ;CAN.c: 27:     CANCON = 0x80;
  4343                           
  4344                           ;incstack = 0
  4345  000C6A  0E80               	movlw	128
  4346  000C6C  6E6F               	movwf	3951,c	;volatile
  4347  000C6E                     l2623:
  4348                           
  4349                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4350  000C6E  506E               	movf	3950,w,c	;volatile
  4351  000C70  0BE0               	andlw	224
  4352  000C72  0A80               	xorlw	128
  4353  000C74  A4D8               	btfss	status,2,c
  4354  000C76  D7FB               	goto	l2623
  4355                           
  4356                           ;CAN.c: 33:     BSEL0 = 0;
  4357  000C78  0E00               	movlw	0
  4358  000C7A  010D               	movlb	13	; () banked
  4359  000C7C  6FF8               	movwf	248,b	;volatile
  4360                           
  4361                           ;CAN.c: 34:     TXB0CON = 0;
  4362  000C7E  0E00               	movlw	0
  4363  000C80  010F               	movlb	15	; () banked
  4364  000C82  6F40               	movwf	64,b	;volatile
  4365                           
  4366                           ;CAN.c: 35:     RXB0CON = 0;
  4367  000C84  0E00               	movlw	0
  4368  000C86  6E60               	movwf	3936,c	;volatile
  4369                           
  4370                           ;CAN.c: 36:     RXB1CON = 0;
  4371  000C88  0E00               	movlw	0
  4372  000C8A  6F50               	movwf	80,b	;volatile
  4373                           
  4374                           ;CAN.c: 37:     B0CON = 0;
  4375  000C8C  0E00               	movlw	0
  4376  000C8E  010E               	movlb	14	; () banked
  4377  000C90  6F20               	movwf	32,b	;volatile
  4378                           
  4379                           ;CAN.c: 38:     B1CON = 0;
  4380  000C92  0E00               	movlw	0
  4381  000C94  6F30               	movwf	48,b	;volatile
  4382                           
  4383                           ;CAN.c: 39:     PIE3 = 0;
  4384  000C96  0E00               	movlw	0
  4385  000C98  6EA3               	movwf	4003,c	;volatile
  4386                           
  4387                           ; BSR set to: 14
  4388                           ;CAN.c: 40:     IPR3 = 0xFF;
  4389  000C9A  68A5               	setf	4005,c	;volatile
  4390                           
  4391                           ;CAN.c: 41:     PIR3 = 0x00;
  4392  000C9C  0E00               	movlw	0
  4393  000C9E  6EA4               	movwf	4004,c	;volatile
  4394                           
  4395                           ;CAN.c: 42:     BIE0 = 0;
  4396  000CA0  0E00               	movlw	0
  4397  000CA2  010D               	movlb	13	; () banked
  4398  000CA4  6FFA               	movwf	250,b	;volatile
  4399                           
  4400                           ;CAN.c: 45:     ECANCON = 0x90;
  4401  000CA6  0E90               	movlw	144
  4402  000CA8  6E77               	movwf	3959,c	;volatile
  4403                           
  4404                           ; BSR set to: 13
  4405                           ;CAN.c: 48:     CAN_SetupClock();
  4406  000CAA  EC92  F007         	call	_CAN_SetupClock	;wreg free
  4407                           
  4408                           ;CAN.c: 51:     CAN_SetupMask();
  4409  000CAE  EC03  F006         	call	_CAN_SetupMask	;wreg free
  4410                           
  4411                           ;CAN.c: 53:     CIOCON = 0xff;
  4412  000CB2  6873               	setf	3955,c	;volatile
  4413                           
  4414                           ;CAN.c: 59:     CANCON = 0x00;
  4415  000CB4  0E00               	movlw	0
  4416  000CB6  6E6F               	movwf	3951,c	;volatile
  4417  000CB8                     l2637:
  4418                           
  4419                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4420  000CB8  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4421  000CBC  0EE0               	movlw	224
  4422  000CBE  1606               	andwf	??_CAN_Setup,f,c
  4423  000CC0  B4D8               	btfsc	status,2,c
  4424  000CC2  0012               	return	
  4425  000CC4  D7F9               	goto	l2637
  4426  000CC6                     __end_of_CAN_Setup:
  4427                           	opt callstack 0
  4428                           
  4429 ;; *************** function _CAN_SetupMask *****************
  4430 ;; Defined at:
  4431 ;;		line 81 in file "CAN.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;Total ram usage:        0 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    3
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_CAN_Setup
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text33
  4460  000C06                     __ptext33:
  4461                           	opt callstack 0
  4462  000C06                     _CAN_SetupMask:
  4463                           	opt callstack 25
  4464                           
  4465                           ;CAN.c: 83:     MSEL0 = 0x50;
  4466                           
  4467                           ;incstack = 0
  4468  000C06  0E50               	movlw	80
  4469  000C08  010D               	movlb	13	; () banked
  4470  000C0A  6FF0               	movwf	240,b	;volatile
  4471                           
  4472                           ;CAN.c: 84:     MSEL1 = 0x55;
  4473  000C0C  0E55               	movlw	85
  4474  000C0E  6FF1               	movwf	241,b	;volatile
  4475                           
  4476                           ;CAN.c: 85:     MSEL2 = 0x55;
  4477  000C10  0E55               	movlw	85
  4478  000C12  6FF2               	movwf	242,b	;volatile
  4479                           
  4480                           ;CAN.c: 86:     MSEL3 = 0x55;
  4481  000C14  0E55               	movlw	85
  4482  000C16  6FF3               	movwf	243,b	;volatile
  4483                           
  4484                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4485  000C18  0E00               	movlw	0
  4486  000C1A  010F               	movlb	15	; () banked
  4487  000C1C  6F18               	movwf	24,b	;volatile
  4488                           
  4489                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4490  000C1E  0E0B               	movlw	11
  4491  000C20  6F19               	movwf	25,b	;volatile
  4492                           
  4493                           ; BSR set to: 15
  4494                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4495  000C22  691A               	setf	26,b	;volatile
  4496                           
  4497                           ; BSR set to: 15
  4498                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4499  000C24  691B               	setf	27,b	;volatile
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4503  000C26  691C               	setf	28,b	;volatile
  4504                           
  4505                           ; BSR set to: 15
  4506                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4507  000C28  691D               	setf	29,b	;volatile
  4508                           
  4509                           ;CAN.c: 97:     RXM1EIDH = 0;
  4510  000C2A  0E00               	movlw	0
  4511  000C2C  6F1E               	movwf	30,b	;volatile
  4512                           
  4513                           ;CAN.c: 98:     RXM1EIDL = 0;
  4514  000C2E  0E00               	movlw	0
  4515  000C30  6F1F               	movwf	31,b	;volatile
  4516                           
  4517                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4518  000C32  0E00               	movlw	0
  4519  000C34  6F00               	movwf	0,b	;volatile
  4520                           
  4521                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4522  000C36  0E01               	movlw	1
  4523  000C38  6F01               	movwf	1,b	;volatile
  4524                           
  4525                           ; BSR set to: 15
  4526                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4527  000C3A  8701               	bsf	1,3,b	;volatile
  4528                           
  4529                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4530  000C3C  503E               	movf	_DaneCan+3,w,c
  4531  000C3E  6F02               	movwf	2,b	;volatile
  4532                           
  4533                           ; BSR set to: 15
  4534                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4535  000C40  8D02               	bsf	2,6,b	;volatile
  4536                           
  4537                           ; BSR set to: 15
  4538                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4539  000C42  C03D  FF03         	movff	_DaneCan+2,3843	;volatile
  4540                           
  4541                           ; BSR set to: 15
  4542                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4543  000C46  0E00               	movlw	0
  4544  000C48  6F04               	movwf	4,b	;volatile
  4545                           
  4546                           ; BSR set to: 15
  4547                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4548  000C4A  0E01               	movlw	1
  4549  000C4C  6F05               	movwf	5,b	;volatile
  4550                           
  4551                           ; BSR set to: 15
  4552                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4553  000C4E  8705               	bsf	5,3,b	;volatile
  4554                           
  4555                           ; BSR set to: 15
  4556                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4557  000C50  0E7F               	movlw	127
  4558  000C52  6F06               	movwf	6,b	;volatile
  4559                           
  4560                           ; BSR set to: 15
  4561                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4562  000C54  6907               	setf	7,b	;volatile
  4563                           
  4564                           ; BSR set to: 15
  4565                           ;CAN.c: 115:     RXF2SIDH = 0;
  4566  000C56  0E00               	movlw	0
  4567  000C58  6F08               	movwf	8,b	;volatile
  4568                           
  4569                           ; BSR set to: 15
  4570                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4571  000C5A  0E20               	movlw	32
  4572  000C5C  6F09               	movwf	9,b	;volatile
  4573                           
  4574                           ; BSR set to: 15
  4575                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4576  000C5E  8709               	bsf	9,3,b	;volatile
  4577                           
  4578                           ; BSR set to: 15
  4579                           ;CAN.c: 118:     RXF2EIDH = 0;
  4580  000C60  0E00               	movlw	0
  4581  000C62  6F0A               	movwf	10,b	;volatile
  4582                           
  4583                           ; BSR set to: 15
  4584                           ;CAN.c: 119:     RXF2EIDL = 0;
  4585  000C64  0E00               	movlw	0
  4586  000C66  6F0B               	movwf	11,b	;volatile
  4587                           
  4588                           ; BSR set to: 15
  4589  000C68  0012               	return		;funcret
  4590  000C6A                     __end_of_CAN_SetupMask:
  4591                           	opt callstack 0
  4592                           
  4593 ;; *************** function _CAN_SetupClock *****************
  4594 ;; Defined at:
  4595 ;;		line 136 in file "CAN.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		None
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;Total ram usage:        0 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    3
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_CAN_Setup
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text34
  4624  000F24                     __ptext34:
  4625                           	opt callstack 0
  4626  000F24                     _CAN_SetupClock:
  4627                           	opt callstack 25
  4628                           
  4629                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4630                           
  4631                           ; BSR set to: 15
  4632                           ;incstack = 0
  4633  000F24  8070               	bsf	3952,0,c	;volatile
  4634                           
  4635                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4636  000F26  8270               	bsf	3952,1,c	;volatile
  4637                           
  4638                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4639  000F28  9470               	bcf	3952,2,c	;volatile
  4640                           
  4641                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4642  000F2A  9670               	bcf	3952,3,c	;volatile
  4643                           
  4644                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4645  000F2C  9870               	bcf	3952,4,c	;volatile
  4646                           
  4647                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4648  000F2E  9A70               	bcf	3952,5,c	;volatile
  4649                           
  4650                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4651  000F30  8C70               	bsf	3952,6,c	;volatile
  4652                           
  4653                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4654  000F32  8E70               	bsf	3952,7,c	;volatile
  4655                           
  4656                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4657  000F34  8671               	bsf	3953,3,c	;volatile
  4658                           
  4659                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4660  000F36  8871               	bsf	3953,4,c	;volatile
  4661                           
  4662                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4663  000F38  8A71               	bsf	3953,5,c	;volatile
  4664                           
  4665                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4666  000F3A  8471               	bsf	3953,2,c	;volatile
  4667                           
  4668                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4669  000F3C  9271               	bcf	3953,1,c	;volatile
  4670                           
  4671                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4672  000F3E  9071               	bcf	3953,0,c	;volatile
  4673                           
  4674                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4675  000F40  8072               	bsf	3954,0,c	;volatile
  4676                           
  4677                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4678  000F42  9272               	bcf	3954,1,c	;volatile
  4679                           
  4680                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  4681  000F44  8472               	bsf	3954,2,c	;volatile
  4682                           
  4683                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  4684  000F46  8C71               	bsf	3953,6,c	;volatile
  4685                           
  4686                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  4687  000F48  8E71               	bsf	3953,7,c	;volatile
  4688  000F4A  0012               	return		;funcret
  4689  000F4C                     __end_of_CAN_SetupClock:
  4690                           	opt callstack 0
  4691                           
  4692 ;; *************** function _ISR_low *****************
  4693 ;; Defined at:
  4694 ;;		line 16 in file "ISR.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;Total ram usage:        3 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    2
  4715 ;; This function calls:
  4716 ;;		_TMR1_Timer_reset
  4717 ;;		i1_TMR1_Update_flag_Set
  4718 ;; This function is called by:
  4719 ;;		Interrupt level 1
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	intcodelo
  4724  000018                     __pintcodelo:
  4725                           	opt callstack 0
  4726  000018                     _ISR_low:
  4727                           	opt callstack 24
  4728                           
  4729                           ;incstack = 0
  4730  000018  8054               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4731  00001A  CFD8 F003          	movff	status,??_ISR_low
  4732  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  4733  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  4734                           
  4735                           ;ISR.c: 21:     if(TMR1IF==1)
  4736  000026  A09E               	btfss	3998,0,c	;volatile
  4737  000028  D011               	goto	i1l581
  4738                           
  4739                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  4740  00002A  ECB9  F007         	call	_TMR1_Timer_reset	;wreg free
  4741                           
  4742                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  4743  00002E  0E00               	movlw	0
  4744  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  4745  000032  0E01               	movlw	1
  4746  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  4747  000036  EC24  F008         	call	i1_TMR1_Update_flag_Set	;wreg free
  4748                           
  4749                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  4750  00003A  803F               	bsf	_DetectorLedRadar,0,c
  4751                           
  4752                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  4753  00003C  2A48               	incf	ISR_low@ramkaStanuU8,f,c
  4754  00003E  0E14               	movlw	20
  4755  000040  6448               	cpfsgt	ISR_low@ramkaStanuU8,c
  4756  000042  D003               	goto	i1l2895
  4757                           
  4758                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  4759  000044  0E00               	movlw	0
  4760  000046  6E48               	movwf	ISR_low@ramkaStanuU8,c
  4761                           
  4762                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  4763  000048  803B               	bsf	_DaneCan,0,c
  4764  00004A                     i1l2895:
  4765                           
  4766                           ;ISR.c: 41:             TMR1IF=0;
  4767  00004A  909E               	bcf	3998,0,c	;volatile
  4768  00004C                     i1l581:
  4769  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  4770  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  4771  000054  C003  FFD8         	movff	??_ISR_low,status
  4772  000058  9054               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4773  00005A  0010               	retfie	
  4774  00005C                     __end_of_ISR_low:
  4775                           	opt callstack 0
  4776                           
  4777 ;; *************** function i1_TMR1_Update_flag_Set *****************
  4778 ;; Defined at:
  4779 ;;		line 32 in file "TMR1.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  a               2    0[COMRAM] unsigned int 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		None
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;Total ram usage:        2 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_ISR_low
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text36
  4808  001048                     __ptext36:
  4809                           	opt callstack 0
  4810  001048                     i1_TMR1_Update_flag_Set:
  4811                           	opt callstack 24
  4812                           
  4813                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4814                           
  4815                           ;incstack = 0
  4816  001048  C001  F042         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4817  00104C  C002  F043         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4818  001050  0012               	return		;funcret
  4819  001052                     __end_ofi1_TMR1_Update_flag_Set:
  4820                           	opt callstack 0
  4821                           
  4822 ;; *************** function _TMR1_Timer_reset *****************
  4823 ;; Defined at:
  4824 ;;		line 63 in file "TMR1.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  4829 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      unsigned char 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;Total ram usage:        2 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    1
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_ISR_low
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text37
  4854  000F72                     __ptext37:
  4855                           	opt callstack 0
  4856  000F72                     _TMR1_Timer_reset:
  4857                           	opt callstack 24
  4858                           
  4859                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  4860                           
  4861                           ;incstack = 0
  4862  000F72  0E00               	movlw	0
  4863  000F74  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  4864  000F76  0E00               	movlw	0
  4865  000F78  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  4866                           
  4867                           ;TMR1.c: 70:     t1L = TMR1L;
  4868  000F7A  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  4869                           
  4870                           ;TMR1.c: 71:     t1H = TMR1H;
  4871  000F7E  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  4872                           
  4873                           ;TMR1.c: 72:     __nop();
  4874  000F82  F000               	nop	
  4875                           
  4876                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4877  000F84  0E9E               	movlw	158
  4878  000F86  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  4879                           
  4880                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4881  000F88  0E57               	movlw	87
  4882  000F8A  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  4883                           
  4884                           ;TMR1.c: 75:     TMR1H = t1H;
  4885  000F8C  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  4886                           
  4887                           ;TMR1.c: 76:     TMR1L = 0x5B;
  4888  000F90  0E5B               	movlw	91
  4889  000F92  6ECE               	movwf	4046,c	;volatile
  4890  000F94  0012               	return		;funcret
  4891  000F96                     __end_of_TMR1_Timer_reset:
  4892                           	opt callstack 0
  4893                           
  4894 ;; *************** function _ISR_high *****************
  4895 ;; Defined at:
  4896 ;;		line 53 in file "ISR.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		None
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		Interrupt level 2
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	intcode
  4924  000008                     __pintcode:
  4925                           	opt callstack 0
  4926  000008                     _ISR_high:
  4927                           	opt callstack 24
  4928                           
  4929                           ;incstack = 0
  4930  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4931  00000A  ED36  F008         	call	int_func,f	;refresh shadow registers
  4932                           
  4933                           	psect	intcode_body
  4934  00106C                     __pintcode_body:
  4935                           	opt callstack 24
  4936  00106C                     int_func:
  4937                           	opt callstack 24
  4938  00106C  0006               	pop		; remove dummy address from shadow register refresh
  4939  00106E  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4940  001070  0011               	retfie		f
  4941  001072                     __end_of_ISR_high:
  4942                           	opt callstack 0
  4943  0000                     
  4944                           	psect	rparam
  4945  0000                     
  4946                           	psect	temp
  4947  000054                     btemp:
  4948                           	opt callstack 0
  4949  000054                     	ds	1
  4950  0000                     int$flags	set	btemp
  4951  0000                     wtemp8	set	btemp+1
  4952  0000                     ttemp5	set	btemp+1
  4953  0000                     ttemp6	set	btemp+4
  4954  0000                     ttemp7	set	btemp+8
  4955                           tosu	equ	0xFFF
  4956                           tosh	equ	0xFFE
  4957                           tosl	equ	0xFFD
  4958                           stkptr	equ	0xFFC
  4959                           pclatu	equ	0xFFB
  4960                           pclath	equ	0xFFA
  4961                           pcl	equ	0xFF9
  4962                           tblptru	equ	0xFF8
  4963                           tblptrh	equ	0xFF7
  4964                           tblptrl	equ	0xFF6
  4965                           tablat	equ	0xFF5
  4966                           prodh	equ	0xFF4
  4967                           prodl	equ	0xFF3
  4968                           indf0	equ	0xFEF
  4969                           postinc0	equ	0xFEE
  4970                           postdec0	equ	0xFED
  4971                           preinc0	equ	0xFEC
  4972                           plusw0	equ	0xFEB
  4973                           fsr0h	equ	0xFEA
  4974                           fsr0l	equ	0xFE9
  4975                           wreg	equ	0xFE8
  4976                           indf1	equ	0xFE7
  4977                           postinc1	equ	0xFE6
  4978                           postdec1	equ	0xFE5
  4979                           preinc1	equ	0xFE4
  4980                           plusw1	equ	0xFE3
  4981                           fsr1h	equ	0xFE2
  4982                           fsr1l	equ	0xFE1
  4983                           bsr	equ	0xFE0
  4984                           indf2	equ	0xFDF
  4985                           postinc2	equ	0xFDE
  4986                           postdec2	equ	0xFDD
  4987                           preinc2	equ	0xFDC
  4988                           plusw2	equ	0xFDB
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      83
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_AdressOfNeighbors->___wmul
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16499
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    9274
                                             36 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    7368
                                             31 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
            _FRAME_AdressOfNeighbors
       _FRAME_SensorExcitationStatus
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     538
                                             13 COMRAM     3     1      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        8     6      2     193
                                              5 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             20    16      4    2937
                                             11 COMRAM    20    16      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2199
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     360
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AdressOfNeighbors
         ___wmul
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0      66       6       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      53       1       88.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B9       3        0.0%
DATA                 0      0     2D9       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul 18 14:24:16 2019

                           ___awdiv@sign 000B                                       bsr 000FE0  
                    ___wmul@multiplicand 0008                              __CFG_BORV$3 000000  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                     __size_of_CAN_GenID 0094                                      l311 0756  
                                    l180 055A                                      l190 0074  
                                    l191 007A                                      l192 0080  
                                    l193 0086                                      l194 008C  
                                    l514 08EA                                      l283 0BDC  
                                    l195 0092                                      l179 055C  
                                    l515 08E2                                      l196 0098  
                                    l188 006E                                      l189 00DE  
                            ?_LED_Update 0001                             __CFG_CPB$OFF 000000  
                           __CFG_CPD$OFF 000000                                      u970 0DBC  
                     __size_of_CAN_Setup 005C                             ?_LED_Control 0006  
                                    wreg 000FE8                    __end_of_CAN_TakeFrame 02DC  
                            ?_INI_OUTPUT 0001                   __size_of_INI_LED_Start 0034  
                  __end_of_CAN_SendFrame 06AE                             __CFG_LVP$OFF 000000  
              TRM_DataTransmition@weWyU8 0047             __size_of_INI_GlobalInterrupt 000E  
                           __CFG_WDT$OFF 000000                                     l1145 0D68  
                                   l2221 06C0                                     l2311 07B6  
                                   l2207 0EFE                                     l2305 07A6  
                                   l2233 06E0                                     l2323 07D6  
                                   l2251 0710                                     l2227 06D0  
                                   l2317 07C6                                     l2245 0700  
                                   l2335 07F8                                     l2263 0730  
                                   l2239 06F0                                     l2329 07E6  
                                   l2281 0766                                     l2257 0720  
                                   l2521 0992                                     l2275 0750  
                        __end_of_INI_All 0FEC                                     l2293 0786  
                                   l2269 0740                                     l2605 0D36  
                                   l2701 0290                                     l2541 03EE  
                                   l2373 0DAC                                     l2623 0C6E  
                                   l2287 0776                                     l2607 0D3E  
                                   l2463 06A8                                     l2535 0308  
                                   l2367 0D7A                                     l2617 0D5E  
                                   l2705 0298                                     l2299 0796  
                                   l2483 0DF4                                     l2811 0BB8  
                                   l2563 0B1C                                     l2707 02D8  
                                   l2643 009E                                     l2459 05F4  
                                   l2547 03F6                                     l2637 0CB8  
                                   l2661 01B6                                     l2575 0B42  
                                   l2591 0B74                                     l2671 01DC  
                                   l2663 01BC                                     l2745 0A26  
                                   l2753 0A5C                                     l2577 0B4A  
                                   l2569 0B2C                                     l2673 01E4  
                                   l2665 01C4                                     l2499 0E84  
                                   l2747 0A30                                     l2739 09FA  
                                   l2595 0B82                                     l2587 0B6A  
                                   l2691 0268                                     l2667 01CC  
                                   l2659 01B0                                     l2683 0230  
                                   l2771 0836                                     l2827 0E36  
                                   l2693 0270                                     l2669 01D4  
                                   l2677 01EC                                     l2685 024A  
                                   l2695 0278                                     l2687 025C  
                                   l2679 022C                                     l2775 0850  
                                   l2697 0280                                     l2689 0262  
                                   l2777 0868                                     l2769 0828  
                                   l2699 0288                                     l2859 0ED2  
                                   l2869 0EF2                                     _BIE0 000DFA  
                      _MOC_Frame_Counter 1004                                     u1100 053E  
                                   u1025 05CA                                     u1140 0B4E  
                                   u1090 03EC                                     u1235 0148  
                                   u1180 0D42                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   u1280 0A64                                     _LATD 000F8C  
                                   _LATE 000F8D                                     _IPR3 000FA5  
                                   _IPEN 007E87                                     _PIE3 000FA3  
                                   _PEIE 007F96                                     _LOCK 004A  
                                   _PIR3 000FA4                                     _RCON 000FD0  
                                   _Dane 0044                          __end_of_ISR_low 005C  
                       LED_Control@diode 0006                       ?_MOC_Frame_Counter 0006  
                                   _main 0ECC                         LED_Control@color 000A  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   indf1 000FE7                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 0054                           _CAN_SetupClock 0F24  
                                   prodh 000FF4                                     prodl 000FF3  
                  __end_of_CAN_SetupMask 0C6A            __size_of_TMR1_Update_flag_Get 000A  
                                   start 005C            __size_of_TMR1_Update_flag_Set 000A  
                     __size_of_LED_Error 001E                            __CFG_IESO$OFF 000000  
                     __size_of_LED_Right 004C            __size_of_FRAME_HandleCanFrame 00F0  
                          _LED_Light_Pos 09C4                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000                      ??_MOC_Frame_Counter 0008  
                         IsInNeighbors@i 000C               ??_MOC_Aktualna_Temperatura 0008  
      FRAME_HandleCanFrame@identyfikator 0024                       __size_of_INI_Timer 0018  
                       __end_of_LED_Left 0E98                                    _B0CON 000E20  
                                  _B1CON 000E30                                    _B2CON 000E40  
                                  _B3CON 000E50                                    _B4CON 000E60  
                                  _B5CON 000E70                         __end_of_LOCK_Get 1076  
                                  ?_main 0001                         __end_of_LOCK_Set 106C  
                        __end_of___awdiv 0B8C                                    _BSEL0 000DF8  
                        ___awdiv@divisor 0008                                    _T1CON 000FCD  
                                  _IRCF0 007E9C                                    _IRCF1 007E9D  
                                  _IRCF2 007E9E                          __end_of___lwdiv 0D72  
                                  i1l581 004C                          ___awdiv@counter 000A  
                                  _MSEL0 000DF0                                    _MSEL1 000DF1  
                                  _MSEL2 000DF2                                    _MSEL3 000DF3  
                                  _TMR1H 000FCF                                    _TMR1L 000FCE  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                            __CFG_PWRT$OFF 000000  
                                  _Flagi 0036                   ?_CAN_MoveBuffIntoFrame 0006  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                         __end_of_ISR_high 1072  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                __end_of_MOC_Frame_Counter 1012  
                         __CFG_EBTRB$OFF 000000                  i1TMR1_Update_flag_Set@a 0001  
                           ?_MOC_NOTWORK 0006                                    tablat 000FF5  
                 __end_of_CAN_SetupClock 0F4C                                    ttemp5 0055  
                                  ttemp6 0058                                    ttemp7 005C  
                                  status 000FD8                                    wtemp8 0055  
                      __end_of_CAN_GenID 0B08                           __CFG_PBADEN$ON 000000  
                    __size_of_LED_Update 007A                           ?_LED_Light_Pos 000D  
                       _TMR1_Timer_reset 0F72                        __end_of_CAN_Setup 0CC6  
                          _INI_LED_Start 0E98                          __initialization 0CC6  
                    __size_of_INI_OUTPUT 001E                         CAN_GenID@frameID 0008  
                           __end_of_main 0EFA                 ?_FRAME_AdressOfNeighbors 000C  
                       CAN_GenID@message 0006                                   ??_main 0036  
                 CAN_MoveBuffIntoFrame@i 000A                            __activetblptr 000002  
                       _TMR1_Update_flag 0042                    __end_of_IsInNeighbors 0DC0  
                        _wartosciSasiada 00C6                                ??_INI_All 000B  
                      __end_of_LED_Error 0FB4                        __end_of_LED_Right 0E0C  
                              ??_ISR_low 0003                                   _CANCON 000F6F  
                       ___awdiv@dividend 0006                                   _CIOCON 000F73  
                        __CFG_BBSIZ$1024 000000                        __end_of_INI_Timer 1004  
                                 i1l2895 004A                          ?_CAN_SetupClock 0001  
                                 _RXB0D0 000F66                                   _TMR1IE 007CE8  
                                 _TMR1IF 007CF0                                   _TMR1IP 007CF8  
                                 _TMR1ON 007E68                           ?_INI_LED_Start 0001  
                         __CFG_XINST$OFF 000000                                   ___wmul 0F4C  
                              ??___awdiv 000A                           __CFG_STVREN$ON 000000  
                       LED_Light_Pos@pos 000D                                ??___lwdiv 000A  
                                 clear_0 0CEE                                   clear_1 0D00  
                                 clear_2 0D0C                         ___awdiv@quotient 000C  
               ??i1_TMR1_Update_flag_Set 0003                          __CFG_BOREN$BOHW 000000  
                           __pdataCOMRAM 004B                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
             __size_of_MOC_Frame_Counter 000E                     __size_of_LED_Control 0152  
                  TMR1_Update_flag_Set@a 0006                               __accesstop 0060  
                __end_of__initialization 0D12                      ISR_low@ramkaStanuU8 0048  
                              ?_LED_Left 0006                          ??_LED_Light_Pos 0011  
                          ___rparam_used 000001                                ?_LOCK_Get 0001  
                              ?_LOCK_Set 0001          __end_of_FRAME_AdressOfNeighbors 0540  
                         __pcstackCOMRAM 0001                                LED_Left@a 0006  
                              LED_Left@b 0008                      _INI_GlobalInterrupt 1012  
                              ?_ISR_high 0001                             ??_LED_Update 0018  
            __end_of_TRM_DataTransmition 0E56                             ??_INI_OUTPUT 0006  
                              LOCK_Set@k 0006              IsInNeighbors@message_adress 0006  
                   ?_INI_GlobalInterrupt 0001                               __pbssBANK0 0060  
                   __size_of_MOC_NOTWORK 0008                          ??_INI_LED_Start 000B  
                             ??_LED_Left 0008                               ??_LOCK_Get 0006  
                             ??_LOCK_Set 0006                       __end_of_LED_Update 0C06  
                     __end_of_INI_OUTPUT 0FD2                                  ?___wmul 0006  
                             ??_ISR_high 0001                      TMR1_Timer_reset@t1H 0002  
                    TMR1_Timer_reset@t1L 0001                                  _ECANCON 000F77  
                                _CANSTAT 000F6E                  ??_CAN_MoveBuffIntoFrame 000A  
           __end_of_TMR1_Update_flag_Get 1048             __end_of_TMR1_Update_flag_Set 103E  
        __size_ofi1_TMR1_Update_flag_Set 000A             __end_of_FRAME_HandleCanFrame 08F0  
                                _INI_All 0FD2                 __end_of_TMR1_Timer_reset 0F96  
                                _RXB0DLC 000F65                                  _RXB0CON 000F60  
                                _RXB1CON 000F50                    ??_INI_GlobalInterrupt 0006  
                                _TXB0CON 000F40                                  _ISR_low 0018  
                                _DaneCan 003B              FRAME_HandleCanFrame@message 0020  
                                __Hparam 0000         ??_MOC_Wynikowa_wartosc_roznicowa 0008  
        ?_MOC_Wynikowa_wartosc_roznicowa 0006                                  __Lparam 0000  
                 __size_of_CAN_TakeFrame 027C                                _CAN_GenID 0A74  
                                ___awdiv 0B08                                _CAN_Setup 0C6A  
                        __size_of___wmul 0026                   __size_of_CAN_SendFrame 016E  
                                ___lwdiv 0D20                        LED_Light_Pos@pos2 0014  
                                __pcinit 0CC6                                  __ramtop 0D00  
                                __ptext0 0ECC                                  __ptext1 0E0C  
                                __ptext2 0800                                  __ptext3 0F96  
                                __ptext4 08F0                                  __ptext5 1020  
                                __ptext6 105C                                  __ptext7 1004  
                                __ptext8 102A                                  __ptext9 1064  
                 __size_of_CAN_SetupMask 0064        __size_of_MOC_Aktualna_Temperatura 000A  
         FRAME_AdressOfNeighbors@nrRamki 000E                ?_MOC_Aktualna_Temperatura 0006  
       __size_of_FRAME_AdressOfNeighbors 0264                         ??_CAN_SetupClock 0006  
         FRAME_AdressOfNeighbors@message 000C                                _LED_Error 0F96  
                         __pintcode_body 106C                                _LED_Right 0DC0  
                   end_of_initialization 0D12                            __Lmediumconst 0000  
                                int_func 106C                                _INI_Timer 0FEC  
                 i1_TMR1_Update_flag_Set 1048         TRM_DataTransmition@czujnikWeWyU8 0046  
                             ?_CAN_GenID 0006                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                             ?_CAN_Setup 0001                     CAN_SendFrame@message 000B  
                          LED_Update@Red 0049                            _CAN_TakeFrame 0060  
                          _CAN_SendFrame 0540                               ?_LED_Error 0001  
                             ?_LED_Right 0006                               ?_INI_Timer 0001  
                        _ramkaCanRxKarty 0060                     _TMR1_Update_flag_Get 103E  
                        _ramkaCanTxKarty 00B5                     _TMR1_Update_flag_Set 1034  
                          _CAN_SetupMask 0C06                        __size_of_LED_Left 0042  
                   _FRAME_HandleCanFrame 0800                   __size_of_IsInNeighbors 004E  
                      __size_of_LOCK_Get 0004                        __size_of_LOCK_Set 0008  
                         CAN_TakeFrame@k 0013                           __end_of___wmul 0F72  
                          __pidataCOMRAM 1052                        __size_of_ISR_high 106A  
                             LED_Right@a 0006                               LED_Right@b 000A  
                  MOC_Frame_Counter@zeta 004B                            ??_LED_Control 0008  
                    start_initialization 0CC6                           ?_CAN_TakeFrame 000E  
                         ?_CAN_SendFrame 000B                         __CFG_OSC$IRCIO67 000000  
                  ?_TMR1_Update_flag_Get 0006                    ?_TMR1_Update_flag_Set 0006  
                         ?_CAN_SetupMask 0001                    __end_of_LED_Light_Pos 0A74  
                  ?_FRAME_HandleCanFrame 0020                              ??_CAN_GenID 0009  
                               ??___wmul 000A                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                 CAN_MoveBuffIntoFrame@Buf 0008  
   __end_of_FRAME_SensorExcitationStatus 09C4    __size_of_FRAME_SensorExcitationStatus 00D4  
               CAN_MoveBuffIntoFrame@Ram 0006             _FRAME_SensorExcitationStatus 08F0  
         __size_of_CAN_MoveBuffIntoFrame 002A                              __pbssBIGRAM 00C6  
          __end_of_CAN_MoveBuffIntoFrame 0F24                          _Fulfillment_Lvl 0051  
                            __pbssCOMRAM 0036                                 ?_INI_All 0001  
                _FRAME_AdressOfNeighbors 02DC                            _IsInNeighbors 0D72  
                      ?_TMR1_Timer_reset 0001                              _BRGCON1bits 000F70  
                            _BRGCON2bits 000F71                              _BRGCON3bits 000F72  
                               ?_ISR_low 0001                            ??_MOC_NOTWORK 0008  
                     ??_TMR1_Timer_reset 0001                              ??_LED_Error 000B  
                            ??_LED_Right 0008             __size_of_TRM_DataTransmition 004A  
               FRAME_AdressOfNeighbors@i 001E                      __end_of_LED_Control 0800  
                            ??_INI_Timer 0006                    __end_of_INI_LED_Start 0ECC  
                       ___lwdiv@dividend 0006                                __pintcode 0008  
                               ?___awdiv 0006         __end_of_MOC_Aktualna_Temperatura 1034  
                               ?___lwdiv 0006                              __pintcodelo 0018  
            __end_of_INI_GlobalInterrupt 1020                          ??_CAN_TakeFrame 0010  
          ?_FRAME_SensorExcitationStatus 000E   __end_of_MOC_Wynikowa_wartosc_roznicowa 102A  
__size_of_MOC_Wynikowa_wartosc_roznicowa 000A           _MOC_Wynikowa_wartosc_roznicowa 1020  
                            _COMSTATbits 000F74                           ?_IsInNeighbors 0006  
                        ??_CAN_SendFrame 000D                         ___lwdiv@quotient 000A  
                ?i1_TMR1_Update_flag_Set 0001                   ??_TMR1_Update_flag_Get 0008  
                 ??_TMR1_Update_flag_Set 0008                          ??_CAN_SetupMask 0006  
                         ___wmul@product 000A                                 _LED_Left 0E56  
                 ??_FRAME_HandleCanFrame 0022                     CAN_TakeFrame@message 000E  
                    __end_of_MOC_NOTWORK 1064                                 _LOCK_Get 1072  
                   CAN_TakeFrame@tempCON 0012                                 _LOCK_Set 1064  
                               _RXB0EIDH 000F63                                 _RXB0EIDL 000F64  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                               _RXB0SIDH 000F61                                 _RXB0SIDL 000F62  
                               _RXF0EIDH 000F02                                 _RXF0EIDL 000F03  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXF2EIDH 000F0A                                 _RXF2EIDL 000F0B  
                               _RXF0SIDH 000F00                                 _RXF0SIDL 000F01  
                               _RXF1SIDH 000F04                                 _RXF1SIDL 000F05  
                               _RXF2SIDH 000F08                                 _RXF2SIDL 000F09  
                               _ISR_high 0008                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                                 _RXM1EIDH 000F1E  
                               _RXM1EIDL 000F1F                                 _RXM0SIDH 000F18  
                               _RXM0SIDL 000F19                                 _RXM1SIDH 000F1C  
                               _RXM1SIDL 000F1D                ??_FRAME_AdressOfNeighbors 0010  
                      ___wmul@multiplier 0006                         _DetectorLedRadar 003F  
                            _LED_Control 06AE                         __size_of_INI_All 001A  
         __end_ofi1_TMR1_Update_flag_Set 1052                                copy_data0 0CDA  
                       __size_of_ISR_low 0044                                 __Hrparam 0000  
                           _RXB0SIDLbits 000F62                                 __Lrparam 0000  
                       __size_of___awdiv 0084                         __size_of___lwdiv 0052  
                        ??_IsInNeighbors 0008                 _MOC_Aktualna_Temperatura 102A  
                     LED_Light_Pos@flage 0016                       LED_Light_Pos@color 0011  
                           _RXF0SIDLbits 000F01                          ___lwdiv@divisor 0008  
                           _RXF1SIDLbits 000F05                          ___lwdiv@counter 000C  
                               __ptext10 1072                                 __ptext11 0D72  
                               __ptext20 103E                                 __ptext12 02DC  
                               __ptext21 0B8C                                 __ptext13 0F4C  
                               __ptext30 06AE                                 __ptext22 09C4  
                               __ptext14 0540                                 __ptext31 1012  
                               __ptext23 0D20                                 __ptext15 0A74  
                               __ptext32 0C6A                                 __ptext24 0DC0  
                               __ptext16 0060                                 __ptext33 0C06  
                               __ptext25 0E56                                 __ptext17 0B08  
                               __ptext34 0F24                                 __ptext26 0FD2  
                               __ptext18 0EFA                                 __ptext27 0FEC  
                               __ptext19 1034                                 __ptext36 1048  
                               __ptext28 0FB4           ??_FRAME_SensorExcitationStatus 0010  
                               __ptext37 0F72                                 __ptext29 0E98  
          TRM_DataTransmition@canMessage 0025                             _RXF2SIDLbits 000F09  
                            _MOC_NOTWORK 105C                            __size_of_main 002E  
                __size_of_CAN_SetupClock 0028                                 int$flags 0054  
                    _TRM_DataTransmition 0E0C                              _RXB0DLCbits 000F65  
                             _LED_Update 0B8C                              _RXB0CONbits 000F60  
                             _INTCONbits 000FF2                               _INI_OUTPUT 0FB4  
                   ?_TRM_DataTransmition 0001                                 intlevel1 0000  
                               intlevel2 0000      FRAME_SensorExcitationStatus@message 000E  
                            _TXB0CONbits 000F40                __size_of_TMR1_Timer_reset 0024  
               LED_Light_Pos@fulfillment 000F                          LED_Update@Green 0053  
                 __size_of_LED_Light_Pos 00B0                    _CAN_MoveBuffIntoFrame 0EFA  
                             _WDTCONbits 000FD1                    ??_TRM_DataTransmition 0025  
                 LED_Light_Pos@LED_array 0012                           LED_Update@pos1 004F  
                         LED_Update@pos2 004D  
