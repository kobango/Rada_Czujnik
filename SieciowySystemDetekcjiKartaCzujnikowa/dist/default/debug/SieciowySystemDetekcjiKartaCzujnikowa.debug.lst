

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 23 14:34:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4680 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  00162C                     __pidataCOMRAM:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for MOC_Frame_Counter@zeta
   112  00162C  0011               	dw	17
   113                           
   114                           ;initializer for LED_Update@pos2
   115  00162E  0001               	dw	1
   116                           
   117                           ;initializer for LED_Update@pos1
   118  001630  0001               	dw	1
   119                           
   120                           ;initializer for _Fulfillment_Lvl
   121  001632  0014               	dw	20
   122                           
   123                           ;initializer for LED_Update@Green
   124  001634  01                 	db	1
   125  0000                     _RXFCON0	set	3540
   126  0000                     _MSEL3	set	3571
   127  0000                     _MSEL2	set	3570
   128  0000                     _MSEL1	set	3569
   129  0000                     _MSEL0	set	3568
   130  0000                     _BIE0	set	3578
   131  0000                     _BSEL0	set	3576
   132  0000                     _B5CON	set	3696
   133  0000                     _B4CON	set	3680
   134  0000                     _B3CON	set	3664
   135  0000                     _B2CON	set	3648
   136  0000                     _B1CON	set	3632
   137  0000                     _B0CON	set	3616
   138  0000                     _TXB0CONbits	set	3904
   139  0000                     _RXF3EIDL	set	3855
   140  0000                     _RXF3EIDH	set	3854
   141  0000                     _RXF3SIDL	set	3853
   142  0000                     _RXF3SIDH	set	3852
   143  0000                     _RXF2EIDL	set	3851
   144  0000                     _RXF2EIDH	set	3850
   145  0000                     _RXF2SIDLbits	set	3849
   146  0000                     _RXF2SIDL	set	3849
   147  0000                     _RXF2SIDH	set	3848
   148  0000                     _RXF1EIDL	set	3847
   149  0000                     _RXF1EIDH	set	3846
   150  0000                     _RXF1SIDLbits	set	3845
   151  0000                     _RXF1SIDL	set	3845
   152  0000                     _RXF1SIDH	set	3844
   153  0000                     _RXF0EIDL	set	3843
   154  0000                     _RXF0EIDH	set	3842
   155  0000                     _RXF0SIDLbits	set	3841
   156  0000                     _RXF0SIDL	set	3841
   157  0000                     _RXF0SIDH	set	3840
   158  0000                     _RXM1EIDL	set	3871
   159  0000                     _RXM1EIDH	set	3870
   160  0000                     _RXM1SIDL	set	3869
   161  0000                     _RXM1SIDH	set	3868
   162  0000                     _RXM0EIDL	set	3867
   163  0000                     _RXM0EIDH	set	3866
   164  0000                     _RXM0SIDL	set	3865
   165  0000                     _RXM0SIDH	set	3864
   166  0000                     _RXB1CON	set	3920
   167  0000                     _TXB0CON	set	3904
   168  0000                     _TRISC	set	3988
   169  0000                     _LATC	set	3979
   170  0000                     _LATE	set	3981
   171  0000                     _LATA	set	3977
   172  0000                     _LATB	set	3978
   173  0000                     _LATD	set	3980
   174  0000                     _TRISD	set	3989
   175  0000                     _TRISE	set	3990
   176  0000                     _TRISB	set	3987
   177  0000                     _TRISA	set	3986
   178  0000                     _RXB0DLCbits	set	3941
   179  0000                     _RXB0DLC	set	3941
   180  0000                     _RXB0SIDH	set	3937
   181  0000                     _RXB0SIDLbits	set	3938
   182  0000                     _RXB0SIDL	set	3938
   183  0000                     _RXB0EIDH	set	3939
   184  0000                     _RXB0EIDL	set	3940
   185  0000                     _COMSTATbits	set	3956
   186  0000                     _RXB0CONbits	set	3936
   187  0000                     _BRGCON3bits	set	3954
   188  0000                     _BRGCON2bits	set	3953
   189  0000                     _BRGCON1bits	set	3952
   190  0000                     _CIOCON	set	3955
   191  0000                     _ECANCON	set	3959
   192  0000                     _RXB0CON	set	3936
   193  0000                     _CANSTAT	set	3950
   194  0000                     _CANCON	set	3951
   195  0000                     _RXB0D0	set	3942
   196  0000                     _WDTCONbits	set	4049
   197  0000                     _RCONbits	set	4048
   198  0000                     _T1CON	set	4045
   199  0000                     _TMR1H	set	4047
   200  0000                     _TMR1L	set	4046
   201  0000                     _PIR3	set	4004
   202  0000                     _IPR3	set	4005
   203  0000                     _PIE3	set	4003
   204  0000                     _RCON	set	4048
   205  0000                     _TMR1IF	set	31984
   206  0000                     _TMR1IP	set	31992
   207  0000                     _IPEN	set	32391
   208  0000                     _TMR1ON	set	32360
   209  0000                     _TMR1IE	set	31976
   210  0000                     _IRCF0	set	32412
   211  0000                     _IRCF1	set	32413
   212  0000                     _IRCF2	set	32414
   213  0000                     _INTCONbits	set	4082
   214  0000                     _PEIE	set	32662
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  00114E                     __pcinit:
   220                           	opt callstack 0
   221  00114E                     start_initialization:
   222                           	opt callstack 0
   223  00114E                     __initialization:
   224                           	opt callstack 0
   225                           
   226                           ; Initialize objects allocated to COMRAM (9 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228  00114E  0E2C               	movlw	low __pidataCOMRAM
   229  001150  6EF6               	movwf	tblptrl,c
   230  001152  0E16               	movlw	high __pidataCOMRAM
   231  001154  6EF7               	movwf	tblptrh,c
   232  001156  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233  001158  6EF8               	movwf	tblptru,c
   234  00115A  EE00  F041         	lfsr	0,__pdataCOMRAM
   235  00115E  EE10 F009          	lfsr	1,9
   236  001162                     copy_data0:
   237  001162  0009               	tblrd		*+
   238  001164  CFF5 FFEE          	movff	tablat,postinc0
   239  001168  50E5               	movf	postdec1,w,c
   240  00116A  50E1               	movf	fsr1l,w,c
   241  00116C  E1FA               	bnz	copy_data0
   242                           
   243                           ; Clear objects allocated to BIGRAM (544 bytes)
   244  00116E  EE00  F0DC         	lfsr	0,__pbssBIGRAM
   245  001172  EE12 F020          	lfsr	1,544
   246  001176                     clear_0:
   247  001176  6AEE               	clrf	postinc0,c
   248  001178  50E5               	movf	postdec1,w,c
   249  00117A  50E1               	movf	fsr1l,w,c
   250  00117C  E1FC               	bnz	clear_0
   251  00117E  50E2               	movf	fsr1h,w,c
   252  001180  E1FA               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (107 bytes)
   255  001182  EE00  F060         	lfsr	0,__pbssBANK0
   256  001186  0E6B               	movlw	107
   257  001188                     clear_1:
   258  001188  6AEE               	clrf	postinc0,c
   259  00118A  06E8               	decf	wreg,f,c
   260  00118C  E1FD               	bnz	clear_1
   261                           
   262                           ; Clear objects allocated to COMRAM (32 bytes)
   263  00118E  EE00  F001         	lfsr	0,__pbssCOMRAM
   264  001192  0E20               	movlw	32
   265  001194                     clear_2:
   266  001194  6AEE               	clrf	postinc0,c
   267  001196  06E8               	decf	wreg,f,c
   268  001198  E1FD               	bnz	clear_2
   269  00119A                     end_of_initialization:
   270                           	opt callstack 0
   271  00119A                     __end_of__initialization:
   272                           	opt callstack 0
   273  00119A  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274  00119C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275  00119E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  0011A0  6EF8               	movwf	tblptru,c
   277  0011A2  0100               	movlb	0
   278  0011A4  EF43  F00A         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281  000001                     __pbssCOMRAM:
   282                           	opt callstack 0
   283  000001                     _DaneCan:
   284                           	opt callstack 0
   285  000001                     	ds	4
   286  000005                     _DetectorLedRadar:
   287                           	opt callstack 0
   288  000005                     	ds	3
   289  000008                     _NeightAdress8:
   290                           	opt callstack 0
   291  000008                     	ds	2
   292  00000A                     _NeightAdress7:
   293                           	opt callstack 0
   294  00000A                     	ds	2
   295  00000C                     _NeightAdress6:
   296                           	opt callstack 0
   297  00000C                     	ds	2
   298  00000E                     _NeightAdress5:
   299                           	opt callstack 0
   300  00000E                     	ds	2
   301  000010                     _NeightAdress4:
   302                           	opt callstack 0
   303  000010                     	ds	2
   304  000012                     _NeightAdress3:
   305                           	opt callstack 0
   306  000012                     	ds	2
   307  000014                     _NeightAdress2:
   308                           	opt callstack 0
   309  000014                     	ds	2
   310  000016                     _NeightAdress1:
   311                           	opt callstack 0
   312  000016                     	ds	2
   313  000018                     _TMR1_Update_flag:
   314                           	opt callstack 0
   315  000018                     	ds	2
   316  00001A                     _Dane:
   317                           	opt callstack 0
   318  00001A                     	ds	2
   319  00001C                     	ds	1
   320  00001D                     	ds	1
   321  00001E                     ISR_low@ramkaStanuU8:
   322                           	opt callstack 0
   323  00001E                     	ds	1
   324  00001F                     	ds	1
   325  000020                     _LOCK:
   326                           	opt callstack 0
   327  000020                     	ds	1
   328                           
   329                           	psect	dataCOMRAM
   330  000041                     __pdataCOMRAM:
   331                           	opt callstack 0
   332  000041                     MOC_Frame_Counter@zeta:
   333                           	opt callstack 0
   334  000041                     	ds	2
   335  000043                     LED_Update@pos2:
   336                           	opt callstack 0
   337  000043                     	ds	2
   338  000045                     LED_Update@pos1:
   339                           	opt callstack 0
   340  000045                     	ds	2
   341  000047                     _Fulfillment_Lvl:
   342                           	opt callstack 0
   343  000047                     	ds	2
   344  000049                     LED_Update@Green:
   345                           	opt callstack 0
   346  000049                     	ds	1
   347                           
   348                           	psect	bssBANK0
   349  000060                     __pbssBANK0:
   350                           	opt callstack 0
   351  000060                     _ramkaCanRxKarty:
   352                           	opt callstack 0
   353  000060                     	ds	85
   354  0000B5                     _ramkaCanTxKarty:
   355                           	opt callstack 0
   356  0000B5                     	ds	17
   357  0000C6                     _Flagi:
   358                           	opt callstack 0
   359  0000C6                     	ds	5
   360                           
   361                           	psect	bssBIGRAM
   362  0000DC                     __pbssBIGRAM:
   363                           	opt callstack 0
   364  0000DC                     _wartosciSasiada:
   365                           	opt callstack 0
   366  0000DC                     	ds	544
   367                           
   368                           	psect	cstackBANK0
   369  0000CB                     __pcstackBANK0:
   370                           	opt callstack 0
   371  0000CB                     TRM_DataTransmition@canMessage:
   372                           	opt callstack 0
   373                           
   374                           ; 17 bytes @ 0x0
   375  0000CB                     	ds	17
   376                           
   377                           	psect	cstackCOMRAM
   378  000021                     __pcstackCOMRAM:
   379                           	opt callstack 0
   380  000021                     TMR1_Timer_reset@t1L:
   381                           	opt callstack 0
   382  000021                     i1TMR1_Update_flag_Set@a:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x0
   386  000021                     	ds	1
   387  000022                     TMR1_Timer_reset@t1H:
   388                           	opt callstack 0
   389                           
   390                           ; 1 bytes @ 0x1
   391  000022                     	ds	1
   392  000023                     ??_ISR_low:
   393  000023                     
   394                           ; 1 bytes @ 0x2
   395  000023                     	ds	3
   396  000026                     ??_CAN_Setup:
   397  000026                     ?_TMR1_Update_flag_Get:
   398                           	opt callstack 0
   399  000026                     ?_LED_Right:
   400                           	opt callstack 0
   401  000026                     ?_LED_Left:
   402                           	opt callstack 0
   403  000026                     ?_MOC_Wynikowa_wartosc_roznicowa:
   404                           	opt callstack 0
   405  000026                     ?_MOC_Frame_Counter:
   406                           	opt callstack 0
   407  000026                     ?_MOC_Aktualna_Temperatura:
   408                           	opt callstack 0
   409  000026                     ?_MOC_NOTWORK:
   410                           	opt callstack 0
   411  000026                     ?_MOCK_PrzyspieszenieX:
   412                           	opt callstack 0
   413  000026                     ?_MOCK_PrzyspieszenieY:
   414                           	opt callstack 0
   415  000026                     ?_MOCK_PrzyspieszenieZ:
   416                           	opt callstack 0
   417  000026                     ?_MOCK_Klikniecie_Spadek:
   418                           	opt callstack 0
   419  000026                     ?___awdiv:
   420                           	opt callstack 0
   421  000026                     ?___lwdiv:
   422                           	opt callstack 0
   423  000026                     LOCK_Set@k:
   424                           	opt callstack 0
   425  000026                     CAN_MoveBuffIntoFrame@Ram:
   426                           	opt callstack 0
   427  000026                     CAN_GenID@message:
   428                           	opt callstack 0
   429  000026                     LED_Right@a:
   430                           	opt callstack 0
   431  000026                     LED_Left@a:
   432                           	opt callstack 0
   433  000026                     LED_Control@diode:
   434                           	opt callstack 0
   435  000026                     TMR1_Update_flag_Set@a:
   436                           	opt callstack 0
   437  000026                     IsInNeighbors@message_adress:
   438                           	opt callstack 0
   439  000026                     FRAME_ExcitationValue@message:
   440                           	opt callstack 0
   441  000026                     FRAME_ExcitationMultiplier@message:
   442                           	opt callstack 0
   443  000026                     FRAME_AveragingTimes@message:
   444                           	opt callstack 0
   445  000026                     FRAME_AxisStatus@message:
   446                           	opt callstack 0
   447  000026                     FRAME_DeviceReset@message:
   448                           	opt callstack 0
   449  000026                     FRAME_MapPosition@message:
   450                           	opt callstack 0
   451  000026                     FRAME_SoftwareVersion@message:
   452                           	opt callstack 0
   453  000026                     FRAME_AnalogValue@message:
   454                           	opt callstack 0
   455  000026                     FRAME_PrzypisanieDokarty@message:
   456                           	opt callstack 0
   457  000026                     FRAME_AdressOfNeighbors@message:
   458                           	opt callstack 0
   459  000026                     ___awdiv@dividend:
   460                           	opt callstack 0
   461  000026                     ___lwdiv@dividend:
   462                           	opt callstack 0
   463                           
   464                           ; 2 bytes @ 0x5
   465  000026                     	ds	2
   466  000028                     ??_LED_Right:
   467  000028                     CAN_GenID@frameID:
   468                           	opt callstack 0
   469  000028                     CAN_MoveBuffIntoFrame@Buf:
   470                           	opt callstack 0
   471  000028                     LED_Left@b:
   472                           	opt callstack 0
   473  000028                     FRAME_AccelerometerStatus@message:
   474                           	opt callstack 0
   475  000028                     FRAME_AnalogValue@set:
   476                           	opt callstack 0
   477  000028                     FRAME_AdressOfNeighbors@nrRamki:
   478                           	opt callstack 0
   479  000028                     ___awdiv@divisor:
   480                           	opt callstack 0
   481  000028                     ___lwdiv@divisor:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x7
   485  000028                     	ds	1
   486  000029                     ??_CAN_GenID:
   487  000029                     FRAME_ExcitationMultiplier@i:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x8
   491  000029                     	ds	1
   492  00002A                     ??_FRAME_AdressOfNeighbors:
   493  00002A                     CAN_MoveBuffIntoFrame@i:
   494                           	opt callstack 0
   495  00002A                     LED_Control@color:
   496                           	opt callstack 0
   497  00002A                     ___awdiv@counter:
   498                           	opt callstack 0
   499  00002A                     ___lwdiv@counter:
   500                           	opt callstack 0
   501  00002A                     LED_Right@b:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x9
   505  00002A                     	ds	1
   506  00002B                     ___awdiv@sign:
   507                           	opt callstack 0
   508  00002B                     CAN_SendFrame@message:
   509                           	opt callstack 0
   510  00002B                     FRAME_SensorExcitationStatus@message:
   511                           	opt callstack 0
   512  00002B                     ___lwdiv@quotient:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0xA
   516  00002B                     	ds	1
   517  00002C                     ___awdiv@quotient:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0xB
   521  00002C                     	ds	1
   522  00002D                     ??_CAN_SendFrame:
   523  00002D                     LED_Light_Pos@pos:
   524                           	opt callstack 0
   525  00002D                     FRAME_Plot@message:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0xC
   529  00002D                     	ds	1
   530  00002E                     CAN_TakeFrame@message:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0xD
   534  00002E                     	ds	1
   535  00002F                     ??_FRAME_Plot:
   536  00002F                     LED_Light_Pos@fulfillment:
   537                           	opt callstack 0
   538  00002F                     FRAME_SensorExcitationStatus@iterator_beta:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0xE
   542  00002F                     	ds	1
   543  000030                     ??_CAN_TakeFrame:
   544                           
   545                           ; 1 bytes @ 0xF
   546  000030                     	ds	1
   547  000031                     LED_Light_Pos@color:
   548                           	opt callstack 0
   549                           
   550                           ; 1 bytes @ 0x10
   551  000031                     	ds	1
   552  000032                     CAN_TakeFrame@tempCON:
   553                           	opt callstack 0
   554  000032                     LED_Light_Pos@LED_array:
   555                           	opt callstack 0
   556  000032                     FRAME_AdressOfNeighbors@uranos:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x11
   560  000032                     	ds	1
   561  000033                     CAN_TakeFrame@k:
   562                           	opt callstack 0
   563                           
   564                           ; 1 bytes @ 0x12
   565  000033                     	ds	1
   566  000034                     LED_Light_Pos@pos2:
   567                           	opt callstack 0
   568  000034                     FRAME_AdressOfNeighbors@gaja:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x13
   572  000034                     	ds	2
   573  000036                     LED_Light_Pos@flage:
   574                           	opt callstack 0
   575  000036                     FRAME_AdressOfNeighbors@kier:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x15
   579  000036                     	ds	2
   580  000038                     FRAME_HandleCanFrame@message:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x17
   584  000038                     	ds	2
   585  00003A                     ??_FRAME_HandleCanFrame:
   586                           
   587                           ; 1 bytes @ 0x19
   588  00003A                     	ds	4
   589  00003E                     FRAME_HandleCanFrame@ident:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x1D
   593  00003E                     	ds	2
   594  000040                     FRAME_HandleCanFrame@identyfikator:
   595                           	opt callstack 0
   596                           
   597                           ; 1 bytes @ 0x1F
   598  000040                     	ds	1
   599  000041                     
   600                           ; 1 bytes @ 0x20
   601 ;;
   602 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   603 ;;
   604 ;; *************** function _main *****************
   605 ;; Defined at:
   606 ;;		line 94 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   624 ;;Total ram usage:        0 bytes
   625 ;; Hardware stack levels required when called:    8
   626 ;; This function calls:
   627 ;;		_INI_All
   628 ;;		_LED_Update
   629 ;;		_TMR1_Update_flag_Get
   630 ;;		_TMR1_Update_flag_Set
   631 ;;		_TRM_DataTransmition
   632 ;; This function is called by:
   633 ;;		Startup code after reset
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text0
   638  001486                     __ptext0:
   639                           	opt callstack 0
   640  001486                     _main:
   641                           	opt callstack 23
   642                           
   643                           ;main.c: 96:     INI_All();
   644                           
   645                           ;incstack = 0
   646  001486  ECC2  F00A         	call	_INI_All	;wreg free
   647                           
   648                           ;main.c: 98:     RCON = 0xFF;
   649  00148A  68D0               	setf	4048,c	;volatile
   650  00148C                     l3996:
   651                           
   652                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   653  00148C  B005               	btfsc	_DetectorLedRadar,0,c
   654                           
   655                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   656  00148E  9005               	bcf	_DetectorLedRadar,0,c
   657                           
   658                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   659  001490  EC0C  F00B         	call	_TMR1_Update_flag_Get	;wreg free
   660  001494  0426               	decf	?_TMR1_Update_flag_Get,w,c
   661  001496  1027               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   662  001498  A4D8               	btfss	status,2,c
   663  00149A  D008               	goto	l4006
   664                           
   665                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   666  00149C  EC92  F007         	call	_LED_Update	;wreg free
   667                           
   668                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   669  0014A0  0E00               	movlw	0
   670  0014A2  6E27               	movwf	TMR1_Update_flag_Set@a+1,c
   671  0014A4  0E00               	movlw	0
   672  0014A6  6E26               	movwf	TMR1_Update_flag_Set@a,c
   673  0014A8  EC07  F00B         	call	_TMR1_Update_flag_Set	;wreg free
   674  0014AC                     l4006:
   675                           
   676                           ;main.c: 115:         TRM_DataTransmition();
   677  0014AC  EC50  F009         	call	_TRM_DataTransmition	;wreg free
   678  0014B0  0004               	clrwdt		;# 
   679                           
   680                           ;main.c: 117:     }
   681  0014B2  D7EC               	goto	l3996
   682  0014B4                     __end_of_main:
   683                           	opt callstack 0
   684                           
   685 ;; *************** function _TRM_DataTransmition *****************
   686 ;; Defined at:
   687 ;;		line 19 in file "TRM.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  canMessage     17    0[BANK0 ] struct .
   692 ;;  i               1    0        unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   703 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   705 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   706 ;;Total ram usage:       17 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    7
   709 ;; This function calls:
   710 ;;		_CAN_TakeFrame
   711 ;;		_FRAME_HandleCanFrame
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text1
   718  0012A0                     __ptext1:
   719                           	opt callstack 0
   720  0012A0                     _TRM_DataTransmition:
   721                           	opt callstack 23
   722                           
   723                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   724                           
   725                           ;incstack = 0
   726  0012A0  A001               	btfss	_DaneCan,0,c
   727  0012A2  D014               	goto	l3982
   728                           
   729                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   730  0012A4  0E02               	movlw	2
   731  0012A6  0100               	movlb	0	; () banked
   732  0012A8  6FCC               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   733                           
   734                           ;TRM.c: 30:         canMessage.id.Val = 0;
   735  0012AA  0E00               	movlw	0
   736  0012AC  6FCF               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   737  0012AE  0E00               	movlw	0
   738  0012B0  6FD0               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   739  0012B2  0E00               	movlw	0
   740  0012B4  6FD1               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   741  0012B6  0E00               	movlw	0
   742  0012B8  6FD2               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
   743                           
   744                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   745  0012BA  0E04               	movlw	4
   746  0012BC  6FD1               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   747                           
   748                           ; BSR set to: 0
   749                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   750  0012BE  0ECB               	movlw	low TRM_DataTransmition@canMessage
   751  0012C0  6E38               	movwf	FRAME_HandleCanFrame@message,c
   752  0012C2  0E00               	movlw	high TRM_DataTransmition@canMessage
   753  0012C4  6E39               	movwf	FRAME_HandleCanFrame@message+1,c
   754  0012C6  EC02  F003         	call	_FRAME_HandleCanFrame	;wreg free
   755                           
   756                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   757  0012CA  9001               	bcf	_DaneCan,0,c
   758  0012CC                     l3982:
   759                           
   760                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   761  0012CC  0ECB               	movlw	low TRM_DataTransmition@canMessage
   762  0012CE  6E2E               	movwf	CAN_TakeFrame@message,c
   763  0012D0  0E00               	movlw	high TRM_DataTransmition@canMessage
   764  0012D2  6E2F               	movwf	CAN_TakeFrame@message+1,c
   765  0012D4  ECC4  F001         	call	_CAN_TakeFrame	;wreg free
   766  0012D8  0900               	iorlw	0
   767  0012DA  B4D8               	btfsc	status,2,c
   768  0012DC  0012               	return	
   769                           
   770                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   771  0012DE  0ECB               	movlw	low TRM_DataTransmition@canMessage
   772  0012E0  6E38               	movwf	FRAME_HandleCanFrame@message,c
   773  0012E2  0E00               	movlw	high TRM_DataTransmition@canMessage
   774  0012E4  6E39               	movwf	FRAME_HandleCanFrame@message+1,c
   775  0012E6  EC02  F003         	call	_FRAME_HandleCanFrame	;wreg free
   776                           
   777                           ;TRM.c: 67:         }
   778  0012EA  0012               	return		;funcret
   779  0012EC                     __end_of_TRM_DataTransmition:
   780                           	opt callstack 0
   781                           
   782 ;; *************** function _FRAME_HandleCanFrame *****************
   783 ;; Defined at:
   784 ;;		line 623 in file "FRAME.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  message         2   23[COMRAM] PTR struct .
   787 ;;		 -> TRM_DataTransmition@canMessage(17), 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  ident           2   29[COMRAM] unsigned short 
   790 ;;  alfa            2    0        int 
   791 ;;  identyfikato    1   31[COMRAM] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   802 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   804 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   805 ;;Total ram usage:        9 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; Hardware stack levels required when called:    6
   808 ;; This function calls:
   809 ;;		_CAN_GenID
   810 ;;		_CAN_SendFrame
   811 ;;		_FRAME_AccelerometerStatus
   812 ;;		_FRAME_AdressOfNeighbors
   813 ;;		_FRAME_AnalogValue
   814 ;;		_FRAME_AveragingTimes
   815 ;;		_FRAME_AxisStatus
   816 ;;		_FRAME_DeviceReset
   817 ;;		_FRAME_ExcitationMultiplier
   818 ;;		_FRAME_ExcitationValue
   819 ;;		_FRAME_MapPosition
   820 ;;		_FRAME_Plot
   821 ;;		_FRAME_PrzypisanieDokarty
   822 ;;		_FRAME_SensorExcitationStatus
   823 ;;		_FRAME_SoftwareVersion
   824 ;;		_LED_Error
   825 ;;		___awdiv
   826 ;; This function is called by:
   827 ;;		_TRM_DataTransmition
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text2
   832  000604                     __ptext2:
   833                           	opt callstack 0
   834  000604                     _FRAME_HandleCanFrame:
   835                           	opt callstack 23
   836                           
   837                           ;FRAME.c: 623: void FRAME_HandleCanFrame(mID * message);FRAME.c: 624: {;FRAME.c: 625:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   838                           
   839                           ;incstack = 0
   840  000604  EE20 F006          	lfsr	2,6
   841  000608  5038               	movf	FRAME_HandleCanFrame@message,w,c
   842  00060A  26D9               	addwf	fsr2l,f,c
   843  00060C  5039               	movf	FRAME_HandleCanFrame@message+1,w,c
   844  00060E  22DA               	addwfc	fsr2h,f,c
   845  000610  50DF               	movf	indf2,w,c
   846  000612  6E3A               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   847  000614  503A               	movf	??_FRAME_HandleCanFrame,w,c
   848  000616  6E26               	movwf	___awdiv@dividend,c
   849  000618  6A27               	clrf	___awdiv@dividend+1,c
   850  00061A  0E00               	movlw	0
   851  00061C  6E29               	movwf	___awdiv@divisor+1,c
   852  00061E  0E04               	movlw	4
   853  000620  6E28               	movwf	___awdiv@divisor,c
   854  000622  EC50  F007         	call	___awdiv	;wreg free
   855  000626  5026               	movf	?___awdiv,w,c
   856  000628  6E40               	movwf	FRAME_HandleCanFrame@identyfikator,c
   857                           
   858                           ;FRAME.c: 628:     if(identyfikator != 0x01)
   859  00062A  0440               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   860  00062C  B4D8               	btfsc	status,2,c
   861  00062E  D078               	goto	l3934
   862                           
   863                           ;FRAME.c: 629:     {;FRAME.c: 630:         WORD ident = identyfikator;
   864  000630  C040  F03E         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   865  000634  6A3F               	clrf	FRAME_HandleCanFrame@ident+1,c
   866  000636  D074               	goto	l3934
   867  000638                     l3904:
   868                           
   869                           ;FRAME.c: 637:             FRAME_SensorExcitationStatus(message);
   870  000638  C038  F02B         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   871  00063C  C039  F02C         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   872  000640  EC69  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   873                           
   874                           ;FRAME.c: 638:             break;
   875  000644  D0A2               	goto	l3936
   876  000646                     l3906:
   877                           
   878                           ;FRAME.c: 640:             FRAME_AccelerometerStatus(message);
   879  000646  C038  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   880  00064A  C039  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   881  00064E  EC0B  F008         	call	_FRAME_AccelerometerStatus	;wreg free
   882                           
   883                           ;FRAME.c: 641:             break;
   884  000652  D09B               	goto	l3936
   885  000654                     l3908:
   886                           
   887                           ;FRAME.c: 643:             FRAME_ExcitationValue(message);
   888  000654  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   889  000658  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   890  00065C  ECD8  F009         	call	_FRAME_ExcitationValue	;wreg free
   891                           
   892                           ;FRAME.c: 644:             break;
   893  000660  D094               	goto	l3936
   894  000662                     l3910:
   895                           
   896                           ;FRAME.c: 646:             FRAME_ExcitationMultiplier(message);
   897  000662  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   898  000666  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   899  00066A  EC29  F009         	call	_FRAME_ExcitationMultiplier	;wreg free
   900                           
   901                           ;FRAME.c: 647:             break;
   902  00066E  D08D               	goto	l3936
   903  000670                     l3912:
   904                           
   905                           ;FRAME.c: 649:             FRAME_AveragingTimes(message);
   906  000670  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   907  000674  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   908  000678  EC0E  F00A         	call	_FRAME_AveragingTimes	;wreg free
   909                           
   910                           ;FRAME.c: 650:             break;
   911  00067C  D086               	goto	l3936
   912  00067E                     l3914:
   913                           
   914                           ;FRAME.c: 652:             FRAME_AxisStatus(message);
   915  00067E  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   916  000682  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   917  000686  ECF3  F009         	call	_FRAME_AxisStatus	;wreg free
   918                           
   919                           ;FRAME.c: 653:             break;
   920  00068A  D07F               	goto	l3936
   921  00068C                     l3916:
   922                           
   923                           ;FRAME.c: 655:             FRAME_DeviceReset(message);
   924  00068C  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   925  000690  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   926  000694  ECF6  F005         	call	_FRAME_DeviceReset	;wreg free
   927                           
   928                           ;FRAME.c: 656:             break;
   929  000698  D078               	goto	l3936
   930  00069A                     l3918:
   931                           
   932                           ;FRAME.c: 658:             FRAME_Plot(message);
   933  00069A  C038  F02D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   934  00069E  C039  F02E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   935  0006A2  ECD4  F008         	call	_FRAME_Plot	;wreg free
   936                           
   937                           ;FRAME.c: 659:             break;
   938  0006A6  D071               	goto	l3936
   939  0006A8                     l3920:
   940                           
   941                           ;FRAME.c: 661:             FRAME_MapPosition(message);
   942  0006A8  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   943  0006AC  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   944  0006B0  EC28  F00B         	call	_FRAME_MapPosition	;wreg free
   945                           
   946                           ;FRAME.c: 662:             break;
   947  0006B4  D06A               	goto	l3936
   948  0006B6                     l3922:
   949                           
   950                           ;FRAME.c: 664:             FRAME_SoftwareVersion(message);
   951  0006B6  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   952  0006BA  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   953  0006BE  EC46  F008         	call	_FRAME_SoftwareVersion	;wreg free
   954                           
   955                           ;FRAME.c: 665:             break;
   956  0006C2  D063               	goto	l3936
   957  0006C4                     l3924:
   958                           
   959                           ;FRAME.c: 668:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   960  0006C4  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   961  0006C8  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   962  0006CC  0EF4               	movlw	244
   963  0006CE  2440               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   964  0006D0  6E28               	movwf	FRAME_AnalogValue@set,c
   965  0006D2  6A29               	clrf	FRAME_AnalogValue@set+1,c
   966  0006D4  0EFF               	movlw	255
   967  0006D6  2229               	addwfc	FRAME_AnalogValue@set+1,f,c
   968  0006D8  EC29  F00B         	call	_FRAME_AnalogValue	;wreg free
   969                           
   970                           ;FRAME.c: 669:             break;
   971  0006DC  D056               	goto	l3936
   972  0006DE                     l3926:
   973                           
   974                           ;FRAME.c: 671:             FRAME_PrzypisanieDokarty(message);
   975  0006DE  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   976  0006E2  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   977  0006E6  ECBD  F009         	call	_FRAME_PrzypisanieDokarty	;wreg free
   978                           
   979                           ;FRAME.c: 672:             break;
   980  0006EA  D04F               	goto	l3936
   981  0006EC                     l3928:
   982                           
   983                           ;FRAME.c: 674:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   984  0006EC  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   985  0006F0  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   986  0006F4  0EF0               	movlw	240
   987  0006F6  2440               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   988  0006F8  6E28               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   989  0006FA  6A29               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   990  0006FC  0EFF               	movlw	255
   991  0006FE  2229               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   992  000700  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   993                           
   994                           ;FRAME.c: 675:             break;
   995  000704  D042               	goto	l3936
   996  000706                     l3930:
   997                           
   998                           ;FRAME.c: 677:             FRAME_AdressOfNeighbors(message, identyfikator - 0x11);
   999  000706  C038  F026         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1000  00070A  C039  F027         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1001  00070E  0EEF               	movlw	239
  1002  000710  2440               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1003  000712  6E28               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1004  000714  6A29               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1005  000716  0EFF               	movlw	255
  1006  000718  2229               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
  1007  00071A  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1008                           
  1009                           ;FRAME.c: 678:             break;
  1010  00071E  D035               	goto	l3936
  1011  000720                     l3934:
  1012  000720  5040               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1013  000722  6E3A               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1014  000724  6A3B               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1015                           
  1016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1017                           ; Switch size 1, requested type "simple"
  1018                           ; Number of cases is 1, Range of values is 0 to 0
  1019                           ; switch strategies available:
  1020                           ; Name         Instructions Cycles
  1021                           ; simple_byte            4     3 (average)
  1022                           ;	Chosen strategy is simple_byte
  1023  000726  503B               	movf	??_FRAME_HandleCanFrame+1,w,c
  1024  000728  0A00               	xorlw	0	; case 0
  1025  00072A  A4D8               	btfss	status,2,c
  1026  00072C  D02E               	goto	l3936
  1027                           
  1028                           ; Switch size 1, requested type "simple"
  1029                           ; Number of cases is 15, Range of values is 1 to 17
  1030                           ; switch strategies available:
  1031                           ; Name         Instructions Cycles
  1032                           ; simple_byte           46    24 (average)
  1033                           ;	Chosen strategy is simple_byte
  1034  00072E  503A               	movf	??_FRAME_HandleCanFrame,w,c
  1035  000730  0A01               	xorlw	1	; case 1
  1036  000732  B4D8               	btfsc	status,2,c
  1037  000734  D781               	goto	l3904
  1038  000736  0A03               	xorlw	3	; case 2
  1039  000738  B4D8               	btfsc	status,2,c
  1040  00073A  D785               	goto	l3906
  1041  00073C  0A01               	xorlw	1	; case 3
  1042  00073E  B4D8               	btfsc	status,2,c
  1043  000740  D789               	goto	l3908
  1044  000742  0A07               	xorlw	7	; case 4
  1045  000744  B4D8               	btfsc	status,2,c
  1046  000746  D78D               	goto	l3910
  1047  000748  0A01               	xorlw	1	; case 5
  1048  00074A  B4D8               	btfsc	status,2,c
  1049  00074C  D791               	goto	l3912
  1050  00074E  0A03               	xorlw	3	; case 6
  1051  000750  B4D8               	btfsc	status,2,c
  1052  000752  D795               	goto	l3914
  1053  000754  0A01               	xorlw	1	; case 7
  1054  000756  B4D8               	btfsc	status,2,c
  1055  000758  D799               	goto	l3916
  1056  00075A  0A0E               	xorlw	14	; case 9
  1057  00075C  B4D8               	btfsc	status,2,c
  1058  00075E  D79D               	goto	l3918
  1059  000760  0A03               	xorlw	3	; case 10
  1060  000762  B4D8               	btfsc	status,2,c
  1061  000764  D7A1               	goto	l3920
  1062  000766  0A01               	xorlw	1	; case 11
  1063  000768  B4D8               	btfsc	status,2,c
  1064  00076A  D7A5               	goto	l3922
  1065  00076C  0A07               	xorlw	7	; case 12
  1066  00076E  B4D8               	btfsc	status,2,c
  1067  000770  D7A9               	goto	l3924
  1068  000772  0A01               	xorlw	1	; case 13
  1069  000774  B4D8               	btfsc	status,2,c
  1070  000776  D7A6               	goto	l3924
  1071  000778  0A02               	xorlw	2	; case 15
  1072  00077A  B4D8               	btfsc	status,2,c
  1073  00077C  D7B0               	goto	l3926
  1074  00077E  0A1F               	xorlw	31	; case 16
  1075  000780  B4D8               	btfsc	status,2,c
  1076  000782  D7B4               	goto	l3928
  1077  000784  0A01               	xorlw	1	; case 17
  1078  000786  B4D8               	btfsc	status,2,c
  1079  000788  D7BE               	goto	l3930
  1080  00078A                     l3936:
  1081                           
  1082                           ;FRAME.c: 687:     if(message->message_type == 0x02)
  1083  00078A  EE20 F001          	lfsr	2,1
  1084  00078E  5038               	movf	FRAME_HandleCanFrame@message,w,c
  1085  000790  26D9               	addwf	fsr2l,f,c
  1086  000792  5039               	movf	FRAME_HandleCanFrame@message+1,w,c
  1087  000794  22DA               	addwfc	fsr2h,f,c
  1088  000796  0E02               	movlw	2
  1089  000798  18DE               	xorwf	postinc2,w,c
  1090  00079A  A4D8               	btfss	status,2,c
  1091  00079C  0012               	return	
  1092                           
  1093                           ;FRAME.c: 688:     {;FRAME.c: 690:         message->frame_type = 0x03;
  1094  00079E  EE20 F002          	lfsr	2,2
  1095  0007A2  5038               	movf	FRAME_HandleCanFrame@message,w,c
  1096  0007A4  26D9               	addwf	fsr2l,f,c
  1097  0007A6  5039               	movf	FRAME_HandleCanFrame@message+1,w,c
  1098  0007A8  22DA               	addwfc	fsr2h,f,c
  1099  0007AA  0E03               	movlw	3
  1100  0007AC  6EDF               	movwf	indf2,c
  1101                           
  1102                           ;FRAME.c: 691:         message->message_type = 0x01;
  1103  0007AE  EE20 F001          	lfsr	2,1
  1104  0007B2  5038               	movf	FRAME_HandleCanFrame@message,w,c
  1105  0007B4  26D9               	addwf	fsr2l,f,c
  1106  0007B6  5039               	movf	FRAME_HandleCanFrame@message+1,w,c
  1107  0007B8  22DA               	addwfc	fsr2h,f,c
  1108  0007BA  0E01               	movlw	1
  1109  0007BC  6EDF               	movwf	indf2,c
  1110                           
  1111                           ;FRAME.c: 692:         message->id.Val = 0;
  1112  0007BE  EE20 F004          	lfsr	2,4
  1113  0007C2  5038               	movf	FRAME_HandleCanFrame@message,w,c
  1114  0007C4  26D9               	addwf	fsr2l,f,c
  1115  0007C6  5039               	movf	FRAME_HandleCanFrame@message+1,w,c
  1116  0007C8  22DA               	addwfc	fsr2h,f,c
  1117  0007CA  6ADE               	clrf	postinc2,c
  1118  0007CC  6ADE               	clrf	postinc2,c
  1119  0007CE  6ADE               	clrf	postinc2,c
  1120  0007D0  6ADD               	clrf	postdec2,c
  1121                           
  1122                           ;FRAME.c: 694:         message->id.v[2] = identyfikator*4;
  1123  0007D2  5040               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1124  0007D4  0D04               	mullw	4
  1125  0007D6  EE20 F006          	lfsr	2,6
  1126  0007DA  5038               	movf	FRAME_HandleCanFrame@message,w,c
  1127  0007DC  26D9               	addwf	fsr2l,f,c
  1128  0007DE  5039               	movf	FRAME_HandleCanFrame@message+1,w,c
  1129  0007E0  22DA               	addwfc	fsr2h,f,c
  1130  0007E2  CFF3 FFDF          	movff	prodl,indf2
  1131                           
  1132                           ;FRAME.c: 695:         CAN_GenID(message,identyfikator);
  1133  0007E6  C038  F026         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1134  0007EA  C039  F027         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1135  0007EE  C040  F028         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1136  0007F2  ECC0  F006         	call	_CAN_GenID	;wreg free
  1137                           
  1138                           ;FRAME.c: 696:         CAN_SendFrame(message);
  1139  0007F6  C038  F02B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1140  0007FA  C039  F02C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1141  0007FE  EC09  F004         	call	_CAN_SendFrame	;wreg free
  1142                           
  1143                           ;FRAME.c: 707:        while(RXB0CONbits.FILHIT3)
  1144  000802  D004               	goto	l565
  1145  000804                     l566:
  1146                           
  1147                           ;FRAME.c: 708:        {;FRAME.c: 709:            if(TXB0CONbits.TXERR == 1){
  1148  000804  010F               	movlb	15	; () banked
  1149  000806  B940               	btfsc	64,4,b	;volatile
  1150                           
  1151                           ; BSR set to: 15
  1152                           ;FRAME.c: 710:                LED_Error();
  1153  000808  EC95  F00A         	call	_LED_Error	;wreg free
  1154  00080C                     l565:
  1155                           
  1156                           ;FRAME.c: 707:        while(RXB0CONbits.FILHIT3)
  1157  00080C  A660               	btfss	3936,3,c	;volatile
  1158  00080E  0012               	return	
  1159  000810  D7F9               	goto	l566
  1160  000812                     __end_of_FRAME_HandleCanFrame:
  1161                           	opt callstack 0
  1162                           
  1163 ;; *************** function _FRAME_SoftwareVersion *****************
  1164 ;; Defined at:
  1165 ;;		line 455 in file "FRAME.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  message         2    5[COMRAM] PTR struct .
  1168 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1183 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1184 ;;Total ram usage:        3 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    3
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		_FRAME_HandleCanFrame
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text3
  1195  00108C                     __ptext3:
  1196                           	opt callstack 0
  1197  00108C                     _FRAME_SoftwareVersion:
  1198                           	opt callstack 25
  1199                           
  1200                           ;FRAME.c: 455: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 456: {;FRAME.c: 
      +                          458:     if(message->message_type == 0x02)
  1201                           
  1202                           ;incstack = 0
  1203  00108C  EE20 F001          	lfsr	2,1
  1204  001090  5026               	movf	FRAME_SoftwareVersion@message,w,c
  1205  001092  26D9               	addwf	fsr2l,f,c
  1206  001094  5027               	movf	FRAME_SoftwareVersion@message+1,w,c
  1207  001096  22DA               	addwfc	fsr2h,f,c
  1208  001098  0E02               	movlw	2
  1209  00109A  18DE               	xorwf	postinc2,w,c
  1210  00109C  A4D8               	btfss	status,2,c
  1211  00109E  0012               	return	
  1212                           
  1213                           ;FRAME.c: 459:     {;FRAME.c: 460:         message->data_length = 4;
  1214  0010A0  EE20 F010          	lfsr	2,16
  1215  0010A4  5026               	movf	FRAME_SoftwareVersion@message,w,c
  1216  0010A6  26D9               	addwf	fsr2l,f,c
  1217  0010A8  5027               	movf	FRAME_SoftwareVersion@message+1,w,c
  1218  0010AA  22DA               	addwfc	fsr2h,f,c
  1219  0010AC  0E04               	movlw	4
  1220  0010AE  6EDF               	movwf	indf2,c
  1221                           
  1222                           ;FRAME.c: 461:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1223  0010B0  EE20 F008          	lfsr	2,8
  1224  0010B4  5026               	movf	FRAME_SoftwareVersion@message,w,c
  1225  0010B6  26D9               	addwf	fsr2l,f,c
  1226  0010B8  5027               	movf	FRAME_SoftwareVersion@message+1,w,c
  1227  0010BA  22DA               	addwfc	fsr2h,f,c
  1228  0010BC  5005               	movf	5,w,c
  1229  0010BE  6EDF               	movwf	indf2,c
  1230                           
  1231                           ;FRAME.c: 462:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1232  0010C0  EE20 F009          	lfsr	2,9
  1233  0010C4  5026               	movf	FRAME_SoftwareVersion@message,w,c
  1234  0010C6  26D9               	addwf	fsr2l,f,c
  1235  0010C8  5027               	movf	FRAME_SoftwareVersion@message+1,w,c
  1236  0010CA  22DA               	addwfc	fsr2h,f,c
  1237  0010CC  C004 FFDF          	movff	4,indf2
  1238                           
  1239                           ;FRAME.c: 463:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1240  0010D0  EE20 F00A          	lfsr	2,10
  1241  0010D4  5026               	movf	FRAME_SoftwareVersion@message,w,c
  1242  0010D6  26D9               	addwf	fsr2l,f,c
  1243  0010D8  5027               	movf	FRAME_SoftwareVersion@message+1,w,c
  1244  0010DA  22DA               	addwfc	fsr2h,f,c
  1245  0010DC  500B               	movf	11,w,c
  1246  0010DE  6EDF               	movwf	indf2,c
  1247                           
  1248                           ;FRAME.c: 464:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1249  0010E0  EE20 F00B          	lfsr	2,11
  1250  0010E4  5026               	movf	FRAME_SoftwareVersion@message,w,c
  1251  0010E6  26D9               	addwf	fsr2l,f,c
  1252  0010E8  5027               	movf	FRAME_SoftwareVersion@message+1,w,c
  1253  0010EA  22DA               	addwfc	fsr2h,f,c
  1254  0010EC  C00A FFDF          	movff	10,indf2
  1255                           
  1256                           ;FRAME.c: 465:     }
  1257  0010F0  0012               	return		;funcret
  1258  0010F2                     __end_of_FRAME_SoftwareVersion:
  1259                           	opt callstack 0
  1260                           
  1261 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1262 ;; Defined at:
  1263 ;;		line 43 in file "FRAME.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  message         2   10[COMRAM] PTR struct .
  1266 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  iterator_bet    2   14[COMRAM] unsigned short 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1282 ;;Total ram usage:        6 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    5
  1285 ;; This function calls:
  1286 ;;		_IsInNeighbors
  1287 ;;		_LED_Clear
  1288 ;;		_LED_Error
  1289 ;;		_LOCK_Get
  1290 ;;		_LOCK_Set
  1291 ;;		_MOC_Aktualna_Temperatura
  1292 ;;		_MOC_Frame_Counter
  1293 ;;		_MOC_NOTWORK
  1294 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1295 ;; This function is called by:
  1296 ;;		_FRAME_HandleCanFrame
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text4
  1301  000AD2                     __ptext4:
  1302                           	opt callstack 0
  1303  000AD2                     _FRAME_SensorExcitationStatus:
  1304                           	opt callstack 23
  1305                           
  1306                           ;FRAME.c: 43: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 44: {;FRAM
      +                          E.c: 45:     if(message->message_type == 0x02)
  1307                           
  1308                           ;incstack = 0
  1309  000AD2  EE20 F001          	lfsr	2,1
  1310  000AD6  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1311  000AD8  26D9               	addwf	fsr2l,f,c
  1312  000ADA  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1313  000ADC  22DA               	addwfc	fsr2h,f,c
  1314  000ADE  0E02               	movlw	2
  1315  000AE0  18DE               	xorwf	postinc2,w,c
  1316  000AE2  A4D8               	btfss	status,2,c
  1317  000AE4  D047               	goto	l3608
  1318                           
  1319                           ;FRAME.c: 46:     {;FRAME.c: 47:         message->data_length = 6;
  1320  000AE6  EE20 F010          	lfsr	2,16
  1321  000AEA  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1322  000AEC  26D9               	addwf	fsr2l,f,c
  1323  000AEE  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1324  000AF0  22DA               	addwfc	fsr2h,f,c
  1325  000AF2  0E06               	movlw	6
  1326  000AF4  6EDF               	movwf	indf2,c
  1327                           
  1328                           ;FRAME.c: 53:         message->data[0] = LOCK_Get();
  1329  000AF6  EE20 F008          	lfsr	2,8
  1330  000AFA  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1331  000AFC  26D9               	addwf	fsr2l,f,c
  1332  000AFE  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1333  000B00  22DA               	addwfc	fsr2h,f,c
  1334  000B02  EC26  F00B         	call	_LOCK_Get	;wreg free
  1335  000B06  6EDF               	movwf	indf2,c
  1336                           
  1337                           ;FRAME.c: 54:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1338  000B08  EE20 F009          	lfsr	2,9
  1339  000B0C  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1340  000B0E  26D9               	addwf	fsr2l,f,c
  1341  000B10  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1342  000B12  22DA               	addwfc	fsr2h,f,c
  1343  000B14  ECE9  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1344  000B18  C027  F026         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1345  000B1C  6A27               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1346  000B1E  5026               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1347  000B20  6EDF               	movwf	indf2,c
  1348                           
  1349                           ;FRAME.c: 55:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1350  000B22  EE20 F00A          	lfsr	2,10
  1351  000B26  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1352  000B28  26D9               	addwf	fsr2l,f,c
  1353  000B2A  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1354  000B2C  22DA               	addwfc	fsr2h,f,c
  1355  000B2E  ECE9  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1356  000B32  5026               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1357  000B34  6EDF               	movwf	indf2,c
  1358                           
  1359                           ;FRAME.c: 56:         message->data[3] = MOC_Frame_Counter();
  1360  000B36  EE20 F00B          	lfsr	2,11
  1361  000B3A  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1362  000B3C  26D9               	addwf	fsr2l,f,c
  1363  000B3E  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1364  000B40  22DA               	addwfc	fsr2h,f,c
  1365  000B42  ECDB  F00A         	call	_MOC_Frame_Counter	;wreg free
  1366  000B46  5026               	movf	?_MOC_Frame_Counter,w,c
  1367  000B48  6EDF               	movwf	indf2,c
  1368                           
  1369                           ;FRAME.c: 57:         message->data[4] = MOC_Aktualna_Temperatura();
  1370  000B4A  EE20 F00C          	lfsr	2,12
  1371  000B4E  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1372  000B50  26D9               	addwf	fsr2l,f,c
  1373  000B52  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1374  000B54  22DA               	addwfc	fsr2h,f,c
  1375  000B56  ECEE  F00A         	call	_MOC_Aktualna_Temperatura	;wreg free
  1376  000B5A  5026               	movf	?_MOC_Aktualna_Temperatura,w,c
  1377  000B5C  6EDF               	movwf	indf2,c
  1378                           
  1379                           ;FRAME.c: 58:         message->data[5] = MOC_NOTWORK();
  1380  000B5E  EE20 F00D          	lfsr	2,13
  1381  000B62  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1382  000B64  26D9               	addwf	fsr2l,f,c
  1383  000B66  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1384  000B68  22DA               	addwfc	fsr2h,f,c
  1385  000B6A  EC1B  F00B         	call	_MOC_NOTWORK	;wreg free
  1386  000B6E  5026               	movf	?_MOC_NOTWORK,w,c
  1387  000B70  6EDF               	movwf	indf2,c
  1388                           
  1389                           ;FRAME.c: 68:     }
  1390  000B72  0012               	return	
  1391  000B74                     l3608:
  1392                           
  1393                           ;FRAME.c: 70:     {;FRAME.c: 72:         WORD iterator_beta;;FRAME.c: 75:         if(IsI
      +                          nNeighbors(12))
  1394  000B74  0E00               	movlw	0
  1395  000B76  6E27               	movwf	IsInNeighbors@message_adress+1,c
  1396  000B78  0E0C               	movlw	12
  1397  000B7A  6E26               	movwf	IsInNeighbors@message_adress,c
  1398  000B7C  ECCF  F007         	call	_IsInNeighbors	;wreg free
  1399  000B80  0900               	iorlw	0
  1400  000B82  B4D8               	btfsc	status,2,c
  1401  000B84  D00F               	goto	l3622
  1402                           
  1403                           ;FRAME.c: 76:         {;FRAME.c: 79:             for(iterator_beta=0;iterator_beta<400;i
      +                          terator_beta++)
  1404  000B86  0E00               	movlw	0
  1405  000B88  6E30               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1406  000B8A  0E00               	movlw	0
  1407  000B8C  6E2F               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1408  000B8E                     l3616:
  1409                           
  1410                           ;FRAME.c: 80:             {;FRAME.c: 81:             LED_Clear();
  1411  000B8E  ECA4  F00A         	call	_LED_Clear	;wreg free
  1412                           
  1413                           ;FRAME.c: 82:             }
  1414  000B92  4A2F               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1415  000B94  2A30               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1416  000B96  0E90               	movlw	144
  1417  000B98  5C2F               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1418  000B9A  0E01               	movlw	1
  1419  000B9C  5830               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1420  000B9E  B0D8               	btfsc	status,0,c
  1421  000BA0  D00F               	goto	u2200
  1422  000BA2  D7F5               	goto	l3616
  1423  000BA4                     l3622:
  1424                           
  1425                           ;FRAME.c: 87:         {;FRAME.c: 89:             for(iterator_beta=0;iterator_beta<400;i
      +                          terator_beta++)
  1426  000BA4  0E00               	movlw	0
  1427  000BA6  6E30               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1428  000BA8  0E00               	movlw	0
  1429  000BAA  6E2F               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1430  000BAC                     l3628:
  1431                           
  1432                           ;FRAME.c: 90:             {;FRAME.c: 91:             LED_Error();
  1433  000BAC  EC95  F00A         	call	_LED_Error	;wreg free
  1434                           
  1435                           ;FRAME.c: 92:             }
  1436  000BB0  4A2F               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1437  000BB2  2A30               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1438  000BB4  0E90               	movlw	144
  1439  000BB6  5C2F               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1440  000BB8  0E01               	movlw	1
  1441  000BBA  5830               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1442  000BBC  A0D8               	btfss	status,0,c
  1443  000BBE  D7F6               	goto	l3628
  1444  000BC0                     u2200:
  1445                           
  1446                           ;FRAME.c: 96:         if(0x12b==message->id.w[0])
  1447  000BC0  EE20 F004          	lfsr	2,4
  1448  000BC4  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1449  000BC6  26D9               	addwf	fsr2l,f,c
  1450  000BC8  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1451  000BCA  22DA               	addwfc	fsr2h,f,c
  1452  000BCC  0E2B               	movlw	43
  1453  000BCE  18DE               	xorwf	postinc2,w,c
  1454  000BD0  E10C               	bnz	l467
  1455  000BD2  04DE               	decf	postinc2,w,c
  1456  000BD4  A4D8               	btfss	status,2,c
  1457  000BD6  0012               	return	
  1458                           
  1459                           ;FRAME.c: 97:         {;FRAME.c: 98:         LOCK_Set(message->data[0]);
  1460  000BD8  EE20 F008          	lfsr	2,8
  1461  000BDC  502B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1462  000BDE  26D9               	addwf	fsr2l,f,c
  1463  000BE0  502C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1464  000BE2  22DA               	addwfc	fsr2h,f,c
  1465  000BE4  50DF               	movf	indf2,w,c
  1466  000BE6  EC1F  F00B         	call	_LOCK_Set
  1467  000BEA                     l467:
  1468  000BEA  0012               	return		;funcret
  1469  000BEC                     __end_of_FRAME_SensorExcitationStatus:
  1470                           	opt callstack 0
  1471                           
  1472 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1473 ;; Defined at:
  1474 ;;		line 33 in file "MOC_Funct.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  2    5[COMRAM] unsigned int 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1492 ;;Total ram usage:        2 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    3
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_FRAME_SensorExcitationStatus
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text5
  1503  0015D2                     __ptext5:
  1504                           	opt callstack 0
  1505  0015D2                     _MOC_Wynikowa_wartosc_roznicowa:
  1506                           	opt callstack 24
  1507                           
  1508                           ;MOC_Funct.c: 35:     return 0x0220;
  1509                           
  1510                           ;incstack = 0
  1511  0015D2  0E02               	movlw	2
  1512  0015D4  6E27               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1513  0015D6  0E20               	movlw	32
  1514  0015D8  6E26               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1515  0015DA  0012               	return		;funcret
  1516  0015DC                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1517                           	opt callstack 0
  1518                           
  1519 ;; *************** function _MOC_NOTWORK *****************
  1520 ;; Defined at:
  1521 ;;		line 47 in file "MOC_Funct.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  2    5[COMRAM] unsigned int 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;Total ram usage:        2 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    3
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_FRAME_SensorExcitationStatus
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text6
  1550  001636                     __ptext6:
  1551                           	opt callstack 0
  1552  001636                     _MOC_NOTWORK:
  1553                           	opt callstack 24
  1554                           
  1555                           ;MOC_Funct.c: 49:     return 0xFF;
  1556                           
  1557                           ;incstack = 0
  1558  001636  0E00               	movlw	0
  1559  001638  6E27               	movwf	?_MOC_NOTWORK+1,c
  1560  00163A  6826               	setf	?_MOC_NOTWORK,c
  1561  00163C  0012               	return		;funcret
  1562  00163E                     __end_of_MOC_NOTWORK:
  1563                           	opt callstack 0
  1564                           
  1565 ;; *************** function _MOC_Frame_Counter *****************
  1566 ;; Defined at:
  1567 ;;		line 38 in file "MOC_Funct.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  2    5[COMRAM] unsigned int 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1585 ;;Total ram usage:        2 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    3
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_FRAME_SensorExcitationStatus
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text7
  1596  0015B6                     __ptext7:
  1597                           	opt callstack 0
  1598  0015B6                     _MOC_Frame_Counter:
  1599                           	opt callstack 24
  1600                           
  1601                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1602                           
  1603                           ;incstack = 0
  1604  0015B6  5041               	movf	MOC_Frame_Counter@zeta,w,c
  1605  0015B8  6E26               	movwf	?_MOC_Frame_Counter,c
  1606  0015BA  5042               	movf	MOC_Frame_Counter@zeta+1,w,c
  1607  0015BC  6E27               	movwf	?_MOC_Frame_Counter+1,c
  1608  0015BE  4A41               	infsnz	MOC_Frame_Counter@zeta,f,c
  1609  0015C0  2A42               	incf	MOC_Frame_Counter@zeta+1,f,c
  1610  0015C2  0012               	return		;funcret
  1611  0015C4                     __end_of_MOC_Frame_Counter:
  1612                           	opt callstack 0
  1613                           
  1614 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1615 ;; Defined at:
  1616 ;;		line 43 in file "MOC_Funct.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  2    5[COMRAM] unsigned int 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;Total ram usage:        2 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    3
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_FRAME_SensorExcitationStatus
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text8
  1645  0015DC                     __ptext8:
  1646                           	opt callstack 0
  1647  0015DC                     _MOC_Aktualna_Temperatura:
  1648                           	opt callstack 24
  1649                           
  1650                           ;MOC_Funct.c: 45:     return 0x1B;
  1651                           
  1652                           ;incstack = 0
  1653  0015DC  0E00               	movlw	0
  1654  0015DE  6E27               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1655  0015E0  0E1B               	movlw	27
  1656  0015E2  6E26               	movwf	?_MOC_Aktualna_Temperatura,c
  1657  0015E4  0012               	return		;funcret
  1658  0015E6                     __end_of_MOC_Aktualna_Temperatura:
  1659                           	opt callstack 0
  1660                           
  1661 ;; *************** function _LOCK_Set *****************
  1662 ;; Defined at:
  1663 ;;		line 52 in file "LED.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  k               1    wreg     unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  k               1    5[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1681 ;;Total ram usage:        1 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    3
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_FRAME_SensorExcitationStatus
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text9
  1692  00163E                     __ptext9:
  1693                           	opt callstack 0
  1694  00163E                     _LOCK_Set:
  1695                           	opt callstack 24
  1696                           
  1697                           ;incstack = 0
  1698                           ;LOCK_Set@k stored from wreg
  1699  00163E  6E26               	movwf	LOCK_Set@k,c
  1700                           
  1701                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1702  001640  C026  F020         	movff	LOCK_Set@k,_LOCK
  1703  001644  0012               	return		;funcret
  1704  001646                     __end_of_LOCK_Set:
  1705                           	opt callstack 0
  1706                           
  1707 ;; *************** function _LOCK_Get *****************
  1708 ;; Defined at:
  1709 ;;		line 57 in file "LED.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      unsigned char 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    3
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_FRAME_SensorExcitationStatus
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text10
  1738  00164C                     __ptext10:
  1739                           	opt callstack 0
  1740  00164C                     _LOCK_Get:
  1741                           	opt callstack 24
  1742                           
  1743                           ;LED.c: 59:     return LOCK;
  1744                           
  1745                           ;incstack = 0
  1746  00164C  5020               	movf	_LOCK,w,c
  1747  00164E  0012               	return		;funcret
  1748  001650                     __end_of_LOCK_Get:
  1749                           	opt callstack 0
  1750                           
  1751 ;; *************** function _LED_Error *****************
  1752 ;; Defined at:
  1753 ;;		line 37 in file "LED.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2  265[None  ] unsigned int 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    4
  1774 ;; This function calls:
  1775 ;;		_LED_Control
  1776 ;; This function is called by:
  1777 ;;		_FRAME_SensorExcitationStatus
  1778 ;;		_FRAME_HandleCanFrame
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text11
  1783  00152A                     __ptext11:
  1784                           	opt callstack 0
  1785  00152A                     _LED_Error:
  1786                           	opt callstack 24
  1787                           
  1788                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1789                           
  1790                           ;incstack = 0
  1791  00152A  0E02               	movlw	2
  1792  00152C  6E27               	movwf	LED_Control@diode+1,c
  1793  00152E  0EAA               	movlw	170
  1794  001530  6E26               	movwf	LED_Control@diode,c
  1795  001532  0E00               	movlw	0
  1796  001534  ECC0  F004         	call	_LED_Control
  1797                           
  1798                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1799  001538  0E00               	movlw	0
  1800  00153A  6E27               	movwf	LED_Control@diode+1,c
  1801  00153C  0E00               	movlw	0
  1802  00153E  6E26               	movwf	LED_Control@diode,c
  1803  001540  0E01               	movlw	1
  1804  001542  ECC0  F004         	call	_LED_Control
  1805  001546  0012               	return		;funcret
  1806  001548                     __end_of_LED_Error:
  1807                           	opt callstack 0
  1808                           
  1809 ;; *************** function _LED_Clear *****************
  1810 ;; Defined at:
  1811 ;;		line 45 in file "LED.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2  268[None  ] unsigned int 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    4
  1832 ;; This function calls:
  1833 ;;		_LED_Control
  1834 ;; This function is called by:
  1835 ;;		_FRAME_SensorExcitationStatus
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text12
  1840  001548                     __ptext12:
  1841                           	opt callstack 0
  1842  001548                     _LED_Clear:
  1843                           	opt callstack 23
  1844                           
  1845                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  1846                           
  1847                           ;incstack = 0
  1848  001548  0E00               	movlw	0
  1849  00154A  6E27               	movwf	LED_Control@diode+1,c
  1850  00154C  0E00               	movlw	0
  1851  00154E  6E26               	movwf	LED_Control@diode,c
  1852  001550  0E00               	movlw	0
  1853  001552  ECC0  F004         	call	_LED_Control
  1854                           
  1855                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  1856  001556  0E02               	movlw	2
  1857  001558  6E27               	movwf	LED_Control@diode+1,c
  1858  00155A  0EAA               	movlw	170
  1859  00155C  6E26               	movwf	LED_Control@diode,c
  1860  00155E  0E01               	movlw	1
  1861  001560  ECC0  F004         	call	_LED_Control
  1862  001564  0012               	return		;funcret
  1863  001566                     __end_of_LED_Clear:
  1864                           	opt callstack 0
  1865                           
  1866 ;; *************** function _IsInNeighbors *****************
  1867 ;; Defined at:
  1868 ;;		line 103 in file "FRAME.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  message_adre    2    5[COMRAM] unsigned int 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  i               2    0        unsigned short 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      unsigned char 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_FRAME_SensorExcitationStatus
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text13
  1897  000F9E                     __ptext13:
  1898                           	opt callstack 0
  1899  000F9E                     _IsInNeighbors:
  1900                           	opt callstack 24
  1901                           
  1902                           ;FRAME.c: 103: BYTE IsInNeighbors(UINT message_adress);FRAME.c: 104: {;FRAME.c: 105:    
      +                           WORD i;;FRAME.c: 107:     if(NeightAdress1==message_adress)
  1903                           
  1904                           ;incstack = 0
  1905  000F9E  5026               	movf	IsInNeighbors@message_adress,w,c
  1906  000FA0  1816               	xorwf	_NeightAdress1,w,c	;volatile
  1907  000FA2  E106               	bnz	l3462
  1908  000FA4  5027               	movf	IsInNeighbors@message_adress+1,w,c
  1909  000FA6  1817               	xorwf	_NeightAdress1+1,w,c	;volatile
  1910  000FA8  A4D8               	btfss	status,2,c
  1911  000FAA  D002               	goto	l3462
  1912  000FAC                     u2000:
  1913                           
  1914                           ;FRAME.c: 108:     {;FRAME.c: 109:         return 1;
  1915  000FAC  0E01               	movlw	1
  1916  000FAE  0012               	return	
  1917  000FB0                     l3462:
  1918                           
  1919                           ;FRAME.c: 111:     if(NeightAdress2==message_adress)
  1920  000FB0  5026               	movf	IsInNeighbors@message_adress,w,c
  1921  000FB2  1814               	xorwf	_NeightAdress2,w,c	;volatile
  1922  000FB4  E104               	bnz	l3468
  1923  000FB6  5027               	movf	IsInNeighbors@message_adress+1,w,c
  1924  000FB8  1815               	xorwf	_NeightAdress2+1,w,c	;volatile
  1925  000FBA  B4D8               	btfsc	status,2,c
  1926  000FBC  D7F7               	goto	u2000
  1927  000FBE                     l3468:
  1928                           
  1929                           ;FRAME.c: 115:     if(NeightAdress3==message_adress)
  1930  000FBE  5026               	movf	IsInNeighbors@message_adress,w,c
  1931  000FC0  1812               	xorwf	_NeightAdress3,w,c	;volatile
  1932  000FC2  E104               	bnz	l3474
  1933  000FC4  5027               	movf	IsInNeighbors@message_adress+1,w,c
  1934  000FC6  1813               	xorwf	_NeightAdress3+1,w,c	;volatile
  1935  000FC8  B4D8               	btfsc	status,2,c
  1936  000FCA  D7F0               	goto	u2000
  1937  000FCC                     l3474:
  1938                           
  1939                           ;FRAME.c: 119:     if(NeightAdress4==message_adress)
  1940  000FCC  5026               	movf	IsInNeighbors@message_adress,w,c
  1941  000FCE  1810               	xorwf	_NeightAdress4,w,c	;volatile
  1942  000FD0  E104               	bnz	l3480
  1943  000FD2  5027               	movf	IsInNeighbors@message_adress+1,w,c
  1944  000FD4  1811               	xorwf	_NeightAdress4+1,w,c	;volatile
  1945  000FD6  B4D8               	btfsc	status,2,c
  1946  000FD8  D7E9               	goto	u2000
  1947  000FDA                     l3480:
  1948                           
  1949                           ;FRAME.c: 123:     if(NeightAdress5==message_adress)
  1950  000FDA  5026               	movf	IsInNeighbors@message_adress,w,c
  1951  000FDC  180E               	xorwf	_NeightAdress5,w,c	;volatile
  1952  000FDE  E104               	bnz	l3486
  1953  000FE0  5027               	movf	IsInNeighbors@message_adress+1,w,c
  1954  000FE2  180F               	xorwf	_NeightAdress5+1,w,c	;volatile
  1955  000FE4  B4D8               	btfsc	status,2,c
  1956  000FE6  D7E2               	goto	u2000
  1957  000FE8                     l3486:
  1958                           
  1959                           ;FRAME.c: 127:     if(NeightAdress6==message_adress)
  1960  000FE8  5026               	movf	IsInNeighbors@message_adress,w,c
  1961  000FEA  180C               	xorwf	_NeightAdress6,w,c	;volatile
  1962  000FEC  E104               	bnz	l3492
  1963  000FEE  5027               	movf	IsInNeighbors@message_adress+1,w,c
  1964  000FF0  180D               	xorwf	_NeightAdress6+1,w,c	;volatile
  1965  000FF2  B4D8               	btfsc	status,2,c
  1966  000FF4  D7DB               	goto	u2000
  1967  000FF6                     l3492:
  1968                           
  1969                           ;FRAME.c: 131:     if(NeightAdress7==message_adress)
  1970  000FF6  5026               	movf	IsInNeighbors@message_adress,w,c
  1971  000FF8  180A               	xorwf	_NeightAdress7,w,c	;volatile
  1972  000FFA  E104               	bnz	l3498
  1973  000FFC  5027               	movf	IsInNeighbors@message_adress+1,w,c
  1974  000FFE  180B               	xorwf	_NeightAdress7+1,w,c	;volatile
  1975  001000  B4D8               	btfsc	status,2,c
  1976  001002  D7D4               	goto	u2000
  1977  001004                     l3498:
  1978                           
  1979                           ;FRAME.c: 135:     if(NeightAdress8==message_adress)
  1980  001004  5026               	movf	IsInNeighbors@message_adress,w,c
  1981  001006  1808               	xorwf	_NeightAdress8,w,c	;volatile
  1982  001008  E104               	bnz	l3504
  1983  00100A  5027               	movf	IsInNeighbors@message_adress+1,w,c
  1984  00100C  1809               	xorwf	_NeightAdress8+1,w,c	;volatile
  1985  00100E  B4D8               	btfsc	status,2,c
  1986  001010  D7CD               	goto	u2000
  1987  001012                     l3504:
  1988                           
  1989                           ;FRAME.c: 153:     return 0;
  1990  001012  0E00               	movlw	0
  1991  001014  0012               	return		;funcret
  1992  001016                     __end_of_IsInNeighbors:
  1993                           	opt callstack 0
  1994                           
  1995 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1996 ;; Defined at:
  1997 ;;		line 504 in file "FRAME.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  message         2    5[COMRAM] PTR struct .
  2000 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;Total ram usage:        3 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    3
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_FRAME_HandleCanFrame
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text14
  2027  00137A                     __ptext14:
  2028                           	opt callstack 0
  2029  00137A                     _FRAME_PrzypisanieDokarty:
  2030                           	opt callstack 25
  2031                           
  2032                           ;FRAME.c: 504: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 505: {;FRAME.
      +                          c: 506:     if(message->message_type == 0x02)
  2033                           
  2034                           ;incstack = 0
  2035  00137A  EE20 F001          	lfsr	2,1
  2036  00137E  5026               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2037  001380  26D9               	addwf	fsr2l,f,c
  2038  001382  5027               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2039  001384  22DA               	addwfc	fsr2h,f,c
  2040  001386  0E02               	movlw	2
  2041  001388  18DE               	xorwf	postinc2,w,c
  2042  00138A  A4D8               	btfss	status,2,c
  2043  00138C  0012               	return	
  2044                           
  2045                           ;FRAME.c: 507:     {;FRAME.c: 508:         message->data_length = 1;
  2046  00138E  EE20 F010          	lfsr	2,16
  2047  001392  5026               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2048  001394  26D9               	addwf	fsr2l,f,c
  2049  001396  5027               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2050  001398  22DA               	addwfc	fsr2h,f,c
  2051  00139A  0E01               	movlw	1
  2052  00139C  6EDF               	movwf	indf2,c
  2053                           
  2054                           ;FRAME.c: 509:         message->data[0] = 0xFF;
  2055  00139E  EE20 F008          	lfsr	2,8
  2056  0013A2  5026               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2057  0013A4  26D9               	addwf	fsr2l,f,c
  2058  0013A6  5027               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2059  0013A8  22DA               	addwfc	fsr2h,f,c
  2060  0013AA  0EFF               	movlw	255
  2061  0013AC  6EDF               	movwf	indf2,c
  2062                           
  2063                           ;FRAME.c: 510:     }
  2064  0013AE  0012               	return		;funcret
  2065  0013B0                     __end_of_FRAME_PrzypisanieDokarty:
  2066                           	opt callstack 0
  2067                           
  2068 ;; *************** function _FRAME_Plot *****************
  2069 ;; Defined at:
  2070 ;;		line 409 in file "FRAME.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  message         2   12[COMRAM] PTR struct .
  2073 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;Total ram usage:        3 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    4
  2092 ;; This function calls:
  2093 ;;		___lwdiv
  2094 ;; This function is called by:
  2095 ;;		_FRAME_HandleCanFrame
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text15
  2100  0011A8                     __ptext15:
  2101                           	opt callstack 0
  2102  0011A8                     _FRAME_Plot:
  2103                           	opt callstack 24
  2104                           
  2105                           ;FRAME.c: 409: static void FRAME_Plot(mID *message);FRAME.c: 410: {;FRAME.c: 412:     if
      +                          (message->message_type == 0x02)
  2106                           
  2107                           ;incstack = 0
  2108  0011A8  EE20 F001          	lfsr	2,1
  2109  0011AC  502D               	movf	FRAME_Plot@message,w,c
  2110  0011AE  26D9               	addwf	fsr2l,f,c
  2111  0011B0  502E               	movf	FRAME_Plot@message+1,w,c
  2112  0011B2  22DA               	addwfc	fsr2h,f,c
  2113  0011B4  0E02               	movlw	2
  2114  0011B6  18DE               	xorwf	postinc2,w,c
  2115  0011B8  A4D8               	btfss	status,2,c
  2116  0011BA  D013               	goto	l3692
  2117                           
  2118                           ;FRAME.c: 413:     {;FRAME.c: 414:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2119  0011BC  EE20 F008          	lfsr	2,8
  2120  0011C0  502D               	movf	FRAME_Plot@message,w,c
  2121  0011C2  26D9               	addwf	fsr2l,f,c
  2122  0011C4  502E               	movf	FRAME_Plot@message+1,w,c
  2123  0011C6  22DA               	addwfc	fsr2h,f,c
  2124  0011C8  C00C F026          	movff	12,___lwdiv@dividend
  2125  0011CC  C00D F027          	movff	13,___lwdiv@dividend+1
  2126  0011D0  0E00               	movlw	0
  2127  0011D2  6E29               	movwf	___lwdiv@divisor+1,c
  2128  0011D4  0E0A               	movlw	10
  2129  0011D6  6E28               	movwf	___lwdiv@divisor,c
  2130  0011D8  EC00  F009         	call	___lwdiv	;wreg free
  2131  0011DC  5026               	movf	?___lwdiv,w,c
  2132  0011DE  6EDF               	movwf	indf2,c
  2133                           
  2134                           ;FRAME.c: 415:     }
  2135  0011E0  0012               	return	
  2136  0011E2                     l3692:
  2137                           
  2138                           ;FRAME.c: 417:     {;FRAME.c: 418:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2139  0011E2  EE20 F008          	lfsr	2,8
  2140  0011E6  502D               	movf	FRAME_Plot@message,w,c
  2141  0011E8  26D9               	addwf	fsr2l,f,c
  2142  0011EA  502E               	movf	FRAME_Plot@message+1,w,c
  2143  0011EC  22DA               	addwfc	fsr2h,f,c
  2144  0011EE  50DF               	movf	indf2,w,c
  2145  0011F0  6E2F               	movwf	??_FRAME_Plot& (0+255),c
  2146  0011F2  502F               	movf	??_FRAME_Plot,w,c
  2147  0011F4  0D0A               	mullw	10
  2148  0011F6  CFF3 F00C          	movff	prodl,12
  2149  0011FA  CFF4 F00D          	movff	prodh,13
  2150  0011FE  0012               	return		;funcret
  2151  001200                     __end_of_FRAME_Plot:
  2152                           	opt callstack 0
  2153                           
  2154 ;; *************** function _FRAME_MapPosition *****************
  2155 ;; Defined at:
  2156 ;;		line 430 in file "FRAME.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  message         2    5[COMRAM] PTR struct .
  2159 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		None
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;Total ram usage:        2 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    3
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_FRAME_HandleCanFrame
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text16
  2186  001650                     __ptext16:
  2187                           	opt callstack 0
  2188  001650                     _FRAME_MapPosition:
  2189                           	opt callstack 25
  2190                           
  2191                           ;incstack = 0
  2192  001650  0012               	return		;funcret
  2193  001652                     __end_of_FRAME_MapPosition:
  2194                           	opt callstack 0
  2195                           
  2196 ;; *************** function _FRAME_ExcitationValue *****************
  2197 ;; Defined at:
  2198 ;;		line 187 in file "FRAME.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  message         2    5[COMRAM] PTR struct .
  2201 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;Total ram usage:        3 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    3
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_FRAME_HandleCanFrame
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text17
  2228  0013B0                     __ptext17:
  2229                           	opt callstack 0
  2230  0013B0                     _FRAME_ExcitationValue:
  2231                           	opt callstack 25
  2232                           
  2233                           ;FRAME.c: 187: static void FRAME_ExcitationValue(mID *message);FRAME.c: 188: {;FRAME.c: 
      +                          189:     if(message->message_type == 0x02)
  2234                           
  2235                           ;incstack = 0
  2236  0013B0  EE20 F001          	lfsr	2,1
  2237  0013B4  5026               	movf	FRAME_ExcitationValue@message,w,c
  2238  0013B6  26D9               	addwf	fsr2l,f,c
  2239  0013B8  5027               	movf	FRAME_ExcitationValue@message+1,w,c
  2240  0013BA  22DA               	addwfc	fsr2h,f,c
  2241  0013BC  0E02               	movlw	2
  2242  0013BE  18DE               	xorwf	postinc2,w,c
  2243  0013C0  A4D8               	btfss	status,2,c
  2244  0013C2  0012               	return	
  2245                           
  2246                           ;FRAME.c: 190:     {;FRAME.c: 191:         message->data_length = 1;
  2247  0013C4  EE20 F010          	lfsr	2,16
  2248  0013C8  5026               	movf	FRAME_ExcitationValue@message,w,c
  2249  0013CA  26D9               	addwf	fsr2l,f,c
  2250  0013CC  5027               	movf	FRAME_ExcitationValue@message+1,w,c
  2251  0013CE  22DA               	addwfc	fsr2h,f,c
  2252  0013D0  0E01               	movlw	1
  2253  0013D2  6EDF               	movwf	indf2,c
  2254                           
  2255                           ;FRAME.c: 196:         message->data[0] = 0xFF;
  2256  0013D4  EE20 F008          	lfsr	2,8
  2257  0013D8  5026               	movf	FRAME_ExcitationValue@message,w,c
  2258  0013DA  26D9               	addwf	fsr2l,f,c
  2259  0013DC  5027               	movf	FRAME_ExcitationValue@message+1,w,c
  2260  0013DE  22DA               	addwfc	fsr2h,f,c
  2261  0013E0  0EFF               	movlw	255
  2262  0013E2  6EDF               	movwf	indf2,c
  2263                           
  2264                           ;FRAME.c: 197:     }
  2265  0013E4  0012               	return		;funcret
  2266  0013E6                     __end_of_FRAME_ExcitationValue:
  2267                           	opt callstack 0
  2268                           
  2269 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2270 ;; Defined at:
  2271 ;;		line 211 in file "FRAME.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  message         2    5[COMRAM] PTR struct .
  2274 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  i               2    8[COMRAM] unsigned short 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2290 ;;Total ram usage:        5 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    3
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_FRAME_HandleCanFrame
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text18
  2301  001252                     __ptext18:
  2302                           	opt callstack 0
  2303  001252                     _FRAME_ExcitationMultiplier:
  2304                           	opt callstack 25
  2305                           
  2306                           ;FRAME.c: 211: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 212: {;FRAM
      +                          E.c: 213:     WORD i;;FRAME.c: 215:     if(message->message_type == 0x02)
  2307                           
  2308                           ;incstack = 0
  2309  001252  EE20 F001          	lfsr	2,1
  2310  001256  5026               	movf	FRAME_ExcitationMultiplier@message,w,c
  2311  001258  26D9               	addwf	fsr2l,f,c
  2312  00125A  5027               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2313  00125C  22DA               	addwfc	fsr2h,f,c
  2314  00125E  0E02               	movlw	2
  2315  001260  18DE               	xorwf	postinc2,w,c
  2316  001262  A4D8               	btfss	status,2,c
  2317  001264  0012               	return	
  2318                           
  2319                           ;FRAME.c: 216:     {;FRAME.c: 217:         message->data_length = 1;
  2320  001266  EE20 F010          	lfsr	2,16
  2321  00126A  5026               	movf	FRAME_ExcitationMultiplier@message,w,c
  2322  00126C  26D9               	addwf	fsr2l,f,c
  2323  00126E  5027               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2324  001270  22DA               	addwfc	fsr2h,f,c
  2325  001272  0E01               	movlw	1
  2326  001274  6EDF               	movwf	indf2,c
  2327                           
  2328                           ;FRAME.c: 218:         for(i=0; i<3; i++)
  2329  001276  0E00               	movlw	0
  2330  001278  6E2A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2331  00127A  0E00               	movlw	0
  2332  00127C  6E29               	movwf	FRAME_ExcitationMultiplier@i,c
  2333  00127E                     l3664:
  2334                           
  2335                           ;FRAME.c: 219:         {;FRAME.c: 222:         }
  2336  00127E  4A29               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2337  001280  2A2A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2338  001282  502A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2339  001284  E104               	bnz	u2250
  2340  001286  0E03               	movlw	3
  2341  001288  5C29               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2342  00128A  A0D8               	btfss	status,0,c
  2343  00128C  D7F8               	goto	l3664
  2344  00128E                     u2250:
  2345                           
  2346                           ;FRAME.c: 223:         message->data[0] = 0xFF;
  2347  00128E  EE20 F008          	lfsr	2,8
  2348  001292  5026               	movf	FRAME_ExcitationMultiplier@message,w,c
  2349  001294  26D9               	addwf	fsr2l,f,c
  2350  001296  5027               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2351  001298  22DA               	addwfc	fsr2h,f,c
  2352  00129A  0EFF               	movlw	255
  2353  00129C  6EDF               	movwf	indf2,c
  2354                           
  2355                           ;FRAME.c: 224:     }
  2356  00129E  0012               	return		;funcret
  2357  0012A0                     __end_of_FRAME_ExcitationMultiplier:
  2358                           	opt callstack 0
  2359                           
  2360 ;; *************** function _FRAME_DeviceReset *****************
  2361 ;; Defined at:
  2362 ;;		line 345 in file "FRAME.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  message         2    5[COMRAM] PTR struct .
  2365 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2380 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;Total ram usage:        3 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    3
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_FRAME_HandleCanFrame
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text19
  2392  000BEC                     __ptext19:
  2393                           	opt callstack 0
  2394  000BEC                     _FRAME_DeviceReset:
  2395                           	opt callstack 25
  2396                           
  2397                           ;FRAME.c: 345: static void FRAME_DeviceReset(mID *message);FRAME.c: 346: {;FRAME.c: 347:
      +                               if(message->message_type == 0x02)
  2398                           
  2399                           ;incstack = 0
  2400  000BEC  EE20 F001          	lfsr	2,1
  2401  000BF0  5026               	movf	FRAME_DeviceReset@message,w,c
  2402  000BF2  26D9               	addwf	fsr2l,f,c
  2403  000BF4  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2404  000BF6  22DA               	addwfc	fsr2h,f,c
  2405  000BF8  0E02               	movlw	2
  2406  000BFA  18DE               	xorwf	postinc2,w,c
  2407  000BFC  A4D8               	btfss	status,2,c
  2408  000BFE  D057               	goto	l3686
  2409                           
  2410                           ;FRAME.c: 348:     {;FRAME.c: 349:         message->data_length = 1;
  2411  000C00  EE20 F010          	lfsr	2,16
  2412  000C04  5026               	movf	FRAME_DeviceReset@message,w,c
  2413  000C06  26D9               	addwf	fsr2l,f,c
  2414  000C08  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2415  000C0A  22DA               	addwfc	fsr2h,f,c
  2416  000C0C  0E01               	movlw	1
  2417  000C0E  6EDF               	movwf	indf2,c
  2418                           
  2419                           ;FRAME.c: 351:         message->data[0] = (RCON>>6) & 0x01;
  2420  000C10  EE20 F008          	lfsr	2,8
  2421  000C14  5026               	movf	FRAME_DeviceReset@message,w,c
  2422  000C16  26D9               	addwf	fsr2l,f,c
  2423  000C18  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2424  000C1A  22DA               	addwfc	fsr2h,f,c
  2425  000C1C  44D0               	rlncf	4048,w,c	;volatile
  2426  000C1E  46E8               	rlncf	wreg,f,c
  2427  000C20  0B03               	andlw	3
  2428  000C22  0B01               	andlw	1
  2429  000C24  6EDF               	movwf	indf2,c
  2430                           
  2431                           ;FRAME.c: 352:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2432  000C26  EE20 F009          	lfsr	2,9
  2433  000C2A  5026               	movf	FRAME_DeviceReset@message,w,c
  2434  000C2C  26D9               	addwf	fsr2l,f,c
  2435  000C2E  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2436  000C30  22DA               	addwfc	fsr2h,f,c
  2437  000C32  0100               	movlb	0	; () banked
  2438  000C34  A9C6               	btfss	_Flagi& (0+255),4,b
  2439  000C36  D002               	goto	u2290
  2440  000C38  0E01               	movlw	1
  2441  000C3A  D001               	goto	u2296
  2442  000C3C                     u2290:
  2443  000C3C  0E00               	movlw	0
  2444  000C3E                     u2296:
  2445  000C3E  6EDF               	movwf	indf2,c
  2446                           
  2447                           ;FRAME.c: 353:         message->data[2] = Flagi.pomiarTla;
  2448  000C40  EE20 F00A          	lfsr	2,10
  2449  000C44  5026               	movf	FRAME_DeviceReset@message,w,c
  2450  000C46  26D9               	addwf	fsr2l,f,c
  2451  000C48  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2452  000C4A  22DA               	addwfc	fsr2h,f,c
  2453  000C4C  A1C6               	btfss	_Flagi& (0+255),0,b
  2454  000C4E  D002               	goto	u2300
  2455  000C50  0E01               	movlw	1
  2456  000C52  D001               	goto	u2306
  2457  000C54                     u2300:
  2458  000C54  0E00               	movlw	0
  2459  000C56                     u2306:
  2460  000C56  6EDF               	movwf	indf2,c
  2461                           
  2462                           ;FRAME.c: 354:         message->data[3] = 0;
  2463  000C58  EE20 F00B          	lfsr	2,11
  2464  000C5C  5026               	movf	FRAME_DeviceReset@message,w,c
  2465  000C5E  26D9               	addwf	fsr2l,f,c
  2466  000C60  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2467  000C62  22DA               	addwfc	fsr2h,f,c
  2468  000C64  0E00               	movlw	0
  2469  000C66  6EDF               	movwf	indf2,c
  2470                           
  2471                           ;FRAME.c: 355:         message->data[4] = Dane->rokU16;
  2472  000C68  EE20 F00C          	lfsr	2,12
  2473  000C6C  5026               	movf	FRAME_DeviceReset@message,w,c
  2474  000C6E  26D9               	addwf	fsr2l,f,c
  2475  000C70  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2476  000C72  22DA               	addwfc	fsr2h,f,c
  2477  000C74  C036 FFDF          	movff	54,indf2
  2478                           
  2479                           ;FRAME.c: 356:         message->data[5] = Dane->miesiacU16;
  2480  000C78  EE20 F00D          	lfsr	2,13
  2481  000C7C  5026               	movf	FRAME_DeviceReset@message,w,c
  2482  000C7E  26D9               	addwf	fsr2l,f,c
  2483  000C80  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2484  000C82  22DA               	addwfc	fsr2h,f,c
  2485  000C84  C038 FFDF          	movff	56,indf2
  2486                           
  2487                           ;FRAME.c: 357:         message->data[6] = Dane->dzienU16;
  2488  000C88  EE20 F00E          	lfsr	2,14
  2489  000C8C  5026               	movf	FRAME_DeviceReset@message,w,c
  2490  000C8E  26D9               	addwf	fsr2l,f,c
  2491  000C90  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2492  000C92  22DA               	addwfc	fsr2h,f,c
  2493  000C94  C03A FFDF          	movff	58,indf2
  2494                           
  2495                           ;FRAME.c: 358:         message->data[7] = Dane->godzinaU16;
  2496  000C98  EE20 F00F          	lfsr	2,15
  2497  000C9C  5026               	movf	FRAME_DeviceReset@message,w,c
  2498  000C9E  26D9               	addwf	fsr2l,f,c
  2499  000CA0  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2500  000CA2  22DA               	addwfc	fsr2h,f,c
  2501  000CA4  C03C FFDF          	movff	60,indf2
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;FRAME.c: 359:         RCON &= ~(1<<6);
  2505  000CA8  9CD0               	bcf	4048,6,c	;volatile
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;FRAME.c: 360:         Flagi.wykonanoZapisDoFlash = 0;
  2509  000CAA  99C6               	bcf	_Flagi& (0+255),4,b
  2510                           
  2511                           ;FRAME.c: 374:     }
  2512  000CAC  0012               	return	
  2513  000CAE                     l3686:
  2514                           
  2515                           ;FRAME.c: 376:     {;FRAME.c: 377:         message->data_length = 1;
  2516  000CAE  EE20 F010          	lfsr	2,16
  2517  000CB2  5026               	movf	FRAME_DeviceReset@message,w,c
  2518  000CB4  26D9               	addwf	fsr2l,f,c
  2519  000CB6  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2520  000CB8  22DA               	addwfc	fsr2h,f,c
  2521  000CBA  0E01               	movlw	1
  2522  000CBC  6EDF               	movwf	indf2,c
  2523                           
  2524                           ;FRAME.c: 399:         message->data[0] = 0xFF;
  2525  000CBE  EE20 F008          	lfsr	2,8
  2526  000CC2  5026               	movf	FRAME_DeviceReset@message,w,c
  2527  000CC4  26D9               	addwf	fsr2l,f,c
  2528  000CC6  5027               	movf	FRAME_DeviceReset@message+1,w,c
  2529  000CC8  22DA               	addwfc	fsr2h,f,c
  2530  000CCA  0EFF               	movlw	255
  2531  000CCC  6EDF               	movwf	indf2,c
  2532  000CCE  0012               	return		;funcret
  2533  000CD0                     __end_of_FRAME_DeviceReset:
  2534                           	opt callstack 0
  2535                           
  2536 ;; *************** function _FRAME_AxisStatus *****************
  2537 ;; Defined at:
  2538 ;;		line 298 in file "FRAME.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  message         2    5[COMRAM] PTR struct .
  2541 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  i               2    0        unsigned short 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;Total ram usage:        3 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    3
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_FRAME_HandleCanFrame
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text20
  2568  0013E6                     __ptext20:
  2569                           	opt callstack 0
  2570  0013E6                     _FRAME_AxisStatus:
  2571                           	opt callstack 25
  2572                           
  2573                           ;FRAME.c: 298: static void FRAME_AxisStatus(mID *message);FRAME.c: 299: {;FRAME.c: 300: 
      +                              WORD i;;FRAME.c: 302:     if(message->message_type == 0x02)
  2574                           
  2575                           ;incstack = 0
  2576  0013E6  EE20 F001          	lfsr	2,1
  2577  0013EA  5026               	movf	FRAME_AxisStatus@message,w,c
  2578  0013EC  26D9               	addwf	fsr2l,f,c
  2579  0013EE  5027               	movf	FRAME_AxisStatus@message+1,w,c
  2580  0013F0  22DA               	addwfc	fsr2h,f,c
  2581  0013F2  0E02               	movlw	2
  2582  0013F4  18DE               	xorwf	postinc2,w,c
  2583  0013F6  A4D8               	btfss	status,2,c
  2584  0013F8  0012               	return	
  2585                           
  2586                           ;FRAME.c: 303:     {;FRAME.c: 304:         message->data_length = 1;
  2587  0013FA  EE20 F010          	lfsr	2,16
  2588  0013FE  5026               	movf	FRAME_AxisStatus@message,w,c
  2589  001400  26D9               	addwf	fsr2l,f,c
  2590  001402  5027               	movf	FRAME_AxisStatus@message+1,w,c
  2591  001404  22DA               	addwfc	fsr2h,f,c
  2592  001406  0E01               	movlw	1
  2593  001408  6EDF               	movwf	indf2,c
  2594                           
  2595                           ;FRAME.c: 315:         message->data[0] = 0xFF;
  2596  00140A  EE20 F008          	lfsr	2,8
  2597  00140E  5026               	movf	FRAME_AxisStatus@message,w,c
  2598  001410  26D9               	addwf	fsr2l,f,c
  2599  001412  5027               	movf	FRAME_AxisStatus@message+1,w,c
  2600  001414  22DA               	addwfc	fsr2h,f,c
  2601  001416  0EFF               	movlw	255
  2602  001418  6EDF               	movwf	indf2,c
  2603                           
  2604                           ;FRAME.c: 316:     }
  2605  00141A  0012               	return		;funcret
  2606  00141C                     __end_of_FRAME_AxisStatus:
  2607                           	opt callstack 0
  2608                           
  2609 ;; *************** function _FRAME_AveragingTimes *****************
  2610 ;; Defined at:
  2611 ;;		line 239 in file "FRAME.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  message         2    5[COMRAM] PTR struct .
  2614 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;Total ram usage:        3 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    3
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_FRAME_HandleCanFrame
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text21
  2641  00141C                     __ptext21:
  2642                           	opt callstack 0
  2643  00141C                     _FRAME_AveragingTimes:
  2644                           	opt callstack 25
  2645                           
  2646                           ;FRAME.c: 239: static void FRAME_AveragingTimes(mID *message);FRAME.c: 240: {;FRAME.c: 2
      +                          41:     if(message->message_type == 0x02)
  2647                           
  2648                           ;incstack = 0
  2649  00141C  EE20 F001          	lfsr	2,1
  2650  001420  5026               	movf	FRAME_AveragingTimes@message,w,c
  2651  001422  26D9               	addwf	fsr2l,f,c
  2652  001424  5027               	movf	FRAME_AveragingTimes@message+1,w,c
  2653  001426  22DA               	addwfc	fsr2h,f,c
  2654  001428  0E02               	movlw	2
  2655  00142A  18DE               	xorwf	postinc2,w,c
  2656  00142C  A4D8               	btfss	status,2,c
  2657  00142E  0012               	return	
  2658                           
  2659                           ;FRAME.c: 242:     {;FRAME.c: 243:         message->data_length = 1;
  2660  001430  EE20 F010          	lfsr	2,16
  2661  001434  5026               	movf	FRAME_AveragingTimes@message,w,c
  2662  001436  26D9               	addwf	fsr2l,f,c
  2663  001438  5027               	movf	FRAME_AveragingTimes@message+1,w,c
  2664  00143A  22DA               	addwfc	fsr2h,f,c
  2665  00143C  0E01               	movlw	1
  2666  00143E  6EDF               	movwf	indf2,c
  2667                           
  2668                           ;FRAME.c: 251:         message->data[0] = 0xFF;
  2669  001440  EE20 F008          	lfsr	2,8
  2670  001444  5026               	movf	FRAME_AveragingTimes@message,w,c
  2671  001446  26D9               	addwf	fsr2l,f,c
  2672  001448  5027               	movf	FRAME_AveragingTimes@message+1,w,c
  2673  00144A  22DA               	addwfc	fsr2h,f,c
  2674  00144C  0EFF               	movlw	255
  2675  00144E  6EDF               	movwf	indf2,c
  2676                           
  2677                           ;FRAME.c: 252:     }
  2678  001450  0012               	return		;funcret
  2679  001452                     __end_of_FRAME_AveragingTimes:
  2680                           	opt callstack 0
  2681                           
  2682 ;; *************** function _FRAME_AnalogValue *****************
  2683 ;; Defined at:
  2684 ;;		line 478 in file "FRAME.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  message         2    5[COMRAM] PTR struct .
  2687 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2688 ;;  set             2    7[COMRAM] unsigned short 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  i               2    0        unsigned short 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		None
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;Total ram usage:        4 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    3
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_FRAME_HandleCanFrame
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text22
  2715  001652                     __ptext22:
  2716                           	opt callstack 0
  2717  001652                     _FRAME_AnalogValue:
  2718                           	opt callstack 25
  2719                           
  2720                           ;incstack = 0
  2721  001652  0012               	return		;funcret
  2722  001654                     __end_of_FRAME_AnalogValue:
  2723                           	opt callstack 0
  2724                           
  2725 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2726 ;; Defined at:
  2727 ;;		line 522 in file "FRAME.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  message         2    5[COMRAM] PTR struct .
  2730 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2731 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  gaja            2   19[COMRAM] unsigned short 
  2734 ;;  uranos          2   17[COMRAM] unsigned short 
  2735 ;;  zeta_secodus    2    0        unsigned short 
  2736 ;;  zeta            2    0        unsigned short 
  2737 ;;  kier            2   21[COMRAM] unsigned short 
  2738 ;;  iterator_alf    2    0        unsigned short 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;Total ram usage:       18 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    3
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_FRAME_HandleCanFrame
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text23
  2763  000060                     __ptext23:
  2764                           	opt callstack 0
  2765  000060                     _FRAME_AdressOfNeighbors:
  2766                           	opt callstack 25
  2767                           
  2768                           ;FRAME.c: 522: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          523: {;FRAME.c: 524:     WORD iterator_alfa;;FRAME.c: 527:     WORD kier = (nrRamki-0x10
      +                          );
  2769                           
  2770                           ;incstack = 0
  2771  000060  0EF0               	movlw	240
  2772  000062  2428               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  2773  000064  6E36               	movwf	FRAME_AdressOfNeighbors@kier,c
  2774  000066  0EFF               	movlw	255
  2775  000068  2029               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  2776  00006A  6E37               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  2777                           
  2778                           ;FRAME.c: 528:     if(message->message_type == 0x02)
  2779  00006C  EE20 F001          	lfsr	2,1
  2780  000070  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2781  000072  26D9               	addwf	fsr2l,f,c
  2782  000074  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2783  000076  22DA               	addwfc	fsr2h,f,c
  2784  000078  0E02               	movlw	2
  2785  00007A  18DE               	xorwf	postinc2,w,c
  2786  00007C  A4D8               	btfss	status,2,c
  2787  00007E  D08E               	goto	l3714
  2788                           
  2789                           ;FRAME.c: 529:     {;FRAME.c: 531:         message->data_length = 8;
  2790  000080  EE20 F010          	lfsr	2,16
  2791  000084  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2792  000086  26D9               	addwf	fsr2l,f,c
  2793  000088  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2794  00008A  22DA               	addwfc	fsr2h,f,c
  2795  00008C  0E08               	movlw	8
  2796  00008E  6EDF               	movwf	indf2,c
  2797                           
  2798                           ;FRAME.c: 533:         if(kier == 0)
  2799  000090  5036               	movf	FRAME_AdressOfNeighbors@kier,w,c
  2800  000092  1037               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  2801  000094  A4D8               	btfss	status,2,c
  2802  000096  D041               	goto	l3712
  2803                           
  2804                           ;FRAME.c: 534:         {;FRAME.c: 535:         message->data[0] = NeightAdress1>> 8;
  2805  000098  EE20 F008          	lfsr	2,8
  2806  00009C  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2807  00009E  26D9               	addwf	fsr2l,f,c
  2808  0000A0  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2809  0000A2  22DA               	addwfc	fsr2h,f,c
  2810  0000A4  5017               	movf	_NeightAdress1+1,w,c	;volatile
  2811  0000A6  6EDF               	movwf	indf2,c
  2812                           
  2813                           ;FRAME.c: 536:         message->data[1] = NeightAdress1;
  2814  0000A8  EE20 F009          	lfsr	2,9
  2815  0000AC  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2816  0000AE  26D9               	addwf	fsr2l,f,c
  2817  0000B0  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2818  0000B2  22DA               	addwfc	fsr2h,f,c
  2819  0000B4  C016  FFDF         	movff	_NeightAdress1,indf2	;volatile
  2820                           
  2821                           ;FRAME.c: 537:         message->data[2] = NeightAdress2>> 8;
  2822  0000B8  EE20 F00A          	lfsr	2,10
  2823  0000BC  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2824  0000BE  26D9               	addwf	fsr2l,f,c
  2825  0000C0  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2826  0000C2  22DA               	addwfc	fsr2h,f,c
  2827  0000C4  5015               	movf	_NeightAdress2+1,w,c	;volatile
  2828  0000C6  6EDF               	movwf	indf2,c
  2829                           
  2830                           ;FRAME.c: 538:         message->data[3] = NeightAdress2;
  2831  0000C8  EE20 F00B          	lfsr	2,11
  2832  0000CC  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2833  0000CE  26D9               	addwf	fsr2l,f,c
  2834  0000D0  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2835  0000D2  22DA               	addwfc	fsr2h,f,c
  2836  0000D4  C014  FFDF         	movff	_NeightAdress2,indf2	;volatile
  2837                           
  2838                           ;FRAME.c: 539:         message->data[4] = NeightAdress3>> 8;
  2839  0000D8  EE20 F00C          	lfsr	2,12
  2840  0000DC  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2841  0000DE  26D9               	addwf	fsr2l,f,c
  2842  0000E0  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2843  0000E2  22DA               	addwfc	fsr2h,f,c
  2844  0000E4  5013               	movf	_NeightAdress3+1,w,c	;volatile
  2845  0000E6  6EDF               	movwf	indf2,c
  2846                           
  2847                           ;FRAME.c: 540:         message->data[5] = NeightAdress3;
  2848  0000E8  EE20 F00D          	lfsr	2,13
  2849  0000EC  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2850  0000EE  26D9               	addwf	fsr2l,f,c
  2851  0000F0  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2852  0000F2  22DA               	addwfc	fsr2h,f,c
  2853  0000F4  C012  FFDF         	movff	_NeightAdress3,indf2	;volatile
  2854                           
  2855                           ;FRAME.c: 541:         message->data[6] = NeightAdress4>> 8;
  2856  0000F8  EE20 F00E          	lfsr	2,14
  2857  0000FC  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2858  0000FE  26D9               	addwf	fsr2l,f,c
  2859  000100  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2860  000102  22DA               	addwfc	fsr2h,f,c
  2861  000104  5011               	movf	_NeightAdress4+1,w,c	;volatile
  2862  000106  6EDF               	movwf	indf2,c
  2863                           
  2864                           ;FRAME.c: 542:         message->data[7] = NeightAdress4;
  2865  000108  EE20 F00F          	lfsr	2,15
  2866  00010C  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2867  00010E  26D9               	addwf	fsr2l,f,c
  2868  000110  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2869  000112  22DA               	addwfc	fsr2h,f,c
  2870  000114  C010  FFDF         	movff	_NeightAdress4,indf2	;volatile
  2871                           
  2872                           ;FRAME.c: 543:         }
  2873  000118  0012               	return	
  2874  00011A                     l3712:
  2875                           
  2876                           ;FRAME.c: 545:         {;FRAME.c: 546:         message->data[0] = NeightAdress5>> 8;
  2877  00011A  EE20 F008          	lfsr	2,8
  2878  00011E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2879  000120  26D9               	addwf	fsr2l,f,c
  2880  000122  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2881  000124  22DA               	addwfc	fsr2h,f,c
  2882  000126  500F               	movf	_NeightAdress5+1,w,c	;volatile
  2883  000128  6EDF               	movwf	indf2,c
  2884                           
  2885                           ;FRAME.c: 547:         message->data[1] = NeightAdress5;
  2886  00012A  EE20 F009          	lfsr	2,9
  2887  00012E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2888  000130  26D9               	addwf	fsr2l,f,c
  2889  000132  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2890  000134  22DA               	addwfc	fsr2h,f,c
  2891  000136  C00E  FFDF         	movff	_NeightAdress5,indf2	;volatile
  2892                           
  2893                           ;FRAME.c: 548:         message->data[2] = NeightAdress6>> 8;
  2894  00013A  EE20 F00A          	lfsr	2,10
  2895  00013E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2896  000140  26D9               	addwf	fsr2l,f,c
  2897  000142  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2898  000144  22DA               	addwfc	fsr2h,f,c
  2899  000146  500D               	movf	_NeightAdress6+1,w,c	;volatile
  2900  000148  6EDF               	movwf	indf2,c
  2901                           
  2902                           ;FRAME.c: 549:         message->data[3] = NeightAdress6;
  2903  00014A  EE20 F00B          	lfsr	2,11
  2904  00014E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2905  000150  26D9               	addwf	fsr2l,f,c
  2906  000152  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2907  000154  22DA               	addwfc	fsr2h,f,c
  2908  000156  C00C  FFDF         	movff	_NeightAdress6,indf2	;volatile
  2909                           
  2910                           ;FRAME.c: 550:         message->data[4] = NeightAdress7>> 8;
  2911  00015A  EE20 F00C          	lfsr	2,12
  2912  00015E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2913  000160  26D9               	addwf	fsr2l,f,c
  2914  000162  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2915  000164  22DA               	addwfc	fsr2h,f,c
  2916  000166  500B               	movf	_NeightAdress7+1,w,c	;volatile
  2917  000168  6EDF               	movwf	indf2,c
  2918                           
  2919                           ;FRAME.c: 551:         message->data[5] = NeightAdress7;
  2920  00016A  EE20 F00D          	lfsr	2,13
  2921  00016E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2922  000170  26D9               	addwf	fsr2l,f,c
  2923  000172  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2924  000174  22DA               	addwfc	fsr2h,f,c
  2925  000176  C00A  FFDF         	movff	_NeightAdress7,indf2	;volatile
  2926                           
  2927                           ;FRAME.c: 552:         message->data[6] = NeightAdress8>> 8;
  2928  00017A  EE20 F00E          	lfsr	2,14
  2929  00017E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2930  000180  26D9               	addwf	fsr2l,f,c
  2931  000182  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2932  000184  22DA               	addwfc	fsr2h,f,c
  2933  000186  5009               	movf	_NeightAdress8+1,w,c	;volatile
  2934  000188  6EDF               	movwf	indf2,c
  2935                           
  2936                           ;FRAME.c: 553:         message->data[7] = NeightAdress8;
  2937  00018A  EE20 F00F          	lfsr	2,15
  2938  00018E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2939  000190  26D9               	addwf	fsr2l,f,c
  2940  000192  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2941  000194  22DA               	addwfc	fsr2h,f,c
  2942  000196  C008  FFDF         	movff	_NeightAdress8,indf2	;volatile
  2943  00019A  0012               	return	
  2944  00019C                     l3714:
  2945                           
  2946                           ;FRAME.c: 565:     {;FRAME.c: 566:         WORD uranos = (message->data[2] << 8 ) | mess
      +                          age->data[3];
  2947  00019C  EE20 F00A          	lfsr	2,10
  2948  0001A0  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2949  0001A2  26D9               	addwf	fsr2l,f,c
  2950  0001A4  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2951  0001A6  22DA               	addwfc	fsr2h,f,c
  2952  0001A8  50DF               	movf	indf2,w,c
  2953  0001AA  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  2954  0001AC  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  2955  0001AE  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  2956  0001B0  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  2957  0001B2  EE20 F00B          	lfsr	2,11
  2958  0001B6  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2959  0001B8  26D9               	addwf	fsr2l,f,c
  2960  0001BA  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2961  0001BC  22DA               	addwfc	fsr2h,f,c
  2962  0001BE  50DF               	movf	indf2,w,c
  2963  0001C0  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  2964  0001C2  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2965  0001C4  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  2966  0001C6  6E32               	movwf	FRAME_AdressOfNeighbors@uranos,c
  2967  0001C8  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2968  0001CA  6E33               	movwf	FRAME_AdressOfNeighbors@uranos+1,c
  2969                           
  2970                           ;FRAME.c: 571:          WORD gaja = message->data[0] << 8 | message->data[1];
  2971  0001CC  EE20 F008          	lfsr	2,8
  2972  0001D0  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2973  0001D2  26D9               	addwf	fsr2l,f,c
  2974  0001D4  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2975  0001D6  22DA               	addwfc	fsr2h,f,c
  2976  0001D8  50DF               	movf	indf2,w,c
  2977  0001DA  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  2978  0001DC  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  2979  0001DE  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  2980  0001E0  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  2981  0001E2  EE20 F009          	lfsr	2,9
  2982  0001E6  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  2983  0001E8  26D9               	addwf	fsr2l,f,c
  2984  0001EA  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2985  0001EC  22DA               	addwfc	fsr2h,f,c
  2986  0001EE  50DF               	movf	indf2,w,c
  2987  0001F0  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  2988  0001F2  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2989  0001F4  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  2990  0001F6  6E34               	movwf	FRAME_AdressOfNeighbors@gaja,c
  2991  0001F8  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2992  0001FA  6E35               	movwf	FRAME_AdressOfNeighbors@gaja+1,c
  2993                           
  2994                           ;FRAME.c: 574:         if(kier == 0)
  2995  0001FC  5036               	movf	FRAME_AdressOfNeighbors@kier,w,c
  2996  0001FE  1037               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  2997  000200  A4D8               	btfss	status,2,c
  2998  000202  D061               	goto	l3724
  2999                           
  3000                           ;FRAME.c: 575:         {;FRAME.c: 576:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3001  000204  EE20 F008          	lfsr	2,8
  3002  000208  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3003  00020A  26D9               	addwf	fsr2l,f,c
  3004  00020C  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3005  00020E  22DA               	addwfc	fsr2h,f,c
  3006  000210  50DF               	movf	indf2,w,c
  3007  000212  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3008  000214  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3009  000216  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3010  000218  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3011  00021A  EE20 F009          	lfsr	2,9
  3012  00021E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3013  000220  26D9               	addwf	fsr2l,f,c
  3014  000222  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3015  000224  22DA               	addwfc	fsr2h,f,c
  3016  000226  50DF               	movf	indf2,w,c
  3017  000228  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3018  00022A  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3019  00022C  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3020  00022E  6E16               	movwf	_NeightAdress1,c	;volatile
  3021  000230  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3022  000232  6E17               	movwf	_NeightAdress1+1,c	;volatile
  3023                           
  3024                           ;FRAME.c: 577:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3025  000234  EE20 F00A          	lfsr	2,10
  3026  000238  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3027  00023A  26D9               	addwf	fsr2l,f,c
  3028  00023C  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3029  00023E  22DA               	addwfc	fsr2h,f,c
  3030  000240  50DF               	movf	indf2,w,c
  3031  000242  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3032  000244  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3033  000246  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3034  000248  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3035  00024A  EE20 F00B          	lfsr	2,11
  3036  00024E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3037  000250  26D9               	addwf	fsr2l,f,c
  3038  000252  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3039  000254  22DA               	addwfc	fsr2h,f,c
  3040  000256  50DF               	movf	indf2,w,c
  3041  000258  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3042  00025A  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3043  00025C  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3044  00025E  6E14               	movwf	_NeightAdress2,c	;volatile
  3045  000260  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3046  000262  6E15               	movwf	_NeightAdress2+1,c	;volatile
  3047                           
  3048                           ;FRAME.c: 578:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3049  000264  EE20 F00C          	lfsr	2,12
  3050  000268  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3051  00026A  26D9               	addwf	fsr2l,f,c
  3052  00026C  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3053  00026E  22DA               	addwfc	fsr2h,f,c
  3054  000270  50DF               	movf	indf2,w,c
  3055  000272  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3056  000274  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3057  000276  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3058  000278  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3059  00027A  EE20 F00D          	lfsr	2,13
  3060  00027E  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3061  000280  26D9               	addwf	fsr2l,f,c
  3062  000282  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3063  000284  22DA               	addwfc	fsr2h,f,c
  3064  000286  50DF               	movf	indf2,w,c
  3065  000288  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3066  00028A  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3067  00028C  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3068  00028E  6E12               	movwf	_NeightAdress3,c	;volatile
  3069  000290  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3070  000292  6E13               	movwf	_NeightAdress3+1,c	;volatile
  3071                           
  3072                           ;FRAME.c: 579:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3073  000294  EE20 F00E          	lfsr	2,14
  3074  000298  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3075  00029A  26D9               	addwf	fsr2l,f,c
  3076  00029C  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3077  00029E  22DA               	addwfc	fsr2h,f,c
  3078  0002A0  50DF               	movf	indf2,w,c
  3079  0002A2  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3080  0002A4  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3081  0002A6  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3082  0002A8  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3083  0002AA  EE20 F00F          	lfsr	2,15
  3084  0002AE  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3085  0002B0  26D9               	addwf	fsr2l,f,c
  3086  0002B2  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3087  0002B4  22DA               	addwfc	fsr2h,f,c
  3088  0002B6  50DF               	movf	indf2,w,c
  3089  0002B8  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3090  0002BA  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3091  0002BC  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3092  0002BE  6E10               	movwf	_NeightAdress4,c	;volatile
  3093  0002C0  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3094  0002C2  6E11               	movwf	_NeightAdress4+1,c	;volatile
  3095                           
  3096                           ;FRAME.c: 580:         }
  3097  0002C4  0012               	return	
  3098  0002C6                     l3724:
  3099                           
  3100                           ;FRAME.c: 582:         {;FRAME.c: 583:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3101  0002C6  EE20 F008          	lfsr	2,8
  3102  0002CA  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3103  0002CC  26D9               	addwf	fsr2l,f,c
  3104  0002CE  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3105  0002D0  22DA               	addwfc	fsr2h,f,c
  3106  0002D2  50DF               	movf	indf2,w,c
  3107  0002D4  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3108  0002D6  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3109  0002D8  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3110  0002DA  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3111  0002DC  EE20 F009          	lfsr	2,9
  3112  0002E0  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3113  0002E2  26D9               	addwf	fsr2l,f,c
  3114  0002E4  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3115  0002E6  22DA               	addwfc	fsr2h,f,c
  3116  0002E8  50DF               	movf	indf2,w,c
  3117  0002EA  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3118  0002EC  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3119  0002EE  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3120  0002F0  6E0E               	movwf	_NeightAdress5,c	;volatile
  3121  0002F2  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3122  0002F4  6E0F               	movwf	_NeightAdress5+1,c	;volatile
  3123                           
  3124                           ;FRAME.c: 584:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3125  0002F6  EE20 F00A          	lfsr	2,10
  3126  0002FA  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3127  0002FC  26D9               	addwf	fsr2l,f,c
  3128  0002FE  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3129  000300  22DA               	addwfc	fsr2h,f,c
  3130  000302  50DF               	movf	indf2,w,c
  3131  000304  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3132  000306  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3133  000308  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3134  00030A  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3135  00030C  EE20 F00B          	lfsr	2,11
  3136  000310  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3137  000312  26D9               	addwf	fsr2l,f,c
  3138  000314  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3139  000316  22DA               	addwfc	fsr2h,f,c
  3140  000318  50DF               	movf	indf2,w,c
  3141  00031A  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3142  00031C  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3143  00031E  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3144  000320  6E0C               	movwf	_NeightAdress6,c	;volatile
  3145  000322  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3146  000324  6E0D               	movwf	_NeightAdress6+1,c	;volatile
  3147                           
  3148                           ;FRAME.c: 585:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3149  000326  EE20 F00C          	lfsr	2,12
  3150  00032A  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3151  00032C  26D9               	addwf	fsr2l,f,c
  3152  00032E  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3153  000330  22DA               	addwfc	fsr2h,f,c
  3154  000332  50DF               	movf	indf2,w,c
  3155  000334  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3156  000336  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3157  000338  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3158  00033A  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3159  00033C  EE20 F00D          	lfsr	2,13
  3160  000340  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3161  000342  26D9               	addwf	fsr2l,f,c
  3162  000344  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3163  000346  22DA               	addwfc	fsr2h,f,c
  3164  000348  50DF               	movf	indf2,w,c
  3165  00034A  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3166  00034C  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3167  00034E  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3168  000350  6E0A               	movwf	_NeightAdress7,c	;volatile
  3169  000352  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3170  000354  6E0B               	movwf	_NeightAdress7+1,c	;volatile
  3171                           
  3172                           ;FRAME.c: 586:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3173  000356  EE20 F00E          	lfsr	2,14
  3174  00035A  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3175  00035C  26D9               	addwf	fsr2l,f,c
  3176  00035E  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3177  000360  22DA               	addwfc	fsr2h,f,c
  3178  000362  50DF               	movf	indf2,w,c
  3179  000364  6E2A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3180  000366  502A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3181  000368  6E2C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3182  00036A  6A2B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3183  00036C  EE20 F00F          	lfsr	2,15
  3184  000370  5026               	movf	FRAME_AdressOfNeighbors@message,w,c
  3185  000372  26D9               	addwf	fsr2l,f,c
  3186  000374  5027               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3187  000376  22DA               	addwfc	fsr2h,f,c
  3188  000378  50DF               	movf	indf2,w,c
  3189  00037A  6E2D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3190  00037C  502D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3191  00037E  102B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3192  000380  6E08               	movwf	_NeightAdress8,c	;volatile
  3193  000382  502C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3194  000384  6E09               	movwf	_NeightAdress8+1,c	;volatile
  3195  000386  0012               	return		;funcret
  3196  000388                     __end_of_FRAME_AdressOfNeighbors:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _FRAME_AccelerometerStatus *****************
  3200 ;; Defined at:
  3201 ;;		line 162 in file "FRAME.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  message         2    7[COMRAM] PTR struct .
  3204 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;Total ram usage:        3 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    4
  3223 ;; This function calls:
  3224 ;;		_MOCK_Klikniecie_Spadek
  3225 ;;		_MOCK_PrzyspieszenieX
  3226 ;;		_MOCK_PrzyspieszenieY
  3227 ;;		_MOCK_PrzyspieszenieZ
  3228 ;; This function is called by:
  3229 ;;		_FRAME_HandleCanFrame
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text24
  3234  001016                     __ptext24:
  3235                           	opt callstack 0
  3236  001016                     _FRAME_AccelerometerStatus:
  3237                           	opt callstack 24
  3238                           
  3239                           ;FRAME.c: 162: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 163: {;FRAME
      +                          .c: 164:     if(message->message_type == 0x02)
  3240                           
  3241                           ;incstack = 0
  3242  001016  EE20 F001          	lfsr	2,1
  3243  00101A  5028               	movf	FRAME_AccelerometerStatus@message,w,c
  3244  00101C  26D9               	addwf	fsr2l,f,c
  3245  00101E  5029               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3246  001020  22DA               	addwfc	fsr2h,f,c
  3247  001022  0E02               	movlw	2
  3248  001024  18DE               	xorwf	postinc2,w,c
  3249  001026  A4D8               	btfss	status,2,c
  3250  001028  0012               	return	
  3251                           
  3252                           ;FRAME.c: 165:     {;FRAME.c: 166:         message->data_length = 4;
  3253  00102A  EE20 F010          	lfsr	2,16
  3254  00102E  5028               	movf	FRAME_AccelerometerStatus@message,w,c
  3255  001030  26D9               	addwf	fsr2l,f,c
  3256  001032  5029               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3257  001034  22DA               	addwfc	fsr2h,f,c
  3258  001036  0E04               	movlw	4
  3259  001038  6EDF               	movwf	indf2,c
  3260                           
  3261                           ;FRAME.c: 170:         message->data[0] = MOCK_PrzyspieszenieX();
  3262  00103A  EE20 F008          	lfsr	2,8
  3263  00103E  5028               	movf	FRAME_AccelerometerStatus@message,w,c
  3264  001040  26D9               	addwf	fsr2l,f,c
  3265  001042  5029               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3266  001044  22DA               	addwfc	fsr2h,f,c
  3267  001046  ECFD  F00A         	call	_MOCK_PrzyspieszenieX	;wreg free
  3268  00104A  5026               	movf	?_MOCK_PrzyspieszenieX,w,c
  3269  00104C  6EDF               	movwf	indf2,c
  3270                           
  3271                           ;FRAME.c: 171:         message->data[1] = MOCK_PrzyspieszenieY();
  3272  00104E  EE20 F009          	lfsr	2,9
  3273  001052  5028               	movf	FRAME_AccelerometerStatus@message,w,c
  3274  001054  26D9               	addwf	fsr2l,f,c
  3275  001056  5029               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3276  001058  22DA               	addwfc	fsr2h,f,c
  3277  00105A  ECF8  F00A         	call	_MOCK_PrzyspieszenieY	;wreg free
  3278  00105E  5026               	movf	?_MOCK_PrzyspieszenieY,w,c
  3279  001060  6EDF               	movwf	indf2,c
  3280                           
  3281                           ;FRAME.c: 172:         message->data[2] = MOCK_PrzyspieszenieZ();
  3282  001062  EE20 F00A          	lfsr	2,10
  3283  001066  5028               	movf	FRAME_AccelerometerStatus@message,w,c
  3284  001068  26D9               	addwf	fsr2l,f,c
  3285  00106A  5029               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3286  00106C  22DA               	addwfc	fsr2h,f,c
  3287  00106E  ECF3  F00A         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3288  001072  5026               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3289  001074  6EDF               	movwf	indf2,c
  3290                           
  3291                           ;FRAME.c: 173:         message->data[3] = MOCK_Klikniecie_Spadek();
  3292  001076  EE20 F00B          	lfsr	2,11
  3293  00107A  5028               	movf	FRAME_AccelerometerStatus@message,w,c
  3294  00107C  26D9               	addwf	fsr2l,f,c
  3295  00107E  5029               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3296  001080  22DA               	addwfc	fsr2h,f,c
  3297  001082  EC02  F00B         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3298  001086  5026               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3299  001088  6EDF               	movwf	indf2,c
  3300                           
  3301                           ;FRAME.c: 174:     }
  3302  00108A  0012               	return		;funcret
  3303  00108C                     __end_of_FRAME_AccelerometerStatus:
  3304                           	opt callstack 0
  3305                           
  3306 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3307 ;; Defined at:
  3308 ;;		line 72 in file "MOC_Funct.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  2    5[COMRAM] unsigned int 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    3
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_FRAME_AccelerometerStatus
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text25
  3337  0015E6                     __ptext25:
  3338                           	opt callstack 0
  3339  0015E6                     _MOCK_PrzyspieszenieZ:
  3340                           	opt callstack 24
  3341                           
  3342                           ;MOC_Funct.c: 74:     return 0xFE;
  3343                           
  3344                           ;incstack = 0
  3345  0015E6  0E00               	movlw	0
  3346  0015E8  6E27               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3347  0015EA  0EFE               	movlw	254
  3348  0015EC  6E26               	movwf	?_MOCK_PrzyspieszenieZ,c
  3349  0015EE  0012               	return		;funcret
  3350  0015F0                     __end_of_MOCK_PrzyspieszenieZ:
  3351                           	opt callstack 0
  3352                           
  3353 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3354 ;; Defined at:
  3355 ;;		line 68 in file "MOC_Funct.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  2    5[COMRAM] unsigned int 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;Total ram usage:        2 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    3
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_FRAME_AccelerometerStatus
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text26
  3384  0015F0                     __ptext26:
  3385                           	opt callstack 0
  3386  0015F0                     _MOCK_PrzyspieszenieY:
  3387                           	opt callstack 24
  3388                           
  3389                           ;MOC_Funct.c: 70:     return 0xFE;
  3390                           
  3391                           ;incstack = 0
  3392  0015F0  0E00               	movlw	0
  3393  0015F2  6E27               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3394  0015F4  0EFE               	movlw	254
  3395  0015F6  6E26               	movwf	?_MOCK_PrzyspieszenieY,c
  3396  0015F8  0012               	return		;funcret
  3397  0015FA                     __end_of_MOCK_PrzyspieszenieY:
  3398                           	opt callstack 0
  3399                           
  3400 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3401 ;; Defined at:
  3402 ;;		line 63 in file "MOC_Funct.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  2    5[COMRAM] unsigned int 
  3409 ;; Registers used:
  3410 ;;		wreg, status,2
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3420 ;;Total ram usage:        2 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    3
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_FRAME_AccelerometerStatus
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text27
  3431  0015FA                     __ptext27:
  3432                           	opt callstack 0
  3433  0015FA                     _MOCK_PrzyspieszenieX:
  3434                           	opt callstack 24
  3435                           
  3436                           ;MOC_Funct.c: 65:     return 0xFE;
  3437                           
  3438                           ;incstack = 0
  3439  0015FA  0E00               	movlw	0
  3440  0015FC  6E27               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3441  0015FE  0EFE               	movlw	254
  3442  001600  6E26               	movwf	?_MOCK_PrzyspieszenieX,c
  3443  001602  0012               	return		;funcret
  3444  001604                     __end_of_MOCK_PrzyspieszenieX:
  3445                           	opt callstack 0
  3446                           
  3447 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3448 ;; Defined at:
  3449 ;;		line 76 in file "MOC_Funct.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  2    5[COMRAM] unsigned int 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3467 ;;Total ram usage:        2 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    3
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_FRAME_AccelerometerStatus
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text28
  3478  001604                     __ptext28:
  3479                           	opt callstack 0
  3480  001604                     _MOCK_Klikniecie_Spadek:
  3481                           	opt callstack 24
  3482                           
  3483                           ;MOC_Funct.c: 78:     return 0b00000000;
  3484                           
  3485                           ;incstack = 0
  3486  001604  0E00               	movlw	0
  3487  001606  6E27               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3488  001608  0E00               	movlw	0
  3489  00160A  6E26               	movwf	?_MOCK_Klikniecie_Spadek,c
  3490  00160C  0012               	return		;funcret
  3491  00160E                     __end_of_MOCK_Klikniecie_Spadek:
  3492                           	opt callstack 0
  3493                           
  3494 ;; *************** function _CAN_SendFrame *****************
  3495 ;; Defined at:
  3496 ;;		line 196 in file "CAN.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  message         2   10[COMRAM] PTR struct .
  3499 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;Total ram usage:        5 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    4
  3518 ;; This function calls:
  3519 ;;		_CAN_MoveBuffIntoFrame
  3520 ;; This function is called by:
  3521 ;;		_FRAME_HandleCanFrame
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text29
  3526  000812                     __ptext29:
  3527                           	opt callstack 0
  3528  000812                     _CAN_SendFrame:
  3529                           	opt callstack 24
  3530                           
  3531                           ;CAN.c: 201:     {;CAN.c: 202:         ECANCON = 0x83;
  3532                           
  3533                           ;incstack = 0
  3534                           ;CAN.c: 196: void CAN_SendFrame(mID * message);CAN.c: 197: {;CAN.c: 200:     for(;;)
  3535  000812  0E83               	movlw	131
  3536  000814  6E77               	movwf	3959,c	;volatile
  3537                           
  3538                           ;CAN.c: 203:         if(!RXB0CONbits.FILHIT3)
  3539  000816  A660               	btfss	3936,3,c	;volatile
  3540  000818  D00A               	goto	l189
  3541                           
  3542                           ;CAN.c: 208:         ECANCON = 0x84;
  3543  00081A  0E84               	movlw	132
  3544  00081C  6E77               	movwf	3959,c	;volatile
  3545                           
  3546                           ;CAN.c: 209:         if(!RXB0CONbits.FILHIT3)
  3547  00081E  A660               	btfss	3936,3,c	;volatile
  3548  000820  D006               	goto	l189
  3549                           
  3550                           ;CAN.c: 214:         ECANCON = 0x85;
  3551  000822  0E85               	movlw	133
  3552  000824  6E77               	movwf	3959,c	;volatile
  3553                           
  3554                           ;CAN.c: 215:         if(!RXB0CONbits.FILHIT3)
  3555  000826  A660               	btfss	3936,3,c	;volatile
  3556  000828  D002               	goto	l189
  3557  00082A  D7F3               	goto	_CAN_SendFrame
  3558  00082C                     l190:
  3559  00082C  00FF               	reset		;# 
  3560  00082E                     l189:
  3561                           
  3562                           ;CAN.c: 222:     while(COMSTATbits.TXWARN)
  3563  00082E  B474               	btfsc	3956,2,c	;volatile
  3564  000830  D7FD               	goto	l190
  3565                           
  3566                           ;CAN.c: 226:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3567  000832  0E00               	movlw	0
  3568  000834  6E07               	movwf	_DetectorLedRadar+2,c
  3569                           
  3570                           ;CAN.c: 227:     RXB0EIDL = message->id.v[0];
  3571  000836  EE20 F004          	lfsr	2,4
  3572  00083A  502B               	movf	CAN_SendFrame@message,w,c
  3573  00083C  26D9               	addwf	fsr2l,f,c
  3574  00083E  502C               	movf	CAN_SendFrame@message+1,w,c
  3575  000840  22DA               	addwfc	fsr2h,f,c
  3576  000842  50DF               	movf	indf2,w,c
  3577  000844  6E64               	movwf	3940,c	;volatile
  3578                           
  3579                           ;CAN.c: 228:     RXB0EIDH = message->id.v[1];
  3580  000846  EE20 F005          	lfsr	2,5
  3581  00084A  502B               	movf	CAN_SendFrame@message,w,c
  3582  00084C  26D9               	addwf	fsr2l,f,c
  3583  00084E  502C               	movf	CAN_SendFrame@message+1,w,c
  3584  000850  22DA               	addwfc	fsr2h,f,c
  3585  000852  50DF               	movf	indf2,w,c
  3586  000854  6E63               	movwf	3939,c	;volatile
  3587                           
  3588                           ;CAN.c: 229:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3589  000856  EE20 F006          	lfsr	2,6
  3590  00085A  502B               	movf	CAN_SendFrame@message,w,c
  3591  00085C  26D9               	addwf	fsr2l,f,c
  3592  00085E  502C               	movf	CAN_SendFrame@message+1,w,c
  3593  000860  22DA               	addwfc	fsr2h,f,c
  3594  000862  50DF               	movf	indf2,w,c
  3595  000864  6E2D               	movwf	??_CAN_SendFrame& (0+255),c
  3596  000866  0E03               	movlw	3
  3597  000868  162D               	andwf	??_CAN_SendFrame,f,c
  3598  00086A  EE20 F006          	lfsr	2,6
  3599  00086E  502B               	movf	CAN_SendFrame@message,w,c
  3600  000870  26D9               	addwf	fsr2l,f,c
  3601  000872  502C               	movf	CAN_SendFrame@message+1,w,c
  3602  000874  22DA               	addwfc	fsr2h,f,c
  3603  000876  50DF               	movf	indf2,w,c
  3604  000878  0BFC               	andlw	252
  3605  00087A  0D08               	mullw	8
  3606  00087C  50F3               	movf	prodl,w,c
  3607  00087E  102D               	iorwf	??_CAN_SendFrame,w,c
  3608  000880  6E62               	movwf	3938,c	;volatile
  3609                           
  3610                           ;CAN.c: 230:     RXB0SIDLbits.EXID = 1;
  3611  000882  8662               	bsf	3938,3,c	;volatile
  3612                           
  3613                           ;CAN.c: 231:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3614  000884  EE20 F006          	lfsr	2,6
  3615  000888  502B               	movf	CAN_SendFrame@message,w,c
  3616  00088A  26D9               	addwf	fsr2l,f,c
  3617  00088C  502C               	movf	CAN_SendFrame@message+1,w,c
  3618  00088E  22DA               	addwfc	fsr2h,f,c
  3619  000890  CFDE F02D          	movff	postinc2,??_CAN_SendFrame
  3620  000894  CFDD F02E          	movff	postdec2,??_CAN_SendFrame+1
  3621  000898  0E05               	movlw	5
  3622  00089A  6E2F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3623  00089C                     u2155:
  3624  00089C  90D8               	bcf	status,0,c
  3625  00089E  322E               	rrcf	??_CAN_SendFrame+1,f,c
  3626  0008A0  322D               	rrcf	??_CAN_SendFrame,f,c
  3627  0008A2  2E2F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3628  0008A4  D7FB               	goto	u2155
  3629  0008A6  502D               	movf	??_CAN_SendFrame,w,c
  3630  0008A8  6E61               	movwf	3937,c	;volatile
  3631                           
  3632                           ;CAN.c: 233:     RXB0DLC = 0;
  3633  0008AA  0E00               	movlw	0
  3634  0008AC  6E65               	movwf	3941,c	;volatile
  3635                           
  3636                           ;CAN.c: 235:     if(message->message_type==0x02)
  3637  0008AE  EE20 F001          	lfsr	2,1
  3638  0008B2  502B               	movf	CAN_SendFrame@message,w,c
  3639  0008B4  26D9               	addwf	fsr2l,f,c
  3640  0008B6  502C               	movf	CAN_SendFrame@message+1,w,c
  3641  0008B8  22DA               	addwfc	fsr2h,f,c
  3642  0008BA  0E02               	movlw	2
  3643  0008BC  18DE               	xorwf	postinc2,w,c
  3644  0008BE  A4D8               	btfss	status,2,c
  3645  0008C0  D002               	goto	l3582
  3646                           
  3647                           ;CAN.c: 236:     {;CAN.c: 237:         RXB0DLCbits.RXRTR = 1;
  3648  0008C2  8C65               	bsf	3941,6,c	;volatile
  3649                           
  3650                           ;CAN.c: 238:     }
  3651  0008C4  D05A               	goto	l3586
  3652  0008C6                     l3582:
  3653                           
  3654                           ;CAN.c: 240:     {;CAN.c: 241:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  3655  0008C6  EE20 F010          	lfsr	2,16
  3656  0008CA  502B               	movf	CAN_SendFrame@message,w,c
  3657  0008CC  26D9               	addwf	fsr2l,f,c
  3658  0008CE  502C               	movf	CAN_SendFrame@message+1,w,c
  3659  0008D0  22DA               	addwfc	fsr2h,f,c
  3660  0008D2  50DF               	movf	indf2,w,c
  3661  0008D4  6E2D               	movwf	??_CAN_SendFrame& (0+255),c
  3662  0008D6  0E0F               	movlw	15
  3663  0008D8  162D               	andwf	??_CAN_SendFrame,f,c
  3664  0008DA  5065               	movf	3941,w,c	;volatile
  3665  0008DC  182D               	xorwf	??_CAN_SendFrame,w,c
  3666  0008DE  0BFE               	andlw	-2
  3667  0008E0  182D               	xorwf	??_CAN_SendFrame,w,c
  3668  0008E2  6E65               	movwf	3941,c	;volatile
  3669                           
  3670                           ;CAN.c: 242:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  3671  0008E4  EE20 F010          	lfsr	2,16
  3672  0008E8  502B               	movf	CAN_SendFrame@message,w,c
  3673  0008EA  26D9               	addwf	fsr2l,f,c
  3674  0008EC  502C               	movf	CAN_SendFrame@message+1,w,c
  3675  0008EE  22DA               	addwfc	fsr2h,f,c
  3676  0008F0  50DF               	movf	indf2,w,c
  3677  0008F2  6E2D               	movwf	??_CAN_SendFrame& (0+255),c
  3678  0008F4  90D8               	bcf	status,0,c
  3679  0008F6  322D               	rrcf	??_CAN_SendFrame,f,c
  3680  0008F8  0E07               	movlw	7
  3681  0008FA  162D               	andwf	??_CAN_SendFrame,f,c
  3682  0008FC  462D               	rlncf	??_CAN_SendFrame,f,c
  3683  0008FE  5065               	movf	3941,w,c	;volatile
  3684  000900  182D               	xorwf	??_CAN_SendFrame,w,c
  3685  000902  0BFD               	andlw	-3
  3686  000904  182D               	xorwf	??_CAN_SendFrame,w,c
  3687  000906  6E65               	movwf	3941,c	;volatile
  3688                           
  3689                           ;CAN.c: 243:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  3690  000908  EE20 F010          	lfsr	2,16
  3691  00090C  502B               	movf	CAN_SendFrame@message,w,c
  3692  00090E  26D9               	addwf	fsr2l,f,c
  3693  000910  502C               	movf	CAN_SendFrame@message+1,w,c
  3694  000912  22DA               	addwfc	fsr2h,f,c
  3695  000914  50DF               	movf	indf2,w,c
  3696  000916  6E2D               	movwf	??_CAN_SendFrame& (0+255),c
  3697  000918  90D8               	bcf	status,0,c
  3698  00091A  322D               	rrcf	??_CAN_SendFrame,f,c
  3699  00091C  90D8               	bcf	status,0,c
  3700  00091E  322D               	rrcf	??_CAN_SendFrame,f,c
  3701  000920  0E03               	movlw	3
  3702  000922  162D               	andwf	??_CAN_SendFrame,f,c
  3703  000924  462D               	rlncf	??_CAN_SendFrame,f,c
  3704  000926  462D               	rlncf	??_CAN_SendFrame,f,c
  3705  000928  5065               	movf	3941,w,c	;volatile
  3706  00092A  182D               	xorwf	??_CAN_SendFrame,w,c
  3707  00092C  0BFB               	andlw	-5
  3708  00092E  182D               	xorwf	??_CAN_SendFrame,w,c
  3709  000930  6E65               	movwf	3941,c	;volatile
  3710                           
  3711                           ;CAN.c: 244:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  3712  000932  EE20 F010          	lfsr	2,16
  3713  000936  502B               	movf	CAN_SendFrame@message,w,c
  3714  000938  26D9               	addwf	fsr2l,f,c
  3715  00093A  502C               	movf	CAN_SendFrame@message+1,w,c
  3716  00093C  22DA               	addwfc	fsr2h,f,c
  3717  00093E  50DF               	movf	indf2,w,c
  3718  000940  6E2D               	movwf	??_CAN_SendFrame& (0+255),c
  3719  000942  90D8               	bcf	status,0,c
  3720  000944  322D               	rrcf	??_CAN_SendFrame,f,c
  3721  000946  90D8               	bcf	status,0,c
  3722  000948  322D               	rrcf	??_CAN_SendFrame,f,c
  3723  00094A  90D8               	bcf	status,0,c
  3724  00094C  322D               	rrcf	??_CAN_SendFrame,f,c
  3725  00094E  0E01               	movlw	1
  3726  000950  162D               	andwf	??_CAN_SendFrame,f,c
  3727  000952  462D               	rlncf	??_CAN_SendFrame,f,c
  3728  000954  462D               	rlncf	??_CAN_SendFrame,f,c
  3729  000956  462D               	rlncf	??_CAN_SendFrame,f,c
  3730  000958  5065               	movf	3941,w,c	;volatile
  3731  00095A  182D               	xorwf	??_CAN_SendFrame,w,c
  3732  00095C  0BF7               	andlw	-9
  3733  00095E  182D               	xorwf	??_CAN_SendFrame,w,c
  3734  000960  6E65               	movwf	3941,c	;volatile
  3735                           
  3736                           ;CAN.c: 246:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  3737  000962  0E66               	movlw	102
  3738  000964  6E26               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3739  000966  0E0F               	movlw	15
  3740  000968  6E27               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3741  00096A  0E08               	movlw	8
  3742  00096C  242B               	addwf	CAN_SendFrame@message,w,c
  3743  00096E  6E28               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3744  000970  0E00               	movlw	0
  3745  000972  202C               	addwfc	CAN_SendFrame@message+1,w,c
  3746  000974  6E29               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3747  000976  EC5A  F00A         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3748  00097A                     l3586:
  3749                           
  3750                           ;CAN.c: 249:     RXB0CONbits.FILHIT3 = 1;
  3751  00097A  8660               	bsf	3936,3,c	;volatile
  3752                           
  3753                           ;CAN.c: 251:     DetectorLedRadar.Flags.ramkaTx = 1;
  3754  00097C  8805               	bsf	_DetectorLedRadar,4,c
  3755  00097E  0012               	return		;funcret
  3756  000980                     __end_of_CAN_SendFrame:
  3757                           	opt callstack 0
  3758                           
  3759 ;; *************** function _CAN_GenID *****************
  3760 ;; Defined at:
  3761 ;;		line 395 in file "CAN.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  message         2    5[COMRAM] PTR struct .
  3764 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3765 ;;  frameID         1    7[COMRAM] unsigned char 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3777 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;Total ram usage:        7 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    3
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_FRAME_HandleCanFrame
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text30
  3792  000D80                     __ptext30:
  3793                           	opt callstack 0
  3794  000D80                     _CAN_GenID:
  3795                           	opt callstack 25
  3796                           
  3797                           ;CAN.c: 395: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 396: {;CAN.c: 398:     m
      +                          essage->frame_type = 0x03;
  3798                           
  3799                           ;incstack = 0
  3800  000D80  EE20 F002          	lfsr	2,2
  3801  000D84  5026               	movf	CAN_GenID@message,w,c
  3802  000D86  26D9               	addwf	fsr2l,f,c
  3803  000D88  5027               	movf	CAN_GenID@message+1,w,c
  3804  000D8A  22DA               	addwfc	fsr2h,f,c
  3805  000D8C  0E03               	movlw	3
  3806  000D8E  6EDF               	movwf	indf2,c
  3807                           
  3808                           ;CAN.c: 399:     message->message_type = 0x01;
  3809  000D90  EE20 F001          	lfsr	2,1
  3810  000D94  5026               	movf	CAN_GenID@message,w,c
  3811  000D96  26D9               	addwf	fsr2l,f,c
  3812  000D98  5027               	movf	CAN_GenID@message+1,w,c
  3813  000D9A  22DA               	addwfc	fsr2h,f,c
  3814  000D9C  0E01               	movlw	1
  3815  000D9E  6EDF               	movwf	indf2,c
  3816                           
  3817                           ;CAN.c: 400:     message->id.w[1] = (WORD)frameID * (WORD)4;
  3818  000DA0  5028               	movf	CAN_GenID@frameID,w,c
  3819  000DA2  6E29               	movwf	??_CAN_GenID& (0+255),c
  3820  000DA4  6A2A               	clrf	(??_CAN_GenID+1)& (0+255),c
  3821  000DA6  90D8               	bcf	status,0,c
  3822  000DA8  3629               	rlcf	??_CAN_GenID,f,c
  3823  000DAA  362A               	rlcf	??_CAN_GenID+1,f,c
  3824  000DAC  90D8               	bcf	status,0,c
  3825  000DAE  3629               	rlcf	??_CAN_GenID,f,c
  3826  000DB0  362A               	rlcf	??_CAN_GenID+1,f,c
  3827  000DB2  EE20 F006          	lfsr	2,6
  3828  000DB6  5026               	movf	CAN_GenID@message,w,c
  3829  000DB8  26D9               	addwf	fsr2l,f,c
  3830  000DBA  5027               	movf	CAN_GenID@message+1,w,c
  3831  000DBC  22DA               	addwfc	fsr2h,f,c
  3832  000DBE  C029  FFDE         	movff	??_CAN_GenID,postinc2
  3833  000DC2  C02A  FFDD         	movff	??_CAN_GenID+1,postdec2
  3834                           
  3835                           ;CAN.c: 401:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  3836  000DC6  0E2C               	movlw	44
  3837  000DC8  6E29               	movwf	??_CAN_GenID& (0+255),c
  3838  000DCA  0E01               	movlw	1
  3839  000DCC  6E2A               	movwf	(??_CAN_GenID+1)& (0+255),c
  3840  000DCE  EE20  F003         	lfsr	2,_DaneCan+2
  3841  000DD2  CFDE F02B          	movff	postinc2,??_CAN_GenID+2
  3842  000DD6  CFDD F02C          	movff	postdec2,??_CAN_GenID+3
  3843  000DDA  5029               	movf	??_CAN_GenID,w,c
  3844  000DDC  262B               	addwf	??_CAN_GenID+2,f,c
  3845  000DDE  502A               	movf	??_CAN_GenID+1,w,c
  3846  000DE0  222C               	addwfc	??_CAN_GenID+3,f,c
  3847  000DE2  EE20 F004          	lfsr	2,4
  3848  000DE6  5026               	movf	CAN_GenID@message,w,c
  3849  000DE8  26D9               	addwf	fsr2l,f,c
  3850  000DEA  5027               	movf	CAN_GenID@message+1,w,c
  3851  000DEC  22DA               	addwfc	fsr2h,f,c
  3852  000DEE  C02B  FFDE         	movff	??_CAN_GenID+2,postinc2
  3853  000DF2  C02C  FFDD         	movff	??_CAN_GenID+3,postdec2
  3854                           
  3855                           ;CAN.c: 404:     message ->id.bits.b16 = 0;
  3856  000DF6  EE20 F006          	lfsr	2,6
  3857  000DFA  5026               	movf	CAN_GenID@message,w,c
  3858  000DFC  26D9               	addwf	fsr2l,f,c
  3859  000DFE  5027               	movf	CAN_GenID@message+1,w,c
  3860  000E00  22DA               	addwfc	fsr2h,f,c
  3861  000E02  90DF               	bcf	indf2,0,c
  3862                           
  3863                           ;CAN.c: 405:     message ->id.bits.b17 = 0;
  3864  000E04  EE20 F006          	lfsr	2,6
  3865  000E08  5026               	movf	CAN_GenID@message,w,c
  3866  000E0A  26D9               	addwf	fsr2l,f,c
  3867  000E0C  5027               	movf	CAN_GenID@message+1,w,c
  3868  000E0E  22DA               	addwfc	fsr2h,f,c
  3869  000E10  92DF               	bcf	indf2,1,c
  3870  000E12  0012               	return		;funcret
  3871  000E14                     __end_of_CAN_GenID:
  3872                           	opt callstack 0
  3873                           
  3874 ;; *************** function _CAN_TakeFrame *****************
  3875 ;; Defined at:
  3876 ;;		line 260 in file "CAN.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  message         2   13[COMRAM] PTR struct .
  3879 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  k               1   18[COMRAM] unsigned char 
  3882 ;;  tempCON         1   17[COMRAM] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      enum E10433
  3885 ;; Registers used:
  3886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;Total ram usage:        6 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    4
  3899 ;; This function calls:
  3900 ;;		_CAN_MoveBuffIntoFrame
  3901 ;;		___awdiv
  3902 ;; This function is called by:
  3903 ;;		_TRM_DataTransmition
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text31
  3908  000388                     __ptext31:
  3909                           	opt callstack 0
  3910  000388                     _CAN_TakeFrame:
  3911                           	opt callstack 25
  3912                           
  3913                           ;CAN.c: 260: BOOL CAN_TakeFrame(mID * message);CAN.c: 261: {;CAN.c: 262:     BYTE k, tem
      +                          pCON;;CAN.c: 264:     k = CANCON&0x0F;
  3914                           
  3915                           ;incstack = 0
  3916  000388  506F               	movf	3951,w,c	;volatile
  3917  00038A  0B0F               	andlw	15
  3918  00038C  6E33               	movwf	CAN_TakeFrame@k,c
  3919                           
  3920                           ;CAN.c: 266:     ECANCON = 0x90 | k;
  3921  00038E  5033               	movf	CAN_TakeFrame@k,w,c
  3922  000390  0990               	iorlw	144
  3923  000392  6E77               	movwf	3959,c	;volatile
  3924                           
  3925                           ;CAN.c: 269:     switch(k)
  3926  000394  D018               	goto	l3774
  3927  000396                     l198:
  3928                           
  3929                           ;CAN.c: 272:             tempCON = RXB0CON;
  3930  000396  CF60 F032          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  3931                           
  3932                           ;CAN.c: 273:             break;
  3933  00039A  D035               	goto	l199
  3934  00039C                     l200:
  3935                           
  3936                           ;CAN.c: 275:             tempCON = RXB1CON;
  3937  00039C  CF50 F032          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  3938                           
  3939                           ;CAN.c: 276:             break;
  3940  0003A0  D032               	goto	l199
  3941  0003A2                     l201:
  3942                           
  3943                           ;CAN.c: 278:             tempCON = B0CON;
  3944  0003A2  CE20 F032          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  3945                           
  3946                           ;CAN.c: 279:             break;
  3947  0003A6  D02F               	goto	l199
  3948  0003A8                     l202:
  3949                           
  3950                           ;CAN.c: 281:             tempCON = B1CON;
  3951  0003A8  CE30 F032          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  3952                           
  3953                           ;CAN.c: 282:             break;
  3954  0003AC  D02C               	goto	l199
  3955  0003AE                     l203:
  3956                           
  3957                           ;CAN.c: 284:             tempCON = B2CON;
  3958  0003AE  CE40 F032          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  3959                           
  3960                           ;CAN.c: 285:             break;
  3961  0003B2  D029               	goto	l199
  3962  0003B4                     l204:
  3963                           
  3964                           ;CAN.c: 287:             tempCON = B3CON;
  3965  0003B4  CE50 F032          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  3966                           
  3967                           ;CAN.c: 288:             break;
  3968  0003B8  D026               	goto	l199
  3969  0003BA                     l205:
  3970                           
  3971                           ;CAN.c: 290:             tempCON = B4CON;
  3972  0003BA  CE60 F032          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  3973                           
  3974                           ;CAN.c: 291:             break;
  3975  0003BE  D023               	goto	l199
  3976  0003C0                     l206:
  3977                           
  3978                           ;CAN.c: 293:             tempCON = B5CON;
  3979  0003C0  CE70 F032          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  3980                           
  3981                           ;CAN.c: 294:             break;
  3982  0003C4  D020               	goto	l199
  3983  0003C6                     l3774:
  3984  0003C6  5033               	movf	CAN_TakeFrame@k,w,c
  3985  0003C8  6E30               	movwf	??_CAN_TakeFrame& (0+255),c
  3986  0003CA  6A31               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3987                           
  3988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3989                           ; Switch size 1, requested type "simple"
  3990                           ; Number of cases is 1, Range of values is 0 to 0
  3991                           ; switch strategies available:
  3992                           ; Name         Instructions Cycles
  3993                           ; simple_byte            4     3 (average)
  3994                           ;	Chosen strategy is simple_byte
  3995  0003CC  5031               	movf	??_CAN_TakeFrame+1,w,c
  3996  0003CE  0A00               	xorlw	0	; case 0
  3997  0003D0  A4D8               	btfss	status,2,c
  3998  0003D2  D019               	goto	l199
  3999                           
  4000                           ; Switch size 1, requested type "simple"
  4001                           ; Number of cases is 8, Range of values is 0 to 7
  4002                           ; switch strategies available:
  4003                           ; Name         Instructions Cycles
  4004                           ; simple_byte           25    13 (average)
  4005                           ;	Chosen strategy is simple_byte
  4006  0003D4  5030               	movf	??_CAN_TakeFrame,w,c
  4007  0003D6  0A00               	xorlw	0	; case 0
  4008  0003D8  B4D8               	btfsc	status,2,c
  4009  0003DA  D7DD               	goto	l198
  4010  0003DC  0A01               	xorlw	1	; case 1
  4011  0003DE  B4D8               	btfsc	status,2,c
  4012  0003E0  D7DD               	goto	l200
  4013  0003E2  0A03               	xorlw	3	; case 2
  4014  0003E4  B4D8               	btfsc	status,2,c
  4015  0003E6  D7DD               	goto	l201
  4016  0003E8  0A01               	xorlw	1	; case 3
  4017  0003EA  B4D8               	btfsc	status,2,c
  4018  0003EC  D7DD               	goto	l202
  4019  0003EE  0A07               	xorlw	7	; case 4
  4020  0003F0  B4D8               	btfsc	status,2,c
  4021  0003F2  D7DD               	goto	l203
  4022  0003F4  0A01               	xorlw	1	; case 5
  4023  0003F6  B4D8               	btfsc	status,2,c
  4024  0003F8  D7DD               	goto	l204
  4025  0003FA  0A03               	xorlw	3	; case 6
  4026  0003FC  B4D8               	btfsc	status,2,c
  4027  0003FE  D7DD               	goto	l205
  4028  000400  0A01               	xorlw	1	; case 7
  4029  000402  B4D8               	btfsc	status,2,c
  4030  000404  D7DD               	goto	l206
  4031  000406                     l199:
  4032                           
  4033                           ;CAN.c: 298:     if((tempCON & 0x80) > 0)
  4034  000406  AE32               	btfss	CAN_TakeFrame@tempCON,7,c
  4035  000408  D0A5               	goto	l3810
  4036                           
  4037                           ;CAN.c: 299:     {;CAN.c: 300:         message->buffer = RXB0CON & 0x1F;
  4038  00040A  EE20 F003          	lfsr	2,3
  4039  00040E  502E               	movf	CAN_TakeFrame@message,w,c
  4040  000410  26D9               	addwf	fsr2l,f,c
  4041  000412  502F               	movf	CAN_TakeFrame@message+1,w,c
  4042  000414  22DA               	addwfc	fsr2h,f,c
  4043  000416  5060               	movf	3936,w,c	;volatile
  4044  000418  0B1F               	andlw	31
  4045  00041A  6EDF               	movwf	indf2,c
  4046                           
  4047                           ;CAN.c: 301:         message->id.v[0] = RXB0EIDL;
  4048  00041C  EE20 F004          	lfsr	2,4
  4049  000420  502E               	movf	CAN_TakeFrame@message,w,c
  4050  000422  26D9               	addwf	fsr2l,f,c
  4051  000424  502F               	movf	CAN_TakeFrame@message+1,w,c
  4052  000426  22DA               	addwfc	fsr2h,f,c
  4053  000428  CF64 FFDF          	movff	3940,indf2	;volatile
  4054                           
  4055                           ;CAN.c: 302:         message->id.v[1] = RXB0EIDH;
  4056  00042C  EE20 F005          	lfsr	2,5
  4057  000430  502E               	movf	CAN_TakeFrame@message,w,c
  4058  000432  26D9               	addwf	fsr2l,f,c
  4059  000434  502F               	movf	CAN_TakeFrame@message+1,w,c
  4060  000436  22DA               	addwfc	fsr2h,f,c
  4061  000438  CF63 FFDF          	movff	3939,indf2	;volatile
  4062                           
  4063                           ;CAN.c: 303:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4064  00043C  EE20 F006          	lfsr	2,6
  4065  000440  502E               	movf	CAN_TakeFrame@message,w,c
  4066  000442  26D9               	addwf	fsr2l,f,c
  4067  000444  502F               	movf	CAN_TakeFrame@message+1,w,c
  4068  000446  22DA               	addwfc	fsr2h,f,c
  4069  000448  CF62 F030          	movff	3938,??_CAN_TakeFrame	;volatile
  4070  00044C  0E03               	movlw	3
  4071  00044E  1630               	andwf	??_CAN_TakeFrame,f,c
  4072  000450  CF62 F026          	movff	3938,___awdiv@dividend	;volatile
  4073  000454  6A27               	clrf	___awdiv@dividend+1,c
  4074  000456  0E00               	movlw	0
  4075  000458  6E29               	movwf	___awdiv@divisor+1,c
  4076  00045A  0E08               	movlw	8
  4077  00045C  6E28               	movwf	___awdiv@divisor,c
  4078  00045E  EC50  F007         	call	___awdiv	;wreg free
  4079  000462  5026               	movf	?___awdiv,w,c
  4080  000464  1030               	iorwf	??_CAN_TakeFrame,w,c
  4081  000466  6EDF               	movwf	indf2,c
  4082                           
  4083                           ;CAN.c: 304:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4084  000468  5061               	movf	3937,w,c	;volatile
  4085  00046A  6E30               	movwf	??_CAN_TakeFrame& (0+255),c
  4086  00046C  6A31               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4087  00046E  0E05               	movlw	5
  4088  000470                     u2445:
  4089  000470  90D8               	bcf	status,0,c
  4090  000472  3630               	rlcf	??_CAN_TakeFrame,f,c
  4091  000474  3631               	rlcf	??_CAN_TakeFrame+1,f,c
  4092  000476  2EE8               	decfsz	wreg,f,c
  4093  000478  D7FB               	goto	u2445
  4094  00047A  EE20 F006          	lfsr	2,6
  4095  00047E  502E               	movf	CAN_TakeFrame@message,w,c
  4096  000480  26D9               	addwf	fsr2l,f,c
  4097  000482  502F               	movf	CAN_TakeFrame@message+1,w,c
  4098  000484  22DA               	addwfc	fsr2h,f,c
  4099  000486  5030               	movf	??_CAN_TakeFrame,w,c
  4100  000488  12DE               	iorwf	postinc2,f,c
  4101  00048A  5031               	movf	??_CAN_TakeFrame+1,w,c
  4102  00048C  12DD               	iorwf	postdec2,f,c
  4103                           
  4104                           ;CAN.c: 305:         message->frame_type=0x03;
  4105  00048E  EE20 F002          	lfsr	2,2
  4106  000492  502E               	movf	CAN_TakeFrame@message,w,c
  4107  000494  26D9               	addwf	fsr2l,f,c
  4108  000496  502F               	movf	CAN_TakeFrame@message+1,w,c
  4109  000498  22DA               	addwfc	fsr2h,f,c
  4110  00049A  0E03               	movlw	3
  4111  00049C  6EDF               	movwf	indf2,c
  4112                           
  4113                           ;CAN.c: 309:         if(RXB0DLCbits.RXRTR == 0)
  4114  00049E  BC65               	btfsc	3941,6,c	;volatile
  4115  0004A0  D068               	goto	l3816
  4116                           
  4117                           ;CAN.c: 310:         {;CAN.c: 311:             message->message_type = 0x01;
  4118  0004A2  EE20 F001          	lfsr	2,1
  4119  0004A6  502E               	movf	CAN_TakeFrame@message,w,c
  4120  0004A8  26D9               	addwf	fsr2l,f,c
  4121  0004AA  502F               	movf	CAN_TakeFrame@message+1,w,c
  4122  0004AC  22DA               	addwfc	fsr2h,f,c
  4123  0004AE  0E01               	movlw	1
  4124  0004B0  6EDF               	movwf	indf2,c
  4125                           
  4126                           ;CAN.c: 312:             message->data_length= RXB0DLC & 0x0F;
  4127  0004B2  EE20 F010          	lfsr	2,16
  4128  0004B6  502E               	movf	CAN_TakeFrame@message,w,c
  4129  0004B8  26D9               	addwf	fsr2l,f,c
  4130  0004BA  502F               	movf	CAN_TakeFrame@message+1,w,c
  4131  0004BC  22DA               	addwfc	fsr2h,f,c
  4132  0004BE  5065               	movf	3941,w,c	;volatile
  4133  0004C0  0B0F               	andlw	15
  4134  0004C2  6EDF               	movwf	indf2,c
  4135                           
  4136                           ;CAN.c: 313:             if(message->data_length > 8)
  4137  0004C4  EE20 F010          	lfsr	2,16
  4138  0004C8  502E               	movf	CAN_TakeFrame@message,w,c
  4139  0004CA  26D9               	addwf	fsr2l,f,c
  4140  0004CC  502F               	movf	CAN_TakeFrame@message+1,w,c
  4141  0004CE  22DA               	addwfc	fsr2h,f,c
  4142  0004D0  0E08               	movlw	8
  4143  0004D2  64DF               	cpfsgt	indf2,c
  4144  0004D4  D041               	goto	l3814
  4145  0004D6  D01E               	goto	l3808
  4146  0004D8                     l3790:
  4147                           
  4148                           ;CAN.c: 319:                         RXB0CON = 0;
  4149  0004D8  0E00               	movlw	0
  4150  0004DA  6E60               	movwf	3936,c	;volatile
  4151                           
  4152                           ;CAN.c: 320:                         break;
  4153  0004DC  D03B               	goto	l3810
  4154  0004DE                     l3792:
  4155                           
  4156                           ;CAN.c: 322:                         RXB1CON = 0;
  4157  0004DE  0E00               	movlw	0
  4158  0004E0  010F               	movlb	15	; () banked
  4159  0004E2  D00E               	goto	L1
  4160  0004E4                     l3794:
  4161                           
  4162                           ;CAN.c: 325:                         B0CON = 0;
  4163  0004E4  0E00               	movlw	0
  4164  0004E6  010E               	movlb	14	; () banked
  4165  0004E8  6F20               	movwf	32,b	;volatile
  4166                           
  4167                           ;CAN.c: 326:                         break;
  4168  0004EA  D034               	goto	l3810
  4169  0004EC                     l3796:
  4170                           
  4171                           ;CAN.c: 328:                         B1CON = 0;
  4172  0004EC  0E00               	movlw	0
  4173  0004EE  010E               	movlb	14	; () banked
  4174  0004F0  6F30               	movwf	48,b	;volatile
  4175                           
  4176                           ;CAN.c: 329:                         break;
  4177  0004F2  D030               	goto	l3810
  4178  0004F4                     l3798:
  4179                           
  4180                           ;CAN.c: 331:                         B2CON = 0;
  4181  0004F4  0E00               	movlw	0
  4182  0004F6  010E               	movlb	14	; () banked
  4183  0004F8  6F40               	movwf	64,b	;volatile
  4184                           
  4185                           ;CAN.c: 332:                         break;
  4186  0004FA  D02C               	goto	l3810
  4187  0004FC                     l3800:
  4188                           
  4189                           ;CAN.c: 334:                         B3CON = 0;
  4190  0004FC  0E00               	movlw	0
  4191  0004FE  010E               	movlb	14	; () banked
  4192  000500                     L1:
  4193  000500  6F50               	movwf	80,b	;volatile
  4194                           
  4195                           ;CAN.c: 335:                         break;
  4196  000502  D028               	goto	l3810
  4197  000504                     l3802:
  4198                           
  4199                           ;CAN.c: 337:                         B4CON = 0;
  4200  000504  0E00               	movlw	0
  4201  000506  010E               	movlb	14	; () banked
  4202  000508  6F60               	movwf	96,b	;volatile
  4203                           
  4204                           ;CAN.c: 338:                         break;
  4205  00050A  D024               	goto	l3810
  4206  00050C                     l3804:
  4207                           
  4208                           ;CAN.c: 340:                         B5CON = 0;
  4209  00050C  0E00               	movlw	0
  4210  00050E  010E               	movlb	14	; () banked
  4211  000510  6F70               	movwf	112,b	;volatile
  4212                           
  4213                           ;CAN.c: 341:                         break;
  4214  000512  D020               	goto	l3810
  4215  000514                     l3808:
  4216  000514  5033               	movf	CAN_TakeFrame@k,w,c
  4217  000516  6E30               	movwf	??_CAN_TakeFrame& (0+255),c
  4218  000518  6A31               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4219                           
  4220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4221                           ; Switch size 1, requested type "simple"
  4222                           ; Number of cases is 1, Range of values is 0 to 0
  4223                           ; switch strategies available:
  4224                           ; Name         Instructions Cycles
  4225                           ; simple_byte            4     3 (average)
  4226                           ;	Chosen strategy is simple_byte
  4227  00051A  5031               	movf	??_CAN_TakeFrame+1,w,c
  4228  00051C  0A00               	xorlw	0	; case 0
  4229  00051E  A4D8               	btfss	status,2,c
  4230  000520  D019               	goto	l3810
  4231                           
  4232                           ; Switch size 1, requested type "simple"
  4233                           ; Number of cases is 8, Range of values is 0 to 7
  4234                           ; switch strategies available:
  4235                           ; Name         Instructions Cycles
  4236                           ; simple_byte           25    13 (average)
  4237                           ;	Chosen strategy is simple_byte
  4238  000522  5030               	movf	??_CAN_TakeFrame,w,c
  4239  000524  0A00               	xorlw	0	; case 0
  4240  000526  B4D8               	btfsc	status,2,c
  4241  000528  D7D7               	goto	l3790
  4242  00052A  0A01               	xorlw	1	; case 1
  4243  00052C  B4D8               	btfsc	status,2,c
  4244  00052E  D7D7               	goto	l3792
  4245  000530  0A03               	xorlw	3	; case 2
  4246  000532  B4D8               	btfsc	status,2,c
  4247  000534  D7D7               	goto	l3794
  4248  000536  0A01               	xorlw	1	; case 3
  4249  000538  B4D8               	btfsc	status,2,c
  4250  00053A  D7D8               	goto	l3796
  4251  00053C  0A07               	xorlw	7	; case 4
  4252  00053E  B4D8               	btfsc	status,2,c
  4253  000540  D7D9               	goto	l3798
  4254  000542  0A01               	xorlw	1	; case 5
  4255  000544  B4D8               	btfsc	status,2,c
  4256  000546  D7DA               	goto	l3800
  4257  000548  0A03               	xorlw	3	; case 6
  4258  00054A  B4D8               	btfsc	status,2,c
  4259  00054C  D7DB               	goto	l3802
  4260  00054E  0A01               	xorlw	1	; case 7
  4261  000550  B4D8               	btfsc	status,2,c
  4262  000552  D7DC               	goto	l3804
  4263  000554                     l3810:
  4264                           
  4265                           ;CAN.c: 343:                 return FALSE;
  4266  000554  0E00               	movlw	0
  4267  000556  0012               	return	
  4268  000558                     l3814:
  4269                           
  4270                           ;CAN.c: 345:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4271  000558  0E08               	movlw	8
  4272  00055A  242E               	addwf	CAN_TakeFrame@message,w,c
  4273  00055C  6E26               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4274  00055E  0E00               	movlw	0
  4275  000560  202F               	addwfc	CAN_TakeFrame@message+1,w,c
  4276  000562  6E27               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4277  000564  0E66               	movlw	102
  4278  000566  6E28               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4279  000568  0E0F               	movlw	15
  4280  00056A  6E29               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4281  00056C  EC5A  F00A         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4282                           
  4283                           ;CAN.c: 346:         }
  4284  000570  D027               	goto	l3836
  4285  000572                     l3816:
  4286                           
  4287                           ;CAN.c: 349:         {;CAN.c: 350:             message->message_type=0x02;
  4288  000572  EE20 F001          	lfsr	2,1
  4289  000576  502E               	movf	CAN_TakeFrame@message,w,c
  4290  000578  26D9               	addwf	fsr2l,f,c
  4291  00057A  502F               	movf	CAN_TakeFrame@message+1,w,c
  4292  00057C  22DA               	addwfc	fsr2h,f,c
  4293  00057E  0E02               	movlw	2
  4294  000580  6EDF               	movwf	indf2,c
  4295  000582  D01E               	goto	l3836
  4296  000584                     l3818:
  4297                           
  4298                           ;CAN.c: 356:                 RXB0CON = 0;
  4299  000584  0E00               	movlw	0
  4300  000586  6E60               	movwf	3936,c	;volatile
  4301                           
  4302                           ;CAN.c: 357:                 break;
  4303  000588  D03B               	goto	l3838
  4304  00058A                     l3820:
  4305                           
  4306                           ;CAN.c: 359:                 RXB1CON = 0;
  4307  00058A  0E00               	movlw	0
  4308  00058C  010F               	movlb	15	; () banked
  4309  00058E  D00E               	goto	L2
  4310  000590                     l3822:
  4311                           
  4312                           ;CAN.c: 362:                 B0CON = 0;
  4313  000590  0E00               	movlw	0
  4314  000592  010E               	movlb	14	; () banked
  4315  000594  6F20               	movwf	32,b	;volatile
  4316                           
  4317                           ;CAN.c: 363:                 break;
  4318  000596  D034               	goto	l3838
  4319  000598                     l3824:
  4320                           
  4321                           ;CAN.c: 365:                 B1CON = 0;
  4322  000598  0E00               	movlw	0
  4323  00059A  010E               	movlb	14	; () banked
  4324  00059C  6F30               	movwf	48,b	;volatile
  4325                           
  4326                           ;CAN.c: 366:                 break;
  4327  00059E  D030               	goto	l3838
  4328  0005A0                     l3826:
  4329                           
  4330                           ;CAN.c: 368:                 B2CON = 0;
  4331  0005A0  0E00               	movlw	0
  4332  0005A2  010E               	movlb	14	; () banked
  4333  0005A4  6F40               	movwf	64,b	;volatile
  4334                           
  4335                           ;CAN.c: 369:                 break;
  4336  0005A6  D02C               	goto	l3838
  4337  0005A8                     l3828:
  4338                           
  4339                           ;CAN.c: 371:                 B3CON = 0;
  4340  0005A8  0E00               	movlw	0
  4341  0005AA  010E               	movlb	14	; () banked
  4342  0005AC                     L2:
  4343  0005AC  6F50               	movwf	80,b	;volatile
  4344                           
  4345                           ;CAN.c: 372:                 break;
  4346  0005AE  D028               	goto	l3838
  4347  0005B0                     l3830:
  4348                           
  4349                           ;CAN.c: 374:                 B4CON = 0;
  4350  0005B0  0E00               	movlw	0
  4351  0005B2  010E               	movlb	14	; () banked
  4352  0005B4  6F60               	movwf	96,b	;volatile
  4353                           
  4354                           ;CAN.c: 375:                 break;
  4355  0005B6  D024               	goto	l3838
  4356  0005B8                     l3832:
  4357                           
  4358                           ;CAN.c: 377:                 B5CON = 0;
  4359  0005B8  0E00               	movlw	0
  4360  0005BA  010E               	movlb	14	; () banked
  4361  0005BC  6F70               	movwf	112,b	;volatile
  4362                           
  4363                           ;CAN.c: 378:                 break;
  4364  0005BE  D020               	goto	l3838
  4365  0005C0                     l3836:
  4366  0005C0  5033               	movf	CAN_TakeFrame@k,w,c
  4367  0005C2  6E30               	movwf	??_CAN_TakeFrame& (0+255),c
  4368  0005C4  6A31               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4369                           
  4370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4371                           ; Switch size 1, requested type "simple"
  4372                           ; Number of cases is 1, Range of values is 0 to 0
  4373                           ; switch strategies available:
  4374                           ; Name         Instructions Cycles
  4375                           ; simple_byte            4     3 (average)
  4376                           ;	Chosen strategy is simple_byte
  4377  0005C6  5031               	movf	??_CAN_TakeFrame+1,w,c
  4378  0005C8  0A00               	xorlw	0	; case 0
  4379  0005CA  A4D8               	btfss	status,2,c
  4380  0005CC  D019               	goto	l3838
  4381                           
  4382                           ; Switch size 1, requested type "simple"
  4383                           ; Number of cases is 8, Range of values is 0 to 7
  4384                           ; switch strategies available:
  4385                           ; Name         Instructions Cycles
  4386                           ; simple_byte           25    13 (average)
  4387                           ;	Chosen strategy is simple_byte
  4388  0005CE  5030               	movf	??_CAN_TakeFrame,w,c
  4389  0005D0  0A00               	xorlw	0	; case 0
  4390  0005D2  B4D8               	btfsc	status,2,c
  4391  0005D4  D7D7               	goto	l3818
  4392  0005D6  0A01               	xorlw	1	; case 1
  4393  0005D8  B4D8               	btfsc	status,2,c
  4394  0005DA  D7D7               	goto	l3820
  4395  0005DC  0A03               	xorlw	3	; case 2
  4396  0005DE  B4D8               	btfsc	status,2,c
  4397  0005E0  D7D7               	goto	l3822
  4398  0005E2  0A01               	xorlw	1	; case 3
  4399  0005E4  B4D8               	btfsc	status,2,c
  4400  0005E6  D7D8               	goto	l3824
  4401  0005E8  0A07               	xorlw	7	; case 4
  4402  0005EA  B4D8               	btfsc	status,2,c
  4403  0005EC  D7D9               	goto	l3826
  4404  0005EE  0A01               	xorlw	1	; case 5
  4405  0005F0  B4D8               	btfsc	status,2,c
  4406  0005F2  D7DA               	goto	l3828
  4407  0005F4  0A03               	xorlw	3	; case 6
  4408  0005F6  B4D8               	btfsc	status,2,c
  4409  0005F8  D7DB               	goto	l3830
  4410  0005FA  0A01               	xorlw	1	; case 7
  4411  0005FC  B4D8               	btfsc	status,2,c
  4412  0005FE  D7DC               	goto	l3832
  4413  000600                     l3838:
  4414                           
  4415                           ;CAN.c: 380:         return TRUE;
  4416  000600  0E01               	movlw	1
  4417  000602  0012               	return		;funcret
  4418  000604                     __end_of_CAN_TakeFrame:
  4419                           	opt callstack 0
  4420                           
  4421 ;; *************** function ___awdiv *****************
  4422 ;; Defined at:
  4423 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  dividend        2    5[COMRAM] int 
  4426 ;;  divisor         2    7[COMRAM] int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  quotient        2   11[COMRAM] int 
  4429 ;;  sign            1   10[COMRAM] unsigned char 
  4430 ;;  counter         1    9[COMRAM] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  2    5[COMRAM] int 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;Total ram usage:        8 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    3
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_CAN_TakeFrame
  4451 ;;		_FRAME_HandleCanFrame
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text32
  4456  000EA0                     __ptext32:
  4457                           	opt callstack 0
  4458  000EA0                     ___awdiv:
  4459                           	opt callstack 25
  4460                           
  4461                           ;incstack = 0
  4462  000EA0  0E00               	movlw	0
  4463  000EA2  6E2B               	movwf	___awdiv@sign,c
  4464  000EA4  AE29               	btfss	___awdiv@divisor+1,7,c
  4465  000EA6  D006               	goto	l3734
  4466  000EA8  6C28               	negf	___awdiv@divisor,c
  4467  000EAA  1E29               	comf	___awdiv@divisor+1,f,c
  4468  000EAC  B0D8               	btfsc	status,0,c
  4469  000EAE  2A29               	incf	___awdiv@divisor+1,f,c
  4470  000EB0  0E01               	movlw	1
  4471  000EB2  6E2B               	movwf	___awdiv@sign,c
  4472  000EB4                     l3734:
  4473  000EB4  AE27               	btfss	___awdiv@dividend+1,7,c
  4474  000EB6  D006               	goto	l3740
  4475  000EB8  6C26               	negf	___awdiv@dividend,c
  4476  000EBA  1E27               	comf	___awdiv@dividend+1,f,c
  4477  000EBC  B0D8               	btfsc	status,0,c
  4478  000EBE  2A27               	incf	___awdiv@dividend+1,f,c
  4479  000EC0  0E01               	movlw	1
  4480  000EC2  1A2B               	xorwf	___awdiv@sign,f,c
  4481  000EC4                     l3740:
  4482  000EC4  0E00               	movlw	0
  4483  000EC6  6E2D               	movwf	___awdiv@quotient+1,c
  4484  000EC8  0E00               	movlw	0
  4485  000ECA  6E2C               	movwf	___awdiv@quotient,c
  4486  000ECC  5028               	movf	___awdiv@divisor,w,c
  4487  000ECE  1029               	iorwf	___awdiv@divisor+1,w,c
  4488  000ED0  B4D8               	btfsc	status,2,c
  4489  000ED2  D01C               	goto	l3762
  4490  000ED4  0E01               	movlw	1
  4491  000ED6  6E2A               	movwf	___awdiv@counter,c
  4492  000ED8  D004               	goto	l3748
  4493  000EDA                     l3746:
  4494  000EDA  90D8               	bcf	status,0,c
  4495  000EDC  3628               	rlcf	___awdiv@divisor,f,c
  4496  000EDE  3629               	rlcf	___awdiv@divisor+1,f,c
  4497  000EE0  2A2A               	incf	___awdiv@counter,f,c
  4498  000EE2                     l3748:
  4499  000EE2  AE29               	btfss	___awdiv@divisor+1,7,c
  4500  000EE4  D7FA               	goto	l3746
  4501  000EE6                     u2400:
  4502  000EE6  90D8               	bcf	status,0,c
  4503  000EE8  362C               	rlcf	___awdiv@quotient,f,c
  4504  000EEA  362D               	rlcf	___awdiv@quotient+1,f,c
  4505  000EEC  5028               	movf	___awdiv@divisor,w,c
  4506  000EEE  5C26               	subwf	___awdiv@dividend,w,c
  4507  000EF0  5029               	movf	___awdiv@divisor+1,w,c
  4508  000EF2  5827               	subwfb	___awdiv@dividend+1,w,c
  4509  000EF4  A0D8               	btfss	status,0,c
  4510  000EF6  D005               	goto	l3758
  4511  000EF8  5028               	movf	___awdiv@divisor,w,c
  4512  000EFA  5E26               	subwf	___awdiv@dividend,f,c
  4513  000EFC  5029               	movf	___awdiv@divisor+1,w,c
  4514  000EFE  5A27               	subwfb	___awdiv@dividend+1,f,c
  4515  000F00  802C               	bsf	___awdiv@quotient,0,c
  4516  000F02                     l3758:
  4517  000F02  90D8               	bcf	status,0,c
  4518  000F04  3229               	rrcf	___awdiv@divisor+1,f,c
  4519  000F06  3228               	rrcf	___awdiv@divisor,f,c
  4520  000F08  2E2A               	decfsz	___awdiv@counter,f,c
  4521  000F0A  D7ED               	goto	u2400
  4522  000F0C                     l3762:
  4523  000F0C  502B               	movf	___awdiv@sign,w,c
  4524  000F0E  B4D8               	btfsc	status,2,c
  4525  000F10  D004               	goto	l3766
  4526  000F12  6C2C               	negf	___awdiv@quotient,c
  4527  000F14  1E2D               	comf	___awdiv@quotient+1,f,c
  4528  000F16  B0D8               	btfsc	status,0,c
  4529  000F18  2A2D               	incf	___awdiv@quotient+1,f,c
  4530  000F1A                     l3766:
  4531  000F1A  C02C  F026         	movff	___awdiv@quotient,?___awdiv
  4532  000F1E  C02D  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  4533  000F22  0012               	return		;funcret
  4534  000F24                     __end_of___awdiv:
  4535                           	opt callstack 0
  4536                           
  4537 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4538 ;; Defined at:
  4539 ;;		line 182 in file "CAN.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4542 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4543 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4544 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  i               1    9[COMRAM] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;Total ram usage:        5 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    3
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_CAN_SendFrame
  4567 ;;		_CAN_TakeFrame
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text33
  4572  0014B4                     __ptext33:
  4573                           	opt callstack 0
  4574  0014B4                     _CAN_MoveBuffIntoFrame:
  4575                           	opt callstack 24
  4576                           
  4577                           ;CAN.c: 182: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 183: {;CAN.c
      +                          : 184:     BYTE i;;CAN.c: 185:     for(i=0; i<8; ++i)
  4578                           
  4579                           ;incstack = 0
  4580  0014B4  0E00               	movlw	0
  4581  0014B6  6E2A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4582  0014B8                     l3420:
  4583                           
  4584                           ;CAN.c: 186:     {;CAN.c: 187:         Ram[i]=(*(Buf+i));
  4585  0014B8  502A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4586  0014BA  2428               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4587  0014BC  6ED9               	movwf	fsr2l,c
  4588  0014BE  0E00               	movlw	0
  4589  0014C0  2029               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4590  0014C2  6EDA               	movwf	fsr2h,c
  4591  0014C4  502A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4592  0014C6  2426               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4593  0014C8  6EE1               	movwf	fsr1l,c
  4594  0014CA  0E00               	movlw	0
  4595  0014CC  2027               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4596  0014CE  6EE2               	movwf	fsr1h,c
  4597  0014D0  CFDF FFE7          	movff	indf2,indf1
  4598                           
  4599                           ;CAN.c: 188:     }
  4600  0014D4  2A2A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4601  0014D6  0E07               	movlw	7
  4602  0014D8  642A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4603  0014DA  D7EE               	goto	l3420
  4604  0014DC  0012               	return	
  4605  0014DE                     __end_of_CAN_MoveBuffIntoFrame:
  4606                           	opt callstack 0
  4607                           
  4608 ;; *************** function _TMR1_Update_flag_Set *****************
  4609 ;; Defined at:
  4610 ;;		line 32 in file "TMR1.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  a               2    5[COMRAM] unsigned int 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		None
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;Total ram usage:        2 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    3
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_main
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text34
  4639  00160E                     __ptext34:
  4640                           	opt callstack 0
  4641  00160E                     _TMR1_Update_flag_Set:
  4642                           	opt callstack 27
  4643                           
  4644                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4645                           
  4646                           ;incstack = 0
  4647  00160E  C026  F018         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4648  001612  C027  F019         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4649  001616  0012               	return		;funcret
  4650  001618                     __end_of_TMR1_Update_flag_Set:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function _TMR1_Update_flag_Get *****************
  4654 ;; Defined at:
  4655 ;;		line 47 in file "TMR1.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  2    5[COMRAM] unsigned int 
  4662 ;; Registers used:
  4663 ;;		None
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;Total ram usage:        2 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    3
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_main
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text35
  4684  001618                     __ptext35:
  4685                           	opt callstack 0
  4686  001618                     _TMR1_Update_flag_Get:
  4687                           	opt callstack 27
  4688                           
  4689                           ;TMR1.c: 49:     return TMR1_Update_flag;
  4690                           
  4691                           ;incstack = 0
  4692  001618  C018  F026         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  4693  00161C  C019  F027         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  4694  001620  0012               	return		;funcret
  4695  001622                     __end_of_TMR1_Update_flag_Get:
  4696                           	opt callstack 0
  4697                           
  4698 ;; *************** function _LED_Update *****************
  4699 ;; Defined at:
  4700 ;;		line 105 in file "LED.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      unsigned char 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    5
  4721 ;; This function calls:
  4722 ;;		_LED_Control
  4723 ;;		_LED_Left
  4724 ;;		_LED_Light_Pos
  4725 ;;		_LED_Right
  4726 ;; This function is called by:
  4727 ;;		_main
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text36
  4732  000F24                     __ptext36:
  4733                           	opt callstack 0
  4734  000F24                     _LED_Update:
  4735                           	opt callstack 25
  4736                           
  4737                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  4738                           
  4739                           ;incstack = 0
  4740  000F24  5020               	movf	_LOCK,w,c
  4741  000F26  A4D8               	btfss	status,2,c
  4742  000F28  D013               	goto	l3968
  4743                           
  4744                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  4745  000F2A  0E00               	movlw	0
  4746  000F2C  6E27               	movwf	LED_Control@diode+1,c
  4747  000F2E  0E00               	movlw	0
  4748  000F30  6E26               	movwf	LED_Control@diode,c
  4749  000F32  0E00               	movlw	0
  4750  000F34  ECC0  F004         	call	_LED_Control
  4751                           
  4752                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  4753  000F38  C043  F02D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  4754  000F3C  C044  F02E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  4755  000F40  C047  F02F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4756  000F44  C048  F030         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4757  000F48  5049               	movf	LED_Update@Green,w,c
  4758  000F4A  EC68  F006         	call	_LED_Light_Pos
  4759                           
  4760                           ;LED.c: 117:     }
  4761  000F4E  D012               	goto	l293
  4762  000F50                     l3968:
  4763                           
  4764                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  4765  000F50  0E00               	movlw	0
  4766  000F52  6E27               	movwf	LED_Control@diode+1,c
  4767  000F54  0E00               	movlw	0
  4768  000F56  6E26               	movwf	LED_Control@diode,c
  4769  000F58  5049               	movf	LED_Update@Green,w,c
  4770  000F5A  ECC0  F004         	call	_LED_Control
  4771                           
  4772                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  4773  000F5E  C045  F02D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  4774  000F62  C046  F02E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  4775  000F66  C047  F02F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4776  000F6A  C048  F030         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4777  000F6E  0E00               	movlw	0
  4778  000F70  EC68  F006         	call	_LED_Light_Pos
  4779  000F74                     l293:
  4780                           
  4781                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  4782  000F74  C045  F026         	movff	LED_Update@pos1,LED_Right@a
  4783  000F78  C046  F027         	movff	LED_Update@pos1+1,LED_Right@a+1
  4784  000F7C  EC76  F009         	call	_LED_Right	;wreg free
  4785  000F80  C026  F045         	movff	?_LED_Right,LED_Update@pos1
  4786  000F84  C027  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  4787                           
  4788                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  4789  000F88  C043  F026         	movff	LED_Update@pos2,LED_Left@a
  4790  000F8C  C044  F027         	movff	LED_Update@pos2+1,LED_Left@a+1
  4791  000F90  EC9C  F009         	call	_LED_Left	;wreg free
  4792  000F94  C026  F043         	movff	?_LED_Left,LED_Update@pos2
  4793  000F98  C027  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  4794  000F9C  0012               	return		;funcret
  4795  000F9E                     __end_of_LED_Update:
  4796                           	opt callstack 0
  4797                           
  4798 ;; *************** function _LED_Light_Pos *****************
  4799 ;; Defined at:
  4800 ;;		line 196 in file "LED.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  color           1    wreg     enum E10644
  4803 ;;  pos             2   12[COMRAM] unsigned int 
  4804 ;;  fulfillment     2   14[COMRAM] unsigned int 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  color           1   16[COMRAM] enum E10644
  4807 ;;  flage           2   21[COMRAM] unsigned int 
  4808 ;;  pos2            2   19[COMRAM] unsigned int 
  4809 ;;  LED_array       2   17[COMRAM] unsigned int 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2   12[COMRAM] unsigned int 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4822 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;Total ram usage:       11 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    4
  4826 ;; This function calls:
  4827 ;;		_LED_Control
  4828 ;;		_LED_Left
  4829 ;;		_LED_Right
  4830 ;;		___lwdiv
  4831 ;; This function is called by:
  4832 ;;		_LED_Update
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text37
  4837  000CD0                     __ptext37:
  4838                           	opt callstack 0
  4839  000CD0                     _LED_Light_Pos:
  4840                           	opt callstack 25
  4841                           
  4842                           ;incstack = 0
  4843                           ;LED_Light_Pos@color stored from wreg
  4844  000CD0  6E31               	movwf	LED_Light_Pos@color,c
  4845                           
  4846                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  4847  000CD2  C02D  F034         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  4848  000CD6  C02E  F035         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  4849                           
  4850                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  4851  000CDA  0E00               	movlw	0
  4852  000CDC  6E33               	movwf	LED_Light_Pos@LED_array+1,c
  4853  000CDE  0E00               	movlw	0
  4854  000CE0  6E32               	movwf	LED_Light_Pos@LED_array,c
  4855                           
  4856                           ;LED.c: 200:     UINT flage = fulfillment/10;
  4857  000CE2  C02F  F026         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  4858  000CE6  C030  F027         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  4859  000CEA  0E00               	movlw	0
  4860  000CEC  6E29               	movwf	___lwdiv@divisor+1,c
  4861  000CEE  0E0A               	movlw	10
  4862  000CF0  6E28               	movwf	___lwdiv@divisor,c
  4863  000CF2  EC00  F009         	call	___lwdiv	;wreg free
  4864  000CF6  C026  F036         	movff	?___lwdiv,LED_Light_Pos@flage
  4865  000CFA  C027  F037         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  4866                           
  4867                           ;LED.c: 201:     if(color == RED)
  4868  000CFE  5031               	movf	LED_Light_Pos@color,w,c
  4869  000D00  B4D8               	btfsc	status,2,c
  4870  000D02  D017               	goto	l3876
  4871  000D04  D031               	goto	l3884
  4872  000D06                     l3870:
  4873                           
  4874                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  4875  000D06  5032               	movf	LED_Light_Pos@LED_array,w,c
  4876  000D08  1034               	iorwf	LED_Light_Pos@pos2,w,c
  4877  000D0A  6E32               	movwf	LED_Light_Pos@LED_array,c
  4878  000D0C  5033               	movf	LED_Light_Pos@LED_array+1,w,c
  4879  000D0E  1035               	iorwf	LED_Light_Pos@pos2+1,w,c
  4880  000D10  6E33               	movwf	LED_Light_Pos@LED_array+1,c
  4881                           
  4882                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  4883  000D12  C034  F026         	movff	LED_Light_Pos@pos2,LED_Left@a
  4884  000D16  C035  F027         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  4885  000D1A  EC9C  F009         	call	_LED_Left	;wreg free
  4886  000D1E  C026  F034         	movff	?_LED_Left,LED_Light_Pos@pos2
  4887  000D22  C027  F035         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  4888                           
  4889                           ;LED.c: 207:             flage = flage - 1;
  4890  000D26  0EFF               	movlw	255
  4891  000D28  2436               	addwf	LED_Light_Pos@flage,w,c
  4892  000D2A  6E36               	movwf	LED_Light_Pos@flage,c
  4893  000D2C  0EFF               	movlw	255
  4894  000D2E  2037               	addwfc	LED_Light_Pos@flage+1,w,c
  4895  000D30  6E37               	movwf	LED_Light_Pos@flage+1,c
  4896  000D32                     l3876:
  4897                           
  4898                           ;LED.c: 203:         while(flage>0)
  4899  000D32  5036               	movf	LED_Light_Pos@flage,w,c
  4900  000D34  1037               	iorwf	LED_Light_Pos@flage+1,w,c
  4901  000D36  B4D8               	btfsc	status,2,c
  4902  000D38  D01B               	goto	u2490
  4903  000D3A  D7E5               	goto	l3870
  4904  000D3C                     l3878:
  4905                           
  4906                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  4907  000D3C  5032               	movf	LED_Light_Pos@LED_array,w,c
  4908  000D3E  1034               	iorwf	LED_Light_Pos@pos2,w,c
  4909  000D40  6E32               	movwf	LED_Light_Pos@LED_array,c
  4910  000D42  5033               	movf	LED_Light_Pos@LED_array+1,w,c
  4911  000D44  1035               	iorwf	LED_Light_Pos@pos2+1,w,c
  4912  000D46  6E33               	movwf	LED_Light_Pos@LED_array+1,c
  4913                           
  4914                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  4915  000D48  C034  F026         	movff	LED_Light_Pos@pos2,LED_Right@a
  4916  000D4C  C035  F027         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  4917  000D50  EC76  F009         	call	_LED_Right	;wreg free
  4918  000D54  C026  F034         	movff	?_LED_Right,LED_Light_Pos@pos2
  4919  000D58  C027  F035         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  4920                           
  4921                           ;LED.c: 216:             flage = flage - 1;
  4922  000D5C  0EFF               	movlw	255
  4923  000D5E  2436               	addwf	LED_Light_Pos@flage,w,c
  4924  000D60  6E36               	movwf	LED_Light_Pos@flage,c
  4925  000D62  0EFF               	movlw	255
  4926  000D64  2037               	addwfc	LED_Light_Pos@flage+1,w,c
  4927  000D66  6E37               	movwf	LED_Light_Pos@flage+1,c
  4928  000D68                     l3884:
  4929                           
  4930                           ;LED.c: 212:         while(flage>0)
  4931  000D68  5036               	movf	LED_Light_Pos@flage,w,c
  4932  000D6A  1037               	iorwf	LED_Light_Pos@flage+1,w,c
  4933  000D6C  A4D8               	btfss	status,2,c
  4934  000D6E  D7E6               	goto	l3878
  4935  000D70                     u2490:
  4936                           
  4937                           ;LED.c: 219:     LED_Control(color, LED_array);
  4938  000D70  C032  F026         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  4939  000D74  C033  F027         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  4940  000D78  5031               	movf	LED_Light_Pos@color,w,c
  4941  000D7A  ECC0  F004         	call	_LED_Control
  4942  000D7E  0012               	return		;funcret
  4943  000D80                     __end_of_LED_Light_Pos:
  4944                           	opt callstack 0
  4945                           
  4946 ;; *************** function ___lwdiv *****************
  4947 ;; Defined at:
  4948 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  dividend        2    5[COMRAM] unsigned int 
  4951 ;;  divisor         2    7[COMRAM] unsigned int 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  quotient        2   10[COMRAM] unsigned int 
  4954 ;;  counter         1    9[COMRAM] unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  2    5[COMRAM] unsigned int 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4964 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;Total ram usage:        7 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    3
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_LED_Light_Pos
  4975 ;;		_FRAME_Plot
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text38
  4980  001200                     __ptext38:
  4981                           	opt callstack 0
  4982  001200                     ___lwdiv:
  4983                           	opt callstack 24
  4984                           
  4985                           ;incstack = 0
  4986  001200  0E00               	movlw	0
  4987  001202  6E2C               	movwf	___lwdiv@quotient+1,c
  4988  001204  0E00               	movlw	0
  4989  001206  6E2B               	movwf	___lwdiv@quotient,c
  4990  001208  5028               	movf	___lwdiv@divisor,w,c
  4991  00120A  1029               	iorwf	___lwdiv@divisor+1,w,c
  4992  00120C  B4D8               	btfsc	status,2,c
  4993  00120E  D01C               	goto	l1196
  4994  001210  0E01               	movlw	1
  4995  001212  6E2A               	movwf	___lwdiv@counter,c
  4996  001214  D004               	goto	l3532
  4997  001216                     l3530:
  4998  001216  90D8               	bcf	status,0,c
  4999  001218  3628               	rlcf	___lwdiv@divisor,f,c
  5000  00121A  3629               	rlcf	___lwdiv@divisor+1,f,c
  5001  00121C  2A2A               	incf	___lwdiv@counter,f,c
  5002  00121E                     l3532:
  5003  00121E  AE29               	btfss	___lwdiv@divisor+1,7,c
  5004  001220  D7FA               	goto	l3530
  5005  001222                     u2090:
  5006  001222  90D8               	bcf	status,0,c
  5007  001224  362B               	rlcf	___lwdiv@quotient,f,c
  5008  001226  362C               	rlcf	___lwdiv@quotient+1,f,c
  5009  001228  5028               	movf	___lwdiv@divisor,w,c
  5010  00122A  5C26               	subwf	___lwdiv@dividend,w,c
  5011  00122C  5029               	movf	___lwdiv@divisor+1,w,c
  5012  00122E  5827               	subwfb	___lwdiv@dividend+1,w,c
  5013  001230  A0D8               	btfss	status,0,c
  5014  001232  D005               	goto	l3542
  5015  001234  5028               	movf	___lwdiv@divisor,w,c
  5016  001236  5E26               	subwf	___lwdiv@dividend,f,c
  5017  001238  5029               	movf	___lwdiv@divisor+1,w,c
  5018  00123A  5A27               	subwfb	___lwdiv@dividend+1,f,c
  5019  00123C  802B               	bsf	___lwdiv@quotient,0,c
  5020  00123E                     l3542:
  5021  00123E  90D8               	bcf	status,0,c
  5022  001240  3229               	rrcf	___lwdiv@divisor+1,f,c
  5023  001242  3228               	rrcf	___lwdiv@divisor,f,c
  5024  001244  2E2A               	decfsz	___lwdiv@counter,f,c
  5025  001246  D7ED               	goto	u2090
  5026  001248                     l1196:
  5027  001248  C02B  F026         	movff	___lwdiv@quotient,?___lwdiv
  5028  00124C  C02C  F027         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5029  001250  0012               	return		;funcret
  5030  001252                     __end_of___lwdiv:
  5031                           	opt callstack 0
  5032                           
  5033 ;; *************** function _LED_Right *****************
  5034 ;; Defined at:
  5035 ;;		line 140 in file "LED.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  a               2    5[COMRAM] unsigned int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  b               2    9[COMRAM] unsigned int 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  2    5[COMRAM] unsigned int 
  5042 ;; Registers used:
  5043 ;;		wreg, status,2, status,0
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;Total ram usage:        6 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    3
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_LED_Update
  5060 ;;		_LED_Light_Pos
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text39
  5065  0012EC                     __ptext39:
  5066                           	opt callstack 0
  5067  0012EC                     _LED_Right:
  5068                           	opt callstack 26
  5069                           
  5070                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5071                           
  5072                           ;incstack = 0
  5073  0012EC  A026               	btfss	LED_Right@a,0,c
  5074  0012EE  D018               	goto	l2714
  5075                           
  5076                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5077  0012F0  0EFE               	movlw	254
  5078  0012F2  1426               	andwf	LED_Right@a,w,c
  5079  0012F4  6E2A               	movwf	LED_Right@b,c
  5080  0012F6  0E03               	movlw	3
  5081  0012F8  1427               	andwf	LED_Right@a+1,w,c
  5082  0012FA  6E2B               	movwf	LED_Right@b+1,c
  5083                           
  5084                           ;LED.c: 145:         b = b >> 1;
  5085  0012FC  90D8               	bcf	status,0,c
  5086  0012FE  302B               	rrcf	LED_Right@b+1,w,c
  5087  001300  6E28               	movwf	??_LED_Right& (0+255),c
  5088  001302  302A               	rrcf	LED_Right@b,w,c
  5089  001304  6E2A               	movwf	LED_Right@b,c
  5090  001306  C028  F02B         	movff	??_LED_Right,LED_Right@b+1
  5091                           
  5092                           ;LED.c: 146:         b = b | 0b1000000000;
  5093  00130A  0E00               	movlw	0
  5094  00130C  102A               	iorwf	LED_Right@b,w,c
  5095  00130E  6E2A               	movwf	LED_Right@b,c
  5096  001310  0E02               	movlw	2
  5097  001312  102B               	iorwf	LED_Right@b+1,w,c
  5098  001314  6E2B               	movwf	LED_Right@b+1,c
  5099                           
  5100                           ;LED.c: 147:         return b;
  5101  001316  C02A  F026         	movff	LED_Right@b,?_LED_Right
  5102  00131A  C02B  F027         	movff	LED_Right@b+1,?_LED_Right+1
  5103  00131E  0012               	return	
  5104  001320                     l2714:
  5105                           
  5106                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5107  001320  90D8               	bcf	status,0,c
  5108  001322  3027               	rrcf	LED_Right@a+1,w,c
  5109  001324  6E28               	movwf	??_LED_Right& (0+255),c
  5110  001326  3026               	rrcf	LED_Right@a,w,c
  5111  001328  6E26               	movwf	LED_Right@a,c
  5112  00132A  C028  F027         	movff	??_LED_Right,LED_Right@a+1
  5113                           
  5114                           ;LED.c: 152:         return a;
  5115  00132E  C026  F026         	movff	LED_Right@a,?_LED_Right
  5116  001332  C027  F027         	movff	LED_Right@a+1,?_LED_Right+1
  5117  001336  0012               	return		;funcret
  5118  001338                     __end_of_LED_Right:
  5119                           	opt callstack 0
  5120                           
  5121 ;; *************** function _LED_Left *****************
  5122 ;; Defined at:
  5123 ;;		line 167 in file "LED.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  a               2    5[COMRAM] unsigned int 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  b               2    7[COMRAM] unsigned int 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  2    5[COMRAM] unsigned int 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5141 ;;Total ram usage:        4 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    3
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_LED_Update
  5148 ;;		_LED_Light_Pos
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text40
  5153  001338                     __ptext40:
  5154                           	opt callstack 0
  5155  001338                     _LED_Left:
  5156                           	opt callstack 25
  5157                           
  5158                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5159                           
  5160                           ;incstack = 0
  5161  001338  A227               	btfss	LED_Left@a+1,1,c
  5162  00133A  D015               	goto	l2730
  5163                           
  5164                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5165  00133C  0EFF               	movlw	255
  5166  00133E  1426               	andwf	LED_Left@a,w,c
  5167  001340  6E28               	movwf	LED_Left@b,c
  5168  001342  0E01               	movlw	1
  5169  001344  1427               	andwf	LED_Left@a+1,w,c
  5170  001346  6E29               	movwf	LED_Left@b+1,c
  5171                           
  5172                           ;LED.c: 172:         b = b << 1;
  5173  001348  90D8               	bcf	status,0,c
  5174  00134A  3428               	rlcf	LED_Left@b,w,c
  5175  00134C  6E28               	movwf	LED_Left@b,c
  5176  00134E  3429               	rlcf	LED_Left@b+1,w,c
  5177  001350  6E29               	movwf	LED_Left@b+1,c
  5178                           
  5179                           ;LED.c: 173:         b = b | 0b0000000001;
  5180  001352  0E01               	movlw	1
  5181  001354  1028               	iorwf	LED_Left@b,w,c
  5182  001356  6E28               	movwf	LED_Left@b,c
  5183  001358  5029               	movf	LED_Left@b+1,w,c
  5184  00135A  6E29               	movwf	LED_Left@b+1,c
  5185                           
  5186                           ;LED.c: 174:         return b;
  5187  00135C  C028  F026         	movff	LED_Left@b,?_LED_Left
  5188  001360  C029  F027         	movff	LED_Left@b+1,?_LED_Left+1
  5189  001364  0012               	return	
  5190  001366                     l2730:
  5191                           
  5192                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5193  001366  90D8               	bcf	status,0,c
  5194  001368  3426               	rlcf	LED_Left@a,w,c
  5195  00136A  6E26               	movwf	LED_Left@a,c
  5196  00136C  3427               	rlcf	LED_Left@a+1,w,c
  5197  00136E  6E27               	movwf	LED_Left@a+1,c
  5198                           
  5199                           ;LED.c: 179:         return a;
  5200  001370  C026  F026         	movff	LED_Left@a,?_LED_Left
  5201  001374  C027  F027         	movff	LED_Left@a+1,?_LED_Left+1
  5202  001378  0012               	return		;funcret
  5203  00137A                     __end_of_LED_Left:
  5204                           	opt callstack 0
  5205                           
  5206 ;; *************** function _INI_All *****************
  5207 ;; Defined at:
  5208 ;;		line 52 in file "INI.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;Total ram usage:        0 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    5
  5229 ;; This function calls:
  5230 ;;		_CAN_Setup
  5231 ;;		_INI_GlobalInterrupt
  5232 ;;		_INI_LED_Start
  5233 ;;		_INI_OUTPUT
  5234 ;;		_INI_Timer
  5235 ;; This function is called by:
  5236 ;;		_main
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text41
  5241  001584                     __ptext41:
  5242                           	opt callstack 0
  5243  001584                     _INI_All:
  5244                           	opt callstack 25
  5245                           
  5246                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  5247                           
  5248                           ;incstack = 0
  5249  001584  80D1               	bsf	4049,0,c	;volatile
  5250  001586  0004               	clrwdt		;# 
  5251                           
  5252                           ;INI.c: 64:     INI_OUTPUT();
  5253  001588  ECB3  F00A         	call	_INI_OUTPUT	;wreg free
  5254                           
  5255                           ;INI.c: 66:     CAN_Setup();
  5256  00158C  EC79  F008         	call	_CAN_Setup	;wreg free
  5257                           
  5258                           ;INI.c: 67:     INI_GlobalInterrupt();
  5259  001590  ECE2  F00A         	call	_INI_GlobalInterrupt	;wreg free
  5260                           
  5261                           ;INI.c: 69:     INI_Timer();
  5262  001594  ECCF  F00A         	call	_INI_Timer	;wreg free
  5263                           
  5264                           ;INI.c: 71:     INI_LED_Start();
  5265  001598  EC29  F00A         	call	_INI_LED_Start	;wreg free
  5266  00159C  0012               	return		;funcret
  5267  00159E                     __end_of_INI_All:
  5268                           	opt callstack 0
  5269                           
  5270 ;; *************** function _INI_Timer *****************
  5271 ;; Defined at:
  5272 ;;		line 92 in file "TMR1.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      unsigned char 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;Total ram usage:        0 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    3
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_INI_All
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text42
  5301  00159E                     __ptext42:
  5302                           	opt callstack 0
  5303  00159E                     _INI_Timer:
  5304                           	opt callstack 26
  5305                           
  5306                           ;TMR1.c: 96:     IRCF2 = 1;
  5307                           
  5308                           ;incstack = 0
  5309  00159E  8CD3               	bsf	4051,6,c	;volatile
  5310                           
  5311                           ;TMR1.c: 97:     IRCF1 = 1;
  5312  0015A0  8AD3               	bsf	4051,5,c	;volatile
  5313                           
  5314                           ;TMR1.c: 98:     IRCF0 = 1;
  5315  0015A2  88D3               	bsf	4051,4,c	;volatile
  5316                           
  5317                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5318  0015A4  0E3D               	movlw	61
  5319  0015A6  6ECD               	movwf	4045,c	;volatile
  5320                           
  5321                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5322  0015A8  0E9E               	movlw	158
  5323  0015AA  6ECF               	movwf	4047,c	;volatile
  5324                           
  5325                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5326  0015AC  0E57               	movlw	87
  5327  0015AE  6ECE               	movwf	4046,c	;volatile
  5328                           
  5329                           ;TMR1.c: 102:     TMR1IE=1;
  5330  0015B0  809D               	bsf	3997,0,c	;volatile
  5331                           
  5332                           ;TMR1.c: 103:     TMR1ON = 1;
  5333  0015B2  80CD               	bsf	4045,0,c	;volatile
  5334  0015B4  0012               	return		;funcret
  5335  0015B6                     __end_of_INI_Timer:
  5336                           	opt callstack 0
  5337                           
  5338 ;; *************** function _INI_OUTPUT *****************
  5339 ;; Defined at:
  5340 ;;		line 27 in file "INI.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    3
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_INI_All
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text43
  5369  001566                     __ptext43:
  5370                           	opt callstack 0
  5371  001566                     _INI_OUTPUT:
  5372                           	opt callstack 26
  5373                           
  5374                           ;INI.c: 31:     LATA = 0;
  5375                           
  5376                           ;incstack = 0
  5377  001566  0E00               	movlw	0
  5378  001568  6E89               	movwf	3977,c	;volatile
  5379                           
  5380                           ;INI.c: 32:     LATB = 0;
  5381  00156A  0E00               	movlw	0
  5382  00156C  6E8A               	movwf	3978,c	;volatile
  5383                           
  5384                           ;INI.c: 33:     LATC = 0;
  5385  00156E  0E00               	movlw	0
  5386  001570  6E8B               	movwf	3979,c	;volatile
  5387                           
  5388                           ;INI.c: 34:     TRISA = 0x0C;
  5389  001572  0E0C               	movlw	12
  5390  001574  6E92               	movwf	3986,c	;volatile
  5391                           
  5392                           ;INI.c: 35:     TRISB = 0b10001000;
  5393  001576  0E88               	movlw	136
  5394  001578  6E93               	movwf	3987,c	;volatile
  5395                           
  5396                           ;INI.c: 36:     TRISC = 0xBF;
  5397  00157A  0EBF               	movlw	191
  5398  00157C  6E94               	movwf	3988,c	;volatile
  5399                           
  5400                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5401  00157E  8ED0               	bsf	4048,7,c	;volatile
  5402                           
  5403                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5404  001580  8605               	bsf	_DetectorLedRadar,3,c
  5405  001582  0012               	return		;funcret
  5406  001584                     __end_of_INI_OUTPUT:
  5407                           	opt callstack 0
  5408                           
  5409 ;; *************** function _INI_LED_Start *****************
  5410 ;; Defined at:
  5411 ;;		line 231 in file "LED.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;		None
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;		None
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      void 
  5418 ;; Registers used:
  5419 ;;		wreg, status,2, status,0, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5429 ;;Total ram usage:        0 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    4
  5432 ;; This function calls:
  5433 ;;		_LED_Control
  5434 ;; This function is called by:
  5435 ;;		_INI_All
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text44
  5440  001452                     __ptext44:
  5441                           	opt callstack 0
  5442  001452                     _INI_LED_Start:
  5443                           	opt callstack 25
  5444                           
  5445                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5446                           
  5447                           ;incstack = 0
  5448  001452  5092               	movf	3986,w,c	;volatile
  5449  001454  0B01               	andlw	1
  5450  001456  6E92               	movwf	3986,c	;volatile
  5451                           
  5452                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5453  001458  5093               	movf	3987,w,c	;volatile
  5454  00145A  0BFC               	andlw	252
  5455  00145C  6E93               	movwf	3987,c	;volatile
  5456                           
  5457                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5458  00145E  5096               	movf	3990,w,c	;volatile
  5459  001460  0BF8               	andlw	248
  5460  001462  6E96               	movwf	3990,c	;volatile
  5461                           
  5462                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5463  001464  0E00               	movlw	0
  5464  001466  6E95               	movwf	3989,c	;volatile
  5465                           
  5466                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5467  001468  0E00               	movlw	0
  5468  00146A  6E27               	movwf	LED_Control@diode+1,c
  5469  00146C  0E00               	movlw	0
  5470  00146E  6E26               	movwf	LED_Control@diode,c
  5471  001470  0E00               	movlw	0
  5472  001472  ECC0  F004         	call	_LED_Control
  5473                           
  5474                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5475  001476  0E00               	movlw	0
  5476  001478  6E27               	movwf	LED_Control@diode+1,c
  5477  00147A  0E00               	movlw	0
  5478  00147C  6E26               	movwf	LED_Control@diode,c
  5479  00147E  0E01               	movlw	1
  5480  001480  ECC0  F004         	call	_LED_Control
  5481  001484  0012               	return		;funcret
  5482  001486                     __end_of_INI_LED_Start:
  5483                           	opt callstack 0
  5484                           
  5485 ;; *************** function _LED_Control *****************
  5486 ;; Defined at:
  5487 ;;		line 256 in file "LED.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;  color           1    wreg     enum E10644
  5490 ;;  diode           2    5[COMRAM] unsigned int 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  color           1    9[COMRAM] enum E10644
  5493 ;;  cos             2    0        unsigned int 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      unsigned char 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;Total ram usage:        5 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    3
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_LED_Error
  5514 ;;		_LED_Clear
  5515 ;;		_LED_Update
  5516 ;;		_LED_Light_Pos
  5517 ;;		_INI_LED_Start
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text45
  5522  000980                     __ptext45:
  5523                           	opt callstack 0
  5524  000980                     _LED_Control:
  5525                           	opt callstack 24
  5526                           
  5527                           ;incstack = 0
  5528                           ;LED_Control@color stored from wreg
  5529  000980  6E2A               	movwf	LED_Control@color,c
  5530                           
  5531                           ;LED.c: 259:     if(color == RED)
  5532  000982  502A               	movf	LED_Control@color,w,c
  5533  000984  A4D8               	btfss	status,2,c
  5534  000986  D050               	goto	l321
  5535                           
  5536                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5537  000988  A026               	btfss	LED_Control@diode,0,c
  5538  00098A  D003               	goto	l3296
  5539                           
  5540                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5541  00098C  508C               	movf	3980,w,c	;volatile
  5542  00098E  0910               	iorlw	16
  5543  000990  D002               	goto	L3
  5544  000992                     l3296:
  5545                           
  5546                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5547  000992  508C               	movf	3980,w,c	;volatile
  5548  000994  0BEF               	andlw	239
  5549  000996                     L3:
  5550  000996  6E8C               	movwf	3980,c	;volatile
  5551                           
  5552                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5553  000998  A226               	btfss	LED_Control@diode,1,c
  5554  00099A  D003               	goto	l3302
  5555                           
  5556                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5557  00099C  508C               	movf	3980,w,c	;volatile
  5558  00099E  0940               	iorlw	64
  5559  0009A0  D002               	goto	L4
  5560  0009A2                     l3302:
  5561                           
  5562                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5563  0009A2  508C               	movf	3980,w,c	;volatile
  5564  0009A4  0BBF               	andlw	191
  5565  0009A6                     L4:
  5566  0009A6  6E8C               	movwf	3980,c	;volatile
  5567                           
  5568                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5569  0009A8  A426               	btfss	LED_Control@diode,2,c
  5570  0009AA  D003               	goto	l3308
  5571                           
  5572                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5573  0009AC  508A               	movf	3978,w,c	;volatile
  5574  0009AE  0901               	iorlw	1
  5575  0009B0  D002               	goto	L5
  5576  0009B2                     l3308:
  5577                           
  5578                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5579  0009B2  508A               	movf	3978,w,c	;volatile
  5580  0009B4  0BFE               	andlw	254
  5581  0009B6                     L5:
  5582  0009B6  6E8A               	movwf	3978,c	;volatile
  5583                           
  5584                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5585  0009B8  A626               	btfss	LED_Control@diode,3,c
  5586  0009BA  D003               	goto	l3314
  5587                           
  5588                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5589  0009BC  5089               	movf	3977,w,c	;volatile
  5590  0009BE  0902               	iorlw	2
  5591  0009C0  D002               	goto	L6
  5592  0009C2                     l3314:
  5593                           
  5594                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5595  0009C2  5089               	movf	3977,w,c	;volatile
  5596  0009C4  0BFD               	andlw	253
  5597  0009C6                     L6:
  5598  0009C6  6E89               	movwf	3977,c	;volatile
  5599                           
  5600                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5601  0009C8  A826               	btfss	LED_Control@diode,4,c
  5602  0009CA  D003               	goto	l3320
  5603                           
  5604                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5605  0009CC  5089               	movf	3977,w,c	;volatile
  5606  0009CE  0908               	iorlw	8
  5607  0009D0  D002               	goto	L7
  5608  0009D2                     l3320:
  5609                           
  5610                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5611  0009D2  5089               	movf	3977,w,c	;volatile
  5612  0009D4  0BF7               	andlw	247
  5613  0009D6                     L7:
  5614  0009D6  6E89               	movwf	3977,c	;volatile
  5615                           
  5616                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5617  0009D8  AA26               	btfss	LED_Control@diode,5,c
  5618  0009DA  D003               	goto	l3326
  5619                           
  5620                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5621  0009DC  5089               	movf	3977,w,c	;volatile
  5622  0009DE  0920               	iorlw	32
  5623  0009E0  D002               	goto	L8
  5624  0009E2                     l3326:
  5625                           
  5626                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5627  0009E2  5089               	movf	3977,w,c	;volatile
  5628  0009E4  0BDF               	andlw	223
  5629  0009E6                     L8:
  5630  0009E6  6E89               	movwf	3977,c	;volatile
  5631                           
  5632                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5633  0009E8  AC26               	btfss	LED_Control@diode,6,c
  5634  0009EA  D003               	goto	l3332
  5635                           
  5636                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5637  0009EC  508D               	movf	3981,w,c	;volatile
  5638  0009EE  0902               	iorlw	2
  5639  0009F0  D002               	goto	L9
  5640  0009F2                     l3332:
  5641                           
  5642                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  5643  0009F2  508D               	movf	3981,w,c	;volatile
  5644  0009F4  0BFD               	andlw	253
  5645  0009F6                     L9:
  5646  0009F6  6E8D               	movwf	3981,c	;volatile
  5647                           
  5648                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  5649  0009F8  AE26               	btfss	LED_Control@diode,7,c
  5650  0009FA  D003               	goto	l3338
  5651                           
  5652                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  5653  0009FC  5089               	movf	3977,w,c	;volatile
  5654  0009FE  0980               	iorlw	128
  5655  000A00  D002               	goto	L10
  5656  000A02                     l3338:
  5657                           
  5658                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  5659  000A02  5089               	movf	3977,w,c	;volatile
  5660  000A04  0B7F               	andlw	127
  5661  000A06                     L10:
  5662  000A06  6E89               	movwf	3977,c	;volatile
  5663                           
  5664                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  5665  000A08  A027               	btfss	LED_Control@diode+1,0,c
  5666  000A0A  D003               	goto	l3344
  5667                           
  5668                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  5669  000A0C  508C               	movf	3980,w,c	;volatile
  5670  000A0E  0901               	iorlw	1
  5671  000A10  D002               	goto	L11
  5672  000A12                     l3344:
  5673                           
  5674                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  5675  000A12  508C               	movf	3980,w,c	;volatile
  5676  000A14  0BFE               	andlw	254
  5677  000A16                     L11:
  5678  000A16  6E8C               	movwf	3980,c	;volatile
  5679                           
  5680                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  5681  000A18  A227               	btfss	LED_Control@diode+1,1,c
  5682  000A1A  D003               	goto	l3350
  5683                           
  5684                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  5685  000A1C  508C               	movf	3980,w,c	;volatile
  5686  000A1E  0904               	iorlw	4
  5687  000A20  D002               	goto	L12
  5688  000A22                     l3350:
  5689                           
  5690                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  5691  000A22  508C               	movf	3980,w,c	;volatile
  5692  000A24  0BFB               	andlw	251
  5693  000A26                     L12:
  5694  000A26  6E8C               	movwf	3980,c	;volatile
  5695  000A28                     l321:
  5696                           
  5697                           ;LED.c: 358:     if(color == GREEN)
  5698  000A28  042A               	decf	LED_Control@color,w,c
  5699  000A2A  A4D8               	btfss	status,2,c
  5700  000A2C  0012               	return	
  5701                           
  5702                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  5703  000A2E  A026               	btfss	LED_Control@diode,0,c
  5704  000A30  D003               	goto	l3356
  5705                           
  5706                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  5707  000A32  508C               	movf	3980,w,c	;volatile
  5708  000A34  0920               	iorlw	32
  5709  000A36  D002               	goto	L13
  5710  000A38                     l3356:
  5711                           
  5712                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  5713  000A38  508C               	movf	3980,w,c	;volatile
  5714  000A3A  0BDF               	andlw	223
  5715  000A3C                     L13:
  5716  000A3C  6E8C               	movwf	3980,c	;volatile
  5717                           
  5718                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  5719  000A3E  A226               	btfss	LED_Control@diode,1,c
  5720  000A40  D003               	goto	l3362
  5721                           
  5722                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  5723  000A42  508C               	movf	3980,w,c	;volatile
  5724  000A44  0980               	iorlw	128
  5725  000A46  D002               	goto	L14
  5726  000A48                     l3362:
  5727                           
  5728                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  5729  000A48  508C               	movf	3980,w,c	;volatile
  5730  000A4A  0B7F               	andlw	127
  5731  000A4C                     L14:
  5732  000A4C  6E8C               	movwf	3980,c	;volatile
  5733                           
  5734                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  5735  000A4E  A426               	btfss	LED_Control@diode,2,c
  5736  000A50  D003               	goto	l3368
  5737                           
  5738                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  5739  000A52  508A               	movf	3978,w,c	;volatile
  5740  000A54  0902               	iorlw	2
  5741  000A56  D002               	goto	L15
  5742  000A58                     l3368:
  5743                           
  5744                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  5745  000A58  508A               	movf	3978,w,c	;volatile
  5746  000A5A  0BFD               	andlw	253
  5747  000A5C                     L15:
  5748  000A5C  6E8A               	movwf	3978,c	;volatile
  5749                           
  5750                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  5751  000A5E  A626               	btfss	LED_Control@diode,3,c
  5752  000A60  D003               	goto	l3374
  5753                           
  5754                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  5755  000A62  5089               	movf	3977,w,c	;volatile
  5756  000A64  0904               	iorlw	4
  5757  000A66  D002               	goto	L16
  5758  000A68                     l3374:
  5759                           
  5760                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  5761  000A68  5089               	movf	3977,w,c	;volatile
  5762  000A6A  0BFB               	andlw	251
  5763  000A6C                     L16:
  5764  000A6C  6E89               	movwf	3977,c	;volatile
  5765                           
  5766                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  5767  000A6E  A826               	btfss	LED_Control@diode,4,c
  5768  000A70  D003               	goto	l3380
  5769                           
  5770                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  5771  000A72  5089               	movf	3977,w,c	;volatile
  5772  000A74  0910               	iorlw	16
  5773  000A76  D002               	goto	L17
  5774  000A78                     l3380:
  5775                           
  5776                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  5777  000A78  5089               	movf	3977,w,c	;volatile
  5778  000A7A  0BEF               	andlw	239
  5779  000A7C                     L17:
  5780  000A7C  6E89               	movwf	3977,c	;volatile
  5781                           
  5782                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  5783  000A7E  AA26               	btfss	LED_Control@diode,5,c
  5784  000A80  D003               	goto	l3386
  5785                           
  5786                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  5787  000A82  508D               	movf	3981,w,c	;volatile
  5788  000A84  0901               	iorlw	1
  5789  000A86  D002               	goto	L18
  5790  000A88                     l3386:
  5791                           
  5792                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  5793  000A88  508D               	movf	3981,w,c	;volatile
  5794  000A8A  0BFE               	andlw	254
  5795  000A8C                     L18:
  5796  000A8C  6E8D               	movwf	3981,c	;volatile
  5797                           
  5798                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  5799  000A8E  AC26               	btfss	LED_Control@diode,6,c
  5800  000A90  D003               	goto	l3392
  5801                           
  5802                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  5803  000A92  508D               	movf	3981,w,c	;volatile
  5804  000A94  0904               	iorlw	4
  5805  000A96  D002               	goto	L19
  5806  000A98                     l3392:
  5807                           
  5808                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  5809  000A98  508D               	movf	3981,w,c	;volatile
  5810  000A9A  0BFB               	andlw	251
  5811  000A9C                     L19:
  5812  000A9C  6E8D               	movwf	3981,c	;volatile
  5813                           
  5814                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  5815  000A9E  AE26               	btfss	LED_Control@diode,7,c
  5816  000AA0  D003               	goto	l3398
  5817                           
  5818                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  5819  000AA2  5089               	movf	3977,w,c	;volatile
  5820  000AA4  0940               	iorlw	64
  5821  000AA6  D002               	goto	L20
  5822  000AA8                     l3398:
  5823                           
  5824                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  5825  000AA8  5089               	movf	3977,w,c	;volatile
  5826  000AAA  0BBF               	andlw	191
  5827  000AAC                     L20:
  5828  000AAC  6E89               	movwf	3977,c	;volatile
  5829                           
  5830                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  5831  000AAE  A027               	btfss	LED_Control@diode+1,0,c
  5832  000AB0  D003               	goto	l3404
  5833                           
  5834                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  5835  000AB2  508C               	movf	3980,w,c	;volatile
  5836  000AB4  0902               	iorlw	2
  5837  000AB6  D002               	goto	L21
  5838  000AB8                     l3404:
  5839                           
  5840                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  5841  000AB8  508C               	movf	3980,w,c	;volatile
  5842  000ABA  0BFD               	andlw	253
  5843  000ABC                     L21:
  5844  000ABC  6E8C               	movwf	3980,c	;volatile
  5845                           
  5846                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  5847  000ABE  A227               	btfss	LED_Control@diode+1,1,c
  5848  000AC0  D004               	goto	l3410
  5849                           
  5850                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  5851  000AC2  508C               	movf	3980,w,c	;volatile
  5852  000AC4  0908               	iorlw	8
  5853  000AC6  6E8C               	movwf	3980,c	;volatile
  5854                           
  5855                           ;LED.c: 450:         }
  5856  000AC8  0012               	return	
  5857  000ACA                     l3410:
  5858                           
  5859                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  5860  000ACA  508C               	movf	3980,w,c	;volatile
  5861  000ACC  0BF7               	andlw	247
  5862  000ACE  6E8C               	movwf	3980,c	;volatile
  5863  000AD0  0012               	return		;funcret
  5864  000AD2                     __end_of_LED_Control:
  5865                           	opt callstack 0
  5866                           
  5867 ;; *************** function _INI_GlobalInterrupt *****************
  5868 ;; Defined at:
  5869 ;;		line 74 in file "INI.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		None
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;Total ram usage:        0 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    3
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		_INI_All
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text46
  5898  0015C4                     __ptext46:
  5899                           	opt callstack 0
  5900  0015C4                     _INI_GlobalInterrupt:
  5901                           	opt callstack 26
  5902                           
  5903                           ;INI.c: 76: INTCONbits.GIEH=1;
  5904                           
  5905                           ;incstack = 0
  5906  0015C4  8EF2               	bsf	4082,7,c	;volatile
  5907                           
  5908                           ;INI.c: 77: INTCONbits.GIEL=1;
  5909  0015C6  8CF2               	bsf	4082,6,c	;volatile
  5910                           
  5911                           ;INI.c: 78: RCONbits.IPEN=1;
  5912  0015C8  8ED0               	bsf	4048,7,c	;volatile
  5913                           
  5914                           ;INI.c: 79: IPEN =1;
  5915  0015CA  8ED0               	bsf	4048,7,c	;volatile
  5916                           
  5917                           ;INI.c: 81: PEIE=1;
  5918  0015CC  8CF2               	bsf	4082,6,c	;volatile
  5919                           
  5920                           ;INI.c: 82: TMR1IP = 0;
  5921  0015CE  909F               	bcf	3999,0,c	;volatile
  5922  0015D0  0012               	return		;funcret
  5923  0015D2                     __end_of_INI_GlobalInterrupt:
  5924                           	opt callstack 0
  5925                           
  5926 ;; *************** function _CAN_Setup *****************
  5927 ;; Defined at:
  5928 ;;		line 23 in file "CAN.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5946 ;;Total ram usage:        1 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    4
  5949 ;; This function calls:
  5950 ;;		_CAN_SetupClock
  5951 ;;		_CAN_SetupMask
  5952 ;; This function is called by:
  5953 ;;		_INI_All
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           	psect	text47
  5958  0010F2                     __ptext47:
  5959                           	opt callstack 0
  5960  0010F2                     _CAN_Setup:
  5961                           	opt callstack 25
  5962                           
  5963                           ;CAN.c: 28:     CANCON = 0x80;
  5964                           
  5965                           ;incstack = 0
  5966  0010F2  0E80               	movlw	128
  5967  0010F4  6E6F               	movwf	3951,c	;volatile
  5968  0010F6                     l2916:
  5969                           
  5970                           ;CAN.c: 29:     while((CANSTAT & 0xE0)!=0x80)
  5971  0010F6  506E               	movf	3950,w,c	;volatile
  5972  0010F8  0BE0               	andlw	224
  5973  0010FA  0A80               	xorlw	128
  5974  0010FC  A4D8               	btfss	status,2,c
  5975  0010FE  D7FB               	goto	l2916
  5976                           
  5977                           ;CAN.c: 34:     BSEL0 = 0;
  5978  001100  0E00               	movlw	0
  5979  001102  010D               	movlb	13	; () banked
  5980  001104  6FF8               	movwf	248,b	;volatile
  5981                           
  5982                           ;CAN.c: 35:     TXB0CON = 0;
  5983  001106  0E00               	movlw	0
  5984  001108  010F               	movlb	15	; () banked
  5985  00110A  6F40               	movwf	64,b	;volatile
  5986                           
  5987                           ;CAN.c: 36:     RXB0CON = 0;
  5988  00110C  0E00               	movlw	0
  5989  00110E  6E60               	movwf	3936,c	;volatile
  5990                           
  5991                           ;CAN.c: 37:     RXB1CON = 0;
  5992  001110  0E00               	movlw	0
  5993  001112  6F50               	movwf	80,b	;volatile
  5994                           
  5995                           ;CAN.c: 38:     B0CON = 0;
  5996  001114  0E00               	movlw	0
  5997  001116  010E               	movlb	14	; () banked
  5998  001118  6F20               	movwf	32,b	;volatile
  5999                           
  6000                           ;CAN.c: 39:     B1CON = 0;
  6001  00111A  0E00               	movlw	0
  6002  00111C  6F30               	movwf	48,b	;volatile
  6003                           
  6004                           ;CAN.c: 40:     PIE3 = 0;
  6005  00111E  0E00               	movlw	0
  6006  001120  6EA3               	movwf	4003,c	;volatile
  6007                           
  6008                           ; BSR set to: 14
  6009                           ;CAN.c: 41:     IPR3 = 0xFF;
  6010  001122  68A5               	setf	4005,c	;volatile
  6011                           
  6012                           ;CAN.c: 42:     PIR3 = 0x00;
  6013  001124  0E00               	movlw	0
  6014  001126  6EA4               	movwf	4004,c	;volatile
  6015                           
  6016                           ;CAN.c: 43:     BIE0 = 0;
  6017  001128  0E00               	movlw	0
  6018  00112A  010D               	movlb	13	; () banked
  6019  00112C  6FFA               	movwf	250,b	;volatile
  6020                           
  6021                           ;CAN.c: 46:     ECANCON = 0x90;
  6022  00112E  0E90               	movlw	144
  6023  001130  6E77               	movwf	3959,c	;volatile
  6024                           
  6025                           ; BSR set to: 13
  6026                           ;CAN.c: 49:     CAN_SetupClock();
  6027  001132  EC6F  F00A         	call	_CAN_SetupClock	;wreg free
  6028                           
  6029                           ;CAN.c: 52:     CAN_SetupMask();
  6030  001136  EC0A  F007         	call	_CAN_SetupMask	;wreg free
  6031                           
  6032                           ;CAN.c: 54:     CIOCON = 0xff;
  6033  00113A  6873               	setf	3955,c	;volatile
  6034                           
  6035                           ;CAN.c: 60:     CANCON = 0x00;
  6036  00113C  0E00               	movlw	0
  6037  00113E  6E6F               	movwf	3951,c	;volatile
  6038  001140                     l2930:
  6039                           
  6040                           ;CAN.c: 61:     while((CANSTAT & 0xE0) != 0x00)
  6041  001140  CF6E F026          	movff	3950,??_CAN_Setup	;volatile
  6042  001144  0EE0               	movlw	224
  6043  001146  1626               	andwf	??_CAN_Setup,f,c
  6044  001148  B4D8               	btfsc	status,2,c
  6045  00114A  0012               	return	
  6046  00114C  D7F9               	goto	l2930
  6047  00114E                     __end_of_CAN_Setup:
  6048                           	opt callstack 0
  6049                           
  6050 ;; *************** function _CAN_SetupMask *****************
  6051 ;; Defined at:
  6052 ;;		line 82 in file "CAN.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;Total ram usage:        0 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    3
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_CAN_Setup
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text48
  6081  000E14                     __ptext48:
  6082                           	opt callstack 0
  6083  000E14                     _CAN_SetupMask:
  6084                           	opt callstack 25
  6085                           
  6086                           ;CAN.c: 84:     MSEL0 = 0x50;
  6087                           
  6088                           ;incstack = 0
  6089  000E14  0E50               	movlw	80
  6090  000E16  010D               	movlb	13	; () banked
  6091  000E18  6FF0               	movwf	240,b	;volatile
  6092                           
  6093                           ;CAN.c: 85:     MSEL1 = 0x55;
  6094  000E1A  0E55               	movlw	85
  6095  000E1C  6FF1               	movwf	241,b	;volatile
  6096                           
  6097                           ;CAN.c: 86:     MSEL2 = 0x55;
  6098  000E1E  0E55               	movlw	85
  6099  000E20  6FF2               	movwf	242,b	;volatile
  6100                           
  6101                           ;CAN.c: 87:     MSEL3 = 0x55;
  6102  000E22  0E55               	movlw	85
  6103  000E24  6FF3               	movwf	243,b	;volatile
  6104                           
  6105                           ;CAN.c: 90:     RXM0SIDH = 0b00000000;
  6106  000E26  0E00               	movlw	0
  6107  000E28  010F               	movlb	15	; () banked
  6108  000E2A  6F18               	movwf	24,b	;volatile
  6109                           
  6110                           ;CAN.c: 91:     RXM0SIDL = 0b00001011;
  6111  000E2C  0E0B               	movlw	11
  6112  000E2E  6F19               	movwf	25,b	;volatile
  6113                           
  6114                           ; BSR set to: 15
  6115                           ;CAN.c: 92:     RXM0EIDH = 0xFF;
  6116  000E30  691A               	setf	26,b	;volatile
  6117                           
  6118                           ; BSR set to: 15
  6119                           ;CAN.c: 93:     RXM0EIDL = 0xFF;
  6120  000E32  691B               	setf	27,b	;volatile
  6121                           
  6122                           ; BSR set to: 15
  6123                           ;CAN.c: 96:     RXM1SIDH = 0xFF;
  6124  000E34  691C               	setf	28,b	;volatile
  6125                           
  6126                           ; BSR set to: 15
  6127                           ;CAN.c: 97:     RXM1SIDL = 0xFF;
  6128  000E36  691D               	setf	29,b	;volatile
  6129                           
  6130                           ;CAN.c: 98:     RXM1EIDH = 0;
  6131  000E38  0E00               	movlw	0
  6132  000E3A  6F1E               	movwf	30,b	;volatile
  6133                           
  6134                           ;CAN.c: 99:     RXM1EIDL = 0;
  6135  000E3C  0E00               	movlw	0
  6136  000E3E  6F1F               	movwf	31,b	;volatile
  6137                           
  6138                           ;CAN.c: 102:     RXM0SIDH = 0x00;
  6139  000E40  0E00               	movlw	0
  6140  000E42  6F18               	movwf	24,b	;volatile
  6141                           
  6142                           ;CAN.c: 103:     RXM0SIDL = 0x00;
  6143  000E44  0E00               	movlw	0
  6144  000E46  6F19               	movwf	25,b	;volatile
  6145                           
  6146                           ;CAN.c: 104:     RXM0EIDH = 0;
  6147  000E48  0E00               	movlw	0
  6148  000E4A  6F1A               	movwf	26,b	;volatile
  6149                           
  6150                           ;CAN.c: 105:     RXM0EIDL = 0;
  6151  000E4C  0E00               	movlw	0
  6152  000E4E  6F1B               	movwf	27,b	;volatile
  6153                           
  6154                           ;CAN.c: 108:     RXF0SIDH = 0x00;
  6155  000E50  0E00               	movlw	0
  6156  000E52  6F00               	movwf	0,b	;volatile
  6157                           
  6158                           ;CAN.c: 109:     RXF0SIDL = 0x01;
  6159  000E54  0E01               	movlw	1
  6160  000E56  6F01               	movwf	1,b	;volatile
  6161                           
  6162                           ; BSR set to: 15
  6163                           ;CAN.c: 110:     RXF0SIDLbits.EXIDEN = 1;
  6164  000E58  8701               	bsf	1,3,b	;volatile
  6165                           
  6166                           ;CAN.c: 111:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  6167  000E5A  5004               	movf	_DaneCan+3,w,c
  6168  000E5C  6F02               	movwf	2,b	;volatile
  6169                           
  6170                           ; BSR set to: 15
  6171                           ;CAN.c: 112:  RXF0EIDH |= 0x40;
  6172  000E5E  8D02               	bsf	2,6,b	;volatile
  6173                           
  6174                           ; BSR set to: 15
  6175                           ;CAN.c: 113:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  6176  000E60  C003  FF03         	movff	_DaneCan+2,3843	;volatile
  6177                           
  6178                           ; BSR set to: 15
  6179                           ;CAN.c: 115:     RXF1SIDH = 0x00;
  6180  000E64  0E00               	movlw	0
  6181  000E66  6F04               	movwf	4,b	;volatile
  6182                           
  6183                           ; BSR set to: 15
  6184                           ;CAN.c: 116:     RXF1SIDL = 0x01;
  6185  000E68  0E01               	movlw	1
  6186  000E6A  6F05               	movwf	5,b	;volatile
  6187                           
  6188                           ; BSR set to: 15
  6189                           ;CAN.c: 117:     RXF1SIDLbits.EXIDEN = 1;
  6190  000E6C  8705               	bsf	5,3,b	;volatile
  6191                           
  6192                           ; BSR set to: 15
  6193                           ;CAN.c: 118:     RXF1EIDH = 0x7F;
  6194  000E6E  0E7F               	movlw	127
  6195  000E70  6F06               	movwf	6,b	;volatile
  6196                           
  6197                           ; BSR set to: 15
  6198                           ;CAN.c: 119:     RXF1EIDL = 0xFF;
  6199  000E72  6907               	setf	7,b	;volatile
  6200                           
  6201                           ; BSR set to: 15
  6202                           ;CAN.c: 122:     RXF2SIDH = 0;
  6203  000E74  0E00               	movlw	0
  6204  000E76  6F08               	movwf	8,b	;volatile
  6205                           
  6206                           ; BSR set to: 15
  6207                           ;CAN.c: 123:     RXF2SIDL = 0x20;
  6208  000E78  0E20               	movlw	32
  6209  000E7A  6F09               	movwf	9,b	;volatile
  6210                           
  6211                           ; BSR set to: 15
  6212                           ;CAN.c: 124:     RXF2SIDLbits.EXIDEN = 1;
  6213  000E7C  8709               	bsf	9,3,b	;volatile
  6214                           
  6215                           ; BSR set to: 15
  6216                           ;CAN.c: 125:     RXF2EIDH = 0;
  6217  000E7E  0E00               	movlw	0
  6218  000E80  6F0A               	movwf	10,b	;volatile
  6219                           
  6220                           ; BSR set to: 15
  6221                           ;CAN.c: 126:     RXF2EIDL = 0;
  6222  000E82  0E00               	movlw	0
  6223  000E84  6F0B               	movwf	11,b	;volatile
  6224                           
  6225                           ; BSR set to: 15
  6226                           ;CAN.c: 129:     RXF3SIDH = 0x00;
  6227  000E86  0E00               	movlw	0
  6228  000E88  6F0C               	movwf	12,b	;volatile
  6229                           
  6230                           ; BSR set to: 15
  6231                           ;CAN.c: 130:     RXF3SIDL = 0x00;
  6232  000E8A  0E00               	movlw	0
  6233  000E8C  6F0D               	movwf	13,b	;volatile
  6234                           
  6235                           ; BSR set to: 15
  6236                           ;CAN.c: 131:     RXF3EIDH = 0x00;
  6237  000E8E  0E00               	movlw	0
  6238  000E90  6F0E               	movwf	14,b	;volatile
  6239                           
  6240                           ; BSR set to: 15
  6241                           ;CAN.c: 132:  RXF3EIDH |= 0x00;
  6242  000E92  510E               	movf	14,w,b	;volatile
  6243                           
  6244                           ; BSR set to: 15
  6245                           ;CAN.c: 133:     RXF3EIDL = 0x00;
  6246  000E94  0E00               	movlw	0
  6247  000E96  6F0F               	movwf	15,b	;volatile
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;CAN.c: 140:     RXFCON0 = 0x0F;
  6251  000E98  0E0F               	movlw	15
  6252  000E9A  010D               	movlb	13	; () banked
  6253  000E9C  6FD4               	movwf	212,b	;volatile
  6254                           
  6255                           ; BSR set to: 13
  6256  000E9E  0012               	return		;funcret
  6257  000EA0                     __end_of_CAN_SetupMask:
  6258                           	opt callstack 0
  6259                           
  6260 ;; *************** function _CAN_SetupClock *****************
  6261 ;; Defined at:
  6262 ;;		line 149 in file "CAN.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;		None
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;		None
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		None
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;Total ram usage:        0 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:    3
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_CAN_Setup
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text49
  6291  0014DE                     __ptext49:
  6292                           	opt callstack 0
  6293  0014DE                     _CAN_SetupClock:
  6294                           	opt callstack 25
  6295                           
  6296                           ;CAN.c: 151:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6297                           
  6298                           ; BSR set to: 13
  6299                           ;incstack = 0
  6300  0014DE  8070               	bsf	3952,0,c	;volatile
  6301                           
  6302                           ;CAN.c: 152:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6303  0014E0  8270               	bsf	3952,1,c	;volatile
  6304                           
  6305                           ;CAN.c: 153:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6306  0014E2  9470               	bcf	3952,2,c	;volatile
  6307                           
  6308                           ;CAN.c: 154:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6309  0014E4  9670               	bcf	3952,3,c	;volatile
  6310                           
  6311                           ;CAN.c: 155:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6312  0014E6  9870               	bcf	3952,4,c	;volatile
  6313                           
  6314                           ;CAN.c: 156:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6315  0014E8  9A70               	bcf	3952,5,c	;volatile
  6316                           
  6317                           ;CAN.c: 158:     BRGCON1bits.SJW0 = 1;
  6318  0014EA  8C70               	bsf	3952,6,c	;volatile
  6319                           
  6320                           ;CAN.c: 159:     BRGCON1bits.SJW1 = 1;
  6321  0014EC  8E70               	bsf	3952,7,c	;volatile
  6322                           
  6323                           ;CAN.c: 161:     BRGCON2bits.SEG1PH0 = 1;
  6324  0014EE  8671               	bsf	3953,3,c	;volatile
  6325                           
  6326                           ;CAN.c: 162:     BRGCON2bits.SEG1PH1 = 1;
  6327  0014F0  8871               	bsf	3953,4,c	;volatile
  6328                           
  6329                           ;CAN.c: 163:     BRGCON2bits.SEG1PH2 = 1;
  6330  0014F2  8A71               	bsf	3953,5,c	;volatile
  6331                           
  6332                           ;CAN.c: 165:     BRGCON2bits.PRSEG2 = 1;
  6333  0014F4  8471               	bsf	3953,2,c	;volatile
  6334                           
  6335                           ;CAN.c: 166:     BRGCON2bits.PRSEG1 = 0;
  6336  0014F6  9271               	bcf	3953,1,c	;volatile
  6337                           
  6338                           ;CAN.c: 167:     BRGCON2bits.PRSEG0 = 0;
  6339  0014F8  9071               	bcf	3953,0,c	;volatile
  6340                           
  6341                           ;CAN.c: 169:     BRGCON3bits.SEG2PH0 = 1;
  6342  0014FA  8072               	bsf	3954,0,c	;volatile
  6343                           
  6344                           ;CAN.c: 170:     BRGCON3bits.SEG2PH1 = 0;
  6345  0014FC  9272               	bcf	3954,1,c	;volatile
  6346                           
  6347                           ;CAN.c: 171:     BRGCON3bits.SEG2PH2 = 1;
  6348  0014FE  8472               	bsf	3954,2,c	;volatile
  6349                           
  6350                           ;CAN.c: 173:     BRGCON2bits.SAM = 1;
  6351  001500  8C71               	bsf	3953,6,c	;volatile
  6352                           
  6353                           ;CAN.c: 174:     BRGCON2bits.SEG2PHTS = 1;
  6354  001502  8E71               	bsf	3953,7,c	;volatile
  6355  001504  0012               	return		;funcret
  6356  001506                     __end_of_CAN_SetupClock:
  6357                           	opt callstack 0
  6358                           
  6359 ;; *************** function _ISR_low *****************
  6360 ;; Defined at:
  6361 ;;		line 16 in file "ISR.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;		None
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0, cstack
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;Total ram usage:        3 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    2
  6382 ;; This function calls:
  6383 ;;		_TMR1_Timer_reset
  6384 ;;		i1_TMR1_Update_flag_Set
  6385 ;; This function is called by:
  6386 ;;		Interrupt level 1
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	intcodelo
  6391  000018                     __pintcodelo:
  6392                           	opt callstack 0
  6393  000018                     _ISR_low:
  6394                           	opt callstack 23
  6395                           
  6396                           ;incstack = 0
  6397  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6398  00001A  CFD8 F023          	movff	status,??_ISR_low
  6399  00001E  CFE8 F024          	movff	wreg,??_ISR_low+1
  6400  000022  CFE0 F025          	movff	bsr,??_ISR_low+2
  6401                           
  6402                           ;ISR.c: 21:     if(TMR1IF==1)
  6403  000026  A09E               	btfss	3998,0,c	;volatile
  6404  000028  D011               	goto	i1l632
  6405                           
  6406                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6407  00002A  EC83  F00A         	call	_TMR1_Timer_reset	;wreg free
  6408                           
  6409                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6410  00002E  0E00               	movlw	0
  6411  000030  6E22               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6412  000032  0E01               	movlw	1
  6413  000034  6E21               	movwf	i1TMR1_Update_flag_Set@a,c
  6414  000036  EC11  F00B         	call	i1_TMR1_Update_flag_Set	;wreg free
  6415                           
  6416                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6417  00003A  8005               	bsf	_DetectorLedRadar,0,c
  6418                           
  6419                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6420  00003C  2A1E               	incf	ISR_low@ramkaStanuU8,f,c
  6421  00003E  0E14               	movlw	20
  6422  000040  641E               	cpfsgt	ISR_low@ramkaStanuU8,c
  6423  000042  D003               	goto	i1l3206
  6424                           
  6425                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6426  000044  0E00               	movlw	0
  6427  000046  6E1E               	movwf	ISR_low@ramkaStanuU8,c
  6428                           
  6429                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6430  000048  8001               	bsf	_DaneCan,0,c
  6431  00004A                     i1l3206:
  6432                           
  6433                           ;ISR.c: 41:             TMR1IF=0;
  6434  00004A  909E               	bcf	3998,0,c	;volatile
  6435  00004C                     i1l632:
  6436  00004C  C025  FFE0         	movff	??_ISR_low+2,bsr
  6437  000050  C024  FFE8         	movff	??_ISR_low+1,wreg
  6438  000054  C023  FFD8         	movff	??_ISR_low,status
  6439  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6440  00005A  0010               	retfie	
  6441  00005C                     __end_of_ISR_low:
  6442                           	opt callstack 0
  6443                           
  6444 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6445 ;; Defined at:
  6446 ;;		line 32 in file "TMR1.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  a               2    0[COMRAM] unsigned int 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      void 
  6453 ;; Registers used:
  6454 ;;		None
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;Total ram usage:        2 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    1
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_ISR_low
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text51
  6475  001622                     __ptext51:
  6476                           	opt callstack 0
  6477  001622                     i1_TMR1_Update_flag_Set:
  6478                           	opt callstack 23
  6479                           
  6480                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6481                           
  6482                           ;incstack = 0
  6483  001622  C021  F018         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6484  001626  C022  F019         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6485  00162A  0012               	return		;funcret
  6486  00162C                     __end_ofi1_TMR1_Update_flag_Set:
  6487                           	opt callstack 0
  6488                           
  6489 ;; *************** function _TMR1_Timer_reset *****************
  6490 ;; Defined at:
  6491 ;;		line 63 in file "TMR1.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6496 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      unsigned char 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;Total ram usage:        2 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    1
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_ISR_low
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text52
  6521  001506                     __ptext52:
  6522                           	opt callstack 0
  6523  001506                     _TMR1_Timer_reset:
  6524                           	opt callstack 23
  6525                           
  6526                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6527                           
  6528                           ;incstack = 0
  6529  001506  0E00               	movlw	0
  6530  001508  6E21               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6531  00150A  0E00               	movlw	0
  6532  00150C  6E22               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6533                           
  6534                           ;TMR1.c: 70:     t1L = TMR1L;
  6535  00150E  CFCE F021          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6536                           
  6537                           ;TMR1.c: 71:     t1H = TMR1H;
  6538  001512  CFCF F022          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6539                           
  6540                           ;TMR1.c: 72:     __nop();
  6541  001516  F000               	nop	
  6542                           
  6543                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6544  001518  0E9E               	movlw	158
  6545  00151A  2622               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6546                           
  6547                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6548  00151C  0E57               	movlw	87
  6549  00151E  2621               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6550                           
  6551                           ;TMR1.c: 75:     TMR1H = t1H;
  6552  001520  C022  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6553                           
  6554                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6555  001524  0E5B               	movlw	91
  6556  001526  6ECE               	movwf	4046,c	;volatile
  6557  001528  0012               	return		;funcret
  6558  00152A                     __end_of_TMR1_Timer_reset:
  6559                           	opt callstack 0
  6560                           
  6561 ;; *************** function _ISR_high *****************
  6562 ;; Defined at:
  6563 ;;		line 53 in file "ISR.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		None
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; This function calls:
  6584 ;;		Nothing
  6585 ;; This function is called by:
  6586 ;;		Interrupt level 2
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	intcode
  6591  000008                     __pintcode:
  6592                           	opt callstack 0
  6593  000008                     _ISR_high:
  6594                           	opt callstack 23
  6595                           
  6596                           ;incstack = 0
  6597  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6598  00000A  ED23  F00B         	call	int_func,f	;refresh shadow registers
  6599                           
  6600                           	psect	intcode_body
  6601  001646                     __pintcode_body:
  6602                           	opt callstack 23
  6603  001646                     int_func:
  6604                           	opt callstack 23
  6605  001646  0006               	pop		; remove dummy address from shadow register refresh
  6606  001648  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6607  00164A  0011               	retfie		f
  6608  00164C                     __end_of_ISR_high:
  6609                           	opt callstack 0
  6610  0000                     
  6611                           	psect	rparam
  6612  0000                     
  6613                           	psect	temp
  6614  00004A                     btemp:
  6615                           	opt callstack 0
  6616  00004A                     	ds	1
  6617  0000                     int$flags	set	btemp
  6618  0000                     wtemp8	set	btemp+1
  6619  0000                     ttemp5	set	btemp+1
  6620  0000                     ttemp6	set	btemp+4
  6621  0000                     ttemp7	set	btemp+8
  6622                           tosu	equ	0xFFF
  6623                           tosh	equ	0xFFE
  6624                           tosl	equ	0xFFD
  6625                           stkptr	equ	0xFFC
  6626                           pclatu	equ	0xFFB
  6627                           pclath	equ	0xFFA
  6628                           pcl	equ	0xFF9
  6629                           tblptru	equ	0xFF8
  6630                           tblptrh	equ	0xFF7
  6631                           tblptrl	equ	0xFF6
  6632                           tablat	equ	0xFF5
  6633                           prodh	equ	0xFF4
  6634                           prodl	equ	0xFF3
  6635                           indf0	equ	0xFEF
  6636                           postinc0	equ	0xFEE
  6637                           postdec0	equ	0xFED
  6638                           preinc0	equ	0xFEC
  6639                           plusw0	equ	0xFEB
  6640                           fsr0h	equ	0xFEA
  6641                           fsr0l	equ	0xFE9
  6642                           wreg	equ	0xFE8
  6643                           indf1	equ	0xFE7
  6644                           postinc1	equ	0xFE6
  6645                           postdec1	equ	0xFE5
  6646                           preinc1	equ	0xFE4
  6647                           plusw1	equ	0xFE3
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           bsr	equ	0xFE0
  6651                           indf2	equ	0xFDF
  6652                           postinc2	equ	0xFDE
  6653                           postdec2	equ	0xFDD
  6654                           preinc2	equ	0xFDC
  6655                           plusw2	equ	0xFDB
  6656                           fsr2h	equ	0xFDA
  6657                           fsr2l	equ	0xFD9
  6658                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      73
    BANK0           160     17     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_Plot->___lwdiv
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   26927
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18309
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   15291
                                             23 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2    4475
                                             10 COMRAM     6     4      2
                      _IsInNeighbors
                          _LED_Clear
                          _LED_Error
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     491
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             20    16      4    1824
                                              5 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     455
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6660
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4176
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1756
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LED_Clear
           _LED_Control
         _LED_Error
           _LED_Control
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     11      7C       6       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      49       1       77.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5       3        0.0%
DATA                 0      0     2E5       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 23 14:34:08 2019

                __end_of_FRAME_DeviceReset 0CD0                      ?_FRAME_AveragingTimes 0026  
                             ___awdiv@sign 002B                                         bsr 000FE0  
                              __CFG_BORV$3 000000                          ?_FRAME_AxisStatus 0026  
                        _FRAME_MapPosition 1650                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                         __size_of_CAN_GenID 0094  
                                      l200 039C                                        l201 03A2  
                                      l202 03A8                                        l203 03AE  
                                      l204 03B4                                        l205 03BA  
                                      l206 03C0                                        l321 0A28  
                                      l190 082C                                        l293 0F74  
                                      l189 082E                                        l198 0396  
                                      l199 0406                                ?_LED_Update 0021  
                                      l467 0BEA                                        l565 080C  
                                      l566 0804                               __CFG_CPB$OFF 000000  
                       ??_FRAME_AxisStatus 0028                               __CFG_CPD$OFF 000000  
                       ?_FRAME_MapPosition 0026                         __size_of_CAN_Setup 005C  
                             ?_LED_Control 0026                                        wreg 000FE8  
                    __end_of_CAN_TakeFrame 0604                                ?_INI_OUTPUT 0021  
                   __size_of_INI_LED_Start 0034                   ??_MOCK_Klikniecie_Spadek 0028  
                    __end_of_CAN_SendFrame 0980                               __CFG_LVP$OFF 000000  
                TRM_DataTransmition@weWyU8 001D               __size_of_INI_GlobalInterrupt 000E  
                      ??_FRAME_MapPosition 0028                               __CFG_WDT$OFF 000000  
                                     l1196 1248                                       l3302 09A2  
                                     l4006 14AC                                       l3320 09D2  
                                     l3410 0ACA                                       l3314 09C2  
                          __end_of_INI_All 159E                                       l3404 0AB8  
                                     l3332 09F2                                       l3308 09B2  
                                     l3420 14B8                                       l3350 0A22  
                                     l3326 09E2                                       l3344 0A12  
                                     l3504 1012                                       l3362 0A48  
                                     l3338 0A02                                       l2730 1366  
                                     l2714 1320                                       l3530 1216  
                                     l3380 0A78                                       l3356 0A38  
                                     l3532 121E                                       l3374 0A68  
                                     l3542 123E                                       l3462 0FB0  
                                     l3622 0BA4                                       l3392 0A98  
                                     l3368 0A58                                       l3296 0992  
                                     l3800 04FC                                       l3712 011A  
                                     l3480 0FDA                                       l3616 0B8E  
                                     l3608 0B74                                       l2930 1140  
                                     l3386 0A88                                       l3802 0504  
                                     l3810 0554                                       l3714 019C  
                                     l3474 0FCC                                       l2916 10F6  
                                     l3740 0EC4                                       l3820 058A  
                                     l3804 050C                                       l3724 02C6  
                                     l3492 0FF6                                       l3468 0FBE  
                                     l3628 0BAC                                       l3398 0AA8  
                                     l3734 0EB4                                       l3830 05B0  
                                     l3822 0590                                       l3814 0558  
                                     l3582 08C6                                       l3486 0FE8  
                                     l3910 0662                                       l3832 05B8  
                                     l3824 0598                                       l3808 0514  
                                     l3816 0572                                       l3664 127E  
                                     l3920 06A8                                       l3912 0670  
                                     l3904 0638                                       l3746 0EDA  
                                     l3762 0F0C                                       l3826 05A0  
                                     l3818 0584                                       l3586 097A  
                                     l3498 1004                                       l3930 0706  
                                     l3922 06B6                                       l3914 067E  
                                     l3906 0646                                       l3748 0EE2  
                                     l3828 05A8                                       l3836 05C0  
                                     l3692 11E2                                       l3924 06C4  
                                     l3916 068C                                       l3908 0654  
                                     l3870 0D06                                       l3766 0F1A  
                                     l3758 0F02                                       l3838 0600  
                                     l3790 04D8                                       l3774 03C6  
                                     l3686 0CAE                                       l3926 06DE  
                                     l3918 069A                                       l3934 0720  
                                     l3792 04DE                                       l3928 06EC  
                                     l3936 078A                                       l3794 04E4  
                                     l3876 0D32                                       l3884 0D68  
                                     l3796 04EC                                       l3878 0D3C  
                                     l3798 04F4                                       l3982 12CC  
                                     _BIE0 000DFA                                       l3968 0F50  
                                     l3996 148C                          _MOC_Frame_Counter 15B6  
                                     u2000 0FAC                                       u2200 0BC0  
                                     u2300 0C54                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     u2400 0EE6                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u2090 1222  
                                     u2306 0C56                                       u2250 128E  
                                     u2155 089C                                       u2290 0C3C  
                                     u2445 0470                                       _IPR3 000FA5  
                                     u2296 0C3E                                       _IPEN 007E87  
                                     _PIE3 000FA3                                       u2490 0D70  
                                     _PEIE 007F96                                       _LOCK 0020  
                                     _PIR3 000FA4                                       _RCON 000FD0  
              ??_FRAME_AccelerometerStatus 002A                                       _Dane 001A  
                          __end_of_ISR_low 005C                           LED_Control@diode 0026  
                     FRAME_AnalogValue@set 0028                         ?_MOC_Frame_Counter 0026  
                                     _main 1486                           LED_Control@color 002A  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 004A                             _CAN_SetupClock 14DE  
                       __size_of_LED_Clear 001E                                       prodh 000FF4  
                                     prodl 000FF3                      __end_of_CAN_SetupMask 0EA0  
            __size_of_TMR1_Update_flag_Get 000A                                       start 005C  
            __size_of_TMR1_Update_flag_Set 000A                         __size_of_LED_Error 001E  
                            __CFG_IESO$OFF 000000                         __size_of_LED_Right 004C  
            __size_of_FRAME_HandleCanFrame 020E                              _LED_Light_Pos 0CD0  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                      ??_MOC_Frame_Counter 0028                 ??_MOC_Aktualna_Temperatura 0028  
        FRAME_HandleCanFrame@identyfikator 0040                         __size_of_INI_Timer 0018  
                __end_of_FRAME_MapPosition 1652                              _NeightAdress1 0016  
                            _NeightAdress2 0014                              _NeightAdress3 0012  
                            _NeightAdress4 0010                              _NeightAdress5 000E  
                            _NeightAdress6 000C                              _NeightAdress7 000A  
                            _NeightAdress8 0008                           __end_of_LED_Left 137A  
            __size_of_MOCK_PrzyspieszenieX 000A              __size_of_MOCK_PrzyspieszenieY 000A  
            __size_of_MOCK_PrzyspieszenieZ 000A                                      _B0CON 000E20  
                                    _B1CON 000E30                                      _B2CON 000E40  
                                    _B3CON 000E50                                      _B4CON 000E60  
                                    _B5CON 000E70                           __end_of_LOCK_Get 1650  
                                    ?_main 0021                           __end_of_LOCK_Set 1646  
                          __end_of___awdiv 0F24                                      _BSEL0 000DF8  
                          ___awdiv@divisor 0028                                      _T1CON 000FCD  
                                    _IRCF0 007E9C                                      _IRCF1 007E9D  
        FRAME_ExcitationMultiplier@message 0026                                      _IRCF2 007E9E  
                          __end_of___lwdiv 1252                                      i1l632 004C  
                      __size_of_FRAME_Plot 0058                            ___awdiv@counter 002A  
                                    _MSEL0 000DF0                                      _MSEL1 000DF1  
                                    _MSEL2 000DF2                                      _MSEL3 000DF3  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_PWRT$OFF 000000  
                                    _Flagi 00C6                     ?_CAN_MoveBuffIntoFrame 0026  
                            __CFG_WRT0$OFF 000000                 __size_of_FRAME_AnalogValue 0002  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                         __end_of_ISR_high 164C                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                __end_of_MOC_Frame_Counter 15C4                             __CFG_EBTRB$OFF 000000  
                  i1TMR1_Update_flag_Set@a 0021                               ?_MOC_NOTWORK 0026  
                                    tablat 000FF5                     __end_of_CAN_SetupClock 1506  
                                    ttemp5 004B                                      ttemp6 004E  
                                    ttemp7 0052                                      status 000FD8  
                                    wtemp8 004B                          __end_of_CAN_GenID 0E14  
                           __CFG_PBADEN$ON 000000                        __size_of_LED_Update 007A  
                           ?_LED_Light_Pos 002D                           _TMR1_Timer_reset 1506  
                        __end_of_CAN_Setup 114E                              _INI_LED_Start 1452  
                    _FRAME_ExcitationValue 13B0           FRAME_AccelerometerStatus@message 0028  
                          __initialization 114E                        __size_of_INI_OUTPUT 001E  
                         CAN_GenID@frameID 0028                               __end_of_main 14B4  
                   ??_FRAME_AveragingTimes 0028                 __size_of_FRAME_DeviceReset 00E4  
                 ?_FRAME_AdressOfNeighbors 0026                           CAN_GenID@message 0026  
                _FRAME_AccelerometerStatus 1016  FRAME_SensorExcitationStatus@iterator_beta 002F  
                                   ??_main 0041                     CAN_MoveBuffIntoFrame@i 002A  
                            __activetblptr 000002                           _TMR1_Update_flag 0018  
                        __end_of_LED_Clear 1566                      __end_of_IsInNeighbors 1016  
                          _wartosciSasiada 00DC                                  ??_INI_All 002B  
                        __end_of_LED_Error 1548                          __end_of_LED_Right 1338  
          __size_of_MOCK_Klikniecie_Spadek 000A                                  ??_ISR_low 0023  
                                   _CANCON 000F6F                           ___awdiv@dividend 0026  
              FRAME_ExcitationMultiplier@i 0029                                     _CIOCON 000F73  
                          __CFG_BBSIZ$1024 000000                          __end_of_INI_Timer 15B6  
                                   i1l3206 004A                            ?_CAN_SetupClock 0021  
                                   _RXB0D0 000F66                                     _TMR1IE 007CE8  
                                   _TMR1IF 007CF0                                     _TMR1IP 007CF8  
                                   _TMR1ON 007E68               ??_FRAME_ExcitationMultiplier 0028  
                           ?_INI_LED_Start 0021                             __CFG_XINST$OFF 000000  
                                ??___awdiv 002A                             __CFG_STVREN$ON 000000  
                         LED_Light_Pos@pos 002D                 __size_of_FRAME_MapPosition 0002  
                                ??___lwdiv 002A                                     clear_0 1176  
                                   clear_1 1188                                     clear_2 1194  
                         ___awdiv@quotient 002C                 ??_FRAME_PrzypisanieDokarty 0028  
                 ??i1_TMR1_Update_flag_Set 0023              FRAME_AdressOfNeighbors@uranos 0032  
                          __CFG_BOREN$BOHW 000000                               __pdataCOMRAM 0041  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8        __size_of_FRAME_ExcitationMultiplier 004E  
               __size_of_MOC_Frame_Counter 000E                       __size_of_LED_Control 0152  
                 FRAME_MapPosition@message 0026                      TMR1_Update_flag_Set@a 0026  
                               __accesstop 0060                    __end_of__initialization 119A  
                             ??_FRAME_Plot 002F                        ISR_low@ramkaStanuU8 001E  
                                ?_LED_Left 0026                            ??_LED_Light_Pos 0031  
                            ___rparam_used 000001                     ?_FRAME_ExcitationValue 0026  
                                ?_LOCK_Get 0021                                  ?_LOCK_Set 0021  
          __end_of_FRAME_AdressOfNeighbors 0388                     _MOCK_Klikniecie_Spadek 1604  
                           __pcstackCOMRAM 0021                                  LED_Left@a 0026  
                                LED_Left@b 0028                        _INI_GlobalInterrupt 15C4  
                                ?_ISR_high 0021                               ??_LED_Update 0038  
              __end_of_TRM_DataTransmition 12EC                      _FRAME_SoftwareVersion 108C  
                       __end_of_FRAME_Plot 1200                               ??_INI_OUTPUT 0026  
                                LOCK_Set@k 0026                    FRAME_AxisStatus@message 0026  
              IsInNeighbors@message_adress 0026                       ?_INI_GlobalInterrupt 0021  
                __size_of_FRAME_AxisStatus 0036                                 __pbssBANK0 0060  
                     __size_of_MOC_NOTWORK 0008                            ??_INI_LED_Start 002B  
                               ??_LED_Left 0028                                 ??_LOCK_Get 0026  
                               ??_LOCK_Set 0026                         __end_of_LED_Update 0F9E  
                       __end_of_INI_OUTPUT 1584                                 ??_ISR_high 0021  
                      TMR1_Timer_reset@t1H 0022                        TMR1_Timer_reset@t1L 0021  
                                  _ECANCON 000F77                                    _CANSTAT 000F6E  
                  ??_CAN_MoveBuffIntoFrame 002A               __end_of_TMR1_Update_flag_Get 1622  
             __end_of_TMR1_Update_flag_Set 1618            __size_ofi1_TMR1_Update_flag_Set 000A  
             __end_of_FRAME_HandleCanFrame 0812                                    _INI_All 1584  
                 __end_of_TMR1_Timer_reset 152A                                    _RXB0DLC 000F65  
                                  _RXB0CON 000F60                                    _RXB1CON 000F50  
                    ??_INI_GlobalInterrupt 0026                                    _TXB0CON 000F40  
                                  _ISR_low 0018                                    _RXFCON0 000DD4  
                                  _DaneCan 0001               __end_of_MOCK_PrzyspieszenieX 1604  
             __end_of_MOCK_PrzyspieszenieY 15FA               __end_of_MOCK_PrzyspieszenieZ 15F0  
       __end_of_FRAME_ExcitationMultiplier 12A0                 _FRAME_ExcitationMultiplier 1252  
              FRAME_HandleCanFrame@message 0038                                    __Hparam 0000  
         ??_MOC_Wynikowa_wartosc_roznicowa 0028            ?_MOC_Wynikowa_wartosc_roznicowa 0026  
                                  __Lparam 0000                     __size_of_CAN_TakeFrame 027C  
                                _CAN_GenID 0D80                                    ___awdiv 0EA0  
                                _CAN_Setup 10F2                     __size_of_CAN_SendFrame 016E  
                                  ___lwdiv 1200                          LED_Light_Pos@pos2 0034  
                                  __pcinit 114E                                    __ramtop 0D00  
                                  __ptext0 1486                                    __ptext1 12A0  
                                  __ptext2 0604                                    __ptext3 108C  
                                  __ptext4 0AD2                                    __ptext5 15D2  
                                  __ptext6 1636                                    __ptext7 15B6  
                                  __ptext8 15DC                                    __ptext9 163E  
                   ?_FRAME_SoftwareVersion 0026                     __size_of_CAN_SetupMask 008C  
        __size_of_MOC_Aktualna_Temperatura 000A             FRAME_AdressOfNeighbors@nrRamki 0028  
                ?_MOC_Aktualna_Temperatura 0026           __size_of_FRAME_AdressOfNeighbors 0328  
                         ??_CAN_SetupClock 0026             FRAME_AdressOfNeighbors@message 0026  
                                _LED_Clear 1548                                  _LED_Error 152A  
                           __pintcode_body 1646                                  _LED_Right 12EC  
                     end_of_initialization 119A                              __Lmediumconst 0000  
                                  int_func 1646                                  _INI_Timer 159E  
                   i1_TMR1_Update_flag_Set 1622           TRM_DataTransmition@czujnikWeWyU8 001C  
                               ?_CAN_GenID 0026                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc2 000FDE                                 ?_CAN_Setup 0021  
            __size_of_FRAME_AveragingTimes 0036                       CAN_SendFrame@message 002B  
                            LED_Update@Red 001F                              _CAN_TakeFrame 0388  
                               ?_LED_Clear 0021                              _CAN_SendFrame 0812  
              FRAME_AdressOfNeighbors@gaja 0034                                 ?_LED_Error 0021  
              FRAME_AdressOfNeighbors@kier 0036                                 ?_LED_Right 0026  
                         _FRAME_AxisStatus 13E6                    ??_FRAME_ExcitationValue 0028  
                               ?_INI_Timer 0021                    ?_MOCK_Klikniecie_Spadek 0026  
                          _ramkaCanRxKarty 0060                       _TMR1_Update_flag_Get 1618  
                          _ramkaCanTxKarty 00B5                       _TMR1_Update_flag_Set 160E  
                            _CAN_SetupMask 0E14                          __size_of_LED_Left 0042  
                     _FRAME_HandleCanFrame 0604                     __size_of_IsInNeighbors 0078  
                        __size_of_LOCK_Get 0004                          __size_of_LOCK_Set 0008  
                           CAN_TakeFrame@k 0033                              __pidataCOMRAM 162C  
                        __size_of_ISR_high 1644                       _MOCK_PrzyspieszenieX 15FA  
                     _MOCK_PrzyspieszenieY 15F0                       _MOCK_PrzyspieszenieZ 15E6  
                               LED_Right@a 0026                                 LED_Right@b 002A  
                    MOC_Frame_Counter@zeta 0041                              ??_LED_Control 0028  
                      start_initialization 114E                             ?_CAN_TakeFrame 002E  
                           ?_CAN_SendFrame 002B             __end_of_MOCK_Klikniecie_Spadek 160E  
                         __CFG_OSC$IRCIO67 000000          __size_of_FRAME_PrzypisanieDokarty 0036  
                ?_FRAME_PrzypisanieDokarty 0026                      ?_TMR1_Update_flag_Get 0026  
                    ?_TMR1_Update_flag_Set 0026                             ?_CAN_SetupMask 0021  
                    __end_of_LED_Light_Pos 0D80                      ?_FRAME_HandleCanFrame 0038  
                              ??_CAN_GenID 0029                                ??_CAN_Setup 0026  
                         __CFG_LPT1OSC$OFF 000000                      ?_MOCK_PrzyspieszenieX 0026  
                    ?_MOCK_PrzyspieszenieY 0026                      ?_MOCK_PrzyspieszenieZ 0026  
                 CAN_MoveBuffIntoFrame@Buf 0028       __end_of_FRAME_SensorExcitationStatus 0BEC  
    __size_of_FRAME_SensorExcitationStatus 011A                   CAN_MoveBuffIntoFrame@Ram 0026  
             _FRAME_SensorExcitationStatus 0AD2             __size_of_CAN_MoveBuffIntoFrame 002A  
                              __pbssBIGRAM 00DC              __end_of_CAN_MoveBuffIntoFrame 14DE  
                          _Fulfillment_Lvl 0047                                __pbssCOMRAM 0001  
                                 ?_INI_All 0021                    _FRAME_AdressOfNeighbors 0060  
                            __pcstackBANK0 00CB                              _IsInNeighbors 0F9E  
                        ?_TMR1_Timer_reset 0021                                _BRGCON1bits 000F70  
                              _BRGCON2bits 000F71                                _BRGCON3bits 000F72  
                                 ?_ISR_low 0021                                ??_LED_Clear 002B  
                            ??_MOC_NOTWORK 0028                         ??_TMR1_Timer_reset 0021  
                              ??_LED_Error 002B                                ??_LED_Right 0028  
             __size_of_TRM_DataTransmition 004C                        __end_of_LED_Control 0AD2  
              ?_FRAME_ExcitationMultiplier 0026                                ??_INI_Timer 0026  
                    __end_of_INI_LED_Start 1486                           ___lwdiv@dividend 0026  
                                __pintcode 0008                                   ?___awdiv 0026  
                  ??_FRAME_SoftwareVersion 0028           __end_of_MOC_Aktualna_Temperatura 15E6  
                                 ?___lwdiv 0026                          FRAME_Plot@message 002D  
                              __pintcodelo 0018                __end_of_INI_GlobalInterrupt 15D2  
                          ??_CAN_TakeFrame 0030              ?_FRAME_SensorExcitationStatus 002B  
   __end_of_MOC_Wynikowa_wartosc_roznicowa 15DC    __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
           _MOC_Wynikowa_wartosc_roznicowa 15D2                                _COMSTATbits 000F74  
                           ?_IsInNeighbors 0026                            ??_CAN_SendFrame 002D  
                         ___lwdiv@quotient 002B                    ?i1_TMR1_Update_flag_Set 0021  
              FRAME_AveragingTimes@message 0026                     ??_TMR1_Update_flag_Get 0028  
                   ??_TMR1_Update_flag_Set 0028                            ??_CAN_SetupMask 0026  
                                 _LED_Left 1338                     ??_FRAME_HandleCanFrame 003A  
                     CAN_TakeFrame@message 002E                        __end_of_MOC_NOTWORK 163E  
                                 _LOCK_Get 164C                       CAN_TakeFrame@tempCON 0032  
                                 _LOCK_Set 163E                                   _RXB0EIDH 000F63  
                                 _RXB0EIDL 000F64                                   _RCONbits 000FD0  
                         __CFG_WDTPS$32768 000000                                   _RXB0SIDH 000F61  
                                 _RXB0SIDL 000F62                                   _RXF0EIDH 000F02  
                                 _RXF0EIDL 000F03                                   _RXF1EIDH 000F06  
                                 _RXF1EIDL 000F07                                   _RXF2EIDH 000F0A  
                                 _RXF2EIDL 000F0B                                   _RXF3EIDH 000F0E  
                                 _RXF3EIDL 000F0F                                   _RXF0SIDH 000F00  
                                 _RXF0SIDL 000F01                                   _RXF1SIDH 000F04  
                                 _RXF1SIDL 000F05                                   _RXF2SIDH 000F08  
                                 _RXF2SIDL 000F09                                   _RXF3SIDH 000F0C  
                                 _RXF3SIDL 000F0D                                   _ISR_high 0008  
                                 _RXM0EIDH 000F1A                                   _RXM0EIDL 000F1B  
                                 _RXM1EIDH 000F1E                                   _RXM1EIDL 000F1F  
                   ??_MOCK_PrzyspieszenieX 0028                     ??_MOCK_PrzyspieszenieY 0028  
                   ??_MOCK_PrzyspieszenieZ 0028                                   _RXM0SIDH 000F18  
                                 _RXM0SIDL 000F19                                   _RXM1SIDH 000F1C  
                                 _RXM1SIDL 000F1D                   __end_of_FRAME_AxisStatus 141C  
                ??_FRAME_AdressOfNeighbors 002A                           _DetectorLedRadar 0005  
                              _LED_Control 0980                           __size_of_INI_All 001A  
             FRAME_ExcitationValue@message 0026             __end_ofi1_TMR1_Update_flag_Set 162C  
                                copy_data0 1162                           __size_of_ISR_low 0044  
       __size_of_FRAME_AccelerometerStatus 0076               __end_of_FRAME_AveragingTimes 1452  
               ?_FRAME_AccelerometerStatus 0028             __size_of_FRAME_ExcitationValue 0036  
            __end_of_FRAME_ExcitationValue 13E6                                   __Hrparam 0000  
                             _RXB0SIDLbits 000F62                                   __Lrparam 0000  
                         __size_of___awdiv 0084                           __size_of___lwdiv 0052  
                          ??_IsInNeighbors 0028                   _MOC_Aktualna_Temperatura 15DC  
          FRAME_PrzypisanieDokarty@message 0026                         LED_Light_Pos@flage 0036  
                       LED_Light_Pos@color 0031           __end_of_FRAME_PrzypisanieDokarty 13B0  
                             _RXF0SIDLbits 000F01                   FRAME_AnalogValue@message 0026  
                          ___lwdiv@divisor 0028                               _RXF1SIDLbits 000F05  
                          ___lwdiv@counter 002A                                   __ptext10 164C  
                                 __ptext11 152A                                   __ptext20 13E6  
                                 __ptext12 1548                                   __ptext21 141C  
                                 __ptext13 0F9E                                   __ptext30 0D80  
                                 __ptext22 1652                                   __ptext14 137A  
                                 __ptext31 0388                                   __ptext23 0060  
                                 __ptext15 11A8                                   __ptext40 1338  
                                 __ptext32 0EA0                                   __ptext24 1016  
                                 __ptext16 1650                                   __ptext41 1584  
                                 __ptext33 14B4                                   __ptext25 15E6  
                                 __ptext17 13B0                                   __ptext42 159E  
                                 __ptext34 160E                                   __ptext26 15F0  
                                 __ptext18 1252                                   __ptext51 1622  
                                 __ptext43 1566                                   __ptext35 1618  
                                 __ptext27 15FA                                   __ptext19 0BEC  
                                 __ptext52 1506                                   __ptext44 1452  
                                 __ptext36 0F24                                   __ptext28 1604  
           ??_FRAME_SensorExcitationStatus 002D                                   __ptext45 0980  
                                 __ptext37 0CD0                                   __ptext29 0812  
                                 __ptext46 15C4                                   __ptext38 1200  
                                 __ptext47 10F2                                   __ptext39 12EC  
                                 __ptext48 0E14                                   __ptext49 14DE  
            TRM_DataTransmition@canMessage 00CB                               _RXF2SIDLbits 000F09  
                              _MOC_NOTWORK 1636                  FRAME_HandleCanFrame@ident 003E  
                 FRAME_DeviceReset@message 0026          __end_of_FRAME_AccelerometerStatus 108C  
                               _FRAME_Plot 11A8                              __size_of_main 002E  
                  __size_of_CAN_SetupClock 0028                                   int$flags 004A  
                      _TRM_DataTransmition 12A0                                _RXB0DLCbits 000F65  
                               _LED_Update 0F24                                _RXB0CONbits 000F60  
                               _INTCONbits 000FF2                                 _INI_OUTPUT 1566  
                        _FRAME_AnalogValue 1652                       ?_TRM_DataTransmition 0021  
             FRAME_SoftwareVersion@message 0026                                   intlevel1 0000  
                                 intlevel2 0000                         ?_FRAME_AnalogValue 0026  
      FRAME_SensorExcitationStatus@message 002B                                _TXB0CONbits 000F40  
                      ??_FRAME_AnalogValue 002A                  __size_of_TMR1_Timer_reset 0024  
                 LED_Light_Pos@fulfillment 002F                       _FRAME_AveragingTimes 141C  
           __size_of_FRAME_SoftwareVersion 0066                          _FRAME_DeviceReset 0BEC  
            __end_of_FRAME_SoftwareVersion 10F2                         ?_FRAME_DeviceReset 0026  
                          LED_Update@Green 0049                  __end_of_FRAME_AnalogValue 1654  
                   __size_of_LED_Light_Pos 00B0                      _CAN_MoveBuffIntoFrame 14B4  
                               _WDTCONbits 000FD1                        ??_FRAME_DeviceReset 0028  
                    ??_TRM_DataTransmition 0041                   _FRAME_PrzypisanieDokarty 137A  
                   LED_Light_Pos@LED_array 0032                             LED_Update@pos1 0045  
                           LED_Update@pos2 0043                                ?_FRAME_Plot 002D  
