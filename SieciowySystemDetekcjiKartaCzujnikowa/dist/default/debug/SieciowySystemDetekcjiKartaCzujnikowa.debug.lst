

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 26 14:09:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4680 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  001A56                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for MOC_Frame_Counter@zeta
   122  001A56  0011               	dw	17
   123                           
   124                           ;initializer for LED_Update@pos2
   125  001A58  0001               	dw	1
   126                           
   127                           ;initializer for LED_Update@pos1
   128  001A5A  0001               	dw	1
   129                           
   130                           ;initializer for _Fulfillment_Lvl
   131  001A5C  0014               	dw	20
   132                           
   133                           ;initializer for LED_Update@Green
   134  001A5E  01                 	db	1
   135                           
   136                           ;initializer for _NeightAdress2
   137  001A5F  006F               	dw	111
   138                           
   139                           ;initializer for _NeightAdress1
   140  001A61  000A               	dw	10
   141  0000                     _RXF9EIDL	set	3443
   142  0000                     _RXF9EIDH	set	3442
   143  0000                     _RXF9SIDLbits	set	3441
   144  0000                     _RXF9SIDL	set	3441
   145  0000                     _RXF9SIDH	set	3440
   146  0000                     _RXF8EIDL	set	3435
   147  0000                     _RXF8EIDH	set	3434
   148  0000                     _RXF8SIDLbits	set	3433
   149  0000                     _RXF8SIDL	set	3433
   150  0000                     _RXF8SIDH	set	3432
   151  0000                     _RXF7EIDL	set	3431
   152  0000                     _RXF7EIDH	set	3430
   153  0000                     _RXF7SIDLbits	set	3429
   154  0000                     _RXF7SIDL	set	3429
   155  0000                     _RXF7SIDH	set	3428
   156  0000                     _RXF6EIDL	set	3427
   157  0000                     _RXF6EIDH	set	3426
   158  0000                     _RXF6SIDLbits	set	3425
   159  0000                     _RXF6SIDL	set	3425
   160  0000                     _RXF6SIDH	set	3424
   161  0000                     _RXFBCON4	set	3556
   162  0000                     _RXFBCON3	set	3555
   163  0000                     _RXFBCON2	set	3554
   164  0000                     _RXFBCON1	set	3553
   165  0000                     _RXFBCON0	set	3552
   166  0000                     _MSEL3	set	3571
   167  0000                     _MSEL2	set	3570
   168  0000                     _MSEL1	set	3569
   169  0000                     _MSEL0	set	3568
   170  0000                     _BIE0	set	3578
   171  0000                     _BSEL0	set	3576
   172  0000                     _B5CON	set	3696
   173  0000                     _B4CON	set	3680
   174  0000                     _B3CON	set	3664
   175  0000                     _B2CON	set	3648
   176  0000                     _B1CON	set	3632
   177  0000                     _B0CON	set	3616
   178  0000                     _TXB0CONbits	set	3904
   179  0000                     _RXF5EIDL	set	3863
   180  0000                     _RXF5EIDH	set	3862
   181  0000                     _RXF5SIDLbits	set	3861
   182  0000                     _RXF5SIDL	set	3861
   183  0000                     _RXF5SIDH	set	3860
   184  0000                     _RXF4EIDL	set	3859
   185  0000                     _RXF4EIDH	set	3858
   186  0000                     _RXF4SIDLbits	set	3857
   187  0000                     _RXF4SIDL	set	3857
   188  0000                     _RXF4SIDH	set	3856
   189  0000                     _RXF3EIDL	set	3855
   190  0000                     _RXF3EIDH	set	3854
   191  0000                     _RXF3SIDLbits	set	3853
   192  0000                     _RXF3SIDL	set	3853
   193  0000                     _RXF3SIDH	set	3852
   194  0000                     _RXF2EIDL	set	3851
   195  0000                     _RXF2EIDH	set	3850
   196  0000                     _RXF2SIDLbits	set	3849
   197  0000                     _RXF2SIDL	set	3849
   198  0000                     _RXF2SIDH	set	3848
   199  0000                     _RXF1EIDL	set	3847
   200  0000                     _RXF1EIDH	set	3846
   201  0000                     _RXF1SIDLbits	set	3845
   202  0000                     _RXF1SIDL	set	3845
   203  0000                     _RXF1SIDH	set	3844
   204  0000                     _RXF0EIDL	set	3843
   205  0000                     _RXF0EIDH	set	3842
   206  0000                     _RXF0SIDLbits	set	3841
   207  0000                     _RXF0SIDL	set	3841
   208  0000                     _RXF0SIDH	set	3840
   209  0000                     _RXM1EIDL	set	3871
   210  0000                     _RXM1EIDH	set	3870
   211  0000                     _RXM1SIDL	set	3869
   212  0000                     _RXM1SIDH	set	3868
   213  0000                     _RXM0EIDL	set	3867
   214  0000                     _RXM0EIDH	set	3866
   215  0000                     _RXM0SIDL	set	3865
   216  0000                     _RXM0SIDH	set	3864
   217  0000                     _RXB1CON	set	3920
   218  0000                     _TXB0CON	set	3904
   219  0000                     _TRISC	set	3988
   220  0000                     _LATC	set	3979
   221  0000                     _LATE	set	3981
   222  0000                     _LATA	set	3977
   223  0000                     _LATB	set	3978
   224  0000                     _LATD	set	3980
   225  0000                     _TRISD	set	3989
   226  0000                     _TRISE	set	3990
   227  0000                     _TRISB	set	3987
   228  0000                     _TRISA	set	3986
   229  0000                     _RXB0DLCbits	set	3941
   230  0000                     _RXB0DLC	set	3941
   231  0000                     _RXB0SIDH	set	3937
   232  0000                     _RXB0SIDLbits	set	3938
   233  0000                     _RXB0SIDL	set	3938
   234  0000                     _RXB0EIDH	set	3939
   235  0000                     _RXB0EIDL	set	3940
   236  0000                     _COMSTATbits	set	3956
   237  0000                     _RXB0CONbits	set	3936
   238  0000                     _BRGCON3bits	set	3954
   239  0000                     _BRGCON2bits	set	3953
   240  0000                     _BRGCON1bits	set	3952
   241  0000                     _CIOCON	set	3955
   242  0000                     _ECANCON	set	3959
   243  0000                     _RXB0CON	set	3936
   244  0000                     _CANSTAT	set	3950
   245  0000                     _CANCON	set	3951
   246  0000                     _RXB0D0	set	3942
   247  0000                     _EECON2	set	4007
   248  0000                     _EEDATA	set	4008
   249  0000                     _EECON1bits	set	4006
   250  0000                     _EEADR	set	4009
   251  0000                     _EEADRH	set	4010
   252  0000                     _WDTCONbits	set	4049
   253  0000                     _RCONbits	set	4048
   254  0000                     _T1CON	set	4045
   255  0000                     _TMR1H	set	4047
   256  0000                     _TMR1L	set	4046
   257  0000                     _PIR3	set	4004
   258  0000                     _IPR3	set	4005
   259  0000                     _PIE3	set	4003
   260  0000                     _RCON	set	4048
   261  0000                     _TMR1IF	set	31984
   262  0000                     _TMR1IP	set	31992
   263  0000                     _IPEN	set	32391
   264  0000                     _TMR1ON	set	32360
   265  0000                     _TMR1IE	set	31976
   266  0000                     _IRCF0	set	32412
   267  0000                     _IRCF1	set	32413
   268  0000                     _IRCF2	set	32414
   269  0000                     _TBLPTR	set	4086
   270  0000                     _INTCONbits	set	4082
   271  0000                     _TABLAT	set	4085
   272  0000                     _PEIE	set	32662
   273                           
   274                           ; #config settings
   275  0000                     
   276                           	psect	cinit
   277  0014BE                     __pcinit:
   278                           	opt callstack 0
   279  0014BE                     start_initialization:
   280                           	opt callstack 0
   281  0014BE                     __initialization:
   282                           	opt callstack 0
   283                           
   284                           ; Initialize objects allocated to COMRAM (13 bytes)
   285                           ; load TBLPTR registers with __pidataCOMRAM
   286  0014BE  0E56               	movlw	low __pidataCOMRAM
   287  0014C0  6EF6               	movwf	tblptrl,c
   288  0014C2  0E1A               	movlw	high __pidataCOMRAM
   289  0014C4  6EF7               	movwf	tblptrh,c
   290  0014C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   291  0014C8  6EF8               	movwf	tblptru,c
   292  0014CA  EE00  F04C         	lfsr	0,__pdataCOMRAM
   293  0014CE  EE10 F00D          	lfsr	1,13
   294  0014D2                     copy_data0:
   295  0014D2  0009               	tblrd		*+
   296  0014D4  CFF5 FFEE          	movff	tablat,postinc0
   297  0014D8  50E5               	movf	postdec1,w,c
   298  0014DA  50E1               	movf	fsr1l,w,c
   299  0014DC  E1FA               	bnz	copy_data0
   300                           
   301                           ; Clear objects allocated to BIGRAM (544 bytes)
   302  0014DE  EE00  F0D6         	lfsr	0,__pbssBIGRAM
   303  0014E2  EE12 F020          	lfsr	1,544
   304  0014E6                     clear_0:
   305  0014E6  6AEE               	clrf	postinc0,c
   306  0014E8  50E5               	movf	postdec1,w,c
   307  0014EA  50E1               	movf	fsr1l,w,c
   308  0014EC  E1FC               	bnz	clear_0
   309  0014EE  50E2               	movf	fsr1h,w,c
   310  0014F0  E1FA               	bnz	clear_0
   311                           
   312                           ; Clear objects allocated to BANK0 (114 bytes)
   313  0014F2  EE00  F060         	lfsr	0,__pbssBANK0
   314  0014F6  0E72               	movlw	114
   315  0014F8                     clear_1:
   316  0014F8  6AEE               	clrf	postinc0,c
   317  0014FA  06E8               	decf	wreg,f,c
   318  0014FC  E1FD               	bnz	clear_1
   319                           
   320                           ; Clear objects allocated to COMRAM (32 bytes)
   321  0014FE  EE00  F02C         	lfsr	0,__pbssCOMRAM
   322  001502  0E20               	movlw	32
   323  001504                     clear_2:
   324  001504  6AEE               	clrf	postinc0,c
   325  001506  06E8               	decf	wreg,f,c
   326  001508  E1FD               	bnz	clear_2
   327  00150A                     end_of_initialization:
   328                           	opt callstack 0
   329  00150A                     __end_of__initialization:
   330                           	opt callstack 0
   331  00150A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   332  00150C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   333  00150E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   334  001510  6EF8               	movwf	tblptru,c
   335  001512  0100               	movlb	0
   336  001514  EF2F  F00A         	goto	_main	;jump to C main() function
   337                           
   338                           	psect	bssCOMRAM
   339  00002C                     __pbssCOMRAM:
   340                           	opt callstack 0
   341  00002C                     _DaneCan:
   342                           	opt callstack 0
   343  00002C                     	ds	4
   344  000030                     _nextEEPosition:
   345                           	opt callstack 0
   346  000030                     	ds	2
   347  000032                     FRAME_SensorExcitationStatus@statwect:
   348                           	opt callstack 0
   349  000032                     	ds	2
   350  000034                     _TMR1_Update_flag:
   351                           	opt callstack 0
   352  000034                     	ds	2
   353  000036                     WritetoEEPROM@GIE_Status:
   354                           	opt callstack 0
   355  000036                     	ds	1
   356  000037                     	ds	1
   357  000038                     	ds	1
   358  000039                     ISR_low@ramkaStanuU8:
   359                           	opt callstack 0
   360  000039                     	ds	1
   361  00003A                     	ds	1
   362  00003B                     _LOCK:
   363                           	opt callstack 0
   364  00003B                     	ds	1
   365  00003C                     _neighborsAdress:
   366                           	opt callstack 0
   367  00003C                     	ds	2
   368  00003E                     _ustawieniaKarty:
   369                           	opt callstack 0
   370  00003E                     	ds	2
   371  000040                     _NeightAdress8:
   372                           	opt callstack 0
   373  000040                     	ds	2
   374  000042                     _NeightAdress7:
   375                           	opt callstack 0
   376  000042                     	ds	2
   377  000044                     _NeightAdress6:
   378                           	opt callstack 0
   379  000044                     	ds	2
   380  000046                     _NeightAdress5:
   381                           	opt callstack 0
   382  000046                     	ds	2
   383  000048                     _NeightAdress4:
   384                           	opt callstack 0
   385  000048                     	ds	2
   386  00004A                     _NeightAdress3:
   387                           	opt callstack 0
   388  00004A                     	ds	2
   389                           
   390                           	psect	dataCOMRAM
   391  00004C                     __pdataCOMRAM:
   392                           	opt callstack 0
   393  00004C                     MOC_Frame_Counter@zeta:
   394                           	opt callstack 0
   395  00004C                     	ds	2
   396  00004E                     LED_Update@pos2:
   397                           	opt callstack 0
   398  00004E                     	ds	2
   399  000050                     LED_Update@pos1:
   400                           	opt callstack 0
   401  000050                     	ds	2
   402  000052                     _Fulfillment_Lvl:
   403                           	opt callstack 0
   404  000052                     	ds	2
   405  000054                     LED_Update@Green:
   406                           	opt callstack 0
   407  000054                     	ds	1
   408  000055                     _NeightAdress2:
   409                           	opt callstack 0
   410  000055                     	ds	2
   411  000057                     _NeightAdress1:
   412                           	opt callstack 0
   413  000057                     	ds	2
   414                           
   415                           	psect	bssBANK0
   416  000060                     __pbssBANK0:
   417                           	opt callstack 0
   418  000060                     _ramkaCanRxKarty:
   419                           	opt callstack 0
   420  000060                     	ds	85
   421  0000B5                     _ramkaCanTxKarty:
   422                           	opt callstack 0
   423  0000B5                     	ds	17
   424  0000C6                     _Flagi:
   425                           	opt callstack 0
   426  0000C6                     	ds	5
   427  0000CB                     _DetectorLedRadar:
   428                           	opt callstack 0
   429  0000CB                     	ds	3
   430  0000CE                     _czujnikiNaMapie:
   431                           	opt callstack 0
   432  0000CE                     	ds	2
   433  0000D0                     _Dane:
   434                           	opt callstack 0
   435  0000D0                     	ds	2
   436                           
   437                           	psect	bssBIGRAM
   438  0000D6                     __pbssBIGRAM:
   439                           	opt callstack 0
   440  0000D6                     _wartosciSasiada:
   441                           	opt callstack 0
   442  0000D6                     	ds	544
   443                           
   444                           	psect	cstackBANK0
   445  0000D2                     __pcstackBANK0:
   446                           	opt callstack 0
   447  0000D2                     	ds	2
   448  0000D4                     main@adr:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452  0000D4                     	ds	2
   453                           
   454                           	psect	cstackCOMRAM
   455  000001                     __pcstackCOMRAM:
   456                           	opt callstack 0
   457  000001                     TMR1_Timer_reset@t1L:
   458                           	opt callstack 0
   459  000001                     i1TMR1_Update_flag_Set@a:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x0
   463  000001                     	ds	1
   464  000002                     TMR1_Timer_reset@t1H:
   465                           	opt callstack 0
   466                           
   467                           ; 1 bytes @ 0x1
   468  000002                     	ds	1
   469  000003                     ??_ISR_low:
   470  000003                     
   471                           ; 1 bytes @ 0x2
   472  000003                     	ds	3
   473  000006                     ??_CAN_Setup:
   474  000006                     ?_TMR1_Update_flag_Get:
   475                           	opt callstack 0
   476  000006                     ?_LED_Right:
   477                           	opt callstack 0
   478  000006                     ?_LED_Left:
   479                           	opt callstack 0
   480  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   481                           	opt callstack 0
   482  000006                     ?_MOC_Frame_Counter:
   483                           	opt callstack 0
   484  000006                     ?_MOC_Aktualna_Temperatura:
   485                           	opt callstack 0
   486  000006                     ?_MOC_NOTWORK:
   487                           	opt callstack 0
   488  000006                     ?_IsInNeighbors:
   489                           	opt callstack 0
   490  000006                     ?_MOCK_PrzyspieszenieX:
   491                           	opt callstack 0
   492  000006                     ?_MOCK_PrzyspieszenieY:
   493                           	opt callstack 0
   494  000006                     ?_MOCK_PrzyspieszenieZ:
   495                           	opt callstack 0
   496  000006                     ?_MOCK_Klikniecie_Spadek:
   497                           	opt callstack 0
   498  000006                     ?_ReadFlash:
   499                           	opt callstack 0
   500  000006                     ?___awdiv:
   501                           	opt callstack 0
   502  000006                     ?___lwdiv:
   503                           	opt callstack 0
   504  000006                     LOCK_Set@k:
   505                           	opt callstack 0
   506  000006                     ReadFlash@addr:
   507                           	opt callstack 0
   508  000006                     CAN_MoveBuffIntoFrame@Ram:
   509                           	opt callstack 0
   510  000006                     CAN_GenID@message:
   511                           	opt callstack 0
   512  000006                     LED_Right@a:
   513                           	opt callstack 0
   514  000006                     LED_Left@a:
   515                           	opt callstack 0
   516  000006                     LED_Control@diode:
   517                           	opt callstack 0
   518  000006                     TMR1_Update_flag_Set@a:
   519                           	opt callstack 0
   520  000006                     IsInNeighbors@message_adress:
   521                           	opt callstack 0
   522  000006                     FRAME_ExcitationValue@message:
   523                           	opt callstack 0
   524  000006                     FRAME_ExcitationMultiplier@message:
   525                           	opt callstack 0
   526  000006                     FRAME_AveragingTimes@message:
   527                           	opt callstack 0
   528  000006                     FRAME_AxisStatus@message:
   529                           	opt callstack 0
   530  000006                     FRAME_DataUpdateAndChangeOption@message:
   531                           	opt callstack 0
   532  000006                     FRAME_MapPosition@message:
   533                           	opt callstack 0
   534  000006                     FRAME_SoftwareVersion@message:
   535                           	opt callstack 0
   536  000006                     FRAME_AnalogValue@message:
   537                           	opt callstack 0
   538  000006                     FRAME_PrzypisanieDokarty@message:
   539                           	opt callstack 0
   540  000006                     FRAME_AdressOfNeighbors@message:
   541                           	opt callstack 0
   542  000006                     NVMalloc@size:
   543                           	opt callstack 0
   544  000006                     ReadfromEEPROM@Address:
   545                           	opt callstack 0
   546  000006                     WritetoEEPROM@Address:
   547                           	opt callstack 0
   548  000006                     ___awdiv@dividend:
   549                           	opt callstack 0
   550  000006                     ___lwdiv@dividend:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x5
   554  000006                     	ds	2
   555  000008                     ??_LED_Right:
   556  000008                     ??_FRAME_DataUpdateAndChangeOption:
   557  000008                     ??_FRAME_PrzypisanieDokarty:
   558  000008                     CAN_GenID@frameID:
   559                           	opt callstack 0
   560  000008                     WritetoEEPROM@Data:
   561                           	opt callstack 0
   562  000008                     CAN_MoveBuffIntoFrame@Buf:
   563                           	opt callstack 0
   564  000008                     LED_Left@b:
   565                           	opt callstack 0
   566  000008                     FRAME_SensorExcitationStatus@message:
   567                           	opt callstack 0
   568  000008                     FRAME_AccelerometerStatus@message:
   569                           	opt callstack 0
   570  000008                     FRAME_AnalogValue@set:
   571                           	opt callstack 0
   572  000008                     FRAME_AdressOfNeighbors@nrRamki:
   573                           	opt callstack 0
   574  000008                     NVMalloc@location:
   575                           	opt callstack 0
   576  000008                     NVMRead@dest:
   577                           	opt callstack 0
   578  000008                     ___awdiv@divisor:
   579                           	opt callstack 0
   580  000008                     ___lwdiv@divisor:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x7
   584  000008                     	ds	1
   585  000009                     ??_CAN_GenID:
   586  000009                     FRAME_ExcitationMultiplier@i:
   587                           	opt callstack 0
   588  000009                     NVMWrite@source:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x8
   592  000009                     	ds	1
   593  00000A                     ??_FRAME_SensorExcitationStatus:
   594  00000A                     ??_FRAME_AdressOfNeighbors:
   595  00000A                     ??_NVMalloc:
   596  00000A                     CAN_MoveBuffIntoFrame@i:
   597                           	opt callstack 0
   598  00000A                     LED_Control@color:
   599                           	opt callstack 0
   600  00000A                     ___awdiv@counter:
   601                           	opt callstack 0
   602  00000A                     ___lwdiv@counter:
   603                           	opt callstack 0
   604  00000A                     LED_Right@b:
   605                           	opt callstack 0
   606  00000A                     NVMRead@addr:
   607                           	opt callstack 0
   608                           
   609                           ; 2 bytes @ 0x9
   610  00000A                     	ds	1
   611  00000B                     ___awdiv@sign:
   612                           	opt callstack 0
   613  00000B                     CAN_SendFrame@message:
   614                           	opt callstack 0
   615  00000B                     NVMWrite@addr:
   616                           	opt callstack 0
   617  00000B                     ___lwdiv@quotient:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0xA
   621  00000B                     	ds	1
   622  00000C                     NVMInit@result:
   623                           	opt callstack 0
   624  00000C                     FRAME_SensorExcitationStatus@tru:
   625                           	opt callstack 0
   626  00000C                     NVMRead@count:
   627                           	opt callstack 0
   628  00000C                     ___awdiv@quotient:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0xB
   632  00000C                     	ds	1
   633  00000D                     ??_CAN_SendFrame:
   634  00000D                     LED_Light_Pos@pos:
   635                           	opt callstack 0
   636  00000D                     FRAME_Plot@message:
   637                           	opt callstack 0
   638  00000D                     NVMWrite@count:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0xC
   642  00000D                     	ds	1
   643  00000E                     CAN_TakeFrame@message:
   644                           	opt callstack 0
   645  00000E                     FRAME_AdressOfNeighbors@kier:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0xD
   649  00000E                     	ds	1
   650  00000F                     ??_FRAME_Plot:
   651  00000F                     LED_Light_Pos@fulfillment:
   652                           	opt callstack 0
   653  00000F                     FRAME_DeviceReset@message:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0xE
   657  00000F                     	ds	1
   658  000010                     ??_CAN_TakeFrame:
   659                           
   660                           ; 1 bytes @ 0xF
   661  000010                     	ds	1
   662  000011                     LED_Light_Pos@color:
   663                           	opt callstack 0
   664                           
   665                           ; 1 bytes @ 0x10
   666  000011                     	ds	1
   667  000012                     CAN_TakeFrame@tempCON:
   668                           	opt callstack 0
   669  000012                     LED_Light_Pos@LED_array:
   670                           	opt callstack 0
   671  000012                     FRAME_HandleCanFrame@message:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x11
   675  000012                     	ds	1
   676  000013                     CAN_TakeFrame@k:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x12
   680  000013                     	ds	1
   681  000014                     ??_FRAME_HandleCanFrame:
   682  000014                     LED_Light_Pos@pos2:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x13
   686  000014                     	ds	2
   687  000016                     LED_Light_Pos@flage:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x15
   691  000016                     	ds	2
   692  000018                     FRAME_HandleCanFrame@ident:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x17
   696  000018                     	ds	2
   697  00001A                     FRAME_HandleCanFrame@identyfikator:
   698                           	opt callstack 0
   699                           
   700                           ; 1 bytes @ 0x19
   701  00001A                     	ds	1
   702  00001B                     TRM_DataTransmition@canMessage:
   703                           	opt callstack 0
   704                           
   705                           ; 17 bytes @ 0x1A
   706  00001B                     	ds	17
   707  00002C                     
   708                           ; 1 bytes @ 0x2B
   709 ;;
   710 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   711 ;;
   712 ;; *************** function _main *****************
   713 ;; Defined at:
   714 ;;		line 104 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  adr             2    2[BANK0 ] int 
   719 ;;  zet             2    0        int 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   730 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   733 ;;Total ram usage:        4 bytes
   734 ;; Hardware stack levels required when called:    9
   735 ;; This function calls:
   736 ;;		_INI_All
   737 ;;		_LED_Update
   738 ;;		_ReadFlash
   739 ;;		_TMR1_Update_flag_Get
   740 ;;		_TMR1_Update_flag_Set
   741 ;;		_TRM_DataTransmition
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text0
   748  00145E                     __ptext0:
   749                           	opt callstack 0
   750  00145E                     _main:
   751                           	opt callstack 22
   752                           
   753                           ;main.c: 107:     int adr = ReadFlash(0x200000);
   754                           
   755                           ;incstack = 0
   756  00145E  0E00               	movlw	0
   757  001460  6E07               	movwf	ReadFlash@addr+1,c
   758  001462  0E00               	movlw	0
   759  001464  6E06               	movwf	ReadFlash@addr,c
   760  001466  EC0A  F00D         	call	_ReadFlash	;wreg free
   761  00146A  C006  F0D4         	movff	?_ReadFlash,main@adr
   762  00146E  C007  F0D5         	movff	?_ReadFlash+1,main@adr+1
   763                           
   764                           ;main.c: 108:      adr |= ReadFlash(0x200001)<<8;
   765  001472  0E00               	movlw	0
   766  001474  6E07               	movwf	ReadFlash@addr+1,c
   767  001476  0E01               	movlw	1
   768  001478  6E06               	movwf	ReadFlash@addr,c
   769  00147A  EC0A  F00D         	call	_ReadFlash	;wreg free
   770  00147E  C006  F007         	movff	?_ReadFlash,?_ReadFlash+1
   771  001482  6A06               	clrf	?_ReadFlash,c
   772  001484  5006               	movf	?_ReadFlash,w,c
   773  001486  0100               	movlb	0	; () banked
   774  001488  13D4               	iorwf	main@adr& (0+255),f,b
   775  00148A  5007               	movf	?_ReadFlash+1,w,c
   776  00148C  13D5               	iorwf	(main@adr+1)& (0+255),f,b
   777                           
   778                           ; BSR set to: 0
   779                           ;main.c: 112:     INI_All();
   780                           
   781                           ; BSR set to: 0
   782  00148E  ECCE  F00C         	call	_INI_All	;wreg free
   783                           
   784                           ;main.c: 114:     RCON = 0xFF;
   785  001492  68D0               	setf	4048,c	;volatile
   786  001494                     l4740:
   787                           
   788                           ;main.c: 117:     {;main.c: 118:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   789  001494  0100               	movlb	0	; () banked
   790  001496  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   791                           
   792                           ; BSR set to: 0
   793                           ;main.c: 119:         {;main.c: 120:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   794  001498  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 124:         if(TMR1_Update_flag_Get()==1)
   798  00149A  EC55  F00D         	call	_TMR1_Update_flag_Get	;wreg free
   799  00149E  0406               	decf	?_TMR1_Update_flag_Get,w,c
   800  0014A0  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   801  0014A2  A4D8               	btfss	status,2,c
   802  0014A4  D008               	goto	l4750
   803                           
   804                           ;main.c: 125:         {;main.c: 126:             LED_Update();
   805  0014A6  ECDF  F008         	call	_LED_Update	;wreg free
   806                           
   807                           ;main.c: 127:             TMR1_Update_flag_Set(0);
   808  0014AA  0E00               	movlw	0
   809  0014AC  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   810  0014AE  0E00               	movlw	0
   811  0014B0  6E06               	movwf	TMR1_Update_flag_Set@a,c
   812  0014B2  EC50  F00D         	call	_TMR1_Update_flag_Set	;wreg free
   813  0014B6                     l4750:
   814                           
   815                           ;main.c: 132:         TRM_DataTransmition();
   816  0014B6  EC5B  F00B         	call	_TRM_DataTransmition	;wreg free
   817  0014BA  0004               	clrwdt		;# 
   818                           
   819                           ;main.c: 134:     }
   820  0014BC  D7EB               	goto	l4740
   821  0014BE                     __end_of_main:
   822                           	opt callstack 0
   823                           
   824 ;; *************** function _TRM_DataTransmition *****************
   825 ;; Defined at:
   826 ;;		line 19 in file "TRM.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  canMessage     17   26[COMRAM] struct .
   831 ;;  i               1    0        unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   844 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   845 ;;Total ram usage:       17 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    8
   848 ;; This function calls:
   849 ;;		_CAN_TakeFrame
   850 ;;		_FRAME_HandleCanFrame
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text1
   857  0016B6                     __ptext1:
   858                           	opt callstack 0
   859  0016B6                     _TRM_DataTransmition:
   860                           	opt callstack 22
   861                           
   862                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   863                           
   864                           ;incstack = 0
   865  0016B6  A02C               	btfss	_DaneCan,0,c
   866  0016B8  D013               	goto	l4720
   867                           
   868                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   869  0016BA  0E02               	movlw	2
   870  0016BC  6E1C               	movwf	TRM_DataTransmition@canMessage+1,c
   871                           
   872                           ;TRM.c: 30:         canMessage.id.Val = 0;
   873  0016BE  0E00               	movlw	0
   874  0016C0  6E1F               	movwf	TRM_DataTransmition@canMessage+4,c
   875  0016C2  0E00               	movlw	0
   876  0016C4  6E20               	movwf	TRM_DataTransmition@canMessage+5,c
   877  0016C6  0E00               	movlw	0
   878  0016C8  6E21               	movwf	TRM_DataTransmition@canMessage+6,c
   879  0016CA  0E00               	movlw	0
   880  0016CC  6E22               	movwf	TRM_DataTransmition@canMessage+7,c
   881                           
   882                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   883  0016CE  0E04               	movlw	4
   884  0016D0  6E21               	movwf	TRM_DataTransmition@canMessage+6,c
   885                           
   886                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   887  0016D2  0E1B               	movlw	low TRM_DataTransmition@canMessage
   888  0016D4  6E12               	movwf	FRAME_HandleCanFrame@message,c
   889  0016D6  0E00               	movlw	high TRM_DataTransmition@canMessage
   890  0016D8  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   891  0016DA  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   892                           
   893                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   894  0016DE  902C               	bcf	_DaneCan,0,c
   895  0016E0                     l4720:
   896                           
   897                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   898  0016E0  0E1B               	movlw	low TRM_DataTransmition@canMessage
   899  0016E2  6E0E               	movwf	CAN_TakeFrame@message,c
   900  0016E4  0E00               	movlw	high TRM_DataTransmition@canMessage
   901  0016E6  6E0F               	movwf	CAN_TakeFrame@message+1,c
   902  0016E8  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   903  0016EC  0900               	iorlw	0
   904  0016EE  B4D8               	btfsc	status,2,c
   905  0016F0  0012               	return	
   906                           
   907                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   908  0016F2  0E1B               	movlw	low TRM_DataTransmition@canMessage
   909  0016F4  6E12               	movwf	FRAME_HandleCanFrame@message,c
   910  0016F6  0E00               	movlw	high TRM_DataTransmition@canMessage
   911  0016F8  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   912  0016FA  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   913                           
   914                           ;TRM.c: 67:         }
   915  0016FE  0012               	return		;funcret
   916  001700                     __end_of_TRM_DataTransmition:
   917                           	opt callstack 0
   918                           
   919 ;; *************** function _FRAME_HandleCanFrame *****************
   920 ;; Defined at:
   921 ;;		line 650 in file "FRAME.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  message         2   17[COMRAM] PTR struct .
   924 ;;		 -> TRM_DataTransmition@canMessage(17), 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  ident           2   23[COMRAM] unsigned short 
   927 ;;  alfa            2    0        int 
   928 ;;  identyfikato    1   25[COMRAM] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   939 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   941 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   942 ;;Total ram usage:        9 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    7
   945 ;; This function calls:
   946 ;;		_CAN_GenID
   947 ;;		_CAN_SendFrame
   948 ;;		_FRAME_AccelerometerStatus
   949 ;;		_FRAME_AdressOfNeighbors
   950 ;;		_FRAME_AnalogValue
   951 ;;		_FRAME_AveragingTimes
   952 ;;		_FRAME_AxisStatus
   953 ;;		_FRAME_DeviceReset
   954 ;;		_FRAME_ExcitationMultiplier
   955 ;;		_FRAME_ExcitationValue
   956 ;;		_FRAME_MapPosition
   957 ;;		_FRAME_Plot
   958 ;;		_FRAME_PrzypisanieDokarty
   959 ;;		_FRAME_SensorExcitationStatus
   960 ;;		_FRAME_SoftwareVersion
   961 ;;		_LED_Error
   962 ;;		___awdiv
   963 ;; This function is called by:
   964 ;;		_TRM_DataTransmition
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text2
   969  0005AA                     __ptext2:
   970                           	opt callstack 0
   971  0005AA                     _FRAME_HandleCanFrame:
   972                           	opt callstack 22
   973                           
   974                           ;FRAME.c: 650: void FRAME_HandleCanFrame(mID * message);FRAME.c: 651: {;FRAME.c: 652:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   975                           
   976                           ;incstack = 0
   977  0005AA  EE20 F006          	lfsr	2,6
   978  0005AE  5012               	movf	FRAME_HandleCanFrame@message,w,c
   979  0005B0  26D9               	addwf	fsr2l,f,c
   980  0005B2  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
   981  0005B4  22DA               	addwfc	fsr2h,f,c
   982  0005B6  50DF               	movf	indf2,w,c
   983  0005B8  6E14               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   984  0005BA  5014               	movf	??_FRAME_HandleCanFrame,w,c
   985  0005BC  6E06               	movwf	___awdiv@dividend,c
   986  0005BE  6A07               	clrf	___awdiv@dividend+1,c
   987  0005C0  0E00               	movlw	0
   988  0005C2  6E09               	movwf	___awdiv@divisor+1,c
   989  0005C4  0E04               	movlw	4
   990  0005C6  6E08               	movwf	___awdiv@divisor,c
   991  0005C8  EC9D  F008         	call	___awdiv	;wreg free
   992  0005CC  5006               	movf	?___awdiv,w,c
   993  0005CE  6E1A               	movwf	FRAME_HandleCanFrame@identyfikator,c
   994                           
   995                           ;FRAME.c: 655:     if(identyfikator != 0x01)
   996  0005D0  041A               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   997  0005D2  B4D8               	btfsc	status,2,c
   998  0005D4  D074               	goto	l4644
   999                           
  1000                           ;FRAME.c: 656:     {;FRAME.c: 657:         WORD ident = identyfikator;
  1001  0005D6  C01A  F018         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1002  0005DA  6A19               	clrf	FRAME_HandleCanFrame@ident+1,c
  1003  0005DC  D070               	goto	l4644
  1004  0005DE                     l4614:
  1005                           
  1006                           ;FRAME.c: 664:             FRAME_SensorExcitationStatus(message);
  1007  0005DE  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1008  0005E2  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1009  0005E6  ECDE  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
  1010                           
  1011                           ;FRAME.c: 665:             break;
  1012  0005EA  D09E               	goto	l4646
  1013  0005EC                     l4616:
  1014                           
  1015                           ;FRAME.c: 667:             FRAME_AccelerometerStatus(message);
  1016  0005EC  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1017  0005F0  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1018  0005F4  EC58  F009         	call	_FRAME_AccelerometerStatus	;wreg free
  1019                           
  1020                           ;FRAME.c: 668:             break;
  1021  0005F8  D097               	goto	l4646
  1022  0005FA                     l4618:
  1023                           
  1024                           ;FRAME.c: 670:             FRAME_ExcitationValue(message);
  1025  0005FA  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1026  0005FE  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1027  000602  ECBE  F00B         	call	_FRAME_ExcitationValue	;wreg free
  1028                           
  1029                           ;FRAME.c: 671:             break;
  1030  000606  D090               	goto	l4646
  1031  000608                     l4620:
  1032                           
  1033                           ;FRAME.c: 673:             FRAME_ExcitationMultiplier(message);
  1034  000608  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1035  00060C  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1036  000610  EC0E  F00B         	call	_FRAME_ExcitationMultiplier	;wreg free
  1037                           
  1038                           ;FRAME.c: 674:             break;
  1039  000614  D089               	goto	l4646
  1040  000616                     l4622:
  1041                           
  1042                           ;FRAME.c: 676:             FRAME_AveragingTimes(message);
  1043  000616  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1044  00061A  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1045  00061E  EC0F  F00C         	call	_FRAME_AveragingTimes	;wreg free
  1046                           
  1047                           ;FRAME.c: 677:             break;
  1048  000622  D082               	goto	l4646
  1049  000624                     l4624:
  1050                           
  1051                           ;FRAME.c: 679:             FRAME_AxisStatus(message);
  1052  000624  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1053  000628  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1054  00062C  ECF4  F00B         	call	_FRAME_AxisStatus	;wreg free
  1055                           
  1056                           ;FRAME.c: 680:             break;
  1057  000630  D07B               	goto	l4646
  1058  000632                     l4626:
  1059                           
  1060                           ;FRAME.c: 682:             FRAME_DeviceReset(message);
  1061  000632  C012  F00F         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1062  000636  C013  F010         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1063  00063A  EC3A  F005         	call	_FRAME_DeviceReset	;wreg free
  1064                           
  1065                           ;FRAME.c: 683:             break;
  1066  00063E  D074               	goto	l4646
  1067  000640                     l4628:
  1068                           
  1069                           ;FRAME.c: 685:             FRAME_Plot(message);
  1070  000640  C012  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1071  000644  C013  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1072  000648  ECB9  F00A         	call	_FRAME_Plot	;wreg free
  1073                           
  1074                           ;FRAME.c: 686:             break;
  1075  00064C  D06D               	goto	l4646
  1076  00064E                     l4630:
  1077                           
  1078                           ;FRAME.c: 688:             FRAME_MapPosition(message);
  1079  00064E  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1080  000652  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1081  000656  EC6C  F00D         	call	_FRAME_MapPosition	;wreg free
  1082                           
  1083                           ;FRAME.c: 689:             break;
  1084  00065A  D066               	goto	l4646
  1085  00065C                     l4632:
  1086                           
  1087                           ;FRAME.c: 691:             FRAME_SoftwareVersion(message);
  1088  00065C  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1089  000660  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1090  000664  ECCA  F009         	call	_FRAME_SoftwareVersion	;wreg free
  1091                           
  1092                           ;FRAME.c: 692:             break;
  1093  000668  D05F               	goto	l4646
  1094  00066A                     l4634:
  1095                           
  1096                           ;FRAME.c: 695:             FRAME_AnalogValue(message, identyfikator - 0x0C);
  1097  00066A  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1098  00066E  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1099  000672  0EF4               	movlw	244
  1100  000674  241A               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1101  000676  6E08               	movwf	FRAME_AnalogValue@set,c
  1102  000678  6A09               	clrf	FRAME_AnalogValue@set+1,c
  1103  00067A  0EFF               	movlw	255
  1104  00067C  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
  1105  00067E  EC6D  F00D         	call	_FRAME_AnalogValue	;wreg free
  1106                           
  1107                           ;FRAME.c: 696:             break;
  1108  000682  D052               	goto	l4646
  1109  000684                     l4636:
  1110                           
  1111                           ;FRAME.c: 698:             FRAME_PrzypisanieDokarty(message);
  1112  000684  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1113  000688  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1114  00068C  EC03  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1115                           
  1116                           ;FRAME.c: 699:             break;
  1117  000690  D04B               	goto	l4646
  1118  000692                     l4638:
  1119                           
  1120                           ;FRAME.c: 701:             FRAME_AdressOfNeighbors(message,0x10);
  1121  000692  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1122  000696  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1123  00069A  0E00               	movlw	0
  1124  00069C  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1125  00069E  0E10               	movlw	16
  1126  0006A0  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1127  0006A2  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1128                           
  1129                           ;FRAME.c: 702:             break;
  1130  0006A6  D040               	goto	l4646
  1131  0006A8                     l4640:
  1132                           
  1133                           ;FRAME.c: 704:             FRAME_AdressOfNeighbors(message,0x11);
  1134  0006A8  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1135  0006AC  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1136  0006B0  0E00               	movlw	0
  1137  0006B2  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1138  0006B4  0E11               	movlw	17
  1139  0006B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1140  0006B8  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1141                           
  1142                           ;FRAME.c: 705:             break;
  1143  0006BC  D035               	goto	l4646
  1144  0006BE                     l4644:
  1145  0006BE  501A               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1146  0006C0  6E14               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1147  0006C2  6A15               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1148                           
  1149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 1, Range of values is 0 to 0
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte            4     3 (average)
  1155                           ;	Chosen strategy is simple_byte
  1156  0006C4  5015               	movf	??_FRAME_HandleCanFrame+1,w,c
  1157  0006C6  0A00               	xorlw	0	; case 0
  1158  0006C8  A4D8               	btfss	status,2,c
  1159  0006CA  D02E               	goto	l4646
  1160                           
  1161                           ; Switch size 1, requested type "simple"
  1162                           ; Number of cases is 15, Range of values is 1 to 17
  1163                           ; switch strategies available:
  1164                           ; Name         Instructions Cycles
  1165                           ; simple_byte           46    24 (average)
  1166                           ;	Chosen strategy is simple_byte
  1167  0006CC  5014               	movf	??_FRAME_HandleCanFrame,w,c
  1168  0006CE  0A01               	xorlw	1	; case 1
  1169  0006D0  B4D8               	btfsc	status,2,c
  1170  0006D2  D785               	goto	l4614
  1171  0006D4  0A03               	xorlw	3	; case 2
  1172  0006D6  B4D8               	btfsc	status,2,c
  1173  0006D8  D789               	goto	l4616
  1174  0006DA  0A01               	xorlw	1	; case 3
  1175  0006DC  B4D8               	btfsc	status,2,c
  1176  0006DE  D78D               	goto	l4618
  1177  0006E0  0A07               	xorlw	7	; case 4
  1178  0006E2  B4D8               	btfsc	status,2,c
  1179  0006E4  D791               	goto	l4620
  1180  0006E6  0A01               	xorlw	1	; case 5
  1181  0006E8  B4D8               	btfsc	status,2,c
  1182  0006EA  D795               	goto	l4622
  1183  0006EC  0A03               	xorlw	3	; case 6
  1184  0006EE  B4D8               	btfsc	status,2,c
  1185  0006F0  D799               	goto	l4624
  1186  0006F2  0A01               	xorlw	1	; case 7
  1187  0006F4  B4D8               	btfsc	status,2,c
  1188  0006F6  D79D               	goto	l4626
  1189  0006F8  0A0E               	xorlw	14	; case 9
  1190  0006FA  B4D8               	btfsc	status,2,c
  1191  0006FC  D7A1               	goto	l4628
  1192  0006FE  0A03               	xorlw	3	; case 10
  1193  000700  B4D8               	btfsc	status,2,c
  1194  000702  D7A5               	goto	l4630
  1195  000704  0A01               	xorlw	1	; case 11
  1196  000706  B4D8               	btfsc	status,2,c
  1197  000708  D7A9               	goto	l4632
  1198  00070A  0A07               	xorlw	7	; case 12
  1199  00070C  B4D8               	btfsc	status,2,c
  1200  00070E  D7AD               	goto	l4634
  1201  000710  0A01               	xorlw	1	; case 13
  1202  000712  B4D8               	btfsc	status,2,c
  1203  000714  D7AA               	goto	l4634
  1204  000716  0A02               	xorlw	2	; case 15
  1205  000718  B4D8               	btfsc	status,2,c
  1206  00071A  D7B4               	goto	l4636
  1207  00071C  0A1F               	xorlw	31	; case 16
  1208  00071E  B4D8               	btfsc	status,2,c
  1209  000720  D7B8               	goto	l4638
  1210  000722  0A01               	xorlw	1	; case 17
  1211  000724  B4D8               	btfsc	status,2,c
  1212  000726  D7C0               	goto	l4640
  1213  000728                     l4646:
  1214                           
  1215                           ;FRAME.c: 714:     if(message->message_type == 0x02)
  1216  000728  EE20 F001          	lfsr	2,1
  1217  00072C  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1218  00072E  26D9               	addwf	fsr2l,f,c
  1219  000730  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1220  000732  22DA               	addwfc	fsr2h,f,c
  1221  000734  0E02               	movlw	2
  1222  000736  18DE               	xorwf	postinc2,w,c
  1223  000738  A4D8               	btfss	status,2,c
  1224  00073A  0012               	return	
  1225                           
  1226                           ;FRAME.c: 715:     {;FRAME.c: 717:         message->frame_type = 0x03;
  1227  00073C  EE20 F002          	lfsr	2,2
  1228  000740  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1229  000742  26D9               	addwf	fsr2l,f,c
  1230  000744  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1231  000746  22DA               	addwfc	fsr2h,f,c
  1232  000748  0E03               	movlw	3
  1233  00074A  6EDF               	movwf	indf2,c
  1234                           
  1235                           ;FRAME.c: 718:         message->message_type = 0x01;
  1236  00074C  EE20 F001          	lfsr	2,1
  1237  000750  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1238  000752  26D9               	addwf	fsr2l,f,c
  1239  000754  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1240  000756  22DA               	addwfc	fsr2h,f,c
  1241  000758  0E01               	movlw	1
  1242  00075A  6EDF               	movwf	indf2,c
  1243                           
  1244                           ;FRAME.c: 719:         message->id.Val = 0;
  1245  00075C  EE20 F004          	lfsr	2,4
  1246  000760  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1247  000762  26D9               	addwf	fsr2l,f,c
  1248  000764  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1249  000766  22DA               	addwfc	fsr2h,f,c
  1250  000768  6ADE               	clrf	postinc2,c
  1251  00076A  6ADE               	clrf	postinc2,c
  1252  00076C  6ADE               	clrf	postinc2,c
  1253  00076E  6ADD               	clrf	postdec2,c
  1254                           
  1255                           ;FRAME.c: 721:         message->id.v[2] = identyfikator*4;
  1256  000770  501A               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1257  000772  0D04               	mullw	4
  1258  000774  EE20 F006          	lfsr	2,6
  1259  000778  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1260  00077A  26D9               	addwf	fsr2l,f,c
  1261  00077C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1262  00077E  22DA               	addwfc	fsr2h,f,c
  1263  000780  CFF3 FFDF          	movff	prodl,indf2
  1264                           
  1265                           ;FRAME.c: 722:         CAN_GenID(message,identyfikator);
  1266  000784  C012  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1267  000788  C013  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1268  00078C  C01A  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1269  000790  EC1C  F009         	call	_CAN_GenID	;wreg free
  1270                           
  1271                           ;FRAME.c: 723:         CAN_SendFrame(message);
  1272  000794  C012  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1273  000798  C013  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1274  00079C  ECD8  F003         	call	_CAN_SendFrame	;wreg free
  1275                           
  1276                           ;FRAME.c: 734:        while(RXB0CONbits.FILHIT3)
  1277  0007A0  D004               	goto	l695
  1278  0007A2                     l696:
  1279                           
  1280                           ;FRAME.c: 735:        {;FRAME.c: 736:            if(TXB0CONbits.TXERR == 1){
  1281  0007A2  010F               	movlb	15	; () banked
  1282  0007A4  B940               	btfsc	64,4,b	;volatile
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;FRAME.c: 737:                LED_Error();
  1286  0007A6  ECEF  F00C         	call	_LED_Error	;wreg free
  1287  0007AA                     l695:
  1288                           
  1289                           ;FRAME.c: 734:        while(RXB0CONbits.FILHIT3)
  1290  0007AA  A660               	btfss	3936,3,c	;volatile
  1291  0007AC  0012               	return	
  1292  0007AE  D7F9               	goto	l696
  1293  0007B0                     __end_of_FRAME_HandleCanFrame:
  1294                           	opt callstack 0
  1295                           
  1296 ;; *************** function _LED_Error *****************
  1297 ;; Defined at:
  1298 ;;		line 37 in file "LED.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2  363[None  ] unsigned int 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    4
  1319 ;; This function calls:
  1320 ;;		_LED_Control
  1321 ;; This function is called by:
  1322 ;;		_FRAME_HandleCanFrame
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text3
  1327  0019DE                     __ptext3:
  1328                           	opt callstack 0
  1329  0019DE                     _LED_Error:
  1330                           	opt callstack 24
  1331                           
  1332                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1333                           
  1334                           ;incstack = 0
  1335  0019DE  0E02               	movlw	2
  1336  0019E0  6E07               	movwf	LED_Control@diode+1,c
  1337  0019E2  0EAA               	movlw	170
  1338  0019E4  6E06               	movwf	LED_Control@diode,c
  1339  0019E6  0E00               	movlw	0
  1340  0019E8  EC91  F004         	call	_LED_Control
  1341                           
  1342                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1343  0019EC  0E00               	movlw	0
  1344  0019EE  6E07               	movwf	LED_Control@diode+1,c
  1345  0019F0  0E00               	movlw	0
  1346  0019F2  6E06               	movwf	LED_Control@diode,c
  1347  0019F4  0E01               	movlw	1
  1348  0019F6  EC91  F004         	call	_LED_Control
  1349  0019FA  0012               	return		;funcret
  1350  0019FC                     __end_of_LED_Error:
  1351                           	opt callstack 0
  1352                           
  1353 ;; *************** function _FRAME_SoftwareVersion *****************
  1354 ;; Defined at:
  1355 ;;		line 484 in file "FRAME.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  message         2    5[COMRAM] PTR struct .
  1358 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1373 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1374 ;;Total ram usage:        3 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    3
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_FRAME_HandleCanFrame
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text4
  1385  001394                     __ptext4:
  1386                           	opt callstack 0
  1387  001394                     _FRAME_SoftwareVersion:
  1388                           	opt callstack 25
  1389                           
  1390                           ;FRAME.c: 484: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 485: {;FRAME.c: 
      +                          487:     if(message->message_type == 0x02)
  1391                           
  1392                           ;incstack = 0
  1393  001394  EE20 F001          	lfsr	2,1
  1394  001398  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1395  00139A  26D9               	addwf	fsr2l,f,c
  1396  00139C  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1397  00139E  22DA               	addwfc	fsr2h,f,c
  1398  0013A0  0E02               	movlw	2
  1399  0013A2  18DE               	xorwf	postinc2,w,c
  1400  0013A4  A4D8               	btfss	status,2,c
  1401  0013A6  0012               	return	
  1402                           
  1403                           ;FRAME.c: 488:     {;FRAME.c: 489:         message->data_length = 4;
  1404  0013A8  EE20 F010          	lfsr	2,16
  1405  0013AC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1406  0013AE  26D9               	addwf	fsr2l,f,c
  1407  0013B0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1408  0013B2  22DA               	addwfc	fsr2h,f,c
  1409  0013B4  0E04               	movlw	4
  1410  0013B6  6EDF               	movwf	indf2,c
  1411                           
  1412                           ;FRAME.c: 490:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1413  0013B8  EE20 F008          	lfsr	2,8
  1414  0013BC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1415  0013BE  26D9               	addwf	fsr2l,f,c
  1416  0013C0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1417  0013C2  22DA               	addwfc	fsr2h,f,c
  1418  0013C4  5005               	movf	5,w,c
  1419  0013C6  6EDF               	movwf	indf2,c
  1420                           
  1421                           ;FRAME.c: 491:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1422  0013C8  EE20 F009          	lfsr	2,9
  1423  0013CC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1424  0013CE  26D9               	addwf	fsr2l,f,c
  1425  0013D0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1426  0013D2  22DA               	addwfc	fsr2h,f,c
  1427  0013D4  C004 FFDF          	movff	4,indf2
  1428                           
  1429                           ;FRAME.c: 492:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1430  0013D8  EE20 F00A          	lfsr	2,10
  1431  0013DC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1432  0013DE  26D9               	addwf	fsr2l,f,c
  1433  0013E0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1434  0013E2  22DA               	addwfc	fsr2h,f,c
  1435  0013E4  500B               	movf	11,w,c
  1436  0013E6  6EDF               	movwf	indf2,c
  1437                           
  1438                           ;FRAME.c: 493:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1439  0013E8  EE20 F00B          	lfsr	2,11
  1440  0013EC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1441  0013EE  26D9               	addwf	fsr2l,f,c
  1442  0013F0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1443  0013F2  22DA               	addwfc	fsr2h,f,c
  1444  0013F4  C00A FFDF          	movff	10,indf2
  1445                           
  1446                           ;FRAME.c: 494:     }
  1447  0013F8  0012               	return		;funcret
  1448  0013FA                     __end_of_FRAME_SoftwareVersion:
  1449                           	opt callstack 0
  1450                           
  1451 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1452 ;; Defined at:
  1453 ;;		line 47 in file "FRAME.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  message         2    7[COMRAM] PTR struct .
  1456 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  tru             2   11[COMRAM] unsigned int 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;Total ram usage:        6 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    4
  1475 ;; This function calls:
  1476 ;;		_IsInNeighbors
  1477 ;;		_LOCK_Get
  1478 ;;		_LOCK_Set
  1479 ;;		_MOC_Aktualna_Temperatura
  1480 ;;		_MOC_Frame_Counter
  1481 ;;		_MOC_NOTWORK
  1482 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1483 ;; This function is called by:
  1484 ;;		_FRAME_HandleCanFrame
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text5
  1489  000BBC                     __ptext5:
  1490                           	opt callstack 0
  1491  000BBC                     _FRAME_SensorExcitationStatus:
  1492                           	opt callstack 24
  1493                           
  1494                           ;FRAME.c: 47: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 48: {;FRAM
      +                          E.c: 50:     static UINT statwect = 0b00000000;;FRAME.c: 51:     if(message->message_typ
      +                          e == 0x02)
  1495                           
  1496                           ;incstack = 0
  1497  000BBC  EE20 F001          	lfsr	2,1
  1498  000BC0  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1499  000BC2  26D9               	addwf	fsr2l,f,c
  1500  000BC4  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1501  000BC6  22DA               	addwfc	fsr2h,f,c
  1502  000BC8  0E02               	movlw	2
  1503  000BCA  18DE               	xorwf	postinc2,w,c
  1504  000BCC  A4D8               	btfss	status,2,c
  1505  000BCE  D047               	goto	l4264
  1506                           
  1507                           ;FRAME.c: 52:     {;FRAME.c: 53:         message->data_length = 6;
  1508  000BD0  EE20 F010          	lfsr	2,16
  1509  000BD4  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1510  000BD6  26D9               	addwf	fsr2l,f,c
  1511  000BD8  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1512  000BDA  22DA               	addwfc	fsr2h,f,c
  1513  000BDC  0E06               	movlw	6
  1514  000BDE  6EDF               	movwf	indf2,c
  1515                           
  1516                           ;FRAME.c: 59:         message->data[0] = LOCK_Get();
  1517  000BE0  EE20 F008          	lfsr	2,8
  1518  000BE4  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1519  000BE6  26D9               	addwf	fsr2l,f,c
  1520  000BE8  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1521  000BEA  22DA               	addwfc	fsr2h,f,c
  1522  000BEC  EC6A  F00D         	call	_LOCK_Get	;wreg free
  1523  000BF0  6EDF               	movwf	indf2,c
  1524                           
  1525                           ;FRAME.c: 60:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1526  000BF2  EE20 F009          	lfsr	2,9
  1527  000BF6  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1528  000BF8  26D9               	addwf	fsr2l,f,c
  1529  000BFA  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1530  000BFC  22DA               	addwfc	fsr2h,f,c
  1531  000BFE  EC32  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1532  000C02  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1533  000C06  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1534  000C08  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1535  000C0A  6EDF               	movwf	indf2,c
  1536                           
  1537                           ;FRAME.c: 61:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1538  000C0C  EE20 F00A          	lfsr	2,10
  1539  000C10  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1540  000C12  26D9               	addwf	fsr2l,f,c
  1541  000C14  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1542  000C16  22DA               	addwfc	fsr2h,f,c
  1543  000C18  EC32  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1544  000C1C  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1545  000C1E  6EDF               	movwf	indf2,c
  1546                           
  1547                           ;FRAME.c: 62:         message->data[3] = MOC_Frame_Counter();
  1548  000C20  EE20 F00B          	lfsr	2,11
  1549  000C24  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1550  000C26  26D9               	addwf	fsr2l,f,c
  1551  000C28  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1552  000C2A  22DA               	addwfc	fsr2h,f,c
  1553  000C2C  EC1D  F00D         	call	_MOC_Frame_Counter	;wreg free
  1554  000C30  5006               	movf	?_MOC_Frame_Counter,w,c
  1555  000C32  6EDF               	movwf	indf2,c
  1556                           
  1557                           ;FRAME.c: 63:         message->data[4] = MOC_Aktualna_Temperatura();
  1558  000C34  EE20 F00C          	lfsr	2,12
  1559  000C38  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1560  000C3A  26D9               	addwf	fsr2l,f,c
  1561  000C3C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1562  000C3E  22DA               	addwfc	fsr2h,f,c
  1563  000C40  EC37  F00D         	call	_MOC_Aktualna_Temperatura	;wreg free
  1564  000C44  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1565  000C46  6EDF               	movwf	indf2,c
  1566                           
  1567                           ;FRAME.c: 64:         message->data[5] = MOC_NOTWORK();
  1568  000C48  EE20 F00D          	lfsr	2,13
  1569  000C4C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1570  000C4E  26D9               	addwf	fsr2l,f,c
  1571  000C50  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1572  000C52  22DA               	addwfc	fsr2h,f,c
  1573  000C54  EC5F  F00D         	call	_MOC_NOTWORK	;wreg free
  1574  000C58  5006               	movf	?_MOC_NOTWORK,w,c
  1575  000C5A  6EDF               	movwf	indf2,c
  1576                           
  1577                           ;FRAME.c: 74:     }
  1578  000C5C  0012               	return	
  1579  000C5E                     l4264:
  1580                           
  1581                           ;FRAME.c: 76:     {;FRAME.c: 78:         UINT tru = IsInNeighbors(message->id.w[0]);
  1582  000C5E  EE20 F004          	lfsr	2,4
  1583  000C62  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1584  000C64  26D9               	addwf	fsr2l,f,c
  1585  000C66  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1586  000C68  22DA               	addwfc	fsr2h,f,c
  1587  000C6A  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1588  000C6E  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1589  000C72  EC46  F007         	call	_IsInNeighbors	;wreg free
  1590  000C76  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1591  000C7A  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1592                           
  1593                           ;FRAME.c: 81:         if(message->data[0]==0)
  1594  000C7E  EE20 F008          	lfsr	2,8
  1595  000C82  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1596  000C84  26D9               	addwf	fsr2l,f,c
  1597  000C86  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1598  000C88  22DA               	addwfc	fsr2h,f,c
  1599  000C8A  50DF               	movf	indf2,w,c
  1600  000C8C  A4D8               	btfss	status,2,c
  1601  000C8E  D00A               	goto	l4270
  1602                           
  1603                           ;FRAME.c: 82:         {;FRAME.c: 84:             statwect = statwect &( ~tru );
  1604  000C90  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1605  000C92  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1606  000C94  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1607  000C96  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1608  000C98  5032               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1609  000C9A  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1610  000C9C  6E32               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1611  000C9E  5033               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1612  000CA0  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1613  000CA2  D005               	goto	L1
  1614  000CA4                     l4270:
  1615                           
  1616                           ;FRAME.c: 87:         {;FRAME.c: 88:             statwect = statwect| tru;
  1617  000CA4  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1618  000CA6  1032               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1619  000CA8  6E32               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1620  000CAA  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1621  000CAC  1033               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1622  000CAE                     L1:
  1623  000CAE  6E33               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1624                           
  1625                           ;FRAME.c: 91:         if(statwect>0)
  1626                           
  1627                           ;FRAME.c: 89:         }
  1628  000CB0  5032               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1629  000CB2  1033               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1630  000CB4  B4D8               	btfsc	status,2,c
  1631  000CB6  D004               	goto	l4274
  1632                           
  1633                           ;FRAME.c: 92:         {;FRAME.c: 93:         LOCK_Set(1);
  1634  000CB8  0E01               	movlw	1
  1635  000CBA  EC63  F00D         	call	_LOCK_Set
  1636                           
  1637                           ;FRAME.c: 94:         }
  1638  000CBE  0012               	return	
  1639  000CC0                     l4274:
  1640                           
  1641                           ;FRAME.c: 96:         {;FRAME.c: 97:         LOCK_Set(0);
  1642  000CC0  0E00               	movlw	0
  1643  000CC2  EC63  F00D         	call	_LOCK_Set
  1644  000CC6  0012               	return		;funcret
  1645  000CC8                     __end_of_FRAME_SensorExcitationStatus:
  1646                           	opt callstack 0
  1647                           
  1648 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1649 ;; Defined at:
  1650 ;;		line 33 in file "MOC_Funct.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2    5[COMRAM] unsigned int 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;Total ram usage:        2 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_FRAME_SensorExcitationStatus
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text6
  1679  001A64                     __ptext6:
  1680                           	opt callstack 0
  1681  001A64                     _MOC_Wynikowa_wartosc_roznicowa:
  1682                           	opt callstack 24
  1683                           
  1684                           ;MOC_Funct.c: 35:     return 0x0220;
  1685                           
  1686                           ;incstack = 0
  1687  001A64  0E02               	movlw	2
  1688  001A66  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1689  001A68  0E20               	movlw	32
  1690  001A6A  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1691  001A6C  0012               	return		;funcret
  1692  001A6E                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1693                           	opt callstack 0
  1694                           
  1695 ;; *************** function _MOC_NOTWORK *****************
  1696 ;; Defined at:
  1697 ;;		line 47 in file "MOC_Funct.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  2    5[COMRAM] unsigned int 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1715 ;;Total ram usage:        2 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    3
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_FRAME_SensorExcitationStatus
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text7
  1726  001ABE                     __ptext7:
  1727                           	opt callstack 0
  1728  001ABE                     _MOC_NOTWORK:
  1729                           	opt callstack 24
  1730                           
  1731                           ;MOC_Funct.c: 49:     return 0xFF;
  1732                           
  1733                           ;incstack = 0
  1734  001ABE  0E00               	movlw	0
  1735  001AC0  6E07               	movwf	?_MOC_NOTWORK+1,c
  1736  001AC2  6806               	setf	?_MOC_NOTWORK,c
  1737  001AC4  0012               	return		;funcret
  1738  001AC6                     __end_of_MOC_NOTWORK:
  1739                           	opt callstack 0
  1740                           
  1741 ;; *************** function _MOC_Frame_Counter *****************
  1742 ;; Defined at:
  1743 ;;		line 38 in file "MOC_Funct.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2    5[COMRAM] unsigned int 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;Total ram usage:        2 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    3
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_FRAME_SensorExcitationStatus
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text8
  1772  001A3A                     __ptext8:
  1773                           	opt callstack 0
  1774  001A3A                     _MOC_Frame_Counter:
  1775                           	opt callstack 24
  1776                           
  1777                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1778                           
  1779                           ;incstack = 0
  1780  001A3A  504C               	movf	MOC_Frame_Counter@zeta,w,c
  1781  001A3C  6E06               	movwf	?_MOC_Frame_Counter,c
  1782  001A3E  504D               	movf	MOC_Frame_Counter@zeta+1,w,c
  1783  001A40  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1784  001A42  4A4C               	infsnz	MOC_Frame_Counter@zeta,f,c
  1785  001A44  2A4D               	incf	MOC_Frame_Counter@zeta+1,f,c
  1786  001A46  0012               	return		;funcret
  1787  001A48                     __end_of_MOC_Frame_Counter:
  1788                           	opt callstack 0
  1789                           
  1790 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1791 ;; Defined at:
  1792 ;;		line 43 in file "MOC_Funct.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  2    5[COMRAM] unsigned int 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1810 ;;Total ram usage:        2 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    3
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_FRAME_SensorExcitationStatus
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text9
  1821  001A6E                     __ptext9:
  1822                           	opt callstack 0
  1823  001A6E                     _MOC_Aktualna_Temperatura:
  1824                           	opt callstack 24
  1825                           
  1826                           ;MOC_Funct.c: 45:     return 0x1B;
  1827                           
  1828                           ;incstack = 0
  1829  001A6E  0E00               	movlw	0
  1830  001A70  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1831  001A72  0E1B               	movlw	27
  1832  001A74  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1833  001A76  0012               	return		;funcret
  1834  001A78                     __end_of_MOC_Aktualna_Temperatura:
  1835                           	opt callstack 0
  1836                           
  1837 ;; *************** function _LOCK_Set *****************
  1838 ;; Defined at:
  1839 ;;		line 52 in file "LED.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  k               1    wreg     unsigned char 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  k               1    5[COMRAM] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;Total ram usage:        1 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    3
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_FRAME_SensorExcitationStatus
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text10
  1868  001AC6                     __ptext10:
  1869                           	opt callstack 0
  1870  001AC6                     _LOCK_Set:
  1871                           	opt callstack 24
  1872                           
  1873                           ;incstack = 0
  1874                           ;LOCK_Set@k stored from wreg
  1875  001AC6  6E06               	movwf	LOCK_Set@k,c
  1876                           
  1877                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1878  001AC8  C006  F03B         	movff	LOCK_Set@k,_LOCK
  1879  001ACC  0012               	return		;funcret
  1880  001ACE                     __end_of_LOCK_Set:
  1881                           	opt callstack 0
  1882                           
  1883 ;; *************** function _LOCK_Get *****************
  1884 ;; Defined at:
  1885 ;;		line 57 in file "LED.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      unsigned char 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    3
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_FRAME_SensorExcitationStatus
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text11
  1914  001AD4                     __ptext11:
  1915                           	opt callstack 0
  1916  001AD4                     _LOCK_Get:
  1917                           	opt callstack 24
  1918                           
  1919                           ;LED.c: 59:     return LOCK;
  1920                           
  1921                           ;incstack = 0
  1922  001AD4  503B               	movf	_LOCK,w,c
  1923  001AD6  0012               	return		;funcret
  1924  001AD8                     __end_of_LOCK_Get:
  1925                           	opt callstack 0
  1926                           
  1927 ;; *************** function _IsInNeighbors *****************
  1928 ;; Defined at:
  1929 ;;		line 102 in file "FRAME.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  message_adre    2    5[COMRAM] unsigned int 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  i               2    0        unsigned short 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  2    5[COMRAM] unsigned int 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1947 ;;Total ram usage:        2 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    3
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_FRAME_SensorExcitationStatus
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text12
  1958  000E8C                     __ptext12:
  1959                           	opt callstack 0
  1960  000E8C                     _IsInNeighbors:
  1961                           	opt callstack 24
  1962                           
  1963                           ;FRAME.c: 102: UINT IsInNeighbors(UINT message_adress);FRAME.c: 103: {;FRAME.c: 104:    
      +                           WORD i;;FRAME.c: 106:     if(NeightAdress1==message_adress)
  1964                           
  1965                           ;incstack = 0
  1966  000E8C  5006               	movf	IsInNeighbors@message_adress,w,c
  1967  000E8E  1857               	xorwf	_NeightAdress1,w,c	;volatile
  1968  000E90  E109               	bnz	l4030
  1969  000E92  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1970  000E94  1858               	xorwf	_NeightAdress1+1,w,c	;volatile
  1971  000E96  A4D8               	btfss	status,2,c
  1972  000E98  D005               	goto	l4030
  1973                           
  1974                           ;FRAME.c: 107:     {;FRAME.c: 108:         return 0b1;
  1975  000E9A  0E00               	movlw	0
  1976  000E9C  6E07               	movwf	?_IsInNeighbors+1,c
  1977  000E9E  0E01               	movlw	1
  1978  000EA0  6E06               	movwf	?_IsInNeighbors,c
  1979  000EA2  0012               	return	
  1980  000EA4                     l4030:
  1981                           
  1982                           ;FRAME.c: 110:     if(NeightAdress2==message_adress)
  1983  000EA4  5006               	movf	IsInNeighbors@message_adress,w,c
  1984  000EA6  1855               	xorwf	_NeightAdress2,w,c	;volatile
  1985  000EA8  E109               	bnz	l4036
  1986  000EAA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1987  000EAC  1856               	xorwf	_NeightAdress2+1,w,c	;volatile
  1988  000EAE  A4D8               	btfss	status,2,c
  1989  000EB0  D005               	goto	l4036
  1990                           
  1991                           ;FRAME.c: 111:     {;FRAME.c: 112:         return 0b10;
  1992  000EB2  0E00               	movlw	0
  1993  000EB4  6E07               	movwf	?_IsInNeighbors+1,c
  1994  000EB6  0E02               	movlw	2
  1995  000EB8  6E06               	movwf	?_IsInNeighbors,c
  1996  000EBA  0012               	return	
  1997  000EBC                     l4036:
  1998                           
  1999                           ;FRAME.c: 114:     if(NeightAdress3==message_adress)
  2000  000EBC  5006               	movf	IsInNeighbors@message_adress,w,c
  2001  000EBE  184A               	xorwf	_NeightAdress3,w,c	;volatile
  2002  000EC0  E109               	bnz	l4042
  2003  000EC2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2004  000EC4  184B               	xorwf	_NeightAdress3+1,w,c	;volatile
  2005  000EC6  A4D8               	btfss	status,2,c
  2006  000EC8  D005               	goto	l4042
  2007                           
  2008                           ;FRAME.c: 115:     {;FRAME.c: 116:         return 0b100;
  2009  000ECA  0E00               	movlw	0
  2010  000ECC  6E07               	movwf	?_IsInNeighbors+1,c
  2011  000ECE  0E04               	movlw	4
  2012  000ED0  6E06               	movwf	?_IsInNeighbors,c
  2013  000ED2  0012               	return	
  2014  000ED4                     l4042:
  2015                           
  2016                           ;FRAME.c: 118:     if(NeightAdress4==message_adress)
  2017  000ED4  5006               	movf	IsInNeighbors@message_adress,w,c
  2018  000ED6  1848               	xorwf	_NeightAdress4,w,c	;volatile
  2019  000ED8  E109               	bnz	l4048
  2020  000EDA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2021  000EDC  1849               	xorwf	_NeightAdress4+1,w,c	;volatile
  2022  000EDE  A4D8               	btfss	status,2,c
  2023  000EE0  D005               	goto	l4048
  2024                           
  2025                           ;FRAME.c: 119:     {;FRAME.c: 120:         return 0b1000;
  2026  000EE2  0E00               	movlw	0
  2027  000EE4  6E07               	movwf	?_IsInNeighbors+1,c
  2028  000EE6  0E08               	movlw	8
  2029  000EE8  6E06               	movwf	?_IsInNeighbors,c
  2030  000EEA  0012               	return	
  2031  000EEC                     l4048:
  2032                           
  2033                           ;FRAME.c: 122:     if(NeightAdress5==message_adress)
  2034  000EEC  5006               	movf	IsInNeighbors@message_adress,w,c
  2035  000EEE  1846               	xorwf	_NeightAdress5,w,c	;volatile
  2036  000EF0  E109               	bnz	l4054
  2037  000EF2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2038  000EF4  1847               	xorwf	_NeightAdress5+1,w,c	;volatile
  2039  000EF6  A4D8               	btfss	status,2,c
  2040  000EF8  D005               	goto	l4054
  2041                           
  2042                           ;FRAME.c: 123:     {;FRAME.c: 124:         return 0b10000;
  2043  000EFA  0E00               	movlw	0
  2044  000EFC  6E07               	movwf	?_IsInNeighbors+1,c
  2045  000EFE  0E10               	movlw	16
  2046  000F00  6E06               	movwf	?_IsInNeighbors,c
  2047  000F02  0012               	return	
  2048  000F04                     l4054:
  2049                           
  2050                           ;FRAME.c: 126:     if(NeightAdress6==message_adress)
  2051  000F04  5006               	movf	IsInNeighbors@message_adress,w,c
  2052  000F06  1844               	xorwf	_NeightAdress6,w,c	;volatile
  2053  000F08  E109               	bnz	l4060
  2054  000F0A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2055  000F0C  1845               	xorwf	_NeightAdress6+1,w,c	;volatile
  2056  000F0E  A4D8               	btfss	status,2,c
  2057  000F10  D005               	goto	l4060
  2058                           
  2059                           ;FRAME.c: 127:     {;FRAME.c: 128:         return 0b100000;
  2060  000F12  0E00               	movlw	0
  2061  000F14  6E07               	movwf	?_IsInNeighbors+1,c
  2062  000F16  0E20               	movlw	32
  2063  000F18  6E06               	movwf	?_IsInNeighbors,c
  2064  000F1A  0012               	return	
  2065  000F1C                     l4060:
  2066                           
  2067                           ;FRAME.c: 130:     if(NeightAdress7==message_adress)
  2068  000F1C  5006               	movf	IsInNeighbors@message_adress,w,c
  2069  000F1E  1842               	xorwf	_NeightAdress7,w,c	;volatile
  2070  000F20  E109               	bnz	l4066
  2071  000F22  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2072  000F24  1843               	xorwf	_NeightAdress7+1,w,c	;volatile
  2073  000F26  A4D8               	btfss	status,2,c
  2074  000F28  D005               	goto	l4066
  2075                           
  2076                           ;FRAME.c: 131:     {;FRAME.c: 132:         return 0b1000000;
  2077  000F2A  0E00               	movlw	0
  2078  000F2C  6E07               	movwf	?_IsInNeighbors+1,c
  2079  000F2E  0E40               	movlw	64
  2080  000F30  6E06               	movwf	?_IsInNeighbors,c
  2081  000F32  0012               	return	
  2082  000F34                     l4066:
  2083                           
  2084                           ;FRAME.c: 134:     if(NeightAdress8==message_adress)
  2085  000F34  5006               	movf	IsInNeighbors@message_adress,w,c
  2086  000F36  1840               	xorwf	_NeightAdress8,w,c	;volatile
  2087  000F38  E109               	bnz	l4072
  2088  000F3A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2089  000F3C  1841               	xorwf	_NeightAdress8+1,w,c	;volatile
  2090  000F3E  A4D8               	btfss	status,2,c
  2091  000F40  D005               	goto	l4072
  2092                           
  2093                           ;FRAME.c: 135:     {;FRAME.c: 136:         return 0b10000000;
  2094  000F42  0E00               	movlw	0
  2095  000F44  6E07               	movwf	?_IsInNeighbors+1,c
  2096  000F46  0E80               	movlw	128
  2097  000F48  6E06               	movwf	?_IsInNeighbors,c
  2098  000F4A  0012               	return	
  2099  000F4C                     l4072:
  2100                           
  2101                           ;FRAME.c: 152:     return 0;
  2102  000F4C  0E00               	movlw	0
  2103  000F4E  6E07               	movwf	?_IsInNeighbors+1,c
  2104  000F50  0E00               	movlw	0
  2105  000F52  6E06               	movwf	?_IsInNeighbors,c
  2106  000F54  0012               	return		;funcret
  2107  000F56                     __end_of_IsInNeighbors:
  2108                           	opt callstack 0
  2109                           
  2110 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2111 ;; Defined at:
  2112 ;;		line 533 in file "FRAME.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  message         2    5[COMRAM] PTR struct .
  2115 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2130 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2131 ;;Total ram usage:        6 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    3
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_FRAME_HandleCanFrame
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text13
  2142  001006                     __ptext13:
  2143                           	opt callstack 0
  2144  001006                     _FRAME_PrzypisanieDokarty:
  2145                           	opt callstack 25
  2146                           
  2147                           ;FRAME.c: 533: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 534: {;FRAME.
      +                          c: 535:     if(message->message_type == 0x02)
  2148                           
  2149                           ;incstack = 0
  2150  001006  EE20 F001          	lfsr	2,1
  2151  00100A  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2152  00100C  26D9               	addwf	fsr2l,f,c
  2153  00100E  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2154  001010  22DA               	addwfc	fsr2h,f,c
  2155  001012  0E02               	movlw	2
  2156  001014  18DE               	xorwf	postinc2,w,c
  2157  001016  A4D8               	btfss	status,2,c
  2158  001018  D021               	goto	l4370
  2159                           
  2160                           ;FRAME.c: 536:     {;FRAME.c: 537:         message->data_length = 3;
  2161  00101A  EE20 F010          	lfsr	2,16
  2162  00101E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2163  001020  26D9               	addwf	fsr2l,f,c
  2164  001022  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2165  001024  22DA               	addwfc	fsr2h,f,c
  2166  001026  0E03               	movlw	3
  2167  001028  6EDF               	movwf	indf2,c
  2168                           
  2169                           ;FRAME.c: 538:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2170  00102A  EE20 F008          	lfsr	2,8
  2171  00102E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2172  001030  26D9               	addwf	fsr2l,f,c
  2173  001032  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2174  001034  22DA               	addwfc	fsr2h,f,c
  2175  001036  0E00               	movlw	0
  2176  001038  6EDF               	movwf	indf2,c
  2177                           
  2178                           ;FRAME.c: 539:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2179  00103A  EE20 F009          	lfsr	2,9
  2180  00103E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2181  001040  26D9               	addwf	fsr2l,f,c
  2182  001042  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2183  001044  22DA               	addwfc	fsr2h,f,c
  2184  001046  C040 FFDF          	movff	64,indf2
  2185                           
  2186                           ;FRAME.c: 540:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2187  00104A  EE20 F00A          	lfsr	2,10
  2188  00104E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2189  001050  26D9               	addwf	fsr2l,f,c
  2190  001052  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2191  001054  22DA               	addwfc	fsr2h,f,c
  2192  001056  C042 FFDF          	movff	66,indf2
  2193                           
  2194                           ;FRAME.c: 542:     }
  2195  00105A  0012               	return	
  2196  00105C                     l4370:
  2197                           
  2198                           ;FRAME.c: 544:     {;FRAME.c: 545:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2199  00105C  EE20 F008          	lfsr	2,8
  2200  001060  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2201  001062  26D9               	addwf	fsr2l,f,c
  2202  001064  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2203  001066  22DA               	addwfc	fsr2h,f,c
  2204  001068  50DF               	movf	indf2,w,c
  2205  00106A  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2206  00106C  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2207  00106E  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2208  001070  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2209  001072  EE20 F009          	lfsr	2,9
  2210  001076  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2211  001078  26D9               	addwf	fsr2l,f,c
  2212  00107A  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2213  00107C  22DA               	addwfc	fsr2h,f,c
  2214  00107E  50DF               	movf	indf2,w,c
  2215  001080  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2216  001082  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2217  001084  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2218  001086  6E40               	movwf	64,c
  2219  001088  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2220  00108A  6E41               	movwf	65,c
  2221                           
  2222                           ;FRAME.c: 546:          Dane->Nr_WeWy = (message->data[2]);
  2223  00108C  EE20 F00A          	lfsr	2,10
  2224  001090  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2225  001092  26D9               	addwf	fsr2l,f,c
  2226  001094  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2227  001096  22DA               	addwfc	fsr2h,f,c
  2228  001098  50DF               	movf	indf2,w,c
  2229  00109A  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2230  00109C  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2231  00109E  6E42               	movwf	66,c
  2232  0010A0  6A43               	clrf	67,c
  2233  0010A2  0012               	return		;funcret
  2234  0010A4                     __end_of_FRAME_PrzypisanieDokarty:
  2235                           	opt callstack 0
  2236                           
  2237 ;; *************** function _FRAME_Plot *****************
  2238 ;; Defined at:
  2239 ;;		line 438 in file "FRAME.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  message         2   12[COMRAM] PTR struct .
  2242 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;Total ram usage:        3 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    4
  2261 ;; This function calls:
  2262 ;;		___lwdiv
  2263 ;; This function is called by:
  2264 ;;		_FRAME_HandleCanFrame
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text14
  2269  001572                     __ptext14:
  2270                           	opt callstack 0
  2271  001572                     _FRAME_Plot:
  2272                           	opt callstack 24
  2273                           
  2274                           ;FRAME.c: 438: static void FRAME_Plot(mID *message);FRAME.c: 439: {;FRAME.c: 441:     if
      +                          (message->message_type == 0x02)
  2275                           
  2276                           ;incstack = 0
  2277  001572  EE20 F001          	lfsr	2,1
  2278  001576  500D               	movf	FRAME_Plot@message,w,c
  2279  001578  26D9               	addwf	fsr2l,f,c
  2280  00157A  500E               	movf	FRAME_Plot@message+1,w,c
  2281  00157C  22DA               	addwfc	fsr2h,f,c
  2282  00157E  0E02               	movlw	2
  2283  001580  18DE               	xorwf	postinc2,w,c
  2284  001582  A4D8               	btfss	status,2,c
  2285  001584  D013               	goto	l4360
  2286                           
  2287                           ;FRAME.c: 442:     {;FRAME.c: 443:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2288  001586  EE20 F008          	lfsr	2,8
  2289  00158A  500D               	movf	FRAME_Plot@message,w,c
  2290  00158C  26D9               	addwf	fsr2l,f,c
  2291  00158E  500E               	movf	FRAME_Plot@message+1,w,c
  2292  001590  22DA               	addwfc	fsr2h,f,c
  2293  001592  C00C F006          	movff	12,___lwdiv@dividend
  2294  001596  C00D F007          	movff	13,___lwdiv@dividend+1
  2295  00159A  0E00               	movlw	0
  2296  00159C  6E09               	movwf	___lwdiv@divisor+1,c
  2297  00159E  0E0A               	movlw	10
  2298  0015A0  6E08               	movwf	___lwdiv@divisor,c
  2299  0015A2  ECE5  F00A         	call	___lwdiv	;wreg free
  2300  0015A6  5006               	movf	?___lwdiv,w,c
  2301  0015A8  6EDF               	movwf	indf2,c
  2302                           
  2303                           ;FRAME.c: 444:     }
  2304  0015AA  0012               	return	
  2305  0015AC                     l4360:
  2306                           
  2307                           ;FRAME.c: 446:     {;FRAME.c: 447:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2308  0015AC  EE20 F008          	lfsr	2,8
  2309  0015B0  500D               	movf	FRAME_Plot@message,w,c
  2310  0015B2  26D9               	addwf	fsr2l,f,c
  2311  0015B4  500E               	movf	FRAME_Plot@message+1,w,c
  2312  0015B6  22DA               	addwfc	fsr2h,f,c
  2313  0015B8  50DF               	movf	indf2,w,c
  2314  0015BA  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2315  0015BC  500F               	movf	??_FRAME_Plot,w,c
  2316  0015BE  0D0A               	mullw	10
  2317  0015C0  CFF3 F00C          	movff	prodl,12
  2318  0015C4  CFF4 F00D          	movff	prodh,13
  2319  0015C8  0012               	return		;funcret
  2320  0015CA                     __end_of_FRAME_Plot:
  2321                           	opt callstack 0
  2322                           
  2323 ;; *************** function _FRAME_MapPosition *****************
  2324 ;; Defined at:
  2325 ;;		line 459 in file "FRAME.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  message         2    5[COMRAM] PTR struct .
  2328 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		None
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2344 ;;Total ram usage:        2 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    3
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_FRAME_HandleCanFrame
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text15
  2355  001AD8                     __ptext15:
  2356                           	opt callstack 0
  2357  001AD8                     _FRAME_MapPosition:
  2358                           	opt callstack 25
  2359                           
  2360                           ;incstack = 0
  2361  001AD8  0012               	return		;funcret
  2362  001ADA                     __end_of_FRAME_MapPosition:
  2363                           	opt callstack 0
  2364                           
  2365 ;; *************** function _FRAME_ExcitationValue *****************
  2366 ;; Defined at:
  2367 ;;		line 186 in file "FRAME.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  message         2    5[COMRAM] PTR struct .
  2370 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;Total ram usage:        3 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    3
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_FRAME_HandleCanFrame
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text16
  2397  00177C                     __ptext16:
  2398                           	opt callstack 0
  2399  00177C                     _FRAME_ExcitationValue:
  2400                           	opt callstack 25
  2401                           
  2402                           ;FRAME.c: 186: static void FRAME_ExcitationValue(mID *message);FRAME.c: 187: {;FRAME.c: 
      +                          188:     if(message->message_type == 0x02)
  2403                           
  2404                           ;incstack = 0
  2405  00177C  EE20 F001          	lfsr	2,1
  2406  001780  5006               	movf	FRAME_ExcitationValue@message,w,c
  2407  001782  26D9               	addwf	fsr2l,f,c
  2408  001784  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2409  001786  22DA               	addwfc	fsr2h,f,c
  2410  001788  0E02               	movlw	2
  2411  00178A  18DE               	xorwf	postinc2,w,c
  2412  00178C  A4D8               	btfss	status,2,c
  2413  00178E  0012               	return	
  2414                           
  2415                           ;FRAME.c: 189:     {;FRAME.c: 190:         message->data_length = 1;
  2416  001790  EE20 F010          	lfsr	2,16
  2417  001794  5006               	movf	FRAME_ExcitationValue@message,w,c
  2418  001796  26D9               	addwf	fsr2l,f,c
  2419  001798  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2420  00179A  22DA               	addwfc	fsr2h,f,c
  2421  00179C  0E01               	movlw	1
  2422  00179E  6EDF               	movwf	indf2,c
  2423                           
  2424                           ;FRAME.c: 195:         message->data[0] = 0xFF;
  2425  0017A0  EE20 F008          	lfsr	2,8
  2426  0017A4  5006               	movf	FRAME_ExcitationValue@message,w,c
  2427  0017A6  26D9               	addwf	fsr2l,f,c
  2428  0017A8  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2429  0017AA  22DA               	addwfc	fsr2h,f,c
  2430  0017AC  0EFF               	movlw	255
  2431  0017AE  6EDF               	movwf	indf2,c
  2432                           
  2433                           ;FRAME.c: 196:     }
  2434  0017B0  0012               	return		;funcret
  2435  0017B2                     __end_of_FRAME_ExcitationValue:
  2436                           	opt callstack 0
  2437                           
  2438 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2439 ;; Defined at:
  2440 ;;		line 210 in file "FRAME.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  message         2    5[COMRAM] PTR struct .
  2443 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  i               2    8[COMRAM] unsigned short 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2458 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2459 ;;Total ram usage:        5 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    3
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_FRAME_HandleCanFrame
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text17
  2470  00161C                     __ptext17:
  2471                           	opt callstack 0
  2472  00161C                     _FRAME_ExcitationMultiplier:
  2473                           	opt callstack 25
  2474                           
  2475                           ;FRAME.c: 210: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 211: {;FRAM
      +                          E.c: 212:     WORD i;;FRAME.c: 214:     if(message->message_type == 0x02)
  2476                           
  2477                           ;incstack = 0
  2478  00161C  EE20 F001          	lfsr	2,1
  2479  001620  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2480  001622  26D9               	addwf	fsr2l,f,c
  2481  001624  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2482  001626  22DA               	addwfc	fsr2h,f,c
  2483  001628  0E02               	movlw	2
  2484  00162A  18DE               	xorwf	postinc2,w,c
  2485  00162C  A4D8               	btfss	status,2,c
  2486  00162E  0012               	return	
  2487                           
  2488                           ;FRAME.c: 215:     {;FRAME.c: 216:         message->data_length = 1;
  2489  001630  EE20 F010          	lfsr	2,16
  2490  001634  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2491  001636  26D9               	addwf	fsr2l,f,c
  2492  001638  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2493  00163A  22DA               	addwfc	fsr2h,f,c
  2494  00163C  0E01               	movlw	1
  2495  00163E  6EDF               	movwf	indf2,c
  2496                           
  2497                           ;FRAME.c: 217:         for(i=0; i<3; i++)
  2498  001640  0E00               	movlw	0
  2499  001642  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2500  001644  0E00               	movlw	0
  2501  001646  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2502  001648                     l4302:
  2503                           
  2504                           ;FRAME.c: 218:         {;FRAME.c: 221:         }
  2505  001648  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2506  00164A  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2507  00164C  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2508  00164E  E104               	bnz	u2470
  2509  001650  0E03               	movlw	3
  2510  001652  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2511  001654  A0D8               	btfss	status,0,c
  2512  001656  D7F8               	goto	l4302
  2513  001658                     u2470:
  2514                           
  2515                           ;FRAME.c: 222:         message->data[0] = 0xFF;
  2516  001658  EE20 F008          	lfsr	2,8
  2517  00165C  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2518  00165E  26D9               	addwf	fsr2l,f,c
  2519  001660  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2520  001662  22DA               	addwfc	fsr2h,f,c
  2521  001664  0EFF               	movlw	255
  2522  001666  6EDF               	movwf	indf2,c
  2523                           
  2524                           ;FRAME.c: 223:     }
  2525  001668  0012               	return		;funcret
  2526  00166A                     __end_of_FRAME_ExcitationMultiplier:
  2527                           	opt callstack 0
  2528                           
  2529 ;; *************** function _FRAME_DeviceReset *****************
  2530 ;; Defined at:
  2531 ;;		line 344 in file "FRAME.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  message         2   14[COMRAM] PTR struct .
  2534 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2549 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2550 ;;Total ram usage:        3 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    6
  2553 ;; This function calls:
  2554 ;;		_FRAME_DataUpdateAndChangeOption
  2555 ;;		_WriteDataToEEPROM
  2556 ;; This function is called by:
  2557 ;;		_FRAME_HandleCanFrame
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text18
  2562  000A74                     __ptext18:
  2563                           	opt callstack 0
  2564  000A74                     _FRAME_DeviceReset:
  2565                           	opt callstack 22
  2566                           
  2567                           ;FRAME.c: 344: static void FRAME_DeviceReset(mID *message);FRAME.c: 345: {;FRAME.c: 346:
      +                               if(message->message_type == 0x02)
  2568                           
  2569                           ;incstack = 0
  2570  000A74  EE20 F001          	lfsr	2,1
  2571  000A78  500F               	movf	FRAME_DeviceReset@message,w,c
  2572  000A7A  26D9               	addwf	fsr2l,f,c
  2573  000A7C  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2574  000A7E  22DA               	addwfc	fsr2h,f,c
  2575  000A80  0E02               	movlw	2
  2576  000A82  18DE               	xorwf	postinc2,w,c
  2577  000A84  A4D8               	btfss	status,2,c
  2578  000A86  D057               	goto	l4324
  2579                           
  2580                           ;FRAME.c: 347:     {;FRAME.c: 348:         message->data_length = 1;
  2581  000A88  EE20 F010          	lfsr	2,16
  2582  000A8C  500F               	movf	FRAME_DeviceReset@message,w,c
  2583  000A8E  26D9               	addwf	fsr2l,f,c
  2584  000A90  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2585  000A92  22DA               	addwfc	fsr2h,f,c
  2586  000A94  0E01               	movlw	1
  2587  000A96  6EDF               	movwf	indf2,c
  2588                           
  2589                           ;FRAME.c: 350:         message->data[0] = (RCON>>6) & 0x01;
  2590  000A98  EE20 F008          	lfsr	2,8
  2591  000A9C  500F               	movf	FRAME_DeviceReset@message,w,c
  2592  000A9E  26D9               	addwf	fsr2l,f,c
  2593  000AA0  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2594  000AA2  22DA               	addwfc	fsr2h,f,c
  2595  000AA4  44D0               	rlncf	4048,w,c	;volatile
  2596  000AA6  46E8               	rlncf	wreg,f,c
  2597  000AA8  0B03               	andlw	3
  2598  000AAA  0B01               	andlw	1
  2599  000AAC  6EDF               	movwf	indf2,c
  2600                           
  2601                           ;FRAME.c: 351:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2602  000AAE  EE20 F009          	lfsr	2,9
  2603  000AB2  500F               	movf	FRAME_DeviceReset@message,w,c
  2604  000AB4  26D9               	addwf	fsr2l,f,c
  2605  000AB6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2606  000AB8  22DA               	addwfc	fsr2h,f,c
  2607  000ABA  0100               	movlb	0	; () banked
  2608  000ABC  A9C6               	btfss	_Flagi& (0+255),4,b
  2609  000ABE  D002               	goto	u2510
  2610  000AC0  0E01               	movlw	1
  2611  000AC2  D001               	goto	u2516
  2612  000AC4                     u2510:
  2613  000AC4  0E00               	movlw	0
  2614  000AC6                     u2516:
  2615  000AC6  6EDF               	movwf	indf2,c
  2616                           
  2617                           ;FRAME.c: 352:         message->data[2] = Flagi.pomiarTla;
  2618  000AC8  EE20 F00A          	lfsr	2,10
  2619  000ACC  500F               	movf	FRAME_DeviceReset@message,w,c
  2620  000ACE  26D9               	addwf	fsr2l,f,c
  2621  000AD0  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2622  000AD2  22DA               	addwfc	fsr2h,f,c
  2623  000AD4  A1C6               	btfss	_Flagi& (0+255),0,b
  2624  000AD6  D002               	goto	u2520
  2625  000AD8  0E01               	movlw	1
  2626  000ADA  D001               	goto	u2526
  2627  000ADC                     u2520:
  2628  000ADC  0E00               	movlw	0
  2629  000ADE                     u2526:
  2630  000ADE  6EDF               	movwf	indf2,c
  2631                           
  2632                           ;FRAME.c: 353:         message->data[3] = 0;
  2633  000AE0  EE20 F00B          	lfsr	2,11
  2634  000AE4  500F               	movf	FRAME_DeviceReset@message,w,c
  2635  000AE6  26D9               	addwf	fsr2l,f,c
  2636  000AE8  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2637  000AEA  22DA               	addwfc	fsr2h,f,c
  2638  000AEC  0E00               	movlw	0
  2639  000AEE  6EDF               	movwf	indf2,c
  2640                           
  2641                           ;FRAME.c: 354:         message->data[4] = Dane->rokU16;
  2642  000AF0  EE20 F00C          	lfsr	2,12
  2643  000AF4  500F               	movf	FRAME_DeviceReset@message,w,c
  2644  000AF6  26D9               	addwf	fsr2l,f,c
  2645  000AF8  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2646  000AFA  22DA               	addwfc	fsr2h,f,c
  2647  000AFC  C036 FFDF          	movff	54,indf2
  2648                           
  2649                           ;FRAME.c: 355:         message->data[5] = Dane->miesiacU16;
  2650  000B00  EE20 F00D          	lfsr	2,13
  2651  000B04  500F               	movf	FRAME_DeviceReset@message,w,c
  2652  000B06  26D9               	addwf	fsr2l,f,c
  2653  000B08  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2654  000B0A  22DA               	addwfc	fsr2h,f,c
  2655  000B0C  C038 FFDF          	movff	56,indf2
  2656                           
  2657                           ;FRAME.c: 356:         message->data[6] = Dane->dzienU16;
  2658  000B10  EE20 F00E          	lfsr	2,14
  2659  000B14  500F               	movf	FRAME_DeviceReset@message,w,c
  2660  000B16  26D9               	addwf	fsr2l,f,c
  2661  000B18  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2662  000B1A  22DA               	addwfc	fsr2h,f,c
  2663  000B1C  C03A FFDF          	movff	58,indf2
  2664                           
  2665                           ;FRAME.c: 357:         message->data[7] = Dane->godzinaU16;
  2666  000B20  EE20 F00F          	lfsr	2,15
  2667  000B24  500F               	movf	FRAME_DeviceReset@message,w,c
  2668  000B26  26D9               	addwf	fsr2l,f,c
  2669  000B28  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2670  000B2A  22DA               	addwfc	fsr2h,f,c
  2671  000B2C  C03C FFDF          	movff	60,indf2
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;FRAME.c: 358:         RCON &= ~(1<<6);
  2675  000B30  9CD0               	bcf	4048,6,c	;volatile
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;FRAME.c: 359:         Flagi.wykonanoZapisDoFlash = 0;
  2679  000B32  99C6               	bcf	_Flagi& (0+255),4,b
  2680                           
  2681                           ;FRAME.c: 373:     }
  2682  000B34  0012               	return	
  2683  000B36                     l4324:
  2684                           
  2685                           ;FRAME.c: 375:     {;FRAME.c: 376:         message->data_length = 1;
  2686  000B36  EE20 F010          	lfsr	2,16
  2687  000B3A  500F               	movf	FRAME_DeviceReset@message,w,c
  2688  000B3C  26D9               	addwf	fsr2l,f,c
  2689  000B3E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2690  000B40  22DA               	addwfc	fsr2h,f,c
  2691  000B42  0E01               	movlw	1
  2692  000B44  6EDF               	movwf	indf2,c
  2693                           
  2694                           ;FRAME.c: 378:         if(message->data[2])
  2695  000B46  EE20 F00A          	lfsr	2,10
  2696  000B4A  500F               	movf	FRAME_DeviceReset@message,w,c
  2697  000B4C  26D9               	addwf	fsr2l,f,c
  2698  000B4E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2699  000B50  22DA               	addwfc	fsr2h,f,c
  2700  000B52  50DF               	movf	indf2,w,c
  2701  000B54  B4D8               	btfsc	status,2,c
  2702  000B56  D00F               	goto	l4334
  2703                           
  2704                           ;FRAME.c: 379:         {;FRAME.c: 380:             Flagi.pomiarTla = 1;
  2705  000B58  0100               	movlb	0	; () banked
  2706  000B5A  81C6               	bsf	_Flagi& (0+255),0,b
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;FRAME.c: 381:             if(message->data[1])
  2710  000B5C  EE20 F009          	lfsr	2,9
  2711  000B60  500F               	movf	FRAME_DeviceReset@message,w,c
  2712  000B62  26D9               	addwf	fsr2l,f,c
  2713  000B64  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2714  000B66  22DA               	addwfc	fsr2h,f,c
  2715  000B68  50DF               	movf	indf2,w,c
  2716  000B6A  B4D8               	btfsc	status,2,c
  2717  000B6C  D01E               	goto	l4342
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;FRAME.c: 382:             {;FRAME.c: 383:                 Flagi.zapisDoFlash = 1;
  2721  000B6E  87C6               	bsf	_Flagi& (0+255),3,b
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;FRAME.c: 384:                 WriteDataToEEPROM();
  2725  000B70  EC64  F006         	call	_WriteDataToEEPROM	;wreg free
  2726  000B74  D01A               	goto	l4342
  2727  000B76                     l4334:
  2728                           
  2729                           ;FRAME.c: 388:         {;FRAME.c: 389:             if(message->data[1])
  2730  000B76  EE20 F009          	lfsr	2,9
  2731  000B7A  500F               	movf	FRAME_DeviceReset@message,w,c
  2732  000B7C  26D9               	addwf	fsr2l,f,c
  2733  000B7E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2734  000B80  22DA               	addwfc	fsr2h,f,c
  2735  000B82  50DF               	movf	indf2,w,c
  2736  000B84  B4D8               	btfsc	status,2,c
  2737  000B86  D008               	goto	l4338
  2738                           
  2739                           ;FRAME.c: 390:             {;FRAME.c: 391:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2740  000B88  C00F  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2741  000B8C  C010  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2742  000B90  EC8C  F00A         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2743                           
  2744                           ;FRAME.c: 392:                 WriteDataToEEPROM();
  2745  000B94  EC64  F006         	call	_WriteDataToEEPROM	;wreg free
  2746  000B98                     l4338:
  2747                           
  2748                           ;FRAME.c: 395:             if(message->data[0])
  2749  000B98  EE20 F008          	lfsr	2,8
  2750  000B9C  500F               	movf	FRAME_DeviceReset@message,w,c
  2751  000B9E  26D9               	addwf	fsr2l,f,c
  2752  000BA0  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2753  000BA2  22DA               	addwfc	fsr2h,f,c
  2754  000BA4  50DF               	movf	indf2,w,c
  2755  000BA6  A4D8               	btfss	status,2,c
  2756  000BA8  00FF               	reset		;# 
  2757  000BAA                     l4342:
  2758                           
  2759                           ;FRAME.c: 400:         message->data[0] = 0xFF;
  2760  000BAA  EE20 F008          	lfsr	2,8
  2761  000BAE  500F               	movf	FRAME_DeviceReset@message,w,c
  2762  000BB0  26D9               	addwf	fsr2l,f,c
  2763  000BB2  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2764  000BB4  22DA               	addwfc	fsr2h,f,c
  2765  000BB6  0EFF               	movlw	255
  2766  000BB8  6EDF               	movwf	indf2,c
  2767  000BBA  0012               	return		;funcret
  2768  000BBC                     __end_of_FRAME_DeviceReset:
  2769                           	opt callstack 0
  2770                           
  2771 ;; *************** function _WriteDataToEEPROM *****************
  2772 ;; Defined at:
  2773 ;;		line 418 in file "FRAME.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;Total ram usage:        0 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    5
  2794 ;; This function calls:
  2795 ;;		_NVMWrite
  2796 ;; This function is called by:
  2797 ;;		_FRAME_DeviceReset
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text19
  2802  000CC8                     __ptext19:
  2803                           	opt callstack 0
  2804  000CC8                     _WriteDataToEEPROM:
  2805                           	opt callstack 22
  2806                           
  2807                           ;FRAME.c: 421:     NVMWrite(&NeightAdress1,4,2);
  2808                           
  2809                           ;incstack = 0
  2810  000CC8  0E57               	movlw	low _NeightAdress1
  2811  000CCA  6E09               	movwf	NVMWrite@source,c
  2812  000CCC  0E00               	movlw	high _NeightAdress1
  2813  000CCE  6E0A               	movwf	NVMWrite@source+1,c
  2814  000CD0  0E00               	movlw	0
  2815  000CD2  6E0C               	movwf	NVMWrite@addr+1,c
  2816  000CD4  0E04               	movlw	4
  2817  000CD6  6E0B               	movwf	NVMWrite@addr,c
  2818  000CD8  0E00               	movlw	0
  2819  000CDA  6E0E               	movwf	NVMWrite@count+1,c
  2820  000CDC  0E02               	movlw	2
  2821  000CDE  6E0D               	movwf	NVMWrite@count,c
  2822  000CE0  ECD9  F00B         	call	_NVMWrite	;wreg free
  2823                           
  2824                           ;FRAME.c: 422:     NVMWrite(&NeightAdress2,7,2);
  2825  000CE4  0E55               	movlw	low _NeightAdress2
  2826  000CE6  6E09               	movwf	NVMWrite@source,c
  2827  000CE8  0E00               	movlw	high _NeightAdress2
  2828  000CEA  6E0A               	movwf	NVMWrite@source+1,c
  2829  000CEC  0E00               	movlw	0
  2830  000CEE  6E0C               	movwf	NVMWrite@addr+1,c
  2831  000CF0  0E07               	movlw	7
  2832  000CF2  6E0B               	movwf	NVMWrite@addr,c
  2833  000CF4  0E00               	movlw	0
  2834  000CF6  6E0E               	movwf	NVMWrite@count+1,c
  2835  000CF8  0E02               	movlw	2
  2836  000CFA  6E0D               	movwf	NVMWrite@count,c
  2837  000CFC  ECD9  F00B         	call	_NVMWrite	;wreg free
  2838                           
  2839                           ;FRAME.c: 423:     NVMWrite(&NeightAdress3,10,2);
  2840  000D00  0E4A               	movlw	low _NeightAdress3
  2841  000D02  6E09               	movwf	NVMWrite@source,c
  2842  000D04  0E00               	movlw	high _NeightAdress3
  2843  000D06  6E0A               	movwf	NVMWrite@source+1,c
  2844  000D08  0E00               	movlw	0
  2845  000D0A  6E0C               	movwf	NVMWrite@addr+1,c
  2846  000D0C  0E0A               	movlw	10
  2847  000D0E  6E0B               	movwf	NVMWrite@addr,c
  2848  000D10  0E00               	movlw	0
  2849  000D12  6E0E               	movwf	NVMWrite@count+1,c
  2850  000D14  0E02               	movlw	2
  2851  000D16  6E0D               	movwf	NVMWrite@count,c
  2852  000D18  ECD9  F00B         	call	_NVMWrite	;wreg free
  2853                           
  2854                           ;FRAME.c: 424:     NVMWrite(&NeightAdress4,13,2);
  2855  000D1C  0E48               	movlw	low _NeightAdress4
  2856  000D1E  6E09               	movwf	NVMWrite@source,c
  2857  000D20  0E00               	movlw	high _NeightAdress4
  2858  000D22  6E0A               	movwf	NVMWrite@source+1,c
  2859  000D24  0E00               	movlw	0
  2860  000D26  6E0C               	movwf	NVMWrite@addr+1,c
  2861  000D28  0E0D               	movlw	13
  2862  000D2A  6E0B               	movwf	NVMWrite@addr,c
  2863  000D2C  0E00               	movlw	0
  2864  000D2E  6E0E               	movwf	NVMWrite@count+1,c
  2865  000D30  0E02               	movlw	2
  2866  000D32  6E0D               	movwf	NVMWrite@count,c
  2867  000D34  ECD9  F00B         	call	_NVMWrite	;wreg free
  2868                           
  2869                           ;FRAME.c: 425:     NVMWrite(&NeightAdress5,16,2);
  2870  000D38  0E46               	movlw	low _NeightAdress5
  2871  000D3A  6E09               	movwf	NVMWrite@source,c
  2872  000D3C  0E00               	movlw	high _NeightAdress5
  2873  000D3E  6E0A               	movwf	NVMWrite@source+1,c
  2874  000D40  0E00               	movlw	0
  2875  000D42  6E0C               	movwf	NVMWrite@addr+1,c
  2876  000D44  0E10               	movlw	16
  2877  000D46  6E0B               	movwf	NVMWrite@addr,c
  2878  000D48  0E00               	movlw	0
  2879  000D4A  6E0E               	movwf	NVMWrite@count+1,c
  2880  000D4C  0E02               	movlw	2
  2881  000D4E  6E0D               	movwf	NVMWrite@count,c
  2882  000D50  ECD9  F00B         	call	_NVMWrite	;wreg free
  2883                           
  2884                           ;FRAME.c: 426:     NVMWrite(&NeightAdress6,19,2);
  2885  000D54  0E44               	movlw	low _NeightAdress6
  2886  000D56  6E09               	movwf	NVMWrite@source,c
  2887  000D58  0E00               	movlw	high _NeightAdress6
  2888  000D5A  6E0A               	movwf	NVMWrite@source+1,c
  2889  000D5C  0E00               	movlw	0
  2890  000D5E  6E0C               	movwf	NVMWrite@addr+1,c
  2891  000D60  0E13               	movlw	19
  2892  000D62  6E0B               	movwf	NVMWrite@addr,c
  2893  000D64  0E00               	movlw	0
  2894  000D66  6E0E               	movwf	NVMWrite@count+1,c
  2895  000D68  0E02               	movlw	2
  2896  000D6A  6E0D               	movwf	NVMWrite@count,c
  2897  000D6C  ECD9  F00B         	call	_NVMWrite	;wreg free
  2898                           
  2899                           ;FRAME.c: 427:     NVMWrite(&NeightAdress7,22,2);
  2900  000D70  0E42               	movlw	low _NeightAdress7
  2901  000D72  6E09               	movwf	NVMWrite@source,c
  2902  000D74  0E00               	movlw	high _NeightAdress7
  2903  000D76  6E0A               	movwf	NVMWrite@source+1,c
  2904  000D78  0E00               	movlw	0
  2905  000D7A  6E0C               	movwf	NVMWrite@addr+1,c
  2906  000D7C  0E16               	movlw	22
  2907  000D7E  6E0B               	movwf	NVMWrite@addr,c
  2908  000D80  0E00               	movlw	0
  2909  000D82  6E0E               	movwf	NVMWrite@count+1,c
  2910  000D84  0E02               	movlw	2
  2911  000D86  6E0D               	movwf	NVMWrite@count,c
  2912  000D88  ECD9  F00B         	call	_NVMWrite	;wreg free
  2913                           
  2914                           ;FRAME.c: 428:     NVMWrite(&NeightAdress8,25,2);
  2915  000D8C  0E40               	movlw	low _NeightAdress8
  2916  000D8E  6E09               	movwf	NVMWrite@source,c
  2917  000D90  0E00               	movlw	high _NeightAdress8
  2918  000D92  6E0A               	movwf	NVMWrite@source+1,c
  2919  000D94  0E00               	movlw	0
  2920  000D96  6E0C               	movwf	NVMWrite@addr+1,c
  2921  000D98  0E19               	movlw	25
  2922  000D9A  6E0B               	movwf	NVMWrite@addr,c
  2923  000D9C  0E00               	movlw	0
  2924  000D9E  6E0E               	movwf	NVMWrite@count+1,c
  2925  000DA0  0E02               	movlw	2
  2926  000DA2  6E0D               	movwf	NVMWrite@count,c
  2927  000DA4  ECD9  F00B         	call	_NVMWrite	;wreg free
  2928  000DA8  0012               	return		;funcret
  2929  000DAA                     __end_of_WriteDataToEEPROM:
  2930                           	opt callstack 0
  2931                           
  2932 ;; *************** function _NVMWrite *****************
  2933 ;; Defined at:
  2934 ;;		line 90 in file "EEPROM.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  source          2    8[COMRAM] PTR unsigned char 
  2937 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  2938 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  2939 ;;  addr            2   10[COMRAM] unsigned short 
  2940 ;;  count           2   12[COMRAM] unsigned short 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2952 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;Total ram usage:        6 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    4
  2959 ;; This function calls:
  2960 ;;		_WritetoEEPROM
  2961 ;; This function is called by:
  2962 ;;		_WriteDataToEEPROM
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text20
  2967  0017B2                     __ptext20:
  2968                           	opt callstack 0
  2969  0017B2                     _NVMWrite:
  2970                           	opt callstack 22
  2971                           
  2972                           ;EEPROM.c: 90: void NVMWrite(BYTE *source, WORD addr, WORD count);EEPROM.c: 91: {;EEPROM
      +                          .c: 92:     while(count > 0)
  2973                           
  2974                           ;incstack = 0
  2975  0017B2  D015               	goto	l3828
  2976  0017B4                     l936:
  2977  0017B4  B2A6               	btfsc	4006,1,c	;volsfr
  2978  0017B6  D7FE               	goto	l936
  2979                           
  2980                           ;EEPROM.c: 95:         WritetoEEPROM(addr++,*source);
  2981  0017B8  C00B  F006         	movff	NVMWrite@addr,WritetoEEPROM@Address
  2982  0017BC  C00C  F007         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  2983  0017C0  C009  FFD9         	movff	NVMWrite@source,fsr2l
  2984  0017C4  C00A  FFDA         	movff	NVMWrite@source+1,fsr2h
  2985  0017C8  50DF               	movf	indf2,w,c
  2986  0017CA  6E08               	movwf	WritetoEEPROM@Data,c
  2987  0017CC  EC45  F00C         	call	_WritetoEEPROM	;wreg free
  2988  0017D0  4A0B               	infsnz	NVMWrite@addr,f,c
  2989  0017D2  2A0C               	incf	NVMWrite@addr+1,f,c
  2990                           
  2991                           ;EEPROM.c: 96:         count--;
  2992  0017D4  060D               	decf	NVMWrite@count,f,c
  2993  0017D6  A0D8               	btfss	status,0,c
  2994  0017D8  060E               	decf	NVMWrite@count+1,f,c
  2995                           
  2996                           ;EEPROM.c: 97:         source++;
  2997  0017DA  4A09               	infsnz	NVMWrite@source,f,c
  2998  0017DC  2A0A               	incf	NVMWrite@source+1,f,c
  2999  0017DE                     l3828:
  3000                           
  3001                           ;EEPROM.c: 92:     while(count > 0)
  3002  0017DE  500D               	movf	NVMWrite@count,w,c
  3003  0017E0  100E               	iorwf	NVMWrite@count+1,w,c
  3004  0017E2  B4D8               	btfsc	status,2,c
  3005  0017E4  0012               	return	
  3006  0017E6  D7E6               	goto	l936
  3007  0017E8                     __end_of_NVMWrite:
  3008                           	opt callstack 0
  3009                           
  3010 ;; *************** function _WritetoEEPROM *****************
  3011 ;; Defined at:
  3012 ;;		line 61 in file "EEPROM.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  Address         2    5[COMRAM] unsigned short 
  3015 ;;  Data            1    7[COMRAM] unsigned char 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;Total ram usage:        3 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    3
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_NVMWrite
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text21
  3042  00188A                     __ptext21:
  3043                           	opt callstack 0
  3044  00188A                     _WritetoEEPROM:
  3045                           	opt callstack 22
  3046                           
  3047                           ;EEPROM.c: 61: static void WritetoEEPROM(WORD Address, BYTE Data);EEPROM.c: 62: {;EEPROM
      +                          .c: 63:     static BYTE GIE_Status;;EEPROM.c: 65:     EEADRH = (BYTE)(Address>>8);
  3048                           
  3049                           ;incstack = 0
  3050  00188A  5007               	movf	WritetoEEPROM@Address+1,w,c
  3051  00188C  6EAA               	movwf	4010,c	;volatile
  3052                           
  3053                           ;EEPROM.c: 66:     EEADR = (BYTE)Address;
  3054  00188E  C006  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3055                           
  3056                           ;EEPROM.c: 67:     EEDATA = Data;
  3057  001892  C008  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3058                           
  3059                           ;EEPROM.c: 68:     EECON1bits.WREN = 1;
  3060  001896  84A6               	bsf	4006,2,c	;volsfr
  3061                           
  3062                           ;EEPROM.c: 69:     GIE_Status = INTCONbits.GIE;
  3063  001898  0E00               	movlw	0
  3064  00189A  BEF2               	btfsc	4082,7,c	;volatile
  3065  00189C  0E01               	movlw	1
  3066  00189E  6E36               	movwf	WritetoEEPROM@GIE_Status,c
  3067                           
  3068                           ;EEPROM.c: 70:     INTCONbits.GIE = 0;
  3069  0018A0  9EF2               	bcf	4082,7,c	;volatile
  3070                           
  3071                           ;EEPROM.c: 71:     EECON2 = 0x55;
  3072  0018A2  0E55               	movlw	85
  3073  0018A4  6EA7               	movwf	4007,c	;volsfr
  3074                           
  3075                           ;EEPROM.c: 72:     EECON2 = 0xAA;
  3076  0018A6  0EAA               	movlw	170
  3077  0018A8  6EA7               	movwf	4007,c	;volsfr
  3078                           
  3079                           ;EEPROM.c: 73:     EECON1bits.WR = 1;
  3080  0018AA  82A6               	bsf	4006,1,c	;volsfr
  3081                           
  3082                           ;EEPROM.c: 74:     INTCONbits.GIE = GIE_Status;
  3083  0018AC  B036               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3084  0018AE  D002               	bra	u1955
  3085  0018B0  9EF2               	bcf	4082,7,c	;volatile
  3086  0018B2  D001               	bra	u1956
  3087  0018B4                     u1955:
  3088  0018B4  8EF2               	bsf	4082,7,c	;volatile
  3089  0018B6                     u1956:
  3090                           
  3091                           ;EEPROM.c: 75:     EECON1bits.WREN = 0;
  3092  0018B6  94A6               	bcf	4006,2,c	;volsfr
  3093  0018B8                     l919:
  3094  0018B8  B2A6               	btfsc	4006,1,c	;volsfr
  3095  0018BA  D7FE               	goto	l919
  3096  0018BC  0012               	return	
  3097  0018BE                     __end_of_WritetoEEPROM:
  3098                           	opt callstack 0
  3099                           
  3100 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3101 ;; Defined at:
  3102 ;;		line 328 in file "FRAME.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  message         2    5[COMRAM] PTR struct .
  3105 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;Total ram usage:        3 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    3
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_FRAME_DeviceReset
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text22
  3132  001518                     __ptext22:
  3133                           	opt callstack 0
  3134  001518                     _FRAME_DataUpdateAndChangeOption:
  3135                           	opt callstack 24
  3136                           
  3137                           ;FRAME.c: 328: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 329: {
      +                          ;FRAME.c: 331:     Dane->rokU16 = message->data[4];
  3138                           
  3139                           ;incstack = 0
  3140  001518  EE20 F00C          	lfsr	2,12
  3141  00151C  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3142  00151E  26D9               	addwf	fsr2l,f,c
  3143  001520  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3144  001522  22DA               	addwfc	fsr2h,f,c
  3145  001524  50DF               	movf	indf2,w,c
  3146  001526  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3147  001528  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3148  00152A  6E36               	movwf	54,c
  3149  00152C  6A37               	clrf	55,c
  3150                           
  3151                           ;FRAME.c: 332:     Dane->miesiacU16 = message->data[5];
  3152  00152E  EE20 F00D          	lfsr	2,13
  3153  001532  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3154  001534  26D9               	addwf	fsr2l,f,c
  3155  001536  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3156  001538  22DA               	addwfc	fsr2h,f,c
  3157  00153A  50DF               	movf	indf2,w,c
  3158  00153C  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3159  00153E  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3160  001540  6E38               	movwf	56,c
  3161  001542  6A39               	clrf	57,c
  3162                           
  3163                           ;FRAME.c: 333:     Dane->dzienU16 = message->data[6];
  3164  001544  EE20 F00E          	lfsr	2,14
  3165  001548  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3166  00154A  26D9               	addwf	fsr2l,f,c
  3167  00154C  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3168  00154E  22DA               	addwfc	fsr2h,f,c
  3169  001550  50DF               	movf	indf2,w,c
  3170  001552  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3171  001554  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3172  001556  6E3A               	movwf	58,c
  3173  001558  6A3B               	clrf	59,c
  3174                           
  3175                           ;FRAME.c: 334:     Dane->godzinaU16 = message->data[7];
  3176  00155A  EE20 F00F          	lfsr	2,15
  3177  00155E  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3178  001560  26D9               	addwf	fsr2l,f,c
  3179  001562  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3180  001564  22DA               	addwfc	fsr2h,f,c
  3181  001566  50DF               	movf	indf2,w,c
  3182  001568  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3183  00156A  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3184  00156C  6E3C               	movwf	60,c
  3185  00156E  6A3D               	clrf	61,c
  3186  001570  0012               	return		;funcret
  3187  001572                     __end_of_FRAME_DataUpdateAndChangeOption:
  3188                           	opt callstack 0
  3189                           
  3190 ;; *************** function _FRAME_AxisStatus *****************
  3191 ;; Defined at:
  3192 ;;		line 297 in file "FRAME.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  message         2    5[COMRAM] PTR struct .
  3195 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  i               2    0        unsigned short 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3210 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3211 ;;Total ram usage:        3 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_FRAME_HandleCanFrame
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text23
  3222  0017E8                     __ptext23:
  3223                           	opt callstack 0
  3224  0017E8                     _FRAME_AxisStatus:
  3225                           	opt callstack 25
  3226                           
  3227                           ;FRAME.c: 297: static void FRAME_AxisStatus(mID *message);FRAME.c: 298: {;FRAME.c: 299: 
      +                              WORD i;;FRAME.c: 301:     if(message->message_type == 0x02)
  3228                           
  3229                           ;incstack = 0
  3230  0017E8  EE20 F001          	lfsr	2,1
  3231  0017EC  5006               	movf	FRAME_AxisStatus@message,w,c
  3232  0017EE  26D9               	addwf	fsr2l,f,c
  3233  0017F0  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3234  0017F2  22DA               	addwfc	fsr2h,f,c
  3235  0017F4  0E02               	movlw	2
  3236  0017F6  18DE               	xorwf	postinc2,w,c
  3237  0017F8  A4D8               	btfss	status,2,c
  3238  0017FA  0012               	return	
  3239                           
  3240                           ;FRAME.c: 302:     {;FRAME.c: 303:         message->data_length = 1;
  3241  0017FC  EE20 F010          	lfsr	2,16
  3242  001800  5006               	movf	FRAME_AxisStatus@message,w,c
  3243  001802  26D9               	addwf	fsr2l,f,c
  3244  001804  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3245  001806  22DA               	addwfc	fsr2h,f,c
  3246  001808  0E01               	movlw	1
  3247  00180A  6EDF               	movwf	indf2,c
  3248                           
  3249                           ;FRAME.c: 314:         message->data[0] = 0xFF;
  3250  00180C  EE20 F008          	lfsr	2,8
  3251  001810  5006               	movf	FRAME_AxisStatus@message,w,c
  3252  001812  26D9               	addwf	fsr2l,f,c
  3253  001814  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3254  001816  22DA               	addwfc	fsr2h,f,c
  3255  001818  0EFF               	movlw	255
  3256  00181A  6EDF               	movwf	indf2,c
  3257                           
  3258                           ;FRAME.c: 315:     }
  3259  00181C  0012               	return		;funcret
  3260  00181E                     __end_of_FRAME_AxisStatus:
  3261                           	opt callstack 0
  3262                           
  3263 ;; *************** function _FRAME_AveragingTimes *****************
  3264 ;; Defined at:
  3265 ;;		line 238 in file "FRAME.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  message         2    5[COMRAM] PTR struct .
  3268 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;Total ram usage:        3 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    3
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_FRAME_HandleCanFrame
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text24
  3295  00181E                     __ptext24:
  3296                           	opt callstack 0
  3297  00181E                     _FRAME_AveragingTimes:
  3298                           	opt callstack 25
  3299                           
  3300                           ;FRAME.c: 238: static void FRAME_AveragingTimes(mID *message);FRAME.c: 239: {;FRAME.c: 2
      +                          40:     if(message->message_type == 0x02)
  3301                           
  3302                           ;incstack = 0
  3303  00181E  EE20 F001          	lfsr	2,1
  3304  001822  5006               	movf	FRAME_AveragingTimes@message,w,c
  3305  001824  26D9               	addwf	fsr2l,f,c
  3306  001826  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3307  001828  22DA               	addwfc	fsr2h,f,c
  3308  00182A  0E02               	movlw	2
  3309  00182C  18DE               	xorwf	postinc2,w,c
  3310  00182E  A4D8               	btfss	status,2,c
  3311  001830  0012               	return	
  3312                           
  3313                           ;FRAME.c: 241:     {;FRAME.c: 242:         message->data_length = 1;
  3314  001832  EE20 F010          	lfsr	2,16
  3315  001836  5006               	movf	FRAME_AveragingTimes@message,w,c
  3316  001838  26D9               	addwf	fsr2l,f,c
  3317  00183A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3318  00183C  22DA               	addwfc	fsr2h,f,c
  3319  00183E  0E01               	movlw	1
  3320  001840  6EDF               	movwf	indf2,c
  3321                           
  3322                           ;FRAME.c: 250:         message->data[0] = 0xFF;
  3323  001842  EE20 F008          	lfsr	2,8
  3324  001846  5006               	movf	FRAME_AveragingTimes@message,w,c
  3325  001848  26D9               	addwf	fsr2l,f,c
  3326  00184A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3327  00184C  22DA               	addwfc	fsr2h,f,c
  3328  00184E  0EFF               	movlw	255
  3329  001850  6EDF               	movwf	indf2,c
  3330                           
  3331                           ;FRAME.c: 251:     }
  3332  001852  0012               	return		;funcret
  3333  001854                     __end_of_FRAME_AveragingTimes:
  3334                           	opt callstack 0
  3335                           
  3336 ;; *************** function _FRAME_AnalogValue *****************
  3337 ;; Defined at:
  3338 ;;		line 507 in file "FRAME.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  message         2    5[COMRAM] PTR struct .
  3341 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3342 ;;  set             2    7[COMRAM] unsigned short 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  i               2    0        unsigned short 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		None
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;Total ram usage:        4 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    3
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_FRAME_HandleCanFrame
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text25
  3369  001ADA                     __ptext25:
  3370                           	opt callstack 0
  3371  001ADA                     _FRAME_AnalogValue:
  3372                           	opt callstack 25
  3373                           
  3374                           ;incstack = 0
  3375  001ADA  0012               	return		;funcret
  3376  001ADC                     __end_of_FRAME_AnalogValue:
  3377                           	opt callstack 0
  3378                           
  3379 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3380 ;; Defined at:
  3381 ;;		line 555 in file "FRAME.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  message         2    5[COMRAM] PTR struct .
  3384 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3385 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  kier            2   13[COMRAM] unsigned short 
  3388 ;;  it              2    0        unsigned short 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3402 ;;Total ram usage:       10 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    4
  3405 ;; This function calls:
  3406 ;;		_CAN_SetupFilter_Ne
  3407 ;; This function is called by:
  3408 ;;		_FRAME_HandleCanFrame
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text26
  3413  000062                     __ptext26:
  3414                           	opt callstack 0
  3415  000062                     _FRAME_AdressOfNeighbors:
  3416                           	opt callstack 24
  3417                           
  3418                           ;FRAME.c: 555: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          556: {;FRAME.c: 557:     WORD it;;FRAME.c: 560:     WORD kier = (nrRamki-0x10);
  3419                           
  3420                           ;incstack = 0
  3421  000062  0EF0               	movlw	240
  3422  000064  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3423  000066  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  3424  000068  0EFF               	movlw	255
  3425  00006A  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3426  00006C  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3427                           
  3428                           ;FRAME.c: 561:     if(message->message_type == 0x02)
  3429  00006E  EE20 F001          	lfsr	2,1
  3430  000072  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3431  000074  26D9               	addwf	fsr2l,f,c
  3432  000076  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3433  000078  22DA               	addwfc	fsr2h,f,c
  3434  00007A  0E02               	movlw	2
  3435  00007C  18DE               	xorwf	postinc2,w,c
  3436  00007E  A4D8               	btfss	status,2,c
  3437  000080  D08E               	goto	l4384
  3438                           
  3439                           ;FRAME.c: 562:     {;FRAME.c: 564:         message->data_length = 8;
  3440  000082  EE20 F010          	lfsr	2,16
  3441  000086  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3442  000088  26D9               	addwf	fsr2l,f,c
  3443  00008A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3444  00008C  22DA               	addwfc	fsr2h,f,c
  3445  00008E  0E08               	movlw	8
  3446  000090  6EDF               	movwf	indf2,c
  3447                           
  3448                           ;FRAME.c: 566:         if(kier == 0)
  3449  000092  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3450  000094  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3451  000096  A4D8               	btfss	status,2,c
  3452  000098  D041               	goto	l4382
  3453                           
  3454                           ;FRAME.c: 567:         {;FRAME.c: 568:         message->data[0] = (NeightAdress1>> 8);
  3455  00009A  EE20 F008          	lfsr	2,8
  3456  00009E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3457  0000A0  26D9               	addwf	fsr2l,f,c
  3458  0000A2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3459  0000A4  22DA               	addwfc	fsr2h,f,c
  3460  0000A6  5058               	movf	_NeightAdress1+1,w,c	;volatile
  3461  0000A8  6EDF               	movwf	indf2,c
  3462                           
  3463                           ;FRAME.c: 569:         message->data[1] = NeightAdress1 & 0b11111111;
  3464  0000AA  EE20 F009          	lfsr	2,9
  3465  0000AE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3466  0000B0  26D9               	addwf	fsr2l,f,c
  3467  0000B2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3468  0000B4  22DA               	addwfc	fsr2h,f,c
  3469  0000B6  C057  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3470                           
  3471                           ;FRAME.c: 570:         message->data[2] = (NeightAdress2>> 8);
  3472  0000BA  EE20 F00A          	lfsr	2,10
  3473  0000BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3474  0000C0  26D9               	addwf	fsr2l,f,c
  3475  0000C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3476  0000C4  22DA               	addwfc	fsr2h,f,c
  3477  0000C6  5056               	movf	_NeightAdress2+1,w,c	;volatile
  3478  0000C8  6EDF               	movwf	indf2,c
  3479                           
  3480                           ;FRAME.c: 571:         message->data[3] = NeightAdress2 & 0b11111111;
  3481  0000CA  EE20 F00B          	lfsr	2,11
  3482  0000CE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3483  0000D0  26D9               	addwf	fsr2l,f,c
  3484  0000D2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3485  0000D4  22DA               	addwfc	fsr2h,f,c
  3486  0000D6  C055  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3487                           
  3488                           ;FRAME.c: 572:         message->data[4] = (NeightAdress3>> 8);
  3489  0000DA  EE20 F00C          	lfsr	2,12
  3490  0000DE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3491  0000E0  26D9               	addwf	fsr2l,f,c
  3492  0000E2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3493  0000E4  22DA               	addwfc	fsr2h,f,c
  3494  0000E6  504B               	movf	_NeightAdress3+1,w,c	;volatile
  3495  0000E8  6EDF               	movwf	indf2,c
  3496                           
  3497                           ;FRAME.c: 573:         message->data[5] = NeightAdress3 & 0b11111111;
  3498  0000EA  EE20 F00D          	lfsr	2,13
  3499  0000EE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3500  0000F0  26D9               	addwf	fsr2l,f,c
  3501  0000F2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3502  0000F4  22DA               	addwfc	fsr2h,f,c
  3503  0000F6  C04A  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3504                           
  3505                           ;FRAME.c: 574:         message->data[6] = (NeightAdress4>> 8);
  3506  0000FA  EE20 F00E          	lfsr	2,14
  3507  0000FE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3508  000100  26D9               	addwf	fsr2l,f,c
  3509  000102  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3510  000104  22DA               	addwfc	fsr2h,f,c
  3511  000106  5049               	movf	_NeightAdress4+1,w,c	;volatile
  3512  000108  6EDF               	movwf	indf2,c
  3513                           
  3514                           ;FRAME.c: 575:         message->data[7] = NeightAdress4 & 0b11111111;
  3515  00010A  EE20 F00F          	lfsr	2,15
  3516  00010E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3517  000110  26D9               	addwf	fsr2l,f,c
  3518  000112  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3519  000114  22DA               	addwfc	fsr2h,f,c
  3520  000116  C048  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3521                           
  3522                           ;FRAME.c: 576:         }
  3523  00011A  0012               	return	
  3524  00011C                     l4382:
  3525                           
  3526                           ;FRAME.c: 578:         {;FRAME.c: 579:         message->data[0] = (NeightAdress5>> 8);
  3527  00011C  EE20 F008          	lfsr	2,8
  3528  000120  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3529  000122  26D9               	addwf	fsr2l,f,c
  3530  000124  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3531  000126  22DA               	addwfc	fsr2h,f,c
  3532  000128  5047               	movf	_NeightAdress5+1,w,c	;volatile
  3533  00012A  6EDF               	movwf	indf2,c
  3534                           
  3535                           ;FRAME.c: 580:         message->data[1] = NeightAdress5 & 0b11111111;
  3536  00012C  EE20 F009          	lfsr	2,9
  3537  000130  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3538  000132  26D9               	addwf	fsr2l,f,c
  3539  000134  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3540  000136  22DA               	addwfc	fsr2h,f,c
  3541  000138  C046  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3542                           
  3543                           ;FRAME.c: 581:         message->data[2] = (NeightAdress6>> 8);
  3544  00013C  EE20 F00A          	lfsr	2,10
  3545  000140  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3546  000142  26D9               	addwf	fsr2l,f,c
  3547  000144  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3548  000146  22DA               	addwfc	fsr2h,f,c
  3549  000148  5045               	movf	_NeightAdress6+1,w,c	;volatile
  3550  00014A  6EDF               	movwf	indf2,c
  3551                           
  3552                           ;FRAME.c: 582:         message->data[3] = NeightAdress6 & 0b11111111;
  3553  00014C  EE20 F00B          	lfsr	2,11
  3554  000150  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3555  000152  26D9               	addwf	fsr2l,f,c
  3556  000154  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3557  000156  22DA               	addwfc	fsr2h,f,c
  3558  000158  C044  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3559                           
  3560                           ;FRAME.c: 583:         message->data[4] = (NeightAdress7>> 8);
  3561  00015C  EE20 F00C          	lfsr	2,12
  3562  000160  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3563  000162  26D9               	addwf	fsr2l,f,c
  3564  000164  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3565  000166  22DA               	addwfc	fsr2h,f,c
  3566  000168  5043               	movf	_NeightAdress7+1,w,c	;volatile
  3567  00016A  6EDF               	movwf	indf2,c
  3568                           
  3569                           ;FRAME.c: 584:         message->data[5] = NeightAdress7 & 0b11111111;
  3570  00016C  EE20 F00D          	lfsr	2,13
  3571  000170  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3572  000172  26D9               	addwf	fsr2l,f,c
  3573  000174  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3574  000176  22DA               	addwfc	fsr2h,f,c
  3575  000178  C042  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3576                           
  3577                           ;FRAME.c: 585:         message->data[6] = (NeightAdress8>> 8);
  3578  00017C  EE20 F00E          	lfsr	2,14
  3579  000180  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3580  000182  26D9               	addwf	fsr2l,f,c
  3581  000184  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3582  000186  22DA               	addwfc	fsr2h,f,c
  3583  000188  5041               	movf	_NeightAdress8+1,w,c	;volatile
  3584  00018A  6EDF               	movwf	indf2,c
  3585                           
  3586                           ;FRAME.c: 586:         message->data[7] = NeightAdress8 & 0b11111111;
  3587  00018C  EE20 F00F          	lfsr	2,15
  3588  000190  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3589  000192  26D9               	addwf	fsr2l,f,c
  3590  000194  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3591  000196  22DA               	addwfc	fsr2h,f,c
  3592  000198  C040  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3593  00019C  0012               	return	
  3594  00019E                     l4384:
  3595                           
  3596                           ;FRAME.c: 593:     {;FRAME.c: 596:         if(kier == 0)
  3597  00019E  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3598  0001A0  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3599  0001A2  A4D8               	btfss	status,2,c
  3600  0001A4  D063               	goto	l4390
  3601                           
  3602                           ;FRAME.c: 597:         {;FRAME.c: 598:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3603  0001A6  EE20 F008          	lfsr	2,8
  3604  0001AA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3605  0001AC  26D9               	addwf	fsr2l,f,c
  3606  0001AE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3607  0001B0  22DA               	addwfc	fsr2h,f,c
  3608  0001B2  50DF               	movf	indf2,w,c
  3609  0001B4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3610  0001B6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3611  0001B8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3612  0001BA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3613  0001BC  EE20 F009          	lfsr	2,9
  3614  0001C0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3615  0001C2  26D9               	addwf	fsr2l,f,c
  3616  0001C4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3617  0001C6  22DA               	addwfc	fsr2h,f,c
  3618  0001C8  50DF               	movf	indf2,w,c
  3619  0001CA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3620  0001CC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3621  0001CE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3622  0001D0  6E57               	movwf	_NeightAdress1,c	;volatile
  3623  0001D2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3624  0001D4  6E58               	movwf	_NeightAdress1+1,c	;volatile
  3625                           
  3626                           ;FRAME.c: 599:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3627  0001D6  EE20 F00A          	lfsr	2,10
  3628  0001DA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3629  0001DC  26D9               	addwf	fsr2l,f,c
  3630  0001DE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3631  0001E0  22DA               	addwfc	fsr2h,f,c
  3632  0001E2  50DF               	movf	indf2,w,c
  3633  0001E4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3634  0001E6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3635  0001E8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3636  0001EA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3637  0001EC  EE20 F00B          	lfsr	2,11
  3638  0001F0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3639  0001F2  26D9               	addwf	fsr2l,f,c
  3640  0001F4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3641  0001F6  22DA               	addwfc	fsr2h,f,c
  3642  0001F8  50DF               	movf	indf2,w,c
  3643  0001FA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3644  0001FC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3645  0001FE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3646  000200  6E55               	movwf	_NeightAdress2,c	;volatile
  3647  000202  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3648  000204  6E56               	movwf	_NeightAdress2+1,c	;volatile
  3649                           
  3650                           ;FRAME.c: 600:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3651  000206  EE20 F00C          	lfsr	2,12
  3652  00020A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3653  00020C  26D9               	addwf	fsr2l,f,c
  3654  00020E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3655  000210  22DA               	addwfc	fsr2h,f,c
  3656  000212  50DF               	movf	indf2,w,c
  3657  000214  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3658  000216  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3659  000218  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3660  00021A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3661  00021C  EE20 F00D          	lfsr	2,13
  3662  000220  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3663  000222  26D9               	addwf	fsr2l,f,c
  3664  000224  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3665  000226  22DA               	addwfc	fsr2h,f,c
  3666  000228  50DF               	movf	indf2,w,c
  3667  00022A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3668  00022C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3669  00022E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3670  000230  6E4A               	movwf	_NeightAdress3,c	;volatile
  3671  000232  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3672  000234  6E4B               	movwf	_NeightAdress3+1,c	;volatile
  3673                           
  3674                           ;FRAME.c: 601:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3675  000236  EE20 F00E          	lfsr	2,14
  3676  00023A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3677  00023C  26D9               	addwf	fsr2l,f,c
  3678  00023E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3679  000240  22DA               	addwfc	fsr2h,f,c
  3680  000242  50DF               	movf	indf2,w,c
  3681  000244  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3682  000246  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3683  000248  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3684  00024A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3685  00024C  EE20 F00F          	lfsr	2,15
  3686  000250  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3687  000252  26D9               	addwf	fsr2l,f,c
  3688  000254  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3689  000256  22DA               	addwfc	fsr2h,f,c
  3690  000258  50DF               	movf	indf2,w,c
  3691  00025A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3692  00025C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3693  00025E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3694  000260  6E48               	movwf	_NeightAdress4,c	;volatile
  3695  000262  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3696  000264  6E49               	movwf	_NeightAdress4+1,c	;volatile
  3697  000266                     l4388:
  3698                           
  3699                           ;FRAME.c: 602:          CAN_SetupFilter_Ne();
  3700  000266  EC52  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  3701                           
  3702                           ;FRAME.c: 605:         }
  3703  00026A  0012               	return	
  3704  00026C                     l4390:
  3705                           
  3706                           ;FRAME.c: 607:         {;FRAME.c: 608:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3707  00026C  EE20 F008          	lfsr	2,8
  3708  000270  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3709  000272  26D9               	addwf	fsr2l,f,c
  3710  000274  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3711  000276  22DA               	addwfc	fsr2h,f,c
  3712  000278  50DF               	movf	indf2,w,c
  3713  00027A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3714  00027C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3715  00027E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3716  000280  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3717  000282  EE20 F009          	lfsr	2,9
  3718  000286  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3719  000288  26D9               	addwf	fsr2l,f,c
  3720  00028A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3721  00028C  22DA               	addwfc	fsr2h,f,c
  3722  00028E  50DF               	movf	indf2,w,c
  3723  000290  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3724  000292  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3725  000294  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3726  000296  6E46               	movwf	_NeightAdress5,c	;volatile
  3727  000298  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3728  00029A  6E47               	movwf	_NeightAdress5+1,c	;volatile
  3729                           
  3730                           ;FRAME.c: 609:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3731  00029C  EE20 F00A          	lfsr	2,10
  3732  0002A0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3733  0002A2  26D9               	addwf	fsr2l,f,c
  3734  0002A4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3735  0002A6  22DA               	addwfc	fsr2h,f,c
  3736  0002A8  50DF               	movf	indf2,w,c
  3737  0002AA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3738  0002AC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3739  0002AE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3740  0002B0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3741  0002B2  EE20 F00B          	lfsr	2,11
  3742  0002B6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3743  0002B8  26D9               	addwf	fsr2l,f,c
  3744  0002BA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3745  0002BC  22DA               	addwfc	fsr2h,f,c
  3746  0002BE  50DF               	movf	indf2,w,c
  3747  0002C0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3748  0002C2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3749  0002C4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3750  0002C6  6E44               	movwf	_NeightAdress6,c	;volatile
  3751  0002C8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3752  0002CA  6E45               	movwf	_NeightAdress6+1,c	;volatile
  3753                           
  3754                           ;FRAME.c: 610:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3755  0002CC  EE20 F00C          	lfsr	2,12
  3756  0002D0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3757  0002D2  26D9               	addwf	fsr2l,f,c
  3758  0002D4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3759  0002D6  22DA               	addwfc	fsr2h,f,c
  3760  0002D8  50DF               	movf	indf2,w,c
  3761  0002DA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3762  0002DC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3763  0002DE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3764  0002E0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3765  0002E2  EE20 F00D          	lfsr	2,13
  3766  0002E6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3767  0002E8  26D9               	addwf	fsr2l,f,c
  3768  0002EA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3769  0002EC  22DA               	addwfc	fsr2h,f,c
  3770  0002EE  50DF               	movf	indf2,w,c
  3771  0002F0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3772  0002F2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3773  0002F4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3774  0002F6  6E42               	movwf	_NeightAdress7,c	;volatile
  3775  0002F8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3776  0002FA  6E43               	movwf	_NeightAdress7+1,c	;volatile
  3777                           
  3778                           ;FRAME.c: 611:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3779  0002FC  EE20 F00E          	lfsr	2,14
  3780  000300  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3781  000302  26D9               	addwf	fsr2l,f,c
  3782  000304  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3783  000306  22DA               	addwfc	fsr2h,f,c
  3784  000308  50DF               	movf	indf2,w,c
  3785  00030A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3786  00030C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3787  00030E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3788  000310  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3789  000312  EE20 F00F          	lfsr	2,15
  3790  000316  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3791  000318  26D9               	addwf	fsr2l,f,c
  3792  00031A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3793  00031C  22DA               	addwfc	fsr2h,f,c
  3794  00031E  50DF               	movf	indf2,w,c
  3795  000320  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3796  000322  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3797  000324  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3798  000326  6E40               	movwf	_NeightAdress8,c	;volatile
  3799  000328  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3800  00032A  6E41               	movwf	_NeightAdress8+1,c	;volatile
  3801  00032C  D79C               	goto	l4388
  3802  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3803                           	opt callstack 0
  3804                           
  3805 ;; *************** function _FRAME_AccelerometerStatus *****************
  3806 ;; Defined at:
  3807 ;;		line 161 in file "FRAME.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  message         2    7[COMRAM] PTR struct .
  3810 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3826 ;;Total ram usage:        3 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    4
  3829 ;; This function calls:
  3830 ;;		_MOCK_Klikniecie_Spadek
  3831 ;;		_MOCK_PrzyspieszenieX
  3832 ;;		_MOCK_PrzyspieszenieY
  3833 ;;		_MOCK_PrzyspieszenieZ
  3834 ;; This function is called by:
  3835 ;;		_FRAME_HandleCanFrame
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text27
  3840  0012B0                     __ptext27:
  3841                           	opt callstack 0
  3842  0012B0                     _FRAME_AccelerometerStatus:
  3843                           	opt callstack 24
  3844                           
  3845                           ;FRAME.c: 161: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 162: {;FRAME
      +                          .c: 163:     if(message->message_type == 0x02)
  3846                           
  3847                           ;incstack = 0
  3848  0012B0  EE20 F001          	lfsr	2,1
  3849  0012B4  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3850  0012B6  26D9               	addwf	fsr2l,f,c
  3851  0012B8  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3852  0012BA  22DA               	addwfc	fsr2h,f,c
  3853  0012BC  0E02               	movlw	2
  3854  0012BE  18DE               	xorwf	postinc2,w,c
  3855  0012C0  A4D8               	btfss	status,2,c
  3856  0012C2  0012               	return	
  3857                           
  3858                           ;FRAME.c: 164:     {;FRAME.c: 165:         message->data_length = 4;
  3859  0012C4  EE20 F010          	lfsr	2,16
  3860  0012C8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3861  0012CA  26D9               	addwf	fsr2l,f,c
  3862  0012CC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3863  0012CE  22DA               	addwfc	fsr2h,f,c
  3864  0012D0  0E04               	movlw	4
  3865  0012D2  6EDF               	movwf	indf2,c
  3866                           
  3867                           ;FRAME.c: 169:         message->data[0] = MOCK_PrzyspieszenieX();
  3868  0012D4  EE20 F008          	lfsr	2,8
  3869  0012D8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3870  0012DA  26D9               	addwf	fsr2l,f,c
  3871  0012DC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3872  0012DE  22DA               	addwfc	fsr2h,f,c
  3873  0012E0  EC46  F00D         	call	_MOCK_PrzyspieszenieX	;wreg free
  3874  0012E4  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3875  0012E6  6EDF               	movwf	indf2,c
  3876                           
  3877                           ;FRAME.c: 170:         message->data[1] = MOCK_PrzyspieszenieY();
  3878  0012E8  EE20 F009          	lfsr	2,9
  3879  0012EC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3880  0012EE  26D9               	addwf	fsr2l,f,c
  3881  0012F0  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3882  0012F2  22DA               	addwfc	fsr2h,f,c
  3883  0012F4  EC41  F00D         	call	_MOCK_PrzyspieszenieY	;wreg free
  3884  0012F8  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3885  0012FA  6EDF               	movwf	indf2,c
  3886                           
  3887                           ;FRAME.c: 171:         message->data[2] = MOCK_PrzyspieszenieZ();
  3888  0012FC  EE20 F00A          	lfsr	2,10
  3889  001300  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3890  001302  26D9               	addwf	fsr2l,f,c
  3891  001304  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3892  001306  22DA               	addwfc	fsr2h,f,c
  3893  001308  EC3C  F00D         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3894  00130C  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3895  00130E  6EDF               	movwf	indf2,c
  3896                           
  3897                           ;FRAME.c: 172:         message->data[3] = MOCK_Klikniecie_Spadek();
  3898  001310  EE20 F00B          	lfsr	2,11
  3899  001314  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3900  001316  26D9               	addwf	fsr2l,f,c
  3901  001318  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3902  00131A  22DA               	addwfc	fsr2h,f,c
  3903  00131C  EC4B  F00D         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3904  001320  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3905  001322  6EDF               	movwf	indf2,c
  3906                           
  3907                           ;FRAME.c: 173:     }
  3908  001324  0012               	return		;funcret
  3909  001326                     __end_of_FRAME_AccelerometerStatus:
  3910                           	opt callstack 0
  3911                           
  3912 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3913 ;; Defined at:
  3914 ;;		line 72 in file "MOC_Funct.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2    5[COMRAM] unsigned int 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    3
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_FRAME_AccelerometerStatus
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text28
  3943  001A78                     __ptext28:
  3944                           	opt callstack 0
  3945  001A78                     _MOCK_PrzyspieszenieZ:
  3946                           	opt callstack 24
  3947                           
  3948                           ;MOC_Funct.c: 74:     return 0xFE;
  3949                           
  3950                           ;incstack = 0
  3951  001A78  0E00               	movlw	0
  3952  001A7A  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3953  001A7C  0EFE               	movlw	254
  3954  001A7E  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3955  001A80  0012               	return		;funcret
  3956  001A82                     __end_of_MOCK_PrzyspieszenieZ:
  3957                           	opt callstack 0
  3958                           
  3959 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3960 ;; Defined at:
  3961 ;;		line 68 in file "MOC_Funct.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  2    5[COMRAM] unsigned int 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;Total ram usage:        2 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    3
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_FRAME_AccelerometerStatus
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text29
  3990  001A82                     __ptext29:
  3991                           	opt callstack 0
  3992  001A82                     _MOCK_PrzyspieszenieY:
  3993                           	opt callstack 24
  3994                           
  3995                           ;MOC_Funct.c: 70:     return 0xFE;
  3996                           
  3997                           ;incstack = 0
  3998  001A82  0E00               	movlw	0
  3999  001A84  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  4000  001A86  0EFE               	movlw	254
  4001  001A88  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  4002  001A8A  0012               	return		;funcret
  4003  001A8C                     __end_of_MOCK_PrzyspieszenieY:
  4004                           	opt callstack 0
  4005                           
  4006 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4007 ;; Defined at:
  4008 ;;		line 63 in file "MOC_Funct.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2    5[COMRAM] unsigned int 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    3
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_FRAME_AccelerometerStatus
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text30
  4037  001A8C                     __ptext30:
  4038                           	opt callstack 0
  4039  001A8C                     _MOCK_PrzyspieszenieX:
  4040                           	opt callstack 24
  4041                           
  4042                           ;MOC_Funct.c: 65:     return 0xFE;
  4043                           
  4044                           ;incstack = 0
  4045  001A8C  0E00               	movlw	0
  4046  001A8E  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4047  001A90  0EFE               	movlw	254
  4048  001A92  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  4049  001A94  0012               	return		;funcret
  4050  001A96                     __end_of_MOCK_PrzyspieszenieX:
  4051                           	opt callstack 0
  4052                           
  4053 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4054 ;; Defined at:
  4055 ;;		line 76 in file "MOC_Funct.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  2    5[COMRAM] unsigned int 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;Total ram usage:        2 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    3
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_FRAME_AccelerometerStatus
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text31
  4084  001A96                     __ptext31:
  4085                           	opt callstack 0
  4086  001A96                     _MOCK_Klikniecie_Spadek:
  4087                           	opt callstack 24
  4088                           
  4089                           ;MOC_Funct.c: 78:     return 0b00000000;
  4090                           
  4091                           ;incstack = 0
  4092  001A96  0E00               	movlw	0
  4093  001A98  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4094  001A9A  0E00               	movlw	0
  4095  001A9C  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  4096  001A9E  0012               	return		;funcret
  4097  001AA0                     __end_of_MOCK_Klikniecie_Spadek:
  4098                           	opt callstack 0
  4099                           
  4100 ;; *************** function _CAN_SendFrame *****************
  4101 ;; Defined at:
  4102 ;;		line 246 in file "CAN.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  message         2   10[COMRAM] PTR struct .
  4105 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;Total ram usage:        5 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    4
  4124 ;; This function calls:
  4125 ;;		_CAN_MoveBuffIntoFrame
  4126 ;; This function is called by:
  4127 ;;		_FRAME_HandleCanFrame
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text32
  4132  0007B0                     __ptext32:
  4133                           	opt callstack 0
  4134  0007B0                     _CAN_SendFrame:
  4135                           	opt callstack 24
  4136                           
  4137                           ;CAN.c: 251:     {;CAN.c: 252:         ECANCON = 0x83;
  4138                           
  4139                           ;incstack = 0
  4140                           ;CAN.c: 246: void CAN_SendFrame(mID * message);CAN.c: 247: {;CAN.c: 250:     for(;;)
  4141  0007B0  0E83               	movlw	131
  4142  0007B2  6E77               	movwf	3959,c	;volatile
  4143                           
  4144                           ;CAN.c: 253:         if(!RXB0CONbits.FILHIT3)
  4145  0007B4  A660               	btfss	3936,3,c	;volatile
  4146  0007B6  D00A               	goto	l287
  4147                           
  4148                           ;CAN.c: 258:         ECANCON = 0x84;
  4149  0007B8  0E84               	movlw	132
  4150  0007BA  6E77               	movwf	3959,c	;volatile
  4151                           
  4152                           ;CAN.c: 259:         if(!RXB0CONbits.FILHIT3)
  4153  0007BC  A660               	btfss	3936,3,c	;volatile
  4154  0007BE  D006               	goto	l287
  4155                           
  4156                           ;CAN.c: 264:         ECANCON = 0x85;
  4157  0007C0  0E85               	movlw	133
  4158  0007C2  6E77               	movwf	3959,c	;volatile
  4159                           
  4160                           ;CAN.c: 265:         if(!RXB0CONbits.FILHIT3)
  4161  0007C4  A660               	btfss	3936,3,c	;volatile
  4162  0007C6  D002               	goto	l287
  4163  0007C8  D7F3               	goto	_CAN_SendFrame
  4164  0007CA                     l288:
  4165  0007CA  00FF               	reset		;# 
  4166  0007CC                     l287:
  4167                           
  4168                           ;CAN.c: 272:     while(COMSTATbits.TXWARN)
  4169  0007CC  B474               	btfsc	3956,2,c	;volatile
  4170  0007CE  D7FD               	goto	l288
  4171                           
  4172                           ;CAN.c: 276:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4173  0007D0  0E00               	movlw	0
  4174  0007D2  0100               	movlb	0	; () banked
  4175  0007D4  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;CAN.c: 277:     RXB0EIDL = message->id.v[0];
  4179  0007D6  EE20 F004          	lfsr	2,4
  4180  0007DA  500B               	movf	CAN_SendFrame@message,w,c
  4181  0007DC  26D9               	addwf	fsr2l,f,c
  4182  0007DE  500C               	movf	CAN_SendFrame@message+1,w,c
  4183  0007E0  22DA               	addwfc	fsr2h,f,c
  4184  0007E2  50DF               	movf	indf2,w,c
  4185  0007E4  6E64               	movwf	3940,c	;volatile
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;CAN.c: 278:     RXB0EIDH = message->id.v[1];
  4189  0007E6  EE20 F005          	lfsr	2,5
  4190  0007EA  500B               	movf	CAN_SendFrame@message,w,c
  4191  0007EC  26D9               	addwf	fsr2l,f,c
  4192  0007EE  500C               	movf	CAN_SendFrame@message+1,w,c
  4193  0007F0  22DA               	addwfc	fsr2h,f,c
  4194  0007F2  50DF               	movf	indf2,w,c
  4195  0007F4  6E63               	movwf	3939,c	;volatile
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;CAN.c: 279:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4199  0007F6  EE20 F006          	lfsr	2,6
  4200  0007FA  500B               	movf	CAN_SendFrame@message,w,c
  4201  0007FC  26D9               	addwf	fsr2l,f,c
  4202  0007FE  500C               	movf	CAN_SendFrame@message+1,w,c
  4203  000800  22DA               	addwfc	fsr2h,f,c
  4204  000802  50DF               	movf	indf2,w,c
  4205  000804  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4206  000806  0E03               	movlw	3
  4207  000808  160D               	andwf	??_CAN_SendFrame,f,c
  4208  00080A  EE20 F006          	lfsr	2,6
  4209  00080E  500B               	movf	CAN_SendFrame@message,w,c
  4210  000810  26D9               	addwf	fsr2l,f,c
  4211  000812  500C               	movf	CAN_SendFrame@message+1,w,c
  4212  000814  22DA               	addwfc	fsr2h,f,c
  4213  000816  50DF               	movf	indf2,w,c
  4214  000818  0BFC               	andlw	252
  4215  00081A  0D08               	mullw	8
  4216  00081C  50F3               	movf	prodl,w,c
  4217  00081E  100D               	iorwf	??_CAN_SendFrame,w,c
  4218  000820  6E62               	movwf	3938,c	;volatile
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;CAN.c: 280:     RXB0SIDLbits.EXID = 1;
  4222  000822  8662               	bsf	3938,3,c	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;CAN.c: 281:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4226  000824  EE20 F006          	lfsr	2,6
  4227  000828  500B               	movf	CAN_SendFrame@message,w,c
  4228  00082A  26D9               	addwf	fsr2l,f,c
  4229  00082C  500C               	movf	CAN_SendFrame@message+1,w,c
  4230  00082E  22DA               	addwfc	fsr2h,f,c
  4231  000830  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  4232  000834  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  4233  000838  0E05               	movlw	5
  4234  00083A  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4235  00083C                     u2375:
  4236  00083C  90D8               	bcf	status,0,c
  4237  00083E  320E               	rrcf	??_CAN_SendFrame+1,f,c
  4238  000840  320D               	rrcf	??_CAN_SendFrame,f,c
  4239  000842  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4240  000844  D7FB               	goto	u2375
  4241  000846  500D               	movf	??_CAN_SendFrame,w,c
  4242  000848  6E61               	movwf	3937,c	;volatile
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;CAN.c: 283:     RXB0DLC = 0;
  4246  00084A  0E00               	movlw	0
  4247  00084C  6E65               	movwf	3941,c	;volatile
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;CAN.c: 285:     if(message->message_type==0x02)
  4251  00084E  EE20 F001          	lfsr	2,1
  4252  000852  500B               	movf	CAN_SendFrame@message,w,c
  4253  000854  26D9               	addwf	fsr2l,f,c
  4254  000856  500C               	movf	CAN_SendFrame@message+1,w,c
  4255  000858  22DA               	addwfc	fsr2h,f,c
  4256  00085A  0E02               	movlw	2
  4257  00085C  18DE               	xorwf	postinc2,w,c
  4258  00085E  A4D8               	btfss	status,2,c
  4259  000860  D002               	goto	l4202
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;CAN.c: 286:     {;CAN.c: 287:         RXB0DLCbits.RXRTR = 1;
  4263  000862  8C65               	bsf	3941,6,c	;volatile
  4264                           
  4265                           ;CAN.c: 288:     }
  4266  000864  D05A               	goto	l4206
  4267  000866                     l4202:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;CAN.c: 290:     {;CAN.c: 291:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  4271  000866  EE20 F010          	lfsr	2,16
  4272  00086A  500B               	movf	CAN_SendFrame@message,w,c
  4273  00086C  26D9               	addwf	fsr2l,f,c
  4274  00086E  500C               	movf	CAN_SendFrame@message+1,w,c
  4275  000870  22DA               	addwfc	fsr2h,f,c
  4276  000872  50DF               	movf	indf2,w,c
  4277  000874  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4278  000876  0E0F               	movlw	15
  4279  000878  160D               	andwf	??_CAN_SendFrame,f,c
  4280  00087A  5065               	movf	3941,w,c	;volatile
  4281  00087C  180D               	xorwf	??_CAN_SendFrame,w,c
  4282  00087E  0BFE               	andlw	-2
  4283  000880  180D               	xorwf	??_CAN_SendFrame,w,c
  4284  000882  6E65               	movwf	3941,c	;volatile
  4285                           
  4286                           ;CAN.c: 292:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4287  000884  EE20 F010          	lfsr	2,16
  4288  000888  500B               	movf	CAN_SendFrame@message,w,c
  4289  00088A  26D9               	addwf	fsr2l,f,c
  4290  00088C  500C               	movf	CAN_SendFrame@message+1,w,c
  4291  00088E  22DA               	addwfc	fsr2h,f,c
  4292  000890  50DF               	movf	indf2,w,c
  4293  000892  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4294  000894  90D8               	bcf	status,0,c
  4295  000896  320D               	rrcf	??_CAN_SendFrame,f,c
  4296  000898  0E07               	movlw	7
  4297  00089A  160D               	andwf	??_CAN_SendFrame,f,c
  4298  00089C  460D               	rlncf	??_CAN_SendFrame,f,c
  4299  00089E  5065               	movf	3941,w,c	;volatile
  4300  0008A0  180D               	xorwf	??_CAN_SendFrame,w,c
  4301  0008A2  0BFD               	andlw	-3
  4302  0008A4  180D               	xorwf	??_CAN_SendFrame,w,c
  4303  0008A6  6E65               	movwf	3941,c	;volatile
  4304                           
  4305                           ;CAN.c: 293:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4306  0008A8  EE20 F010          	lfsr	2,16
  4307  0008AC  500B               	movf	CAN_SendFrame@message,w,c
  4308  0008AE  26D9               	addwf	fsr2l,f,c
  4309  0008B0  500C               	movf	CAN_SendFrame@message+1,w,c
  4310  0008B2  22DA               	addwfc	fsr2h,f,c
  4311  0008B4  50DF               	movf	indf2,w,c
  4312  0008B6  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4313  0008B8  90D8               	bcf	status,0,c
  4314  0008BA  320D               	rrcf	??_CAN_SendFrame,f,c
  4315  0008BC  90D8               	bcf	status,0,c
  4316  0008BE  320D               	rrcf	??_CAN_SendFrame,f,c
  4317  0008C0  0E03               	movlw	3
  4318  0008C2  160D               	andwf	??_CAN_SendFrame,f,c
  4319  0008C4  460D               	rlncf	??_CAN_SendFrame,f,c
  4320  0008C6  460D               	rlncf	??_CAN_SendFrame,f,c
  4321  0008C8  5065               	movf	3941,w,c	;volatile
  4322  0008CA  180D               	xorwf	??_CAN_SendFrame,w,c
  4323  0008CC  0BFB               	andlw	-5
  4324  0008CE  180D               	xorwf	??_CAN_SendFrame,w,c
  4325  0008D0  6E65               	movwf	3941,c	;volatile
  4326                           
  4327                           ;CAN.c: 294:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4328  0008D2  EE20 F010          	lfsr	2,16
  4329  0008D6  500B               	movf	CAN_SendFrame@message,w,c
  4330  0008D8  26D9               	addwf	fsr2l,f,c
  4331  0008DA  500C               	movf	CAN_SendFrame@message+1,w,c
  4332  0008DC  22DA               	addwfc	fsr2h,f,c
  4333  0008DE  50DF               	movf	indf2,w,c
  4334  0008E0  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4335  0008E2  90D8               	bcf	status,0,c
  4336  0008E4  320D               	rrcf	??_CAN_SendFrame,f,c
  4337  0008E6  90D8               	bcf	status,0,c
  4338  0008E8  320D               	rrcf	??_CAN_SendFrame,f,c
  4339  0008EA  90D8               	bcf	status,0,c
  4340  0008EC  320D               	rrcf	??_CAN_SendFrame,f,c
  4341  0008EE  0E01               	movlw	1
  4342  0008F0  160D               	andwf	??_CAN_SendFrame,f,c
  4343  0008F2  460D               	rlncf	??_CAN_SendFrame,f,c
  4344  0008F4  460D               	rlncf	??_CAN_SendFrame,f,c
  4345  0008F6  460D               	rlncf	??_CAN_SendFrame,f,c
  4346  0008F8  5065               	movf	3941,w,c	;volatile
  4347  0008FA  180D               	xorwf	??_CAN_SendFrame,w,c
  4348  0008FC  0BF7               	andlw	-9
  4349  0008FE  180D               	xorwf	??_CAN_SendFrame,w,c
  4350  000900  6E65               	movwf	3941,c	;volatile
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;CAN.c: 296:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4354  000902  0E66               	movlw	102
  4355  000904  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4356  000906  0E0F               	movlw	15
  4357  000908  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4358  00090A  0E08               	movlw	8
  4359  00090C  240B               	addwf	CAN_SendFrame@message,w,c
  4360  00090E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4361  000910  0E00               	movlw	0
  4362  000912  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4363  000914  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4364  000916  EC93  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4365  00091A                     l4206:
  4366                           
  4367                           ;CAN.c: 299:     RXB0CONbits.FILHIT3 = 1;
  4368  00091A  8660               	bsf	3936,3,c	;volatile
  4369                           
  4370                           ;CAN.c: 301:     DetectorLedRadar.Flags.ramkaTx = 1;
  4371  00091C  0100               	movlb	0	; () banked
  4372  00091E  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4373                           
  4374                           ; BSR set to: 0
  4375  000920  0012               	return		;funcret
  4376  000922                     __end_of_CAN_SendFrame:
  4377                           	opt callstack 0
  4378                           
  4379 ;; *************** function _CAN_GenID *****************
  4380 ;; Defined at:
  4381 ;;		line 445 in file "CAN.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  message         2    5[COMRAM] PTR struct .
  4384 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4385 ;;  frameID         1    7[COMRAM] unsigned char 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;Total ram usage:        5 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    3
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_FRAME_HandleCanFrame
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text33
  4412  001238                     __ptext33:
  4413                           	opt callstack 0
  4414  001238                     _CAN_GenID:
  4415                           	opt callstack 25
  4416                           
  4417                           ;CAN.c: 445: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 446: {;CAN.c: 448:     m
      +                          essage->frame_type = 0x03;
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;incstack = 0
  4421  001238  EE20 F002          	lfsr	2,2
  4422  00123C  5006               	movf	CAN_GenID@message,w,c
  4423  00123E  26D9               	addwf	fsr2l,f,c
  4424  001240  5007               	movf	CAN_GenID@message+1,w,c
  4425  001242  22DA               	addwfc	fsr2h,f,c
  4426  001244  0E03               	movlw	3
  4427  001246  6EDF               	movwf	indf2,c
  4428                           
  4429                           ;CAN.c: 449:     message->message_type = 0x01;
  4430  001248  EE20 F001          	lfsr	2,1
  4431  00124C  5006               	movf	CAN_GenID@message,w,c
  4432  00124E  26D9               	addwf	fsr2l,f,c
  4433  001250  5007               	movf	CAN_GenID@message+1,w,c
  4434  001252  22DA               	addwfc	fsr2h,f,c
  4435  001254  0E01               	movlw	1
  4436  001256  6EDF               	movwf	indf2,c
  4437                           
  4438                           ;CAN.c: 450:     message->id.w[1] = (WORD)frameID * (WORD)4;
  4439  001258  5008               	movf	CAN_GenID@frameID,w,c
  4440  00125A  6E09               	movwf	??_CAN_GenID& (0+255),c
  4441  00125C  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4442  00125E  90D8               	bcf	status,0,c
  4443  001260  3609               	rlcf	??_CAN_GenID,f,c
  4444  001262  360A               	rlcf	??_CAN_GenID+1,f,c
  4445  001264  90D8               	bcf	status,0,c
  4446  001266  3609               	rlcf	??_CAN_GenID,f,c
  4447  001268  360A               	rlcf	??_CAN_GenID+1,f,c
  4448  00126A  EE20 F006          	lfsr	2,6
  4449  00126E  5006               	movf	CAN_GenID@message,w,c
  4450  001270  26D9               	addwf	fsr2l,f,c
  4451  001272  5007               	movf	CAN_GenID@message+1,w,c
  4452  001274  22DA               	addwfc	fsr2h,f,c
  4453  001276  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4454  00127A  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4455                           
  4456                           ;CAN.c: 451:     message->id.w[0] = DaneCan.adresCAN;
  4457  00127E  EE20 F004          	lfsr	2,4
  4458  001282  5006               	movf	CAN_GenID@message,w,c
  4459  001284  26D9               	addwf	fsr2l,f,c
  4460  001286  5007               	movf	CAN_GenID@message+1,w,c
  4461  001288  22DA               	addwfc	fsr2h,f,c
  4462  00128A  C02E  FFDE         	movff	_DaneCan+2,postinc2
  4463  00128E  C02F  FFDD         	movff	_DaneCan+3,postdec2
  4464                           
  4465                           ;CAN.c: 454:     message ->id.bits.b16 = 0;
  4466  001292  EE20 F006          	lfsr	2,6
  4467  001296  5006               	movf	CAN_GenID@message,w,c
  4468  001298  26D9               	addwf	fsr2l,f,c
  4469  00129A  5007               	movf	CAN_GenID@message+1,w,c
  4470  00129C  22DA               	addwfc	fsr2h,f,c
  4471  00129E  90DF               	bcf	indf2,0,c
  4472                           
  4473                           ;CAN.c: 455:     message ->id.bits.b17 = 0;
  4474  0012A0  EE20 F006          	lfsr	2,6
  4475  0012A4  5006               	movf	CAN_GenID@message,w,c
  4476  0012A6  26D9               	addwf	fsr2l,f,c
  4477  0012A8  5007               	movf	CAN_GenID@message+1,w,c
  4478  0012AA  22DA               	addwfc	fsr2h,f,c
  4479  0012AC  92DF               	bcf	indf2,1,c
  4480  0012AE  0012               	return		;funcret
  4481  0012B0                     __end_of_CAN_GenID:
  4482                           	opt callstack 0
  4483                           
  4484 ;; *************** function _CAN_TakeFrame *****************
  4485 ;; Defined at:
  4486 ;;		line 310 in file "CAN.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  message         2   13[COMRAM] PTR struct .
  4489 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  k               1   18[COMRAM] unsigned char 
  4492 ;;  tempCON         1   17[COMRAM] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      enum E10433
  4495 ;; Registers used:
  4496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;Total ram usage:        6 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    4
  4509 ;; This function calls:
  4510 ;;		_CAN_MoveBuffIntoFrame
  4511 ;;		___awdiv
  4512 ;; This function is called by:
  4513 ;;		_TRM_DataTransmition
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text34
  4518  00032E                     __ptext34:
  4519                           	opt callstack 0
  4520  00032E                     _CAN_TakeFrame:
  4521                           	opt callstack 25
  4522                           
  4523                           ;CAN.c: 310: BOOL CAN_TakeFrame(mID * message);CAN.c: 311: {;CAN.c: 312:     BYTE k, tem
      +                          pCON;;CAN.c: 314:     k = CANCON&0x0F;
  4524                           
  4525                           ;incstack = 0
  4526  00032E  506F               	movf	3951,w,c	;volatile
  4527  000330  0B0F               	andlw	15
  4528  000332  6E13               	movwf	CAN_TakeFrame@k,c
  4529                           
  4530                           ;CAN.c: 316:     ECANCON = 0x90 | k;
  4531  000334  5013               	movf	CAN_TakeFrame@k,w,c
  4532  000336  0990               	iorlw	144
  4533  000338  6E77               	movwf	3959,c	;volatile
  4534                           
  4535                           ;CAN.c: 319:     switch(k)
  4536  00033A  D018               	goto	l4472
  4537  00033C                     l296:
  4538                           
  4539                           ;CAN.c: 322:             tempCON = RXB0CON;
  4540  00033C  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4541                           
  4542                           ;CAN.c: 323:             break;
  4543  000340  D035               	goto	l297
  4544  000342                     l298:
  4545                           
  4546                           ;CAN.c: 325:             tempCON = RXB1CON;
  4547  000342  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4548                           
  4549                           ;CAN.c: 326:             break;
  4550  000346  D032               	goto	l297
  4551  000348                     l299:
  4552                           
  4553                           ;CAN.c: 328:             tempCON = B0CON;
  4554  000348  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4555                           
  4556                           ;CAN.c: 329:             break;
  4557  00034C  D02F               	goto	l297
  4558  00034E                     l300:
  4559                           
  4560                           ;CAN.c: 331:             tempCON = B1CON;
  4561  00034E  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4562                           
  4563                           ;CAN.c: 332:             break;
  4564  000352  D02C               	goto	l297
  4565  000354                     l301:
  4566                           
  4567                           ;CAN.c: 334:             tempCON = B2CON;
  4568  000354  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4569                           
  4570                           ;CAN.c: 335:             break;
  4571  000358  D029               	goto	l297
  4572  00035A                     l302:
  4573                           
  4574                           ;CAN.c: 337:             tempCON = B3CON;
  4575  00035A  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4576                           
  4577                           ;CAN.c: 338:             break;
  4578  00035E  D026               	goto	l297
  4579  000360                     l303:
  4580                           
  4581                           ;CAN.c: 340:             tempCON = B4CON;
  4582  000360  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4583                           
  4584                           ;CAN.c: 341:             break;
  4585  000364  D023               	goto	l297
  4586  000366                     l304:
  4587                           
  4588                           ;CAN.c: 343:             tempCON = B5CON;
  4589  000366  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4590                           
  4591                           ;CAN.c: 344:             break;
  4592  00036A  D020               	goto	l297
  4593  00036C                     l4472:
  4594  00036C  5013               	movf	CAN_TakeFrame@k,w,c
  4595  00036E  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4596  000370  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4597                           
  4598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4599                           ; Switch size 1, requested type "simple"
  4600                           ; Number of cases is 1, Range of values is 0 to 0
  4601                           ; switch strategies available:
  4602                           ; Name         Instructions Cycles
  4603                           ; simple_byte            4     3 (average)
  4604                           ;	Chosen strategy is simple_byte
  4605  000372  5011               	movf	??_CAN_TakeFrame+1,w,c
  4606  000374  0A00               	xorlw	0	; case 0
  4607  000376  A4D8               	btfss	status,2,c
  4608  000378  D019               	goto	l297
  4609                           
  4610                           ; Switch size 1, requested type "simple"
  4611                           ; Number of cases is 8, Range of values is 0 to 7
  4612                           ; switch strategies available:
  4613                           ; Name         Instructions Cycles
  4614                           ; simple_byte           25    13 (average)
  4615                           ;	Chosen strategy is simple_byte
  4616  00037A  5010               	movf	??_CAN_TakeFrame,w,c
  4617  00037C  0A00               	xorlw	0	; case 0
  4618  00037E  B4D8               	btfsc	status,2,c
  4619  000380  D7DD               	goto	l296
  4620  000382  0A01               	xorlw	1	; case 1
  4621  000384  B4D8               	btfsc	status,2,c
  4622  000386  D7DD               	goto	l298
  4623  000388  0A03               	xorlw	3	; case 2
  4624  00038A  B4D8               	btfsc	status,2,c
  4625  00038C  D7DD               	goto	l299
  4626  00038E  0A01               	xorlw	1	; case 3
  4627  000390  B4D8               	btfsc	status,2,c
  4628  000392  D7DD               	goto	l300
  4629  000394  0A07               	xorlw	7	; case 4
  4630  000396  B4D8               	btfsc	status,2,c
  4631  000398  D7DD               	goto	l301
  4632  00039A  0A01               	xorlw	1	; case 5
  4633  00039C  B4D8               	btfsc	status,2,c
  4634  00039E  D7DD               	goto	l302
  4635  0003A0  0A03               	xorlw	3	; case 6
  4636  0003A2  B4D8               	btfsc	status,2,c
  4637  0003A4  D7DD               	goto	l303
  4638  0003A6  0A01               	xorlw	1	; case 7
  4639  0003A8  B4D8               	btfsc	status,2,c
  4640  0003AA  D7DD               	goto	l304
  4641  0003AC                     l297:
  4642                           
  4643                           ;CAN.c: 348:     if((tempCON & 0x80) > 0)
  4644  0003AC  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4645  0003AE  D0A5               	goto	l4508
  4646                           
  4647                           ;CAN.c: 349:     {;CAN.c: 350:         message->buffer = RXB0CON & 0x1F;
  4648  0003B0  EE20 F003          	lfsr	2,3
  4649  0003B4  500E               	movf	CAN_TakeFrame@message,w,c
  4650  0003B6  26D9               	addwf	fsr2l,f,c
  4651  0003B8  500F               	movf	CAN_TakeFrame@message+1,w,c
  4652  0003BA  22DA               	addwfc	fsr2h,f,c
  4653  0003BC  5060               	movf	3936,w,c	;volatile
  4654  0003BE  0B1F               	andlw	31
  4655  0003C0  6EDF               	movwf	indf2,c
  4656                           
  4657                           ;CAN.c: 351:         message->id.v[0] = RXB0EIDL;
  4658  0003C2  EE20 F004          	lfsr	2,4
  4659  0003C6  500E               	movf	CAN_TakeFrame@message,w,c
  4660  0003C8  26D9               	addwf	fsr2l,f,c
  4661  0003CA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4662  0003CC  22DA               	addwfc	fsr2h,f,c
  4663  0003CE  CF64 FFDF          	movff	3940,indf2	;volatile
  4664                           
  4665                           ;CAN.c: 352:         message->id.v[1] = RXB0EIDH;
  4666  0003D2  EE20 F005          	lfsr	2,5
  4667  0003D6  500E               	movf	CAN_TakeFrame@message,w,c
  4668  0003D8  26D9               	addwf	fsr2l,f,c
  4669  0003DA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4670  0003DC  22DA               	addwfc	fsr2h,f,c
  4671  0003DE  CF63 FFDF          	movff	3939,indf2	;volatile
  4672                           
  4673                           ;CAN.c: 353:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4674  0003E2  EE20 F006          	lfsr	2,6
  4675  0003E6  500E               	movf	CAN_TakeFrame@message,w,c
  4676  0003E8  26D9               	addwf	fsr2l,f,c
  4677  0003EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4678  0003EC  22DA               	addwfc	fsr2h,f,c
  4679  0003EE  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4680  0003F2  0E03               	movlw	3
  4681  0003F4  1610               	andwf	??_CAN_TakeFrame,f,c
  4682  0003F6  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4683  0003FA  6A07               	clrf	___awdiv@dividend+1,c
  4684  0003FC  0E00               	movlw	0
  4685  0003FE  6E09               	movwf	___awdiv@divisor+1,c
  4686  000400  0E08               	movlw	8
  4687  000402  6E08               	movwf	___awdiv@divisor,c
  4688  000404  EC9D  F008         	call	___awdiv	;wreg free
  4689  000408  5006               	movf	?___awdiv,w,c
  4690  00040A  1010               	iorwf	??_CAN_TakeFrame,w,c
  4691  00040C  6EDF               	movwf	indf2,c
  4692                           
  4693                           ;CAN.c: 354:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4694  00040E  5061               	movf	3937,w,c	;volatile
  4695  000410  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4696  000412  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4697  000414  0E05               	movlw	5
  4698  000416                     u2755:
  4699  000416  90D8               	bcf	status,0,c
  4700  000418  3610               	rlcf	??_CAN_TakeFrame,f,c
  4701  00041A  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4702  00041C  2EE8               	decfsz	wreg,f,c
  4703  00041E  D7FB               	goto	u2755
  4704  000420  EE20 F006          	lfsr	2,6
  4705  000424  500E               	movf	CAN_TakeFrame@message,w,c
  4706  000426  26D9               	addwf	fsr2l,f,c
  4707  000428  500F               	movf	CAN_TakeFrame@message+1,w,c
  4708  00042A  22DA               	addwfc	fsr2h,f,c
  4709  00042C  5010               	movf	??_CAN_TakeFrame,w,c
  4710  00042E  12DE               	iorwf	postinc2,f,c
  4711  000430  5011               	movf	??_CAN_TakeFrame+1,w,c
  4712  000432  12DD               	iorwf	postdec2,f,c
  4713                           
  4714                           ;CAN.c: 355:         message->frame_type=0x03;
  4715  000434  EE20 F002          	lfsr	2,2
  4716  000438  500E               	movf	CAN_TakeFrame@message,w,c
  4717  00043A  26D9               	addwf	fsr2l,f,c
  4718  00043C  500F               	movf	CAN_TakeFrame@message+1,w,c
  4719  00043E  22DA               	addwfc	fsr2h,f,c
  4720  000440  0E03               	movlw	3
  4721  000442  6EDF               	movwf	indf2,c
  4722                           
  4723                           ;CAN.c: 359:         if(RXB0DLCbits.RXRTR == 0)
  4724  000444  BC65               	btfsc	3941,6,c	;volatile
  4725  000446  D068               	goto	l4514
  4726                           
  4727                           ;CAN.c: 360:         {;CAN.c: 361:             message->message_type = 0x01;
  4728  000448  EE20 F001          	lfsr	2,1
  4729  00044C  500E               	movf	CAN_TakeFrame@message,w,c
  4730  00044E  26D9               	addwf	fsr2l,f,c
  4731  000450  500F               	movf	CAN_TakeFrame@message+1,w,c
  4732  000452  22DA               	addwfc	fsr2h,f,c
  4733  000454  0E01               	movlw	1
  4734  000456  6EDF               	movwf	indf2,c
  4735                           
  4736                           ;CAN.c: 362:             message->data_length= RXB0DLC & 0x0F;
  4737  000458  EE20 F010          	lfsr	2,16
  4738  00045C  500E               	movf	CAN_TakeFrame@message,w,c
  4739  00045E  26D9               	addwf	fsr2l,f,c
  4740  000460  500F               	movf	CAN_TakeFrame@message+1,w,c
  4741  000462  22DA               	addwfc	fsr2h,f,c
  4742  000464  5065               	movf	3941,w,c	;volatile
  4743  000466  0B0F               	andlw	15
  4744  000468  6EDF               	movwf	indf2,c
  4745                           
  4746                           ;CAN.c: 363:             if(message->data_length > 8)
  4747  00046A  EE20 F010          	lfsr	2,16
  4748  00046E  500E               	movf	CAN_TakeFrame@message,w,c
  4749  000470  26D9               	addwf	fsr2l,f,c
  4750  000472  500F               	movf	CAN_TakeFrame@message+1,w,c
  4751  000474  22DA               	addwfc	fsr2h,f,c
  4752  000476  0E08               	movlw	8
  4753  000478  64DF               	cpfsgt	indf2,c
  4754  00047A  D041               	goto	l4512
  4755  00047C  D01E               	goto	l4506
  4756  00047E                     l4488:
  4757                           
  4758                           ;CAN.c: 369:                         RXB0CON = 0;
  4759  00047E  0E00               	movlw	0
  4760  000480  6E60               	movwf	3936,c	;volatile
  4761                           
  4762                           ;CAN.c: 370:                         break;
  4763  000482  D03B               	goto	l4508
  4764  000484                     l4490:
  4765                           
  4766                           ;CAN.c: 372:                         RXB1CON = 0;
  4767  000484  0E00               	movlw	0
  4768  000486  010F               	movlb	15	; () banked
  4769  000488  D00E               	goto	L2
  4770  00048A                     l4492:
  4771                           
  4772                           ;CAN.c: 375:                         B0CON = 0;
  4773  00048A  0E00               	movlw	0
  4774  00048C  010E               	movlb	14	; () banked
  4775  00048E  6F20               	movwf	32,b	;volatile
  4776                           
  4777                           ;CAN.c: 376:                         break;
  4778  000490  D034               	goto	l4508
  4779  000492                     l4494:
  4780                           
  4781                           ;CAN.c: 378:                         B1CON = 0;
  4782  000492  0E00               	movlw	0
  4783  000494  010E               	movlb	14	; () banked
  4784  000496  6F30               	movwf	48,b	;volatile
  4785                           
  4786                           ;CAN.c: 379:                         break;
  4787  000498  D030               	goto	l4508
  4788  00049A                     l4496:
  4789                           
  4790                           ;CAN.c: 381:                         B2CON = 0;
  4791  00049A  0E00               	movlw	0
  4792  00049C  010E               	movlb	14	; () banked
  4793  00049E  6F40               	movwf	64,b	;volatile
  4794                           
  4795                           ;CAN.c: 382:                         break;
  4796  0004A0  D02C               	goto	l4508
  4797  0004A2                     l4498:
  4798                           
  4799                           ;CAN.c: 384:                         B3CON = 0;
  4800  0004A2  0E00               	movlw	0
  4801  0004A4  010E               	movlb	14	; () banked
  4802  0004A6                     L2:
  4803  0004A6  6F50               	movwf	80,b	;volatile
  4804                           
  4805                           ;CAN.c: 385:                         break;
  4806  0004A8  D028               	goto	l4508
  4807  0004AA                     l4500:
  4808                           
  4809                           ;CAN.c: 387:                         B4CON = 0;
  4810  0004AA  0E00               	movlw	0
  4811  0004AC  010E               	movlb	14	; () banked
  4812  0004AE  6F60               	movwf	96,b	;volatile
  4813                           
  4814                           ;CAN.c: 388:                         break;
  4815  0004B0  D024               	goto	l4508
  4816  0004B2                     l4502:
  4817                           
  4818                           ;CAN.c: 390:                         B5CON = 0;
  4819  0004B2  0E00               	movlw	0
  4820  0004B4  010E               	movlb	14	; () banked
  4821  0004B6  6F70               	movwf	112,b	;volatile
  4822                           
  4823                           ;CAN.c: 391:                         break;
  4824  0004B8  D020               	goto	l4508
  4825  0004BA                     l4506:
  4826  0004BA  5013               	movf	CAN_TakeFrame@k,w,c
  4827  0004BC  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4828  0004BE  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4829                           
  4830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4831                           ; Switch size 1, requested type "simple"
  4832                           ; Number of cases is 1, Range of values is 0 to 0
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; simple_byte            4     3 (average)
  4836                           ;	Chosen strategy is simple_byte
  4837  0004C0  5011               	movf	??_CAN_TakeFrame+1,w,c
  4838  0004C2  0A00               	xorlw	0	; case 0
  4839  0004C4  A4D8               	btfss	status,2,c
  4840  0004C6  D019               	goto	l4508
  4841                           
  4842                           ; Switch size 1, requested type "simple"
  4843                           ; Number of cases is 8, Range of values is 0 to 7
  4844                           ; switch strategies available:
  4845                           ; Name         Instructions Cycles
  4846                           ; simple_byte           25    13 (average)
  4847                           ;	Chosen strategy is simple_byte
  4848  0004C8  5010               	movf	??_CAN_TakeFrame,w,c
  4849  0004CA  0A00               	xorlw	0	; case 0
  4850  0004CC  B4D8               	btfsc	status,2,c
  4851  0004CE  D7D7               	goto	l4488
  4852  0004D0  0A01               	xorlw	1	; case 1
  4853  0004D2  B4D8               	btfsc	status,2,c
  4854  0004D4  D7D7               	goto	l4490
  4855  0004D6  0A03               	xorlw	3	; case 2
  4856  0004D8  B4D8               	btfsc	status,2,c
  4857  0004DA  D7D7               	goto	l4492
  4858  0004DC  0A01               	xorlw	1	; case 3
  4859  0004DE  B4D8               	btfsc	status,2,c
  4860  0004E0  D7D8               	goto	l4494
  4861  0004E2  0A07               	xorlw	7	; case 4
  4862  0004E4  B4D8               	btfsc	status,2,c
  4863  0004E6  D7D9               	goto	l4496
  4864  0004E8  0A01               	xorlw	1	; case 5
  4865  0004EA  B4D8               	btfsc	status,2,c
  4866  0004EC  D7DA               	goto	l4498
  4867  0004EE  0A03               	xorlw	3	; case 6
  4868  0004F0  B4D8               	btfsc	status,2,c
  4869  0004F2  D7DB               	goto	l4500
  4870  0004F4  0A01               	xorlw	1	; case 7
  4871  0004F6  B4D8               	btfsc	status,2,c
  4872  0004F8  D7DC               	goto	l4502
  4873  0004FA                     l4508:
  4874                           
  4875                           ;CAN.c: 393:                 return FALSE;
  4876  0004FA  0E00               	movlw	0
  4877  0004FC  0012               	return	
  4878  0004FE                     l4512:
  4879                           
  4880                           ;CAN.c: 395:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4881  0004FE  0E08               	movlw	8
  4882  000500  240E               	addwf	CAN_TakeFrame@message,w,c
  4883  000502  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4884  000504  0E00               	movlw	0
  4885  000506  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4886  000508  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4887  00050A  0E66               	movlw	102
  4888  00050C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4889  00050E  0E0F               	movlw	15
  4890  000510  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4891  000512  EC93  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4892                           
  4893                           ;CAN.c: 396:         }
  4894  000516  D027               	goto	l4534
  4895  000518                     l4514:
  4896                           
  4897                           ;CAN.c: 399:         {;CAN.c: 400:             message->message_type=0x02;
  4898  000518  EE20 F001          	lfsr	2,1
  4899  00051C  500E               	movf	CAN_TakeFrame@message,w,c
  4900  00051E  26D9               	addwf	fsr2l,f,c
  4901  000520  500F               	movf	CAN_TakeFrame@message+1,w,c
  4902  000522  22DA               	addwfc	fsr2h,f,c
  4903  000524  0E02               	movlw	2
  4904  000526  6EDF               	movwf	indf2,c
  4905  000528  D01E               	goto	l4534
  4906  00052A                     l4516:
  4907                           
  4908                           ;CAN.c: 406:                 RXB0CON = 0;
  4909  00052A  0E00               	movlw	0
  4910  00052C  6E60               	movwf	3936,c	;volatile
  4911                           
  4912                           ;CAN.c: 407:                 break;
  4913  00052E  D03B               	goto	l4536
  4914  000530                     l4518:
  4915                           
  4916                           ;CAN.c: 409:                 RXB1CON = 0;
  4917  000530  0E00               	movlw	0
  4918  000532  010F               	movlb	15	; () banked
  4919  000534  D00E               	goto	L3
  4920  000536                     l4520:
  4921                           
  4922                           ;CAN.c: 412:                 B0CON = 0;
  4923  000536  0E00               	movlw	0
  4924  000538  010E               	movlb	14	; () banked
  4925  00053A  6F20               	movwf	32,b	;volatile
  4926                           
  4927                           ;CAN.c: 413:                 break;
  4928  00053C  D034               	goto	l4536
  4929  00053E                     l4522:
  4930                           
  4931                           ;CAN.c: 415:                 B1CON = 0;
  4932  00053E  0E00               	movlw	0
  4933  000540  010E               	movlb	14	; () banked
  4934  000542  6F30               	movwf	48,b	;volatile
  4935                           
  4936                           ;CAN.c: 416:                 break;
  4937  000544  D030               	goto	l4536
  4938  000546                     l4524:
  4939                           
  4940                           ;CAN.c: 418:                 B2CON = 0;
  4941  000546  0E00               	movlw	0
  4942  000548  010E               	movlb	14	; () banked
  4943  00054A  6F40               	movwf	64,b	;volatile
  4944                           
  4945                           ;CAN.c: 419:                 break;
  4946  00054C  D02C               	goto	l4536
  4947  00054E                     l4526:
  4948                           
  4949                           ;CAN.c: 421:                 B3CON = 0;
  4950  00054E  0E00               	movlw	0
  4951  000550  010E               	movlb	14	; () banked
  4952  000552                     L3:
  4953  000552  6F50               	movwf	80,b	;volatile
  4954                           
  4955                           ;CAN.c: 422:                 break;
  4956  000554  D028               	goto	l4536
  4957  000556                     l4528:
  4958                           
  4959                           ;CAN.c: 424:                 B4CON = 0;
  4960  000556  0E00               	movlw	0
  4961  000558  010E               	movlb	14	; () banked
  4962  00055A  6F60               	movwf	96,b	;volatile
  4963                           
  4964                           ;CAN.c: 425:                 break;
  4965  00055C  D024               	goto	l4536
  4966  00055E                     l4530:
  4967                           
  4968                           ;CAN.c: 427:                 B5CON = 0;
  4969  00055E  0E00               	movlw	0
  4970  000560  010E               	movlb	14	; () banked
  4971  000562  6F70               	movwf	112,b	;volatile
  4972                           
  4973                           ;CAN.c: 428:                 break;
  4974  000564  D020               	goto	l4536
  4975  000566                     l4534:
  4976  000566  5013               	movf	CAN_TakeFrame@k,w,c
  4977  000568  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4978  00056A  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4979                           
  4980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4981                           ; Switch size 1, requested type "simple"
  4982                           ; Number of cases is 1, Range of values is 0 to 0
  4983                           ; switch strategies available:
  4984                           ; Name         Instructions Cycles
  4985                           ; simple_byte            4     3 (average)
  4986                           ;	Chosen strategy is simple_byte
  4987  00056C  5011               	movf	??_CAN_TakeFrame+1,w,c
  4988  00056E  0A00               	xorlw	0	; case 0
  4989  000570  A4D8               	btfss	status,2,c
  4990  000572  D019               	goto	l4536
  4991                           
  4992                           ; Switch size 1, requested type "simple"
  4993                           ; Number of cases is 8, Range of values is 0 to 7
  4994                           ; switch strategies available:
  4995                           ; Name         Instructions Cycles
  4996                           ; simple_byte           25    13 (average)
  4997                           ;	Chosen strategy is simple_byte
  4998  000574  5010               	movf	??_CAN_TakeFrame,w,c
  4999  000576  0A00               	xorlw	0	; case 0
  5000  000578  B4D8               	btfsc	status,2,c
  5001  00057A  D7D7               	goto	l4516
  5002  00057C  0A01               	xorlw	1	; case 1
  5003  00057E  B4D8               	btfsc	status,2,c
  5004  000580  D7D7               	goto	l4518
  5005  000582  0A03               	xorlw	3	; case 2
  5006  000584  B4D8               	btfsc	status,2,c
  5007  000586  D7D7               	goto	l4520
  5008  000588  0A01               	xorlw	1	; case 3
  5009  00058A  B4D8               	btfsc	status,2,c
  5010  00058C  D7D8               	goto	l4522
  5011  00058E  0A07               	xorlw	7	; case 4
  5012  000590  B4D8               	btfsc	status,2,c
  5013  000592  D7D9               	goto	l4524
  5014  000594  0A01               	xorlw	1	; case 5
  5015  000596  B4D8               	btfsc	status,2,c
  5016  000598  D7DA               	goto	l4526
  5017  00059A  0A03               	xorlw	3	; case 6
  5018  00059C  B4D8               	btfsc	status,2,c
  5019  00059E  D7DB               	goto	l4528
  5020  0005A0  0A01               	xorlw	1	; case 7
  5021  0005A2  B4D8               	btfsc	status,2,c
  5022  0005A4  D7DC               	goto	l4530
  5023  0005A6                     l4536:
  5024                           
  5025                           ;CAN.c: 430:         return TRUE;
  5026  0005A6  0E01               	movlw	1
  5027  0005A8  0012               	return		;funcret
  5028  0005AA                     __end_of_CAN_TakeFrame:
  5029                           	opt callstack 0
  5030                           
  5031 ;; *************** function ___awdiv *****************
  5032 ;; Defined at:
  5033 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  dividend        2    5[COMRAM] int 
  5036 ;;  divisor         2    7[COMRAM] int 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  quotient        2   11[COMRAM] int 
  5039 ;;  sign            1   10[COMRAM] unsigned char 
  5040 ;;  counter         1    9[COMRAM] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  2    5[COMRAM] int 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5054 ;;Total ram usage:        8 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    3
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_CAN_TakeFrame
  5061 ;;		_FRAME_HandleCanFrame
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text35
  5066  00113A                     __ptext35:
  5067                           	opt callstack 0
  5068  00113A                     ___awdiv:
  5069                           	opt callstack 25
  5070                           
  5071                           ;incstack = 0
  5072  00113A  0E00               	movlw	0
  5073  00113C  6E0B               	movwf	___awdiv@sign,c
  5074  00113E  AE09               	btfss	___awdiv@divisor+1,7,c
  5075  001140  D006               	goto	l4416
  5076  001142  6C08               	negf	___awdiv@divisor,c
  5077  001144  1E09               	comf	___awdiv@divisor+1,f,c
  5078  001146  B0D8               	btfsc	status,0,c
  5079  001148  2A09               	incf	___awdiv@divisor+1,f,c
  5080  00114A  0E01               	movlw	1
  5081  00114C  6E0B               	movwf	___awdiv@sign,c
  5082  00114E                     l4416:
  5083  00114E  AE07               	btfss	___awdiv@dividend+1,7,c
  5084  001150  D006               	goto	l4422
  5085  001152  6C06               	negf	___awdiv@dividend,c
  5086  001154  1E07               	comf	___awdiv@dividend+1,f,c
  5087  001156  B0D8               	btfsc	status,0,c
  5088  001158  2A07               	incf	___awdiv@dividend+1,f,c
  5089  00115A  0E01               	movlw	1
  5090  00115C  1A0B               	xorwf	___awdiv@sign,f,c
  5091  00115E                     l4422:
  5092  00115E  0E00               	movlw	0
  5093  001160  6E0D               	movwf	___awdiv@quotient+1,c
  5094  001162  0E00               	movlw	0
  5095  001164  6E0C               	movwf	___awdiv@quotient,c
  5096  001166  5008               	movf	___awdiv@divisor,w,c
  5097  001168  1009               	iorwf	___awdiv@divisor+1,w,c
  5098  00116A  B4D8               	btfsc	status,2,c
  5099  00116C  D01C               	goto	l4444
  5100  00116E  0E01               	movlw	1
  5101  001170  6E0A               	movwf	___awdiv@counter,c
  5102  001172  D004               	goto	l4430
  5103  001174                     l4428:
  5104  001174  90D8               	bcf	status,0,c
  5105  001176  3608               	rlcf	___awdiv@divisor,f,c
  5106  001178  3609               	rlcf	___awdiv@divisor+1,f,c
  5107  00117A  2A0A               	incf	___awdiv@counter,f,c
  5108  00117C                     l4430:
  5109  00117C  AE09               	btfss	___awdiv@divisor+1,7,c
  5110  00117E  D7FA               	goto	l4428
  5111  001180                     u2690:
  5112  001180  90D8               	bcf	status,0,c
  5113  001182  360C               	rlcf	___awdiv@quotient,f,c
  5114  001184  360D               	rlcf	___awdiv@quotient+1,f,c
  5115  001186  5008               	movf	___awdiv@divisor,w,c
  5116  001188  5C06               	subwf	___awdiv@dividend,w,c
  5117  00118A  5009               	movf	___awdiv@divisor+1,w,c
  5118  00118C  5807               	subwfb	___awdiv@dividend+1,w,c
  5119  00118E  A0D8               	btfss	status,0,c
  5120  001190  D005               	goto	l4440
  5121  001192  5008               	movf	___awdiv@divisor,w,c
  5122  001194  5E06               	subwf	___awdiv@dividend,f,c
  5123  001196  5009               	movf	___awdiv@divisor+1,w,c
  5124  001198  5A07               	subwfb	___awdiv@dividend+1,f,c
  5125  00119A  800C               	bsf	___awdiv@quotient,0,c
  5126  00119C                     l4440:
  5127  00119C  90D8               	bcf	status,0,c
  5128  00119E  3209               	rrcf	___awdiv@divisor+1,f,c
  5129  0011A0  3208               	rrcf	___awdiv@divisor,f,c
  5130  0011A2  2E0A               	decfsz	___awdiv@counter,f,c
  5131  0011A4  D7ED               	goto	u2690
  5132  0011A6                     l4444:
  5133  0011A6  500B               	movf	___awdiv@sign,w,c
  5134  0011A8  B4D8               	btfsc	status,2,c
  5135  0011AA  D004               	goto	l4448
  5136  0011AC  6C0C               	negf	___awdiv@quotient,c
  5137  0011AE  1E0D               	comf	___awdiv@quotient+1,f,c
  5138  0011B0  B0D8               	btfsc	status,0,c
  5139  0011B2  2A0D               	incf	___awdiv@quotient+1,f,c
  5140  0011B4                     l4448:
  5141  0011B4  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5142  0011B8  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5143  0011BC  0012               	return		;funcret
  5144  0011BE                     __end_of___awdiv:
  5145                           	opt callstack 0
  5146                           
  5147 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5148 ;; Defined at:
  5149 ;;		line 232 in file "CAN.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5152 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5153 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5154 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  i               1    9[COMRAM] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;Total ram usage:        5 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    3
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_CAN_SendFrame
  5177 ;;		_CAN_TakeFrame
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text36
  5182  001926                     __ptext36:
  5183                           	opt callstack 0
  5184  001926                     _CAN_MoveBuffIntoFrame:
  5185                           	opt callstack 24
  5186                           
  5187                           ;CAN.c: 232: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 233: {;CAN.c
      +                          : 234:     BYTE i;;CAN.c: 235:     for(i=0; i<8; ++i)
  5188                           
  5189                           ;incstack = 0
  5190  001926  0E00               	movlw	0
  5191  001928  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  5192  00192A                     l3870:
  5193                           
  5194                           ;CAN.c: 236:     {;CAN.c: 237:         Ram[i]=(*(Buf+i));
  5195  00192A  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5196  00192C  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5197  00192E  6ED9               	movwf	fsr2l,c
  5198  001930  0E00               	movlw	0
  5199  001932  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5200  001934  6EDA               	movwf	fsr2h,c
  5201  001936  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5202  001938  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5203  00193A  6EE1               	movwf	fsr1l,c
  5204  00193C  0E00               	movlw	0
  5205  00193E  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5206  001940  6EE2               	movwf	fsr1h,c
  5207  001942  CFDF FFE7          	movff	indf2,indf1
  5208                           
  5209                           ;CAN.c: 238:     }
  5210  001946  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5211  001948  0E07               	movlw	7
  5212  00194A  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5213  00194C  D7EE               	goto	l3870
  5214  00194E  0012               	return	
  5215  001950                     __end_of_CAN_MoveBuffIntoFrame:
  5216                           	opt callstack 0
  5217                           
  5218 ;; *************** function _TMR1_Update_flag_Set *****************
  5219 ;; Defined at:
  5220 ;;		line 32 in file "TMR1.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  a               2    5[COMRAM] unsigned int 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		None
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;Total ram usage:        2 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    3
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_main
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text37
  5249  001AA0                     __ptext37:
  5250                           	opt callstack 0
  5251  001AA0                     _TMR1_Update_flag_Set:
  5252                           	opt callstack 27
  5253                           
  5254                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5255                           
  5256                           ;incstack = 0
  5257  001AA0  C006  F034         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5258  001AA4  C007  F035         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5259  001AA8  0012               	return		;funcret
  5260  001AAA                     __end_of_TMR1_Update_flag_Set:
  5261                           	opt callstack 0
  5262                           
  5263 ;; *************** function _TMR1_Update_flag_Get *****************
  5264 ;; Defined at:
  5265 ;;		line 47 in file "TMR1.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  2    5[COMRAM] unsigned int 
  5272 ;; Registers used:
  5273 ;;		None
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;Total ram usage:        2 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    3
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text38
  5294  001AAA                     __ptext38:
  5295                           	opt callstack 0
  5296  001AAA                     _TMR1_Update_flag_Get:
  5297                           	opt callstack 27
  5298                           
  5299                           ;TMR1.c: 49:     return TMR1_Update_flag;
  5300                           
  5301                           ;incstack = 0
  5302  001AAA  C034  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5303  001AAE  C035  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5304  001AB2  0012               	return		;funcret
  5305  001AB4                     __end_of_TMR1_Update_flag_Get:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function _ReadFlash *****************
  5309 ;; Defined at:
  5310 ;;		line 98 in file "main.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  addr            2    5[COMRAM] unsigned int 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  2    5[COMRAM] unsigned int 
  5317 ;; Registers used:
  5318 ;;		status,2
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;Total ram usage:        2 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    3
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_main
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text39
  5339  001A14                     __ptext39:
  5340                           	opt callstack 0
  5341  001A14                     _ReadFlash:
  5342                           	opt callstack 27
  5343                           
  5344                           ;main.c: 99:     TBLPTR = addr;
  5345                           
  5346                           ;incstack = 0
  5347  001A14  C006  FFF6         	movff	ReadFlash@addr,tblptrl	;volatile
  5348  001A18  C007  FFF7         	movff	ReadFlash@addr+1,tblptrh	;volatile
  5349  001A1C  6AF8               	clrf	tblptru,c	;volatile
  5350  001A1E  0008               	tblrd		*	;# 
  5351                           
  5352                           ;main.c: 101:     return TABLAT;
  5353  001A20  CFF5 F006          	movff	tablat,?_ReadFlash	;volatile
  5354  001A24  6A07               	clrf	?_ReadFlash+1,c
  5355  001A26  0012               	return		;funcret
  5356  001A28                     __end_of_ReadFlash:
  5357                           	opt callstack 0
  5358                           
  5359 ;; *************** function _LED_Update *****************
  5360 ;; Defined at:
  5361 ;;		line 105 in file "LED.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      unsigned char 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    5
  5382 ;; This function calls:
  5383 ;;		_LED_Control
  5384 ;;		_LED_Left
  5385 ;;		_LED_Light_Pos
  5386 ;;		_LED_Right
  5387 ;; This function is called by:
  5388 ;;		_main
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text40
  5393  0011BE                     __ptext40:
  5394                           	opt callstack 0
  5395  0011BE                     _LED_Update:
  5396                           	opt callstack 25
  5397                           
  5398                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  5399                           
  5400                           ;incstack = 0
  5401  0011BE  503B               	movf	_LOCK,w,c
  5402  0011C0  A4D8               	btfss	status,2,c
  5403  0011C2  D013               	goto	l4704
  5404                           
  5405                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  5406  0011C4  0E00               	movlw	0
  5407  0011C6  6E07               	movwf	LED_Control@diode+1,c
  5408  0011C8  0E00               	movlw	0
  5409  0011CA  6E06               	movwf	LED_Control@diode,c
  5410  0011CC  0E00               	movlw	0
  5411  0011CE  EC91  F004         	call	_LED_Control
  5412                           
  5413                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5414  0011D2  C04E  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5415  0011D6  C04F  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5416  0011DA  C052  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5417  0011DE  C053  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5418  0011E2  5054               	movf	LED_Update@Green,w,c
  5419  0011E4  ECAB  F007         	call	_LED_Light_Pos
  5420                           
  5421                           ;LED.c: 117:     }
  5422  0011E8  D012               	goto	l391
  5423  0011EA                     l4704:
  5424                           
  5425                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  5426  0011EA  0E00               	movlw	0
  5427  0011EC  6E07               	movwf	LED_Control@diode+1,c
  5428  0011EE  0E00               	movlw	0
  5429  0011F0  6E06               	movwf	LED_Control@diode,c
  5430  0011F2  5054               	movf	LED_Update@Green,w,c
  5431  0011F4  EC91  F004         	call	_LED_Control
  5432                           
  5433                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5434  0011F8  C050  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5435  0011FC  C051  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5436  001200  C052  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5437  001204  C053  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5438  001208  0E00               	movlw	0
  5439  00120A  ECAB  F007         	call	_LED_Light_Pos
  5440  00120E                     l391:
  5441                           
  5442                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  5443  00120E  C050  F006         	movff	LED_Update@pos1,LED_Right@a
  5444  001212  C051  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5445  001216  EC35  F00B         	call	_LED_Right	;wreg free
  5446  00121A  C006  F050         	movff	?_LED_Right,LED_Update@pos1
  5447  00121E  C007  F051         	movff	?_LED_Right+1,LED_Update@pos1+1
  5448                           
  5449                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  5450  001222  C04E  F006         	movff	LED_Update@pos2,LED_Left@a
  5451  001226  C04F  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5452  00122A  EC80  F00B         	call	_LED_Left	;wreg free
  5453  00122E  C006  F04E         	movff	?_LED_Left,LED_Update@pos2
  5454  001232  C007  F04F         	movff	?_LED_Left+1,LED_Update@pos2+1
  5455  001236  0012               	return		;funcret
  5456  001238                     __end_of_LED_Update:
  5457                           	opt callstack 0
  5458                           
  5459 ;; *************** function _LED_Light_Pos *****************
  5460 ;; Defined at:
  5461 ;;		line 196 in file "LED.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  color           1    wreg     enum E10644
  5464 ;;  pos             2   12[COMRAM] unsigned int 
  5465 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  color           1   16[COMRAM] enum E10644
  5468 ;;  flage           2   21[COMRAM] unsigned int 
  5469 ;;  pos2            2   19[COMRAM] unsigned int 
  5470 ;;  LED_array       2   17[COMRAM] unsigned int 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  2   12[COMRAM] unsigned int 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5480 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;Total ram usage:       11 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:    4
  5487 ;; This function calls:
  5488 ;;		_LED_Control
  5489 ;;		_LED_Left
  5490 ;;		_LED_Right
  5491 ;;		___lwdiv
  5492 ;; This function is called by:
  5493 ;;		_LED_Update
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text41
  5498  000F56                     __ptext41:
  5499                           	opt callstack 0
  5500  000F56                     _LED_Light_Pos:
  5501                           	opt callstack 25
  5502                           
  5503                           ;incstack = 0
  5504                           ;LED_Light_Pos@color stored from wreg
  5505  000F56  6E11               	movwf	LED_Light_Pos@color,c
  5506                           
  5507                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  5508  000F58  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5509  000F5C  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5510                           
  5511                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  5512  000F60  0E00               	movlw	0
  5513  000F62  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5514  000F64  0E00               	movlw	0
  5515  000F66  6E12               	movwf	LED_Light_Pos@LED_array,c
  5516                           
  5517                           ;LED.c: 200:     UINT flage = fulfillment/10;
  5518  000F68  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5519  000F6C  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5520  000F70  0E00               	movlw	0
  5521  000F72  6E09               	movwf	___lwdiv@divisor+1,c
  5522  000F74  0E0A               	movlw	10
  5523  000F76  6E08               	movwf	___lwdiv@divisor,c
  5524  000F78  ECE5  F00A         	call	___lwdiv	;wreg free
  5525  000F7C  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5526  000F80  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5527                           
  5528                           ;LED.c: 201:     if(color == RED)
  5529  000F84  5011               	movf	LED_Light_Pos@color,w,c
  5530  000F86  B4D8               	btfsc	status,2,c
  5531  000F88  D017               	goto	l4574
  5532  000F8A  D031               	goto	l4582
  5533  000F8C                     l4568:
  5534                           
  5535                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5536  000F8C  5012               	movf	LED_Light_Pos@LED_array,w,c
  5537  000F8E  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5538  000F90  6E12               	movwf	LED_Light_Pos@LED_array,c
  5539  000F92  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5540  000F94  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5541  000F96  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5542                           
  5543                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5544  000F98  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5545  000F9C  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5546  000FA0  EC80  F00B         	call	_LED_Left	;wreg free
  5547  000FA4  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5548  000FA8  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5549                           
  5550                           ;LED.c: 207:             flage = flage - 1;
  5551  000FAC  0EFF               	movlw	255
  5552  000FAE  2416               	addwf	LED_Light_Pos@flage,w,c
  5553  000FB0  6E16               	movwf	LED_Light_Pos@flage,c
  5554  000FB2  0EFF               	movlw	255
  5555  000FB4  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5556  000FB6  6E17               	movwf	LED_Light_Pos@flage+1,c
  5557  000FB8                     l4574:
  5558                           
  5559                           ;LED.c: 203:         while(flage>0)
  5560  000FB8  5016               	movf	LED_Light_Pos@flage,w,c
  5561  000FBA  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5562  000FBC  B4D8               	btfsc	status,2,c
  5563  000FBE  D01B               	goto	u2800
  5564  000FC0  D7E5               	goto	l4568
  5565  000FC2                     l4576:
  5566                           
  5567                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5568  000FC2  5012               	movf	LED_Light_Pos@LED_array,w,c
  5569  000FC4  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5570  000FC6  6E12               	movwf	LED_Light_Pos@LED_array,c
  5571  000FC8  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5572  000FCA  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5573  000FCC  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5574                           
  5575                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5576  000FCE  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5577  000FD2  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5578  000FD6  EC35  F00B         	call	_LED_Right	;wreg free
  5579  000FDA  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5580  000FDE  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5581                           
  5582                           ;LED.c: 216:             flage = flage - 1;
  5583  000FE2  0EFF               	movlw	255
  5584  000FE4  2416               	addwf	LED_Light_Pos@flage,w,c
  5585  000FE6  6E16               	movwf	LED_Light_Pos@flage,c
  5586  000FE8  0EFF               	movlw	255
  5587  000FEA  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5588  000FEC  6E17               	movwf	LED_Light_Pos@flage+1,c
  5589  000FEE                     l4582:
  5590                           
  5591                           ;LED.c: 212:         while(flage>0)
  5592  000FEE  5016               	movf	LED_Light_Pos@flage,w,c
  5593  000FF0  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5594  000FF2  A4D8               	btfss	status,2,c
  5595  000FF4  D7E6               	goto	l4576
  5596  000FF6                     u2800:
  5597                           
  5598                           ;LED.c: 219:     LED_Control(color, LED_array);
  5599  000FF6  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5600  000FFA  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5601  000FFE  5011               	movf	LED_Light_Pos@color,w,c
  5602  001000  EC91  F004         	call	_LED_Control
  5603  001004  0012               	return		;funcret
  5604  001006                     __end_of_LED_Light_Pos:
  5605                           	opt callstack 0
  5606                           
  5607 ;; *************** function ___lwdiv *****************
  5608 ;; Defined at:
  5609 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  dividend        2    5[COMRAM] unsigned int 
  5612 ;;  divisor         2    7[COMRAM] unsigned int 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  quotient        2   10[COMRAM] unsigned int 
  5615 ;;  counter         1    9[COMRAM] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  2    5[COMRAM] unsigned int 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;Total ram usage:        7 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    3
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_LED_Light_Pos
  5636 ;;		_FRAME_Plot
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text42
  5641  0015CA                     __ptext42:
  5642                           	opt callstack 0
  5643  0015CA                     ___lwdiv:
  5644                           	opt callstack 24
  5645                           
  5646                           ;incstack = 0
  5647  0015CA  0E00               	movlw	0
  5648  0015CC  6E0C               	movwf	___lwdiv@quotient+1,c
  5649  0015CE  0E00               	movlw	0
  5650  0015D0  6E0B               	movwf	___lwdiv@quotient,c
  5651  0015D2  5008               	movf	___lwdiv@divisor,w,c
  5652  0015D4  1009               	iorwf	___lwdiv@divisor+1,w,c
  5653  0015D6  B4D8               	btfsc	status,2,c
  5654  0015D8  D01C               	goto	l1434
  5655  0015DA  0E01               	movlw	1
  5656  0015DC  6E0A               	movwf	___lwdiv@counter,c
  5657  0015DE  D004               	goto	l4116
  5658  0015E0                     l4114:
  5659  0015E0  90D8               	bcf	status,0,c
  5660  0015E2  3608               	rlcf	___lwdiv@divisor,f,c
  5661  0015E4  3609               	rlcf	___lwdiv@divisor+1,f,c
  5662  0015E6  2A0A               	incf	___lwdiv@counter,f,c
  5663  0015E8                     l4116:
  5664  0015E8  AE09               	btfss	___lwdiv@divisor+1,7,c
  5665  0015EA  D7FA               	goto	l4114
  5666  0015EC                     u2310:
  5667  0015EC  90D8               	bcf	status,0,c
  5668  0015EE  360B               	rlcf	___lwdiv@quotient,f,c
  5669  0015F0  360C               	rlcf	___lwdiv@quotient+1,f,c
  5670  0015F2  5008               	movf	___lwdiv@divisor,w,c
  5671  0015F4  5C06               	subwf	___lwdiv@dividend,w,c
  5672  0015F6  5009               	movf	___lwdiv@divisor+1,w,c
  5673  0015F8  5807               	subwfb	___lwdiv@dividend+1,w,c
  5674  0015FA  A0D8               	btfss	status,0,c
  5675  0015FC  D005               	goto	l4126
  5676  0015FE  5008               	movf	___lwdiv@divisor,w,c
  5677  001600  5E06               	subwf	___lwdiv@dividend,f,c
  5678  001602  5009               	movf	___lwdiv@divisor+1,w,c
  5679  001604  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5680  001606  800B               	bsf	___lwdiv@quotient,0,c
  5681  001608                     l4126:
  5682  001608  90D8               	bcf	status,0,c
  5683  00160A  3209               	rrcf	___lwdiv@divisor+1,f,c
  5684  00160C  3208               	rrcf	___lwdiv@divisor,f,c
  5685  00160E  2E0A               	decfsz	___lwdiv@counter,f,c
  5686  001610  D7ED               	goto	u2310
  5687  001612                     l1434:
  5688  001612  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5689  001616  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5690  00161A  0012               	return		;funcret
  5691  00161C                     __end_of___lwdiv:
  5692                           	opt callstack 0
  5693                           
  5694 ;; *************** function _LED_Right *****************
  5695 ;; Defined at:
  5696 ;;		line 140 in file "LED.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  a               2    5[COMRAM] unsigned int 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  b               2    9[COMRAM] unsigned int 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2    5[COMRAM] unsigned int 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;Total ram usage:        6 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    3
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_LED_Update
  5721 ;;		_LED_Light_Pos
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text43
  5726  00166A                     __ptext43:
  5727                           	opt callstack 0
  5728  00166A                     _LED_Right:
  5729                           	opt callstack 26
  5730                           
  5731                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5732                           
  5733                           ;incstack = 0
  5734  00166A  A006               	btfss	LED_Right@a,0,c
  5735  00166C  D018               	goto	l4226
  5736                           
  5737                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5738  00166E  0EFE               	movlw	254
  5739  001670  1406               	andwf	LED_Right@a,w,c
  5740  001672  6E0A               	movwf	LED_Right@b,c
  5741  001674  0E03               	movlw	3
  5742  001676  1407               	andwf	LED_Right@a+1,w,c
  5743  001678  6E0B               	movwf	LED_Right@b+1,c
  5744                           
  5745                           ;LED.c: 145:         b = b >> 1;
  5746  00167A  90D8               	bcf	status,0,c
  5747  00167C  300B               	rrcf	LED_Right@b+1,w,c
  5748  00167E  6E08               	movwf	??_LED_Right& (0+255),c
  5749  001680  300A               	rrcf	LED_Right@b,w,c
  5750  001682  6E0A               	movwf	LED_Right@b,c
  5751  001684  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5752                           
  5753                           ;LED.c: 146:         b = b | 0b1000000000;
  5754  001688  0E00               	movlw	0
  5755  00168A  100A               	iorwf	LED_Right@b,w,c
  5756  00168C  6E0A               	movwf	LED_Right@b,c
  5757  00168E  0E02               	movlw	2
  5758  001690  100B               	iorwf	LED_Right@b+1,w,c
  5759  001692  6E0B               	movwf	LED_Right@b+1,c
  5760                           
  5761                           ;LED.c: 147:         return b;
  5762  001694  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5763  001698  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5764  00169C  0012               	return	
  5765  00169E                     l4226:
  5766                           
  5767                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5768  00169E  90D8               	bcf	status,0,c
  5769  0016A0  3007               	rrcf	LED_Right@a+1,w,c
  5770  0016A2  6E08               	movwf	??_LED_Right& (0+255),c
  5771  0016A4  3006               	rrcf	LED_Right@a,w,c
  5772  0016A6  6E06               	movwf	LED_Right@a,c
  5773  0016A8  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5774                           
  5775                           ;LED.c: 152:         return a;
  5776  0016AC  C006  F006         	movff	LED_Right@a,?_LED_Right
  5777  0016B0  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5778  0016B4  0012               	return		;funcret
  5779  0016B6                     __end_of_LED_Right:
  5780                           	opt callstack 0
  5781                           
  5782 ;; *************** function _LED_Left *****************
  5783 ;; Defined at:
  5784 ;;		line 167 in file "LED.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  a               2    5[COMRAM] unsigned int 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  b               2    7[COMRAM] unsigned int 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  2    5[COMRAM] unsigned int 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;Total ram usage:        4 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    3
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_LED_Update
  5809 ;;		_LED_Light_Pos
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text44
  5814  001700                     __ptext44:
  5815                           	opt callstack 0
  5816  001700                     _LED_Left:
  5817                           	opt callstack 25
  5818                           
  5819                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5820                           
  5821                           ;incstack = 0
  5822  001700  A207               	btfss	LED_Left@a+1,1,c
  5823  001702  D015               	goto	l4242
  5824                           
  5825                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5826  001704  0EFF               	movlw	255
  5827  001706  1406               	andwf	LED_Left@a,w,c
  5828  001708  6E08               	movwf	LED_Left@b,c
  5829  00170A  0E01               	movlw	1
  5830  00170C  1407               	andwf	LED_Left@a+1,w,c
  5831  00170E  6E09               	movwf	LED_Left@b+1,c
  5832                           
  5833                           ;LED.c: 172:         b = b << 1;
  5834  001710  90D8               	bcf	status,0,c
  5835  001712  3408               	rlcf	LED_Left@b,w,c
  5836  001714  6E08               	movwf	LED_Left@b,c
  5837  001716  3409               	rlcf	LED_Left@b+1,w,c
  5838  001718  6E09               	movwf	LED_Left@b+1,c
  5839                           
  5840                           ;LED.c: 173:         b = b | 0b0000000001;
  5841  00171A  0E01               	movlw	1
  5842  00171C  1008               	iorwf	LED_Left@b,w,c
  5843  00171E  6E08               	movwf	LED_Left@b,c
  5844  001720  5009               	movf	LED_Left@b+1,w,c
  5845  001722  6E09               	movwf	LED_Left@b+1,c
  5846                           
  5847                           ;LED.c: 174:         return b;
  5848  001724  C008  F006         	movff	LED_Left@b,?_LED_Left
  5849  001728  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5850  00172C  0012               	return	
  5851  00172E                     l4242:
  5852                           
  5853                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5854  00172E  90D8               	bcf	status,0,c
  5855  001730  3406               	rlcf	LED_Left@a,w,c
  5856  001732  6E06               	movwf	LED_Left@a,c
  5857  001734  3407               	rlcf	LED_Left@a+1,w,c
  5858  001736  6E07               	movwf	LED_Left@a+1,c
  5859                           
  5860                           ;LED.c: 179:         return a;
  5861  001738  C006  F006         	movff	LED_Left@a,?_LED_Left
  5862  00173C  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5863  001740  0012               	return		;funcret
  5864  001742                     __end_of_LED_Left:
  5865                           	opt callstack 0
  5866                           
  5867 ;; *************** function _INI_All *****************
  5868 ;; Defined at:
  5869 ;;		line 54 in file "INI.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;Total ram usage:        0 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    6
  5890 ;; This function calls:
  5891 ;;		_CAN_Setup
  5892 ;;		_INI_GlobalInterrupt
  5893 ;;		_INI_LED_Start
  5894 ;;		_INI_OUTPUT
  5895 ;;		_INI_Timer
  5896 ;;		_NVMInit
  5897 ;;		_ReadDataToEEPROM
  5898 ;; This function is called by:
  5899 ;;		_main
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text45
  5904  00199C                     __ptext45:
  5905                           	opt callstack 0
  5906  00199C                     _INI_All:
  5907                           	opt callstack 24
  5908                           
  5909                           ;INI.c: 57:     WDTCONbits.SWDTEN = 1;
  5910                           
  5911                           ;incstack = 0
  5912  00199C  80D1               	bsf	4049,0,c	;volatile
  5913                           
  5914                           ;INI.c: 60:     NVMInit();
  5915  00199E  ECA1  F00B         	call	_NVMInit	;wreg free
  5916                           
  5917                           ;INI.c: 62:     ReadDataToEEPROM();
  5918  0019A2  ECD5  F006         	call	_ReadDataToEEPROM	;wreg free
  5919  0019A6  0004               	clrwdt		;# 
  5920                           
  5921                           ;INI.c: 66:     INI_OUTPUT();
  5922  0019A8  ECDF  F00C         	call	_INI_OUTPUT	;wreg free
  5923                           
  5924                           ;INI.c: 68:     CAN_Setup();
  5925  0019AC  ECFD  F009         	call	_CAN_Setup	;wreg free
  5926                           
  5927                           ;INI.c: 69:     INI_GlobalInterrupt();
  5928  0019B0  EC24  F00D         	call	_INI_GlobalInterrupt	;wreg free
  5929                           
  5930                           ;INI.c: 71:     INI_Timer();
  5931  0019B4  ECFE  F00C         	call	_INI_Timer	;wreg free
  5932                           
  5933                           ;INI.c: 73:     INI_LED_Start();
  5934  0019B8  EC79  F00C         	call	_INI_LED_Start	;wreg free
  5935  0019BC  0012               	return		;funcret
  5936  0019BE                     __end_of_INI_All:
  5937                           	opt callstack 0
  5938                           
  5939 ;; *************** function _ReadDataToEEPROM *****************
  5940 ;; Defined at:
  5941 ;;		line 404 in file "FRAME.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;		None
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;Total ram usage:        0 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    5
  5962 ;; This function calls:
  5963 ;;		_NVMRead
  5964 ;; This function is called by:
  5965 ;;		_INI_All
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text46
  5970  000DAA                     __ptext46:
  5971                           	opt callstack 0
  5972  000DAA                     _ReadDataToEEPROM:
  5973                           	opt callstack 24
  5974                           
  5975                           ;FRAME.c: 406:     NVMRead(&NeightAdress1,4,2);
  5976                           
  5977                           ;incstack = 0
  5978  000DAA  0E57               	movlw	low _NeightAdress1
  5979  000DAC  6E08               	movwf	NVMRead@dest,c
  5980  000DAE  0E00               	movlw	high _NeightAdress1
  5981  000DB0  6E09               	movwf	NVMRead@dest+1,c
  5982  000DB2  0E00               	movlw	0
  5983  000DB4  6E0B               	movwf	NVMRead@addr+1,c
  5984  000DB6  0E04               	movlw	4
  5985  000DB8  6E0A               	movwf	NVMRead@addr,c
  5986  000DBA  0E00               	movlw	0
  5987  000DBC  6E0D               	movwf	NVMRead@count+1,c
  5988  000DBE  0E02               	movlw	2
  5989  000DC0  6E0C               	movwf	NVMRead@count,c
  5990  000DC2  EC5F  F00C         	call	_NVMRead	;wreg free
  5991                           
  5992                           ;FRAME.c: 407:     NVMRead(&NeightAdress2,7,2);
  5993  000DC6  0E55               	movlw	low _NeightAdress2
  5994  000DC8  6E08               	movwf	NVMRead@dest,c
  5995  000DCA  0E00               	movlw	high _NeightAdress2
  5996  000DCC  6E09               	movwf	NVMRead@dest+1,c
  5997  000DCE  0E00               	movlw	0
  5998  000DD0  6E0B               	movwf	NVMRead@addr+1,c
  5999  000DD2  0E07               	movlw	7
  6000  000DD4  6E0A               	movwf	NVMRead@addr,c
  6001  000DD6  0E00               	movlw	0
  6002  000DD8  6E0D               	movwf	NVMRead@count+1,c
  6003  000DDA  0E02               	movlw	2
  6004  000DDC  6E0C               	movwf	NVMRead@count,c
  6005  000DDE  EC5F  F00C         	call	_NVMRead	;wreg free
  6006                           
  6007                           ;FRAME.c: 408:     NVMRead(&NeightAdress3,10,2);
  6008  000DE2  0E4A               	movlw	low _NeightAdress3
  6009  000DE4  6E08               	movwf	NVMRead@dest,c
  6010  000DE6  0E00               	movlw	high _NeightAdress3
  6011  000DE8  6E09               	movwf	NVMRead@dest+1,c
  6012  000DEA  0E00               	movlw	0
  6013  000DEC  6E0B               	movwf	NVMRead@addr+1,c
  6014  000DEE  0E0A               	movlw	10
  6015  000DF0  6E0A               	movwf	NVMRead@addr,c
  6016  000DF2  0E00               	movlw	0
  6017  000DF4  6E0D               	movwf	NVMRead@count+1,c
  6018  000DF6  0E02               	movlw	2
  6019  000DF8  6E0C               	movwf	NVMRead@count,c
  6020  000DFA  EC5F  F00C         	call	_NVMRead	;wreg free
  6021                           
  6022                           ;FRAME.c: 409:     NVMRead(&NeightAdress4,13,2);
  6023  000DFE  0E48               	movlw	low _NeightAdress4
  6024  000E00  6E08               	movwf	NVMRead@dest,c
  6025  000E02  0E00               	movlw	high _NeightAdress4
  6026  000E04  6E09               	movwf	NVMRead@dest+1,c
  6027  000E06  0E00               	movlw	0
  6028  000E08  6E0B               	movwf	NVMRead@addr+1,c
  6029  000E0A  0E0D               	movlw	13
  6030  000E0C  6E0A               	movwf	NVMRead@addr,c
  6031  000E0E  0E00               	movlw	0
  6032  000E10  6E0D               	movwf	NVMRead@count+1,c
  6033  000E12  0E02               	movlw	2
  6034  000E14  6E0C               	movwf	NVMRead@count,c
  6035  000E16  EC5F  F00C         	call	_NVMRead	;wreg free
  6036                           
  6037                           ;FRAME.c: 410:     NVMRead(&NeightAdress5,16,2);
  6038  000E1A  0E46               	movlw	low _NeightAdress5
  6039  000E1C  6E08               	movwf	NVMRead@dest,c
  6040  000E1E  0E00               	movlw	high _NeightAdress5
  6041  000E20  6E09               	movwf	NVMRead@dest+1,c
  6042  000E22  0E00               	movlw	0
  6043  000E24  6E0B               	movwf	NVMRead@addr+1,c
  6044  000E26  0E10               	movlw	16
  6045  000E28  6E0A               	movwf	NVMRead@addr,c
  6046  000E2A  0E00               	movlw	0
  6047  000E2C  6E0D               	movwf	NVMRead@count+1,c
  6048  000E2E  0E02               	movlw	2
  6049  000E30  6E0C               	movwf	NVMRead@count,c
  6050  000E32  EC5F  F00C         	call	_NVMRead	;wreg free
  6051                           
  6052                           ;FRAME.c: 411:     NVMRead(&NeightAdress6,19,2);
  6053  000E36  0E44               	movlw	low _NeightAdress6
  6054  000E38  6E08               	movwf	NVMRead@dest,c
  6055  000E3A  0E00               	movlw	high _NeightAdress6
  6056  000E3C  6E09               	movwf	NVMRead@dest+1,c
  6057  000E3E  0E00               	movlw	0
  6058  000E40  6E0B               	movwf	NVMRead@addr+1,c
  6059  000E42  0E13               	movlw	19
  6060  000E44  6E0A               	movwf	NVMRead@addr,c
  6061  000E46  0E00               	movlw	0
  6062  000E48  6E0D               	movwf	NVMRead@count+1,c
  6063  000E4A  0E02               	movlw	2
  6064  000E4C  6E0C               	movwf	NVMRead@count,c
  6065  000E4E  EC5F  F00C         	call	_NVMRead	;wreg free
  6066                           
  6067                           ;FRAME.c: 412:     NVMRead(&NeightAdress7,22,2);
  6068  000E52  0E42               	movlw	low _NeightAdress7
  6069  000E54  6E08               	movwf	NVMRead@dest,c
  6070  000E56  0E00               	movlw	high _NeightAdress7
  6071  000E58  6E09               	movwf	NVMRead@dest+1,c
  6072  000E5A  0E00               	movlw	0
  6073  000E5C  6E0B               	movwf	NVMRead@addr+1,c
  6074  000E5E  0E16               	movlw	22
  6075  000E60  6E0A               	movwf	NVMRead@addr,c
  6076  000E62  0E00               	movlw	0
  6077  000E64  6E0D               	movwf	NVMRead@count+1,c
  6078  000E66  0E02               	movlw	2
  6079  000E68  6E0C               	movwf	NVMRead@count,c
  6080  000E6A  EC5F  F00C         	call	_NVMRead	;wreg free
  6081                           
  6082                           ;FRAME.c: 413:     NVMRead(&NeightAdress8,25,2);
  6083  000E6E  0E40               	movlw	low _NeightAdress8
  6084  000E70  6E08               	movwf	NVMRead@dest,c
  6085  000E72  0E00               	movlw	high _NeightAdress8
  6086  000E74  6E09               	movwf	NVMRead@dest+1,c
  6087  000E76  0E00               	movlw	0
  6088  000E78  6E0B               	movwf	NVMRead@addr+1,c
  6089  000E7A  0E19               	movlw	25
  6090  000E7C  6E0A               	movwf	NVMRead@addr,c
  6091  000E7E  0E00               	movlw	0
  6092  000E80  6E0D               	movwf	NVMRead@count+1,c
  6093  000E82  0E02               	movlw	2
  6094  000E84  6E0C               	movwf	NVMRead@count,c
  6095  000E86  EC5F  F00C         	call	_NVMRead	;wreg free
  6096  000E8A  0012               	return		;funcret
  6097  000E8C                     __end_of_ReadDataToEEPROM:
  6098                           	opt callstack 0
  6099                           
  6100 ;; *************** function _NVMRead *****************
  6101 ;; Defined at:
  6102 ;;		line 79 in file "EEPROM.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6105 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  6106 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  6107 ;;  addr            2    9[COMRAM] unsigned short 
  6108 ;;  count           2   11[COMRAM] unsigned short 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6120 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;Total ram usage:        6 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    4
  6127 ;; This function calls:
  6128 ;;		_ReadfromEEPROM
  6129 ;; This function is called by:
  6130 ;;		_ReadDataToEEPROM
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text47
  6135  0018BE                     __ptext47:
  6136                           	opt callstack 0
  6137  0018BE                     _NVMRead:
  6138                           	opt callstack 24
  6139                           
  6140                           ;EEPROM.c: 79: void NVMRead(BYTE *dest, WORD addr, WORD count);EEPROM.c: 80: {;EEPROM.c:
      +                           81:     while( count > 0 )
  6141                           
  6142                           ;incstack = 0
  6143  0018BE  D014               	goto	l4354
  6144  0018C0                     l927:
  6145  0018C0  B2A6               	btfsc	4006,1,c	;volsfr
  6146  0018C2  D7FE               	goto	l927
  6147                           
  6148                           ;EEPROM.c: 84:         *dest++ = ReadfromEEPROM(addr++);
  6149  0018C4  C00A  F006         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6150  0018C8  C00B  F007         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6151  0018CC  EC14  F00D         	call	_ReadfromEEPROM	;wreg free
  6152  0018D0  C008  FFD9         	movff	NVMRead@dest,fsr2l
  6153  0018D4  C009  FFDA         	movff	NVMRead@dest+1,fsr2h
  6154  0018D8  6EDF               	movwf	indf2,c
  6155  0018DA  4A0A               	infsnz	NVMRead@addr,f,c
  6156  0018DC  2A0B               	incf	NVMRead@addr+1,f,c
  6157  0018DE  4A08               	infsnz	NVMRead@dest,f,c
  6158  0018E0  2A09               	incf	NVMRead@dest+1,f,c
  6159                           
  6160                           ;EEPROM.c: 85:         count--;
  6161  0018E2  060C               	decf	NVMRead@count,f,c
  6162  0018E4  A0D8               	btfss	status,0,c
  6163  0018E6  060D               	decf	NVMRead@count+1,f,c
  6164  0018E8                     l4354:
  6165                           
  6166                           ;EEPROM.c: 81:     while( count > 0 )
  6167  0018E8  500C               	movf	NVMRead@count,w,c
  6168  0018EA  100D               	iorwf	NVMRead@count+1,w,c
  6169  0018EC  B4D8               	btfsc	status,2,c
  6170  0018EE  0012               	return	
  6171  0018F0  D7E7               	goto	l927
  6172  0018F2                     __end_of_NVMRead:
  6173                           	opt callstack 0
  6174                           
  6175 ;; *************** function _ReadfromEEPROM *****************
  6176 ;; Defined at:
  6177 ;;		line 45 in file "EEPROM.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  Address         2    5[COMRAM] unsigned short 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      unsigned char 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;Total ram usage:        2 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    3
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_NVMRead
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text48
  6206  001A28                     __ptext48:
  6207                           	opt callstack 0
  6208  001A28                     _ReadfromEEPROM:
  6209                           	opt callstack 24
  6210                           
  6211                           ;EEPROM.c: 45: static BYTE ReadfromEEPROM(WORD Address);EEPROM.c: 46: {;EEPROM.c: 47:   
      +                            EEADRH = (BYTE)(Address>>8);
  6212                           
  6213                           ;incstack = 0
  6214  001A28  5007               	movf	ReadfromEEPROM@Address+1,w,c
  6215  001A2A  6EAA               	movwf	4010,c	;volatile
  6216                           
  6217                           ;EEPROM.c: 48:     EEADR = (BYTE)Address;
  6218  001A2C  C006  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6219                           
  6220                           ;EEPROM.c: 49:     EECON1bits.RD = 1;
  6221  001A30  80A6               	bsf	4006,0,c	;volsfr
  6222                           
  6223                           ;EEPROM.c: 50:     EECON1bits.EEPGD = 0;
  6224  001A32  9EA6               	bcf	4006,7,c	;volsfr
  6225                           
  6226                           ;EEPROM.c: 51:     EECON1bits.CFGS = 0;
  6227  001A34  9CA6               	bcf	4006,6,c	;volsfr
  6228                           
  6229                           ;EEPROM.c: 52:     return EEDATA;
  6230  001A36  50A8               	movf	4008,w,c	;volatile
  6231  001A38  0012               	return		;funcret
  6232  001A3A                     __end_of_ReadfromEEPROM:
  6233                           	opt callstack 0
  6234                           
  6235 ;; *************** function _NVMInit *****************
  6236 ;; Defined at:
  6237 ;;		line 26 in file "EEPROM.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;		None
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  result          1   11[COMRAM] enum E10433
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      enum E10433
  6244 ;; Registers used:
  6245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6255 ;;Total ram usage:        1 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    4
  6258 ;; This function calls:
  6259 ;;		_NVMalloc
  6260 ;; This function is called by:
  6261 ;;		_INI_All
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text49
  6266  001742                     __ptext49:
  6267                           	opt callstack 0
  6268  001742                     _NVMInit:
  6269                           	opt callstack 25
  6270                           
  6271                           ;EEPROM.c: 28:     BOOL result = TRUE;
  6272                           
  6273                           ;incstack = 0
  6274  001742  0E01               	movlw	1
  6275  001744  6E0C               	movwf	NVMInit@result,c
  6276                           
  6277                           ;EEPROM.c: 30:     nextEEPosition = 0;
  6278  001746  0E00               	movlw	0
  6279  001748  6E31               	movwf	_nextEEPosition+1,c
  6280  00174A  0E00               	movlw	0
  6281  00174C  6E30               	movwf	_nextEEPosition,c
  6282                           
  6283                           ;EEPROM.c: 32:     result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6284  00174E  0E00               	movlw	0
  6285  001750  6E07               	movwf	NVMalloc@size+1,c
  6286  001752  0E03               	movlw	3
  6287  001754  6E06               	movwf	NVMalloc@size,c
  6288  001756  0E3E               	movlw	low _ustawieniaKarty
  6289  001758  6E08               	movwf	NVMalloc@location,c
  6290  00175A  0E00               	movlw	high _ustawieniaKarty
  6291  00175C  6E09               	movwf	NVMalloc@location+1,c
  6292  00175E  EC2A  F00C         	call	_NVMalloc	;wreg free
  6293  001762  160C               	andwf	NVMInit@result,f,c
  6294                           
  6295                           ;EEPROM.c: 33:     result &= NVMalloc(8*sizeof(NeightAdress1), &neighborsAdress);
  6296  001764  0E00               	movlw	0
  6297  001766  6E07               	movwf	NVMalloc@size+1,c
  6298  001768  0E10               	movlw	16
  6299  00176A  6E06               	movwf	NVMalloc@size,c
  6300  00176C  0E3C               	movlw	low _neighborsAdress
  6301  00176E  6E08               	movwf	NVMalloc@location,c
  6302  001770  0E00               	movlw	high _neighborsAdress
  6303  001772  6E09               	movwf	NVMalloc@location+1,c
  6304  001774  EC2A  F00C         	call	_NVMalloc	;wreg free
  6305  001778  160C               	andwf	NVMInit@result,f,c
  6306  00177A  0012               	return		;funcret
  6307  00177C                     __end_of_NVMInit:
  6308                           	opt callstack 0
  6309                           
  6310 ;; *************** function _NVMalloc *****************
  6311 ;; Defined at:
  6312 ;;		line 11 in file "EEPROM.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  size            2    5[COMRAM] unsigned short 
  6315 ;;  location        2    7[COMRAM] PTR unsigned short 
  6316 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      enum E10433
  6321 ;; Registers used:
  6322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:        6 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    3
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_NVMInit
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text50
  6343  001854                     __ptext50:
  6344                           	opt callstack 0
  6345  001854                     _NVMalloc:
  6346                           	opt callstack 25
  6347                           
  6348                           ;EEPROM.c: 11: BOOL NVMalloc(WORD size, WORD *location);EEPROM.c: 12: {;EEPROM.c: 15:   
      +                            if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6349                           
  6350                           ;incstack = 0
  6351  001854  5006               	movf	NVMalloc@size,w,c
  6352  001856  2430               	addwf	_nextEEPosition,w,c
  6353  001858  6E0A               	movwf	??_NVMalloc& (0+255),c
  6354  00185A  5007               	movf	NVMalloc@size+1,w,c
  6355  00185C  2031               	addwfc	_nextEEPosition+1,w,c
  6356  00185E  6E0B               	movwf	(??_NVMalloc+1)& (0+255),c
  6357  001860  040A               	decf	??_NVMalloc,w,c
  6358  001862  0E04               	movlw	4
  6359  001864  580B               	subwfb	??_NVMalloc+1,w,c
  6360  001866  A0D8               	btfss	status,0,c
  6361  001868  D002               	goto	l4400
  6362                           
  6363                           ;EEPROM.c: 16:     {;EEPROM.c: 17:         return FALSE;
  6364  00186A  0E00               	movlw	0
  6365  00186C  0012               	return	
  6366  00186E                     l4400:
  6367                           
  6368                           ;EEPROM.c: 20:     *location = nextEEPosition;
  6369  00186E  C008  FFD9         	movff	NVMalloc@location,fsr2l
  6370  001872  C009  FFDA         	movff	NVMalloc@location+1,fsr2h
  6371  001876  C030  FFDE         	movff	_nextEEPosition,postinc2
  6372  00187A  C031  FFDD         	movff	_nextEEPosition+1,postdec2
  6373                           
  6374                           ;EEPROM.c: 21:     nextEEPosition += size;
  6375  00187E  5006               	movf	NVMalloc@size,w,c
  6376  001880  2630               	addwf	_nextEEPosition,f,c
  6377  001882  5007               	movf	NVMalloc@size+1,w,c
  6378  001884  2231               	addwfc	_nextEEPosition+1,f,c
  6379                           
  6380                           ;EEPROM.c: 22:     return TRUE;
  6381  001886  0E01               	movlw	1
  6382  001888  0012               	return		;funcret
  6383  00188A                     __end_of_NVMalloc:
  6384                           	opt callstack 0
  6385                           
  6386 ;; *************** function _INI_Timer *****************
  6387 ;; Defined at:
  6388 ;;		line 92 in file "TMR1.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      unsigned char 
  6395 ;; Registers used:
  6396 ;;		wreg, status,2
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    3
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_INI_All
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text51
  6417  0019FC                     __ptext51:
  6418                           	opt callstack 0
  6419  0019FC                     _INI_Timer:
  6420                           	opt callstack 26
  6421                           
  6422                           ;TMR1.c: 96:     IRCF2 = 1;
  6423                           
  6424                           ;incstack = 0
  6425  0019FC  8CD3               	bsf	4051,6,c	;volatile
  6426                           
  6427                           ;TMR1.c: 97:     IRCF1 = 1;
  6428  0019FE  8AD3               	bsf	4051,5,c	;volatile
  6429                           
  6430                           ;TMR1.c: 98:     IRCF0 = 1;
  6431  001A00  88D3               	bsf	4051,4,c	;volatile
  6432                           
  6433                           ;TMR1.c: 99:     T1CON = 0b00111101;
  6434  001A02  0E3D               	movlw	61
  6435  001A04  6ECD               	movwf	4045,c	;volatile
  6436                           
  6437                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6438  001A06  0E9E               	movlw	158
  6439  001A08  6ECF               	movwf	4047,c	;volatile
  6440                           
  6441                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6442  001A0A  0E57               	movlw	87
  6443  001A0C  6ECE               	movwf	4046,c	;volatile
  6444                           
  6445                           ;TMR1.c: 102:     TMR1IE=1;
  6446  001A0E  809D               	bsf	3997,0,c	;volatile
  6447                           
  6448                           ;TMR1.c: 103:     TMR1ON = 1;
  6449  001A10  80CD               	bsf	4045,0,c	;volatile
  6450  001A12  0012               	return		;funcret
  6451  001A14                     __end_of_INI_Timer:
  6452                           	opt callstack 0
  6453                           
  6454 ;; *************** function _INI_OUTPUT *****************
  6455 ;; Defined at:
  6456 ;;		line 29 in file "INI.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    3
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_INI_All
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text52
  6485  0019BE                     __ptext52:
  6486                           	opt callstack 0
  6487  0019BE                     _INI_OUTPUT:
  6488                           	opt callstack 26
  6489                           
  6490                           ;INI.c: 33:     LATA = 0;
  6491                           
  6492                           ;incstack = 0
  6493  0019BE  0E00               	movlw	0
  6494  0019C0  6E89               	movwf	3977,c	;volatile
  6495                           
  6496                           ;INI.c: 34:     LATB = 0;
  6497  0019C2  0E00               	movlw	0
  6498  0019C4  6E8A               	movwf	3978,c	;volatile
  6499                           
  6500                           ;INI.c: 35:     LATC = 0;
  6501  0019C6  0E00               	movlw	0
  6502  0019C8  6E8B               	movwf	3979,c	;volatile
  6503                           
  6504                           ;INI.c: 36:     TRISA = 0x0C;
  6505  0019CA  0E0C               	movlw	12
  6506  0019CC  6E92               	movwf	3986,c	;volatile
  6507                           
  6508                           ;INI.c: 37:     TRISB = 0b10001000;
  6509  0019CE  0E88               	movlw	136
  6510  0019D0  6E93               	movwf	3987,c	;volatile
  6511                           
  6512                           ;INI.c: 38:     TRISC = 0xBF;
  6513  0019D2  0EBF               	movlw	191
  6514  0019D4  6E94               	movwf	3988,c	;volatile
  6515                           
  6516                           ;INI.c: 39:     RCONbits.IPEN = 1;
  6517  0019D6  8ED0               	bsf	4048,7,c	;volatile
  6518                           
  6519                           ;INI.c: 42:     DetectorLedRadar.Flags.inicjalizacja = 1;
  6520  0019D8  0100               	movlb	0	; () banked
  6521  0019DA  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6522                           
  6523                           ; BSR set to: 0
  6524  0019DC  0012               	return		;funcret
  6525  0019DE                     __end_of_INI_OUTPUT:
  6526                           	opt callstack 0
  6527                           
  6528 ;; *************** function _INI_LED_Start *****************
  6529 ;; Defined at:
  6530 ;;		line 231 in file "LED.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;Total ram usage:        0 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    4
  6551 ;; This function calls:
  6552 ;;		_LED_Control
  6553 ;; This function is called by:
  6554 ;;		_INI_All
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text53
  6559  0018F2                     __ptext53:
  6560                           	opt callstack 0
  6561  0018F2                     _INI_LED_Start:
  6562                           	opt callstack 25
  6563                           
  6564                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;incstack = 0
  6568  0018F2  5092               	movf	3986,w,c	;volatile
  6569  0018F4  0B01               	andlw	1
  6570  0018F6  6E92               	movwf	3986,c	;volatile
  6571                           
  6572                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  6573  0018F8  5093               	movf	3987,w,c	;volatile
  6574  0018FA  0BFC               	andlw	252
  6575  0018FC  6E93               	movwf	3987,c	;volatile
  6576                           
  6577                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  6578  0018FE  5096               	movf	3990,w,c	;volatile
  6579  001900  0BF8               	andlw	248
  6580  001902  6E96               	movwf	3990,c	;volatile
  6581                           
  6582                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  6583  001904  0E00               	movlw	0
  6584  001906  6E95               	movwf	3989,c	;volatile
  6585                           
  6586                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  6587  001908  0E00               	movlw	0
  6588  00190A  6E07               	movwf	LED_Control@diode+1,c
  6589  00190C  0E00               	movlw	0
  6590  00190E  6E06               	movwf	LED_Control@diode,c
  6591  001910  0E00               	movlw	0
  6592  001912  EC91  F004         	call	_LED_Control
  6593                           
  6594                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  6595  001916  0E00               	movlw	0
  6596  001918  6E07               	movwf	LED_Control@diode+1,c
  6597  00191A  0E00               	movlw	0
  6598  00191C  6E06               	movwf	LED_Control@diode,c
  6599  00191E  0E01               	movlw	1
  6600  001920  EC91  F004         	call	_LED_Control
  6601  001924  0012               	return		;funcret
  6602  001926                     __end_of_INI_LED_Start:
  6603                           	opt callstack 0
  6604                           
  6605 ;; *************** function _LED_Control *****************
  6606 ;; Defined at:
  6607 ;;		line 256 in file "LED.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  color           1    wreg     enum E10644
  6610 ;;  diode           2    5[COMRAM] unsigned int 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  color           1    9[COMRAM] enum E10644
  6613 ;;  cos             2    0        unsigned int 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  1    wreg      unsigned char 
  6616 ;; Registers used:
  6617 ;;		wreg, status,2, status,0
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;Total ram usage:        5 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    3
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_LED_Error
  6634 ;;		_LED_Update
  6635 ;;		_LED_Light_Pos
  6636 ;;		_INI_LED_Start
  6637 ;;		_LED_Clear
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text54
  6642  000922                     __ptext54:
  6643                           	opt callstack 0
  6644  000922                     _LED_Control:
  6645                           	opt callstack 24
  6646                           
  6647                           ;incstack = 0
  6648                           ;LED_Control@color stored from wreg
  6649  000922  6E0A               	movwf	LED_Control@color,c
  6650                           
  6651                           ;LED.c: 259:     if(color == RED)
  6652  000924  500A               	movf	LED_Control@color,w,c
  6653  000926  A4D8               	btfss	status,2,c
  6654  000928  D050               	goto	l419
  6655                           
  6656                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  6657  00092A  A006               	btfss	LED_Control@diode,0,c
  6658  00092C  D003               	goto	l3884
  6659                           
  6660                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  6661  00092E  508C               	movf	3980,w,c	;volatile
  6662  000930  0910               	iorlw	16
  6663  000932  D002               	goto	L4
  6664  000934                     l3884:
  6665                           
  6666                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  6667  000934  508C               	movf	3980,w,c	;volatile
  6668  000936  0BEF               	andlw	239
  6669  000938                     L4:
  6670  000938  6E8C               	movwf	3980,c	;volatile
  6671                           
  6672                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  6673  00093A  A206               	btfss	LED_Control@diode,1,c
  6674  00093C  D003               	goto	l3890
  6675                           
  6676                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  6677  00093E  508C               	movf	3980,w,c	;volatile
  6678  000940  0940               	iorlw	64
  6679  000942  D002               	goto	L5
  6680  000944                     l3890:
  6681                           
  6682                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  6683  000944  508C               	movf	3980,w,c	;volatile
  6684  000946  0BBF               	andlw	191
  6685  000948                     L5:
  6686  000948  6E8C               	movwf	3980,c	;volatile
  6687                           
  6688                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  6689  00094A  A406               	btfss	LED_Control@diode,2,c
  6690  00094C  D003               	goto	l3896
  6691                           
  6692                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  6693  00094E  508A               	movf	3978,w,c	;volatile
  6694  000950  0901               	iorlw	1
  6695  000952  D002               	goto	L6
  6696  000954                     l3896:
  6697                           
  6698                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  6699  000954  508A               	movf	3978,w,c	;volatile
  6700  000956  0BFE               	andlw	254
  6701  000958                     L6:
  6702  000958  6E8A               	movwf	3978,c	;volatile
  6703                           
  6704                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  6705  00095A  A606               	btfss	LED_Control@diode,3,c
  6706  00095C  D003               	goto	l3902
  6707                           
  6708                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  6709  00095E  5089               	movf	3977,w,c	;volatile
  6710  000960  0902               	iorlw	2
  6711  000962  D002               	goto	L7
  6712  000964                     l3902:
  6713                           
  6714                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  6715  000964  5089               	movf	3977,w,c	;volatile
  6716  000966  0BFD               	andlw	253
  6717  000968                     L7:
  6718  000968  6E89               	movwf	3977,c	;volatile
  6719                           
  6720                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  6721  00096A  A806               	btfss	LED_Control@diode,4,c
  6722  00096C  D003               	goto	l3908
  6723                           
  6724                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  6725  00096E  5089               	movf	3977,w,c	;volatile
  6726  000970  0908               	iorlw	8
  6727  000972  D002               	goto	L8
  6728  000974                     l3908:
  6729                           
  6730                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  6731  000974  5089               	movf	3977,w,c	;volatile
  6732  000976  0BF7               	andlw	247
  6733  000978                     L8:
  6734  000978  6E89               	movwf	3977,c	;volatile
  6735                           
  6736                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  6737  00097A  AA06               	btfss	LED_Control@diode,5,c
  6738  00097C  D003               	goto	l3914
  6739                           
  6740                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  6741  00097E  5089               	movf	3977,w,c	;volatile
  6742  000980  0920               	iorlw	32
  6743  000982  D002               	goto	L9
  6744  000984                     l3914:
  6745                           
  6746                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  6747  000984  5089               	movf	3977,w,c	;volatile
  6748  000986  0BDF               	andlw	223
  6749  000988                     L9:
  6750  000988  6E89               	movwf	3977,c	;volatile
  6751                           
  6752                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  6753  00098A  AC06               	btfss	LED_Control@diode,6,c
  6754  00098C  D003               	goto	l3920
  6755                           
  6756                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  6757  00098E  508D               	movf	3981,w,c	;volatile
  6758  000990  0902               	iorlw	2
  6759  000992  D002               	goto	L10
  6760  000994                     l3920:
  6761                           
  6762                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  6763  000994  508D               	movf	3981,w,c	;volatile
  6764  000996  0BFD               	andlw	253
  6765  000998                     L10:
  6766  000998  6E8D               	movwf	3981,c	;volatile
  6767                           
  6768                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  6769  00099A  AE06               	btfss	LED_Control@diode,7,c
  6770  00099C  D003               	goto	l3926
  6771                           
  6772                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  6773  00099E  5089               	movf	3977,w,c	;volatile
  6774  0009A0  0980               	iorlw	128
  6775  0009A2  D002               	goto	L11
  6776  0009A4                     l3926:
  6777                           
  6778                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  6779  0009A4  5089               	movf	3977,w,c	;volatile
  6780  0009A6  0B7F               	andlw	127
  6781  0009A8                     L11:
  6782  0009A8  6E89               	movwf	3977,c	;volatile
  6783                           
  6784                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  6785  0009AA  A007               	btfss	LED_Control@diode+1,0,c
  6786  0009AC  D003               	goto	l3932
  6787                           
  6788                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  6789  0009AE  508C               	movf	3980,w,c	;volatile
  6790  0009B0  0901               	iorlw	1
  6791  0009B2  D002               	goto	L12
  6792  0009B4                     l3932:
  6793                           
  6794                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  6795  0009B4  508C               	movf	3980,w,c	;volatile
  6796  0009B6  0BFE               	andlw	254
  6797  0009B8                     L12:
  6798  0009B8  6E8C               	movwf	3980,c	;volatile
  6799                           
  6800                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  6801  0009BA  A207               	btfss	LED_Control@diode+1,1,c
  6802  0009BC  D003               	goto	l3938
  6803                           
  6804                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  6805  0009BE  508C               	movf	3980,w,c	;volatile
  6806  0009C0  0904               	iorlw	4
  6807  0009C2  D002               	goto	L13
  6808  0009C4                     l3938:
  6809                           
  6810                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  6811  0009C4  508C               	movf	3980,w,c	;volatile
  6812  0009C6  0BFB               	andlw	251
  6813  0009C8                     L13:
  6814  0009C8  6E8C               	movwf	3980,c	;volatile
  6815  0009CA                     l419:
  6816                           
  6817                           ;LED.c: 358:     if(color == GREEN)
  6818  0009CA  040A               	decf	LED_Control@color,w,c
  6819  0009CC  A4D8               	btfss	status,2,c
  6820  0009CE  0012               	return	
  6821                           
  6822                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  6823  0009D0  A006               	btfss	LED_Control@diode,0,c
  6824  0009D2  D003               	goto	l3944
  6825                           
  6826                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  6827  0009D4  508C               	movf	3980,w,c	;volatile
  6828  0009D6  0920               	iorlw	32
  6829  0009D8  D002               	goto	L14
  6830  0009DA                     l3944:
  6831                           
  6832                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  6833  0009DA  508C               	movf	3980,w,c	;volatile
  6834  0009DC  0BDF               	andlw	223
  6835  0009DE                     L14:
  6836  0009DE  6E8C               	movwf	3980,c	;volatile
  6837                           
  6838                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  6839  0009E0  A206               	btfss	LED_Control@diode,1,c
  6840  0009E2  D003               	goto	l3950
  6841                           
  6842                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  6843  0009E4  508C               	movf	3980,w,c	;volatile
  6844  0009E6  0980               	iorlw	128
  6845  0009E8  D002               	goto	L15
  6846  0009EA                     l3950:
  6847                           
  6848                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  6849  0009EA  508C               	movf	3980,w,c	;volatile
  6850  0009EC  0B7F               	andlw	127
  6851  0009EE                     L15:
  6852  0009EE  6E8C               	movwf	3980,c	;volatile
  6853                           
  6854                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  6855  0009F0  A406               	btfss	LED_Control@diode,2,c
  6856  0009F2  D003               	goto	l3956
  6857                           
  6858                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  6859  0009F4  508A               	movf	3978,w,c	;volatile
  6860  0009F6  0902               	iorlw	2
  6861  0009F8  D002               	goto	L16
  6862  0009FA                     l3956:
  6863                           
  6864                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  6865  0009FA  508A               	movf	3978,w,c	;volatile
  6866  0009FC  0BFD               	andlw	253
  6867  0009FE                     L16:
  6868  0009FE  6E8A               	movwf	3978,c	;volatile
  6869                           
  6870                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  6871  000A00  A606               	btfss	LED_Control@diode,3,c
  6872  000A02  D003               	goto	l3962
  6873                           
  6874                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  6875  000A04  5089               	movf	3977,w,c	;volatile
  6876  000A06  0904               	iorlw	4
  6877  000A08  D002               	goto	L17
  6878  000A0A                     l3962:
  6879                           
  6880                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  6881  000A0A  5089               	movf	3977,w,c	;volatile
  6882  000A0C  0BFB               	andlw	251
  6883  000A0E                     L17:
  6884  000A0E  6E89               	movwf	3977,c	;volatile
  6885                           
  6886                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  6887  000A10  A806               	btfss	LED_Control@diode,4,c
  6888  000A12  D003               	goto	l3968
  6889                           
  6890                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  6891  000A14  5089               	movf	3977,w,c	;volatile
  6892  000A16  0910               	iorlw	16
  6893  000A18  D002               	goto	L18
  6894  000A1A                     l3968:
  6895                           
  6896                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  6897  000A1A  5089               	movf	3977,w,c	;volatile
  6898  000A1C  0BEF               	andlw	239
  6899  000A1E                     L18:
  6900  000A1E  6E89               	movwf	3977,c	;volatile
  6901                           
  6902                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  6903  000A20  AA06               	btfss	LED_Control@diode,5,c
  6904  000A22  D003               	goto	l3974
  6905                           
  6906                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  6907  000A24  508D               	movf	3981,w,c	;volatile
  6908  000A26  0901               	iorlw	1
  6909  000A28  D002               	goto	L19
  6910  000A2A                     l3974:
  6911                           
  6912                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  6913  000A2A  508D               	movf	3981,w,c	;volatile
  6914  000A2C  0BFE               	andlw	254
  6915  000A2E                     L19:
  6916  000A2E  6E8D               	movwf	3981,c	;volatile
  6917                           
  6918                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  6919  000A30  AC06               	btfss	LED_Control@diode,6,c
  6920  000A32  D003               	goto	l3980
  6921                           
  6922                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  6923  000A34  508D               	movf	3981,w,c	;volatile
  6924  000A36  0904               	iorlw	4
  6925  000A38  D002               	goto	L20
  6926  000A3A                     l3980:
  6927                           
  6928                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  6929  000A3A  508D               	movf	3981,w,c	;volatile
  6930  000A3C  0BFB               	andlw	251
  6931  000A3E                     L20:
  6932  000A3E  6E8D               	movwf	3981,c	;volatile
  6933                           
  6934                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  6935  000A40  AE06               	btfss	LED_Control@diode,7,c
  6936  000A42  D003               	goto	l3986
  6937                           
  6938                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  6939  000A44  5089               	movf	3977,w,c	;volatile
  6940  000A46  0940               	iorlw	64
  6941  000A48  D002               	goto	L21
  6942  000A4A                     l3986:
  6943                           
  6944                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  6945  000A4A  5089               	movf	3977,w,c	;volatile
  6946  000A4C  0BBF               	andlw	191
  6947  000A4E                     L21:
  6948  000A4E  6E89               	movwf	3977,c	;volatile
  6949                           
  6950                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  6951  000A50  A007               	btfss	LED_Control@diode+1,0,c
  6952  000A52  D003               	goto	l3992
  6953                           
  6954                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  6955  000A54  508C               	movf	3980,w,c	;volatile
  6956  000A56  0902               	iorlw	2
  6957  000A58  D002               	goto	L22
  6958  000A5A                     l3992:
  6959                           
  6960                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  6961  000A5A  508C               	movf	3980,w,c	;volatile
  6962  000A5C  0BFD               	andlw	253
  6963  000A5E                     L22:
  6964  000A5E  6E8C               	movwf	3980,c	;volatile
  6965                           
  6966                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  6967  000A60  A207               	btfss	LED_Control@diode+1,1,c
  6968  000A62  D004               	goto	l3998
  6969                           
  6970                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  6971  000A64  508C               	movf	3980,w,c	;volatile
  6972  000A66  0908               	iorlw	8
  6973  000A68  6E8C               	movwf	3980,c	;volatile
  6974                           
  6975                           ;LED.c: 450:         }
  6976  000A6A  0012               	return	
  6977  000A6C                     l3998:
  6978                           
  6979                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  6980  000A6C  508C               	movf	3980,w,c	;volatile
  6981  000A6E  0BF7               	andlw	247
  6982  000A70  6E8C               	movwf	3980,c	;volatile
  6983  000A72  0012               	return		;funcret
  6984  000A74                     __end_of_LED_Control:
  6985                           	opt callstack 0
  6986                           
  6987 ;; *************** function _INI_GlobalInterrupt *****************
  6988 ;; Defined at:
  6989 ;;		line 78 in file "INI.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;		None
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;		None
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  1    wreg      void 
  6996 ;; Registers used:
  6997 ;;		None
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;Total ram usage:        0 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:    3
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_INI_All
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text55
  7018  001A48                     __ptext55:
  7019                           	opt callstack 0
  7020  001A48                     _INI_GlobalInterrupt:
  7021                           	opt callstack 26
  7022                           
  7023                           ;INI.c: 80: INTCONbits.GIEH=1;
  7024                           
  7025                           ;incstack = 0
  7026  001A48  8EF2               	bsf	4082,7,c	;volatile
  7027                           
  7028                           ;INI.c: 81: INTCONbits.GIEL=1;
  7029  001A4A  8CF2               	bsf	4082,6,c	;volatile
  7030                           
  7031                           ;INI.c: 82: RCONbits.IPEN=1;
  7032  001A4C  8ED0               	bsf	4048,7,c	;volatile
  7033                           
  7034                           ;INI.c: 83: IPEN =1;
  7035  001A4E  8ED0               	bsf	4048,7,c	;volatile
  7036                           
  7037                           ;INI.c: 85: PEIE=1;
  7038  001A50  8CF2               	bsf	4082,6,c	;volatile
  7039                           
  7040                           ;INI.c: 86: TMR1IP = 0;
  7041  001A52  909F               	bcf	3999,0,c	;volatile
  7042  001A54  0012               	return		;funcret
  7043  001A56                     __end_of_INI_GlobalInterrupt:
  7044                           	opt callstack 0
  7045                           
  7046 ;; *************** function _CAN_Setup *****************
  7047 ;; Defined at:
  7048 ;;		line 24 in file "CAN.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      void 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;Total ram usage:        1 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    5
  7069 ;; This function calls:
  7070 ;;		_CAN_SetupClock
  7071 ;;		_CAN_SetupMask
  7072 ;; This function is called by:
  7073 ;;		_INI_All
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text56
  7078  0013FA                     __ptext56:
  7079                           	opt callstack 0
  7080  0013FA                     _CAN_Setup:
  7081                           	opt callstack 24
  7082                           
  7083                           ;CAN.c: 29:     CANCON = 0x80;
  7084                           
  7085                           ;incstack = 0
  7086  0013FA  0E80               	movlw	128
  7087  0013FC  6E6F               	movwf	3951,c	;volatile
  7088  0013FE                     l4454:
  7089                           
  7090                           ;CAN.c: 30:     while((CANSTAT & 0xE0)!=0x80)
  7091  0013FE  506E               	movf	3950,w,c	;volatile
  7092  001400  0BE0               	andlw	224
  7093  001402  0A80               	xorlw	128
  7094  001404  A4D8               	btfss	status,2,c
  7095  001406  D7FB               	goto	l4454
  7096                           
  7097                           ;CAN.c: 35:     BSEL0 = 0;
  7098  001408  0E00               	movlw	0
  7099  00140A  010D               	movlb	13	; () banked
  7100  00140C  6FF8               	movwf	248,b	;volatile
  7101                           
  7102                           ;CAN.c: 36:     TXB0CON = 0;
  7103  00140E  0E00               	movlw	0
  7104  001410  010F               	movlb	15	; () banked
  7105  001412  6F40               	movwf	64,b	;volatile
  7106                           
  7107                           ;CAN.c: 37:     RXB0CON = 0;
  7108  001414  0E00               	movlw	0
  7109  001416  6E60               	movwf	3936,c	;volatile
  7110                           
  7111                           ;CAN.c: 38:     RXB1CON = 0;
  7112  001418  0E00               	movlw	0
  7113  00141A  6F50               	movwf	80,b	;volatile
  7114                           
  7115                           ;CAN.c: 39:     B0CON = 0;
  7116  00141C  0E00               	movlw	0
  7117  00141E  010E               	movlb	14	; () banked
  7118  001420  6F20               	movwf	32,b	;volatile
  7119                           
  7120                           ;CAN.c: 40:     B1CON = 0;
  7121  001422  0E00               	movlw	0
  7122  001424  6F30               	movwf	48,b	;volatile
  7123                           
  7124                           ;CAN.c: 41:     PIE3 = 0;
  7125  001426  0E00               	movlw	0
  7126  001428  6EA3               	movwf	4003,c	;volatile
  7127                           
  7128                           ; BSR set to: 14
  7129                           ;CAN.c: 42:     IPR3 = 0xFF;
  7130  00142A  68A5               	setf	4005,c	;volatile
  7131                           
  7132                           ;CAN.c: 43:     PIR3 = 0x00;
  7133  00142C  0E00               	movlw	0
  7134  00142E  6EA4               	movwf	4004,c	;volatile
  7135                           
  7136                           ;CAN.c: 44:     BIE0 = 0;
  7137  001430  0E00               	movlw	0
  7138  001432  010D               	movlb	13	; () banked
  7139  001434  6FFA               	movwf	250,b	;volatile
  7140                           
  7141                           ;CAN.c: 46:     DaneCan.adresCAN = 0x31;
  7142  001436  0E00               	movlw	0
  7143  001438  6E2F               	movwf	_DaneCan+3,c
  7144  00143A  0E31               	movlw	49
  7145  00143C  6E2E               	movwf	_DaneCan+2,c
  7146                           
  7147                           ;CAN.c: 48:     ECANCON = 0x90;
  7148  00143E  0E90               	movlw	144
  7149  001440  6E77               	movwf	3959,c	;volatile
  7150                           
  7151                           ; BSR set to: 13
  7152                           ;CAN.c: 51:     CAN_SetupClock();
  7153  001442  ECA8  F00C         	call	_CAN_SetupClock	;wreg free
  7154                           
  7155                           ;CAN.c: 54:     CAN_SetupMask();
  7156  001446  EC93  F009         	call	_CAN_SetupMask	;wreg free
  7157                           
  7158                           ;CAN.c: 56:     CIOCON = 0xff;
  7159  00144A  6873               	setf	3955,c	;volatile
  7160                           
  7161                           ;CAN.c: 62:     CANCON = 0x00;
  7162  00144C  0E00               	movlw	0
  7163  00144E  6E6F               	movwf	3951,c	;volatile
  7164  001450                     l4466:
  7165                           
  7166                           ;CAN.c: 63:     while((CANSTAT & 0xE0) != 0x00)
  7167  001450  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  7168  001454  0EE0               	movlw	224
  7169  001456  1606               	andwf	??_CAN_Setup,f,c
  7170  001458  B4D8               	btfsc	status,2,c
  7171  00145A  0012               	return	
  7172  00145C  D7F9               	goto	l4466
  7173  00145E                     __end_of_CAN_Setup:
  7174                           	opt callstack 0
  7175                           
  7176 ;; *************** function _CAN_SetupMask *****************
  7177 ;; Defined at:
  7178 ;;		line 84 in file "CAN.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;		None
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;Total ram usage:        0 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    4
  7199 ;; This function calls:
  7200 ;;		_CAN_SetupFilter_Ne
  7201 ;; This function is called by:
  7202 ;;		_CAN_Setup
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text57
  7207  001326                     __ptext57:
  7208                           	opt callstack 0
  7209  001326                     _CAN_SetupMask:
  7210                           	opt callstack 24
  7211                           
  7212                           ;CAN.c: 86:     MSEL0 = 0x50;
  7213                           
  7214                           ;incstack = 0
  7215  001326  0E50               	movlw	80
  7216  001328  010D               	movlb	13	; () banked
  7217  00132A  6FF0               	movwf	240,b	;volatile
  7218                           
  7219                           ;CAN.c: 87:     MSEL1 = 0x55;
  7220  00132C  0E55               	movlw	85
  7221  00132E  6FF1               	movwf	241,b	;volatile
  7222                           
  7223                           ;CAN.c: 88:     MSEL2 = 0x55;
  7224  001330  0E55               	movlw	85
  7225  001332  6FF2               	movwf	242,b	;volatile
  7226                           
  7227                           ;CAN.c: 89:     MSEL3 = 0x55;
  7228  001334  0E55               	movlw	85
  7229  001336  6FF3               	movwf	243,b	;volatile
  7230                           
  7231                           ;CAN.c: 92:     RXM0SIDH = 0b00000000;
  7232  001338  0E00               	movlw	0
  7233  00133A  010F               	movlb	15	; () banked
  7234  00133C  6F18               	movwf	24,b	;volatile
  7235                           
  7236                           ;CAN.c: 93:     RXM0SIDL = 0b00001011;
  7237  00133E  0E0B               	movlw	11
  7238  001340  6F19               	movwf	25,b	;volatile
  7239                           
  7240                           ; BSR set to: 15
  7241                           ;CAN.c: 94:     RXM0EIDH = 0xFF;
  7242  001342  691A               	setf	26,b	;volatile
  7243                           
  7244                           ; BSR set to: 15
  7245                           ;CAN.c: 95:     RXM0EIDL = 0xFF;
  7246  001344  691B               	setf	27,b	;volatile
  7247                           
  7248                           ; BSR set to: 15
  7249                           ;CAN.c: 98:     RXM1SIDH = 0xFF;
  7250  001346  691C               	setf	28,b	;volatile
  7251                           
  7252                           ; BSR set to: 15
  7253                           ;CAN.c: 99:     RXM1SIDL = 0xFF;
  7254  001348  691D               	setf	29,b	;volatile
  7255                           
  7256                           ; BSR set to: 15
  7257                           ;CAN.c: 100:     RXM1EIDH = 0xFF;
  7258  00134A  691E               	setf	30,b	;volatile
  7259                           
  7260                           ; BSR set to: 15
  7261                           ;CAN.c: 101:     RXM1EIDL = 0xFF;
  7262  00134C  691F               	setf	31,b	;volatile
  7263                           
  7264                           ;CAN.c: 104:     RXM0SIDH = 0x00;
  7265  00134E  0E00               	movlw	0
  7266  001350  6F18               	movwf	24,b	;volatile
  7267                           
  7268                           ;CAN.c: 105:     RXM0SIDL = 0x00;
  7269  001352  0E00               	movlw	0
  7270  001354  6F19               	movwf	25,b	;volatile
  7271                           
  7272                           ;CAN.c: 110:     RXF0SIDH = 0x00;
  7273  001356  0E00               	movlw	0
  7274  001358  6F00               	movwf	0,b	;volatile
  7275                           
  7276                           ;CAN.c: 111:     RXF0SIDL = 0x01;
  7277  00135A  0E01               	movlw	1
  7278  00135C  6F01               	movwf	1,b	;volatile
  7279                           
  7280                           ; BSR set to: 15
  7281                           ;CAN.c: 112:     RXF0SIDLbits.EXIDEN = 1;
  7282  00135E  8701               	bsf	1,3,b	;volatile
  7283                           
  7284                           ;CAN.c: 113:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7285  001360  502F               	movf	_DaneCan+3,w,c
  7286  001362  6F02               	movwf	2,b	;volatile
  7287                           
  7288                           ; BSR set to: 15
  7289                           ;CAN.c: 115:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7290  001364  C02E  FF03         	movff	_DaneCan+2,3843	;volatile
  7291                           
  7292                           ;CAN.c: 117:     RXF1SIDH = 0x00;
  7293  001368  0E00               	movlw	0
  7294  00136A  6F04               	movwf	4,b	;volatile
  7295                           
  7296                           ;CAN.c: 118:     RXF1SIDL = 0x01;
  7297  00136C  0E01               	movlw	1
  7298  00136E  6F05               	movwf	5,b	;volatile
  7299                           
  7300                           ; BSR set to: 15
  7301                           ;CAN.c: 119:     RXF1SIDLbits.EXIDEN = 1;
  7302  001370  8705               	bsf	5,3,b	;volatile
  7303                           
  7304                           ;CAN.c: 120:     RXF1EIDH = 0x7F;
  7305  001372  0E7F               	movlw	127
  7306  001374  6F06               	movwf	6,b	;volatile
  7307                           
  7308                           ; BSR set to: 15
  7309                           ;CAN.c: 121:     RXF1EIDL = 0xFF;
  7310  001376  6907               	setf	7,b	;volatile
  7311                           
  7312                           ; BSR set to: 15
  7313                           ;CAN.c: 123:     CAN_SetupFilter_Ne();
  7314  001378  EC52  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  7315                           
  7316                           ;CAN.c: 126:     RXFBCON0 = 0b00000000;
  7317  00137C  0E00               	movlw	0
  7318  00137E  010D               	movlb	13	; () banked
  7319  001380  6FE0               	movwf	224,b	;volatile
  7320                           
  7321                           ; BSR set to: 13
  7322                           ;CAN.c: 128:     RXFBCON1 = 0b00010001;
  7323  001382  0E11               	movlw	17
  7324  001384  6FE1               	movwf	225,b	;volatile
  7325                           
  7326                           ; BSR set to: 13
  7327                           ;CAN.c: 130:     RXFBCON2 = 0b00010001;
  7328  001386  0E11               	movlw	17
  7329  001388  6FE2               	movwf	226,b	;volatile
  7330                           
  7331                           ; BSR set to: 13
  7332                           ;CAN.c: 132:     RXFBCON3 = 0b00010001;
  7333  00138A  0E11               	movlw	17
  7334  00138C  6FE3               	movwf	227,b	;volatile
  7335                           
  7336                           ; BSR set to: 13
  7337                           ;CAN.c: 134:     RXFBCON4 = 0b00010001;
  7338  00138E  0E11               	movlw	17
  7339  001390  6FE4               	movwf	228,b	;volatile
  7340                           
  7341                           ; BSR set to: 13
  7342  001392  0012               	return		;funcret
  7343  001394                     __end_of_CAN_SetupMask:
  7344                           	opt callstack 0
  7345                           
  7346 ;; *************** function _CAN_SetupFilter_Ne *****************
  7347 ;; Defined at:
  7348 ;;		line 140 in file "CAN.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;		None
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;		None
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  1    wreg      void 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;Total ram usage:        0 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:    3
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_CAN_SetupMask
  7373 ;;		_FRAME_AdressOfNeighbors
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text58
  7378  0010A4                     __ptext58:
  7379                           	opt callstack 0
  7380  0010A4                     _CAN_SetupFilter_Ne:
  7381                           	opt callstack 24
  7382                           
  7383                           ;CAN.c: 144:     RXF2SIDH = 0;
  7384                           
  7385                           ; BSR set to: 13
  7386                           ;incstack = 0
  7387  0010A4  0E00               	movlw	0
  7388  0010A6  010F               	movlb	15	; () banked
  7389  0010A8  6F08               	movwf	8,b	;volatile
  7390                           
  7391                           ;CAN.c: 145:     RXF2SIDL = 0x20;
  7392  0010AA  0E20               	movlw	32
  7393  0010AC  6F09               	movwf	9,b	;volatile
  7394                           
  7395                           ; BSR set to: 15
  7396                           ;CAN.c: 146:     RXF2SIDLbits.EXIDEN = 1;
  7397  0010AE  8709               	bsf	9,3,b	;volatile
  7398                           
  7399                           ;CAN.c: 147:     RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7400  0010B0  5058               	movf	_NeightAdress1+1,w,c	;volatile
  7401  0010B2  6F0A               	movwf	10,b	;volatile
  7402                           
  7403                           ; BSR set to: 15
  7404                           ;CAN.c: 148:     RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7405  0010B4  C057  FF0B         	movff	_NeightAdress1,3851	;volatile
  7406                           
  7407                           ;CAN.c: 151:     RXF3SIDH = 0;
  7408  0010B8  0E00               	movlw	0
  7409  0010BA  6F0C               	movwf	12,b	;volatile
  7410                           
  7411                           ;CAN.c: 152:     RXF3SIDL = 0x20;
  7412  0010BC  0E20               	movlw	32
  7413  0010BE  6F0D               	movwf	13,b	;volatile
  7414                           
  7415                           ; BSR set to: 15
  7416                           ;CAN.c: 153:     RXF3SIDLbits.EXIDEN = 1;
  7417  0010C0  870D               	bsf	13,3,b	;volatile
  7418                           
  7419                           ;CAN.c: 154:     RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7420  0010C2  5056               	movf	_NeightAdress2+1,w,c	;volatile
  7421  0010C4  6F0E               	movwf	14,b	;volatile
  7422                           
  7423                           ; BSR set to: 15
  7424                           ;CAN.c: 155:     RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7425  0010C6  C055  FF0F         	movff	_NeightAdress2,3855	;volatile
  7426                           
  7427                           ;CAN.c: 157:     RXF4SIDH = 0;
  7428  0010CA  0E00               	movlw	0
  7429  0010CC  6F10               	movwf	16,b	;volatile
  7430                           
  7431                           ;CAN.c: 158:     RXF4SIDL = 0x20;
  7432  0010CE  0E20               	movlw	32
  7433  0010D0  6F11               	movwf	17,b	;volatile
  7434                           
  7435                           ; BSR set to: 15
  7436                           ;CAN.c: 159:     RXF4SIDLbits.EXIDEN = 1;
  7437  0010D2  8711               	bsf	17,3,b	;volatile
  7438                           
  7439                           ;CAN.c: 160:     RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7440  0010D4  504B               	movf	_NeightAdress3+1,w,c	;volatile
  7441  0010D6  6F12               	movwf	18,b	;volatile
  7442                           
  7443                           ; BSR set to: 15
  7444                           ;CAN.c: 161:     RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7445  0010D8  C04A  FF13         	movff	_NeightAdress3,3859	;volatile
  7446                           
  7447                           ;CAN.c: 163:     RXF5SIDH = 0;
  7448  0010DC  0E00               	movlw	0
  7449  0010DE  6F14               	movwf	20,b	;volatile
  7450                           
  7451                           ;CAN.c: 164:     RXF5SIDL = 0x20;
  7452  0010E0  0E20               	movlw	32
  7453  0010E2  6F15               	movwf	21,b	;volatile
  7454                           
  7455                           ; BSR set to: 15
  7456                           ;CAN.c: 165:     RXF5SIDLbits.EXIDEN = 1;
  7457  0010E4  8715               	bsf	21,3,b	;volatile
  7458                           
  7459                           ;CAN.c: 166:     RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7460  0010E6  5049               	movf	_NeightAdress4+1,w,c	;volatile
  7461  0010E8  6F16               	movwf	22,b	;volatile
  7462                           
  7463                           ; BSR set to: 15
  7464                           ;CAN.c: 167:     RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7465  0010EA  C048  FF17         	movff	_NeightAdress4,3863	;volatile
  7466                           
  7467                           ;CAN.c: 169:     RXF6SIDH = 0;
  7468  0010EE  0E00               	movlw	0
  7469  0010F0  010D               	movlb	13	; () banked
  7470  0010F2  6F60               	movwf	96,b	;volatile
  7471                           
  7472                           ;CAN.c: 170:     RXF6SIDL = 0x20;
  7473  0010F4  0E20               	movlw	32
  7474  0010F6  6F61               	movwf	97,b	;volatile
  7475                           
  7476                           ; BSR set to: 13
  7477                           ;CAN.c: 171:     RXF6SIDLbits.EXIDEN = 1;
  7478  0010F8  8761               	bsf	97,3,b	;volatile
  7479                           
  7480                           ;CAN.c: 172:     RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7481  0010FA  5047               	movf	_NeightAdress5+1,w,c	;volatile
  7482  0010FC  6F62               	movwf	98,b	;volatile
  7483                           
  7484                           ; BSR set to: 13
  7485                           ;CAN.c: 173:     RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7486  0010FE  C046  FD63         	movff	_NeightAdress5,3427	;volatile
  7487                           
  7488                           ;CAN.c: 175:     RXF7SIDH = 0;
  7489  001102  0E00               	movlw	0
  7490  001104  6F64               	movwf	100,b	;volatile
  7491                           
  7492                           ;CAN.c: 176:     RXF7SIDL = 0x20;
  7493  001106  0E20               	movlw	32
  7494  001108  6F65               	movwf	101,b	;volatile
  7495                           
  7496                           ; BSR set to: 13
  7497                           ;CAN.c: 177:     RXF7SIDLbits.EXIDEN = 1;
  7498  00110A  8765               	bsf	101,3,b	;volatile
  7499                           
  7500                           ;CAN.c: 178:     RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7501  00110C  5045               	movf	_NeightAdress6+1,w,c	;volatile
  7502  00110E  6F66               	movwf	102,b	;volatile
  7503                           
  7504                           ; BSR set to: 13
  7505                           ;CAN.c: 179:     RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7506  001110  C044  FD67         	movff	_NeightAdress6,3431	;volatile
  7507                           
  7508                           ;CAN.c: 181:     RXF8SIDH = 0;
  7509  001114  0E00               	movlw	0
  7510  001116  6F68               	movwf	104,b	;volatile
  7511                           
  7512                           ;CAN.c: 182:     RXF8SIDL = 0x20;
  7513  001118  0E20               	movlw	32
  7514  00111A  6F69               	movwf	105,b	;volatile
  7515                           
  7516                           ; BSR set to: 13
  7517                           ;CAN.c: 183:     RXF8SIDLbits.EXIDEN = 1;
  7518  00111C  8769               	bsf	105,3,b	;volatile
  7519                           
  7520                           ;CAN.c: 184:     RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7521  00111E  5043               	movf	_NeightAdress7+1,w,c	;volatile
  7522  001120  6F6A               	movwf	106,b	;volatile
  7523                           
  7524                           ; BSR set to: 13
  7525                           ;CAN.c: 185:     RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7526  001122  C042  FD6B         	movff	_NeightAdress7,3435	;volatile
  7527                           
  7528                           ;CAN.c: 187:     RXF9SIDH = 0;
  7529  001126  0E00               	movlw	0
  7530  001128  6F70               	movwf	112,b	;volatile
  7531                           
  7532                           ;CAN.c: 188:     RXF9SIDL = 0x20;
  7533  00112A  0E20               	movlw	32
  7534  00112C  6F71               	movwf	113,b	;volatile
  7535                           
  7536                           ; BSR set to: 13
  7537                           ;CAN.c: 189:     RXF9SIDLbits.EXIDEN = 1;
  7538  00112E  8771               	bsf	113,3,b	;volatile
  7539                           
  7540                           ;CAN.c: 190:     RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7541  001130  5041               	movf	_NeightAdress8+1,w,c	;volatile
  7542  001132  6F72               	movwf	114,b	;volatile
  7543                           
  7544                           ; BSR set to: 13
  7545                           ;CAN.c: 191:     RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7546  001134  C040  FD73         	movff	_NeightAdress8,3443	;volatile
  7547                           
  7548                           ; BSR set to: 13
  7549  001138  0012               	return		;funcret
  7550  00113A                     __end_of_CAN_SetupFilter_Ne:
  7551                           	opt callstack 0
  7552                           
  7553 ;; *************** function _CAN_SetupClock *****************
  7554 ;; Defined at:
  7555 ;;		line 199 in file "CAN.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		None
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;Total ram usage:        0 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    3
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_CAN_Setup
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text59
  7584  001950                     __ptext59:
  7585                           	opt callstack 0
  7586  001950                     _CAN_SetupClock:
  7587                           	opt callstack 25
  7588                           
  7589                           ;CAN.c: 201:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7590                           
  7591                           ; BSR set to: 13
  7592                           ;incstack = 0
  7593  001950  8070               	bsf	3952,0,c	;volatile
  7594                           
  7595                           ;CAN.c: 202:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7596  001952  8270               	bsf	3952,1,c	;volatile
  7597                           
  7598                           ;CAN.c: 203:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7599  001954  9470               	bcf	3952,2,c	;volatile
  7600                           
  7601                           ;CAN.c: 204:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7602  001956  9670               	bcf	3952,3,c	;volatile
  7603                           
  7604                           ;CAN.c: 205:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7605  001958  9870               	bcf	3952,4,c	;volatile
  7606                           
  7607                           ;CAN.c: 206:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7608  00195A  9A70               	bcf	3952,5,c	;volatile
  7609                           
  7610                           ;CAN.c: 208:     BRGCON1bits.SJW0 = 1;
  7611  00195C  8C70               	bsf	3952,6,c	;volatile
  7612                           
  7613                           ;CAN.c: 209:     BRGCON1bits.SJW1 = 1;
  7614  00195E  8E70               	bsf	3952,7,c	;volatile
  7615                           
  7616                           ;CAN.c: 211:     BRGCON2bits.SEG1PH0 = 1;
  7617  001960  8671               	bsf	3953,3,c	;volatile
  7618                           
  7619                           ;CAN.c: 212:     BRGCON2bits.SEG1PH1 = 1;
  7620  001962  8871               	bsf	3953,4,c	;volatile
  7621                           
  7622                           ;CAN.c: 213:     BRGCON2bits.SEG1PH2 = 1;
  7623  001964  8A71               	bsf	3953,5,c	;volatile
  7624                           
  7625                           ;CAN.c: 215:     BRGCON2bits.PRSEG2 = 1;
  7626  001966  8471               	bsf	3953,2,c	;volatile
  7627                           
  7628                           ;CAN.c: 216:     BRGCON2bits.PRSEG1 = 0;
  7629  001968  9271               	bcf	3953,1,c	;volatile
  7630                           
  7631                           ;CAN.c: 217:     BRGCON2bits.PRSEG0 = 0;
  7632  00196A  9071               	bcf	3953,0,c	;volatile
  7633                           
  7634                           ;CAN.c: 219:     BRGCON3bits.SEG2PH0 = 1;
  7635  00196C  8072               	bsf	3954,0,c	;volatile
  7636                           
  7637                           ;CAN.c: 220:     BRGCON3bits.SEG2PH1 = 0;
  7638  00196E  9272               	bcf	3954,1,c	;volatile
  7639                           
  7640                           ;CAN.c: 221:     BRGCON3bits.SEG2PH2 = 1;
  7641  001970  8472               	bsf	3954,2,c	;volatile
  7642                           
  7643                           ;CAN.c: 223:     BRGCON2bits.SAM = 1;
  7644  001972  8C71               	bsf	3953,6,c	;volatile
  7645                           
  7646                           ;CAN.c: 224:     BRGCON2bits.SEG2PHTS = 1;
  7647  001974  8E71               	bsf	3953,7,c	;volatile
  7648  001976  0012               	return		;funcret
  7649  001978                     __end_of_CAN_SetupClock:
  7650                           	opt callstack 0
  7651                           
  7652 ;; *************** function _ISR_low *****************
  7653 ;; Defined at:
  7654 ;;		line 16 in file "ISR.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;		None
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg, status,2, status,0, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;Total ram usage:        3 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    2
  7675 ;; This function calls:
  7676 ;;		_TMR1_Timer_reset
  7677 ;;		i1_TMR1_Update_flag_Set
  7678 ;; This function is called by:
  7679 ;;		Interrupt level 1
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	intcodelo
  7684  000018                     __pintcodelo:
  7685                           	opt callstack 0
  7686  000018                     _ISR_low:
  7687                           	opt callstack 22
  7688                           
  7689                           ;incstack = 0
  7690  000018  8059               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7691  00001A  CFD8 F003          	movff	status,??_ISR_low
  7692  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  7693  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  7694                           
  7695                           ;ISR.c: 21:     if(TMR1IF==1)
  7696  000026  A09E               	btfss	3998,0,c	;volatile
  7697  000028  D012               	goto	i1l782
  7698                           
  7699                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  7700  00002A  ECBC  F00C         	call	_TMR1_Timer_reset	;wreg free
  7701                           
  7702                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  7703  00002E  0E00               	movlw	0
  7704  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  7705  000032  0E01               	movlw	1
  7706  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  7707  000036  EC5A  F00D         	call	i1_TMR1_Update_flag_Set	;wreg free
  7708                           
  7709                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  7710  00003A  0100               	movlb	0	; () banked
  7711  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  7715  00003E  2A39               	incf	ISR_low@ramkaStanuU8,f,c
  7716  000040  0E14               	movlw	20
  7717  000042  6439               	cpfsgt	ISR_low@ramkaStanuU8,c
  7718  000044  D003               	goto	i1l3714
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  7722  000046  0E00               	movlw	0
  7723  000048  6E39               	movwf	ISR_low@ramkaStanuU8,c
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  7727  00004A  802C               	bsf	_DaneCan,0,c
  7728  00004C                     i1l3714:
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;ISR.c: 41:             TMR1IF=0;
  7732  00004C  909E               	bcf	3998,0,c	;volatile
  7733  00004E                     i1l782:
  7734  00004E  C005  FFE0         	movff	??_ISR_low+2,bsr
  7735  000052  C004  FFE8         	movff	??_ISR_low+1,wreg
  7736  000056  C003  FFD8         	movff	??_ISR_low,status
  7737  00005A  9059               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7738  00005C  0010               	retfie	
  7739  00005E                     __end_of_ISR_low:
  7740                           	opt callstack 0
  7741                           
  7742 ;; *************** function i1_TMR1_Update_flag_Set *****************
  7743 ;; Defined at:
  7744 ;;		line 32 in file "TMR1.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  a               2    0[COMRAM] unsigned int 
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		None
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;Total ram usage:        2 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    1
  7765 ;; This function calls:
  7766 ;;		Nothing
  7767 ;; This function is called by:
  7768 ;;		_ISR_low
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text61
  7773  001AB4                     __ptext61:
  7774                           	opt callstack 0
  7775  001AB4                     i1_TMR1_Update_flag_Set:
  7776                           	opt callstack 22
  7777                           
  7778                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  7779                           
  7780                           ;incstack = 0
  7781  001AB4  C001  F034         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  7782  001AB8  C002  F035         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  7783  001ABC  0012               	return		;funcret
  7784  001ABE                     __end_ofi1_TMR1_Update_flag_Set:
  7785                           	opt callstack 0
  7786                           
  7787 ;; *************** function _TMR1_Timer_reset *****************
  7788 ;; Defined at:
  7789 ;;		line 63 in file "TMR1.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;		None
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  7794 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      unsigned char 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:        2 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    1
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_ISR_low
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text62
  7819  001978                     __ptext62:
  7820                           	opt callstack 0
  7821  001978                     _TMR1_Timer_reset:
  7822                           	opt callstack 22
  7823                           
  7824                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  7825                           
  7826                           ;incstack = 0
  7827  001978  0E00               	movlw	0
  7828  00197A  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  7829  00197C  0E00               	movlw	0
  7830  00197E  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  7831                           
  7832                           ;TMR1.c: 70:     t1L = TMR1L;
  7833  001980  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  7834                           
  7835                           ;TMR1.c: 71:     t1H = TMR1H;
  7836  001984  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  7837                           
  7838                           ;TMR1.c: 72:     __nop();
  7839  001988  F000               	nop	
  7840                           
  7841                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  7842  00198A  0E9E               	movlw	158
  7843  00198C  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  7844                           
  7845                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  7846  00198E  0E57               	movlw	87
  7847  001990  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  7848                           
  7849                           ;TMR1.c: 75:     TMR1H = t1H;
  7850  001992  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  7851                           
  7852                           ;TMR1.c: 76:     TMR1L = 0x5B;
  7853  001996  0E5B               	movlw	91
  7854  001998  6ECE               	movwf	4046,c	;volatile
  7855  00199A  0012               	return		;funcret
  7856  00199C                     __end_of_TMR1_Timer_reset:
  7857                           	opt callstack 0
  7858                           
  7859 ;; *************** function _ISR_high *****************
  7860 ;; Defined at:
  7861 ;;		line 53 in file "ISR.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;		None
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;		None
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  1    wreg      void 
  7868 ;; Registers used:
  7869 ;;		None
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;Total ram usage:        0 bytes
  7880 ;; Hardware stack levels used:    1
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		Interrupt level 2
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	intcode
  7889  000008                     __pintcode:
  7890                           	opt callstack 0
  7891  000008                     _ISR_high:
  7892                           	opt callstack 22
  7893                           
  7894                           ;incstack = 0
  7895  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7896  00000A  ED67  F00D         	call	int_func,f	;refresh shadow registers
  7897                           
  7898                           	psect	intcode_body
  7899  001ACE                     __pintcode_body:
  7900                           	opt callstack 22
  7901  001ACE                     int_func:
  7902                           	opt callstack 22
  7903  001ACE  0006               	pop		; remove dummy address from shadow register refresh
  7904  001AD0  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7905  001AD2  0011               	retfie		f
  7906  001AD4                     __end_of_ISR_high:
  7907                           	opt callstack 0
  7908  0000                     
  7909                           	psect	rparam
  7910  0000                     
  7911                           	psect	temp
  7912  000059                     btemp:
  7913                           	opt callstack 0
  7914  000059                     	ds	1
  7915  0000                     int$flags	set	btemp
  7916  0000                     wtemp8	set	btemp+1
  7917  0000                     ttemp5	set	btemp+1
  7918  0000                     ttemp6	set	btemp+4
  7919  0000                     ttemp7	set	btemp+8
  7920                           tosu	equ	0xFFF
  7921                           tosh	equ	0xFFE
  7922                           tosl	equ	0xFFD
  7923                           stkptr	equ	0xFFC
  7924                           pclatu	equ	0xFFB
  7925                           pclath	equ	0xFFA
  7926                           pcl	equ	0xFF9
  7927                           tblptru	equ	0xFF8
  7928                           tblptrh	equ	0xFF7
  7929                           tblptrl	equ	0xFF6
  7930                           tablat	equ	0xFF5
  7931                           prodh	equ	0xFF4
  7932                           prodl	equ	0xFF3
  7933                           indf0	equ	0xFEF
  7934                           postinc0	equ	0xFEE
  7935                           postdec0	equ	0xFED
  7936                           preinc0	equ	0xFEC
  7937                           plusw0	equ	0xFEB
  7938                           fsr0h	equ	0xFEA
  7939                           fsr0l	equ	0xFE9
  7940                           wreg	equ	0xFE8
  7941                           indf1	equ	0xFE7
  7942                           postinc1	equ	0xFE6
  7943                           postdec1	equ	0xFE5
  7944                           preinc1	equ	0xFE4
  7945                           plusw1	equ	0xFE3
  7946                           fsr1h	equ	0xFE2
  7947                           fsr1l	equ	0xFE1
  7948                           bsr	equ	0xFE0
  7949                           indf2	equ	0xFDF
  7950                           postinc2	equ	0xFDE
  7951                           postdec2	equ	0xFDD
  7952                           preinc2	equ	0xFDC
  7953                           plusw2	equ	0xFDB
  7954                           fsr2h	equ	0xFDA
  7955                           fsr2l	equ	0xFD9
  7956                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         690
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      88
    BANK0           160      4     118
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   31436
                                              0 BANK0      4     4      0
                            _INI_All
                         _LED_Update
                          _ReadFlash
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18341
                                             26 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   15290
                                             17 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4178
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3289
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3289
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     234
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadFlash                                            2     0      2     269
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    7072
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4382
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     467
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     467
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    5480
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    3139
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    3139
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     181
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              1     1      0     585
                                             11 COMRAM     1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     569
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _ReadFlash
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      4      76       6       73.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      58       1       93.6%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE       3        0.0%
DATA                 0      0     2EE       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 26 14:09:58 2019

               __end_of_FRAME_DeviceReset 0BBC                     ?_FRAME_AveragingTimes 0006  
                            ___awdiv@sign 000B                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0006  
                       _FRAME_MapPosition 1AD8                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 000C                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 0008                        __size_of_CAN_GenID 0078  
                                     l300 034E                                       l301 0354  
                                     l302 035A                                       l303 0360  
                                     l304 0366                                       l419 09CA  
                                     l391 120E                                       l287 07CC  
                                     l296 033C                                       l288 07CA  
                             ?_LED_Update 0001                                       l297 03AC  
                                     l298 0342                                       l299 0348  
                                     l927 18C0                                       l919 18B8  
                                     l695 07AA                                       l936 17B4  
                                     l696 07A2                              __CFG_CPB$OFF 000000  
                      ??_FRAME_AxisStatus 0008                              __CFG_CPD$OFF 000000  
                      ?_FRAME_MapPosition 0006                        __size_of_CAN_Setup 0064  
                            ?_LED_Control 0006                                       wreg 000FE8  
                   __end_of_CAN_TakeFrame 05AA                               ?_INI_OUTPUT 0001  
                  __size_of_INI_LED_Start 0034                             NVMInit@result 000C  
                ??_MOCK_Klikniecie_Spadek 0008                     __end_of_CAN_SendFrame 0922  
                            __CFG_LVP$OFF 000000                           _neighborsAdress 003C  
               TRM_DataTransmition@weWyU8 0038              __size_of_INI_GlobalInterrupt 000E  
                     ??_FRAME_MapPosition 0008                              __CFG_WDT$OFF 000000  
                                    l1434 1612                                      l4030 0EA4  
                                    l4114 15E0                                      l4202 0866  
                                    l4042 0ED4                           __end_of_INI_All 19BE  
                                    l4116 15E8                                      l4060 0F1C  
                                    l4036 0EBC                                      l4126 1608  
                                    l4206 091A                                      l4302 1648  
                                    l4054 0F04                                      l4400 186E  
                                    l4072 0F4C                                      l4048 0EEC  
                                    l4242 172E                                      l4226 169E  
                                    l4066 0F34                                      l4500 04AA  
                                    l4324 0B36                                      l4430 117C  
                                    l4422 115E                                      l4502 04B2  
                                    l4342 0BAA                                      l4334 0B76  
                                    l4270 0CA4                                      l4440 119C  
                                    l4416 114E                                      l4520 0536  
                                    l4512 04FE                                      l4360 15AC  
                                    l4264 0C5E                                      l4354 18E8  
                                    l4530 055E                                      l4522 053E  
                                    l4506 04BA                                      l4514 0518  
                                    l4338 0B98                                      l4370 105C  
                                    l4274 0CC0                                      l4428 1174  
                                    l4444 11A6                                      l4524 0546  
                                    l4516 052A                                      l4508 04FA  
                                    l4620 0608                                      l4454 13FE  
                                    l3902 0964                                      l4526 054E  
                                    l4518 0530                                      l4534 0566  
                                    l4390 026C                                      l4382 011C  
                                    l4630 064E                                      l4622 0616  
                                    l4614 05DE                                      l3920 0994  
                                    l4704 11EA                                      l4448 11B4  
                                    l4528 0556                                      l4536 05A6  
                                    l4472 036C                                      l4384 019E  
                                    l4640 06A8                                      l4632 065C  
                                    l4624 0624                                      l4616 05EC  
                                    l4720 16E0                                      l4466 1450  
                                    l3914 0984                                      l4490 0484  
                                    l4634 066A                                      l4626 0632  
                                    l4618 05FA                                      l3932 09B4  
                                    l3908 0974                                      l4492 048A  
                                    l4388 0266                                      l3828 17DE  
                                    l4636 0684                                      l4628 0640  
                                    l4644 06BE                                      l4740 1494  
                                    l3950 09EA                                      l3926 09A4  
                                    l4574 0FB8                                      l4582 0FEE  
                                    l3870 192A                                      l4494 0492  
                                    l4638 0692                                      l4646 0728  
                                    l4750 14B6                                      l3944 09DA  
                                    l4576 0FC2                                      l4568 0F8C  
                                    l4496 049A                                      l4488 047E  
                                    l3962 0A0A                                      l3938 09C4  
                                    l3890 0944                                      l4498 04A2  
                                    l3980 0A3A                                      l3956 09FA  
                                    l3884 0934                                      l3974 0A2A  
                                    _BIE0 000DFA                                      l3992 0A5A  
                                    l3968 0A1A                                      l3896 0954  
                                    l3986 0A4A                                      l3998 0A6C  
                       _MOC_Frame_Counter 1A3A                                      _LATA 000F89  
                                    u2310 15EC                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u2510 0AC4  
                                    u2520 0ADC                                      u2516 0AC6  
                                    u2526 0ADE                                      u2470 1658  
                                    u2375 083C                                      _IPR3 000FA5  
                                    u2800 0FF6                                      _IPEN 007E87  
                                    _PIE3 000FA3                                      u2690 1180  
                                    u2755 0416                                      u1955 18B4  
                                    _PEIE 007F96                                      u1956 18B6  
                                    _LOCK 003B                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 000A  
                                    _Dane 00D0                           __end_of_ISR_low 005E  
                        LED_Control@diode 0006                      FRAME_AnalogValue@set 0008  
                      ?_MOC_Frame_Counter 0006                                      _main 145E  
                        LED_Control@color 000A                           __end_of_NVMInit 177C  
                         __end_of_NVMRead 18F2                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0059  
                          _CAN_SetupClock 1950                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 1394  
           __size_of_TMR1_Update_flag_Get 000A                                      start 005E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_LED_Error 001E  
                           __CFG_IESO$OFF 000000                        __size_of_LED_Right 004C  
           __size_of_FRAME_HandleCanFrame 0206                             _LED_Light_Pos 0F56  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                     ??_MOC_Frame_Counter 0008                ??_MOC_Aktualna_Temperatura 0008  
       FRAME_HandleCanFrame@identyfikator 001A                        __size_of_INI_Timer 0018  
               __end_of_FRAME_MapPosition 1ADA                             _NeightAdress1 0057  
                           _NeightAdress2 0055                             _NeightAdress3 004A  
                           _NeightAdress4 0048                             _NeightAdress5 0046  
                           _NeightAdress6 0044                             _NeightAdress7 0042  
                           _NeightAdress8 0040                          __end_of_LED_Left 1742  
           __size_of_MOCK_PrzyspieszenieX 000A             __size_of_MOCK_PrzyspieszenieY 000A  
           __size_of_MOCK_PrzyspieszenieZ 000A                     ReadfromEEPROM@Address 0006  
                                   _B0CON 000E20                                     _B1CON 000E30  
                                   _B2CON 000E40                                     _B3CON 000E50  
                                   _B4CON 000E60                                     _B5CON 000E70  
                        __end_of_LOCK_Get 1AD8                                     ?_main 0001  
                        __end_of_LOCK_Set 1ACE                           __end_of___awdiv 11BE  
                                   _EEADR 000FA9                                     _BSEL0 000DF8  
                         ___awdiv@divisor 0008                                     _T1CON 000FCD  
                                   _IRCF0 007E9C                                     _IRCF1 007E9D  
       FRAME_ExcitationMultiplier@message 0006                                     _IRCF2 007E9E  
                         __end_of___lwdiv 161C                                     i1l782 004E  
                     __size_of_FRAME_Plot 0058                           ___awdiv@counter 000A  
                                   _MSEL0 000DF0                                     _MSEL1 000DF1  
                                   _MSEL2 000DF2                                     _MSEL3 000DF3  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_PWRT$OFF 000000  
                                   _Flagi 00C6                    ?_CAN_MoveBuffIntoFrame 0006  
                           __CFG_WRT0$OFF 000000                __size_of_FRAME_AnalogValue 0002  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_ISR_high 1AD4                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
               __end_of_MOC_Frame_Counter 1A48                            __CFG_EBTRB$OFF 000000  
                 i1TMR1_Update_flag_Set@a 0001                              ?_MOC_NOTWORK 0006  
               __size_of_ReadDataToEEPROM 00E2                          __end_of_NVMWrite 17E8  
                        __end_of_NVMalloc 188A                                     tablat 000FF5  
                  __end_of_CAN_SetupClock 1978                                     ttemp5 005A  
                                   ttemp6 005D                                     ttemp7 0061  
                                   status 000FD8                                     wtemp8 005A  
                       __end_of_CAN_GenID 12B0                            __CFG_PBADEN$ON 000000  
                     __size_of_LED_Update 007A                            ?_LED_Light_Pos 000D  
                        _TMR1_Timer_reset 1978                         __end_of_CAN_Setup 145E  
                           _INI_LED_Start 18F2                     _FRAME_ExcitationValue 177C  
        FRAME_AccelerometerStatus@message 0008                           __initialization 14BE  
                     __size_of_INI_OUTPUT 0020                          CAN_GenID@frameID 0008  
                            __end_of_main 14BE                    ??_FRAME_AveragingTimes 0008  
              __size_of_FRAME_DeviceReset 0148                  ?_FRAME_AdressOfNeighbors 0006  
                  __size_of_WritetoEEPROM 0034                          CAN_GenID@message 0006  
               _FRAME_AccelerometerStatus 12B0                                    ??_main 002C  
                  CAN_MoveBuffIntoFrame@i 000A                             __activetblptr 000002  
                            NVMWrite@addr 000B                          _TMR1_Update_flag 0034  
                 WritetoEEPROM@GIE_Status 0036                     __end_of_IsInNeighbors 0F56  
                         _wartosciSasiada 00D6                                 ??_INI_All 000E  
                       __end_of_LED_Error 19FC                         __end_of_LED_Right 16B6  
                    WritetoEEPROM@Address 0006           __size_of_MOCK_Klikniecie_Spadek 000A  
                               ??_ISR_low 0003                                 ??_NVMInit 000C  
                               ??_NVMRead 000E                                    _CANCON 000F6F  
                                  _EEADRH 000FAA                                    _EEDATA 000FA8  
                                  _EECON2 000FA7                          ___awdiv@dividend 0006  
             FRAME_ExcitationMultiplier@i 0009                                    _CIOCON 000F73  
                         __CFG_BBSIZ$1024 000000                         __end_of_INI_Timer 1A14  
                                  i1l3714 004C                                    _TABLAT 000FF5  
                         ?_CAN_SetupClock 0001                                    _TBLPTR 000FF6  
                                  _RXB0D0 000F66                                    _TMR1IE 007CE8  
                                  _TMR1IF 007CF0                                    _TMR1IP 007CF8  
                                  _TMR1ON 007E68                        __size_of_ReadFlash 0014  
            ??_FRAME_ExcitationMultiplier 0008                            ?_INI_LED_Start 0001  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 000A  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 000D  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 000A  
                                  clear_0 14E6                                    clear_1 14F8  
                                  clear_2 1504                          ___awdiv@quotient 000C  
                            NVMalloc@size 0006                ??_FRAME_PrzypisanieDokarty 0008  
                ??i1_TMR1_Update_flag_Set 0003                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 004C  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8       __size_of_FRAME_ExcitationMultiplier 004E  
              __size_of_MOC_Frame_Counter 000E                      __size_of_LED_Control 0152  
                           _WritetoEEPROM 188A                  FRAME_MapPosition@message 0006  
                   TMR1_Update_flag_Set@a 0006                                __accesstop 0060  
                 __end_of__initialization 150A                              ??_FRAME_Plot 000F  
                     ISR_low@ramkaStanuU8 0039                                 ?_LED_Left 0006  
                         ??_LED_Light_Pos 0011                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 0006                                 ?_LOCK_Get 0001  
                               ?_LOCK_Set 0001           __end_of_FRAME_AdressOfNeighbors 032E  
                  _MOCK_Klikniecie_Spadek 1A96                            __pcstackCOMRAM 0001  
                               LED_Left@a 0006                                 LED_Left@b 0008  
                     _INI_GlobalInterrupt 1A48                                 ?_ISR_high 0001  
                               ?_NVMWrite 0009                                 ?_NVMalloc 0006  
                       __end_of_ReadFlash 1A28                              ??_LED_Update 0018  
             __end_of_TRM_DataTransmition 1700                     _FRAME_SoftwareVersion 1394  
                      __end_of_FRAME_Plot 15CA                              ??_INI_OUTPUT 0006  
                               LOCK_Set@k 0006                   FRAME_AxisStatus@message 0006  
             IsInNeighbors@message_adress 0006                            ?_WritetoEEPROM 0006  
                    ?_INI_GlobalInterrupt 0001                          _ReadDataToEEPROM 0DAA  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                             NVMWrite@count 000D  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 000B  
                              ??_LED_Left 0008                                ??_LOCK_Get 0006  
                              ??_LOCK_Set 0006                        __end_of_LED_Update 1238  
                      __end_of_INI_OUTPUT 19DE                                ??_ISR_high 0001  
                     TMR1_Timer_reset@t1H 0002                       TMR1_Timer_reset@t1L 0001  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 000F                   ??_CAN_MoveBuffIntoFrame 000A  
                              ??_NVMalloc 000A              __end_of_TMR1_Update_flag_Get 1AB4  
            __end_of_TMR1_Update_flag_Set 1AAA           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 07B0                                   _INI_All 199C  
                __end_of_TMR1_Timer_reset 199C                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0006                                   _TXB0CON 000F40  
                                 _ISR_low 0018                                   _NVMInit 1742  
                                 _NVMRead 18BE                                   _DaneCan 002C  
            __end_of_MOCK_PrzyspieszenieX 1A96              __end_of_MOCK_PrzyspieszenieY 1A8C  
            __end_of_MOCK_PrzyspieszenieZ 1A82        __end_of_FRAME_ExcitationMultiplier 166A  
              _FRAME_ExcitationMultiplier 161C               FRAME_HandleCanFrame@message 0012  
                           ReadFlash@addr 0006                                   __Hparam 0000  
        ??_MOC_Wynikowa_wartosc_roznicowa 0008           ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                 __Lparam 0000                    __size_of_CAN_TakeFrame 027C  
                               _CAN_GenID 1238                                   ___awdiv 113A  
                               _CAN_Setup 13FA                    __size_of_CAN_SendFrame 0172  
                                 ___lwdiv 15CA                         LED_Light_Pos@pos2 0014  
                                 __pcinit 14BE                                   __ramtop 0D00  
  FRAME_DataUpdateAndChangeOption@message 0006                                   __ptext0 145E  
                                 __ptext1 16B6                                   __ptext2 05AA  
                                 __ptext3 19DE                                   __ptext4 1394  
                                 __ptext5 0BBC                                   __ptext6 1A64  
                                 __ptext7 1ABE                                   __ptext8 1A3A  
                                 __ptext9 1A6E                    ?_FRAME_SoftwareVersion 0006  
                          _ReadfromEEPROM 1A28                           ??_WritetoEEPROM 0009  
                  __size_of_CAN_SetupMask 006E         __size_of_MOC_Aktualna_Temperatura 000A  
          FRAME_AdressOfNeighbors@nrRamki 0008                 ?_MOC_Aktualna_Temperatura 0006  
        __size_of_FRAME_AdressOfNeighbors 02CC                          ??_CAN_SetupClock 0006  
          FRAME_AdressOfNeighbors@message 0006                                   main@adr 00D4  
                               _LED_Error 19DE                            __pintcode_body 1ACE  
                               _LED_Right 166A                      end_of_initialization 150A  
    FRAME_SensorExcitationStatus@statwect 0032                             __Lmediumconst 0000  
                                 int_func 1ACE                                 _INI_Timer 19FC  
                  i1_TMR1_Update_flag_Set 1AB4          TRM_DataTransmition@czujnikWeWyU8 0037  
                              ?_CAN_GenID 0006                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ?_CAN_Setup 0001  
           __size_of_FRAME_AveragingTimes 0036                    __end_of_ReadfromEEPROM 1A3A  
                    CAN_SendFrame@message 000B                          NVMalloc@location 0008  
                           LED_Update@Red 003A                             _CAN_TakeFrame 032E  
                             NVMRead@addr 000A                             _CAN_SendFrame 07B0  
                              ?_LED_Error 0001                               NVMRead@dest 0008  
             FRAME_AdressOfNeighbors@kier 000E                                ?_LED_Right 0006  
                        _FRAME_AxisStatus 17E8                   ??_FRAME_ExcitationValue 0008  
                              ?_INI_Timer 0001                   ?_MOCK_Klikniecie_Spadek 0006  
                         _ramkaCanRxKarty 0060                      _TMR1_Update_flag_Get 1AAA  
                         _ramkaCanTxKarty 00B5                      _TMR1_Update_flag_Set 1AA0  
                           _CAN_SetupMask 1326                         __size_of_LED_Left 0042  
                    _FRAME_HandleCanFrame 05AA                    __size_of_IsInNeighbors 00CA  
                       __size_of_LOCK_Get 0004                         __size_of_LOCK_Set 0008  
                       _WriteDataToEEPROM 0CC8                  __end_of_ReadDataToEEPROM 0E8C  
                          CAN_TakeFrame@k 0013                        ?_WriteDataToEEPROM 0001  
                         ?_ReadfromEEPROM 0006                             __pidataCOMRAM 1A56  
                       __size_of_ISR_high 1ACC                      _MOCK_PrzyspieszenieX 1A8C  
                    _MOCK_PrzyspieszenieY 1A82                      _MOCK_PrzyspieszenieZ 1A78  
                              LED_Right@a 0006                                LED_Right@b 000A  
                   MOC_Frame_Counter@zeta 004C                         __size_of_NVMWrite 0036  
                           ??_LED_Control 0008                       ??_WriteDataToEEPROM 000F  
                       __size_of_NVMalloc 0036                       start_initialization 14BE  
                          ?_CAN_TakeFrame 000E                                 _ReadFlash 1A14  
                          ?_CAN_SendFrame 000B           FRAME_SensorExcitationStatus@tru 000C  
          __end_of_MOCK_Klikniecie_Spadek 1AA0                          __CFG_OSC$IRCIO67 000000  
       __size_of_FRAME_PrzypisanieDokarty 009E                 ?_FRAME_PrzypisanieDokarty 0006  
                   ?_TMR1_Update_flag_Get 0006                     ?_TMR1_Update_flag_Set 0006  
                          ?_CAN_SetupMask 0001                     __end_of_LED_Light_Pos 1006  
                   ?_FRAME_HandleCanFrame 0012                 __end_of_WriteDataToEEPROM 0DAA  
                             ??_CAN_GenID 0009                               ??_CAN_Setup 0006  
                        __CFG_LPT1OSC$OFF 000000                     ?_MOCK_PrzyspieszenieX 0006  
                   ?_MOCK_PrzyspieszenieY 0006                     ?_MOCK_PrzyspieszenieZ 0006  
                CAN_MoveBuffIntoFrame@Buf 0008      __end_of_FRAME_SensorExcitationStatus 0CC8  
   __size_of_FRAME_SensorExcitationStatus 010C                  CAN_MoveBuffIntoFrame@Ram 0006  
            _FRAME_SensorExcitationStatus 0BBC            __size_of_CAN_MoveBuffIntoFrame 002A  
                             __pbssBIGRAM 00D6             __end_of_CAN_MoveBuffIntoFrame 1950  
                         _Fulfillment_Lvl 0052                               __pbssCOMRAM 002C  
                                ?_INI_All 0001                   _FRAME_AdressOfNeighbors 0062  
                           __pcstackBANK0 00D2                             _IsInNeighbors 0E8C  
                       ?_TMR1_Timer_reset 0001                                ?_ReadFlash 0006  
                         _ustawieniaKarty 003E                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0001   __end_of_FRAME_DataUpdateAndChangeOption 1572  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 0008  
        ?_FRAME_DataUpdateAndChangeOption 0006           _FRAME_DataUpdateAndChangeOption 1518  
                           ??_MOC_NOTWORK 0008                __end_of_CAN_SetupFilter_Ne 113A  
                                ?_NVMInit 0001                                  ?_NVMRead 0008  
                      ??_TMR1_Timer_reset 0001                               ??_LED_Error 000B  
                          NVMWrite@source 0009                               ??_LED_Right 0008  
            __size_of_TRM_DataTransmition 004A                       __end_of_LED_Control 0A74  
             ?_FRAME_ExcitationMultiplier 0006                               ??_INI_Timer 0006  
                   __end_of_INI_LED_Start 1926                          ___lwdiv@dividend 0006  
                               __pintcode 0008                                  ?___awdiv 0006  
                 ??_FRAME_SoftwareVersion 0008          __end_of_MOC_Aktualna_Temperatura 1A78  
                                ?___lwdiv 0006                         FRAME_Plot@message 000D  
                             __pintcodelo 0018               __end_of_INI_GlobalInterrupt 1A56  
                         ??_CAN_TakeFrame 0010             ?_FRAME_SensorExcitationStatus 0008  
  __end_of_MOC_Wynikowa_wartosc_roznicowa 1A6E   __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
          _MOC_Wynikowa_wartosc_roznicowa 1A64                               _COMSTATbits 000F74  
                          ?_IsInNeighbors 0006                           ??_CAN_SendFrame 000D  
                        ___lwdiv@quotient 000B                   ?i1_TMR1_Update_flag_Set 0001  
             FRAME_AveragingTimes@message 0006                    ??_TMR1_Update_flag_Get 0008  
                  ??_TMR1_Update_flag_Set 0008                           ??_CAN_SetupMask 0006  
                                _LED_Left 1700                    ??_FRAME_HandleCanFrame 0014  
                    CAN_TakeFrame@message 000E                       __end_of_MOC_NOTWORK 1AC6  
                                _LOCK_Get 1AD4                      CAN_TakeFrame@tempCON 0012  
                                _LOCK_Set 1AC6                __size_of_WriteDataToEEPROM 00E2  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _RXB0SIDH 000F61                                  _RXB0SIDL 000F62  
                                _RXF0EIDH 000F02                                  _RXF0EIDL 000F03  
                                _RXF1EIDH 000F06                                  _RXF1EIDL 000F07  
                                _RXF2EIDH 000F0A                                  _RXF2EIDL 000F0B  
                                _RXF3EIDH 000F0E                                  _RXF3EIDL 000F0F  
                                _RXF4EIDH 000F12                                  _RXF4EIDL 000F13  
                                _RXF5EIDH 000F16                                  _RXF5EIDL 000F17  
                                _RXF6EIDH 000D62                                  _RXF6EIDL 000D63  
                                _RXF0SIDH 000F00                                  _RXF7EIDH 000D66  
                                _RXF0SIDL 000F01                                  _RXF7EIDL 000D67  
                                _RXF1SIDH 000F04                                  _RXF8EIDH 000D6A  
                                _RXF1SIDL 000F05                                  _RXF8EIDL 000D6B  
                                _RXF2SIDH 000F08                                  _RXF9EIDH 000D72  
                                _RXF2SIDL 000F09                                  _RXF9EIDL 000D73  
                                _RXF3SIDH 000F0C                                  _RXF3SIDL 000F0D  
                                _ISR_high 0008                                  _RXF4SIDH 000F10  
                                _RXF4SIDL 000F11                                  _RXF5SIDH 000F14  
                                _RXF5SIDL 000F15                                  _RXF6SIDH 000D60  
                                _RXF6SIDL 000D61                                  _RXM0EIDH 000F1A  
                                _RXF7SIDH 000D64                                  _RXM0EIDL 000F1B  
                                _RXF7SIDL 000D65                                  _RXM1EIDH 000F1E  
                                _RXF8SIDH 000D68                                  _RXM1EIDL 000F1F  
                                _RXF8SIDL 000D69                                  _RXF9SIDH 000D70  
                  ??_MOCK_PrzyspieszenieX 0008                    ??_MOCK_PrzyspieszenieY 0008  
                                _RXF9SIDL 000D71                    ??_MOCK_PrzyspieszenieZ 0008  
                                _RXFBCON0 000DE0                                  _RXFBCON1 000DE1  
                                _RXFBCON2 000DE2                                  _RXFBCON3 000DE3  
                                _RXFBCON4 000DE4                                  _RXM0SIDH 000F18  
                                _RXM0SIDL 000F19                                  _RXM1SIDH 000F1C  
                                _RXM1SIDL 000F1D                  __end_of_FRAME_AxisStatus 181E  
                                _NVMWrite 17B2                                  _NVMalloc 1854  
               ??_FRAME_AdressOfNeighbors 000A                          _DetectorLedRadar 00CB  
                             _LED_Control 0922                               ??_ReadFlash 0008  
                        __size_of_INI_All 0022              FRAME_ExcitationValue@message 0006  
                   __end_of_WritetoEEPROM 18BE            __end_ofi1_TMR1_Update_flag_Set 1ABE  
                          _nextEEPosition 0030                                 copy_data0 14D2  
                        __size_of_ISR_low 0046        __size_of_FRAME_AccelerometerStatus 0076  
            __end_of_FRAME_AveragingTimes 1854                          __size_of_NVMInit 003A  
                        __size_of_NVMRead 0034                ?_FRAME_AccelerometerStatus 0008  
          __size_of_FRAME_ExcitationValue 0036             __end_of_FRAME_ExcitationValue 17B2  
                              _EECON1bits 000FA6                                  __Hrparam 0000  
                            _RXB0SIDLbits 000F62                          ??_ReadfromEEPROM 0008  
                                __Lrparam 0000                         ?_ReadDataToEEPROM 0001  
                        __size_of___awdiv 0084                          __size_of___lwdiv 0052  
                      ??_ReadDataToEEPROM 000E                           ??_IsInNeighbors 0008  
                _MOC_Aktualna_Temperatura 1A6E           FRAME_PrzypisanieDokarty@message 0006  
                      LED_Light_Pos@flage 0016                        LED_Light_Pos@color 0011  
        __end_of_FRAME_PrzypisanieDokarty 10A4                              _RXF0SIDLbits 000F01  
                FRAME_AnalogValue@message 0006                           ___lwdiv@divisor 0008  
                            _RXF1SIDLbits 000F05                           ___lwdiv@counter 000A  
                                __ptext10 1AC6                                  __ptext11 1AD4  
                                __ptext20 17B2                                  __ptext12 0E8C  
                                __ptext21 188A                                  __ptext13 1006  
                                __ptext30 1A8C                                  __ptext22 1518  
                                __ptext14 1572                                  __ptext31 1A96  
                                __ptext23 17E8                                  __ptext15 1AD8  
                                __ptext40 11BE                                  __ptext32 07B0  
                                __ptext24 181E                                  __ptext16 177C  
                                __ptext41 0F56                                  __ptext33 1238  
                                __ptext25 1ADA                                  __ptext17 161C  
                                __ptext50 1854                                  __ptext42 15CA  
                                __ptext34 032E                                  __ptext26 0062  
                                __ptext18 0A74                                  __ptext51 19FC  
                                __ptext43 166A                                  __ptext35 113A  
                                __ptext27 12B0                                  __ptext19 0CC8  
                                __ptext52 19BE                                  __ptext44 1700  
                                __ptext36 1926                                  __ptext28 1A78  
          ??_FRAME_SensorExcitationStatus 000A                                  __ptext61 1AB4  
                                __ptext53 18F2                                  __ptext45 199C  
                                __ptext37 1AA0                                  __ptext29 1A82  
                                __ptext62 1978                                  __ptext54 0922  
                                __ptext46 0DAA                                  __ptext38 1AAA  
                                __ptext55 1A48                                  __ptext47 18BE  
                                __ptext39 1A14                                  __ptext56 13FA  
                                __ptext48 1A28                                  __ptext57 1326  
                                __ptext49 1742                                  __ptext58 10A4  
                                __ptext59 1950             TRM_DataTransmition@canMessage 001B  
                            _RXF2SIDLbits 000F09                               _MOC_NOTWORK 1ABE  
                            _RXF3SIDLbits 000F0D                 FRAME_HandleCanFrame@ident 0018  
                            _RXF4SIDLbits 000F11                  FRAME_DeviceReset@message 000F  
       __end_of_FRAME_AccelerometerStatus 1326                              _RXF5SIDLbits 000F15  
                              _FRAME_Plot 1572                             __size_of_main 0060  
                            _RXF6SIDLbits 000D61                              _RXF7SIDLbits 000D65  
                 __size_of_CAN_SetupClock 0028                              _RXF8SIDLbits 000D69  
                            _RXF9SIDLbits 000D71                                  int$flags 0059  
                     _TRM_DataTransmition 16B6                               _RXB0DLCbits 000F65  
                              _LED_Update 11BE                               _RXB0CONbits 000F60  
                              _INTCONbits 000FF2                                _INI_OUTPUT 19BE  
                       _FRAME_AnalogValue 1ADA                      ?_TRM_DataTransmition 0001  
            FRAME_SoftwareVersion@message 0006                                  intlevel1 0000  
                                intlevel2 0000                           _czujnikiNaMapie 00CE  
                      ?_FRAME_AnalogValue 0006       FRAME_SensorExcitationStatus@message 0008  
                             _TXB0CONbits 000F40                       ??_FRAME_AnalogValue 000A  
               __size_of_TMR1_Timer_reset 0024                        _CAN_SetupFilter_Ne 10A4  
                LED_Light_Pos@fulfillment 000F                      _FRAME_AveragingTimes 181E  
                     ?_CAN_SetupFilter_Ne 0001            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0A74             __end_of_FRAME_SoftwareVersion 13FA  
                      ?_FRAME_DeviceReset 000F                           LED_Update@Green 0054  
               __end_of_FRAME_AnalogValue 1ADC                    __size_of_LED_Light_Pos 00B0  
                   _CAN_MoveBuffIntoFrame 1926                                _WDTCONbits 000FD1  
                     ??_FRAME_DeviceReset 0011                     ??_TRM_DataTransmition 001B  
                _FRAME_PrzypisanieDokarty 1006                    LED_Light_Pos@LED_array 0012  
                    ??_CAN_SetupFilter_Ne 0006                            LED_Update@pos1 0050  
                          LED_Update@pos2 004E                               ?_FRAME_Plot 000D  
