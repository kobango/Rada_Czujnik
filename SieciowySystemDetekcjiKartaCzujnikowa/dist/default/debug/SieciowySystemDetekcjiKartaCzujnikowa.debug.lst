

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 24 16:11:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70  0000                     
    71                           ; Version 2.05
    72                           ; Generated 20/12/2018 GMT
    73                           ; 
    74                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4680 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataCOMRAM
   107  0016CA                     __pidataCOMRAM:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for MOC_Frame_Counter@zeta
   111  0016CA  0011               	dw	17
   112                           
   113                           ;initializer for LED_Update@pos2
   114  0016CC  0001               	dw	1
   115                           
   116                           ;initializer for LED_Update@pos1
   117  0016CE  0001               	dw	1
   118                           
   119                           ;initializer for _Fulfillment_Lvl
   120  0016D0  0014               	dw	20
   121                           
   122                           ;initializer for _NeightAdress2
   123  0016D2  006F               	dw	111
   124                           
   125                           ;initializer for _NeightAdress1
   126  0016D4  012B               	dw	299
   127                           
   128                           ;initializer for LED_Update@Green
   129  0016D6  01                 	db	1
   130  0000                     _RXFBCON1	set	3553
   131  0000                     _RXFBCON0	set	3552
   132  0000                     _MSEL3	set	3571
   133  0000                     _MSEL2	set	3570
   134  0000                     _MSEL1	set	3569
   135  0000                     _MSEL0	set	3568
   136  0000                     _BIE0	set	3578
   137  0000                     _BSEL0	set	3576
   138  0000                     _B5CON	set	3696
   139  0000                     _B4CON	set	3680
   140  0000                     _B3CON	set	3664
   141  0000                     _B2CON	set	3648
   142  0000                     _B1CON	set	3632
   143  0000                     _B0CON	set	3616
   144  0000                     _TXB0CONbits	set	3904
   145  0000                     _RXF3EIDL	set	3855
   146  0000                     _RXF3EIDH	set	3854
   147  0000                     _RXF3SIDLbits	set	3853
   148  0000                     _RXF3SIDL	set	3853
   149  0000                     _RXF3SIDH	set	3852
   150  0000                     _RXF2EIDL	set	3851
   151  0000                     _RXF2EIDH	set	3850
   152  0000                     _RXF2SIDLbits	set	3849
   153  0000                     _RXF2SIDL	set	3849
   154  0000                     _RXF2SIDH	set	3848
   155  0000                     _RXF1EIDL	set	3847
   156  0000                     _RXF1EIDH	set	3846
   157  0000                     _RXF1SIDLbits	set	3845
   158  0000                     _RXF1SIDL	set	3845
   159  0000                     _RXF1SIDH	set	3844
   160  0000                     _RXF0EIDL	set	3843
   161  0000                     _RXF0EIDH	set	3842
   162  0000                     _RXF0SIDLbits	set	3841
   163  0000                     _RXF0SIDL	set	3841
   164  0000                     _RXF0SIDH	set	3840
   165  0000                     _RXM1EIDL	set	3871
   166  0000                     _RXM1EIDH	set	3870
   167  0000                     _RXM1SIDL	set	3869
   168  0000                     _RXM1SIDH	set	3868
   169  0000                     _RXM0EIDL	set	3867
   170  0000                     _RXM0EIDH	set	3866
   171  0000                     _RXM0SIDL	set	3865
   172  0000                     _RXM0SIDH	set	3864
   173  0000                     _RXB1CON	set	3920
   174  0000                     _TXB0CON	set	3904
   175  0000                     _TRISC	set	3988
   176  0000                     _LATC	set	3979
   177  0000                     _LATE	set	3981
   178  0000                     _LATA	set	3977
   179  0000                     _LATB	set	3978
   180  0000                     _LATD	set	3980
   181  0000                     _TRISD	set	3989
   182  0000                     _TRISE	set	3990
   183  0000                     _TRISB	set	3987
   184  0000                     _TRISA	set	3986
   185  0000                     _RXB0DLCbits	set	3941
   186  0000                     _RXB0DLC	set	3941
   187  0000                     _RXB0SIDH	set	3937
   188  0000                     _RXB0SIDLbits	set	3938
   189  0000                     _RXB0SIDL	set	3938
   190  0000                     _RXB0EIDH	set	3939
   191  0000                     _RXB0EIDL	set	3940
   192  0000                     _COMSTATbits	set	3956
   193  0000                     _RXB0CONbits	set	3936
   194  0000                     _BRGCON3bits	set	3954
   195  0000                     _BRGCON2bits	set	3953
   196  0000                     _BRGCON1bits	set	3952
   197  0000                     _CIOCON	set	3955
   198  0000                     _ECANCON	set	3959
   199  0000                     _RXB0CON	set	3936
   200  0000                     _CANSTAT	set	3950
   201  0000                     _CANCON	set	3951
   202  0000                     _RXB0D0	set	3942
   203  0000                     _WDTCONbits	set	4049
   204  0000                     _RCONbits	set	4048
   205  0000                     _T1CON	set	4045
   206  0000                     _TMR1H	set	4047
   207  0000                     _TMR1L	set	4046
   208  0000                     _PIR3	set	4004
   209  0000                     _IPR3	set	4005
   210  0000                     _PIE3	set	4003
   211  0000                     _RCON	set	4048
   212  0000                     _TMR1IF	set	31984
   213  0000                     _TMR1IP	set	31992
   214  0000                     _IPEN	set	32391
   215  0000                     _TMR1ON	set	32360
   216  0000                     _TMR1IE	set	31976
   217  0000                     _IRCF0	set	32412
   218  0000                     _IRCF1	set	32413
   219  0000                     _IRCF2	set	32414
   220  0000                     _INTCONbits	set	4082
   221  0000                     _PEIE	set	32662
   222                           
   223                           ; #config settings
   224  0000                     
   225                           	psect	cinit
   226  001242                     __pcinit:
   227                           	opt callstack 0
   228  001242                     start_initialization:
   229                           	opt callstack 0
   230  001242                     __initialization:
   231                           	opt callstack 0
   232                           
   233                           ; Initialize objects allocated to COMRAM (13 bytes)
   234                           ; load TBLPTR registers with __pidataCOMRAM
   235  001242  0ECA               	movlw	low __pidataCOMRAM
   236  001244  6EF6               	movwf	tblptrl,c
   237  001246  0E16               	movlw	high __pidataCOMRAM
   238  001248  6EF7               	movwf	tblptrh,c
   239  00124A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   240  00124C  6EF8               	movwf	tblptru,c
   241  00124E  EE00  F04D         	lfsr	0,__pdataCOMRAM
   242  001252  EE10 F00D          	lfsr	1,13
   243  001256                     copy_data0:
   244  001256  0009               	tblrd		*+
   245  001258  CFF5 FFEE          	movff	tablat,postinc0
   246  00125C  50E5               	movf	postdec1,w,c
   247  00125E  50E1               	movf	fsr1l,w,c
   248  001260  E1FA               	bnz	copy_data0
   249                           
   250                           ; Clear objects allocated to BIGRAM (544 bytes)
   251  001262  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   252  001266  EE12 F020          	lfsr	1,544
   253  00126A                     clear_0:
   254  00126A  6AEE               	clrf	postinc0,c
   255  00126C  50E5               	movf	postdec1,w,c
   256  00126E  50E1               	movf	fsr1l,w,c
   257  001270  E1FC               	bnz	clear_0
   258  001272  50E2               	movf	fsr1h,w,c
   259  001274  E1FA               	bnz	clear_0
   260                           
   261                           ; Clear objects allocated to BANK0 (102 bytes)
   262  001276  EE00  F060         	lfsr	0,__pbssBANK0
   263  00127A  0E66               	movlw	102
   264  00127C                     clear_1:
   265  00127C  6AEE               	clrf	postinc0,c
   266  00127E  06E8               	decf	wreg,f,c
   267  001280  E1FD               	bnz	clear_1
   268                           
   269                           ; Clear objects allocated to COMRAM (35 bytes)
   270  001282  EE00  F02A         	lfsr	0,__pbssCOMRAM
   271  001286  0E23               	movlw	35
   272  001288                     clear_2:
   273  001288  6AEE               	clrf	postinc0,c
   274  00128A  06E8               	decf	wreg,f,c
   275  00128C  E1FD               	bnz	clear_2
   276  00128E                     end_of_initialization:
   277                           	opt callstack 0
   278  00128E                     __end_of__initialization:
   279                           	opt callstack 0
   280  00128E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281  001290  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282  001292  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  001294  6EF8               	movwf	tblptru,c
   284  001296  0100               	movlb	0
   285  001298  EFCE  F00A         	goto	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMRAM
   288  00002A                     __pbssCOMRAM:
   289                           	opt callstack 0
   290  00002A                     _Flagi:
   291                           	opt callstack 0
   292  00002A                     	ds	5
   293  00002F                     _DaneCan:
   294                           	opt callstack 0
   295  00002F                     	ds	4
   296  000033                     _DetectorLedRadar:
   297                           	opt callstack 0
   298  000033                     	ds	3
   299  000036                     FRAME_SensorExcitationStatus@statwect:
   300                           	opt callstack 0
   301  000036                     	ds	2
   302  000038                     _TMR1_Update_flag:
   303                           	opt callstack 0
   304  000038                     	ds	2
   305  00003A                     _NeightAdress8:
   306                           	opt callstack 0
   307  00003A                     	ds	2
   308  00003C                     _NeightAdress7:
   309                           	opt callstack 0
   310  00003C                     	ds	2
   311  00003E                     _NeightAdress6:
   312                           	opt callstack 0
   313  00003E                     	ds	2
   314  000040                     _NeightAdress5:
   315                           	opt callstack 0
   316  000040                     	ds	2
   317  000042                     _NeightAdress4:
   318                           	opt callstack 0
   319  000042                     	ds	2
   320  000044                     _NeightAdress3:
   321                           	opt callstack 0
   322  000044                     	ds	2
   323  000046                     _Dane:
   324                           	opt callstack 0
   325  000046                     	ds	2
   326  000048                     	ds	1
   327  000049                     	ds	1
   328  00004A                     ISR_low@ramkaStanuU8:
   329                           	opt callstack 0
   330  00004A                     	ds	1
   331  00004B                     	ds	1
   332  00004C                     _LOCK:
   333                           	opt callstack 0
   334  00004C                     	ds	1
   335                           
   336                           	psect	dataCOMRAM
   337  00004D                     __pdataCOMRAM:
   338                           	opt callstack 0
   339  00004D                     MOC_Frame_Counter@zeta:
   340                           	opt callstack 0
   341  00004D                     	ds	2
   342  00004F                     LED_Update@pos2:
   343                           	opt callstack 0
   344  00004F                     	ds	2
   345  000051                     LED_Update@pos1:
   346                           	opt callstack 0
   347  000051                     	ds	2
   348  000053                     _Fulfillment_Lvl:
   349                           	opt callstack 0
   350  000053                     	ds	2
   351  000055                     _NeightAdress2:
   352                           	opt callstack 0
   353  000055                     	ds	2
   354  000057                     _NeightAdress1:
   355                           	opt callstack 0
   356  000057                     	ds	2
   357  000059                     LED_Update@Green:
   358                           	opt callstack 0
   359  000059                     	ds	1
   360                           
   361                           	psect	bssBANK0
   362  000060                     __pbssBANK0:
   363                           	opt callstack 0
   364  000060                     _ramkaCanRxKarty:
   365                           	opt callstack 0
   366  000060                     	ds	85
   367  0000B5                     _ramkaCanTxKarty:
   368                           	opt callstack 0
   369  0000B5                     	ds	17
   370                           
   371                           	psect	bssBIGRAM
   372  0000C6                     __pbssBIGRAM:
   373                           	opt callstack 0
   374  0000C6                     _wartosciSasiada:
   375                           	opt callstack 0
   376  0000C6                     	ds	544
   377                           
   378                           	psect	cstackCOMRAM
   379  000001                     __pcstackCOMRAM:
   380                           	opt callstack 0
   381  000001                     TMR1_Timer_reset@t1L:
   382                           	opt callstack 0
   383  000001                     i1TMR1_Update_flag_Set@a:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x0
   387  000001                     	ds	1
   388  000002                     TMR1_Timer_reset@t1H:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0x1
   392  000002                     	ds	1
   393  000003                     ??_ISR_low:
   394  000003                     
   395                           ; 1 bytes @ 0x2
   396  000003                     	ds	3
   397  000006                     ??_CAN_Setup:
   398  000006                     ?_TMR1_Update_flag_Get:
   399                           	opt callstack 0
   400  000006                     ?_LED_Right:
   401                           	opt callstack 0
   402  000006                     ?_LED_Left:
   403                           	opt callstack 0
   404  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   405                           	opt callstack 0
   406  000006                     ?_MOC_Frame_Counter:
   407                           	opt callstack 0
   408  000006                     ?_MOC_Aktualna_Temperatura:
   409                           	opt callstack 0
   410  000006                     ?_MOC_NOTWORK:
   411                           	opt callstack 0
   412  000006                     ?_IsInNeighbors:
   413                           	opt callstack 0
   414  000006                     ?_MOCK_PrzyspieszenieX:
   415                           	opt callstack 0
   416  000006                     ?_MOCK_PrzyspieszenieY:
   417                           	opt callstack 0
   418  000006                     ?_MOCK_PrzyspieszenieZ:
   419                           	opt callstack 0
   420  000006                     ?_MOCK_Klikniecie_Spadek:
   421                           	opt callstack 0
   422  000006                     ?___awdiv:
   423                           	opt callstack 0
   424  000006                     ?___lwdiv:
   425                           	opt callstack 0
   426  000006                     LOCK_Set@k:
   427                           	opt callstack 0
   428  000006                     CAN_MoveBuffIntoFrame@Ram:
   429                           	opt callstack 0
   430  000006                     CAN_GenID@message:
   431                           	opt callstack 0
   432  000006                     LED_Right@a:
   433                           	opt callstack 0
   434  000006                     LED_Left@a:
   435                           	opt callstack 0
   436  000006                     LED_Control@diode:
   437                           	opt callstack 0
   438  000006                     TMR1_Update_flag_Set@a:
   439                           	opt callstack 0
   440  000006                     IsInNeighbors@message_adress:
   441                           	opt callstack 0
   442  000006                     FRAME_ExcitationValue@message:
   443                           	opt callstack 0
   444  000006                     FRAME_ExcitationMultiplier@message:
   445                           	opt callstack 0
   446  000006                     FRAME_AveragingTimes@message:
   447                           	opt callstack 0
   448  000006                     FRAME_AxisStatus@message:
   449                           	opt callstack 0
   450  000006                     FRAME_DataUpdateAndChangeOption@message:
   451                           	opt callstack 0
   452  000006                     FRAME_MapPosition@message:
   453                           	opt callstack 0
   454  000006                     FRAME_SoftwareVersion@message:
   455                           	opt callstack 0
   456  000006                     FRAME_AnalogValue@message:
   457                           	opt callstack 0
   458  000006                     FRAME_PrzypisanieDokarty@message:
   459                           	opt callstack 0
   460  000006                     FRAME_AdressOfNeighbors@message:
   461                           	opt callstack 0
   462  000006                     ___awdiv@dividend:
   463                           	opt callstack 0
   464  000006                     ___lwdiv@dividend:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x5
   468  000006                     	ds	2
   469  000008                     ??_LED_Right:
   470  000008                     ??_FRAME_DataUpdateAndChangeOption:
   471  000008                     ??_FRAME_PrzypisanieDokarty:
   472  000008                     CAN_GenID@frameID:
   473                           	opt callstack 0
   474  000008                     CAN_MoveBuffIntoFrame@Buf:
   475                           	opt callstack 0
   476  000008                     LED_Left@b:
   477                           	opt callstack 0
   478  000008                     FRAME_SensorExcitationStatus@message:
   479                           	opt callstack 0
   480  000008                     FRAME_AccelerometerStatus@message:
   481                           	opt callstack 0
   482  000008                     FRAME_AnalogValue@set:
   483                           	opt callstack 0
   484  000008                     FRAME_AdressOfNeighbors@nrRamki:
   485                           	opt callstack 0
   486  000008                     ___awdiv@divisor:
   487                           	opt callstack 0
   488  000008                     ___lwdiv@divisor:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x7
   492  000008                     	ds	1
   493  000009                     ??_CAN_GenID:
   494  000009                     FRAME_ExcitationMultiplier@i:
   495                           	opt callstack 0
   496  000009                     FRAME_DeviceReset@message:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x8
   500  000009                     	ds	1
   501  00000A                     ??_FRAME_SensorExcitationStatus:
   502  00000A                     ??_FRAME_AdressOfNeighbors:
   503  00000A                     CAN_MoveBuffIntoFrame@i:
   504                           	opt callstack 0
   505  00000A                     LED_Control@color:
   506                           	opt callstack 0
   507  00000A                     ___awdiv@counter:
   508                           	opt callstack 0
   509  00000A                     LED_Right@b:
   510                           	opt callstack 0
   511  00000A                     ___lwdiv@quotient:
   512                           	opt callstack 0
   513                           
   514                           ; 2 bytes @ 0x9
   515  00000A                     	ds	1
   516  00000B                     ___awdiv@sign:
   517                           	opt callstack 0
   518  00000B                     CAN_SendFrame@message:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0xA
   522  00000B                     	ds	1
   523  00000C                     ___lwdiv@counter:
   524                           	opt callstack 0
   525  00000C                     FRAME_SensorExcitationStatus@tru:
   526                           	opt callstack 0
   527  00000C                     ___awdiv@quotient:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0xB
   531  00000C                     	ds	1
   532  00000D                     ??_CAN_SendFrame:
   533  00000D                     LED_Light_Pos@pos:
   534                           	opt callstack 0
   535  00000D                     FRAME_Plot@message:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0xC
   539  00000D                     	ds	1
   540  00000E                     CAN_TakeFrame@message:
   541                           	opt callstack 0
   542  00000E                     FRAME_AdressOfNeighbors@kier:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0xD
   546  00000E                     	ds	1
   547  00000F                     ??_FRAME_Plot:
   548  00000F                     LED_Light_Pos@fulfillment:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0xE
   552  00000F                     	ds	1
   553  000010                     ??_CAN_TakeFrame:
   554  000010                     FRAME_HandleCanFrame@message:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0xF
   558  000010                     	ds	1
   559  000011                     LED_Light_Pos@color:
   560                           	opt callstack 0
   561                           
   562                           ; 1 bytes @ 0x10
   563  000011                     	ds	1
   564  000012                     ??_FRAME_HandleCanFrame:
   565  000012                     CAN_TakeFrame@tempCON:
   566                           	opt callstack 0
   567  000012                     LED_Light_Pos@LED_array:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x11
   571  000012                     	ds	1
   572  000013                     CAN_TakeFrame@k:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0x12
   576  000013                     	ds	1
   577  000014                     LED_Light_Pos@pos2:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x13
   581  000014                     	ds	2
   582  000016                     LED_Light_Pos@flage:
   583                           	opt callstack 0
   584  000016                     FRAME_HandleCanFrame@ident:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x15
   588  000016                     	ds	2
   589  000018                     FRAME_HandleCanFrame@identyfikator:
   590                           	opt callstack 0
   591                           
   592                           ; 1 bytes @ 0x17
   593  000018                     	ds	1
   594  000019                     TRM_DataTransmition@canMessage:
   595                           	opt callstack 0
   596                           
   597                           ; 17 bytes @ 0x18
   598  000019                     	ds	17
   599  00002A                     
   600                           ; 1 bytes @ 0x29
   601 ;;
   602 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   603 ;;
   604 ;; *************** function _main *****************
   605 ;; Defined at:
   606 ;;		line 94 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   624 ;;Total ram usage:        0 bytes
   625 ;; Hardware stack levels required when called:    7
   626 ;; This function calls:
   627 ;;		_INI_All
   628 ;;		_LED_Update
   629 ;;		_TMR1_Update_flag_Get
   630 ;;		_TMR1_Update_flag_Set
   631 ;;		_TRM_DataTransmition
   632 ;; This function is called by:
   633 ;;		Startup code after reset
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text0
   638  00159C                     __ptext0:
   639                           	opt callstack 0
   640  00159C                     _main:
   641                           	opt callstack 24
   642                           
   643                           ;main.c: 96:     INI_All();
   644                           
   645                           ;incstack = 0
   646  00159C  EC3E  F00B         	call	_INI_All	;wreg free
   647                           
   648                           ;main.c: 98:     RCON = 0xFF;
   649  0015A0  68D0               	setf	4048,c	;volatile
   650  0015A2                     l3246:
   651                           
   652                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   653  0015A2  B033               	btfsc	_DetectorLedRadar,0,c
   654                           
   655                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   656  0015A4  9033               	bcf	_DetectorLedRadar,0,c
   657                           
   658                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   659  0015A6  EC8F  F00B         	call	_TMR1_Update_flag_Get	;wreg free
   660  0015AA  0406               	decf	?_TMR1_Update_flag_Get,w,c
   661  0015AC  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   662  0015AE  A4D8               	btfss	status,2,c
   663  0015B0  D008               	goto	l3256
   664                           
   665                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   666  0015B2  EC08  F008         	call	_LED_Update	;wreg free
   667                           
   668                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   669  0015B6  0E00               	movlw	0
   670  0015B8  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   671  0015BA  0E00               	movlw	0
   672  0015BC  6E06               	movwf	TMR1_Update_flag_Set@a,c
   673  0015BE  EC8A  F00B         	call	_TMR1_Update_flag_Set	;wreg free
   674  0015C2                     l3256:
   675                           
   676                           ;main.c: 115:         TRM_DataTransmition();
   677  0015C2  EC1D  F00A         	call	_TRM_DataTransmition	;wreg free
   678  0015C6  0004               	clrwdt		;# 
   679                           
   680                           ;main.c: 117:     }
   681  0015C8  D7EC               	goto	l3246
   682  0015CA                     __end_of_main:
   683                           	opt callstack 0
   684                           
   685 ;; *************** function _TRM_DataTransmition *****************
   686 ;; Defined at:
   687 ;;		line 19 in file "TRM.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  canMessage     17   24[COMRAM] struct .
   692 ;;  i               1    0        unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   703 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   705 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   706 ;;Total ram usage:       17 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    6
   709 ;; This function calls:
   710 ;;		_CAN_TakeFrame
   711 ;;		_FRAME_HandleCanFrame
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text1
   718  00143A                     __ptext1:
   719                           	opt callstack 0
   720  00143A                     _TRM_DataTransmition:
   721                           	opt callstack 24
   722                           
   723                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   724                           
   725                           ;incstack = 0
   726  00143A  A02F               	btfss	_DaneCan,0,c
   727  00143C  D013               	goto	l3214
   728                           
   729                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   730  00143E  0E02               	movlw	2
   731  001440  6E1A               	movwf	TRM_DataTransmition@canMessage+1,c
   732                           
   733                           ;TRM.c: 30:         canMessage.id.Val = 0;
   734  001442  0E00               	movlw	0
   735  001444  6E1D               	movwf	TRM_DataTransmition@canMessage+4,c
   736  001446  0E00               	movlw	0
   737  001448  6E1E               	movwf	TRM_DataTransmition@canMessage+5,c
   738  00144A  0E00               	movlw	0
   739  00144C  6E1F               	movwf	TRM_DataTransmition@canMessage+6,c
   740  00144E  0E00               	movlw	0
   741  001450  6E20               	movwf	TRM_DataTransmition@canMessage+7,c
   742                           
   743                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   744  001452  0E04               	movlw	4
   745  001454  6E1F               	movwf	TRM_DataTransmition@canMessage+6,c
   746                           
   747                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   748  001456  0E19               	movlw	low TRM_DataTransmition@canMessage
   749  001458  6E10               	movwf	FRAME_HandleCanFrame@message,c
   750  00145A  0E00               	movlw	high TRM_DataTransmition@canMessage
   751  00145C  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   752  00145E  ECF2  F002         	call	_FRAME_HandleCanFrame	;wreg free
   753                           
   754                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   755  001462  902F               	bcf	_DaneCan,0,c
   756  001464                     l3214:
   757                           
   758                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   759  001464  0E19               	movlw	low TRM_DataTransmition@canMessage
   760  001466  6E0E               	movwf	CAN_TakeFrame@message,c
   761  001468  0E00               	movlw	high TRM_DataTransmition@canMessage
   762  00146A  6E0F               	movwf	CAN_TakeFrame@message+1,c
   763  00146C  ECB4  F001         	call	_CAN_TakeFrame	;wreg free
   764  001470  0900               	iorlw	0
   765  001472  B4D8               	btfsc	status,2,c
   766  001474  0012               	return	
   767                           
   768                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   769  001476  0E19               	movlw	low TRM_DataTransmition@canMessage
   770  001478  6E10               	movwf	FRAME_HandleCanFrame@message,c
   771  00147A  0E00               	movlw	high TRM_DataTransmition@canMessage
   772  00147C  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   773  00147E  ECF2  F002         	call	_FRAME_HandleCanFrame	;wreg free
   774                           
   775                           ;TRM.c: 67:         }
   776  001482  0012               	return		;funcret
   777  001484                     __end_of_TRM_DataTransmition:
   778                           	opt callstack 0
   779                           
   780 ;; *************** function _FRAME_HandleCanFrame *****************
   781 ;; Defined at:
   782 ;;		line 623 in file "FRAME.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  message         2   15[COMRAM] PTR struct .
   785 ;;		 -> TRM_DataTransmition@canMessage(17), 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  ident           2   21[COMRAM] unsigned short 
   788 ;;  alfa            2    0        int 
   789 ;;  identyfikato    1   23[COMRAM] unsigned char 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   800 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   802 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   803 ;;Total ram usage:        9 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    5
   806 ;; This function calls:
   807 ;;		_CAN_GenID
   808 ;;		_CAN_SendFrame
   809 ;;		_FRAME_AccelerometerStatus
   810 ;;		_FRAME_AdressOfNeighbors
   811 ;;		_FRAME_AnalogValue
   812 ;;		_FRAME_AveragingTimes
   813 ;;		_FRAME_AxisStatus
   814 ;;		_FRAME_DeviceReset
   815 ;;		_FRAME_ExcitationMultiplier
   816 ;;		_FRAME_ExcitationValue
   817 ;;		_FRAME_MapPosition
   818 ;;		_FRAME_Plot
   819 ;;		_FRAME_PrzypisanieDokarty
   820 ;;		_FRAME_SensorExcitationStatus
   821 ;;		_FRAME_SoftwareVersion
   822 ;;		_LED_Error
   823 ;;		___awdiv
   824 ;; This function is called by:
   825 ;;		_TRM_DataTransmition
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text2
   830  0005E4                     __ptext2:
   831                           	opt callstack 0
   832  0005E4                     _FRAME_HandleCanFrame:
   833                           	opt callstack 24
   834                           
   835                           ;FRAME.c: 623: void FRAME_HandleCanFrame(mID * message);FRAME.c: 624: {;FRAME.c: 625:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   836                           
   837                           ;incstack = 0
   838  0005E4  EE20 F006          	lfsr	2,6
   839  0005E8  5010               	movf	FRAME_HandleCanFrame@message,w,c
   840  0005EA  26D9               	addwf	fsr2l,f,c
   841  0005EC  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   842  0005EE  22DA               	addwfc	fsr2h,f,c
   843  0005F0  50DF               	movf	indf2,w,c
   844  0005F2  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   845  0005F4  5012               	movf	??_FRAME_HandleCanFrame,w,c
   846  0005F6  6E06               	movwf	___awdiv@dividend,c
   847  0005F8  6A07               	clrf	___awdiv@dividend+1,c
   848  0005FA  0E00               	movlw	0
   849  0005FC  6E09               	movwf	___awdiv@divisor+1,c
   850  0005FE  0E04               	movlw	4
   851  000600  6E08               	movwf	___awdiv@divisor,c
   852  000602  EC85  F007         	call	___awdiv	;wreg free
   853  000606  5006               	movf	?___awdiv,w,c
   854  000608  6E18               	movwf	FRAME_HandleCanFrame@identyfikator,c
   855                           
   856                           ;FRAME.c: 628:     if(identyfikator != 0x01)
   857  00060A  0418               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   858  00060C  B4D8               	btfsc	status,2,c
   859  00060E  D074               	goto	l3162
   860                           
   861                           ;FRAME.c: 629:     {;FRAME.c: 630:         WORD ident = identyfikator;
   862  000610  C018  F016         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   863  000614  6A17               	clrf	FRAME_HandleCanFrame@ident+1,c
   864  000616  D070               	goto	l3162
   865  000618                     l3132:
   866                           
   867                           ;FRAME.c: 637:             FRAME_SensorExcitationStatus(message);
   868  000618  C010  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   869  00061C  C011  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   870  000620  ECF3  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   871                           
   872                           ;FRAME.c: 638:             break;
   873  000624  D09E               	goto	l3164
   874  000626                     l3134:
   875                           
   876                           ;FRAME.c: 640:             FRAME_AccelerometerStatus(message);
   877  000626  C010  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   878  00062A  C011  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   879  00062E  EC81  F008         	call	_FRAME_AccelerometerStatus	;wreg free
   880                           
   881                           ;FRAME.c: 641:             break;
   882  000632  D097               	goto	l3164
   883  000634                     l3136:
   884                           
   885                           ;FRAME.c: 643:             FRAME_ExcitationValue(message);
   886  000634  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   887  000638  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   888  00063C  EC63  F00A         	call	_FRAME_ExcitationValue	;wreg free
   889                           
   890                           ;FRAME.c: 644:             break;
   891  000640  D090               	goto	l3164
   892  000642                     l3138:
   893                           
   894                           ;FRAME.c: 646:             FRAME_ExcitationMultiplier(message);
   895  000642  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   896  000646  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   897  00064A  ECD0  F009         	call	_FRAME_ExcitationMultiplier	;wreg free
   898                           
   899                           ;FRAME.c: 647:             break;
   900  00064E  D089               	goto	l3164
   901  000650                     l3140:
   902                           
   903                           ;FRAME.c: 649:             FRAME_AveragingTimes(message);
   904  000650  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   905  000654  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   906  000658  EC99  F00A         	call	_FRAME_AveragingTimes	;wreg free
   907                           
   908                           ;FRAME.c: 650:             break;
   909  00065C  D082               	goto	l3164
   910  00065E                     l3142:
   911                           
   912                           ;FRAME.c: 652:             FRAME_AxisStatus(message);
   913  00065E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   914  000662  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   915  000666  EC7E  F00A         	call	_FRAME_AxisStatus	;wreg free
   916                           
   917                           ;FRAME.c: 653:             break;
   918  00066A  D07B               	goto	l3164
   919  00066C                     l3144:
   920                           
   921                           ;FRAME.c: 655:             FRAME_DeviceReset(message);
   922  00066C  C010  F009         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   923  000670  C011  F00A         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   924  000674  EC55  F005         	call	_FRAME_DeviceReset	;wreg free
   925                           
   926                           ;FRAME.c: 656:             break;
   927  000678  D074               	goto	l3164
   928  00067A                     l3146:
   929                           
   930                           ;FRAME.c: 658:             FRAME_Plot(message);
   931  00067A  C010  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   932  00067E  C011  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   933  000682  EC7B  F009         	call	_FRAME_Plot	;wreg free
   934                           
   935                           ;FRAME.c: 659:             break;
   936  000686  D06D               	goto	l3164
   937  000688                     l3148:
   938                           
   939                           ;FRAME.c: 661:             FRAME_MapPosition(message);
   940  000688  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   941  00068C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   942  000690  ECA6  F00B         	call	_FRAME_MapPosition	;wreg free
   943                           
   944                           ;FRAME.c: 662:             break;
   945  000694  D066               	goto	l3164
   946  000696                     l3150:
   947                           
   948                           ;FRAME.c: 664:             FRAME_SoftwareVersion(message);
   949  000696  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   950  00069A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   951  00069E  ECBC  F008         	call	_FRAME_SoftwareVersion	;wreg free
   952                           
   953                           ;FRAME.c: 665:             break;
   954  0006A2  D05F               	goto	l3164
   955  0006A4                     l3152:
   956                           
   957                           ;FRAME.c: 668:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   958  0006A4  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   959  0006A8  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   960  0006AC  0EF4               	movlw	244
   961  0006AE  2418               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   962  0006B0  6E08               	movwf	FRAME_AnalogValue@set,c
   963  0006B2  6A09               	clrf	FRAME_AnalogValue@set+1,c
   964  0006B4  0EFF               	movlw	255
   965  0006B6  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   966  0006B8  ECA7  F00B         	call	_FRAME_AnalogValue	;wreg free
   967                           
   968                           ;FRAME.c: 669:             break;
   969  0006BC  D052               	goto	l3164
   970  0006BE                     l3154:
   971                           
   972                           ;FRAME.c: 671:             FRAME_PrzypisanieDokarty(message);
   973  0006BE  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   974  0006C2  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   975  0006C6  EC36  F007         	call	_FRAME_PrzypisanieDokarty	;wreg free
   976                           
   977                           ;FRAME.c: 672:             break;
   978  0006CA  D04B               	goto	l3164
   979  0006CC                     l3156:
   980                           
   981                           ;FRAME.c: 674:             FRAME_AdressOfNeighbors(message,0x10);
   982  0006CC  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   983  0006D0  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   984  0006D4  0E00               	movlw	0
   985  0006D6  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
   986  0006D8  0E10               	movlw	16
   987  0006DA  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   988  0006DC  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   989                           
   990                           ;FRAME.c: 675:             break;
   991  0006E0  D040               	goto	l3164
   992  0006E2                     l3158:
   993                           
   994                           ;FRAME.c: 677:             FRAME_AdressOfNeighbors(message,0x11);
   995  0006E2  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   996  0006E6  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   997  0006EA  0E00               	movlw	0
   998  0006EC  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
   999  0006EE  0E11               	movlw	17
  1000  0006F0  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1001  0006F2  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1002                           
  1003                           ;FRAME.c: 678:             break;
  1004  0006F6  D035               	goto	l3164
  1005  0006F8                     l3162:
  1006  0006F8  5018               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1007  0006FA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1008  0006FC  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1009                           
  1010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 1, Range of values is 0 to 0
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            4     3 (average)
  1016                           ;	Chosen strategy is simple_byte
  1017  0006FE  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
  1018  000700  0A00               	xorlw	0	; case 0
  1019  000702  A4D8               	btfss	status,2,c
  1020  000704  D02E               	goto	l3164
  1021                           
  1022                           ; Switch size 1, requested type "simple"
  1023                           ; Number of cases is 15, Range of values is 1 to 17
  1024                           ; switch strategies available:
  1025                           ; Name         Instructions Cycles
  1026                           ; simple_byte           46    24 (average)
  1027                           ;	Chosen strategy is simple_byte
  1028  000706  5012               	movf	??_FRAME_HandleCanFrame,w,c
  1029  000708  0A01               	xorlw	1	; case 1
  1030  00070A  B4D8               	btfsc	status,2,c
  1031  00070C  D785               	goto	l3132
  1032  00070E  0A03               	xorlw	3	; case 2
  1033  000710  B4D8               	btfsc	status,2,c
  1034  000712  D789               	goto	l3134
  1035  000714  0A01               	xorlw	1	; case 3
  1036  000716  B4D8               	btfsc	status,2,c
  1037  000718  D78D               	goto	l3136
  1038  00071A  0A07               	xorlw	7	; case 4
  1039  00071C  B4D8               	btfsc	status,2,c
  1040  00071E  D791               	goto	l3138
  1041  000720  0A01               	xorlw	1	; case 5
  1042  000722  B4D8               	btfsc	status,2,c
  1043  000724  D795               	goto	l3140
  1044  000726  0A03               	xorlw	3	; case 6
  1045  000728  B4D8               	btfsc	status,2,c
  1046  00072A  D799               	goto	l3142
  1047  00072C  0A01               	xorlw	1	; case 7
  1048  00072E  B4D8               	btfsc	status,2,c
  1049  000730  D79D               	goto	l3144
  1050  000732  0A0E               	xorlw	14	; case 9
  1051  000734  B4D8               	btfsc	status,2,c
  1052  000736  D7A1               	goto	l3146
  1053  000738  0A03               	xorlw	3	; case 10
  1054  00073A  B4D8               	btfsc	status,2,c
  1055  00073C  D7A5               	goto	l3148
  1056  00073E  0A01               	xorlw	1	; case 11
  1057  000740  B4D8               	btfsc	status,2,c
  1058  000742  D7A9               	goto	l3150
  1059  000744  0A07               	xorlw	7	; case 12
  1060  000746  B4D8               	btfsc	status,2,c
  1061  000748  D7AD               	goto	l3152
  1062  00074A  0A01               	xorlw	1	; case 13
  1063  00074C  B4D8               	btfsc	status,2,c
  1064  00074E  D7AA               	goto	l3152
  1065  000750  0A02               	xorlw	2	; case 15
  1066  000752  B4D8               	btfsc	status,2,c
  1067  000754  D7B4               	goto	l3154
  1068  000756  0A1F               	xorlw	31	; case 16
  1069  000758  B4D8               	btfsc	status,2,c
  1070  00075A  D7B8               	goto	l3156
  1071  00075C  0A01               	xorlw	1	; case 17
  1072  00075E  B4D8               	btfsc	status,2,c
  1073  000760  D7C0               	goto	l3158
  1074  000762                     l3164:
  1075                           
  1076                           ;FRAME.c: 687:     if(message->message_type == 0x02)
  1077  000762  EE20 F001          	lfsr	2,1
  1078  000766  5010               	movf	FRAME_HandleCanFrame@message,w,c
  1079  000768  26D9               	addwf	fsr2l,f,c
  1080  00076A  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
  1081  00076C  22DA               	addwfc	fsr2h,f,c
  1082  00076E  0E02               	movlw	2
  1083  000770  18DE               	xorwf	postinc2,w,c
  1084  000772  A4D8               	btfss	status,2,c
  1085  000774  0012               	return	
  1086                           
  1087                           ;FRAME.c: 688:     {;FRAME.c: 690:         message->frame_type = 0x03;
  1088  000776  EE20 F002          	lfsr	2,2
  1089  00077A  5010               	movf	FRAME_HandleCanFrame@message,w,c
  1090  00077C  26D9               	addwf	fsr2l,f,c
  1091  00077E  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
  1092  000780  22DA               	addwfc	fsr2h,f,c
  1093  000782  0E03               	movlw	3
  1094  000784  6EDF               	movwf	indf2,c
  1095                           
  1096                           ;FRAME.c: 691:         message->message_type = 0x01;
  1097  000786  EE20 F001          	lfsr	2,1
  1098  00078A  5010               	movf	FRAME_HandleCanFrame@message,w,c
  1099  00078C  26D9               	addwf	fsr2l,f,c
  1100  00078E  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
  1101  000790  22DA               	addwfc	fsr2h,f,c
  1102  000792  0E01               	movlw	1
  1103  000794  6EDF               	movwf	indf2,c
  1104                           
  1105                           ;FRAME.c: 692:         message->id.Val = 0;
  1106  000796  EE20 F004          	lfsr	2,4
  1107  00079A  5010               	movf	FRAME_HandleCanFrame@message,w,c
  1108  00079C  26D9               	addwf	fsr2l,f,c
  1109  00079E  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
  1110  0007A0  22DA               	addwfc	fsr2h,f,c
  1111  0007A2  6ADE               	clrf	postinc2,c
  1112  0007A4  6ADE               	clrf	postinc2,c
  1113  0007A6  6ADE               	clrf	postinc2,c
  1114  0007A8  6ADD               	clrf	postdec2,c
  1115                           
  1116                           ;FRAME.c: 694:         message->id.v[2] = identyfikator*4;
  1117  0007AA  5018               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1118  0007AC  0D04               	mullw	4
  1119  0007AE  EE20 F006          	lfsr	2,6
  1120  0007B2  5010               	movf	FRAME_HandleCanFrame@message,w,c
  1121  0007B4  26D9               	addwf	fsr2l,f,c
  1122  0007B6  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
  1123  0007B8  22DA               	addwfc	fsr2h,f,c
  1124  0007BA  CFF3 FFDF          	movff	prodl,indf2
  1125                           
  1126                           ;FRAME.c: 695:         CAN_GenID(message,identyfikator);
  1127  0007BE  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1128  0007C2  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1129  0007C6  C018  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1130  0007CA  EC45  F008         	call	_CAN_GenID	;wreg free
  1131                           
  1132                           ;FRAME.c: 696:         CAN_SendFrame(message);
  1133  0007CE  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1134  0007D2  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1135  0007D6  ECF5  F003         	call	_CAN_SendFrame	;wreg free
  1136                           
  1137                           ;FRAME.c: 707:        while(RXB0CONbits.FILHIT3)
  1138  0007DA  D004               	goto	l603
  1139  0007DC                     l604:
  1140                           
  1141                           ;FRAME.c: 708:        {;FRAME.c: 709:            if(TXB0CONbits.TXERR == 1){
  1142  0007DC  010F               	movlb	15	; () banked
  1143  0007DE  B940               	btfsc	64,4,b	;volatile
  1144                           
  1145                           ; BSR set to: 15
  1146                           ;FRAME.c: 710:                LED_Error();
  1147  0007E0  EC20  F00B         	call	_LED_Error	;wreg free
  1148  0007E4                     l603:
  1149                           
  1150                           ;FRAME.c: 707:        while(RXB0CONbits.FILHIT3)
  1151  0007E4  A660               	btfss	3936,3,c	;volatile
  1152  0007E6  0012               	return	
  1153  0007E8  D7F9               	goto	l604
  1154  0007EA                     __end_of_FRAME_HandleCanFrame:
  1155                           	opt callstack 0
  1156                           
  1157 ;; *************** function _LED_Error *****************
  1158 ;; Defined at:
  1159 ;;		line 37 in file "LED.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  2  285[None  ] unsigned int 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    4
  1180 ;; This function calls:
  1181 ;;		_LED_Control
  1182 ;; This function is called by:
  1183 ;;		_FRAME_HandleCanFrame
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text3
  1188  001640                     __ptext3:
  1189                           	opt callstack 0
  1190  001640                     _LED_Error:
  1191                           	opt callstack 24
  1192                           
  1193                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1194                           
  1195                           ;incstack = 0
  1196  001640  0E02               	movlw	2
  1197  001642  6E07               	movwf	LED_Control@diode+1,c
  1198  001644  0EAA               	movlw	170
  1199  001646  6E06               	movwf	LED_Control@diode,c
  1200  001648  0E00               	movlw	0
  1201  00164A  ECAC  F004         	call	_LED_Control
  1202                           
  1203                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1204  00164E  0E00               	movlw	0
  1205  001650  6E07               	movwf	LED_Control@diode+1,c
  1206  001652  0E00               	movlw	0
  1207  001654  6E06               	movwf	LED_Control@diode,c
  1208  001656  0E01               	movlw	1
  1209  001658  ECAC  F004         	call	_LED_Control
  1210  00165C  0012               	return		;funcret
  1211  00165E                     __end_of_LED_Error:
  1212                           	opt callstack 0
  1213                           
  1214 ;; *************** function _FRAME_SoftwareVersion *****************
  1215 ;; Defined at:
  1216 ;;		line 451 in file "FRAME.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  message         2    5[COMRAM] PTR struct .
  1219 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1234 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    3
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_FRAME_HandleCanFrame
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text4
  1246  001178                     __ptext4:
  1247                           	opt callstack 0
  1248  001178                     _FRAME_SoftwareVersion:
  1249                           	opt callstack 25
  1250                           
  1251                           ;FRAME.c: 451: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 452: {;FRAME.c: 
      +                          454:     if(message->message_type == 0x02)
  1252                           
  1253                           ;incstack = 0
  1254  001178  EE20 F001          	lfsr	2,1
  1255  00117C  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1256  00117E  26D9               	addwf	fsr2l,f,c
  1257  001180  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1258  001182  22DA               	addwfc	fsr2h,f,c
  1259  001184  0E02               	movlw	2
  1260  001186  18DE               	xorwf	postinc2,w,c
  1261  001188  A4D8               	btfss	status,2,c
  1262  00118A  0012               	return	
  1263                           
  1264                           ;FRAME.c: 455:     {;FRAME.c: 456:         message->data_length = 4;
  1265  00118C  EE20 F010          	lfsr	2,16
  1266  001190  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1267  001192  26D9               	addwf	fsr2l,f,c
  1268  001194  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1269  001196  22DA               	addwfc	fsr2h,f,c
  1270  001198  0E04               	movlw	4
  1271  00119A  6EDF               	movwf	indf2,c
  1272                           
  1273                           ;FRAME.c: 457:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1274  00119C  EE20 F008          	lfsr	2,8
  1275  0011A0  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1276  0011A2  26D9               	addwf	fsr2l,f,c
  1277  0011A4  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1278  0011A6  22DA               	addwfc	fsr2h,f,c
  1279  0011A8  5005               	movf	5,w,c
  1280  0011AA  6EDF               	movwf	indf2,c
  1281                           
  1282                           ;FRAME.c: 458:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1283  0011AC  EE20 F009          	lfsr	2,9
  1284  0011B0  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1285  0011B2  26D9               	addwf	fsr2l,f,c
  1286  0011B4  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1287  0011B6  22DA               	addwfc	fsr2h,f,c
  1288  0011B8  C004 FFDF          	movff	4,indf2
  1289                           
  1290                           ;FRAME.c: 459:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1291  0011BC  EE20 F00A          	lfsr	2,10
  1292  0011C0  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1293  0011C2  26D9               	addwf	fsr2l,f,c
  1294  0011C4  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1295  0011C6  22DA               	addwfc	fsr2h,f,c
  1296  0011C8  500B               	movf	11,w,c
  1297  0011CA  6EDF               	movwf	indf2,c
  1298                           
  1299                           ;FRAME.c: 460:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1300  0011CC  EE20 F00B          	lfsr	2,11
  1301  0011D0  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1302  0011D2  26D9               	addwf	fsr2l,f,c
  1303  0011D4  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1304  0011D6  22DA               	addwfc	fsr2h,f,c
  1305  0011D8  C00A FFDF          	movff	10,indf2
  1306                           
  1307                           ;FRAME.c: 461:     }
  1308  0011DC  0012               	return		;funcret
  1309  0011DE                     __end_of_FRAME_SoftwareVersion:
  1310                           	opt callstack 0
  1311                           
  1312 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1313 ;; Defined at:
  1314 ;;		line 44 in file "FRAME.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  message         2    7[COMRAM] PTR struct .
  1317 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  tru             2   11[COMRAM] unsigned int 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1333 ;;Total ram usage:        6 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    4
  1336 ;; This function calls:
  1337 ;;		_IsInNeighbors
  1338 ;;		_LOCK_Get
  1339 ;;		_LOCK_Set
  1340 ;;		_MOC_Aktualna_Temperatura
  1341 ;;		_MOC_Frame_Counter
  1342 ;;		_MOC_NOTWORK
  1343 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1344 ;; This function is called by:
  1345 ;;		_FRAME_HandleCanFrame
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text5
  1350  000BE6                     __ptext5:
  1351                           	opt callstack 0
  1352  000BE6                     _FRAME_SensorExcitationStatus:
  1353                           	opt callstack 24
  1354                           
  1355                           ;FRAME.c: 44: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 45: {;FRAM
      +                          E.c: 47:     static UINT statwect = 0b00000000;;FRAME.c: 48:     if(message->message_typ
      +                          e == 0x02)
  1356                           
  1357                           ;incstack = 0
  1358  000BE6  EE20 F001          	lfsr	2,1
  1359  000BEA  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1360  000BEC  26D9               	addwf	fsr2l,f,c
  1361  000BEE  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1362  000BF0  22DA               	addwfc	fsr2h,f,c
  1363  000BF2  0E02               	movlw	2
  1364  000BF4  18DE               	xorwf	postinc2,w,c
  1365  000BF6  A4D8               	btfss	status,2,c
  1366  000BF8  D047               	goto	l2810
  1367                           
  1368                           ;FRAME.c: 49:     {;FRAME.c: 50:         message->data_length = 6;
  1369  000BFA  EE20 F010          	lfsr	2,16
  1370  000BFE  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1371  000C00  26D9               	addwf	fsr2l,f,c
  1372  000C02  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1373  000C04  22DA               	addwfc	fsr2h,f,c
  1374  000C06  0E06               	movlw	6
  1375  000C08  6EDF               	movwf	indf2,c
  1376                           
  1377                           ;FRAME.c: 56:         message->data[0] = LOCK_Get();
  1378  000C0A  EE20 F008          	lfsr	2,8
  1379  000C0E  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1380  000C10  26D9               	addwf	fsr2l,f,c
  1381  000C12  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1382  000C14  22DA               	addwfc	fsr2h,f,c
  1383  000C16  ECA4  F00B         	call	_LOCK_Get	;wreg free
  1384  000C1A  6EDF               	movwf	indf2,c
  1385                           
  1386                           ;FRAME.c: 57:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1387  000C1C  EE20 F009          	lfsr	2,9
  1388  000C20  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1389  000C22  26D9               	addwf	fsr2l,f,c
  1390  000C24  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1391  000C26  22DA               	addwfc	fsr2h,f,c
  1392  000C28  EC6C  F00B         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1393  000C2C  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1394  000C30  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1395  000C32  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1396  000C34  6EDF               	movwf	indf2,c
  1397                           
  1398                           ;FRAME.c: 58:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1399  000C36  EE20 F00A          	lfsr	2,10
  1400  000C3A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1401  000C3C  26D9               	addwf	fsr2l,f,c
  1402  000C3E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1403  000C40  22DA               	addwfc	fsr2h,f,c
  1404  000C42  EC6C  F00B         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1405  000C46  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1406  000C48  6EDF               	movwf	indf2,c
  1407                           
  1408                           ;FRAME.c: 59:         message->data[3] = MOC_Frame_Counter();
  1409  000C4A  EE20 F00B          	lfsr	2,11
  1410  000C4E  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1411  000C50  26D9               	addwf	fsr2l,f,c
  1412  000C52  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1413  000C54  22DA               	addwfc	fsr2h,f,c
  1414  000C56  EC57  F00B         	call	_MOC_Frame_Counter	;wreg free
  1415  000C5A  5006               	movf	?_MOC_Frame_Counter,w,c
  1416  000C5C  6EDF               	movwf	indf2,c
  1417                           
  1418                           ;FRAME.c: 60:         message->data[4] = MOC_Aktualna_Temperatura();
  1419  000C5E  EE20 F00C          	lfsr	2,12
  1420  000C62  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1421  000C64  26D9               	addwf	fsr2l,f,c
  1422  000C66  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1423  000C68  22DA               	addwfc	fsr2h,f,c
  1424  000C6A  EC71  F00B         	call	_MOC_Aktualna_Temperatura	;wreg free
  1425  000C6E  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1426  000C70  6EDF               	movwf	indf2,c
  1427                           
  1428                           ;FRAME.c: 61:         message->data[5] = MOC_NOTWORK();
  1429  000C72  EE20 F00D          	lfsr	2,13
  1430  000C76  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1431  000C78  26D9               	addwf	fsr2l,f,c
  1432  000C7A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1433  000C7C  22DA               	addwfc	fsr2h,f,c
  1434  000C7E  EC99  F00B         	call	_MOC_NOTWORK	;wreg free
  1435  000C82  5006               	movf	?_MOC_NOTWORK,w,c
  1436  000C84  6EDF               	movwf	indf2,c
  1437                           
  1438                           ;FRAME.c: 71:     }
  1439  000C86  0012               	return	
  1440  000C88                     l2810:
  1441                           
  1442                           ;FRAME.c: 73:     {;FRAME.c: 75:         UINT tru = IsInNeighbors(message->id.w[0]);
  1443  000C88  EE20 F004          	lfsr	2,4
  1444  000C8C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1445  000C8E  26D9               	addwf	fsr2l,f,c
  1446  000C90  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1447  000C92  22DA               	addwfc	fsr2h,f,c
  1448  000C94  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1449  000C98  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1450  000C9C  EC79  F006         	call	_IsInNeighbors	;wreg free
  1451  000CA0  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1452  000CA4  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1453                           
  1454                           ;FRAME.c: 78:         if(message->data[0]==0)
  1455  000CA8  EE20 F008          	lfsr	2,8
  1456  000CAC  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1457  000CAE  26D9               	addwf	fsr2l,f,c
  1458  000CB0  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1459  000CB2  22DA               	addwfc	fsr2h,f,c
  1460  000CB4  50DF               	movf	indf2,w,c
  1461  000CB6  A4D8               	btfss	status,2,c
  1462  000CB8  D00A               	goto	l2816
  1463                           
  1464                           ;FRAME.c: 79:         {;FRAME.c: 81:             statwect = statwect &( ~tru );
  1465  000CBA  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1466  000CBC  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1467  000CBE  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1468  000CC0  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1469  000CC2  5036               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1470  000CC4  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1471  000CC6  6E36               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1472  000CC8  5037               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1473  000CCA  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1474  000CCC  D005               	goto	L1
  1475  000CCE                     l2816:
  1476                           
  1477                           ;FRAME.c: 84:         {;FRAME.c: 85:             statwect = statwect| tru;
  1478  000CCE  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1479  000CD0  1036               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1480  000CD2  6E36               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1481  000CD4  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1482  000CD6  1037               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1483  000CD8                     L1:
  1484  000CD8  6E37               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1485                           
  1486                           ;FRAME.c: 88:         if(statwect>0)
  1487                           
  1488                           ;FRAME.c: 86:         }
  1489  000CDA  5036               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1490  000CDC  1037               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1491  000CDE  B4D8               	btfsc	status,2,c
  1492  000CE0  D004               	goto	l2820
  1493                           
  1494                           ;FRAME.c: 89:         {;FRAME.c: 90:         LOCK_Set(1);
  1495  000CE2  0E01               	movlw	1
  1496  000CE4  EC9D  F00B         	call	_LOCK_Set
  1497                           
  1498                           ;FRAME.c: 91:         }
  1499  000CE8  0012               	return	
  1500  000CEA                     l2820:
  1501                           
  1502                           ;FRAME.c: 93:         {;FRAME.c: 94:         LOCK_Set(0);
  1503  000CEA  0E00               	movlw	0
  1504  000CEC  EC9D  F00B         	call	_LOCK_Set
  1505  000CF0  0012               	return		;funcret
  1506  000CF2                     __end_of_FRAME_SensorExcitationStatus:
  1507                           	opt callstack 0
  1508                           
  1509 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1510 ;; Defined at:
  1511 ;;		line 33 in file "MOC_Funct.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2    5[COMRAM] unsigned int 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    3
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_FRAME_SensorExcitationStatus
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text6
  1540  0016D8                     __ptext6:
  1541                           	opt callstack 0
  1542  0016D8                     _MOC_Wynikowa_wartosc_roznicowa:
  1543                           	opt callstack 24
  1544                           
  1545                           ;MOC_Funct.c: 35:     return 0x0220;
  1546                           
  1547                           ;incstack = 0
  1548  0016D8  0E02               	movlw	2
  1549  0016DA  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1550  0016DC  0E20               	movlw	32
  1551  0016DE  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1552  0016E0  0012               	return		;funcret
  1553  0016E2                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1554                           	opt callstack 0
  1555                           
  1556 ;; *************** function _MOC_NOTWORK *****************
  1557 ;; Defined at:
  1558 ;;		line 47 in file "MOC_Funct.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2    5[COMRAM] unsigned int 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1576 ;;Total ram usage:        2 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    3
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_FRAME_SensorExcitationStatus
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text7
  1587  001732                     __ptext7:
  1588                           	opt callstack 0
  1589  001732                     _MOC_NOTWORK:
  1590                           	opt callstack 24
  1591                           
  1592                           ;MOC_Funct.c: 49:     return 0xFF;
  1593                           
  1594                           ;incstack = 0
  1595  001732  0E00               	movlw	0
  1596  001734  6E07               	movwf	?_MOC_NOTWORK+1,c
  1597  001736  6806               	setf	?_MOC_NOTWORK,c
  1598  001738  0012               	return		;funcret
  1599  00173A                     __end_of_MOC_NOTWORK:
  1600                           	opt callstack 0
  1601                           
  1602 ;; *************** function _MOC_Frame_Counter *****************
  1603 ;; Defined at:
  1604 ;;		line 38 in file "MOC_Funct.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  2    5[COMRAM] unsigned int 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    3
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_FRAME_SensorExcitationStatus
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text8
  1633  0016AE                     __ptext8:
  1634                           	opt callstack 0
  1635  0016AE                     _MOC_Frame_Counter:
  1636                           	opt callstack 24
  1637                           
  1638                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1639                           
  1640                           ;incstack = 0
  1641  0016AE  504D               	movf	MOC_Frame_Counter@zeta,w,c
  1642  0016B0  6E06               	movwf	?_MOC_Frame_Counter,c
  1643  0016B2  504E               	movf	MOC_Frame_Counter@zeta+1,w,c
  1644  0016B4  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1645  0016B6  4A4D               	infsnz	MOC_Frame_Counter@zeta,f,c
  1646  0016B8  2A4E               	incf	MOC_Frame_Counter@zeta+1,f,c
  1647  0016BA  0012               	return		;funcret
  1648  0016BC                     __end_of_MOC_Frame_Counter:
  1649                           	opt callstack 0
  1650                           
  1651 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1652 ;; Defined at:
  1653 ;;		line 43 in file "MOC_Funct.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  2    5[COMRAM] unsigned int 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1671 ;;Total ram usage:        2 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    3
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_FRAME_SensorExcitationStatus
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text9
  1682  0016E2                     __ptext9:
  1683                           	opt callstack 0
  1684  0016E2                     _MOC_Aktualna_Temperatura:
  1685                           	opt callstack 24
  1686                           
  1687                           ;MOC_Funct.c: 45:     return 0x1B;
  1688                           
  1689                           ;incstack = 0
  1690  0016E2  0E00               	movlw	0
  1691  0016E4  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1692  0016E6  0E1B               	movlw	27
  1693  0016E8  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1694  0016EA  0012               	return		;funcret
  1695  0016EC                     __end_of_MOC_Aktualna_Temperatura:
  1696                           	opt callstack 0
  1697                           
  1698 ;; *************** function _LOCK_Set *****************
  1699 ;; Defined at:
  1700 ;;		line 52 in file "LED.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  k               1    wreg     unsigned char 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  k               1    5[COMRAM] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;Total ram usage:        1 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    3
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_FRAME_SensorExcitationStatus
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text10
  1729  00173A                     __ptext10:
  1730                           	opt callstack 0
  1731  00173A                     _LOCK_Set:
  1732                           	opt callstack 24
  1733                           
  1734                           ;incstack = 0
  1735                           ;LOCK_Set@k stored from wreg
  1736  00173A  6E06               	movwf	LOCK_Set@k,c
  1737                           
  1738                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1739  00173C  C006  F04C         	movff	LOCK_Set@k,_LOCK
  1740  001740  0012               	return		;funcret
  1741  001742                     __end_of_LOCK_Set:
  1742                           	opt callstack 0
  1743                           
  1744 ;; *************** function _LOCK_Get *****************
  1745 ;; Defined at:
  1746 ;;		line 57 in file "LED.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      unsigned char 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_FRAME_SensorExcitationStatus
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text11
  1775  001748                     __ptext11:
  1776                           	opt callstack 0
  1777  001748                     _LOCK_Get:
  1778                           	opt callstack 24
  1779                           
  1780                           ;LED.c: 59:     return LOCK;
  1781                           
  1782                           ;incstack = 0
  1783  001748  504C               	movf	_LOCK,w,c
  1784  00174A  0012               	return		;funcret
  1785  00174C                     __end_of_LOCK_Get:
  1786                           	opt callstack 0
  1787                           
  1788 ;; *************** function _IsInNeighbors *****************
  1789 ;; Defined at:
  1790 ;;		line 99 in file "FRAME.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  message_adre    2    5[COMRAM] unsigned int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  i               2    0        unsigned short 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2    5[COMRAM] unsigned int 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1808 ;;Total ram usage:        2 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    3
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_FRAME_SensorExcitationStatus
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text12
  1819  000CF2                     __ptext12:
  1820                           	opt callstack 0
  1821  000CF2                     _IsInNeighbors:
  1822                           	opt callstack 24
  1823                           
  1824                           ;FRAME.c: 99: UINT IsInNeighbors(UINT message_adress);FRAME.c: 100: {;FRAME.c: 101:     
      +                          WORD i;;FRAME.c: 103:     if(NeightAdress1==message_adress)
  1825                           
  1826                           ;incstack = 0
  1827  000CF2  5006               	movf	IsInNeighbors@message_adress,w,c
  1828  000CF4  1857               	xorwf	_NeightAdress1,w,c	;volatile
  1829  000CF6  E109               	bnz	l2594
  1830  000CF8  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1831  000CFA  1858               	xorwf	_NeightAdress1+1,w,c	;volatile
  1832  000CFC  A4D8               	btfss	status,2,c
  1833  000CFE  D005               	goto	l2594
  1834                           
  1835                           ;FRAME.c: 104:     {;FRAME.c: 105:         return 0b1;
  1836  000D00  0E00               	movlw	0
  1837  000D02  6E07               	movwf	?_IsInNeighbors+1,c
  1838  000D04  0E01               	movlw	1
  1839  000D06  6E06               	movwf	?_IsInNeighbors,c
  1840  000D08  0012               	return	
  1841  000D0A                     l2594:
  1842                           
  1843                           ;FRAME.c: 107:     if(NeightAdress2==message_adress)
  1844  000D0A  5006               	movf	IsInNeighbors@message_adress,w,c
  1845  000D0C  1855               	xorwf	_NeightAdress2,w,c	;volatile
  1846  000D0E  E109               	bnz	l2600
  1847  000D10  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1848  000D12  1856               	xorwf	_NeightAdress2+1,w,c	;volatile
  1849  000D14  A4D8               	btfss	status,2,c
  1850  000D16  D005               	goto	l2600
  1851                           
  1852                           ;FRAME.c: 108:     {;FRAME.c: 109:         return 0b10;
  1853  000D18  0E00               	movlw	0
  1854  000D1A  6E07               	movwf	?_IsInNeighbors+1,c
  1855  000D1C  0E02               	movlw	2
  1856  000D1E  6E06               	movwf	?_IsInNeighbors,c
  1857  000D20  0012               	return	
  1858  000D22                     l2600:
  1859                           
  1860                           ;FRAME.c: 111:     if(NeightAdress3==message_adress)
  1861  000D22  5006               	movf	IsInNeighbors@message_adress,w,c
  1862  000D24  1844               	xorwf	_NeightAdress3,w,c	;volatile
  1863  000D26  E109               	bnz	l2606
  1864  000D28  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1865  000D2A  1845               	xorwf	_NeightAdress3+1,w,c	;volatile
  1866  000D2C  A4D8               	btfss	status,2,c
  1867  000D2E  D005               	goto	l2606
  1868                           
  1869                           ;FRAME.c: 112:     {;FRAME.c: 113:         return 0b100;
  1870  000D30  0E00               	movlw	0
  1871  000D32  6E07               	movwf	?_IsInNeighbors+1,c
  1872  000D34  0E04               	movlw	4
  1873  000D36  6E06               	movwf	?_IsInNeighbors,c
  1874  000D38  0012               	return	
  1875  000D3A                     l2606:
  1876                           
  1877                           ;FRAME.c: 115:     if(NeightAdress4==message_adress)
  1878  000D3A  5006               	movf	IsInNeighbors@message_adress,w,c
  1879  000D3C  1842               	xorwf	_NeightAdress4,w,c	;volatile
  1880  000D3E  E109               	bnz	l2612
  1881  000D40  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1882  000D42  1843               	xorwf	_NeightAdress4+1,w,c	;volatile
  1883  000D44  A4D8               	btfss	status,2,c
  1884  000D46  D005               	goto	l2612
  1885                           
  1886                           ;FRAME.c: 116:     {;FRAME.c: 117:         return 0b1000;
  1887  000D48  0E00               	movlw	0
  1888  000D4A  6E07               	movwf	?_IsInNeighbors+1,c
  1889  000D4C  0E08               	movlw	8
  1890  000D4E  6E06               	movwf	?_IsInNeighbors,c
  1891  000D50  0012               	return	
  1892  000D52                     l2612:
  1893                           
  1894                           ;FRAME.c: 119:     if(NeightAdress5==message_adress)
  1895  000D52  5006               	movf	IsInNeighbors@message_adress,w,c
  1896  000D54  1840               	xorwf	_NeightAdress5,w,c	;volatile
  1897  000D56  E109               	bnz	l2618
  1898  000D58  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1899  000D5A  1841               	xorwf	_NeightAdress5+1,w,c	;volatile
  1900  000D5C  A4D8               	btfss	status,2,c
  1901  000D5E  D005               	goto	l2618
  1902                           
  1903                           ;FRAME.c: 120:     {;FRAME.c: 121:         return 0b10000;
  1904  000D60  0E00               	movlw	0
  1905  000D62  6E07               	movwf	?_IsInNeighbors+1,c
  1906  000D64  0E10               	movlw	16
  1907  000D66  6E06               	movwf	?_IsInNeighbors,c
  1908  000D68  0012               	return	
  1909  000D6A                     l2618:
  1910                           
  1911                           ;FRAME.c: 123:     if(NeightAdress6==message_adress)
  1912  000D6A  5006               	movf	IsInNeighbors@message_adress,w,c
  1913  000D6C  183E               	xorwf	_NeightAdress6,w,c	;volatile
  1914  000D6E  E109               	bnz	l2624
  1915  000D70  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1916  000D72  183F               	xorwf	_NeightAdress6+1,w,c	;volatile
  1917  000D74  A4D8               	btfss	status,2,c
  1918  000D76  D005               	goto	l2624
  1919                           
  1920                           ;FRAME.c: 124:     {;FRAME.c: 125:         return 0b100000;
  1921  000D78  0E00               	movlw	0
  1922  000D7A  6E07               	movwf	?_IsInNeighbors+1,c
  1923  000D7C  0E20               	movlw	32
  1924  000D7E  6E06               	movwf	?_IsInNeighbors,c
  1925  000D80  0012               	return	
  1926  000D82                     l2624:
  1927                           
  1928                           ;FRAME.c: 127:     if(NeightAdress7==message_adress)
  1929  000D82  5006               	movf	IsInNeighbors@message_adress,w,c
  1930  000D84  183C               	xorwf	_NeightAdress7,w,c	;volatile
  1931  000D86  E109               	bnz	l2630
  1932  000D88  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1933  000D8A  183D               	xorwf	_NeightAdress7+1,w,c	;volatile
  1934  000D8C  A4D8               	btfss	status,2,c
  1935  000D8E  D005               	goto	l2630
  1936                           
  1937                           ;FRAME.c: 128:     {;FRAME.c: 129:         return 0b1000000;
  1938  000D90  0E00               	movlw	0
  1939  000D92  6E07               	movwf	?_IsInNeighbors+1,c
  1940  000D94  0E40               	movlw	64
  1941  000D96  6E06               	movwf	?_IsInNeighbors,c
  1942  000D98  0012               	return	
  1943  000D9A                     l2630:
  1944                           
  1945                           ;FRAME.c: 131:     if(NeightAdress8==message_adress)
  1946  000D9A  5006               	movf	IsInNeighbors@message_adress,w,c
  1947  000D9C  183A               	xorwf	_NeightAdress8,w,c	;volatile
  1948  000D9E  E109               	bnz	l2636
  1949  000DA0  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1950  000DA2  183B               	xorwf	_NeightAdress8+1,w,c	;volatile
  1951  000DA4  A4D8               	btfss	status,2,c
  1952  000DA6  D005               	goto	l2636
  1953                           
  1954                           ;FRAME.c: 132:     {;FRAME.c: 133:         return 0b10000000;
  1955  000DA8  0E00               	movlw	0
  1956  000DAA  6E07               	movwf	?_IsInNeighbors+1,c
  1957  000DAC  0E80               	movlw	128
  1958  000DAE  6E06               	movwf	?_IsInNeighbors,c
  1959  000DB0  0012               	return	
  1960  000DB2                     l2636:
  1961                           
  1962                           ;FRAME.c: 149:     return 0;
  1963  000DB2  0E00               	movlw	0
  1964  000DB4  6E07               	movwf	?_IsInNeighbors+1,c
  1965  000DB6  0E00               	movlw	0
  1966  000DB8  6E06               	movwf	?_IsInNeighbors,c
  1967  000DBA  0012               	return		;funcret
  1968  000DBC                     __end_of_IsInNeighbors:
  1969                           	opt callstack 0
  1970                           
  1971 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1972 ;; Defined at:
  1973 ;;		line 500 in file "FRAME.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  message         2    5[COMRAM] PTR struct .
  1976 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1990 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1992 ;;Total ram usage:        6 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    3
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_FRAME_HandleCanFrame
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text13
  2003  000E6C                     __ptext13:
  2004                           	opt callstack 0
  2005  000E6C                     _FRAME_PrzypisanieDokarty:
  2006                           	opt callstack 25
  2007                           
  2008                           ;FRAME.c: 500: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 501: {;FRAME.
      +                          c: 502:     if(message->message_type == 0x02)
  2009                           
  2010                           ;incstack = 0
  2011  000E6C  EE20 F001          	lfsr	2,1
  2012  000E70  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2013  000E72  26D9               	addwf	fsr2l,f,c
  2014  000E74  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2015  000E76  22DA               	addwfc	fsr2h,f,c
  2016  000E78  0E02               	movlw	2
  2017  000E7A  18DE               	xorwf	postinc2,w,c
  2018  000E7C  A4D8               	btfss	status,2,c
  2019  000E7E  D021               	goto	l2902
  2020                           
  2021                           ;FRAME.c: 503:     {;FRAME.c: 504:         message->data_length = 3;
  2022  000E80  EE20 F010          	lfsr	2,16
  2023  000E84  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2024  000E86  26D9               	addwf	fsr2l,f,c
  2025  000E88  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2026  000E8A  22DA               	addwfc	fsr2h,f,c
  2027  000E8C  0E03               	movlw	3
  2028  000E8E  6EDF               	movwf	indf2,c
  2029                           
  2030                           ;FRAME.c: 505:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2031  000E90  EE20 F008          	lfsr	2,8
  2032  000E94  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2033  000E96  26D9               	addwf	fsr2l,f,c
  2034  000E98  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2035  000E9A  22DA               	addwfc	fsr2h,f,c
  2036  000E9C  0E00               	movlw	0
  2037  000E9E  6EDF               	movwf	indf2,c
  2038                           
  2039                           ;FRAME.c: 506:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2040  000EA0  EE20 F009          	lfsr	2,9
  2041  000EA4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2042  000EA6  26D9               	addwf	fsr2l,f,c
  2043  000EA8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2044  000EAA  22DA               	addwfc	fsr2h,f,c
  2045  000EAC  C038 FFDF          	movff	56,indf2
  2046                           
  2047                           ;FRAME.c: 507:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2048  000EB0  EE20 F00A          	lfsr	2,10
  2049  000EB4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2050  000EB6  26D9               	addwf	fsr2l,f,c
  2051  000EB8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2052  000EBA  22DA               	addwfc	fsr2h,f,c
  2053  000EBC  C03A FFDF          	movff	58,indf2
  2054                           
  2055                           ;FRAME.c: 509:     }
  2056  000EC0  0012               	return	
  2057  000EC2                     l2902:
  2058                           
  2059                           ;FRAME.c: 511:     {;FRAME.c: 512:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2060  000EC2  EE20 F008          	lfsr	2,8
  2061  000EC6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2062  000EC8  26D9               	addwf	fsr2l,f,c
  2063  000ECA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2064  000ECC  22DA               	addwfc	fsr2h,f,c
  2065  000ECE  50DF               	movf	indf2,w,c
  2066  000ED0  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2067  000ED2  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2068  000ED4  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2069  000ED6  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2070  000ED8  EE20 F009          	lfsr	2,9
  2071  000EDC  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2072  000EDE  26D9               	addwf	fsr2l,f,c
  2073  000EE0  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2074  000EE2  22DA               	addwfc	fsr2h,f,c
  2075  000EE4  50DF               	movf	indf2,w,c
  2076  000EE6  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2077  000EE8  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2078  000EEA  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2079  000EEC  6E38               	movwf	56,c
  2080  000EEE  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2081  000EF0  6E39               	movwf	57,c
  2082                           
  2083                           ;FRAME.c: 513:          Dane->Nr_WeWy = (message->data[2]);
  2084  000EF2  EE20 F00A          	lfsr	2,10
  2085  000EF6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2086  000EF8  26D9               	addwf	fsr2l,f,c
  2087  000EFA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2088  000EFC  22DA               	addwfc	fsr2h,f,c
  2089  000EFE  50DF               	movf	indf2,w,c
  2090  000F00  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2091  000F02  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2092  000F04  6E3A               	movwf	58,c
  2093  000F06  6A3B               	clrf	59,c
  2094  000F08  0012               	return		;funcret
  2095  000F0A                     __end_of_FRAME_PrzypisanieDokarty:
  2096                           	opt callstack 0
  2097                           
  2098 ;; *************** function _FRAME_Plot *****************
  2099 ;; Defined at:
  2100 ;;		line 405 in file "FRAME.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  message         2   12[COMRAM] PTR struct .
  2103 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;Total ram usage:        3 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    4
  2122 ;; This function calls:
  2123 ;;		___lwdiv
  2124 ;; This function is called by:
  2125 ;;		_FRAME_HandleCanFrame
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text14
  2130  0012F6                     __ptext14:
  2131                           	opt callstack 0
  2132  0012F6                     _FRAME_Plot:
  2133                           	opt callstack 24
  2134                           
  2135                           ;FRAME.c: 405: static void FRAME_Plot(mID *message);FRAME.c: 406: {;FRAME.c: 408:     if
      +                          (message->message_type == 0x02)
  2136                           
  2137                           ;incstack = 0
  2138  0012F6  EE20 F001          	lfsr	2,1
  2139  0012FA  500D               	movf	FRAME_Plot@message,w,c
  2140  0012FC  26D9               	addwf	fsr2l,f,c
  2141  0012FE  500E               	movf	FRAME_Plot@message+1,w,c
  2142  001300  22DA               	addwfc	fsr2h,f,c
  2143  001302  0E02               	movlw	2
  2144  001304  18DE               	xorwf	postinc2,w,c
  2145  001306  A4D8               	btfss	status,2,c
  2146  001308  D013               	goto	l2892
  2147                           
  2148                           ;FRAME.c: 409:     {;FRAME.c: 410:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2149  00130A  EE20 F008          	lfsr	2,8
  2150  00130E  500D               	movf	FRAME_Plot@message,w,c
  2151  001310  26D9               	addwf	fsr2l,f,c
  2152  001312  500E               	movf	FRAME_Plot@message+1,w,c
  2153  001314  22DA               	addwfc	fsr2h,f,c
  2154  001316  C00C F006          	movff	12,___lwdiv@dividend
  2155  00131A  C00D F007          	movff	13,___lwdiv@dividend+1
  2156  00131E  0E00               	movlw	0
  2157  001320  6E09               	movwf	___lwdiv@divisor+1,c
  2158  001322  0E0A               	movlw	10
  2159  001324  6E08               	movwf	___lwdiv@divisor,c
  2160  001326  ECA7  F009         	call	___lwdiv	;wreg free
  2161  00132A  5006               	movf	?___lwdiv,w,c
  2162  00132C  6EDF               	movwf	indf2,c
  2163                           
  2164                           ;FRAME.c: 411:     }
  2165  00132E  0012               	return	
  2166  001330                     l2892:
  2167                           
  2168                           ;FRAME.c: 413:     {;FRAME.c: 414:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2169  001330  EE20 F008          	lfsr	2,8
  2170  001334  500D               	movf	FRAME_Plot@message,w,c
  2171  001336  26D9               	addwf	fsr2l,f,c
  2172  001338  500E               	movf	FRAME_Plot@message+1,w,c
  2173  00133A  22DA               	addwfc	fsr2h,f,c
  2174  00133C  50DF               	movf	indf2,w,c
  2175  00133E  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2176  001340  500F               	movf	??_FRAME_Plot,w,c
  2177  001342  0D0A               	mullw	10
  2178  001344  CFF3 F00C          	movff	prodl,12
  2179  001348  CFF4 F00D          	movff	prodh,13
  2180  00134C  0012               	return		;funcret
  2181  00134E                     __end_of_FRAME_Plot:
  2182                           	opt callstack 0
  2183                           
  2184 ;; *************** function _FRAME_MapPosition *****************
  2185 ;; Defined at:
  2186 ;;		line 426 in file "FRAME.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  message         2    5[COMRAM] PTR struct .
  2189 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		None
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;Total ram usage:        2 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    3
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_FRAME_HandleCanFrame
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text15
  2216  00174C                     __ptext15:
  2217                           	opt callstack 0
  2218  00174C                     _FRAME_MapPosition:
  2219                           	opt callstack 25
  2220                           
  2221                           ;incstack = 0
  2222  00174C  0012               	return		;funcret
  2223  00174E                     __end_of_FRAME_MapPosition:
  2224                           	opt callstack 0
  2225                           
  2226 ;; *************** function _FRAME_ExcitationValue *****************
  2227 ;; Defined at:
  2228 ;;		line 183 in file "FRAME.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  message         2    5[COMRAM] PTR struct .
  2231 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2245 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;Total ram usage:        3 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    3
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_FRAME_HandleCanFrame
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text16
  2258  0014C6                     __ptext16:
  2259                           	opt callstack 0
  2260  0014C6                     _FRAME_ExcitationValue:
  2261                           	opt callstack 25
  2262                           
  2263                           ;FRAME.c: 183: static void FRAME_ExcitationValue(mID *message);FRAME.c: 184: {;FRAME.c: 
      +                          185:     if(message->message_type == 0x02)
  2264                           
  2265                           ;incstack = 0
  2266  0014C6  EE20 F001          	lfsr	2,1
  2267  0014CA  5006               	movf	FRAME_ExcitationValue@message,w,c
  2268  0014CC  26D9               	addwf	fsr2l,f,c
  2269  0014CE  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2270  0014D0  22DA               	addwfc	fsr2h,f,c
  2271  0014D2  0E02               	movlw	2
  2272  0014D4  18DE               	xorwf	postinc2,w,c
  2273  0014D6  A4D8               	btfss	status,2,c
  2274  0014D8  0012               	return	
  2275                           
  2276                           ;FRAME.c: 186:     {;FRAME.c: 187:         message->data_length = 1;
  2277  0014DA  EE20 F010          	lfsr	2,16
  2278  0014DE  5006               	movf	FRAME_ExcitationValue@message,w,c
  2279  0014E0  26D9               	addwf	fsr2l,f,c
  2280  0014E2  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2281  0014E4  22DA               	addwfc	fsr2h,f,c
  2282  0014E6  0E01               	movlw	1
  2283  0014E8  6EDF               	movwf	indf2,c
  2284                           
  2285                           ;FRAME.c: 192:         message->data[0] = 0xFF;
  2286  0014EA  EE20 F008          	lfsr	2,8
  2287  0014EE  5006               	movf	FRAME_ExcitationValue@message,w,c
  2288  0014F0  26D9               	addwf	fsr2l,f,c
  2289  0014F2  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2290  0014F4  22DA               	addwfc	fsr2h,f,c
  2291  0014F6  0EFF               	movlw	255
  2292  0014F8  6EDF               	movwf	indf2,c
  2293                           
  2294                           ;FRAME.c: 193:     }
  2295  0014FA  0012               	return		;funcret
  2296  0014FC                     __end_of_FRAME_ExcitationValue:
  2297                           	opt callstack 0
  2298                           
  2299 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2300 ;; Defined at:
  2301 ;;		line 207 in file "FRAME.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  message         2    5[COMRAM] PTR struct .
  2304 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  i               2    8[COMRAM] unsigned short 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2319 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;Total ram usage:        5 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    3
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_FRAME_HandleCanFrame
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text17
  2331  0013A0                     __ptext17:
  2332                           	opt callstack 0
  2333  0013A0                     _FRAME_ExcitationMultiplier:
  2334                           	opt callstack 25
  2335                           
  2336                           ;FRAME.c: 207: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 208: {;FRAM
      +                          E.c: 209:     WORD i;;FRAME.c: 211:     if(message->message_type == 0x02)
  2337                           
  2338                           ;incstack = 0
  2339  0013A0  EE20 F001          	lfsr	2,1
  2340  0013A4  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2341  0013A6  26D9               	addwf	fsr2l,f,c
  2342  0013A8  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2343  0013AA  22DA               	addwfc	fsr2h,f,c
  2344  0013AC  0E02               	movlw	2
  2345  0013AE  18DE               	xorwf	postinc2,w,c
  2346  0013B0  A4D8               	btfss	status,2,c
  2347  0013B2  0012               	return	
  2348                           
  2349                           ;FRAME.c: 212:     {;FRAME.c: 213:         message->data_length = 1;
  2350  0013B4  EE20 F010          	lfsr	2,16
  2351  0013B8  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2352  0013BA  26D9               	addwf	fsr2l,f,c
  2353  0013BC  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2354  0013BE  22DA               	addwfc	fsr2h,f,c
  2355  0013C0  0E01               	movlw	1
  2356  0013C2  6EDF               	movwf	indf2,c
  2357                           
  2358                           ;FRAME.c: 214:         for(i=0; i<3; i++)
  2359  0013C4  0E00               	movlw	0
  2360  0013C6  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2361  0013C8  0E00               	movlw	0
  2362  0013CA  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2363  0013CC                     l2848:
  2364                           
  2365                           ;FRAME.c: 215:         {;FRAME.c: 218:         }
  2366  0013CC  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2367  0013CE  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2368  0013D0  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2369  0013D2  E104               	bnz	u1390
  2370  0013D4  0E03               	movlw	3
  2371  0013D6  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2372  0013D8  A0D8               	btfss	status,0,c
  2373  0013DA  D7F8               	goto	l2848
  2374  0013DC                     u1390:
  2375                           
  2376                           ;FRAME.c: 219:         message->data[0] = 0xFF;
  2377  0013DC  EE20 F008          	lfsr	2,8
  2378  0013E0  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2379  0013E2  26D9               	addwf	fsr2l,f,c
  2380  0013E4  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2381  0013E6  22DA               	addwfc	fsr2h,f,c
  2382  0013E8  0EFF               	movlw	255
  2383  0013EA  6EDF               	movwf	indf2,c
  2384                           
  2385                           ;FRAME.c: 220:     }
  2386  0013EC  0012               	return		;funcret
  2387  0013EE                     __end_of_FRAME_ExcitationMultiplier:
  2388                           	opt callstack 0
  2389                           
  2390 ;; *************** function _FRAME_DeviceReset *****************
  2391 ;; Defined at:
  2392 ;;		line 341 in file "FRAME.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  message         2    8[COMRAM] PTR struct .
  2395 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2410 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2411 ;;Total ram usage:        3 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    4
  2414 ;; This function calls:
  2415 ;;		_FRAME_DataUpdateAndChangeOption
  2416 ;; This function is called by:
  2417 ;;		_FRAME_HandleCanFrame
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text18
  2422  000AAA                     __ptext18:
  2423                           	opt callstack 0
  2424  000AAA                     _FRAME_DeviceReset:
  2425                           	opt callstack 24
  2426                           
  2427                           ;FRAME.c: 341: static void FRAME_DeviceReset(mID *message);FRAME.c: 342: {;FRAME.c: 343:
      +                               if(message->message_type == 0x02)
  2428                           
  2429                           ;incstack = 0
  2430  000AAA  EE20 F001          	lfsr	2,1
  2431  000AAE  5009               	movf	FRAME_DeviceReset@message,w,c
  2432  000AB0  26D9               	addwf	fsr2l,f,c
  2433  000AB2  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2434  000AB4  22DA               	addwfc	fsr2h,f,c
  2435  000AB6  0E02               	movlw	2
  2436  000AB8  18DE               	xorwf	postinc2,w,c
  2437  000ABA  A4D8               	btfss	status,2,c
  2438  000ABC  D056               	goto	l2870
  2439                           
  2440                           ;FRAME.c: 344:     {;FRAME.c: 345:         message->data_length = 1;
  2441  000ABE  EE20 F010          	lfsr	2,16
  2442  000AC2  5009               	movf	FRAME_DeviceReset@message,w,c
  2443  000AC4  26D9               	addwf	fsr2l,f,c
  2444  000AC6  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2445  000AC8  22DA               	addwfc	fsr2h,f,c
  2446  000ACA  0E01               	movlw	1
  2447  000ACC  6EDF               	movwf	indf2,c
  2448                           
  2449                           ;FRAME.c: 347:         message->data[0] = (RCON>>6) & 0x01;
  2450  000ACE  EE20 F008          	lfsr	2,8
  2451  000AD2  5009               	movf	FRAME_DeviceReset@message,w,c
  2452  000AD4  26D9               	addwf	fsr2l,f,c
  2453  000AD6  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2454  000AD8  22DA               	addwfc	fsr2h,f,c
  2455  000ADA  44D0               	rlncf	4048,w,c	;volatile
  2456  000ADC  46E8               	rlncf	wreg,f,c
  2457  000ADE  0B03               	andlw	3
  2458  000AE0  0B01               	andlw	1
  2459  000AE2  6EDF               	movwf	indf2,c
  2460                           
  2461                           ;FRAME.c: 348:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2462  000AE4  EE20 F009          	lfsr	2,9
  2463  000AE8  5009               	movf	FRAME_DeviceReset@message,w,c
  2464  000AEA  26D9               	addwf	fsr2l,f,c
  2465  000AEC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2466  000AEE  22DA               	addwfc	fsr2h,f,c
  2467  000AF0  A82A               	btfss	_Flagi,4,c
  2468  000AF2  D002               	goto	u1430
  2469  000AF4  0E01               	movlw	1
  2470  000AF6  D001               	goto	u1436
  2471  000AF8                     u1430:
  2472  000AF8  0E00               	movlw	0
  2473  000AFA                     u1436:
  2474  000AFA  6EDF               	movwf	indf2,c
  2475                           
  2476                           ;FRAME.c: 349:         message->data[2] = Flagi.pomiarTla;
  2477  000AFC  EE20 F00A          	lfsr	2,10
  2478  000B00  5009               	movf	FRAME_DeviceReset@message,w,c
  2479  000B02  26D9               	addwf	fsr2l,f,c
  2480  000B04  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2481  000B06  22DA               	addwfc	fsr2h,f,c
  2482  000B08  A02A               	btfss	_Flagi,0,c
  2483  000B0A  D002               	goto	u1440
  2484  000B0C  0E01               	movlw	1
  2485  000B0E  D001               	goto	u1446
  2486  000B10                     u1440:
  2487  000B10  0E00               	movlw	0
  2488  000B12                     u1446:
  2489  000B12  6EDF               	movwf	indf2,c
  2490                           
  2491                           ;FRAME.c: 350:         message->data[3] = 0;
  2492  000B14  EE20 F00B          	lfsr	2,11
  2493  000B18  5009               	movf	FRAME_DeviceReset@message,w,c
  2494  000B1A  26D9               	addwf	fsr2l,f,c
  2495  000B1C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2496  000B1E  22DA               	addwfc	fsr2h,f,c
  2497  000B20  0E00               	movlw	0
  2498  000B22  6EDF               	movwf	indf2,c
  2499                           
  2500                           ;FRAME.c: 351:         message->data[4] = Dane->rokU16;
  2501  000B24  EE20 F00C          	lfsr	2,12
  2502  000B28  5009               	movf	FRAME_DeviceReset@message,w,c
  2503  000B2A  26D9               	addwf	fsr2l,f,c
  2504  000B2C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2505  000B2E  22DA               	addwfc	fsr2h,f,c
  2506  000B30  C02E FFDF          	movff	46,indf2
  2507                           
  2508                           ;FRAME.c: 352:         message->data[5] = Dane->miesiacU16;
  2509  000B34  EE20 F00D          	lfsr	2,13
  2510  000B38  5009               	movf	FRAME_DeviceReset@message,w,c
  2511  000B3A  26D9               	addwf	fsr2l,f,c
  2512  000B3C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2513  000B3E  22DA               	addwfc	fsr2h,f,c
  2514  000B40  C030 FFDF          	movff	48,indf2
  2515                           
  2516                           ;FRAME.c: 353:         message->data[6] = Dane->dzienU16;
  2517  000B44  EE20 F00E          	lfsr	2,14
  2518  000B48  5009               	movf	FRAME_DeviceReset@message,w,c
  2519  000B4A  26D9               	addwf	fsr2l,f,c
  2520  000B4C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2521  000B4E  22DA               	addwfc	fsr2h,f,c
  2522  000B50  C032 FFDF          	movff	50,indf2
  2523                           
  2524                           ;FRAME.c: 354:         message->data[7] = Dane->godzinaU16;
  2525  000B54  EE20 F00F          	lfsr	2,15
  2526  000B58  5009               	movf	FRAME_DeviceReset@message,w,c
  2527  000B5A  26D9               	addwf	fsr2l,f,c
  2528  000B5C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2529  000B5E  22DA               	addwfc	fsr2h,f,c
  2530  000B60  C034 FFDF          	movff	52,indf2
  2531                           
  2532                           ;FRAME.c: 355:         RCON &= ~(1<<6);
  2533  000B64  9CD0               	bcf	4048,6,c	;volatile
  2534                           
  2535                           ;FRAME.c: 356:         Flagi.wykonanoZapisDoFlash = 0;
  2536  000B66  982A               	bcf	_Flagi,4,c
  2537                           
  2538                           ;FRAME.c: 370:     }
  2539  000B68  0012               	return	
  2540  000B6A                     l2870:
  2541                           
  2542                           ;FRAME.c: 372:     {;FRAME.c: 373:         message->data_length = 1;
  2543  000B6A  EE20 F010          	lfsr	2,16
  2544  000B6E  5009               	movf	FRAME_DeviceReset@message,w,c
  2545  000B70  26D9               	addwf	fsr2l,f,c
  2546  000B72  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2547  000B74  22DA               	addwfc	fsr2h,f,c
  2548  000B76  0E01               	movlw	1
  2549  000B78  6EDF               	movwf	indf2,c
  2550                           
  2551                           ;FRAME.c: 375:         if(message->data[2])
  2552  000B7A  EE20 F00A          	lfsr	2,10
  2553  000B7E  5009               	movf	FRAME_DeviceReset@message,w,c
  2554  000B80  26D9               	addwf	fsr2l,f,c
  2555  000B82  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2556  000B84  22DA               	addwfc	fsr2h,f,c
  2557  000B86  50DF               	movf	indf2,w,c
  2558  000B88  B4D8               	btfsc	status,2,c
  2559  000B8A  D00C               	goto	l2878
  2560                           
  2561                           ;FRAME.c: 376:         {;FRAME.c: 377:             Flagi.pomiarTla = 1;
  2562  000B8C  802A               	bsf	_Flagi,0,c
  2563                           
  2564                           ;FRAME.c: 378:             if(message->data[1])
  2565  000B8E  EE20 F009          	lfsr	2,9
  2566  000B92  5009               	movf	FRAME_DeviceReset@message,w,c
  2567  000B94  26D9               	addwf	fsr2l,f,c
  2568  000B96  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2569  000B98  22DA               	addwfc	fsr2h,f,c
  2570  000B9A  50DF               	movf	indf2,w,c
  2571  000B9C  B4D8               	btfsc	status,2,c
  2572  000B9E  D01A               	goto	l2886
  2573                           
  2574                           ;FRAME.c: 379:             {;FRAME.c: 380:                 Flagi.zapisDoFlash = 1;
  2575  000BA0  862A               	bsf	_Flagi,3,c
  2576  000BA2  D018               	goto	l2886
  2577  000BA4                     l2878:
  2578                           
  2579                           ;FRAME.c: 384:         {;FRAME.c: 385:             if(message->data[1])
  2580  000BA4  EE20 F009          	lfsr	2,9
  2581  000BA8  5009               	movf	FRAME_DeviceReset@message,w,c
  2582  000BAA  26D9               	addwf	fsr2l,f,c
  2583  000BAC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2584  000BAE  22DA               	addwfc	fsr2h,f,c
  2585  000BB0  50DF               	movf	indf2,w,c
  2586  000BB2  B4D8               	btfsc	status,2,c
  2587  000BB4  D006               	goto	l2882
  2588                           
  2589                           ;FRAME.c: 386:             {;FRAME.c: 387:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2590  000BB6  C009  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2591  000BBA  C00A  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2592  000BBE  EC4E  F009         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2593  000BC2                     l2882:
  2594                           
  2595                           ;FRAME.c: 390:             if(message->data[0])
  2596  000BC2  EE20 F008          	lfsr	2,8
  2597  000BC6  5009               	movf	FRAME_DeviceReset@message,w,c
  2598  000BC8  26D9               	addwf	fsr2l,f,c
  2599  000BCA  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2600  000BCC  22DA               	addwfc	fsr2h,f,c
  2601  000BCE  50DF               	movf	indf2,w,c
  2602  000BD0  A4D8               	btfss	status,2,c
  2603  000BD2  00FF               	reset		;# 
  2604  000BD4                     l2886:
  2605                           
  2606                           ;FRAME.c: 395:         message->data[0] = 0xFF;
  2607  000BD4  EE20 F008          	lfsr	2,8
  2608  000BD8  5009               	movf	FRAME_DeviceReset@message,w,c
  2609  000BDA  26D9               	addwf	fsr2l,f,c
  2610  000BDC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2611  000BDE  22DA               	addwfc	fsr2h,f,c
  2612  000BE0  0EFF               	movlw	255
  2613  000BE2  6EDF               	movwf	indf2,c
  2614  000BE4  0012               	return		;funcret
  2615  000BE6                     __end_of_FRAME_DeviceReset:
  2616                           	opt callstack 0
  2617                           
  2618 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  2619 ;; Defined at:
  2620 ;;		line 325 in file "FRAME.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  message         2    5[COMRAM] PTR struct .
  2623 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;Total ram usage:        3 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    3
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_FRAME_DeviceReset
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text19
  2650  00129C                     __ptext19:
  2651                           	opt callstack 0
  2652  00129C                     _FRAME_DataUpdateAndChangeOption:
  2653                           	opt callstack 24
  2654                           
  2655                           ;FRAME.c: 325: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 326: {
      +                          ;FRAME.c: 328:     Dane->rokU16 = message->data[4];
  2656                           
  2657                           ;incstack = 0
  2658  00129C  EE20 F00C          	lfsr	2,12
  2659  0012A0  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2660  0012A2  26D9               	addwf	fsr2l,f,c
  2661  0012A4  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2662  0012A6  22DA               	addwfc	fsr2h,f,c
  2663  0012A8  50DF               	movf	indf2,w,c
  2664  0012AA  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2665  0012AC  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2666  0012AE  6E2E               	movwf	46,c
  2667  0012B0  6A2F               	clrf	47,c
  2668                           
  2669                           ;FRAME.c: 329:     Dane->miesiacU16 = message->data[5];
  2670  0012B2  EE20 F00D          	lfsr	2,13
  2671  0012B6  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2672  0012B8  26D9               	addwf	fsr2l,f,c
  2673  0012BA  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2674  0012BC  22DA               	addwfc	fsr2h,f,c
  2675  0012BE  50DF               	movf	indf2,w,c
  2676  0012C0  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2677  0012C2  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2678  0012C4  6E30               	movwf	48,c
  2679  0012C6  6A31               	clrf	49,c
  2680                           
  2681                           ;FRAME.c: 330:     Dane->dzienU16 = message->data[6];
  2682  0012C8  EE20 F00E          	lfsr	2,14
  2683  0012CC  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2684  0012CE  26D9               	addwf	fsr2l,f,c
  2685  0012D0  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2686  0012D2  22DA               	addwfc	fsr2h,f,c
  2687  0012D4  50DF               	movf	indf2,w,c
  2688  0012D6  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2689  0012D8  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2690  0012DA  6E32               	movwf	50,c
  2691  0012DC  6A33               	clrf	51,c
  2692                           
  2693                           ;FRAME.c: 331:     Dane->godzinaU16 = message->data[7];
  2694  0012DE  EE20 F00F          	lfsr	2,15
  2695  0012E2  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2696  0012E4  26D9               	addwf	fsr2l,f,c
  2697  0012E6  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2698  0012E8  22DA               	addwfc	fsr2h,f,c
  2699  0012EA  50DF               	movf	indf2,w,c
  2700  0012EC  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2701  0012EE  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2702  0012F0  6E34               	movwf	52,c
  2703  0012F2  6A35               	clrf	53,c
  2704  0012F4  0012               	return		;funcret
  2705  0012F6                     __end_of_FRAME_DataUpdateAndChangeOption:
  2706                           	opt callstack 0
  2707                           
  2708 ;; *************** function _FRAME_AxisStatus *****************
  2709 ;; Defined at:
  2710 ;;		line 294 in file "FRAME.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  message         2    5[COMRAM] PTR struct .
  2713 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  i               2    0        unsigned short 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2729 ;;Total ram usage:        3 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    3
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_FRAME_HandleCanFrame
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text20
  2740  0014FC                     __ptext20:
  2741                           	opt callstack 0
  2742  0014FC                     _FRAME_AxisStatus:
  2743                           	opt callstack 25
  2744                           
  2745                           ;FRAME.c: 294: static void FRAME_AxisStatus(mID *message);FRAME.c: 295: {;FRAME.c: 296: 
      +                              WORD i;;FRAME.c: 298:     if(message->message_type == 0x02)
  2746                           
  2747                           ;incstack = 0
  2748  0014FC  EE20 F001          	lfsr	2,1
  2749  001500  5006               	movf	FRAME_AxisStatus@message,w,c
  2750  001502  26D9               	addwf	fsr2l,f,c
  2751  001504  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2752  001506  22DA               	addwfc	fsr2h,f,c
  2753  001508  0E02               	movlw	2
  2754  00150A  18DE               	xorwf	postinc2,w,c
  2755  00150C  A4D8               	btfss	status,2,c
  2756  00150E  0012               	return	
  2757                           
  2758                           ;FRAME.c: 299:     {;FRAME.c: 300:         message->data_length = 1;
  2759  001510  EE20 F010          	lfsr	2,16
  2760  001514  5006               	movf	FRAME_AxisStatus@message,w,c
  2761  001516  26D9               	addwf	fsr2l,f,c
  2762  001518  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2763  00151A  22DA               	addwfc	fsr2h,f,c
  2764  00151C  0E01               	movlw	1
  2765  00151E  6EDF               	movwf	indf2,c
  2766                           
  2767                           ;FRAME.c: 311:         message->data[0] = 0xFF;
  2768  001520  EE20 F008          	lfsr	2,8
  2769  001524  5006               	movf	FRAME_AxisStatus@message,w,c
  2770  001526  26D9               	addwf	fsr2l,f,c
  2771  001528  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2772  00152A  22DA               	addwfc	fsr2h,f,c
  2773  00152C  0EFF               	movlw	255
  2774  00152E  6EDF               	movwf	indf2,c
  2775                           
  2776                           ;FRAME.c: 312:     }
  2777  001530  0012               	return		;funcret
  2778  001532                     __end_of_FRAME_AxisStatus:
  2779                           	opt callstack 0
  2780                           
  2781 ;; *************** function _FRAME_AveragingTimes *****************
  2782 ;; Defined at:
  2783 ;;		line 235 in file "FRAME.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  message         2    5[COMRAM] PTR struct .
  2786 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;Total ram usage:        3 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    3
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_FRAME_HandleCanFrame
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text21
  2813  001532                     __ptext21:
  2814                           	opt callstack 0
  2815  001532                     _FRAME_AveragingTimes:
  2816                           	opt callstack 25
  2817                           
  2818                           ;FRAME.c: 235: static void FRAME_AveragingTimes(mID *message);FRAME.c: 236: {;FRAME.c: 2
      +                          37:     if(message->message_type == 0x02)
  2819                           
  2820                           ;incstack = 0
  2821  001532  EE20 F001          	lfsr	2,1
  2822  001536  5006               	movf	FRAME_AveragingTimes@message,w,c
  2823  001538  26D9               	addwf	fsr2l,f,c
  2824  00153A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2825  00153C  22DA               	addwfc	fsr2h,f,c
  2826  00153E  0E02               	movlw	2
  2827  001540  18DE               	xorwf	postinc2,w,c
  2828  001542  A4D8               	btfss	status,2,c
  2829  001544  0012               	return	
  2830                           
  2831                           ;FRAME.c: 238:     {;FRAME.c: 239:         message->data_length = 1;
  2832  001546  EE20 F010          	lfsr	2,16
  2833  00154A  5006               	movf	FRAME_AveragingTimes@message,w,c
  2834  00154C  26D9               	addwf	fsr2l,f,c
  2835  00154E  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2836  001550  22DA               	addwfc	fsr2h,f,c
  2837  001552  0E01               	movlw	1
  2838  001554  6EDF               	movwf	indf2,c
  2839                           
  2840                           ;FRAME.c: 247:         message->data[0] = 0xFF;
  2841  001556  EE20 F008          	lfsr	2,8
  2842  00155A  5006               	movf	FRAME_AveragingTimes@message,w,c
  2843  00155C  26D9               	addwf	fsr2l,f,c
  2844  00155E  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2845  001560  22DA               	addwfc	fsr2h,f,c
  2846  001562  0EFF               	movlw	255
  2847  001564  6EDF               	movwf	indf2,c
  2848                           
  2849                           ;FRAME.c: 248:     }
  2850  001566  0012               	return		;funcret
  2851  001568                     __end_of_FRAME_AveragingTimes:
  2852                           	opt callstack 0
  2853                           
  2854 ;; *************** function _FRAME_AnalogValue *****************
  2855 ;; Defined at:
  2856 ;;		line 474 in file "FRAME.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  message         2    5[COMRAM] PTR struct .
  2859 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2860 ;;  set             2    7[COMRAM] unsigned short 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  i               2    0        unsigned short 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		None
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;Total ram usage:        4 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    3
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_FRAME_HandleCanFrame
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text22
  2887  00174E                     __ptext22:
  2888                           	opt callstack 0
  2889  00174E                     _FRAME_AnalogValue:
  2890                           	opt callstack 25
  2891                           
  2892                           ;incstack = 0
  2893  00174E  0012               	return		;funcret
  2894  001750                     __end_of_FRAME_AnalogValue:
  2895                           	opt callstack 0
  2896                           
  2897 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2898 ;; Defined at:
  2899 ;;		line 522 in file "FRAME.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  message         2    5[COMRAM] PTR struct .
  2902 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2903 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  kier            2   13[COMRAM] unsigned short 
  2906 ;;  it              2    0        unsigned short 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;Total ram usage:       10 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    3
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_FRAME_HandleCanFrame
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text23
  2931  000060                     __ptext23:
  2932                           	opt callstack 0
  2933  000060                     _FRAME_AdressOfNeighbors:
  2934                           	opt callstack 25
  2935                           
  2936                           ;FRAME.c: 522: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          523: {;FRAME.c: 524:     WORD it;;FRAME.c: 527:     WORD kier = (nrRamki-0x10);
  2937                           
  2938                           ;incstack = 0
  2939  000060  0EF0               	movlw	240
  2940  000062  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  2941  000064  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  2942  000066  0EFF               	movlw	255
  2943  000068  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  2944  00006A  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  2945                           
  2946                           ;FRAME.c: 528:     if(message->message_type == 0x02)
  2947  00006C  EE20 F001          	lfsr	2,1
  2948  000070  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2949  000072  26D9               	addwf	fsr2l,f,c
  2950  000074  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2951  000076  22DA               	addwfc	fsr2h,f,c
  2952  000078  0E02               	movlw	2
  2953  00007A  18DE               	xorwf	postinc2,w,c
  2954  00007C  A4D8               	btfss	status,2,c
  2955  00007E  D08E               	goto	l2916
  2956                           
  2957                           ;FRAME.c: 529:     {;FRAME.c: 531:         message->data_length = 8;
  2958  000080  EE20 F010          	lfsr	2,16
  2959  000084  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2960  000086  26D9               	addwf	fsr2l,f,c
  2961  000088  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2962  00008A  22DA               	addwfc	fsr2h,f,c
  2963  00008C  0E08               	movlw	8
  2964  00008E  6EDF               	movwf	indf2,c
  2965                           
  2966                           ;FRAME.c: 533:         if(kier == 0)
  2967  000090  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  2968  000092  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  2969  000094  A4D8               	btfss	status,2,c
  2970  000096  D041               	goto	l2914
  2971                           
  2972                           ;FRAME.c: 534:         {;FRAME.c: 535:         message->data[0] = (NeightAdress1>> 8);
  2973  000098  EE20 F008          	lfsr	2,8
  2974  00009C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2975  00009E  26D9               	addwf	fsr2l,f,c
  2976  0000A0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2977  0000A2  22DA               	addwfc	fsr2h,f,c
  2978  0000A4  5058               	movf	_NeightAdress1+1,w,c	;volatile
  2979  0000A6  6EDF               	movwf	indf2,c
  2980                           
  2981                           ;FRAME.c: 536:         message->data[1] = NeightAdress1 & 0b11111111;
  2982  0000A8  EE20 F009          	lfsr	2,9
  2983  0000AC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2984  0000AE  26D9               	addwf	fsr2l,f,c
  2985  0000B0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2986  0000B2  22DA               	addwfc	fsr2h,f,c
  2987  0000B4  C057  FFDF         	movff	_NeightAdress1,indf2	;volatile
  2988                           
  2989                           ;FRAME.c: 537:         message->data[2] = (NeightAdress2>> 8);
  2990  0000B8  EE20 F00A          	lfsr	2,10
  2991  0000BC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2992  0000BE  26D9               	addwf	fsr2l,f,c
  2993  0000C0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2994  0000C2  22DA               	addwfc	fsr2h,f,c
  2995  0000C4  5056               	movf	_NeightAdress2+1,w,c	;volatile
  2996  0000C6  6EDF               	movwf	indf2,c
  2997                           
  2998                           ;FRAME.c: 538:         message->data[3] = NeightAdress2 & 0b11111111;
  2999  0000C8  EE20 F00B          	lfsr	2,11
  3000  0000CC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3001  0000CE  26D9               	addwf	fsr2l,f,c
  3002  0000D0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3003  0000D2  22DA               	addwfc	fsr2h,f,c
  3004  0000D4  C055  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3005                           
  3006                           ;FRAME.c: 539:         message->data[4] = (NeightAdress3>> 8);
  3007  0000D8  EE20 F00C          	lfsr	2,12
  3008  0000DC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3009  0000DE  26D9               	addwf	fsr2l,f,c
  3010  0000E0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3011  0000E2  22DA               	addwfc	fsr2h,f,c
  3012  0000E4  5045               	movf	_NeightAdress3+1,w,c	;volatile
  3013  0000E6  6EDF               	movwf	indf2,c
  3014                           
  3015                           ;FRAME.c: 540:         message->data[5] = NeightAdress3 & 0b11111111;
  3016  0000E8  EE20 F00D          	lfsr	2,13
  3017  0000EC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3018  0000EE  26D9               	addwf	fsr2l,f,c
  3019  0000F0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3020  0000F2  22DA               	addwfc	fsr2h,f,c
  3021  0000F4  C044  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3022                           
  3023                           ;FRAME.c: 541:         message->data[6] = (NeightAdress4>> 8);
  3024  0000F8  EE20 F00E          	lfsr	2,14
  3025  0000FC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3026  0000FE  26D9               	addwf	fsr2l,f,c
  3027  000100  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3028  000102  22DA               	addwfc	fsr2h,f,c
  3029  000104  5043               	movf	_NeightAdress4+1,w,c	;volatile
  3030  000106  6EDF               	movwf	indf2,c
  3031                           
  3032                           ;FRAME.c: 542:         message->data[7] = NeightAdress4 & 0b11111111;
  3033  000108  EE20 F00F          	lfsr	2,15
  3034  00010C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3035  00010E  26D9               	addwf	fsr2l,f,c
  3036  000110  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3037  000112  22DA               	addwfc	fsr2h,f,c
  3038  000114  C042  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3039                           
  3040                           ;FRAME.c: 543:         }
  3041  000118  0012               	return	
  3042  00011A                     l2914:
  3043                           
  3044                           ;FRAME.c: 545:         {;FRAME.c: 546:         message->data[0] = (NeightAdress5>> 8);
  3045  00011A  EE20 F008          	lfsr	2,8
  3046  00011E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3047  000120  26D9               	addwf	fsr2l,f,c
  3048  000122  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3049  000124  22DA               	addwfc	fsr2h,f,c
  3050  000126  5041               	movf	_NeightAdress5+1,w,c	;volatile
  3051  000128  6EDF               	movwf	indf2,c
  3052                           
  3053                           ;FRAME.c: 547:         message->data[1] = NeightAdress5 & 0b11111111;
  3054  00012A  EE20 F009          	lfsr	2,9
  3055  00012E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3056  000130  26D9               	addwf	fsr2l,f,c
  3057  000132  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3058  000134  22DA               	addwfc	fsr2h,f,c
  3059  000136  C040  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3060                           
  3061                           ;FRAME.c: 548:         message->data[2] = (NeightAdress6>> 8);
  3062  00013A  EE20 F00A          	lfsr	2,10
  3063  00013E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3064  000140  26D9               	addwf	fsr2l,f,c
  3065  000142  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3066  000144  22DA               	addwfc	fsr2h,f,c
  3067  000146  503F               	movf	_NeightAdress6+1,w,c	;volatile
  3068  000148  6EDF               	movwf	indf2,c
  3069                           
  3070                           ;FRAME.c: 549:         message->data[3] = NeightAdress6 & 0b11111111;
  3071  00014A  EE20 F00B          	lfsr	2,11
  3072  00014E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3073  000150  26D9               	addwf	fsr2l,f,c
  3074  000152  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3075  000154  22DA               	addwfc	fsr2h,f,c
  3076  000156  C03E  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3077                           
  3078                           ;FRAME.c: 550:         message->data[4] = (NeightAdress7>> 8);
  3079  00015A  EE20 F00C          	lfsr	2,12
  3080  00015E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3081  000160  26D9               	addwf	fsr2l,f,c
  3082  000162  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3083  000164  22DA               	addwfc	fsr2h,f,c
  3084  000166  503D               	movf	_NeightAdress7+1,w,c	;volatile
  3085  000168  6EDF               	movwf	indf2,c
  3086                           
  3087                           ;FRAME.c: 551:         message->data[5] = NeightAdress7 & 0b11111111;
  3088  00016A  EE20 F00D          	lfsr	2,13
  3089  00016E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3090  000170  26D9               	addwf	fsr2l,f,c
  3091  000172  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3092  000174  22DA               	addwfc	fsr2h,f,c
  3093  000176  C03C  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3094                           
  3095                           ;FRAME.c: 552:         message->data[6] = (NeightAdress8>> 8);
  3096  00017A  EE20 F00E          	lfsr	2,14
  3097  00017E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3098  000180  26D9               	addwf	fsr2l,f,c
  3099  000182  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3100  000184  22DA               	addwfc	fsr2h,f,c
  3101  000186  503B               	movf	_NeightAdress8+1,w,c	;volatile
  3102  000188  6EDF               	movwf	indf2,c
  3103                           
  3104                           ;FRAME.c: 553:         message->data[7] = NeightAdress8 & 0b11111111;
  3105  00018A  EE20 F00F          	lfsr	2,15
  3106  00018E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3107  000190  26D9               	addwf	fsr2l,f,c
  3108  000192  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3109  000194  22DA               	addwfc	fsr2h,f,c
  3110  000196  C03A  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3111  00019A  0012               	return	
  3112  00019C                     l2916:
  3113                           
  3114                           ;FRAME.c: 560:     {;FRAME.c: 563:         if(kier == 0)
  3115  00019C  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3116  00019E  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3117  0001A0  A4D8               	btfss	status,2,c
  3118  0001A2  D071               	goto	l2928
  3119                           
  3120                           ;FRAME.c: 564:         {;FRAME.c: 565:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3121  0001A4  EE20 F008          	lfsr	2,8
  3122  0001A8  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3123  0001AA  26D9               	addwf	fsr2l,f,c
  3124  0001AC  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3125  0001AE  22DA               	addwfc	fsr2h,f,c
  3126  0001B0  50DF               	movf	indf2,w,c
  3127  0001B2  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3128  0001B4  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3129  0001B6  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3130  0001B8  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3131  0001BA  EE20 F009          	lfsr	2,9
  3132  0001BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3133  0001C0  26D9               	addwf	fsr2l,f,c
  3134  0001C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3135  0001C4  22DA               	addwfc	fsr2h,f,c
  3136  0001C6  50DF               	movf	indf2,w,c
  3137  0001C8  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3138  0001CA  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3139  0001CC  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3140  0001CE  6E57               	movwf	_NeightAdress1,c	;volatile
  3141  0001D0  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3142  0001D2  6E58               	movwf	_NeightAdress1+1,c	;volatile
  3143                           
  3144                           ;FRAME.c: 566:          Dane->sasiedzi[0].adres = (WORD) NeightAdress1;
  3145  0001D4  C057  F00E         	movff	_NeightAdress1,14	;volatile
  3146  0001D8  C058  F00F         	movff	_NeightAdress1+1,15	;volatile
  3147                           
  3148                           ;FRAME.c: 567:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3149  0001DC  EE20 F00A          	lfsr	2,10
  3150  0001E0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3151  0001E2  26D9               	addwf	fsr2l,f,c
  3152  0001E4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3153  0001E6  22DA               	addwfc	fsr2h,f,c
  3154  0001E8  50DF               	movf	indf2,w,c
  3155  0001EA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3156  0001EC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3157  0001EE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3158  0001F0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3159  0001F2  EE20 F00B          	lfsr	2,11
  3160  0001F6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3161  0001F8  26D9               	addwf	fsr2l,f,c
  3162  0001FA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3163  0001FC  22DA               	addwfc	fsr2h,f,c
  3164  0001FE  50DF               	movf	indf2,w,c
  3165  000200  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3166  000202  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3167  000204  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3168  000206  6E55               	movwf	_NeightAdress2,c	;volatile
  3169  000208  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3170  00020A  6E56               	movwf	_NeightAdress2+1,c	;volatile
  3171                           
  3172                           ;FRAME.c: 568:          Dane->sasiedzi[1].adres = (WORD) NeightAdress2;
  3173  00020C  C055  F012         	movff	_NeightAdress2,18	;volatile
  3174  000210  C056  F013         	movff	_NeightAdress2+1,19	;volatile
  3175                           
  3176                           ;FRAME.c: 569:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3177  000214  EE20 F00C          	lfsr	2,12
  3178  000218  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3179  00021A  26D9               	addwf	fsr2l,f,c
  3180  00021C  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3181  00021E  22DA               	addwfc	fsr2h,f,c
  3182  000220  50DF               	movf	indf2,w,c
  3183  000222  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3184  000224  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3185  000226  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3186  000228  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3187  00022A  EE20 F00D          	lfsr	2,13
  3188  00022E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3189  000230  26D9               	addwf	fsr2l,f,c
  3190  000232  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3191  000234  22DA               	addwfc	fsr2h,f,c
  3192  000236  50DF               	movf	indf2,w,c
  3193  000238  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3194  00023A  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3195  00023C  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3196  00023E  6E44               	movwf	_NeightAdress3,c	;volatile
  3197  000240  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3198  000242  6E45               	movwf	_NeightAdress3+1,c	;volatile
  3199                           
  3200                           ;FRAME.c: 570:          Dane->sasiedzi[2].adres = (WORD) NeightAdress3;
  3201  000244  C044  F016         	movff	_NeightAdress3,22	;volatile
  3202  000248  C045  F017         	movff	_NeightAdress3+1,23	;volatile
  3203                           
  3204                           ;FRAME.c: 571:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3205  00024C  EE20 F00E          	lfsr	2,14
  3206  000250  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3207  000252  26D9               	addwf	fsr2l,f,c
  3208  000254  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3209  000256  22DA               	addwfc	fsr2h,f,c
  3210  000258  50DF               	movf	indf2,w,c
  3211  00025A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3212  00025C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3213  00025E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3214  000260  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3215  000262  EE20 F00F          	lfsr	2,15
  3216  000266  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3217  000268  26D9               	addwf	fsr2l,f,c
  3218  00026A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3219  00026C  22DA               	addwfc	fsr2h,f,c
  3220  00026E  50DF               	movf	indf2,w,c
  3221  000270  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3222  000272  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3223  000274  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3224  000276  6E42               	movwf	_NeightAdress4,c	;volatile
  3225  000278  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3226  00027A  6E43               	movwf	_NeightAdress4+1,c	;volatile
  3227                           
  3228                           ;FRAME.c: 572:          Dane->sasiedzi[3].adres = (WORD) NeightAdress4;
  3229  00027C  C042  F01A         	movff	_NeightAdress4,26	;volatile
  3230  000280  C043  F01B         	movff	_NeightAdress4+1,27	;volatile
  3231                           
  3232                           ;FRAME.c: 575:         }
  3233  000284  0012               	return	
  3234  000286                     l2928:
  3235                           
  3236                           ;FRAME.c: 577:         {;FRAME.c: 578:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3237  000286  EE20 F008          	lfsr	2,8
  3238  00028A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3239  00028C  26D9               	addwf	fsr2l,f,c
  3240  00028E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3241  000290  22DA               	addwfc	fsr2h,f,c
  3242  000292  50DF               	movf	indf2,w,c
  3243  000294  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3244  000296  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3245  000298  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3246  00029A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3247  00029C  EE20 F009          	lfsr	2,9
  3248  0002A0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3249  0002A2  26D9               	addwf	fsr2l,f,c
  3250  0002A4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3251  0002A6  22DA               	addwfc	fsr2h,f,c
  3252  0002A8  50DF               	movf	indf2,w,c
  3253  0002AA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3254  0002AC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3255  0002AE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3256  0002B0  6E40               	movwf	_NeightAdress5,c	;volatile
  3257  0002B2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3258  0002B4  6E41               	movwf	_NeightAdress5+1,c	;volatile
  3259                           
  3260                           ;FRAME.c: 579:          Dane->sasiedzi[4].adres = (WORD) NeightAdress5;
  3261  0002B6  C040  F01E         	movff	_NeightAdress5,30	;volatile
  3262  0002BA  C041  F01F         	movff	_NeightAdress5+1,31	;volatile
  3263                           
  3264                           ;FRAME.c: 580:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3265  0002BE  EE20 F00A          	lfsr	2,10
  3266  0002C2  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3267  0002C4  26D9               	addwf	fsr2l,f,c
  3268  0002C6  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3269  0002C8  22DA               	addwfc	fsr2h,f,c
  3270  0002CA  50DF               	movf	indf2,w,c
  3271  0002CC  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3272  0002CE  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3273  0002D0  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3274  0002D2  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3275  0002D4  EE20 F00B          	lfsr	2,11
  3276  0002D8  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3277  0002DA  26D9               	addwf	fsr2l,f,c
  3278  0002DC  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3279  0002DE  22DA               	addwfc	fsr2h,f,c
  3280  0002E0  50DF               	movf	indf2,w,c
  3281  0002E2  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3282  0002E4  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3283  0002E6  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3284  0002E8  6E3E               	movwf	_NeightAdress6,c	;volatile
  3285  0002EA  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3286  0002EC  6E3F               	movwf	_NeightAdress6+1,c	;volatile
  3287                           
  3288                           ;FRAME.c: 581:          Dane->sasiedzi[5].adres = (WORD) NeightAdress6;
  3289  0002EE  C03E  F022         	movff	_NeightAdress6,34	;volatile
  3290  0002F2  C03F  F023         	movff	_NeightAdress6+1,35	;volatile
  3291                           
  3292                           ;FRAME.c: 582:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3293  0002F6  EE20 F00C          	lfsr	2,12
  3294  0002FA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3295  0002FC  26D9               	addwf	fsr2l,f,c
  3296  0002FE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3297  000300  22DA               	addwfc	fsr2h,f,c
  3298  000302  50DF               	movf	indf2,w,c
  3299  000304  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3300  000306  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3301  000308  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3302  00030A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3303  00030C  EE20 F00D          	lfsr	2,13
  3304  000310  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3305  000312  26D9               	addwf	fsr2l,f,c
  3306  000314  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3307  000316  22DA               	addwfc	fsr2h,f,c
  3308  000318  50DF               	movf	indf2,w,c
  3309  00031A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3310  00031C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3311  00031E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3312  000320  6E3C               	movwf	_NeightAdress7,c	;volatile
  3313  000322  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3314  000324  6E3D               	movwf	_NeightAdress7+1,c	;volatile
  3315                           
  3316                           ;FRAME.c: 583:          Dane->sasiedzi[6].adres = (WORD) NeightAdress7;
  3317  000326  C03C  F026         	movff	_NeightAdress7,38	;volatile
  3318  00032A  C03D  F027         	movff	_NeightAdress7+1,39	;volatile
  3319                           
  3320                           ;FRAME.c: 584:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3321  00032E  EE20 F00E          	lfsr	2,14
  3322  000332  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3323  000334  26D9               	addwf	fsr2l,f,c
  3324  000336  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3325  000338  22DA               	addwfc	fsr2h,f,c
  3326  00033A  50DF               	movf	indf2,w,c
  3327  00033C  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3328  00033E  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3329  000340  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3330  000342  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3331  000344  EE20 F00F          	lfsr	2,15
  3332  000348  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3333  00034A  26D9               	addwf	fsr2l,f,c
  3334  00034C  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3335  00034E  22DA               	addwfc	fsr2h,f,c
  3336  000350  50DF               	movf	indf2,w,c
  3337  000352  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3338  000354  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3339  000356  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3340  000358  6E3A               	movwf	_NeightAdress8,c	;volatile
  3341  00035A  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3342  00035C  6E3B               	movwf	_NeightAdress8+1,c	;volatile
  3343                           
  3344                           ;FRAME.c: 585:          Dane->sasiedzi[7].adres = (WORD) NeightAdress8;
  3345  00035E  C03A  F02A         	movff	_NeightAdress8,42	;volatile
  3346  000362  C03B  F02B         	movff	_NeightAdress8+1,43	;volatile
  3347  000366  0012               	return		;funcret
  3348  000368                     __end_of_FRAME_AdressOfNeighbors:
  3349                           	opt callstack 0
  3350                           
  3351 ;; *************** function _FRAME_AccelerometerStatus *****************
  3352 ;; Defined at:
  3353 ;;		line 158 in file "FRAME.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  message         2    7[COMRAM] PTR struct .
  3356 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;Total ram usage:        3 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    4
  3375 ;; This function calls:
  3376 ;;		_MOCK_Klikniecie_Spadek
  3377 ;;		_MOCK_PrzyspieszenieX
  3378 ;;		_MOCK_PrzyspieszenieY
  3379 ;;		_MOCK_PrzyspieszenieZ
  3380 ;; This function is called by:
  3381 ;;		_FRAME_HandleCanFrame
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text24
  3386  001102                     __ptext24:
  3387                           	opt callstack 0
  3388  001102                     _FRAME_AccelerometerStatus:
  3389                           	opt callstack 24
  3390                           
  3391                           ;FRAME.c: 158: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 159: {;FRAME
      +                          .c: 160:     if(message->message_type == 0x02)
  3392                           
  3393                           ;incstack = 0
  3394  001102  EE20 F001          	lfsr	2,1
  3395  001106  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3396  001108  26D9               	addwf	fsr2l,f,c
  3397  00110A  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3398  00110C  22DA               	addwfc	fsr2h,f,c
  3399  00110E  0E02               	movlw	2
  3400  001110  18DE               	xorwf	postinc2,w,c
  3401  001112  A4D8               	btfss	status,2,c
  3402  001114  0012               	return	
  3403                           
  3404                           ;FRAME.c: 161:     {;FRAME.c: 162:         message->data_length = 4;
  3405  001116  EE20 F010          	lfsr	2,16
  3406  00111A  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3407  00111C  26D9               	addwf	fsr2l,f,c
  3408  00111E  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3409  001120  22DA               	addwfc	fsr2h,f,c
  3410  001122  0E04               	movlw	4
  3411  001124  6EDF               	movwf	indf2,c
  3412                           
  3413                           ;FRAME.c: 166:         message->data[0] = MOCK_PrzyspieszenieX();
  3414  001126  EE20 F008          	lfsr	2,8
  3415  00112A  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3416  00112C  26D9               	addwf	fsr2l,f,c
  3417  00112E  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3418  001130  22DA               	addwfc	fsr2h,f,c
  3419  001132  EC80  F00B         	call	_MOCK_PrzyspieszenieX	;wreg free
  3420  001136  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3421  001138  6EDF               	movwf	indf2,c
  3422                           
  3423                           ;FRAME.c: 167:         message->data[1] = MOCK_PrzyspieszenieY();
  3424  00113A  EE20 F009          	lfsr	2,9
  3425  00113E  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3426  001140  26D9               	addwf	fsr2l,f,c
  3427  001142  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3428  001144  22DA               	addwfc	fsr2h,f,c
  3429  001146  EC7B  F00B         	call	_MOCK_PrzyspieszenieY	;wreg free
  3430  00114A  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3431  00114C  6EDF               	movwf	indf2,c
  3432                           
  3433                           ;FRAME.c: 168:         message->data[2] = MOCK_PrzyspieszenieZ();
  3434  00114E  EE20 F00A          	lfsr	2,10
  3435  001152  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3436  001154  26D9               	addwf	fsr2l,f,c
  3437  001156  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3438  001158  22DA               	addwfc	fsr2h,f,c
  3439  00115A  EC76  F00B         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3440  00115E  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3441  001160  6EDF               	movwf	indf2,c
  3442                           
  3443                           ;FRAME.c: 169:         message->data[3] = MOCK_Klikniecie_Spadek();
  3444  001162  EE20 F00B          	lfsr	2,11
  3445  001166  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3446  001168  26D9               	addwf	fsr2l,f,c
  3447  00116A  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3448  00116C  22DA               	addwfc	fsr2h,f,c
  3449  00116E  EC85  F00B         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3450  001172  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3451  001174  6EDF               	movwf	indf2,c
  3452                           
  3453                           ;FRAME.c: 170:     }
  3454  001176  0012               	return		;funcret
  3455  001178                     __end_of_FRAME_AccelerometerStatus:
  3456                           	opt callstack 0
  3457                           
  3458 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3459 ;; Defined at:
  3460 ;;		line 72 in file "MOC_Funct.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  2    5[COMRAM] unsigned int 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;Total ram usage:        2 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    3
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_FRAME_AccelerometerStatus
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text25
  3489  0016EC                     __ptext25:
  3490                           	opt callstack 0
  3491  0016EC                     _MOCK_PrzyspieszenieZ:
  3492                           	opt callstack 24
  3493                           
  3494                           ;MOC_Funct.c: 74:     return 0xFE;
  3495                           
  3496                           ;incstack = 0
  3497  0016EC  0E00               	movlw	0
  3498  0016EE  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3499  0016F0  0EFE               	movlw	254
  3500  0016F2  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3501  0016F4  0012               	return		;funcret
  3502  0016F6                     __end_of_MOCK_PrzyspieszenieZ:
  3503                           	opt callstack 0
  3504                           
  3505 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3506 ;; Defined at:
  3507 ;;		line 68 in file "MOC_Funct.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2    5[COMRAM] unsigned int 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;Total ram usage:        2 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    3
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_FRAME_AccelerometerStatus
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text26
  3536  0016F6                     __ptext26:
  3537                           	opt callstack 0
  3538  0016F6                     _MOCK_PrzyspieszenieY:
  3539                           	opt callstack 24
  3540                           
  3541                           ;MOC_Funct.c: 70:     return 0xFE;
  3542                           
  3543                           ;incstack = 0
  3544  0016F6  0E00               	movlw	0
  3545  0016F8  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3546  0016FA  0EFE               	movlw	254
  3547  0016FC  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3548  0016FE  0012               	return		;funcret
  3549  001700                     __end_of_MOCK_PrzyspieszenieY:
  3550                           	opt callstack 0
  3551                           
  3552 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3553 ;; Defined at:
  3554 ;;		line 63 in file "MOC_Funct.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  2    5[COMRAM] unsigned int 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3572 ;;Total ram usage:        2 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    3
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_FRAME_AccelerometerStatus
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text27
  3583  001700                     __ptext27:
  3584                           	opt callstack 0
  3585  001700                     _MOCK_PrzyspieszenieX:
  3586                           	opt callstack 24
  3587                           
  3588                           ;MOC_Funct.c: 65:     return 0xFE;
  3589                           
  3590                           ;incstack = 0
  3591  001700  0E00               	movlw	0
  3592  001702  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3593  001704  0EFE               	movlw	254
  3594  001706  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  3595  001708  0012               	return		;funcret
  3596  00170A                     __end_of_MOCK_PrzyspieszenieX:
  3597                           	opt callstack 0
  3598                           
  3599 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3600 ;; Defined at:
  3601 ;;		line 76 in file "MOC_Funct.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  2    5[COMRAM] unsigned int 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3619 ;;Total ram usage:        2 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    3
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_FRAME_AccelerometerStatus
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text28
  3630  00170A                     __ptext28:
  3631                           	opt callstack 0
  3632  00170A                     _MOCK_Klikniecie_Spadek:
  3633                           	opt callstack 24
  3634                           
  3635                           ;MOC_Funct.c: 78:     return 0b00000000;
  3636                           
  3637                           ;incstack = 0
  3638  00170A  0E00               	movlw	0
  3639  00170C  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3640  00170E  0E00               	movlw	0
  3641  001710  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  3642  001712  0012               	return		;funcret
  3643  001714                     __end_of_MOCK_Klikniecie_Spadek:
  3644                           	opt callstack 0
  3645                           
  3646 ;; *************** function _CAN_SendFrame *****************
  3647 ;; Defined at:
  3648 ;;		line 198 in file "CAN.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  message         2   10[COMRAM] PTR struct .
  3651 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;Total ram usage:        5 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    4
  3670 ;; This function calls:
  3671 ;;		_CAN_MoveBuffIntoFrame
  3672 ;; This function is called by:
  3673 ;;		_FRAME_HandleCanFrame
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text29
  3678  0007EA                     __ptext29:
  3679                           	opt callstack 0
  3680  0007EA                     _CAN_SendFrame:
  3681                           	opt callstack 24
  3682                           
  3683                           ;CAN.c: 203:     {;CAN.c: 204:         ECANCON = 0x83;
  3684                           
  3685                           ;incstack = 0
  3686                           ;CAN.c: 198: void CAN_SendFrame(mID * message);CAN.c: 199: {;CAN.c: 202:     for(;;)
  3687  0007EA  0E83               	movlw	131
  3688  0007EC  6E77               	movwf	3959,c	;volatile
  3689                           
  3690                           ;CAN.c: 205:         if(!RXB0CONbits.FILHIT3)
  3691  0007EE  A660               	btfss	3936,3,c	;volatile
  3692  0007F0  D00A               	goto	l209
  3693                           
  3694                           ;CAN.c: 210:         ECANCON = 0x84;
  3695  0007F2  0E84               	movlw	132
  3696  0007F4  6E77               	movwf	3959,c	;volatile
  3697                           
  3698                           ;CAN.c: 211:         if(!RXB0CONbits.FILHIT3)
  3699  0007F6  A660               	btfss	3936,3,c	;volatile
  3700  0007F8  D006               	goto	l209
  3701                           
  3702                           ;CAN.c: 216:         ECANCON = 0x85;
  3703  0007FA  0E85               	movlw	133
  3704  0007FC  6E77               	movwf	3959,c	;volatile
  3705                           
  3706                           ;CAN.c: 217:         if(!RXB0CONbits.FILHIT3)
  3707  0007FE  A660               	btfss	3936,3,c	;volatile
  3708  000800  D002               	goto	l209
  3709  000802  D7F3               	goto	_CAN_SendFrame
  3710  000804                     l210:
  3711  000804  00FF               	reset		;# 
  3712  000806                     l209:
  3713                           
  3714                           ;CAN.c: 224:     while(COMSTATbits.TXWARN)
  3715  000806  B474               	btfsc	3956,2,c	;volatile
  3716  000808  D7FD               	goto	l210
  3717                           
  3718                           ;CAN.c: 228:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3719  00080A  0E00               	movlw	0
  3720  00080C  6E35               	movwf	_DetectorLedRadar+2,c
  3721                           
  3722                           ;CAN.c: 229:     RXB0EIDL = message->id.v[0];
  3723  00080E  EE20 F004          	lfsr	2,4
  3724  000812  500B               	movf	CAN_SendFrame@message,w,c
  3725  000814  26D9               	addwf	fsr2l,f,c
  3726  000816  500C               	movf	CAN_SendFrame@message+1,w,c
  3727  000818  22DA               	addwfc	fsr2h,f,c
  3728  00081A  50DF               	movf	indf2,w,c
  3729  00081C  6E64               	movwf	3940,c	;volatile
  3730                           
  3731                           ;CAN.c: 230:     RXB0EIDH = message->id.v[1];
  3732  00081E  EE20 F005          	lfsr	2,5
  3733  000822  500B               	movf	CAN_SendFrame@message,w,c
  3734  000824  26D9               	addwf	fsr2l,f,c
  3735  000826  500C               	movf	CAN_SendFrame@message+1,w,c
  3736  000828  22DA               	addwfc	fsr2h,f,c
  3737  00082A  50DF               	movf	indf2,w,c
  3738  00082C  6E63               	movwf	3939,c	;volatile
  3739                           
  3740                           ;CAN.c: 231:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3741  00082E  EE20 F006          	lfsr	2,6
  3742  000832  500B               	movf	CAN_SendFrame@message,w,c
  3743  000834  26D9               	addwf	fsr2l,f,c
  3744  000836  500C               	movf	CAN_SendFrame@message+1,w,c
  3745  000838  22DA               	addwfc	fsr2h,f,c
  3746  00083A  50DF               	movf	indf2,w,c
  3747  00083C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3748  00083E  0E03               	movlw	3
  3749  000840  160D               	andwf	??_CAN_SendFrame,f,c
  3750  000842  EE20 F006          	lfsr	2,6
  3751  000846  500B               	movf	CAN_SendFrame@message,w,c
  3752  000848  26D9               	addwf	fsr2l,f,c
  3753  00084A  500C               	movf	CAN_SendFrame@message+1,w,c
  3754  00084C  22DA               	addwfc	fsr2h,f,c
  3755  00084E  50DF               	movf	indf2,w,c
  3756  000850  0BFC               	andlw	252
  3757  000852  0D08               	mullw	8
  3758  000854  50F3               	movf	prodl,w,c
  3759  000856  100D               	iorwf	??_CAN_SendFrame,w,c
  3760  000858  6E62               	movwf	3938,c	;volatile
  3761                           
  3762                           ;CAN.c: 232:     RXB0SIDLbits.EXID = 1;
  3763  00085A  8662               	bsf	3938,3,c	;volatile
  3764                           
  3765                           ;CAN.c: 233:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3766  00085C  EE20 F006          	lfsr	2,6
  3767  000860  500B               	movf	CAN_SendFrame@message,w,c
  3768  000862  26D9               	addwf	fsr2l,f,c
  3769  000864  500C               	movf	CAN_SendFrame@message+1,w,c
  3770  000866  22DA               	addwfc	fsr2h,f,c
  3771  000868  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  3772  00086C  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  3773  000870  0E05               	movlw	5
  3774  000872  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3775  000874                     u1295:
  3776  000874  90D8               	bcf	status,0,c
  3777  000876  320E               	rrcf	??_CAN_SendFrame+1,f,c
  3778  000878  320D               	rrcf	??_CAN_SendFrame,f,c
  3779  00087A  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3780  00087C  D7FB               	goto	u1295
  3781  00087E  500D               	movf	??_CAN_SendFrame,w,c
  3782  000880  6E61               	movwf	3937,c	;volatile
  3783                           
  3784                           ;CAN.c: 235:     RXB0DLC = 0;
  3785  000882  0E00               	movlw	0
  3786  000884  6E65               	movwf	3941,c	;volatile
  3787                           
  3788                           ;CAN.c: 237:     if(message->message_type==0x02)
  3789  000886  EE20 F001          	lfsr	2,1
  3790  00088A  500B               	movf	CAN_SendFrame@message,w,c
  3791  00088C  26D9               	addwf	fsr2l,f,c
  3792  00088E  500C               	movf	CAN_SendFrame@message+1,w,c
  3793  000890  22DA               	addwfc	fsr2h,f,c
  3794  000892  0E02               	movlw	2
  3795  000894  18DE               	xorwf	postinc2,w,c
  3796  000896  A4D8               	btfss	status,2,c
  3797  000898  D002               	goto	l2748
  3798                           
  3799                           ;CAN.c: 238:     {;CAN.c: 239:         RXB0DLCbits.RXRTR = 1;
  3800  00089A  8C65               	bsf	3941,6,c	;volatile
  3801                           
  3802                           ;CAN.c: 240:     }
  3803  00089C  D05A               	goto	l2752
  3804  00089E                     l2748:
  3805                           
  3806                           ;CAN.c: 242:     {;CAN.c: 243:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  3807  00089E  EE20 F010          	lfsr	2,16
  3808  0008A2  500B               	movf	CAN_SendFrame@message,w,c
  3809  0008A4  26D9               	addwf	fsr2l,f,c
  3810  0008A6  500C               	movf	CAN_SendFrame@message+1,w,c
  3811  0008A8  22DA               	addwfc	fsr2h,f,c
  3812  0008AA  50DF               	movf	indf2,w,c
  3813  0008AC  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3814  0008AE  0E0F               	movlw	15
  3815  0008B0  160D               	andwf	??_CAN_SendFrame,f,c
  3816  0008B2  5065               	movf	3941,w,c	;volatile
  3817  0008B4  180D               	xorwf	??_CAN_SendFrame,w,c
  3818  0008B6  0BFE               	andlw	-2
  3819  0008B8  180D               	xorwf	??_CAN_SendFrame,w,c
  3820  0008BA  6E65               	movwf	3941,c	;volatile
  3821                           
  3822                           ;CAN.c: 244:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  3823  0008BC  EE20 F010          	lfsr	2,16
  3824  0008C0  500B               	movf	CAN_SendFrame@message,w,c
  3825  0008C2  26D9               	addwf	fsr2l,f,c
  3826  0008C4  500C               	movf	CAN_SendFrame@message+1,w,c
  3827  0008C6  22DA               	addwfc	fsr2h,f,c
  3828  0008C8  50DF               	movf	indf2,w,c
  3829  0008CA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3830  0008CC  90D8               	bcf	status,0,c
  3831  0008CE  320D               	rrcf	??_CAN_SendFrame,f,c
  3832  0008D0  0E07               	movlw	7
  3833  0008D2  160D               	andwf	??_CAN_SendFrame,f,c
  3834  0008D4  460D               	rlncf	??_CAN_SendFrame,f,c
  3835  0008D6  5065               	movf	3941,w,c	;volatile
  3836  0008D8  180D               	xorwf	??_CAN_SendFrame,w,c
  3837  0008DA  0BFD               	andlw	-3
  3838  0008DC  180D               	xorwf	??_CAN_SendFrame,w,c
  3839  0008DE  6E65               	movwf	3941,c	;volatile
  3840                           
  3841                           ;CAN.c: 245:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  3842  0008E0  EE20 F010          	lfsr	2,16
  3843  0008E4  500B               	movf	CAN_SendFrame@message,w,c
  3844  0008E6  26D9               	addwf	fsr2l,f,c
  3845  0008E8  500C               	movf	CAN_SendFrame@message+1,w,c
  3846  0008EA  22DA               	addwfc	fsr2h,f,c
  3847  0008EC  50DF               	movf	indf2,w,c
  3848  0008EE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3849  0008F0  90D8               	bcf	status,0,c
  3850  0008F2  320D               	rrcf	??_CAN_SendFrame,f,c
  3851  0008F4  90D8               	bcf	status,0,c
  3852  0008F6  320D               	rrcf	??_CAN_SendFrame,f,c
  3853  0008F8  0E03               	movlw	3
  3854  0008FA  160D               	andwf	??_CAN_SendFrame,f,c
  3855  0008FC  460D               	rlncf	??_CAN_SendFrame,f,c
  3856  0008FE  460D               	rlncf	??_CAN_SendFrame,f,c
  3857  000900  5065               	movf	3941,w,c	;volatile
  3858  000902  180D               	xorwf	??_CAN_SendFrame,w,c
  3859  000904  0BFB               	andlw	-5
  3860  000906  180D               	xorwf	??_CAN_SendFrame,w,c
  3861  000908  6E65               	movwf	3941,c	;volatile
  3862                           
  3863                           ;CAN.c: 246:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  3864  00090A  EE20 F010          	lfsr	2,16
  3865  00090E  500B               	movf	CAN_SendFrame@message,w,c
  3866  000910  26D9               	addwf	fsr2l,f,c
  3867  000912  500C               	movf	CAN_SendFrame@message+1,w,c
  3868  000914  22DA               	addwfc	fsr2h,f,c
  3869  000916  50DF               	movf	indf2,w,c
  3870  000918  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3871  00091A  90D8               	bcf	status,0,c
  3872  00091C  320D               	rrcf	??_CAN_SendFrame,f,c
  3873  00091E  90D8               	bcf	status,0,c
  3874  000920  320D               	rrcf	??_CAN_SendFrame,f,c
  3875  000922  90D8               	bcf	status,0,c
  3876  000924  320D               	rrcf	??_CAN_SendFrame,f,c
  3877  000926  0E01               	movlw	1
  3878  000928  160D               	andwf	??_CAN_SendFrame,f,c
  3879  00092A  460D               	rlncf	??_CAN_SendFrame,f,c
  3880  00092C  460D               	rlncf	??_CAN_SendFrame,f,c
  3881  00092E  460D               	rlncf	??_CAN_SendFrame,f,c
  3882  000930  5065               	movf	3941,w,c	;volatile
  3883  000932  180D               	xorwf	??_CAN_SendFrame,w,c
  3884  000934  0BF7               	andlw	-9
  3885  000936  180D               	xorwf	??_CAN_SendFrame,w,c
  3886  000938  6E65               	movwf	3941,c	;volatile
  3887                           
  3888                           ;CAN.c: 248:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  3889  00093A  0E66               	movlw	102
  3890  00093C  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3891  00093E  0E0F               	movlw	15
  3892  000940  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3893  000942  0E08               	movlw	8
  3894  000944  240B               	addwf	CAN_SendFrame@message,w,c
  3895  000946  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3896  000948  0E00               	movlw	0
  3897  00094A  200C               	addwfc	CAN_SendFrame@message+1,w,c
  3898  00094C  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3899  00094E  ECE5  F00A         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3900  000952                     l2752:
  3901                           
  3902                           ;CAN.c: 251:     RXB0CONbits.FILHIT3 = 1;
  3903  000952  8660               	bsf	3936,3,c	;volatile
  3904                           
  3905                           ;CAN.c: 253:     DetectorLedRadar.Flags.ramkaTx = 1;
  3906  000954  8833               	bsf	_DetectorLedRadar,4,c
  3907  000956  0012               	return		;funcret
  3908  000958                     __end_of_CAN_SendFrame:
  3909                           	opt callstack 0
  3910                           
  3911 ;; *************** function _CAN_GenID *****************
  3912 ;; Defined at:
  3913 ;;		line 397 in file "CAN.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  message         2    5[COMRAM] PTR struct .
  3916 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3917 ;;  frameID         1    7[COMRAM] unsigned char 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3929 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;Total ram usage:        5 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    3
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_FRAME_HandleCanFrame
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text30
  3944  00108A                     __ptext30:
  3945                           	opt callstack 0
  3946  00108A                     _CAN_GenID:
  3947                           	opt callstack 25
  3948                           
  3949                           ;CAN.c: 397: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 398: {;CAN.c: 400:     m
      +                          essage->frame_type = 0x03;
  3950                           
  3951                           ;incstack = 0
  3952  00108A  EE20 F002          	lfsr	2,2
  3953  00108E  5006               	movf	CAN_GenID@message,w,c
  3954  001090  26D9               	addwf	fsr2l,f,c
  3955  001092  5007               	movf	CAN_GenID@message+1,w,c
  3956  001094  22DA               	addwfc	fsr2h,f,c
  3957  001096  0E03               	movlw	3
  3958  001098  6EDF               	movwf	indf2,c
  3959                           
  3960                           ;CAN.c: 401:     message->message_type = 0x01;
  3961  00109A  EE20 F001          	lfsr	2,1
  3962  00109E  5006               	movf	CAN_GenID@message,w,c
  3963  0010A0  26D9               	addwf	fsr2l,f,c
  3964  0010A2  5007               	movf	CAN_GenID@message+1,w,c
  3965  0010A4  22DA               	addwfc	fsr2h,f,c
  3966  0010A6  0E01               	movlw	1
  3967  0010A8  6EDF               	movwf	indf2,c
  3968                           
  3969                           ;CAN.c: 402:     message->id.w[1] = (WORD)frameID * (WORD)4;
  3970  0010AA  5008               	movf	CAN_GenID@frameID,w,c
  3971  0010AC  6E09               	movwf	??_CAN_GenID& (0+255),c
  3972  0010AE  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  3973  0010B0  90D8               	bcf	status,0,c
  3974  0010B2  3609               	rlcf	??_CAN_GenID,f,c
  3975  0010B4  360A               	rlcf	??_CAN_GenID+1,f,c
  3976  0010B6  90D8               	bcf	status,0,c
  3977  0010B8  3609               	rlcf	??_CAN_GenID,f,c
  3978  0010BA  360A               	rlcf	??_CAN_GenID+1,f,c
  3979  0010BC  EE20 F006          	lfsr	2,6
  3980  0010C0  5006               	movf	CAN_GenID@message,w,c
  3981  0010C2  26D9               	addwf	fsr2l,f,c
  3982  0010C4  5007               	movf	CAN_GenID@message+1,w,c
  3983  0010C6  22DA               	addwfc	fsr2h,f,c
  3984  0010C8  C009  FFDE         	movff	??_CAN_GenID,postinc2
  3985  0010CC  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  3986                           
  3987                           ;CAN.c: 403:     message->id.w[0] = DaneCan.adresCAN;
  3988  0010D0  EE20 F004          	lfsr	2,4
  3989  0010D4  5006               	movf	CAN_GenID@message,w,c
  3990  0010D6  26D9               	addwf	fsr2l,f,c
  3991  0010D8  5007               	movf	CAN_GenID@message+1,w,c
  3992  0010DA  22DA               	addwfc	fsr2h,f,c
  3993  0010DC  C031  FFDE         	movff	_DaneCan+2,postinc2
  3994  0010E0  C032  FFDD         	movff	_DaneCan+3,postdec2
  3995                           
  3996                           ;CAN.c: 406:     message ->id.bits.b16 = 0;
  3997  0010E4  EE20 F006          	lfsr	2,6
  3998  0010E8  5006               	movf	CAN_GenID@message,w,c
  3999  0010EA  26D9               	addwf	fsr2l,f,c
  4000  0010EC  5007               	movf	CAN_GenID@message+1,w,c
  4001  0010EE  22DA               	addwfc	fsr2h,f,c
  4002  0010F0  90DF               	bcf	indf2,0,c
  4003                           
  4004                           ;CAN.c: 407:     message ->id.bits.b17 = 0;
  4005  0010F2  EE20 F006          	lfsr	2,6
  4006  0010F6  5006               	movf	CAN_GenID@message,w,c
  4007  0010F8  26D9               	addwf	fsr2l,f,c
  4008  0010FA  5007               	movf	CAN_GenID@message+1,w,c
  4009  0010FC  22DA               	addwfc	fsr2h,f,c
  4010  0010FE  92DF               	bcf	indf2,1,c
  4011  001100  0012               	return		;funcret
  4012  001102                     __end_of_CAN_GenID:
  4013                           	opt callstack 0
  4014                           
  4015 ;; *************** function _CAN_TakeFrame *****************
  4016 ;; Defined at:
  4017 ;;		line 262 in file "CAN.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  message         2   13[COMRAM] PTR struct .
  4020 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  k               1   18[COMRAM] unsigned char 
  4023 ;;  tempCON         1   17[COMRAM] unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      enum E10433
  4026 ;; Registers used:
  4027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4036 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4037 ;;Total ram usage:        6 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    4
  4040 ;; This function calls:
  4041 ;;		_CAN_MoveBuffIntoFrame
  4042 ;;		___awdiv
  4043 ;; This function is called by:
  4044 ;;		_TRM_DataTransmition
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text31
  4049  000368                     __ptext31:
  4050                           	opt callstack 0
  4051  000368                     _CAN_TakeFrame:
  4052                           	opt callstack 25
  4053                           
  4054                           ;CAN.c: 262: BOOL CAN_TakeFrame(mID * message);CAN.c: 263: {;CAN.c: 264:     BYTE k, tem
      +                          pCON;;CAN.c: 266:     k = CANCON&0x0F;
  4055                           
  4056                           ;incstack = 0
  4057  000368  506F               	movf	3951,w,c	;volatile
  4058  00036A  0B0F               	andlw	15
  4059  00036C  6E13               	movwf	CAN_TakeFrame@k,c
  4060                           
  4061                           ;CAN.c: 268:     ECANCON = 0x90 | k;
  4062  00036E  5013               	movf	CAN_TakeFrame@k,w,c
  4063  000370  0990               	iorlw	144
  4064  000372  6E77               	movwf	3959,c	;volatile
  4065                           
  4066                           ;CAN.c: 271:     switch(k)
  4067  000374  D018               	goto	l3002
  4068  000376                     l218:
  4069                           
  4070                           ;CAN.c: 274:             tempCON = RXB0CON;
  4071  000376  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4072                           
  4073                           ;CAN.c: 275:             break;
  4074  00037A  D035               	goto	l219
  4075  00037C                     l220:
  4076                           
  4077                           ;CAN.c: 277:             tempCON = RXB1CON;
  4078  00037C  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4079                           
  4080                           ;CAN.c: 278:             break;
  4081  000380  D032               	goto	l219
  4082  000382                     l221:
  4083                           
  4084                           ;CAN.c: 280:             tempCON = B0CON;
  4085  000382  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4086                           
  4087                           ;CAN.c: 281:             break;
  4088  000386  D02F               	goto	l219
  4089  000388                     l222:
  4090                           
  4091                           ;CAN.c: 283:             tempCON = B1CON;
  4092  000388  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4093                           
  4094                           ;CAN.c: 284:             break;
  4095  00038C  D02C               	goto	l219
  4096  00038E                     l223:
  4097                           
  4098                           ;CAN.c: 286:             tempCON = B2CON;
  4099  00038E  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4100                           
  4101                           ;CAN.c: 287:             break;
  4102  000392  D029               	goto	l219
  4103  000394                     l224:
  4104                           
  4105                           ;CAN.c: 289:             tempCON = B3CON;
  4106  000394  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4107                           
  4108                           ;CAN.c: 290:             break;
  4109  000398  D026               	goto	l219
  4110  00039A                     l225:
  4111                           
  4112                           ;CAN.c: 292:             tempCON = B4CON;
  4113  00039A  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4114                           
  4115                           ;CAN.c: 293:             break;
  4116  00039E  D023               	goto	l219
  4117  0003A0                     l226:
  4118                           
  4119                           ;CAN.c: 295:             tempCON = B5CON;
  4120  0003A0  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4121                           
  4122                           ;CAN.c: 296:             break;
  4123  0003A4  D020               	goto	l219
  4124  0003A6                     l3002:
  4125  0003A6  5013               	movf	CAN_TakeFrame@k,w,c
  4126  0003A8  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4127  0003AA  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4128                           
  4129                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4130                           ; Switch size 1, requested type "simple"
  4131                           ; Number of cases is 1, Range of values is 0 to 0
  4132                           ; switch strategies available:
  4133                           ; Name         Instructions Cycles
  4134                           ; simple_byte            4     3 (average)
  4135                           ;	Chosen strategy is simple_byte
  4136  0003AC  5011               	movf	??_CAN_TakeFrame+1,w,c
  4137  0003AE  0A00               	xorlw	0	; case 0
  4138  0003B0  A4D8               	btfss	status,2,c
  4139  0003B2  D019               	goto	l219
  4140                           
  4141                           ; Switch size 1, requested type "simple"
  4142                           ; Number of cases is 8, Range of values is 0 to 7
  4143                           ; switch strategies available:
  4144                           ; Name         Instructions Cycles
  4145                           ; simple_byte           25    13 (average)
  4146                           ;	Chosen strategy is simple_byte
  4147  0003B4  5010               	movf	??_CAN_TakeFrame,w,c
  4148  0003B6  0A00               	xorlw	0	; case 0
  4149  0003B8  B4D8               	btfsc	status,2,c
  4150  0003BA  D7DD               	goto	l218
  4151  0003BC  0A01               	xorlw	1	; case 1
  4152  0003BE  B4D8               	btfsc	status,2,c
  4153  0003C0  D7DD               	goto	l220
  4154  0003C2  0A03               	xorlw	3	; case 2
  4155  0003C4  B4D8               	btfsc	status,2,c
  4156  0003C6  D7DD               	goto	l221
  4157  0003C8  0A01               	xorlw	1	; case 3
  4158  0003CA  B4D8               	btfsc	status,2,c
  4159  0003CC  D7DD               	goto	l222
  4160  0003CE  0A07               	xorlw	7	; case 4
  4161  0003D0  B4D8               	btfsc	status,2,c
  4162  0003D2  D7DD               	goto	l223
  4163  0003D4  0A01               	xorlw	1	; case 5
  4164  0003D6  B4D8               	btfsc	status,2,c
  4165  0003D8  D7DD               	goto	l224
  4166  0003DA  0A03               	xorlw	3	; case 6
  4167  0003DC  B4D8               	btfsc	status,2,c
  4168  0003DE  D7DD               	goto	l225
  4169  0003E0  0A01               	xorlw	1	; case 7
  4170  0003E2  B4D8               	btfsc	status,2,c
  4171  0003E4  D7DD               	goto	l226
  4172  0003E6                     l219:
  4173                           
  4174                           ;CAN.c: 300:     if((tempCON & 0x80) > 0)
  4175  0003E6  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4176  0003E8  D0A5               	goto	l3038
  4177                           
  4178                           ;CAN.c: 301:     {;CAN.c: 302:         message->buffer = RXB0CON & 0x1F;
  4179  0003EA  EE20 F003          	lfsr	2,3
  4180  0003EE  500E               	movf	CAN_TakeFrame@message,w,c
  4181  0003F0  26D9               	addwf	fsr2l,f,c
  4182  0003F2  500F               	movf	CAN_TakeFrame@message+1,w,c
  4183  0003F4  22DA               	addwfc	fsr2h,f,c
  4184  0003F6  5060               	movf	3936,w,c	;volatile
  4185  0003F8  0B1F               	andlw	31
  4186  0003FA  6EDF               	movwf	indf2,c
  4187                           
  4188                           ;CAN.c: 303:         message->id.v[0] = RXB0EIDL;
  4189  0003FC  EE20 F004          	lfsr	2,4
  4190  000400  500E               	movf	CAN_TakeFrame@message,w,c
  4191  000402  26D9               	addwf	fsr2l,f,c
  4192  000404  500F               	movf	CAN_TakeFrame@message+1,w,c
  4193  000406  22DA               	addwfc	fsr2h,f,c
  4194  000408  CF64 FFDF          	movff	3940,indf2	;volatile
  4195                           
  4196                           ;CAN.c: 304:         message->id.v[1] = RXB0EIDH;
  4197  00040C  EE20 F005          	lfsr	2,5
  4198  000410  500E               	movf	CAN_TakeFrame@message,w,c
  4199  000412  26D9               	addwf	fsr2l,f,c
  4200  000414  500F               	movf	CAN_TakeFrame@message+1,w,c
  4201  000416  22DA               	addwfc	fsr2h,f,c
  4202  000418  CF63 FFDF          	movff	3939,indf2	;volatile
  4203                           
  4204                           ;CAN.c: 305:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4205  00041C  EE20 F006          	lfsr	2,6
  4206  000420  500E               	movf	CAN_TakeFrame@message,w,c
  4207  000422  26D9               	addwf	fsr2l,f,c
  4208  000424  500F               	movf	CAN_TakeFrame@message+1,w,c
  4209  000426  22DA               	addwfc	fsr2h,f,c
  4210  000428  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4211  00042C  0E03               	movlw	3
  4212  00042E  1610               	andwf	??_CAN_TakeFrame,f,c
  4213  000430  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4214  000434  6A07               	clrf	___awdiv@dividend+1,c
  4215  000436  0E00               	movlw	0
  4216  000438  6E09               	movwf	___awdiv@divisor+1,c
  4217  00043A  0E08               	movlw	8
  4218  00043C  6E08               	movwf	___awdiv@divisor,c
  4219  00043E  EC85  F007         	call	___awdiv	;wreg free
  4220  000442  5006               	movf	?___awdiv,w,c
  4221  000444  1010               	iorwf	??_CAN_TakeFrame,w,c
  4222  000446  6EDF               	movwf	indf2,c
  4223                           
  4224                           ;CAN.c: 306:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4225  000448  5061               	movf	3937,w,c	;volatile
  4226  00044A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4227  00044C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4228  00044E  0E05               	movlw	5
  4229  000450                     u1645:
  4230  000450  90D8               	bcf	status,0,c
  4231  000452  3610               	rlcf	??_CAN_TakeFrame,f,c
  4232  000454  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4233  000456  2EE8               	decfsz	wreg,f,c
  4234  000458  D7FB               	goto	u1645
  4235  00045A  EE20 F006          	lfsr	2,6
  4236  00045E  500E               	movf	CAN_TakeFrame@message,w,c
  4237  000460  26D9               	addwf	fsr2l,f,c
  4238  000462  500F               	movf	CAN_TakeFrame@message+1,w,c
  4239  000464  22DA               	addwfc	fsr2h,f,c
  4240  000466  5010               	movf	??_CAN_TakeFrame,w,c
  4241  000468  12DE               	iorwf	postinc2,f,c
  4242  00046A  5011               	movf	??_CAN_TakeFrame+1,w,c
  4243  00046C  12DD               	iorwf	postdec2,f,c
  4244                           
  4245                           ;CAN.c: 307:         message->frame_type=0x03;
  4246  00046E  EE20 F002          	lfsr	2,2
  4247  000472  500E               	movf	CAN_TakeFrame@message,w,c
  4248  000474  26D9               	addwf	fsr2l,f,c
  4249  000476  500F               	movf	CAN_TakeFrame@message+1,w,c
  4250  000478  22DA               	addwfc	fsr2h,f,c
  4251  00047A  0E03               	movlw	3
  4252  00047C  6EDF               	movwf	indf2,c
  4253                           
  4254                           ;CAN.c: 311:         if(RXB0DLCbits.RXRTR == 0)
  4255  00047E  BC65               	btfsc	3941,6,c	;volatile
  4256  000480  D068               	goto	l3044
  4257                           
  4258                           ;CAN.c: 312:         {;CAN.c: 313:             message->message_type = 0x01;
  4259  000482  EE20 F001          	lfsr	2,1
  4260  000486  500E               	movf	CAN_TakeFrame@message,w,c
  4261  000488  26D9               	addwf	fsr2l,f,c
  4262  00048A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4263  00048C  22DA               	addwfc	fsr2h,f,c
  4264  00048E  0E01               	movlw	1
  4265  000490  6EDF               	movwf	indf2,c
  4266                           
  4267                           ;CAN.c: 314:             message->data_length= RXB0DLC & 0x0F;
  4268  000492  EE20 F010          	lfsr	2,16
  4269  000496  500E               	movf	CAN_TakeFrame@message,w,c
  4270  000498  26D9               	addwf	fsr2l,f,c
  4271  00049A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4272  00049C  22DA               	addwfc	fsr2h,f,c
  4273  00049E  5065               	movf	3941,w,c	;volatile
  4274  0004A0  0B0F               	andlw	15
  4275  0004A2  6EDF               	movwf	indf2,c
  4276                           
  4277                           ;CAN.c: 315:             if(message->data_length > 8)
  4278  0004A4  EE20 F010          	lfsr	2,16
  4279  0004A8  500E               	movf	CAN_TakeFrame@message,w,c
  4280  0004AA  26D9               	addwf	fsr2l,f,c
  4281  0004AC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4282  0004AE  22DA               	addwfc	fsr2h,f,c
  4283  0004B0  0E08               	movlw	8
  4284  0004B2  64DF               	cpfsgt	indf2,c
  4285  0004B4  D041               	goto	l3042
  4286  0004B6  D01E               	goto	l3036
  4287  0004B8                     l3018:
  4288                           
  4289                           ;CAN.c: 321:                         RXB0CON = 0;
  4290  0004B8  0E00               	movlw	0
  4291  0004BA  6E60               	movwf	3936,c	;volatile
  4292                           
  4293                           ;CAN.c: 322:                         break;
  4294  0004BC  D03B               	goto	l3038
  4295  0004BE                     l3020:
  4296                           
  4297                           ;CAN.c: 324:                         RXB1CON = 0;
  4298  0004BE  0E00               	movlw	0
  4299  0004C0  010F               	movlb	15	; () banked
  4300  0004C2  D00E               	goto	L2
  4301  0004C4                     l3022:
  4302                           
  4303                           ;CAN.c: 327:                         B0CON = 0;
  4304  0004C4  0E00               	movlw	0
  4305  0004C6  010E               	movlb	14	; () banked
  4306  0004C8  6F20               	movwf	32,b	;volatile
  4307                           
  4308                           ;CAN.c: 328:                         break;
  4309  0004CA  D034               	goto	l3038
  4310  0004CC                     l3024:
  4311                           
  4312                           ;CAN.c: 330:                         B1CON = 0;
  4313  0004CC  0E00               	movlw	0
  4314  0004CE  010E               	movlb	14	; () banked
  4315  0004D0  6F30               	movwf	48,b	;volatile
  4316                           
  4317                           ;CAN.c: 331:                         break;
  4318  0004D2  D030               	goto	l3038
  4319  0004D4                     l3026:
  4320                           
  4321                           ;CAN.c: 333:                         B2CON = 0;
  4322  0004D4  0E00               	movlw	0
  4323  0004D6  010E               	movlb	14	; () banked
  4324  0004D8  6F40               	movwf	64,b	;volatile
  4325                           
  4326                           ;CAN.c: 334:                         break;
  4327  0004DA  D02C               	goto	l3038
  4328  0004DC                     l3028:
  4329                           
  4330                           ;CAN.c: 336:                         B3CON = 0;
  4331  0004DC  0E00               	movlw	0
  4332  0004DE  010E               	movlb	14	; () banked
  4333  0004E0                     L2:
  4334  0004E0  6F50               	movwf	80,b	;volatile
  4335                           
  4336                           ;CAN.c: 337:                         break;
  4337  0004E2  D028               	goto	l3038
  4338  0004E4                     l3030:
  4339                           
  4340                           ;CAN.c: 339:                         B4CON = 0;
  4341  0004E4  0E00               	movlw	0
  4342  0004E6  010E               	movlb	14	; () banked
  4343  0004E8  6F60               	movwf	96,b	;volatile
  4344                           
  4345                           ;CAN.c: 340:                         break;
  4346  0004EA  D024               	goto	l3038
  4347  0004EC                     l3032:
  4348                           
  4349                           ;CAN.c: 342:                         B5CON = 0;
  4350  0004EC  0E00               	movlw	0
  4351  0004EE  010E               	movlb	14	; () banked
  4352  0004F0  6F70               	movwf	112,b	;volatile
  4353                           
  4354                           ;CAN.c: 343:                         break;
  4355  0004F2  D020               	goto	l3038
  4356  0004F4                     l3036:
  4357  0004F4  5013               	movf	CAN_TakeFrame@k,w,c
  4358  0004F6  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4359  0004F8  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4360                           
  4361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4362                           ; Switch size 1, requested type "simple"
  4363                           ; Number of cases is 1, Range of values is 0 to 0
  4364                           ; switch strategies available:
  4365                           ; Name         Instructions Cycles
  4366                           ; simple_byte            4     3 (average)
  4367                           ;	Chosen strategy is simple_byte
  4368  0004FA  5011               	movf	??_CAN_TakeFrame+1,w,c
  4369  0004FC  0A00               	xorlw	0	; case 0
  4370  0004FE  A4D8               	btfss	status,2,c
  4371  000500  D019               	goto	l3038
  4372                           
  4373                           ; Switch size 1, requested type "simple"
  4374                           ; Number of cases is 8, Range of values is 0 to 7
  4375                           ; switch strategies available:
  4376                           ; Name         Instructions Cycles
  4377                           ; simple_byte           25    13 (average)
  4378                           ;	Chosen strategy is simple_byte
  4379  000502  5010               	movf	??_CAN_TakeFrame,w,c
  4380  000504  0A00               	xorlw	0	; case 0
  4381  000506  B4D8               	btfsc	status,2,c
  4382  000508  D7D7               	goto	l3018
  4383  00050A  0A01               	xorlw	1	; case 1
  4384  00050C  B4D8               	btfsc	status,2,c
  4385  00050E  D7D7               	goto	l3020
  4386  000510  0A03               	xorlw	3	; case 2
  4387  000512  B4D8               	btfsc	status,2,c
  4388  000514  D7D7               	goto	l3022
  4389  000516  0A01               	xorlw	1	; case 3
  4390  000518  B4D8               	btfsc	status,2,c
  4391  00051A  D7D8               	goto	l3024
  4392  00051C  0A07               	xorlw	7	; case 4
  4393  00051E  B4D8               	btfsc	status,2,c
  4394  000520  D7D9               	goto	l3026
  4395  000522  0A01               	xorlw	1	; case 5
  4396  000524  B4D8               	btfsc	status,2,c
  4397  000526  D7DA               	goto	l3028
  4398  000528  0A03               	xorlw	3	; case 6
  4399  00052A  B4D8               	btfsc	status,2,c
  4400  00052C  D7DB               	goto	l3030
  4401  00052E  0A01               	xorlw	1	; case 7
  4402  000530  B4D8               	btfsc	status,2,c
  4403  000532  D7DC               	goto	l3032
  4404  000534                     l3038:
  4405                           
  4406                           ;CAN.c: 345:                 return FALSE;
  4407  000534  0E00               	movlw	0
  4408  000536  0012               	return	
  4409  000538                     l3042:
  4410                           
  4411                           ;CAN.c: 347:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4412  000538  0E08               	movlw	8
  4413  00053A  240E               	addwf	CAN_TakeFrame@message,w,c
  4414  00053C  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4415  00053E  0E00               	movlw	0
  4416  000540  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4417  000542  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4418  000544  0E66               	movlw	102
  4419  000546  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4420  000548  0E0F               	movlw	15
  4421  00054A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4422  00054C  ECE5  F00A         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4423                           
  4424                           ;CAN.c: 348:         }
  4425  000550  D027               	goto	l3064
  4426  000552                     l3044:
  4427                           
  4428                           ;CAN.c: 351:         {;CAN.c: 352:             message->message_type=0x02;
  4429  000552  EE20 F001          	lfsr	2,1
  4430  000556  500E               	movf	CAN_TakeFrame@message,w,c
  4431  000558  26D9               	addwf	fsr2l,f,c
  4432  00055A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4433  00055C  22DA               	addwfc	fsr2h,f,c
  4434  00055E  0E02               	movlw	2
  4435  000560  6EDF               	movwf	indf2,c
  4436  000562  D01E               	goto	l3064
  4437  000564                     l3046:
  4438                           
  4439                           ;CAN.c: 358:                 RXB0CON = 0;
  4440  000564  0E00               	movlw	0
  4441  000566  6E60               	movwf	3936,c	;volatile
  4442                           
  4443                           ;CAN.c: 359:                 break;
  4444  000568  D03B               	goto	l3066
  4445  00056A                     l3048:
  4446                           
  4447                           ;CAN.c: 361:                 RXB1CON = 0;
  4448  00056A  0E00               	movlw	0
  4449  00056C  010F               	movlb	15	; () banked
  4450  00056E  D00E               	goto	L3
  4451  000570                     l3050:
  4452                           
  4453                           ;CAN.c: 364:                 B0CON = 0;
  4454  000570  0E00               	movlw	0
  4455  000572  010E               	movlb	14	; () banked
  4456  000574  6F20               	movwf	32,b	;volatile
  4457                           
  4458                           ;CAN.c: 365:                 break;
  4459  000576  D034               	goto	l3066
  4460  000578                     l3052:
  4461                           
  4462                           ;CAN.c: 367:                 B1CON = 0;
  4463  000578  0E00               	movlw	0
  4464  00057A  010E               	movlb	14	; () banked
  4465  00057C  6F30               	movwf	48,b	;volatile
  4466                           
  4467                           ;CAN.c: 368:                 break;
  4468  00057E  D030               	goto	l3066
  4469  000580                     l3054:
  4470                           
  4471                           ;CAN.c: 370:                 B2CON = 0;
  4472  000580  0E00               	movlw	0
  4473  000582  010E               	movlb	14	; () banked
  4474  000584  6F40               	movwf	64,b	;volatile
  4475                           
  4476                           ;CAN.c: 371:                 break;
  4477  000586  D02C               	goto	l3066
  4478  000588                     l3056:
  4479                           
  4480                           ;CAN.c: 373:                 B3CON = 0;
  4481  000588  0E00               	movlw	0
  4482  00058A  010E               	movlb	14	; () banked
  4483  00058C                     L3:
  4484  00058C  6F50               	movwf	80,b	;volatile
  4485                           
  4486                           ;CAN.c: 374:                 break;
  4487  00058E  D028               	goto	l3066
  4488  000590                     l3058:
  4489                           
  4490                           ;CAN.c: 376:                 B4CON = 0;
  4491  000590  0E00               	movlw	0
  4492  000592  010E               	movlb	14	; () banked
  4493  000594  6F60               	movwf	96,b	;volatile
  4494                           
  4495                           ;CAN.c: 377:                 break;
  4496  000596  D024               	goto	l3066
  4497  000598                     l3060:
  4498                           
  4499                           ;CAN.c: 379:                 B5CON = 0;
  4500  000598  0E00               	movlw	0
  4501  00059A  010E               	movlb	14	; () banked
  4502  00059C  6F70               	movwf	112,b	;volatile
  4503                           
  4504                           ;CAN.c: 380:                 break;
  4505  00059E  D020               	goto	l3066
  4506  0005A0                     l3064:
  4507  0005A0  5013               	movf	CAN_TakeFrame@k,w,c
  4508  0005A2  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4509  0005A4  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4510                           
  4511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4512                           ; Switch size 1, requested type "simple"
  4513                           ; Number of cases is 1, Range of values is 0 to 0
  4514                           ; switch strategies available:
  4515                           ; Name         Instructions Cycles
  4516                           ; simple_byte            4     3 (average)
  4517                           ;	Chosen strategy is simple_byte
  4518  0005A6  5011               	movf	??_CAN_TakeFrame+1,w,c
  4519  0005A8  0A00               	xorlw	0	; case 0
  4520  0005AA  A4D8               	btfss	status,2,c
  4521  0005AC  D019               	goto	l3066
  4522                           
  4523                           ; Switch size 1, requested type "simple"
  4524                           ; Number of cases is 8, Range of values is 0 to 7
  4525                           ; switch strategies available:
  4526                           ; Name         Instructions Cycles
  4527                           ; simple_byte           25    13 (average)
  4528                           ;	Chosen strategy is simple_byte
  4529  0005AE  5010               	movf	??_CAN_TakeFrame,w,c
  4530  0005B0  0A00               	xorlw	0	; case 0
  4531  0005B2  B4D8               	btfsc	status,2,c
  4532  0005B4  D7D7               	goto	l3046
  4533  0005B6  0A01               	xorlw	1	; case 1
  4534  0005B8  B4D8               	btfsc	status,2,c
  4535  0005BA  D7D7               	goto	l3048
  4536  0005BC  0A03               	xorlw	3	; case 2
  4537  0005BE  B4D8               	btfsc	status,2,c
  4538  0005C0  D7D7               	goto	l3050
  4539  0005C2  0A01               	xorlw	1	; case 3
  4540  0005C4  B4D8               	btfsc	status,2,c
  4541  0005C6  D7D8               	goto	l3052
  4542  0005C8  0A07               	xorlw	7	; case 4
  4543  0005CA  B4D8               	btfsc	status,2,c
  4544  0005CC  D7D9               	goto	l3054
  4545  0005CE  0A01               	xorlw	1	; case 5
  4546  0005D0  B4D8               	btfsc	status,2,c
  4547  0005D2  D7DA               	goto	l3056
  4548  0005D4  0A03               	xorlw	3	; case 6
  4549  0005D6  B4D8               	btfsc	status,2,c
  4550  0005D8  D7DB               	goto	l3058
  4551  0005DA  0A01               	xorlw	1	; case 7
  4552  0005DC  B4D8               	btfsc	status,2,c
  4553  0005DE  D7DC               	goto	l3060
  4554  0005E0                     l3066:
  4555                           
  4556                           ;CAN.c: 382:         return TRUE;
  4557  0005E0  0E01               	movlw	1
  4558  0005E2  0012               	return		;funcret
  4559  0005E4                     __end_of_CAN_TakeFrame:
  4560                           	opt callstack 0
  4561                           
  4562 ;; *************** function ___awdiv *****************
  4563 ;; Defined at:
  4564 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  dividend        2    5[COMRAM] int 
  4567 ;;  divisor         2    7[COMRAM] int 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  quotient        2   11[COMRAM] int 
  4570 ;;  sign            1   10[COMRAM] unsigned char 
  4571 ;;  counter         1    9[COMRAM] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  2    5[COMRAM] int 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;Total ram usage:        8 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    3
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_CAN_TakeFrame
  4592 ;;		_FRAME_HandleCanFrame
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text32
  4597  000F0A                     __ptext32:
  4598                           	opt callstack 0
  4599  000F0A                     ___awdiv:
  4600                           	opt callstack 25
  4601                           
  4602                           ;incstack = 0
  4603  000F0A  0E00               	movlw	0
  4604  000F0C  6E0B               	movwf	___awdiv@sign,c
  4605  000F0E  AE09               	btfss	___awdiv@divisor+1,7,c
  4606  000F10  D006               	goto	l2946
  4607  000F12  6C08               	negf	___awdiv@divisor,c
  4608  000F14  1E09               	comf	___awdiv@divisor+1,f,c
  4609  000F16  B0D8               	btfsc	status,0,c
  4610  000F18  2A09               	incf	___awdiv@divisor+1,f,c
  4611  000F1A  0E01               	movlw	1
  4612  000F1C  6E0B               	movwf	___awdiv@sign,c
  4613  000F1E                     l2946:
  4614  000F1E  AE07               	btfss	___awdiv@dividend+1,7,c
  4615  000F20  D006               	goto	l2952
  4616  000F22  6C06               	negf	___awdiv@dividend,c
  4617  000F24  1E07               	comf	___awdiv@dividend+1,f,c
  4618  000F26  B0D8               	btfsc	status,0,c
  4619  000F28  2A07               	incf	___awdiv@dividend+1,f,c
  4620  000F2A  0E01               	movlw	1
  4621  000F2C  1A0B               	xorwf	___awdiv@sign,f,c
  4622  000F2E                     l2952:
  4623  000F2E  0E00               	movlw	0
  4624  000F30  6E0D               	movwf	___awdiv@quotient+1,c
  4625  000F32  0E00               	movlw	0
  4626  000F34  6E0C               	movwf	___awdiv@quotient,c
  4627  000F36  5008               	movf	___awdiv@divisor,w,c
  4628  000F38  1009               	iorwf	___awdiv@divisor+1,w,c
  4629  000F3A  B4D8               	btfsc	status,2,c
  4630  000F3C  D01C               	goto	l2974
  4631  000F3E  0E01               	movlw	1
  4632  000F40  6E0A               	movwf	___awdiv@counter,c
  4633  000F42  D004               	goto	l2960
  4634  000F44                     l2958:
  4635  000F44  90D8               	bcf	status,0,c
  4636  000F46  3608               	rlcf	___awdiv@divisor,f,c
  4637  000F48  3609               	rlcf	___awdiv@divisor+1,f,c
  4638  000F4A  2A0A               	incf	___awdiv@counter,f,c
  4639  000F4C                     l2960:
  4640  000F4C  AE09               	btfss	___awdiv@divisor+1,7,c
  4641  000F4E  D7FA               	goto	l2958
  4642  000F50                     u1580:
  4643  000F50  90D8               	bcf	status,0,c
  4644  000F52  360C               	rlcf	___awdiv@quotient,f,c
  4645  000F54  360D               	rlcf	___awdiv@quotient+1,f,c
  4646  000F56  5008               	movf	___awdiv@divisor,w,c
  4647  000F58  5C06               	subwf	___awdiv@dividend,w,c
  4648  000F5A  5009               	movf	___awdiv@divisor+1,w,c
  4649  000F5C  5807               	subwfb	___awdiv@dividend+1,w,c
  4650  000F5E  A0D8               	btfss	status,0,c
  4651  000F60  D005               	goto	l2970
  4652  000F62  5008               	movf	___awdiv@divisor,w,c
  4653  000F64  5E06               	subwf	___awdiv@dividend,f,c
  4654  000F66  5009               	movf	___awdiv@divisor+1,w,c
  4655  000F68  5A07               	subwfb	___awdiv@dividend+1,f,c
  4656  000F6A  800C               	bsf	___awdiv@quotient,0,c
  4657  000F6C                     l2970:
  4658  000F6C  90D8               	bcf	status,0,c
  4659  000F6E  3209               	rrcf	___awdiv@divisor+1,f,c
  4660  000F70  3208               	rrcf	___awdiv@divisor,f,c
  4661  000F72  2E0A               	decfsz	___awdiv@counter,f,c
  4662  000F74  D7ED               	goto	u1580
  4663  000F76                     l2974:
  4664  000F76  500B               	movf	___awdiv@sign,w,c
  4665  000F78  B4D8               	btfsc	status,2,c
  4666  000F7A  D004               	goto	l2978
  4667  000F7C  6C0C               	negf	___awdiv@quotient,c
  4668  000F7E  1E0D               	comf	___awdiv@quotient+1,f,c
  4669  000F80  B0D8               	btfsc	status,0,c
  4670  000F82  2A0D               	incf	___awdiv@quotient+1,f,c
  4671  000F84                     l2978:
  4672  000F84  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4673  000F88  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4674  000F8C  0012               	return		;funcret
  4675  000F8E                     __end_of___awdiv:
  4676                           	opt callstack 0
  4677                           
  4678 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4679 ;; Defined at:
  4680 ;;		line 184 in file "CAN.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4683 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4684 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4685 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  i               1    9[COMRAM] unsigned char 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4700 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4701 ;;Total ram usage:        5 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    3
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_CAN_SendFrame
  4708 ;;		_CAN_TakeFrame
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text33
  4713  0015CA                     __ptext33:
  4714                           	opt callstack 0
  4715  0015CA                     _CAN_MoveBuffIntoFrame:
  4716                           	opt callstack 24
  4717                           
  4718                           ;CAN.c: 184: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 185: {;CAN.c
      +                          : 186:     BYTE i;;CAN.c: 187:     for(i=0; i<8; ++i)
  4719                           
  4720                           ;incstack = 0
  4721  0015CA  0E00               	movlw	0
  4722  0015CC  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4723  0015CE                     l2434:
  4724                           
  4725                           ;CAN.c: 188:     {;CAN.c: 189:         Ram[i]=(*(Buf+i));
  4726  0015CE  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4727  0015D0  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4728  0015D2  6ED9               	movwf	fsr2l,c
  4729  0015D4  0E00               	movlw	0
  4730  0015D6  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4731  0015D8  6EDA               	movwf	fsr2h,c
  4732  0015DA  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4733  0015DC  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4734  0015DE  6EE1               	movwf	fsr1l,c
  4735  0015E0  0E00               	movlw	0
  4736  0015E2  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4737  0015E4  6EE2               	movwf	fsr1h,c
  4738  0015E6  CFDF FFE7          	movff	indf2,indf1
  4739                           
  4740                           ;CAN.c: 190:     }
  4741  0015EA  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4742  0015EC  0E07               	movlw	7
  4743  0015EE  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4744  0015F0  D7EE               	goto	l2434
  4745  0015F2  0012               	return	
  4746  0015F4                     __end_of_CAN_MoveBuffIntoFrame:
  4747                           	opt callstack 0
  4748                           
  4749 ;; *************** function _TMR1_Update_flag_Set *****************
  4750 ;; Defined at:
  4751 ;;		line 32 in file "TMR1.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  a               2    5[COMRAM] unsigned int 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		None
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;Total ram usage:        2 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    3
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_main
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text34
  4780  001714                     __ptext34:
  4781                           	opt callstack 0
  4782  001714                     _TMR1_Update_flag_Set:
  4783                           	opt callstack 27
  4784                           
  4785                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4786                           
  4787                           ;incstack = 0
  4788  001714  C006  F038         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4789  001718  C007  F039         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4790  00171C  0012               	return		;funcret
  4791  00171E                     __end_of_TMR1_Update_flag_Set:
  4792                           	opt callstack 0
  4793                           
  4794 ;; *************** function _TMR1_Update_flag_Get *****************
  4795 ;; Defined at:
  4796 ;;		line 47 in file "TMR1.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  2    5[COMRAM] unsigned int 
  4803 ;; Registers used:
  4804 ;;		None
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;Total ram usage:        2 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    3
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_main
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text35
  4825  00171E                     __ptext35:
  4826                           	opt callstack 0
  4827  00171E                     _TMR1_Update_flag_Get:
  4828                           	opt callstack 27
  4829                           
  4830                           ;TMR1.c: 49:     return TMR1_Update_flag;
  4831                           
  4832                           ;incstack = 0
  4833  00171E  C038  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  4834  001722  C039  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  4835  001726  0012               	return		;funcret
  4836  001728                     __end_of_TMR1_Update_flag_Get:
  4837                           	opt callstack 0
  4838                           
  4839 ;; *************** function _LED_Update *****************
  4840 ;; Defined at:
  4841 ;;		line 105 in file "LED.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      unsigned char 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;Total ram usage:        0 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    5
  4862 ;; This function calls:
  4863 ;;		_LED_Control
  4864 ;;		_LED_Left
  4865 ;;		_LED_Light_Pos
  4866 ;;		_LED_Right
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text36
  4873  001010                     __ptext36:
  4874                           	opt callstack 0
  4875  001010                     _LED_Update:
  4876                           	opt callstack 25
  4877                           
  4878                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  4879                           
  4880                           ;incstack = 0
  4881  001010  504C               	movf	_LOCK,w,c
  4882  001012  A4D8               	btfss	status,2,c
  4883  001014  D013               	goto	l3198
  4884                           
  4885                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  4886  001016  0E00               	movlw	0
  4887  001018  6E07               	movwf	LED_Control@diode+1,c
  4888  00101A  0E00               	movlw	0
  4889  00101C  6E06               	movwf	LED_Control@diode,c
  4890  00101E  0E00               	movlw	0
  4891  001020  ECAC  F004         	call	_LED_Control
  4892                           
  4893                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  4894  001024  C04F  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  4895  001028  C050  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  4896  00102C  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4897  001030  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4898  001034  5059               	movf	LED_Update@Green,w,c
  4899  001036  ECDE  F006         	call	_LED_Light_Pos
  4900                           
  4901                           ;LED.c: 117:     }
  4902  00103A  D012               	goto	l313
  4903  00103C                     l3198:
  4904                           
  4905                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  4906  00103C  0E00               	movlw	0
  4907  00103E  6E07               	movwf	LED_Control@diode+1,c
  4908  001040  0E00               	movlw	0
  4909  001042  6E06               	movwf	LED_Control@diode,c
  4910  001044  5059               	movf	LED_Update@Green,w,c
  4911  001046  ECAC  F004         	call	_LED_Control
  4912                           
  4913                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  4914  00104A  C051  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  4915  00104E  C052  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  4916  001052  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4917  001056  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4918  00105A  0E00               	movlw	0
  4919  00105C  ECDE  F006         	call	_LED_Light_Pos
  4920  001060                     l313:
  4921                           
  4922                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  4923  001060  C051  F006         	movff	LED_Update@pos1,LED_Right@a
  4924  001064  C052  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  4925  001068  ECF7  F009         	call	_LED_Right	;wreg free
  4926  00106C  C006  F051         	movff	?_LED_Right,LED_Update@pos1
  4927  001070  C007  F052         	movff	?_LED_Right+1,LED_Update@pos1+1
  4928                           
  4929                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  4930  001074  C04F  F006         	movff	LED_Update@pos2,LED_Left@a
  4931  001078  C050  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  4932  00107C  EC42  F00A         	call	_LED_Left	;wreg free
  4933  001080  C006  F04F         	movff	?_LED_Left,LED_Update@pos2
  4934  001084  C007  F050         	movff	?_LED_Left+1,LED_Update@pos2+1
  4935  001088  0012               	return		;funcret
  4936  00108A                     __end_of_LED_Update:
  4937                           	opt callstack 0
  4938                           
  4939 ;; *************** function _LED_Light_Pos *****************
  4940 ;; Defined at:
  4941 ;;		line 196 in file "LED.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  color           1    wreg     enum E10644
  4944 ;;  pos             2   12[COMRAM] unsigned int 
  4945 ;;  fulfillment     2   14[COMRAM] unsigned int 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  color           1   16[COMRAM] enum E10644
  4948 ;;  flage           2   21[COMRAM] unsigned int 
  4949 ;;  pos2            2   19[COMRAM] unsigned int 
  4950 ;;  LED_array       2   17[COMRAM] unsigned int 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  2   12[COMRAM] unsigned int 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;Total ram usage:       11 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    4
  4967 ;; This function calls:
  4968 ;;		_LED_Control
  4969 ;;		_LED_Left
  4970 ;;		_LED_Right
  4971 ;;		___lwdiv
  4972 ;; This function is called by:
  4973 ;;		_LED_Update
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text37
  4978  000DBC                     __ptext37:
  4979                           	opt callstack 0
  4980  000DBC                     _LED_Light_Pos:
  4981                           	opt callstack 25
  4982                           
  4983                           ;incstack = 0
  4984                           ;LED_Light_Pos@color stored from wreg
  4985  000DBC  6E11               	movwf	LED_Light_Pos@color,c
  4986                           
  4987                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  4988  000DBE  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  4989  000DC2  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  4990                           
  4991                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  4992  000DC6  0E00               	movlw	0
  4993  000DC8  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4994  000DCA  0E00               	movlw	0
  4995  000DCC  6E12               	movwf	LED_Light_Pos@LED_array,c
  4996                           
  4997                           ;LED.c: 200:     UINT flage = fulfillment/10;
  4998  000DCE  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  4999  000DD2  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5000  000DD6  0E00               	movlw	0
  5001  000DD8  6E09               	movwf	___lwdiv@divisor+1,c
  5002  000DDA  0E0A               	movlw	10
  5003  000DDC  6E08               	movwf	___lwdiv@divisor,c
  5004  000DDE  ECA7  F009         	call	___lwdiv	;wreg free
  5005  000DE2  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5006  000DE6  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5007                           
  5008                           ;LED.c: 201:     if(color == RED)
  5009  000DEA  5011               	movf	LED_Light_Pos@color,w,c
  5010  000DEC  B4D8               	btfsc	status,2,c
  5011  000DEE  D017               	goto	l3104
  5012  000DF0  D031               	goto	l3112
  5013  000DF2                     l3098:
  5014                           
  5015                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5016  000DF2  5012               	movf	LED_Light_Pos@LED_array,w,c
  5017  000DF4  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5018  000DF6  6E12               	movwf	LED_Light_Pos@LED_array,c
  5019  000DF8  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5020  000DFA  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5021  000DFC  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5022                           
  5023                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5024  000DFE  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5025  000E02  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5026  000E06  EC42  F00A         	call	_LED_Left	;wreg free
  5027  000E0A  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5028  000E0E  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5029                           
  5030                           ;LED.c: 207:             flage = flage - 1;
  5031  000E12  0EFF               	movlw	255
  5032  000E14  2416               	addwf	LED_Light_Pos@flage,w,c
  5033  000E16  6E16               	movwf	LED_Light_Pos@flage,c
  5034  000E18  0EFF               	movlw	255
  5035  000E1A  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5036  000E1C  6E17               	movwf	LED_Light_Pos@flage+1,c
  5037  000E1E                     l3104:
  5038                           
  5039                           ;LED.c: 203:         while(flage>0)
  5040  000E1E  5016               	movf	LED_Light_Pos@flage,w,c
  5041  000E20  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5042  000E22  B4D8               	btfsc	status,2,c
  5043  000E24  D01B               	goto	u1690
  5044  000E26  D7E5               	goto	l3098
  5045  000E28                     l3106:
  5046                           
  5047                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5048  000E28  5012               	movf	LED_Light_Pos@LED_array,w,c
  5049  000E2A  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5050  000E2C  6E12               	movwf	LED_Light_Pos@LED_array,c
  5051  000E2E  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5052  000E30  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5053  000E32  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5054                           
  5055                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5056  000E34  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5057  000E38  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5058  000E3C  ECF7  F009         	call	_LED_Right	;wreg free
  5059  000E40  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5060  000E44  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5061                           
  5062                           ;LED.c: 216:             flage = flage - 1;
  5063  000E48  0EFF               	movlw	255
  5064  000E4A  2416               	addwf	LED_Light_Pos@flage,w,c
  5065  000E4C  6E16               	movwf	LED_Light_Pos@flage,c
  5066  000E4E  0EFF               	movlw	255
  5067  000E50  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5068  000E52  6E17               	movwf	LED_Light_Pos@flage+1,c
  5069  000E54                     l3112:
  5070                           
  5071                           ;LED.c: 212:         while(flage>0)
  5072  000E54  5016               	movf	LED_Light_Pos@flage,w,c
  5073  000E56  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5074  000E58  A4D8               	btfss	status,2,c
  5075  000E5A  D7E6               	goto	l3106
  5076  000E5C                     u1690:
  5077                           
  5078                           ;LED.c: 219:     LED_Control(color, LED_array);
  5079  000E5C  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5080  000E60  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5081  000E64  5011               	movf	LED_Light_Pos@color,w,c
  5082  000E66  ECAC  F004         	call	_LED_Control
  5083  000E6A  0012               	return		;funcret
  5084  000E6C                     __end_of_LED_Light_Pos:
  5085                           	opt callstack 0
  5086                           
  5087 ;; *************** function ___lwdiv *****************
  5088 ;; Defined at:
  5089 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  dividend        2    5[COMRAM] unsigned int 
  5092 ;;  divisor         2    7[COMRAM] unsigned int 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  quotient        2    9[COMRAM] unsigned int 
  5095 ;;  counter         1   11[COMRAM] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  2    5[COMRAM] unsigned int 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;Total ram usage:        7 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    3
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_LED_Light_Pos
  5116 ;;		_FRAME_Plot
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text38
  5121  00134E                     __ptext38:
  5122                           	opt callstack 0
  5123  00134E                     ___lwdiv:
  5124                           	opt callstack 24
  5125                           
  5126                           ;incstack = 0
  5127  00134E  0E00               	movlw	0
  5128  001350  6E0B               	movwf	___lwdiv@quotient+1,c
  5129  001352  0E00               	movlw	0
  5130  001354  6E0A               	movwf	___lwdiv@quotient,c
  5131  001356  5008               	movf	___lwdiv@divisor,w,c
  5132  001358  1009               	iorwf	___lwdiv@divisor+1,w,c
  5133  00135A  B4D8               	btfsc	status,2,c
  5134  00135C  D01C               	goto	l1250
  5135  00135E  0E01               	movlw	1
  5136  001360  6E0C               	movwf	___lwdiv@counter,c
  5137  001362  D004               	goto	l2666
  5138  001364                     l2664:
  5139  001364  90D8               	bcf	status,0,c
  5140  001366  3608               	rlcf	___lwdiv@divisor,f,c
  5141  001368  3609               	rlcf	___lwdiv@divisor+1,f,c
  5142  00136A  2A0C               	incf	___lwdiv@counter,f,c
  5143  00136C                     l2666:
  5144  00136C  AE09               	btfss	___lwdiv@divisor+1,7,c
  5145  00136E  D7FA               	goto	l2664
  5146  001370                     u1230:
  5147  001370  90D8               	bcf	status,0,c
  5148  001372  360A               	rlcf	___lwdiv@quotient,f,c
  5149  001374  360B               	rlcf	___lwdiv@quotient+1,f,c
  5150  001376  5008               	movf	___lwdiv@divisor,w,c
  5151  001378  5C06               	subwf	___lwdiv@dividend,w,c
  5152  00137A  5009               	movf	___lwdiv@divisor+1,w,c
  5153  00137C  5807               	subwfb	___lwdiv@dividend+1,w,c
  5154  00137E  A0D8               	btfss	status,0,c
  5155  001380  D005               	goto	l2676
  5156  001382  5008               	movf	___lwdiv@divisor,w,c
  5157  001384  5E06               	subwf	___lwdiv@dividend,f,c
  5158  001386  5009               	movf	___lwdiv@divisor+1,w,c
  5159  001388  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5160  00138A  800A               	bsf	___lwdiv@quotient,0,c
  5161  00138C                     l2676:
  5162  00138C  90D8               	bcf	status,0,c
  5163  00138E  3209               	rrcf	___lwdiv@divisor+1,f,c
  5164  001390  3208               	rrcf	___lwdiv@divisor,f,c
  5165  001392  2E0C               	decfsz	___lwdiv@counter,f,c
  5166  001394  D7ED               	goto	u1230
  5167  001396                     l1250:
  5168  001396  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  5169  00139A  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5170  00139E  0012               	return		;funcret
  5171  0013A0                     __end_of___lwdiv:
  5172                           	opt callstack 0
  5173                           
  5174 ;; *************** function _LED_Right *****************
  5175 ;; Defined at:
  5176 ;;		line 140 in file "LED.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  a               2    5[COMRAM] unsigned int 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  b               2    9[COMRAM] unsigned int 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  2    5[COMRAM] unsigned int 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;Total ram usage:        6 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    3
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_LED_Update
  5201 ;;		_LED_Light_Pos
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text39
  5206  0013EE                     __ptext39:
  5207                           	opt callstack 0
  5208  0013EE                     _LED_Right:
  5209                           	opt callstack 26
  5210                           
  5211                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5212                           
  5213                           ;incstack = 0
  5214  0013EE  A006               	btfss	LED_Right@a,0,c
  5215  0013F0  D018               	goto	l2772
  5216                           
  5217                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5218  0013F2  0EFE               	movlw	254
  5219  0013F4  1406               	andwf	LED_Right@a,w,c
  5220  0013F6  6E0A               	movwf	LED_Right@b,c
  5221  0013F8  0E03               	movlw	3
  5222  0013FA  1407               	andwf	LED_Right@a+1,w,c
  5223  0013FC  6E0B               	movwf	LED_Right@b+1,c
  5224                           
  5225                           ;LED.c: 145:         b = b >> 1;
  5226  0013FE  90D8               	bcf	status,0,c
  5227  001400  300B               	rrcf	LED_Right@b+1,w,c
  5228  001402  6E08               	movwf	??_LED_Right& (0+255),c
  5229  001404  300A               	rrcf	LED_Right@b,w,c
  5230  001406  6E0A               	movwf	LED_Right@b,c
  5231  001408  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5232                           
  5233                           ;LED.c: 146:         b = b | 0b1000000000;
  5234  00140C  0E00               	movlw	0
  5235  00140E  100A               	iorwf	LED_Right@b,w,c
  5236  001410  6E0A               	movwf	LED_Right@b,c
  5237  001412  0E02               	movlw	2
  5238  001414  100B               	iorwf	LED_Right@b+1,w,c
  5239  001416  6E0B               	movwf	LED_Right@b+1,c
  5240                           
  5241                           ;LED.c: 147:         return b;
  5242  001418  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5243  00141C  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5244  001420  0012               	return	
  5245  001422                     l2772:
  5246                           
  5247                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5248  001422  90D8               	bcf	status,0,c
  5249  001424  3007               	rrcf	LED_Right@a+1,w,c
  5250  001426  6E08               	movwf	??_LED_Right& (0+255),c
  5251  001428  3006               	rrcf	LED_Right@a,w,c
  5252  00142A  6E06               	movwf	LED_Right@a,c
  5253  00142C  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5254                           
  5255                           ;LED.c: 152:         return a;
  5256  001430  C006  F006         	movff	LED_Right@a,?_LED_Right
  5257  001434  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5258  001438  0012               	return		;funcret
  5259  00143A                     __end_of_LED_Right:
  5260                           	opt callstack 0
  5261                           
  5262 ;; *************** function _LED_Left *****************
  5263 ;; Defined at:
  5264 ;;		line 167 in file "LED.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  a               2    5[COMRAM] unsigned int 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  b               2    7[COMRAM] unsigned int 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  2    5[COMRAM] unsigned int 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;Total ram usage:        4 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    3
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_LED_Update
  5289 ;;		_LED_Light_Pos
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text40
  5294  001484                     __ptext40:
  5295                           	opt callstack 0
  5296  001484                     _LED_Left:
  5297                           	opt callstack 25
  5298                           
  5299                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5300                           
  5301                           ;incstack = 0
  5302  001484  A207               	btfss	LED_Left@a+1,1,c
  5303  001486  D015               	goto	l2788
  5304                           
  5305                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5306  001488  0EFF               	movlw	255
  5307  00148A  1406               	andwf	LED_Left@a,w,c
  5308  00148C  6E08               	movwf	LED_Left@b,c
  5309  00148E  0E01               	movlw	1
  5310  001490  1407               	andwf	LED_Left@a+1,w,c
  5311  001492  6E09               	movwf	LED_Left@b+1,c
  5312                           
  5313                           ;LED.c: 172:         b = b << 1;
  5314  001494  90D8               	bcf	status,0,c
  5315  001496  3408               	rlcf	LED_Left@b,w,c
  5316  001498  6E08               	movwf	LED_Left@b,c
  5317  00149A  3409               	rlcf	LED_Left@b+1,w,c
  5318  00149C  6E09               	movwf	LED_Left@b+1,c
  5319                           
  5320                           ;LED.c: 173:         b = b | 0b0000000001;
  5321  00149E  0E01               	movlw	1
  5322  0014A0  1008               	iorwf	LED_Left@b,w,c
  5323  0014A2  6E08               	movwf	LED_Left@b,c
  5324  0014A4  5009               	movf	LED_Left@b+1,w,c
  5325  0014A6  6E09               	movwf	LED_Left@b+1,c
  5326                           
  5327                           ;LED.c: 174:         return b;
  5328  0014A8  C008  F006         	movff	LED_Left@b,?_LED_Left
  5329  0014AC  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5330  0014B0  0012               	return	
  5331  0014B2                     l2788:
  5332                           
  5333                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5334  0014B2  90D8               	bcf	status,0,c
  5335  0014B4  3406               	rlcf	LED_Left@a,w,c
  5336  0014B6  6E06               	movwf	LED_Left@a,c
  5337  0014B8  3407               	rlcf	LED_Left@a+1,w,c
  5338  0014BA  6E07               	movwf	LED_Left@a+1,c
  5339                           
  5340                           ;LED.c: 179:         return a;
  5341  0014BC  C006  F006         	movff	LED_Left@a,?_LED_Left
  5342  0014C0  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5343  0014C4  0012               	return		;funcret
  5344  0014C6                     __end_of_LED_Left:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _INI_All *****************
  5348 ;; Defined at:
  5349 ;;		line 52 in file "INI.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;Total ram usage:        0 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    5
  5370 ;; This function calls:
  5371 ;;		_CAN_Setup
  5372 ;;		_INI_GlobalInterrupt
  5373 ;;		_INI_LED_Start
  5374 ;;		_INI_OUTPUT
  5375 ;;		_INI_Timer
  5376 ;; This function is called by:
  5377 ;;		_main
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text41
  5382  00167C                     __ptext41:
  5383                           	opt callstack 0
  5384  00167C                     _INI_All:
  5385                           	opt callstack 25
  5386                           
  5387                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  5388                           
  5389                           ;incstack = 0
  5390  00167C  80D1               	bsf	4049,0,c	;volatile
  5391  00167E  0004               	clrwdt		;# 
  5392                           
  5393                           ;INI.c: 64:     INI_OUTPUT();
  5394  001680  EC2F  F00B         	call	_INI_OUTPUT	;wreg free
  5395                           
  5396                           ;INI.c: 66:     CAN_Setup();
  5397  001684  ECEF  F008         	call	_CAN_Setup	;wreg free
  5398                           
  5399                           ;INI.c: 67:     INI_GlobalInterrupt();
  5400  001688  EC5E  F00B         	call	_INI_GlobalInterrupt	;wreg free
  5401                           
  5402                           ;INI.c: 69:     INI_Timer();
  5403  00168C  EC4B  F00B         	call	_INI_Timer	;wreg free
  5404                           
  5405                           ;INI.c: 71:     INI_LED_Start();
  5406  001690  ECB4  F00A         	call	_INI_LED_Start	;wreg free
  5407  001694  0012               	return		;funcret
  5408  001696                     __end_of_INI_All:
  5409                           	opt callstack 0
  5410                           
  5411 ;; *************** function _INI_Timer *****************
  5412 ;; Defined at:
  5413 ;;		line 92 in file "TMR1.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      unsigned char 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5431 ;;Total ram usage:        0 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    3
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_INI_All
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text42
  5442  001696                     __ptext42:
  5443                           	opt callstack 0
  5444  001696                     _INI_Timer:
  5445                           	opt callstack 26
  5446                           
  5447                           ;TMR1.c: 96:     IRCF2 = 1;
  5448                           
  5449                           ;incstack = 0
  5450  001696  8CD3               	bsf	4051,6,c	;volatile
  5451                           
  5452                           ;TMR1.c: 97:     IRCF1 = 1;
  5453  001698  8AD3               	bsf	4051,5,c	;volatile
  5454                           
  5455                           ;TMR1.c: 98:     IRCF0 = 1;
  5456  00169A  88D3               	bsf	4051,4,c	;volatile
  5457                           
  5458                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5459  00169C  0E3D               	movlw	61
  5460  00169E  6ECD               	movwf	4045,c	;volatile
  5461                           
  5462                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5463  0016A0  0E9E               	movlw	158
  5464  0016A2  6ECF               	movwf	4047,c	;volatile
  5465                           
  5466                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5467  0016A4  0E57               	movlw	87
  5468  0016A6  6ECE               	movwf	4046,c	;volatile
  5469                           
  5470                           ;TMR1.c: 102:     TMR1IE=1;
  5471  0016A8  809D               	bsf	3997,0,c	;volatile
  5472                           
  5473                           ;TMR1.c: 103:     TMR1ON = 1;
  5474  0016AA  80CD               	bsf	4045,0,c	;volatile
  5475  0016AC  0012               	return		;funcret
  5476  0016AE                     __end_of_INI_Timer:
  5477                           	opt callstack 0
  5478                           
  5479 ;; *************** function _INI_OUTPUT *****************
  5480 ;; Defined at:
  5481 ;;		line 27 in file "INI.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;		None
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;		None
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;Total ram usage:        0 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    3
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_INI_All
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text43
  5510  00165E                     __ptext43:
  5511                           	opt callstack 0
  5512  00165E                     _INI_OUTPUT:
  5513                           	opt callstack 26
  5514                           
  5515                           ;INI.c: 31:     LATA = 0;
  5516                           
  5517                           ;incstack = 0
  5518  00165E  0E00               	movlw	0
  5519  001660  6E89               	movwf	3977,c	;volatile
  5520                           
  5521                           ;INI.c: 32:     LATB = 0;
  5522  001662  0E00               	movlw	0
  5523  001664  6E8A               	movwf	3978,c	;volatile
  5524                           
  5525                           ;INI.c: 33:     LATC = 0;
  5526  001666  0E00               	movlw	0
  5527  001668  6E8B               	movwf	3979,c	;volatile
  5528                           
  5529                           ;INI.c: 34:     TRISA = 0x0C;
  5530  00166A  0E0C               	movlw	12
  5531  00166C  6E92               	movwf	3986,c	;volatile
  5532                           
  5533                           ;INI.c: 35:     TRISB = 0b10001000;
  5534  00166E  0E88               	movlw	136
  5535  001670  6E93               	movwf	3987,c	;volatile
  5536                           
  5537                           ;INI.c: 36:     TRISC = 0xBF;
  5538  001672  0EBF               	movlw	191
  5539  001674  6E94               	movwf	3988,c	;volatile
  5540                           
  5541                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5542  001676  8ED0               	bsf	4048,7,c	;volatile
  5543                           
  5544                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5545  001678  8633               	bsf	_DetectorLedRadar,3,c
  5546  00167A  0012               	return		;funcret
  5547  00167C                     __end_of_INI_OUTPUT:
  5548                           	opt callstack 0
  5549                           
  5550 ;; *************** function _INI_LED_Start *****************
  5551 ;; Defined at:
  5552 ;;		line 231 in file "LED.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5570 ;;Total ram usage:        0 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    4
  5573 ;; This function calls:
  5574 ;;		_LED_Control
  5575 ;; This function is called by:
  5576 ;;		_INI_All
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text44
  5581  001568                     __ptext44:
  5582                           	opt callstack 0
  5583  001568                     _INI_LED_Start:
  5584                           	opt callstack 25
  5585                           
  5586                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5587                           
  5588                           ;incstack = 0
  5589  001568  5092               	movf	3986,w,c	;volatile
  5590  00156A  0B01               	andlw	1
  5591  00156C  6E92               	movwf	3986,c	;volatile
  5592                           
  5593                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5594  00156E  5093               	movf	3987,w,c	;volatile
  5595  001570  0BFC               	andlw	252
  5596  001572  6E93               	movwf	3987,c	;volatile
  5597                           
  5598                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5599  001574  5096               	movf	3990,w,c	;volatile
  5600  001576  0BF8               	andlw	248
  5601  001578  6E96               	movwf	3990,c	;volatile
  5602                           
  5603                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5604  00157A  0E00               	movlw	0
  5605  00157C  6E95               	movwf	3989,c	;volatile
  5606                           
  5607                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5608  00157E  0E00               	movlw	0
  5609  001580  6E07               	movwf	LED_Control@diode+1,c
  5610  001582  0E00               	movlw	0
  5611  001584  6E06               	movwf	LED_Control@diode,c
  5612  001586  0E00               	movlw	0
  5613  001588  ECAC  F004         	call	_LED_Control
  5614                           
  5615                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5616  00158C  0E00               	movlw	0
  5617  00158E  6E07               	movwf	LED_Control@diode+1,c
  5618  001590  0E00               	movlw	0
  5619  001592  6E06               	movwf	LED_Control@diode,c
  5620  001594  0E01               	movlw	1
  5621  001596  ECAC  F004         	call	_LED_Control
  5622  00159A  0012               	return		;funcret
  5623  00159C                     __end_of_INI_LED_Start:
  5624                           	opt callstack 0
  5625                           
  5626 ;; *************** function _LED_Control *****************
  5627 ;; Defined at:
  5628 ;;		line 256 in file "LED.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  color           1    wreg     enum E10644
  5631 ;;  diode           2    5[COMRAM] unsigned int 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  color           1    9[COMRAM] enum E10644
  5634 ;;  cos             2    0        unsigned int 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      unsigned char 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5645 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5648 ;;Total ram usage:        5 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    3
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_LED_Error
  5655 ;;		_LED_Update
  5656 ;;		_LED_Light_Pos
  5657 ;;		_INI_LED_Start
  5658 ;;		_LED_Clear
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text45
  5663  000958                     __ptext45:
  5664                           	opt callstack 0
  5665  000958                     _LED_Control:
  5666                           	opt callstack 24
  5667                           
  5668                           ;incstack = 0
  5669                           ;LED_Control@color stored from wreg
  5670  000958  6E0A               	movwf	LED_Control@color,c
  5671                           
  5672                           ;LED.c: 259:     if(color == RED)
  5673  00095A  500A               	movf	LED_Control@color,w,c
  5674  00095C  A4D8               	btfss	status,2,c
  5675  00095E  D050               	goto	l341
  5676                           
  5677                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5678  000960  A006               	btfss	LED_Control@diode,0,c
  5679  000962  D003               	goto	l2448
  5680                           
  5681                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5682  000964  508C               	movf	3980,w,c	;volatile
  5683  000966  0910               	iorlw	16
  5684  000968  D002               	goto	L4
  5685  00096A                     l2448:
  5686                           
  5687                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5688  00096A  508C               	movf	3980,w,c	;volatile
  5689  00096C  0BEF               	andlw	239
  5690  00096E                     L4:
  5691  00096E  6E8C               	movwf	3980,c	;volatile
  5692                           
  5693                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5694  000970  A206               	btfss	LED_Control@diode,1,c
  5695  000972  D003               	goto	l2454
  5696                           
  5697                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5698  000974  508C               	movf	3980,w,c	;volatile
  5699  000976  0940               	iorlw	64
  5700  000978  D002               	goto	L5
  5701  00097A                     l2454:
  5702                           
  5703                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5704  00097A  508C               	movf	3980,w,c	;volatile
  5705  00097C  0BBF               	andlw	191
  5706  00097E                     L5:
  5707  00097E  6E8C               	movwf	3980,c	;volatile
  5708                           
  5709                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5710  000980  A406               	btfss	LED_Control@diode,2,c
  5711  000982  D003               	goto	l2460
  5712                           
  5713                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5714  000984  508A               	movf	3978,w,c	;volatile
  5715  000986  0901               	iorlw	1
  5716  000988  D002               	goto	L6
  5717  00098A                     l2460:
  5718                           
  5719                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5720  00098A  508A               	movf	3978,w,c	;volatile
  5721  00098C  0BFE               	andlw	254
  5722  00098E                     L6:
  5723  00098E  6E8A               	movwf	3978,c	;volatile
  5724                           
  5725                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5726  000990  A606               	btfss	LED_Control@diode,3,c
  5727  000992  D003               	goto	l2466
  5728                           
  5729                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5730  000994  5089               	movf	3977,w,c	;volatile
  5731  000996  0902               	iorlw	2
  5732  000998  D002               	goto	L7
  5733  00099A                     l2466:
  5734                           
  5735                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5736  00099A  5089               	movf	3977,w,c	;volatile
  5737  00099C  0BFD               	andlw	253
  5738  00099E                     L7:
  5739  00099E  6E89               	movwf	3977,c	;volatile
  5740                           
  5741                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5742  0009A0  A806               	btfss	LED_Control@diode,4,c
  5743  0009A2  D003               	goto	l2472
  5744                           
  5745                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5746  0009A4  5089               	movf	3977,w,c	;volatile
  5747  0009A6  0908               	iorlw	8
  5748  0009A8  D002               	goto	L8
  5749  0009AA                     l2472:
  5750                           
  5751                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5752  0009AA  5089               	movf	3977,w,c	;volatile
  5753  0009AC  0BF7               	andlw	247
  5754  0009AE                     L8:
  5755  0009AE  6E89               	movwf	3977,c	;volatile
  5756                           
  5757                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5758  0009B0  AA06               	btfss	LED_Control@diode,5,c
  5759  0009B2  D003               	goto	l2478
  5760                           
  5761                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5762  0009B4  5089               	movf	3977,w,c	;volatile
  5763  0009B6  0920               	iorlw	32
  5764  0009B8  D002               	goto	L9
  5765  0009BA                     l2478:
  5766                           
  5767                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5768  0009BA  5089               	movf	3977,w,c	;volatile
  5769  0009BC  0BDF               	andlw	223
  5770  0009BE                     L9:
  5771  0009BE  6E89               	movwf	3977,c	;volatile
  5772                           
  5773                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5774  0009C0  AC06               	btfss	LED_Control@diode,6,c
  5775  0009C2  D003               	goto	l2484
  5776                           
  5777                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5778  0009C4  508D               	movf	3981,w,c	;volatile
  5779  0009C6  0902               	iorlw	2
  5780  0009C8  D002               	goto	L10
  5781  0009CA                     l2484:
  5782                           
  5783                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  5784  0009CA  508D               	movf	3981,w,c	;volatile
  5785  0009CC  0BFD               	andlw	253
  5786  0009CE                     L10:
  5787  0009CE  6E8D               	movwf	3981,c	;volatile
  5788                           
  5789                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  5790  0009D0  AE06               	btfss	LED_Control@diode,7,c
  5791  0009D2  D003               	goto	l2490
  5792                           
  5793                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  5794  0009D4  5089               	movf	3977,w,c	;volatile
  5795  0009D6  0980               	iorlw	128
  5796  0009D8  D002               	goto	L11
  5797  0009DA                     l2490:
  5798                           
  5799                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  5800  0009DA  5089               	movf	3977,w,c	;volatile
  5801  0009DC  0B7F               	andlw	127
  5802  0009DE                     L11:
  5803  0009DE  6E89               	movwf	3977,c	;volatile
  5804                           
  5805                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  5806  0009E0  A007               	btfss	LED_Control@diode+1,0,c
  5807  0009E2  D003               	goto	l2496
  5808                           
  5809                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  5810  0009E4  508C               	movf	3980,w,c	;volatile
  5811  0009E6  0901               	iorlw	1
  5812  0009E8  D002               	goto	L12
  5813  0009EA                     l2496:
  5814                           
  5815                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  5816  0009EA  508C               	movf	3980,w,c	;volatile
  5817  0009EC  0BFE               	andlw	254
  5818  0009EE                     L12:
  5819  0009EE  6E8C               	movwf	3980,c	;volatile
  5820                           
  5821                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  5822  0009F0  A207               	btfss	LED_Control@diode+1,1,c
  5823  0009F2  D003               	goto	l2502
  5824                           
  5825                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  5826  0009F4  508C               	movf	3980,w,c	;volatile
  5827  0009F6  0904               	iorlw	4
  5828  0009F8  D002               	goto	L13
  5829  0009FA                     l2502:
  5830                           
  5831                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  5832  0009FA  508C               	movf	3980,w,c	;volatile
  5833  0009FC  0BFB               	andlw	251
  5834  0009FE                     L13:
  5835  0009FE  6E8C               	movwf	3980,c	;volatile
  5836  000A00                     l341:
  5837                           
  5838                           ;LED.c: 358:     if(color == GREEN)
  5839  000A00  040A               	decf	LED_Control@color,w,c
  5840  000A02  A4D8               	btfss	status,2,c
  5841  000A04  0012               	return	
  5842                           
  5843                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  5844  000A06  A006               	btfss	LED_Control@diode,0,c
  5845  000A08  D003               	goto	l2508
  5846                           
  5847                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  5848  000A0A  508C               	movf	3980,w,c	;volatile
  5849  000A0C  0920               	iorlw	32
  5850  000A0E  D002               	goto	L14
  5851  000A10                     l2508:
  5852                           
  5853                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  5854  000A10  508C               	movf	3980,w,c	;volatile
  5855  000A12  0BDF               	andlw	223
  5856  000A14                     L14:
  5857  000A14  6E8C               	movwf	3980,c	;volatile
  5858                           
  5859                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  5860  000A16  A206               	btfss	LED_Control@diode,1,c
  5861  000A18  D003               	goto	l2514
  5862                           
  5863                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  5864  000A1A  508C               	movf	3980,w,c	;volatile
  5865  000A1C  0980               	iorlw	128
  5866  000A1E  D002               	goto	L15
  5867  000A20                     l2514:
  5868                           
  5869                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  5870  000A20  508C               	movf	3980,w,c	;volatile
  5871  000A22  0B7F               	andlw	127
  5872  000A24                     L15:
  5873  000A24  6E8C               	movwf	3980,c	;volatile
  5874                           
  5875                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  5876  000A26  A406               	btfss	LED_Control@diode,2,c
  5877  000A28  D003               	goto	l2520
  5878                           
  5879                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  5880  000A2A  508A               	movf	3978,w,c	;volatile
  5881  000A2C  0902               	iorlw	2
  5882  000A2E  D002               	goto	L16
  5883  000A30                     l2520:
  5884                           
  5885                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  5886  000A30  508A               	movf	3978,w,c	;volatile
  5887  000A32  0BFD               	andlw	253
  5888  000A34                     L16:
  5889  000A34  6E8A               	movwf	3978,c	;volatile
  5890                           
  5891                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  5892  000A36  A606               	btfss	LED_Control@diode,3,c
  5893  000A38  D003               	goto	l2526
  5894                           
  5895                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  5896  000A3A  5089               	movf	3977,w,c	;volatile
  5897  000A3C  0904               	iorlw	4
  5898  000A3E  D002               	goto	L17
  5899  000A40                     l2526:
  5900                           
  5901                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  5902  000A40  5089               	movf	3977,w,c	;volatile
  5903  000A42  0BFB               	andlw	251
  5904  000A44                     L17:
  5905  000A44  6E89               	movwf	3977,c	;volatile
  5906                           
  5907                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  5908  000A46  A806               	btfss	LED_Control@diode,4,c
  5909  000A48  D003               	goto	l2532
  5910                           
  5911                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  5912  000A4A  5089               	movf	3977,w,c	;volatile
  5913  000A4C  0910               	iorlw	16
  5914  000A4E  D002               	goto	L18
  5915  000A50                     l2532:
  5916                           
  5917                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  5918  000A50  5089               	movf	3977,w,c	;volatile
  5919  000A52  0BEF               	andlw	239
  5920  000A54                     L18:
  5921  000A54  6E89               	movwf	3977,c	;volatile
  5922                           
  5923                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  5924  000A56  AA06               	btfss	LED_Control@diode,5,c
  5925  000A58  D003               	goto	l2538
  5926                           
  5927                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  5928  000A5A  508D               	movf	3981,w,c	;volatile
  5929  000A5C  0901               	iorlw	1
  5930  000A5E  D002               	goto	L19
  5931  000A60                     l2538:
  5932                           
  5933                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  5934  000A60  508D               	movf	3981,w,c	;volatile
  5935  000A62  0BFE               	andlw	254
  5936  000A64                     L19:
  5937  000A64  6E8D               	movwf	3981,c	;volatile
  5938                           
  5939                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  5940  000A66  AC06               	btfss	LED_Control@diode,6,c
  5941  000A68  D003               	goto	l2544
  5942                           
  5943                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  5944  000A6A  508D               	movf	3981,w,c	;volatile
  5945  000A6C  0904               	iorlw	4
  5946  000A6E  D002               	goto	L20
  5947  000A70                     l2544:
  5948                           
  5949                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  5950  000A70  508D               	movf	3981,w,c	;volatile
  5951  000A72  0BFB               	andlw	251
  5952  000A74                     L20:
  5953  000A74  6E8D               	movwf	3981,c	;volatile
  5954                           
  5955                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  5956  000A76  AE06               	btfss	LED_Control@diode,7,c
  5957  000A78  D003               	goto	l2550
  5958                           
  5959                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  5960  000A7A  5089               	movf	3977,w,c	;volatile
  5961  000A7C  0940               	iorlw	64
  5962  000A7E  D002               	goto	L21
  5963  000A80                     l2550:
  5964                           
  5965                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  5966  000A80  5089               	movf	3977,w,c	;volatile
  5967  000A82  0BBF               	andlw	191
  5968  000A84                     L21:
  5969  000A84  6E89               	movwf	3977,c	;volatile
  5970                           
  5971                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  5972  000A86  A007               	btfss	LED_Control@diode+1,0,c
  5973  000A88  D003               	goto	l2556
  5974                           
  5975                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  5976  000A8A  508C               	movf	3980,w,c	;volatile
  5977  000A8C  0902               	iorlw	2
  5978  000A8E  D002               	goto	L22
  5979  000A90                     l2556:
  5980                           
  5981                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  5982  000A90  508C               	movf	3980,w,c	;volatile
  5983  000A92  0BFD               	andlw	253
  5984  000A94                     L22:
  5985  000A94  6E8C               	movwf	3980,c	;volatile
  5986                           
  5987                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  5988  000A96  A207               	btfss	LED_Control@diode+1,1,c
  5989  000A98  D004               	goto	l2562
  5990                           
  5991                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  5992  000A9A  508C               	movf	3980,w,c	;volatile
  5993  000A9C  0908               	iorlw	8
  5994  000A9E  6E8C               	movwf	3980,c	;volatile
  5995                           
  5996                           ;LED.c: 450:         }
  5997  000AA0  0012               	return	
  5998  000AA2                     l2562:
  5999                           
  6000                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  6001  000AA2  508C               	movf	3980,w,c	;volatile
  6002  000AA4  0BF7               	andlw	247
  6003  000AA6  6E8C               	movwf	3980,c	;volatile
  6004  000AA8  0012               	return		;funcret
  6005  000AAA                     __end_of_LED_Control:
  6006                           	opt callstack 0
  6007                           
  6008 ;; *************** function _INI_GlobalInterrupt *****************
  6009 ;; Defined at:
  6010 ;;		line 76 in file "INI.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		None
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;Total ram usage:        0 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    3
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_INI_All
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text46
  6039  0016BC                     __ptext46:
  6040                           	opt callstack 0
  6041  0016BC                     _INI_GlobalInterrupt:
  6042                           	opt callstack 26
  6043                           
  6044                           ;INI.c: 78: INTCONbits.GIEH=1;
  6045                           
  6046                           ;incstack = 0
  6047  0016BC  8EF2               	bsf	4082,7,c	;volatile
  6048                           
  6049                           ;INI.c: 79: INTCONbits.GIEL=1;
  6050  0016BE  8CF2               	bsf	4082,6,c	;volatile
  6051                           
  6052                           ;INI.c: 80: RCONbits.IPEN=1;
  6053  0016C0  8ED0               	bsf	4048,7,c	;volatile
  6054                           
  6055                           ;INI.c: 81: IPEN =1;
  6056  0016C2  8ED0               	bsf	4048,7,c	;volatile
  6057                           
  6058                           ;INI.c: 83: PEIE=1;
  6059  0016C4  8CF2               	bsf	4082,6,c	;volatile
  6060                           
  6061                           ;INI.c: 84: TMR1IP = 0;
  6062  0016C6  909F               	bcf	3999,0,c	;volatile
  6063  0016C8  0012               	return		;funcret
  6064  0016CA                     __end_of_INI_GlobalInterrupt:
  6065                           	opt callstack 0
  6066                           
  6067 ;; *************** function _CAN_Setup *****************
  6068 ;; Defined at:
  6069 ;;		line 23 in file "CAN.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;Total ram usage:        1 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    4
  6090 ;; This function calls:
  6091 ;;		_CAN_SetupClock
  6092 ;;		_CAN_SetupMask
  6093 ;; This function is called by:
  6094 ;;		_INI_All
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text47
  6099  0011DE                     __ptext47:
  6100                           	opt callstack 0
  6101  0011DE                     _CAN_Setup:
  6102                           	opt callstack 25
  6103                           
  6104                           ;CAN.c: 28:     CANCON = 0x80;
  6105                           
  6106                           ;incstack = 0
  6107  0011DE  0E80               	movlw	128
  6108  0011E0  6E6F               	movwf	3951,c	;volatile
  6109  0011E2                     l2984:
  6110                           
  6111                           ;CAN.c: 29:     while((CANSTAT & 0xE0)!=0x80)
  6112  0011E2  506E               	movf	3950,w,c	;volatile
  6113  0011E4  0BE0               	andlw	224
  6114  0011E6  0A80               	xorlw	128
  6115  0011E8  A4D8               	btfss	status,2,c
  6116  0011EA  D7FB               	goto	l2984
  6117                           
  6118                           ;CAN.c: 34:     BSEL0 = 0;
  6119  0011EC  0E00               	movlw	0
  6120  0011EE  010D               	movlb	13	; () banked
  6121  0011F0  6FF8               	movwf	248,b	;volatile
  6122                           
  6123                           ;CAN.c: 35:     TXB0CON = 0;
  6124  0011F2  0E00               	movlw	0
  6125  0011F4  010F               	movlb	15	; () banked
  6126  0011F6  6F40               	movwf	64,b	;volatile
  6127                           
  6128                           ;CAN.c: 36:     RXB0CON = 0;
  6129  0011F8  0E00               	movlw	0
  6130  0011FA  6E60               	movwf	3936,c	;volatile
  6131                           
  6132                           ;CAN.c: 37:     RXB1CON = 0;
  6133  0011FC  0E00               	movlw	0
  6134  0011FE  6F50               	movwf	80,b	;volatile
  6135                           
  6136                           ;CAN.c: 38:     B0CON = 0;
  6137  001200  0E00               	movlw	0
  6138  001202  010E               	movlb	14	; () banked
  6139  001204  6F20               	movwf	32,b	;volatile
  6140                           
  6141                           ;CAN.c: 39:     B1CON = 0;
  6142  001206  0E00               	movlw	0
  6143  001208  6F30               	movwf	48,b	;volatile
  6144                           
  6145                           ;CAN.c: 40:     PIE3 = 0;
  6146  00120A  0E00               	movlw	0
  6147  00120C  6EA3               	movwf	4003,c	;volatile
  6148                           
  6149                           ; BSR set to: 14
  6150                           ;CAN.c: 41:     IPR3 = 0xFF;
  6151  00120E  68A5               	setf	4005,c	;volatile
  6152                           
  6153                           ;CAN.c: 42:     PIR3 = 0x00;
  6154  001210  0E00               	movlw	0
  6155  001212  6EA4               	movwf	4004,c	;volatile
  6156                           
  6157                           ;CAN.c: 43:     BIE0 = 0;
  6158  001214  0E00               	movlw	0
  6159  001216  010D               	movlb	13	; () banked
  6160  001218  6FFA               	movwf	250,b	;volatile
  6161                           
  6162                           ;CAN.c: 45:     DaneCan.adresCAN = 0x12c;
  6163  00121A  0E01               	movlw	1
  6164  00121C  6E32               	movwf	_DaneCan+3,c
  6165  00121E  0E2C               	movlw	44
  6166  001220  6E31               	movwf	_DaneCan+2,c
  6167                           
  6168                           ;CAN.c: 47:     ECANCON = 0x90;
  6169  001222  0E90               	movlw	144
  6170  001224  6E77               	movwf	3959,c	;volatile
  6171                           
  6172                           ; BSR set to: 13
  6173                           ;CAN.c: 50:     CAN_SetupClock();
  6174  001226  ECFA  F00A         	call	_CAN_SetupClock	;wreg free
  6175                           
  6176                           ;CAN.c: 53:     CAN_SetupMask();
  6177  00122A  ECC7  F007         	call	_CAN_SetupMask	;wreg free
  6178                           
  6179                           ;CAN.c: 55:     CIOCON = 0xff;
  6180  00122E  6873               	setf	3955,c	;volatile
  6181                           
  6182                           ;CAN.c: 61:     CANCON = 0x00;
  6183  001230  0E00               	movlw	0
  6184  001232  6E6F               	movwf	3951,c	;volatile
  6185  001234                     l2996:
  6186                           
  6187                           ;CAN.c: 62:     while((CANSTAT & 0xE0) != 0x00)
  6188  001234  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  6189  001238  0EE0               	movlw	224
  6190  00123A  1606               	andwf	??_CAN_Setup,f,c
  6191  00123C  B4D8               	btfsc	status,2,c
  6192  00123E  0012               	return	
  6193  001240  D7F9               	goto	l2996
  6194  001242                     __end_of_CAN_Setup:
  6195                           	opt callstack 0
  6196                           
  6197 ;; *************** function _CAN_SetupMask *****************
  6198 ;; Defined at:
  6199 ;;		line 83 in file "CAN.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, status,2
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;Total ram usage:        0 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    3
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		_CAN_Setup
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text48
  6228  000F8E                     __ptext48:
  6229                           	opt callstack 0
  6230  000F8E                     _CAN_SetupMask:
  6231                           	opt callstack 25
  6232                           
  6233                           ;CAN.c: 85:     MSEL0 = 0x50;
  6234                           
  6235                           ;incstack = 0
  6236  000F8E  0E50               	movlw	80
  6237  000F90  010D               	movlb	13	; () banked
  6238  000F92  6FF0               	movwf	240,b	;volatile
  6239                           
  6240                           ;CAN.c: 86:     MSEL1 = 0x55;
  6241  000F94  0E55               	movlw	85
  6242  000F96  6FF1               	movwf	241,b	;volatile
  6243                           
  6244                           ;CAN.c: 87:     MSEL2 = 0x55;
  6245  000F98  0E55               	movlw	85
  6246  000F9A  6FF2               	movwf	242,b	;volatile
  6247                           
  6248                           ;CAN.c: 88:     MSEL3 = 0x55;
  6249  000F9C  0E55               	movlw	85
  6250  000F9E  6FF3               	movwf	243,b	;volatile
  6251                           
  6252                           ;CAN.c: 91:     RXM0SIDH = 0b00000000;
  6253  000FA0  0E00               	movlw	0
  6254  000FA2  010F               	movlb	15	; () banked
  6255  000FA4  6F18               	movwf	24,b	;volatile
  6256                           
  6257                           ;CAN.c: 92:     RXM0SIDL = 0b00001011;
  6258  000FA6  0E0B               	movlw	11
  6259  000FA8  6F19               	movwf	25,b	;volatile
  6260                           
  6261                           ; BSR set to: 15
  6262                           ;CAN.c: 93:     RXM0EIDH = 0xFF;
  6263  000FAA  691A               	setf	26,b	;volatile
  6264                           
  6265                           ; BSR set to: 15
  6266                           ;CAN.c: 94:     RXM0EIDL = 0xFF;
  6267  000FAC  691B               	setf	27,b	;volatile
  6268                           
  6269                           ; BSR set to: 15
  6270                           ;CAN.c: 97:     RXM1SIDH = 0xFF;
  6271  000FAE  691C               	setf	28,b	;volatile
  6272                           
  6273                           ; BSR set to: 15
  6274                           ;CAN.c: 98:     RXM1SIDL = 0xFF;
  6275  000FB0  691D               	setf	29,b	;volatile
  6276                           
  6277                           ; BSR set to: 15
  6278                           ;CAN.c: 99:     RXM1EIDH = 0xFF;
  6279  000FB2  691E               	setf	30,b	;volatile
  6280                           
  6281                           ; BSR set to: 15
  6282                           ;CAN.c: 100:     RXM1EIDL = 0xFF;
  6283  000FB4  691F               	setf	31,b	;volatile
  6284                           
  6285                           ;CAN.c: 103:     RXM0SIDH = 0x00;
  6286  000FB6  0E00               	movlw	0
  6287  000FB8  6F18               	movwf	24,b	;volatile
  6288                           
  6289                           ;CAN.c: 104:     RXM0SIDL = 0x00;
  6290  000FBA  0E00               	movlw	0
  6291  000FBC  6F19               	movwf	25,b	;volatile
  6292                           
  6293                           ;CAN.c: 109:     RXF0SIDH = 0x00;
  6294  000FBE  0E00               	movlw	0
  6295  000FC0  6F00               	movwf	0,b	;volatile
  6296                           
  6297                           ;CAN.c: 110:     RXF0SIDL = 0x01;
  6298  000FC2  0E01               	movlw	1
  6299  000FC4  6F01               	movwf	1,b	;volatile
  6300                           
  6301                           ; BSR set to: 15
  6302                           ;CAN.c: 111:     RXF0SIDLbits.EXIDEN = 1;
  6303  000FC6  8701               	bsf	1,3,b	;volatile
  6304                           
  6305                           ;CAN.c: 112:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  6306  000FC8  5032               	movf	_DaneCan+3,w,c
  6307  000FCA  6F02               	movwf	2,b	;volatile
  6308                           
  6309                           ; BSR set to: 15
  6310                           ;CAN.c: 114:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  6311  000FCC  C031  FF03         	movff	_DaneCan+2,3843	;volatile
  6312                           
  6313                           ;CAN.c: 116:     RXF1SIDH = 0x00;
  6314  000FD0  0E00               	movlw	0
  6315  000FD2  6F04               	movwf	4,b	;volatile
  6316                           
  6317                           ;CAN.c: 117:     RXF1SIDL = 0x01;
  6318  000FD4  0E01               	movlw	1
  6319  000FD6  6F05               	movwf	5,b	;volatile
  6320                           
  6321                           ; BSR set to: 15
  6322                           ;CAN.c: 118:     RXF1SIDLbits.EXIDEN = 1;
  6323  000FD8  8705               	bsf	5,3,b	;volatile
  6324                           
  6325                           ;CAN.c: 119:     RXF1EIDH = 0x7F;
  6326  000FDA  0E7F               	movlw	127
  6327  000FDC  6F06               	movwf	6,b	;volatile
  6328                           
  6329                           ; BSR set to: 15
  6330                           ;CAN.c: 120:     RXF1EIDL = 0xFF;
  6331  000FDE  6907               	setf	7,b	;volatile
  6332                           
  6333                           ;CAN.c: 123:     RXF2SIDH = 0;
  6334  000FE0  0E00               	movlw	0
  6335  000FE2  6F08               	movwf	8,b	;volatile
  6336                           
  6337                           ;CAN.c: 124:     RXF2SIDL = 0x20;
  6338  000FE4  0E20               	movlw	32
  6339  000FE6  6F09               	movwf	9,b	;volatile
  6340                           
  6341                           ; BSR set to: 15
  6342                           ;CAN.c: 125:     RXF2SIDLbits.EXIDEN = 1;
  6343  000FE8  8709               	bsf	9,3,b	;volatile
  6344                           
  6345                           ;CAN.c: 126:     RXF2EIDH = (BYTE)(NeightAdress1>>8);
  6346  000FEA  5058               	movf	_NeightAdress1+1,w,c	;volatile
  6347  000FEC  6F0A               	movwf	10,b	;volatile
  6348                           
  6349                           ; BSR set to: 15
  6350                           ;CAN.c: 127:     RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  6351  000FEE  C057  FF0B         	movff	_NeightAdress1,3851	;volatile
  6352                           
  6353                           ;CAN.c: 129:     RXF3SIDH = 0;
  6354  000FF2  0E00               	movlw	0
  6355  000FF4  6F0C               	movwf	12,b	;volatile
  6356                           
  6357                           ;CAN.c: 130:     RXF3SIDL = 0x20;
  6358  000FF6  0E20               	movlw	32
  6359  000FF8  6F0D               	movwf	13,b	;volatile
  6360                           
  6361                           ; BSR set to: 15
  6362                           ;CAN.c: 131:     RXF3SIDLbits.EXIDEN = 1;
  6363  000FFA  870D               	bsf	13,3,b	;volatile
  6364                           
  6365                           ;CAN.c: 132:     RXF3EIDH = (BYTE)(NeightAdress2>>8);
  6366  000FFC  5056               	movf	_NeightAdress2+1,w,c	;volatile
  6367  000FFE  6F0E               	movwf	14,b	;volatile
  6368                           
  6369                           ; BSR set to: 15
  6370                           ;CAN.c: 133:     RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  6371  001000  C055  FF0F         	movff	_NeightAdress2,3855	;volatile
  6372                           
  6373                           ;CAN.c: 137:     RXFBCON0 = 0b00000000;
  6374  001004  0E00               	movlw	0
  6375  001006  010D               	movlb	13	; () banked
  6376  001008  6FE0               	movwf	224,b	;volatile
  6377                           
  6378                           ;CAN.c: 139:     RXFBCON1 = 0b00010001;
  6379  00100A  0E11               	movlw	17
  6380  00100C  6FE1               	movwf	225,b	;volatile
  6381                           
  6382                           ; BSR set to: 13
  6383  00100E  0012               	return		;funcret
  6384  001010                     __end_of_CAN_SetupMask:
  6385                           	opt callstack 0
  6386                           
  6387 ;; *************** function _CAN_SetupClock *****************
  6388 ;; Defined at:
  6389 ;;		line 151 in file "CAN.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    3
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_CAN_Setup
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text49
  6418  0015F4                     __ptext49:
  6419                           	opt callstack 0
  6420  0015F4                     _CAN_SetupClock:
  6421                           	opt callstack 25
  6422                           
  6423                           ;CAN.c: 153:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6424                           
  6425                           ; BSR set to: 13
  6426                           ;incstack = 0
  6427  0015F4  8070               	bsf	3952,0,c	;volatile
  6428                           
  6429                           ;CAN.c: 154:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6430  0015F6  8270               	bsf	3952,1,c	;volatile
  6431                           
  6432                           ;CAN.c: 155:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6433  0015F8  9470               	bcf	3952,2,c	;volatile
  6434                           
  6435                           ;CAN.c: 156:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6436  0015FA  9670               	bcf	3952,3,c	;volatile
  6437                           
  6438                           ;CAN.c: 157:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6439  0015FC  9870               	bcf	3952,4,c	;volatile
  6440                           
  6441                           ;CAN.c: 158:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6442  0015FE  9A70               	bcf	3952,5,c	;volatile
  6443                           
  6444                           ;CAN.c: 160:     BRGCON1bits.SJW0 = 1;
  6445  001600  8C70               	bsf	3952,6,c	;volatile
  6446                           
  6447                           ;CAN.c: 161:     BRGCON1bits.SJW1 = 1;
  6448  001602  8E70               	bsf	3952,7,c	;volatile
  6449                           
  6450                           ;CAN.c: 163:     BRGCON2bits.SEG1PH0 = 1;
  6451  001604  8671               	bsf	3953,3,c	;volatile
  6452                           
  6453                           ;CAN.c: 164:     BRGCON2bits.SEG1PH1 = 1;
  6454  001606  8871               	bsf	3953,4,c	;volatile
  6455                           
  6456                           ;CAN.c: 165:     BRGCON2bits.SEG1PH2 = 1;
  6457  001608  8A71               	bsf	3953,5,c	;volatile
  6458                           
  6459                           ;CAN.c: 167:     BRGCON2bits.PRSEG2 = 1;
  6460  00160A  8471               	bsf	3953,2,c	;volatile
  6461                           
  6462                           ;CAN.c: 168:     BRGCON2bits.PRSEG1 = 0;
  6463  00160C  9271               	bcf	3953,1,c	;volatile
  6464                           
  6465                           ;CAN.c: 169:     BRGCON2bits.PRSEG0 = 0;
  6466  00160E  9071               	bcf	3953,0,c	;volatile
  6467                           
  6468                           ;CAN.c: 171:     BRGCON3bits.SEG2PH0 = 1;
  6469  001610  8072               	bsf	3954,0,c	;volatile
  6470                           
  6471                           ;CAN.c: 172:     BRGCON3bits.SEG2PH1 = 0;
  6472  001612  9272               	bcf	3954,1,c	;volatile
  6473                           
  6474                           ;CAN.c: 173:     BRGCON3bits.SEG2PH2 = 1;
  6475  001614  8472               	bsf	3954,2,c	;volatile
  6476                           
  6477                           ;CAN.c: 175:     BRGCON2bits.SAM = 1;
  6478  001616  8C71               	bsf	3953,6,c	;volatile
  6479                           
  6480                           ;CAN.c: 176:     BRGCON2bits.SEG2PHTS = 1;
  6481  001618  8E71               	bsf	3953,7,c	;volatile
  6482  00161A  0012               	return		;funcret
  6483  00161C                     __end_of_CAN_SetupClock:
  6484                           	opt callstack 0
  6485                           
  6486 ;; *************** function _ISR_low *****************
  6487 ;; Defined at:
  6488 ;;		line 16 in file "ISR.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      void 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;Total ram usage:        3 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    2
  6509 ;; This function calls:
  6510 ;;		_TMR1_Timer_reset
  6511 ;;		i1_TMR1_Update_flag_Set
  6512 ;; This function is called by:
  6513 ;;		Interrupt level 1
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	intcodelo
  6518  000018                     __pintcodelo:
  6519                           	opt callstack 0
  6520  000018                     _ISR_low:
  6521                           	opt callstack 24
  6522                           
  6523                           ;incstack = 0
  6524  000018  805A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6525  00001A  CFD8 F003          	movff	status,??_ISR_low
  6526  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  6527  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  6528                           
  6529                           ;ISR.c: 21:     if(TMR1IF==1)
  6530  000026  A09E               	btfss	3998,0,c	;volatile
  6531  000028  D011               	goto	i1l670
  6532                           
  6533                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6534  00002A  EC0E  F00B         	call	_TMR1_Timer_reset	;wreg free
  6535                           
  6536                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6537  00002E  0E00               	movlw	0
  6538  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6539  000032  0E01               	movlw	1
  6540  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  6541  000036  EC94  F00B         	call	i1_TMR1_Update_flag_Set	;wreg free
  6542                           
  6543                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6544  00003A  8033               	bsf	_DetectorLedRadar,0,c
  6545                           
  6546                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6547  00003C  2A4A               	incf	ISR_low@ramkaStanuU8,f,c
  6548  00003E  0E14               	movlw	20
  6549  000040  644A               	cpfsgt	ISR_low@ramkaStanuU8,c
  6550  000042  D003               	goto	i1l3276
  6551                           
  6552                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6553  000044  0E00               	movlw	0
  6554  000046  6E4A               	movwf	ISR_low@ramkaStanuU8,c
  6555                           
  6556                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6557  000048  802F               	bsf	_DaneCan,0,c
  6558  00004A                     i1l3276:
  6559                           
  6560                           ;ISR.c: 41:             TMR1IF=0;
  6561  00004A  909E               	bcf	3998,0,c	;volatile
  6562  00004C                     i1l670:
  6563  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  6564  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  6565  000054  C003  FFD8         	movff	??_ISR_low,status
  6566  000058  905A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6567  00005A  0010               	retfie	
  6568  00005C                     __end_of_ISR_low:
  6569                           	opt callstack 0
  6570                           
  6571 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6572 ;; Defined at:
  6573 ;;		line 32 in file "TMR1.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  a               2    0[COMRAM] unsigned int 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		None
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;Total ram usage:        2 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    1
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_ISR_low
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text51
  6602  001728                     __ptext51:
  6603                           	opt callstack 0
  6604  001728                     i1_TMR1_Update_flag_Set:
  6605                           	opt callstack 24
  6606                           
  6607                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6608                           
  6609                           ;incstack = 0
  6610  001728  C001  F038         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6611  00172C  C002  F039         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6612  001730  0012               	return		;funcret
  6613  001732                     __end_ofi1_TMR1_Update_flag_Set:
  6614                           	opt callstack 0
  6615                           
  6616 ;; *************** function _TMR1_Timer_reset *****************
  6617 ;; Defined at:
  6618 ;;		line 63 in file "TMR1.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;		None
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6623 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      unsigned char 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;Total ram usage:        2 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    1
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_ISR_low
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text52
  6648  00161C                     __ptext52:
  6649                           	opt callstack 0
  6650  00161C                     _TMR1_Timer_reset:
  6651                           	opt callstack 24
  6652                           
  6653                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6654                           
  6655                           ;incstack = 0
  6656  00161C  0E00               	movlw	0
  6657  00161E  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6658  001620  0E00               	movlw	0
  6659  001622  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6660                           
  6661                           ;TMR1.c: 70:     t1L = TMR1L;
  6662  001624  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6663                           
  6664                           ;TMR1.c: 71:     t1H = TMR1H;
  6665  001628  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6666                           
  6667                           ;TMR1.c: 72:     __nop();
  6668  00162C  F000               	nop	
  6669                           
  6670                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6671  00162E  0E9E               	movlw	158
  6672  001630  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6673                           
  6674                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6675  001632  0E57               	movlw	87
  6676  001634  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6677                           
  6678                           ;TMR1.c: 75:     TMR1H = t1H;
  6679  001636  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6680                           
  6681                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6682  00163A  0E5B               	movlw	91
  6683  00163C  6ECE               	movwf	4046,c	;volatile
  6684  00163E  0012               	return		;funcret
  6685  001640                     __end_of_TMR1_Timer_reset:
  6686                           	opt callstack 0
  6687                           
  6688 ;; *************** function _ISR_high *****************
  6689 ;; Defined at:
  6690 ;;		line 53 in file "ISR.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;		None
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      void 
  6697 ;; Registers used:
  6698 ;;		None
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6708 ;;Total ram usage:        0 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; This function calls:
  6711 ;;		Nothing
  6712 ;; This function is called by:
  6713 ;;		Interrupt level 2
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	intcode
  6718  000008                     __pintcode:
  6719                           	opt callstack 0
  6720  000008                     _ISR_high:
  6721                           	opt callstack 24
  6722                           
  6723                           ;incstack = 0
  6724  000008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6725  00000A  EDA1  F00B         	call	int_func,f	;refresh shadow registers
  6726                           
  6727                           	psect	intcode_body
  6728  001742                     __pintcode_body:
  6729                           	opt callstack 24
  6730  001742                     int_func:
  6731                           	opt callstack 24
  6732  001742  0006               	pop		; remove dummy address from shadow register refresh
  6733  001744  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6734  001746  0011               	retfie		f
  6735  001748                     __end_of_ISR_high:
  6736                           	opt callstack 0
  6737  0000                     
  6738                           	psect	rparam
  6739  0000                     
  6740                           	psect	temp
  6741  00005A                     btemp:
  6742                           	opt callstack 0
  6743  00005A                     	ds	1
  6744  0000                     int$flags	set	btemp
  6745  0000                     wtemp8	set	btemp+1
  6746  0000                     ttemp5	set	btemp+1
  6747  0000                     ttemp6	set	btemp+4
  6748  0000                     ttemp7	set	btemp+8
  6749                           tosu	equ	0xFFF
  6750                           tosh	equ	0xFFE
  6751                           tosl	equ	0xFFD
  6752                           stkptr	equ	0xFFC
  6753                           pclatu	equ	0xFFB
  6754                           pclath	equ	0xFFA
  6755                           pcl	equ	0xFF9
  6756                           tblptru	equ	0xFF8
  6757                           tblptrh	equ	0xFF7
  6758                           tblptrl	equ	0xFF6
  6759                           tablat	equ	0xFF5
  6760                           prodh	equ	0xFF4
  6761                           prodl	equ	0xFF3
  6762                           indf0	equ	0xFEF
  6763                           postinc0	equ	0xFEE
  6764                           postdec0	equ	0xFED
  6765                           preinc0	equ	0xFEC
  6766                           plusw0	equ	0xFEB
  6767                           fsr0h	equ	0xFEA
  6768                           fsr0l	equ	0xFE9
  6769                           wreg	equ	0xFE8
  6770                           indf1	equ	0xFE7
  6771                           postinc1	equ	0xFE6
  6772                           postdec1	equ	0xFE5
  6773                           preinc1	equ	0xFE4
  6774                           plusw1	equ	0xFE3
  6775                           fsr1h	equ	0xFE2
  6776                           fsr1l	equ	0xFE1
  6777                           bsr	equ	0xFE0
  6778                           indf2	equ	0xFDF
  6779                           postinc2	equ	0xFDE
  6780                           postdec2	equ	0xFDD
  6781                           preinc2	equ	0xFDC
  6782                           plusw2	equ	0xFDB
  6783                           fsr2h	equ	0xFDA
  6784                           fsr2l	equ	0xFD9
  6785                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         681
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      89
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 0

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 0

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _FRAME_HandleCanFrame->_FRAME_Plot
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _FRAME_DeviceReset->_FRAME_DataUpdateAndChangeOption
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18574
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   11349
                                             24 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2    9312
                                             15 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     235
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     669
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     279
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     279
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     743
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     668
                                              8 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     191
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1227
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     360
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0      66       6       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      59       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BF       3        0.0%
DATA                 0      0     2DF       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 24 16:11:12 2019

               __end_of_FRAME_DeviceReset 0BE6                     ?_FRAME_AveragingTimes 0006  
                            ___awdiv@sign 000B                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0006  
                       _FRAME_MapPosition 174C                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                        __size_of_CAN_GenID 0078  
                                     l210 0804                                       l220 037C  
                                     l221 0382                                       l222 0388  
                                     l223 038E                                       l224 0394  
                                     l313 1060                                       l225 039A  
                                     l209 0806                                       l226 03A0  
                                     l218 0376                                       l219 03E6  
                                     l341 0A00                                       l603 07E4  
                                     l604 07DC                               ?_LED_Update 0001  
                            __CFG_CPB$OFF 000000                        ??_FRAME_AxisStatus 0008  
                            __CFG_CPD$OFF 000000                        ?_FRAME_MapPosition 0006  
                      __size_of_CAN_Setup 0064                              ?_LED_Control 0006  
                                     wreg 000FE8                     __end_of_CAN_TakeFrame 05E4  
                             ?_INI_OUTPUT 0001                    __size_of_INI_LED_Start 0034  
                ??_MOCK_Klikniecie_Spadek 0008                     __end_of_CAN_SendFrame 0958  
                            __CFG_LVP$OFF 000000                 TRM_DataTransmition@weWyU8 0049  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 0008  
                            __CFG_WDT$OFF 000000                                      l1250 1396  
                                    l3002 03A6                                      l3020 04BE  
                                    l3030 04E4                                      l3022 04C4  
                                    l3104 0E1E                                      l3112 0E54  
                                    l3032 04EC                                      l3024 04CC  
                                    l3106 0E28                                      l3050 0570  
                                    l3026 04D4                                      l3018 04B8  
                                    l3042 0538                                      l3060 0598  
                                    l3052 0578                                      l3028 04DC  
                                    l3036 04F4                                      l3044 0552  
                                    l3140 0650                                      l3132 0618  
                                    l2502 09FA                                      l3054 0580  
                                    l3046 0564                                      l3038 0534  
                                    l3150 0696                                      l3142 065E  
                                    l3134 0626                                      l3214 1464  
                                    l2520 0A30                                      l3056 0588  
                                    l3048 056A                                      l3064 05A0  
                                    l2600 0D22                                      l3152 06A4  
                                    l3144 066C                                      l3136 0634  
                                    l2514 0A20                                      l2434 15CE  
                                    l3058 0590                                      l3066 05E0  
                                    l3154 06BE                                      l3146 067A  
                                    l3138 0642                                      l3162 06F8  
                         __end_of_INI_All 1696                                      l2532 0A50  
                                    l2508 0A10                                      l2460 098A  
                                    l2612 0D52                                      l3156 06CC  
                                    l3148 0688                                      l3164 0762  
                                    l2550 0A80                                      l2526 0A40  
                                    l2454 097A                                      l2630 0D9A  
                                    l2606 0D3A                                      l3158 06E2  
                                    l3246 15A2                                      l2544 0A70  
                                    l2472 09AA                                      l2448 096A  
                                    l2624 0D82                                      l3256 15C2  
                                    l2562 0AA2                                      l2538 0A60  
                                    l2490 09DA                                      l2466 099A  
                                    l3098 0DF2                                      l2618 0D6A  
                                    l2810 0C88                                      l2556 0A90  
                                    l2484 09CA                                      l2636 0DB2  
                                    l2820 0CEA                                      l2478 09BA  
                                    l3198 103C                                      l2902 0EC2  
                                    l2496 09EA                                      l2664 1364  
                                    l2752 0952                                      l2816 0CCE  
                                    l2666 136C                                      l2914 011A  
                                    l2594 0D0A                                      l2772 1422  
                                    l2676 138C                                      l2748 089E  
                                    l2916 019C                                      l2870 0B6A  
                                    l2960 0F4C                                      l2952 0F2E  
                                    l2928 0286                                      l2848 13CC  
                                    l2970 0F6C                                      l2946 0F1E  
                                    l2882 0BC2                                      l2788 14B2  
                                    l2892 1330                                      l2958 0F44  
                                    l2974 0F76                                      l2886 0BD4  
                                    l2878 0BA4                                      l2984 11E2  
                                    l2978 0F84                                      l2996 1234  
                                    _BIE0 000DFA                         _MOC_Frame_Counter 16AE  
                                    u1230 1370                                      _LATA 000F89  
                                    u1430 0AF8                                      _LATB 000F8A  
                                    _LATC 000F8B                                      u1440 0B10  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u1436 0AFA                                      u1446 0B12  
                                    u1390 13DC                                      u1295 0874  
                                    u1580 0F50                                      u1645 0450  
                                    _IPR3 000FA5                                      _IPEN 007E87  
                                    _PIE3 000FA3                                      u1690 0E5C  
                                    _PEIE 007F96                                      _LOCK 004C  
                                    _PIR3 000FA4                                      _RCON 000FD0  
             ??_FRAME_AccelerometerStatus 000A                                      _Dane 0046  
                         __end_of_ISR_low 005C                          LED_Control@diode 0006  
                    FRAME_AnalogValue@set 0008                        ?_MOC_Frame_Counter 0006  
                                    _main 159C                          LED_Control@color 000A  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 005A                            _CAN_SetupClock 15F4  
                                    prodh 000FF4                                      prodl 000FF3  
                   __end_of_CAN_SetupMask 1010             __size_of_TMR1_Update_flag_Get 000A  
                                    start 005C             __size_of_TMR1_Update_flag_Set 000A  
                      __size_of_LED_Error 001E                             __CFG_IESO$OFF 000000  
                      __size_of_LED_Right 004C             __size_of_FRAME_HandleCanFrame 0206  
                           _LED_Light_Pos 0DBC                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                       ??_MOC_Frame_Counter 0008  
              ??_MOC_Aktualna_Temperatura 0008         FRAME_HandleCanFrame@identyfikator 0018  
                      __size_of_INI_Timer 0018                 __end_of_FRAME_MapPosition 174E  
                           _NeightAdress1 0057                             _NeightAdress2 0055  
                           _NeightAdress3 0044                             _NeightAdress4 0042  
                           _NeightAdress5 0040                             _NeightAdress6 003E  
                           _NeightAdress7 003C                             _NeightAdress8 003A  
                        __end_of_LED_Left 14C6             __size_of_MOCK_PrzyspieszenieX 000A  
           __size_of_MOCK_PrzyspieszenieY 000A             __size_of_MOCK_PrzyspieszenieZ 000A  
                                   _B0CON 000E20                                     _B1CON 000E30  
                                   _B2CON 000E40                                     _B3CON 000E50  
                                   _B4CON 000E60                                     _B5CON 000E70  
                        __end_of_LOCK_Get 174C                                     ?_main 0001  
                        __end_of_LOCK_Set 1742                           __end_of___awdiv 0F8E  
                                   _BSEL0 000DF8                           ___awdiv@divisor 0008  
                                   _T1CON 000FCD                                     _IRCF0 007E9C  
                                   _IRCF1 007E9D         FRAME_ExcitationMultiplier@message 0006  
                                   _IRCF2 007E9E                           __end_of___lwdiv 13A0  
                                   i1l670 004C                       __size_of_FRAME_Plot 0058  
                         ___awdiv@counter 000A                                     _MSEL0 000DF0  
                                   _MSEL1 000DF1                                     _MSEL2 000DF2  
                                   _MSEL3 000DF3                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_PWRT$OFF 000000                                     _Flagi 002A  
                  ?_CAN_MoveBuffIntoFrame 0006                             __CFG_WRT0$OFF 000000  
              __size_of_FRAME_AnalogValue 0002                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_ISR_high 1748  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                 __end_of_MOC_Frame_Counter 16BC  
                          __CFG_EBTRB$OFF 000000                   i1TMR1_Update_flag_Set@a 0001  
                            ?_MOC_NOTWORK 0006                                     tablat 000FF5  
                  __end_of_CAN_SetupClock 161C                                     ttemp5 005B  
                                   ttemp6 005E                                     ttemp7 0062  
                                   status 000FD8                                     wtemp8 005B  
                       __end_of_CAN_GenID 1102                            __CFG_PBADEN$ON 000000  
                     __size_of_LED_Update 007A                            ?_LED_Light_Pos 000D  
                        _TMR1_Timer_reset 161C                         __end_of_CAN_Setup 1242  
                           _INI_LED_Start 1568                     _FRAME_ExcitationValue 14C6  
        FRAME_AccelerometerStatus@message 0008                           __initialization 1242  
                     __size_of_INI_OUTPUT 001E                          CAN_GenID@frameID 0008  
                            __end_of_main 15CA                    ??_FRAME_AveragingTimes 0008  
              __size_of_FRAME_DeviceReset 013C                  ?_FRAME_AdressOfNeighbors 0006  
                        CAN_GenID@message 0006                 _FRAME_AccelerometerStatus 1102  
                                  ??_main 002A                    CAN_MoveBuffIntoFrame@i 000A  
                           __activetblptr 000002                          _TMR1_Update_flag 0038  
                   __end_of_IsInNeighbors 0DBC                           _wartosciSasiada 00C6  
                               ??_INI_All 000B                         __end_of_LED_Error 165E  
                       __end_of_LED_Right 143A           __size_of_MOCK_Klikniecie_Spadek 000A  
                               ??_ISR_low 0003                                    _CANCON 000F6F  
                        ___awdiv@dividend 0006               FRAME_ExcitationMultiplier@i 0009  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 16AE                                    i1l3276 004A  
                         ?_CAN_SetupClock 0001                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 0008                            ?_INI_LED_Start 0001  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 000A  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 000D  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 000A  
                                  clear_0 126A                                    clear_1 127C  
                                  clear_2 1288                          ___awdiv@quotient 000C  
              ??_FRAME_PrzypisanieDokarty 0008                  ??i1_TMR1_Update_flag_Set 0003  
                         __CFG_BOREN$BOHW 000000                              __pdataCOMRAM 004D  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8       __size_of_FRAME_ExcitationMultiplier 004E  
              __size_of_MOC_Frame_Counter 000E                      __size_of_LED_Control 0152  
                FRAME_MapPosition@message 0006                     TMR1_Update_flag_Set@a 0006  
                              __accesstop 0060                   __end_of__initialization 128E  
                            ??_FRAME_Plot 000F                       ISR_low@ramkaStanuU8 004A  
                               ?_LED_Left 0006                           ??_LED_Light_Pos 0011  
                           ___rparam_used 000001                    ?_FRAME_ExcitationValue 0006  
                               ?_LOCK_Get 0001                                 ?_LOCK_Set 0001  
         __end_of_FRAME_AdressOfNeighbors 0368                    _MOCK_Klikniecie_Spadek 170A  
                          __pcstackCOMRAM 0001                                 LED_Left@a 0006  
                               LED_Left@b 0008                       _INI_GlobalInterrupt 16BC  
                               ?_ISR_high 0001                              ??_LED_Update 0018  
             __end_of_TRM_DataTransmition 1484                     _FRAME_SoftwareVersion 1178  
                      __end_of_FRAME_Plot 134E                              ??_INI_OUTPUT 0006  
                               LOCK_Set@k 0006                   FRAME_AxisStatus@message 0006  
             IsInNeighbors@message_adress 0006                      ?_INI_GlobalInterrupt 0001  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 000B  
                              ??_LED_Left 0008                                ??_LOCK_Get 0006  
                              ??_LOCK_Set 0006                        __end_of_LED_Update 108A  
                      __end_of_INI_OUTPUT 167C                                ??_ISR_high 0001  
                     TMR1_Timer_reset@t1H 0002                       TMR1_Timer_reset@t1L 0001  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                 ??_CAN_MoveBuffIntoFrame 000A              __end_of_TMR1_Update_flag_Get 1728  
            __end_of_TMR1_Update_flag_Set 171E           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 07EA                                   _INI_All 167C  
                __end_of_TMR1_Timer_reset 1640                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0006                                   _TXB0CON 000F40  
                                 _ISR_low 0018                                   _DaneCan 002F  
            __end_of_MOCK_PrzyspieszenieX 170A              __end_of_MOCK_PrzyspieszenieY 1700  
            __end_of_MOCK_PrzyspieszenieZ 16F6        __end_of_FRAME_ExcitationMultiplier 13EE  
              _FRAME_ExcitationMultiplier 13A0               FRAME_HandleCanFrame@message 0010  
                                 __Hparam 0000          ??_MOC_Wynikowa_wartosc_roznicowa 0008  
         ?_MOC_Wynikowa_wartosc_roznicowa 0006                                   __Lparam 0000  
                  __size_of_CAN_TakeFrame 027C                                 _CAN_GenID 108A  
                                 ___awdiv 0F0A                                 _CAN_Setup 11DE  
                  __size_of_CAN_SendFrame 016E                                   ___lwdiv 134E  
                       LED_Light_Pos@pos2 0014                                   __pcinit 1242  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 0006  
                                 __ptext0 159C                                   __ptext1 143A  
                                 __ptext2 05E4                                   __ptext3 1640  
                                 __ptext4 1178                                   __ptext5 0BE6  
                                 __ptext6 16D8                                   __ptext7 1732  
                                 __ptext8 16AE                                   __ptext9 16E2  
                  ?_FRAME_SoftwareVersion 0006                    __size_of_CAN_SetupMask 0082  
       __size_of_MOC_Aktualna_Temperatura 000A            FRAME_AdressOfNeighbors@nrRamki 0008  
               ?_MOC_Aktualna_Temperatura 0006          __size_of_FRAME_AdressOfNeighbors 0308  
                        ??_CAN_SetupClock 0006            FRAME_AdressOfNeighbors@message 0006  
                               _LED_Error 1640                            __pintcode_body 1742  
                               _LED_Right 13EE                      end_of_initialization 128E  
    FRAME_SensorExcitationStatus@statwect 0036                             __Lmediumconst 0000  
                                 int_func 1742                                 _INI_Timer 1696  
                  i1_TMR1_Update_flag_Set 1728          TRM_DataTransmition@czujnikWeWyU8 0048  
                              ?_CAN_GenID 0006                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ?_CAN_Setup 0001  
           __size_of_FRAME_AveragingTimes 0036                      CAN_SendFrame@message 000B  
                           LED_Update@Red 004B                             _CAN_TakeFrame 0368  
                           _CAN_SendFrame 07EA                                ?_LED_Error 0001  
             FRAME_AdressOfNeighbors@kier 000E                                ?_LED_Right 0006  
                        _FRAME_AxisStatus 14FC                   ??_FRAME_ExcitationValue 0008  
                              ?_INI_Timer 0001                   ?_MOCK_Klikniecie_Spadek 0006  
                         _ramkaCanRxKarty 0060                      _TMR1_Update_flag_Get 171E  
                         _ramkaCanTxKarty 00B5                      _TMR1_Update_flag_Set 1714  
                           _CAN_SetupMask 0F8E                         __size_of_LED_Left 0042  
                    _FRAME_HandleCanFrame 05E4                    __size_of_IsInNeighbors 00CA  
                       __size_of_LOCK_Get 0004                         __size_of_LOCK_Set 0008  
                          CAN_TakeFrame@k 0013                             __pidataCOMRAM 16CA  
                       __size_of_ISR_high 1740                      _MOCK_PrzyspieszenieX 1700  
                    _MOCK_PrzyspieszenieY 16F6                      _MOCK_PrzyspieszenieZ 16EC  
                              LED_Right@a 0006                                LED_Right@b 000A  
                   MOC_Frame_Counter@zeta 004D                             ??_LED_Control 0008  
                     start_initialization 1242                            ?_CAN_TakeFrame 000E  
                          ?_CAN_SendFrame 000B           FRAME_SensorExcitationStatus@tru 000C  
          __end_of_MOCK_Klikniecie_Spadek 1714                          __CFG_OSC$IRCIO67 000000  
       __size_of_FRAME_PrzypisanieDokarty 009E                 ?_FRAME_PrzypisanieDokarty 0006  
                   ?_TMR1_Update_flag_Get 0006                     ?_TMR1_Update_flag_Set 0006  
                          ?_CAN_SetupMask 0001                     __end_of_LED_Light_Pos 0E6C  
                   ?_FRAME_HandleCanFrame 0010                               ??_CAN_GenID 0009  
                             ??_CAN_Setup 0006                          __CFG_LPT1OSC$OFF 000000  
                   ?_MOCK_PrzyspieszenieX 0006                     ?_MOCK_PrzyspieszenieY 0006  
                   ?_MOCK_PrzyspieszenieZ 0006                  CAN_MoveBuffIntoFrame@Buf 0008  
    __end_of_FRAME_SensorExcitationStatus 0CF2     __size_of_FRAME_SensorExcitationStatus 010C  
                CAN_MoveBuffIntoFrame@Ram 0006              _FRAME_SensorExcitationStatus 0BE6  
          __size_of_CAN_MoveBuffIntoFrame 002A                               __pbssBIGRAM 00C6  
           __end_of_CAN_MoveBuffIntoFrame 15F4                           _Fulfillment_Lvl 0053  
                             __pbssCOMRAM 002A                                  ?_INI_All 0001  
                 _FRAME_AdressOfNeighbors 0060                             _IsInNeighbors 0CF2  
                       ?_TMR1_Timer_reset 0001                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0001   __end_of_FRAME_DataUpdateAndChangeOption 12F6  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 0008  
        ?_FRAME_DataUpdateAndChangeOption 0006           _FRAME_DataUpdateAndChangeOption 129C  
                           ??_MOC_NOTWORK 0008                        ??_TMR1_Timer_reset 0001  
                             ??_LED_Error 000B                               ??_LED_Right 0008  
            __size_of_TRM_DataTransmition 004A                       __end_of_LED_Control 0AAA  
             ?_FRAME_ExcitationMultiplier 0006                               ??_INI_Timer 0006  
                   __end_of_INI_LED_Start 159C                          ___lwdiv@dividend 0006  
                               __pintcode 0008                                  ?___awdiv 0006  
                 ??_FRAME_SoftwareVersion 0008          __end_of_MOC_Aktualna_Temperatura 16EC  
                                ?___lwdiv 0006                         FRAME_Plot@message 000D  
                             __pintcodelo 0018               __end_of_INI_GlobalInterrupt 16CA  
                         ??_CAN_TakeFrame 0010             ?_FRAME_SensorExcitationStatus 0008  
  __end_of_MOC_Wynikowa_wartosc_roznicowa 16E2   __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
          _MOC_Wynikowa_wartosc_roznicowa 16D8                               _COMSTATbits 000F74  
                          ?_IsInNeighbors 0006                           ??_CAN_SendFrame 000D  
                        ___lwdiv@quotient 000A                   ?i1_TMR1_Update_flag_Set 0001  
             FRAME_AveragingTimes@message 0006                    ??_TMR1_Update_flag_Get 0008  
                  ??_TMR1_Update_flag_Set 0008                           ??_CAN_SetupMask 0006  
                                _LED_Left 1484                    ??_FRAME_HandleCanFrame 0012  
                    CAN_TakeFrame@message 000E                       __end_of_MOC_NOTWORK 173A  
                                _LOCK_Get 1748                      CAN_TakeFrame@tempCON 0012  
                                _LOCK_Set 173A                                  _RXB0EIDH 000F63  
                                _RXB0EIDL 000F64                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXF0EIDH 000F02  
                                _RXF0EIDL 000F03                                  _RXF1EIDH 000F06  
                                _RXF1EIDL 000F07                                  _RXF2EIDH 000F0A  
                                _RXF2EIDL 000F0B                                  _RXF3EIDH 000F0E  
                                _RXF3EIDL 000F0F                                  _RXF0SIDH 000F00  
                                _RXF0SIDL 000F01                                  _RXF1SIDH 000F04  
                                _RXF1SIDL 000F05                                  _RXF2SIDH 000F08  
                                _RXF2SIDL 000F09                                  _RXF3SIDH 000F0C  
                                _RXF3SIDL 000F0D                                  _ISR_high 0008  
                                _RXM0EIDH 000F1A                                  _RXM0EIDL 000F1B  
                                _RXM1EIDH 000F1E                                  _RXM1EIDL 000F1F  
                  ??_MOCK_PrzyspieszenieX 0008                    ??_MOCK_PrzyspieszenieY 0008  
                  ??_MOCK_PrzyspieszenieZ 0008                                  _RXFBCON0 000DE0  
                                _RXFBCON1 000DE1                                  _RXM0SIDH 000F18  
                                _RXM0SIDL 000F19                                  _RXM1SIDH 000F1C  
                                _RXM1SIDL 000F1D                  __end_of_FRAME_AxisStatus 1532  
               ??_FRAME_AdressOfNeighbors 000A                          _DetectorLedRadar 0033  
                             _LED_Control 0958                          __size_of_INI_All 001A  
            FRAME_ExcitationValue@message 0006            __end_ofi1_TMR1_Update_flag_Set 1732  
                               copy_data0 1256                          __size_of_ISR_low 0044  
      __size_of_FRAME_AccelerometerStatus 0076              __end_of_FRAME_AveragingTimes 1568  
              ?_FRAME_AccelerometerStatus 0008            __size_of_FRAME_ExcitationValue 0036  
           __end_of_FRAME_ExcitationValue 14FC                                  __Hrparam 0000  
                            _RXB0SIDLbits 000F62                                  __Lrparam 0000  
                        __size_of___awdiv 0084                          __size_of___lwdiv 0052  
                         ??_IsInNeighbors 0008                  _MOC_Aktualna_Temperatura 16E2  
         FRAME_PrzypisanieDokarty@message 0006                        LED_Light_Pos@flage 0016  
                      LED_Light_Pos@color 0011          __end_of_FRAME_PrzypisanieDokarty 0F0A  
                            _RXF0SIDLbits 000F01                  FRAME_AnalogValue@message 0006  
                         ___lwdiv@divisor 0008                              _RXF1SIDLbits 000F05  
                         ___lwdiv@counter 000C                                  __ptext10 173A  
                                __ptext11 1748                                  __ptext20 14FC  
                                __ptext12 0CF2                                  __ptext21 1532  
                                __ptext13 0E6C                                  __ptext30 108A  
                                __ptext22 174E                                  __ptext14 12F6  
                                __ptext31 0368                                  __ptext23 0060  
                                __ptext15 174C                                  __ptext40 1484  
                                __ptext32 0F0A                                  __ptext24 1102  
                                __ptext16 14C6                                  __ptext41 167C  
                                __ptext33 15CA                                  __ptext25 16EC  
                                __ptext17 13A0                                  __ptext42 1696  
                                __ptext34 1714                                  __ptext26 16F6  
                                __ptext18 0AAA                                  __ptext51 1728  
                                __ptext43 165E                                  __ptext35 171E  
                                __ptext27 1700                                  __ptext19 129C  
                                __ptext52 161C                                  __ptext44 1568  
                                __ptext36 1010                                  __ptext28 170A  
          ??_FRAME_SensorExcitationStatus 000A                                  __ptext45 0958  
                                __ptext37 0DBC                                  __ptext29 07EA  
                                __ptext46 16BC                                  __ptext38 134E  
                                __ptext47 11DE                                  __ptext39 13EE  
                                __ptext48 0F8E                                  __ptext49 15F4  
           TRM_DataTransmition@canMessage 0019                              _RXF2SIDLbits 000F09  
                             _MOC_NOTWORK 1732                              _RXF3SIDLbits 000F0D  
               FRAME_HandleCanFrame@ident 0016                  FRAME_DeviceReset@message 0009  
       __end_of_FRAME_AccelerometerStatus 1178                                _FRAME_Plot 12F6  
                           __size_of_main 002E                   __size_of_CAN_SetupClock 0028  
                                int$flags 005A                       _TRM_DataTransmition 143A  
                             _RXB0DLCbits 000F65                                _LED_Update 1010  
                             _RXB0CONbits 000F60                                _INTCONbits 000FF2  
                              _INI_OUTPUT 165E                         _FRAME_AnalogValue 174E  
                    ?_TRM_DataTransmition 0001              FRAME_SoftwareVersion@message 0006  
                                intlevel1 0000                                  intlevel2 0000  
                      ?_FRAME_AnalogValue 0006       FRAME_SensorExcitationStatus@message 0008  
                             _TXB0CONbits 000F40                       ??_FRAME_AnalogValue 000A  
               __size_of_TMR1_Timer_reset 0024                  LED_Light_Pos@fulfillment 000F  
                    _FRAME_AveragingTimes 1532            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0AAA             __end_of_FRAME_SoftwareVersion 11DE  
                      ?_FRAME_DeviceReset 0009                           LED_Update@Green 0059  
               __end_of_FRAME_AnalogValue 1750                    __size_of_LED_Light_Pos 00B0  
                   _CAN_MoveBuffIntoFrame 15CA                                _WDTCONbits 000FD1  
                     ??_FRAME_DeviceReset 000B                     ??_TRM_DataTransmition 0019  
                _FRAME_PrzypisanieDokarty 0E6C                    LED_Light_Pos@LED_array 0012  
                          LED_Update@pos1 0051                            LED_Update@pos2 004F  
                             ?_FRAME_Plot 000D  
