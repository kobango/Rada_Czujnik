

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 15:18:57 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           ; Version 2.05
    65                           ; Generated 20/12/2018 GMT
    66                           ; 
    67                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4680 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataCOMRAM
   100  000FBA                     __pidataCOMRAM:
   101                           	opt callstack 0
   102                           
   103                           ;initializer for LED_Update@pos2
   104  000FBA  0001               	dw	1
   105                           
   106                           ;initializer for LED_Update@pos1
   107  000FBC  0001               	dw	1
   108                           
   109                           ;initializer for _Fulfillment_Lvl
   110  000FBE  0014               	dw	20
   111                           
   112                           ;initializer for LED_Update@Green
   113  000FC0  01                 	db	1
   114  0000                     _RXFCON0	set	3540
   115  0000                     _MSEL3	set	3571
   116  0000                     _MSEL2	set	3570
   117  0000                     _MSEL1	set	3569
   118  0000                     _MSEL0	set	3568
   119  0000                     _BIE0	set	3578
   120  0000                     _BSEL0	set	3576
   121  0000                     _B5CON	set	3696
   122  0000                     _B4CON	set	3680
   123  0000                     _B3CON	set	3664
   124  0000                     _B2CON	set	3648
   125  0000                     _B1CON	set	3632
   126  0000                     _B0CON	set	3616
   127  0000                     _TXB0CONbits	set	3904
   128  0000                     _RXF2EIDL	set	3851
   129  0000                     _RXF2EIDH	set	3850
   130  0000                     _RXF2SIDLbits	set	3849
   131  0000                     _RXF2SIDL	set	3849
   132  0000                     _RXF2SIDH	set	3848
   133  0000                     _RXF1EIDL	set	3847
   134  0000                     _RXF1EIDH	set	3846
   135  0000                     _RXF1SIDLbits	set	3845
   136  0000                     _RXF1SIDL	set	3845
   137  0000                     _RXF1SIDH	set	3844
   138  0000                     _RXF0EIDL	set	3843
   139  0000                     _RXF0EIDH	set	3842
   140  0000                     _RXF0SIDLbits	set	3841
   141  0000                     _RXF0SIDL	set	3841
   142  0000                     _RXF0SIDH	set	3840
   143  0000                     _RXM1EIDL	set	3871
   144  0000                     _RXM1EIDH	set	3870
   145  0000                     _RXM1SIDL	set	3869
   146  0000                     _RXM1SIDH	set	3868
   147  0000                     _RXM0EIDL	set	3867
   148  0000                     _RXM0EIDH	set	3866
   149  0000                     _RXM0SIDL	set	3865
   150  0000                     _RXM0SIDH	set	3864
   151  0000                     _RXB1CON	set	3920
   152  0000                     _TXB0CON	set	3904
   153  0000                     _TRISC	set	3988
   154  0000                     _LATC	set	3979
   155  0000                     _LATE	set	3981
   156  0000                     _LATA	set	3977
   157  0000                     _LATB	set	3978
   158  0000                     _LATD	set	3980
   159  0000                     _TRISD	set	3989
   160  0000                     _TRISE	set	3990
   161  0000                     _TRISB	set	3987
   162  0000                     _TRISA	set	3986
   163  0000                     _RXB0DLCbits	set	3941
   164  0000                     _RXB0DLC	set	3941
   165  0000                     _RXB0SIDH	set	3937
   166  0000                     _RXB0SIDLbits	set	3938
   167  0000                     _RXB0SIDL	set	3938
   168  0000                     _RXB0EIDH	set	3939
   169  0000                     _RXB0EIDL	set	3940
   170  0000                     _COMSTATbits	set	3956
   171  0000                     _RXB0CONbits	set	3936
   172  0000                     _BRGCON3bits	set	3954
   173  0000                     _BRGCON2bits	set	3953
   174  0000                     _BRGCON1bits	set	3952
   175  0000                     _CIOCON	set	3955
   176  0000                     _ECANCON	set	3959
   177  0000                     _RXB0CON	set	3936
   178  0000                     _CANSTAT	set	3950
   179  0000                     _CANCON	set	3951
   180  0000                     _RXB0D0	set	3942
   181  0000                     _WDTCONbits	set	4049
   182  0000                     _RCONbits	set	4048
   183  0000                     _T1CON	set	4045
   184  0000                     _TMR1H	set	4047
   185  0000                     _TMR1L	set	4046
   186  0000                     _PIR3	set	4004
   187  0000                     _IPR3	set	4005
   188  0000                     _PIE3	set	4003
   189  0000                     _RCON	set	4048
   190  0000                     _TMR1IF	set	31984
   191  0000                     _TMR1IP	set	31992
   192  0000                     _IPEN	set	32391
   193  0000                     _TMR1ON	set	32360
   194  0000                     _TMR1IE	set	31976
   195  0000                     _IRCF0	set	32412
   196  0000                     _IRCF1	set	32413
   197  0000                     _IRCF2	set	32414
   198  0000                     _INTCONbits	set	4082
   199  0000                     _PEIE	set	32662
   200                           
   201                           ; #config settings
   202  0000                     
   203                           	psect	cinit
   204  000C80                     __pcinit:
   205                           	opt callstack 0
   206  000C80                     start_initialization:
   207                           	opt callstack 0
   208  000C80                     __initialization:
   209                           	opt callstack 0
   210                           
   211                           ; Initialize objects allocated to COMRAM (7 bytes)
   212                           ; load TBLPTR registers with __pidataCOMRAM
   213  000C80  0EBA               	movlw	low __pidataCOMRAM
   214  000C82  6EF6               	movwf	tblptrl,c
   215  000C84  0E0F               	movlw	high __pidataCOMRAM
   216  000C86  6EF7               	movwf	tblptrh,c
   217  000C88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   218  000C8A  6EF8               	movwf	tblptru,c
   219  000C8C  EE00  F043         	lfsr	0,__pdataCOMRAM
   220  000C90  EE10 F007          	lfsr	1,7
   221  000C94                     copy_data0:
   222  000C94  0009               	tblrd		*+
   223  000C96  CFF5 FFEE          	movff	tablat,postinc0
   224  000C9A  50E5               	movf	postdec1,w,c
   225  000C9C  50E1               	movf	fsr1l,w,c
   226  000C9E  E1FA               	bnz	copy_data0
   227                           
   228                           ; Clear objects allocated to BANK0 (85 bytes)
   229  000CA0  EE00  F060         	lfsr	0,__pbssBANK0
   230  000CA4  0E55               	movlw	85
   231  000CA6                     clear_0:
   232  000CA6  6AEE               	clrf	postinc0,c
   233  000CA8  06E8               	decf	wreg,f,c
   234  000CAA  E1FD               	bnz	clear_0
   235                           
   236                           ; Clear objects allocated to COMRAM (29 bytes)
   237  000CAC  EE00  F026         	lfsr	0,__pbssCOMRAM
   238  000CB0  0E1D               	movlw	29
   239  000CB2                     clear_1:
   240  000CB2  6AEE               	clrf	postinc0,c
   241  000CB4  06E8               	decf	wreg,f,c
   242  000CB6  E1FD               	bnz	clear_1
   243  000CB8                     end_of_initialization:
   244                           	opt callstack 0
   245  000CB8                     __end_of__initialization:
   246                           	opt callstack 0
   247  000CB8  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   248  000CBA  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   249  000CBC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   250  000CBE  6EF8               	movwf	tblptru,c
   251  000CC0  0100               	movlb	0
   252  000CC2  EF0A  F007         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMRAM
   255  000026                     __pbssCOMRAM:
   256                           	opt callstack 0
   257  000026                     _ramkaCanTxKarty:
   258                           	opt callstack 0
   259  000026                     	ds	17
   260  000037                     _DaneCan:
   261                           	opt callstack 0
   262  000037                     	ds	4
   263  00003B                     _TMR1_Update_flag:
   264                           	opt callstack 0
   265  00003B                     	ds	2
   266  00003D                     _DetectorLedRadar:
   267                           	opt callstack 0
   268  00003D                     	ds	2
   269  00003F                     	ds	1
   270  000040                     	ds	1
   271  000041                     ISR_low@ramkaStanuU8:
   272                           	opt callstack 0
   273  000041                     	ds	1
   274  000042                     	ds	1
   275                           
   276                           	psect	dataCOMRAM
   277  000043                     __pdataCOMRAM:
   278                           	opt callstack 0
   279  000043                     LED_Update@pos2:
   280                           	opt callstack 0
   281  000043                     	ds	2
   282  000045                     LED_Update@pos1:
   283                           	opt callstack 0
   284  000045                     	ds	2
   285  000047                     _Fulfillment_Lvl:
   286                           	opt callstack 0
   287  000047                     	ds	2
   288  000049                     LED_Update@Green:
   289                           	opt callstack 0
   290  000049                     	ds	1
   291                           
   292                           	psect	bssBANK0
   293  000060                     __pbssBANK0:
   294                           	opt callstack 0
   295  000060                     _ramkaCanRxKarty:
   296                           	opt callstack 0
   297  000060                     	ds	85
   298                           
   299                           	psect	cstackCOMRAM
   300  000001                     __pcstackCOMRAM:
   301                           	opt callstack 0
   302  000001                     TMR1_Timer_reset@t1L:
   303                           	opt callstack 0
   304  000001                     i1TMR1_Update_flag_Set@a:
   305                           	opt callstack 0
   306                           
   307                           ; 2 bytes @ 0x0
   308  000001                     	ds	1
   309  000002                     TMR1_Timer_reset@t1H:
   310                           	opt callstack 0
   311                           
   312                           ; 1 bytes @ 0x1
   313  000002                     	ds	1
   314  000003                     ??_ISR_low:
   315  000003                     
   316                           ; 1 bytes @ 0x2
   317  000003                     	ds	3
   318  000006                     ??_CAN_Setup:
   319  000006                     ?_TMR1_Update_flag_Get:
   320                           	opt callstack 0
   321  000006                     ?_LED_Right:
   322                           	opt callstack 0
   323  000006                     ?_LED_Left:
   324                           	opt callstack 0
   325  000006                     ?_MOC_StanWzbudzenia:
   326                           	opt callstack 0
   327  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   328                           	opt callstack 0
   329  000006                     ?_MOC_Frame_Counter:
   330                           	opt callstack 0
   331  000006                     ?_MOC_Aktualna_Temperatura:
   332                           	opt callstack 0
   333  000006                     ?_MOC_NOTWORK:
   334                           	opt callstack 0
   335  000006                     ?_MOC_RSSI_ramki:
   336                           	opt callstack 0
   337  000006                     ?_MOC_LQI_ramki:
   338                           	opt callstack 0
   339  000006                     ?___awdiv:
   340                           	opt callstack 0
   341  000006                     ?___lwdiv:
   342                           	opt callstack 0
   343  000006                     CAN_MoveBuffIntoFrame@Ram:
   344                           	opt callstack 0
   345  000006                     CAN_GenID@message:
   346                           	opt callstack 0
   347  000006                     LED_Right@a:
   348                           	opt callstack 0
   349  000006                     LED_Left@a:
   350                           	opt callstack 0
   351  000006                     LED_Control@diode:
   352                           	opt callstack 0
   353  000006                     TMR1_Update_flag_Set@a:
   354                           	opt callstack 0
   355  000006                     FRAME_AccelerometerStatus@message:
   356                           	opt callstack 0
   357  000006                     FRAME_ExcitationValue@message:
   358                           	opt callstack 0
   359  000006                     FRAME_ExcitationMultiplier@message:
   360                           	opt callstack 0
   361  000006                     FRAME_AveragingTimes@message:
   362                           	opt callstack 0
   363  000006                     FRAME_AxisStatus@message:
   364                           	opt callstack 0
   365  000006                     FRAME_DeviceReset@message:
   366                           	opt callstack 0
   367  000006                     FRAME_Plot@message:
   368                           	opt callstack 0
   369  000006                     FRAME_MapPosition@message:
   370                           	opt callstack 0
   371  000006                     FRAME_SoftwareVersion@message:
   372                           	opt callstack 0
   373  000006                     FRAME_AnalogValue@message:
   374                           	opt callstack 0
   375  000006                     FRAME_AdressOfNeighbors@message:
   376                           	opt callstack 0
   377  000006                     ___awdiv@dividend:
   378                           	opt callstack 0
   379  000006                     ___lwdiv@dividend:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x5
   383  000006                     	ds	2
   384  000008                     ??_LED_Right:
   385  000008                     CAN_GenID@frameID:
   386                           	opt callstack 0
   387  000008                     CAN_MoveBuffIntoFrame@Buf:
   388                           	opt callstack 0
   389  000008                     LED_Left@b:
   390                           	opt callstack 0
   391  000008                     FRAME_SensorExcitationStatus@message:
   392                           	opt callstack 0
   393  000008                     FRAME_AnalogValue@set:
   394                           	opt callstack 0
   395  000008                     FRAME_AdressOfNeighbors@nrRamki:
   396                           	opt callstack 0
   397  000008                     ___awdiv@divisor:
   398                           	opt callstack 0
   399  000008                     ___lwdiv@divisor:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x7
   403  000008                     	ds	1
   404  000009                     FRAME_ExcitationMultiplier@i:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x8
   408  000009                     	ds	1
   409  00000A                     CAN_MoveBuffIntoFrame@i:
   410                           	opt callstack 0
   411  00000A                     LED_Control@color:
   412                           	opt callstack 0
   413  00000A                     ___awdiv@counter:
   414                           	opt callstack 0
   415  00000A                     LED_Right@b:
   416                           	opt callstack 0
   417  00000A                     ___lwdiv@quotient:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x9
   421  00000A                     	ds	1
   422  00000B                     ___awdiv@sign:
   423                           	opt callstack 0
   424  00000B                     CAN_SendFrame@message:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0xA
   428  00000B                     	ds	1
   429  00000C                     ___lwdiv@counter:
   430                           	opt callstack 0
   431  00000C                     ___awdiv@quotient:
   432                           	opt callstack 0
   433                           
   434                           ; 2 bytes @ 0xB
   435  00000C                     	ds	1
   436  00000D                     ??_CAN_SendFrame:
   437  00000D                     LED_Light_Pos@pos:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0xC
   441  00000D                     	ds	1
   442  00000E                     CAN_TakeFrame@message:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0xD
   446  00000E                     	ds	1
   447  00000F                     LED_Light_Pos@fulfillment:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0xE
   451  00000F                     	ds	1
   452  000010                     ??_CAN_TakeFrame:
   453  000010                     FRAME_HandleCanFrame@message:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0xF
   457  000010                     	ds	1
   458  000011                     LED_Light_Pos@color:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x10
   462  000011                     	ds	1
   463  000012                     ??_FRAME_HandleCanFrame:
   464  000012                     CAN_TakeFrame@tempCON:
   465                           	opt callstack 0
   466  000012                     LED_Light_Pos@LED_array:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x11
   470  000012                     	ds	1
   471  000013                     CAN_TakeFrame@k:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0x12
   475  000013                     	ds	1
   476  000014                     FRAME_HandleCanFrame@identyfikator:
   477                           	opt callstack 0
   478  000014                     LED_Light_Pos@pos2:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x13
   482  000014                     	ds	1
   483  000015                     TRM_DataTransmition@canMessage:
   484                           	opt callstack 0
   485                           
   486                           ; 17 bytes @ 0x14
   487  000015                     	ds	1
   488  000016                     LED_Light_Pos@flage:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x15
   492  000016                     	ds	2
   493  000018                     
   494                           ; 1 bytes @ 0x17
   495  000018                     	ds	14
   496  000026                     
   497                           ; 1 bytes @ 0x25
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 89 in file "main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels required when called:    7
   523 ;; This function calls:
   524 ;;		_INI_All
   525 ;;		_LED_Update
   526 ;;		_TMR1_Update_flag_Get
   527 ;;		_TMR1_Update_flag_Set
   528 ;;		_TRM_DataTransmition
   529 ;; This function is called by:
   530 ;;		Startup code after reset
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text0
   535  000E14                     __ptext0:
   536                           	opt callstack 0
   537  000E14                     _main:
   538                           	opt callstack 24
   539                           
   540                           ;main.c: 91:     INI_All();
   541                           
   542                           ;incstack = 0
   543  000E14  EC8B  F007         	call	_INI_All	;wreg free
   544                           
   545                           ;main.c: 93:     RCON = 0xFF;
   546  000E18  68D0               	setf	4048,c	;volatile
   547  000E1A                     l2727:
   548                           
   549                           ;main.c: 96:     {;main.c: 97:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   550  000E1A  B03D               	btfsc	_DetectorLedRadar,0,c
   551                           
   552                           ;main.c: 98:         {;main.c: 99:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   553  000E1C  903D               	bcf	_DetectorLedRadar,0,c
   554                           
   555                           ;main.c: 103:         if(TMR1_Update_flag_Get()==1)
   556  000E1E  ECD3  F007         	call	_TMR1_Update_flag_Get	;wreg free
   557  000E22  0406               	decf	?_TMR1_Update_flag_Get,w,c
   558  000E24  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   559  000E26  A4D8               	btfss	status,2,c
   560  000E28  D008               	goto	l2737
   561                           
   562                           ;main.c: 104:         {;main.c: 105:             LED_Update();
   563  000E2A  EC9F  F005         	call	_LED_Update	;wreg free
   564                           
   565                           ;main.c: 106:             TMR1_Update_flag_Set(0);
   566  000E2E  0E00               	movlw	0
   567  000E30  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   568  000E32  0E00               	movlw	0
   569  000E34  6E06               	movwf	TMR1_Update_flag_Set@a,c
   570  000E36  ECCE  F007         	call	_TMR1_Update_flag_Set	;wreg free
   571  000E3A                     l2737:
   572                           
   573                           ;main.c: 110:         TRM_DataTransmition();
   574  000E3A  EC74  F005         	call	_TRM_DataTransmition	;wreg free
   575  000E3E  0004               	clrwdt		;# 
   576                           
   577                           ;main.c: 112:     }
   578  000E40  D7EC               	goto	l2727
   579  000E42                     __end_of_main:
   580                           	opt callstack 0
   581                           
   582 ;; *************** function _TRM_DataTransmition *****************
   583 ;; Defined at:
   584 ;;		line 16 in file "TRM.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  canMessage     17   20[COMRAM] struct .
   589 ;;  i               1    0        unsigned char 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   600 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   602 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   603 ;;Total ram usage:       17 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    6
   606 ;; This function calls:
   607 ;;		_CAN_TakeFrame
   608 ;;		_FRAME_HandleCanFrame
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text1
   615  000AE8                     __ptext1:
   616                           	opt callstack 0
   617  000AE8                     _TRM_DataTransmition:
   618                           	opt callstack 24
   619                           
   620                           ;TRM.c: 18:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 19:     BYTE i;;TRM.c:
      +                           20:     mID canMessage;;TRM.c: 23:     if(DaneCan.Flags.wyslijRamkeStanu)
   621                           
   622                           ;incstack = 0
   623  000AE8  A037               	btfss	_DaneCan,0,c
   624  000AEA  D013               	goto	l2697
   625                           
   626                           ;TRM.c: 24:     {;TRM.c: 26:         canMessage.message_type = 0x02;
   627  000AEC  0E02               	movlw	2
   628  000AEE  6E16               	movwf	TRM_DataTransmition@canMessage+1,c
   629                           
   630                           ;TRM.c: 27:         canMessage.id.Val = 0;
   631  000AF0  0E00               	movlw	0
   632  000AF2  6E19               	movwf	TRM_DataTransmition@canMessage+4,c
   633  000AF4  0E00               	movlw	0
   634  000AF6  6E1A               	movwf	TRM_DataTransmition@canMessage+5,c
   635  000AF8  0E00               	movlw	0
   636  000AFA  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   637  000AFC  0E00               	movlw	0
   638  000AFE  6E1C               	movwf	TRM_DataTransmition@canMessage+7,c
   639                           
   640                           ;TRM.c: 28:         canMessage.id.v[2] = 0x01 *4;
   641  000B00  0E04               	movlw	4
   642  000B02  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   643                           
   644                           ;TRM.c: 29:         FRAME_HandleCanFrame(&canMessage);
   645  000B04  0E15               	movlw	low TRM_DataTransmition@canMessage
   646  000B06  6E10               	movwf	FRAME_HandleCanFrame@message,c
   647  000B08  0E00               	movlw	high TRM_DataTransmition@canMessage
   648  000B0A  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   649  000B0C  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   650                           
   651                           ;TRM.c: 46:         DaneCan.Flags.wyslijRamkeStanu = 0;
   652  000B10  9037               	bcf	_DaneCan,0,c
   653  000B12                     l2697:
   654                           
   655                           ;TRM.c: 56:     if(CAN_TakeFrame(&canMessage))
   656  000B12  0E15               	movlw	low TRM_DataTransmition@canMessage
   657  000B14  6E0E               	movwf	CAN_TakeFrame@message,c
   658  000B16  0E00               	movlw	high TRM_DataTransmition@canMessage
   659  000B18  6E0F               	movwf	CAN_TakeFrame@message+1,c
   660  000B1A  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   661  000B1E  0900               	iorlw	0
   662  000B20  B4D8               	btfsc	status,2,c
   663  000B22  0012               	return	
   664                           
   665                           ;TRM.c: 57:     {;TRM.c: 58:         if((canMessage.buffer == 0) || (canMessage.buffer =
      +                          = 1))
   666  000B24  5018               	movf	TRM_DataTransmition@canMessage+3,w,c
   667  000B26  B4D8               	btfsc	status,2,c
   668  000B28  D003               	goto	u1320
   669  000B2A  0418               	decf	TRM_DataTransmition@canMessage+3,w,c
   670  000B2C  A4D8               	btfss	status,2,c
   671  000B2E  0012               	return	
   672  000B30                     u1320:
   673                           
   674                           ;TRM.c: 59:         {;TRM.c: 60:             FRAME_HandleCanFrame(&canMessage);
   675  000B30  0E15               	movlw	low TRM_DataTransmition@canMessage
   676  000B32  6E10               	movwf	FRAME_HandleCanFrame@message,c
   677  000B34  0E00               	movlw	high TRM_DataTransmition@canMessage
   678  000B36  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   679  000B38  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   680                           
   681                           ;TRM.c: 61:         }
   682  000B3C  0012               	return		;funcret
   683  000B3E                     __end_of_TRM_DataTransmition:
   684                           	opt callstack 0
   685                           
   686 ;; *************** function _FRAME_HandleCanFrame *****************
   687 ;; Defined at:
   688 ;;		line 441 in file "FRAME.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  message         2   15[COMRAM] PTR struct .
   691 ;;		 -> TRM_DataTransmition@canMessage(17), 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  identyfikato    1   19[COMRAM] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   706 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   707 ;;Total ram usage:        5 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    5
   710 ;; This function calls:
   711 ;;		_CAN_GenID
   712 ;;		_CAN_SendFrame
   713 ;;		_FRAME_AccelerometerStatus
   714 ;;		_FRAME_AdressOfNeighbors
   715 ;;		_FRAME_AnalogValue
   716 ;;		_FRAME_AveragingTimes
   717 ;;		_FRAME_AxisStatus
   718 ;;		_FRAME_DeviceReset
   719 ;;		_FRAME_ExcitationMultiplier
   720 ;;		_FRAME_ExcitationValue
   721 ;;		_FRAME_MapPosition
   722 ;;		_FRAME_Plot
   723 ;;		_FRAME_SensorExcitationStatus
   724 ;;		_FRAME_SoftwareVersion
   725 ;;		_LED_Error
   726 ;;		___awdiv
   727 ;; This function is called by:
   728 ;;		_TRM_DataTransmition
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text2
   733  0002DC                     __ptext2:
   734                           	opt callstack 0
   735  0002DC                     _FRAME_HandleCanFrame:
   736                           	opt callstack 24
   737                           
   738                           ;FRAME.c: 441: void FRAME_HandleCanFrame(mID * message);FRAME.c: 442: {;FRAME.c: 443:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   739                           
   740                           ;incstack = 0
   741  0002DC  EE20 F006          	lfsr	2,6
   742  0002E0  5010               	movf	FRAME_HandleCanFrame@message,w,c
   743  0002E2  26D9               	addwf	fsr2l,f,c
   744  0002E4  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   745  0002E6  22DA               	addwfc	fsr2h,f,c
   746  0002E8  50DF               	movf	indf2,w,c
   747  0002EA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   748  0002EC  5012               	movf	??_FRAME_HandleCanFrame,w,c
   749  0002EE  6E06               	movwf	___awdiv@dividend,c
   750  0002F0  6A07               	clrf	___awdiv@dividend+1,c
   751  0002F2  0E00               	movlw	0
   752  0002F4  6E09               	movwf	___awdiv@divisor+1,c
   753  0002F6  0E04               	movlw	4
   754  0002F8  6E08               	movwf	___awdiv@divisor,c
   755  0002FA  EC76  F004         	call	___awdiv	;wreg free
   756  0002FE  5006               	movf	?___awdiv,w,c
   757  000300  6E14               	movwf	FRAME_HandleCanFrame@identyfikator,c
   758                           
   759                           ;FRAME.c: 445:     switch(identyfikator)
   760  000302  D060               	goto	l2647
   761  000304                     l2621:
   762                           
   763                           ;FRAME.c: 448:             FRAME_SensorExcitationStatus(message);
   764  000304  C010  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   765  000308  C011  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   766  00030C  ECB8  F003         	call	_FRAME_SensorExcitationStatus	;wreg free
   767                           
   768                           ;FRAME.c: 449:             break;
   769  000310  D08B               	goto	l2649
   770  000312                     l2623:
   771                           
   772                           ;FRAME.c: 451:             FRAME_AccelerometerStatus(message);
   773  000312  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   774  000316  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   775  00031A  ECD5  F006         	call	_FRAME_AccelerometerStatus	;wreg free
   776                           
   777                           ;FRAME.c: 452:             break;
   778  00031E  D084               	goto	l2649
   779  000320                     l2625:
   780                           
   781                           ;FRAME.c: 454:             FRAME_ExcitationValue(message);
   782  000320  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   783  000324  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   784  000328  EC84  F006         	call	_FRAME_ExcitationValue	;wreg free
   785                           
   786                           ;FRAME.c: 455:             break;
   787  00032C  D07D               	goto	l2649
   788  00032E                     l2627:
   789                           
   790                           ;FRAME.c: 457:             FRAME_ExcitationMultiplier(message);
   791  00032E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   792  000332  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   793  000336  ECF3  F005         	call	_FRAME_ExcitationMultiplier	;wreg free
   794                           
   795                           ;FRAME.c: 458:             break;
   796  00033A  D076               	goto	l2649
   797  00033C                     l2629:
   798                           
   799                           ;FRAME.c: 460:             FRAME_AveragingTimes(message);
   800  00033C  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   801  000340  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   802  000344  ECBA  F006         	call	_FRAME_AveragingTimes	;wreg free
   803                           
   804                           ;FRAME.c: 461:             break;
   805  000348  D06F               	goto	l2649
   806  00034A                     l2631:
   807                           
   808                           ;FRAME.c: 463:             FRAME_AxisStatus(message);
   809  00034A  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   810  00034E  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   811  000352  EC9F  F006         	call	_FRAME_AxisStatus	;wreg free
   812                           
   813                           ;FRAME.c: 464:             break;
   814  000356  D068               	goto	l2649
   815  000358                     l2633:
   816                           
   817                           ;FRAME.c: 466:             FRAME_DeviceReset(message);
   818  000358  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   819  00035C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   820  000360  EC48  F005         	call	_FRAME_DeviceReset	;wreg free
   821                           
   822                           ;FRAME.c: 467:             break;
   823  000364  D061               	goto	l2649
   824  000366                     l2635:
   825                           
   826                           ;FRAME.c: 469:             FRAME_Plot(message);
   827  000366  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   828  00036A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   829  00036E  EC5C  F007         	call	_FRAME_Plot	;wreg free
   830                           
   831                           ;FRAME.c: 470:             break;
   832  000372  D05A               	goto	l2649
   833  000374                     l2637:
   834                           
   835                           ;FRAME.c: 472:             FRAME_MapPosition(message);
   836  000374  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   837  000378  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   838  00037C  ECE5  F007         	call	_FRAME_MapPosition	;wreg free
   839                           
   840                           ;FRAME.c: 473:             break;
   841  000380  D053               	goto	l2649
   842  000382                     l2639:
   843                           
   844                           ;FRAME.c: 475:             FRAME_SoftwareVersion(message);
   845  000382  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   846  000386  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   847  00038A  ECE4  F007         	call	_FRAME_SoftwareVersion	;wreg free
   848                           
   849                           ;FRAME.c: 476:             break;
   850  00038E  D04C               	goto	l2649
   851  000390                     l2641:
   852                           
   853                           ;FRAME.c: 479:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   854  000390  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   855  000394  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   856  000398  0EF4               	movlw	244
   857  00039A  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   858  00039C  6E08               	movwf	FRAME_AnalogValue@set,c
   859  00039E  6A09               	clrf	FRAME_AnalogValue@set+1,c
   860  0003A0  0EFF               	movlw	255
   861  0003A2  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   862  0003A4  ECE6  F007         	call	_FRAME_AnalogValue	;wreg free
   863                           
   864                           ;FRAME.c: 480:             break;
   865  0003A8  D03F               	goto	l2649
   866  0003AA                     l2643:
   867                           
   868                           ;FRAME.c: 483:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   869  0003AA  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   870  0003AE  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   871  0003B2  0EF0               	movlw	240
   872  0003B4  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   873  0003B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   874  0003B8  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   875  0003BA  0EFF               	movlw	255
   876  0003BC  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   877  0003BE  ECE7  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
   878                           
   879                           ;FRAME.c: 484:             break;
   880  0003C2  D032               	goto	l2649
   881  0003C4                     l2647:
   882  0003C4  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   883  0003C6  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   884  0003C8  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   885                           
   886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   887                           ; Switch size 1, requested type "simple"
   888                           ; Number of cases is 1, Range of values is 0 to 0
   889                           ; switch strategies available:
   890                           ; Name         Instructions Cycles
   891                           ; simple_byte            4     3 (average)
   892                           ;	Chosen strategy is simple_byte
   893  0003CA  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
   894  0003CC  0A00               	xorlw	0	; case 0
   895  0003CE  A4D8               	btfss	status,2,c
   896  0003D0  D02B               	goto	l2649
   897                           
   898                           ; Switch size 1, requested type "simple"
   899                           ; Number of cases is 14, Range of values is 1 to 17
   900                           ; switch strategies available:
   901                           ; Name         Instructions Cycles
   902                           ; simple_byte           43    22 (average)
   903                           ;	Chosen strategy is simple_byte
   904  0003D2  5012               	movf	??_FRAME_HandleCanFrame,w,c
   905  0003D4  0A01               	xorlw	1	; case 1
   906  0003D6  B4D8               	btfsc	status,2,c
   907  0003D8  D795               	goto	l2621
   908  0003DA  0A03               	xorlw	3	; case 2
   909  0003DC  B4D8               	btfsc	status,2,c
   910  0003DE  D799               	goto	l2623
   911  0003E0  0A01               	xorlw	1	; case 3
   912  0003E2  B4D8               	btfsc	status,2,c
   913  0003E4  D79D               	goto	l2625
   914  0003E6  0A07               	xorlw	7	; case 4
   915  0003E8  B4D8               	btfsc	status,2,c
   916  0003EA  D7A1               	goto	l2627
   917  0003EC  0A01               	xorlw	1	; case 5
   918  0003EE  B4D8               	btfsc	status,2,c
   919  0003F0  D7A5               	goto	l2629
   920  0003F2  0A03               	xorlw	3	; case 6
   921  0003F4  B4D8               	btfsc	status,2,c
   922  0003F6  D7A9               	goto	l2631
   923  0003F8  0A01               	xorlw	1	; case 7
   924  0003FA  B4D8               	btfsc	status,2,c
   925  0003FC  D7AD               	goto	l2633
   926  0003FE  0A0E               	xorlw	14	; case 9
   927  000400  B4D8               	btfsc	status,2,c
   928  000402  D7B1               	goto	l2635
   929  000404  0A03               	xorlw	3	; case 10
   930  000406  B4D8               	btfsc	status,2,c
   931  000408  D7B5               	goto	l2637
   932  00040A  0A01               	xorlw	1	; case 11
   933  00040C  B4D8               	btfsc	status,2,c
   934  00040E  D7B9               	goto	l2639
   935  000410  0A07               	xorlw	7	; case 12
   936  000412  B4D8               	btfsc	status,2,c
   937  000414  D7BD               	goto	l2641
   938  000416  0A01               	xorlw	1	; case 13
   939  000418  B4D8               	btfsc	status,2,c
   940  00041A  D7BA               	goto	l2641
   941  00041C  0A1D               	xorlw	29	; case 16
   942  00041E  B4D8               	btfsc	status,2,c
   943  000420  D7C4               	goto	l2643
   944  000422  0A01               	xorlw	1	; case 17
   945  000424  B4D8               	btfsc	status,2,c
   946  000426  D7C1               	goto	l2643
   947  000428                     l2649:
   948                           
   949                           ;FRAME.c: 486:     if(message->message_type == 0x02)
   950  000428  EE20 F001          	lfsr	2,1
   951  00042C  5010               	movf	FRAME_HandleCanFrame@message,w,c
   952  00042E  26D9               	addwf	fsr2l,f,c
   953  000430  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   954  000432  22DA               	addwfc	fsr2h,f,c
   955  000434  0E02               	movlw	2
   956  000436  18DE               	xorwf	postinc2,w,c
   957  000438  A4D8               	btfss	status,2,c
   958  00043A  0012               	return	
   959                           
   960                           ;FRAME.c: 487:     {;FRAME.c: 489:         message->frame_type = 0x03;
   961  00043C  EE20 F002          	lfsr	2,2
   962  000440  5010               	movf	FRAME_HandleCanFrame@message,w,c
   963  000442  26D9               	addwf	fsr2l,f,c
   964  000444  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   965  000446  22DA               	addwfc	fsr2h,f,c
   966  000448  0E03               	movlw	3
   967  00044A  6EDF               	movwf	indf2,c
   968                           
   969                           ;FRAME.c: 490:         message->message_type = 0x01;
   970  00044C  EE20 F001          	lfsr	2,1
   971  000450  5010               	movf	FRAME_HandleCanFrame@message,w,c
   972  000452  26D9               	addwf	fsr2l,f,c
   973  000454  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   974  000456  22DA               	addwfc	fsr2h,f,c
   975  000458  0E01               	movlw	1
   976  00045A  6EDF               	movwf	indf2,c
   977                           
   978                           ;FRAME.c: 491:         message->id.Val = 0;
   979  00045C  EE20 F004          	lfsr	2,4
   980  000460  5010               	movf	FRAME_HandleCanFrame@message,w,c
   981  000462  26D9               	addwf	fsr2l,f,c
   982  000464  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   983  000466  22DA               	addwfc	fsr2h,f,c
   984  000468  6ADE               	clrf	postinc2,c
   985  00046A  6ADE               	clrf	postinc2,c
   986  00046C  6ADE               	clrf	postinc2,c
   987  00046E  6ADD               	clrf	postdec2,c
   988                           
   989                           ;FRAME.c: 493:         message->id.v[2] = identyfikator*4;
   990  000470  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   991  000472  0D04               	mullw	4
   992  000474  EE20 F006          	lfsr	2,6
   993  000478  5010               	movf	FRAME_HandleCanFrame@message,w,c
   994  00047A  26D9               	addwf	fsr2l,f,c
   995  00047C  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   996  00047E  22DA               	addwfc	fsr2h,f,c
   997  000480  CFF3 FFDF          	movff	prodl,indf2
   998                           
   999                           ;FRAME.c: 494:         CAN_GenID(message,identyfikator);
  1000  000484  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1001  000488  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1002  00048C  C014  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1003  000490  EC1B  F005         	call	_CAN_GenID	;wreg free
  1004                           
  1005                           ;FRAME.c: 495:         CAN_SendFrame(message);
  1006  000494  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1007  000498  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1008  00049C  EC58  F002         	call	_CAN_SendFrame	;wreg free
  1009                           
  1010                           ;FRAME.c: 504:        while(RXB0CONbits.FILHIT3)
  1011  0004A0  D004               	goto	l2661
  1012  0004A2                     l474:
  1013                           
  1014                           ;FRAME.c: 505:        {;FRAME.c: 506:            if(TXB0CONbits.TXERR == 1){
  1015  0004A2  010F               	movlb	15	; () banked
  1016  0004A4  B940               	btfsc	64,4,b	;volatile
  1017                           
  1018                           ; BSR set to: 15
  1019                           ;FRAME.c: 507:                LED_Error();
  1020  0004A6  EC6D  F007         	call	_LED_Error	;wreg free
  1021  0004AA                     l2661:
  1022                           
  1023                           ;FRAME.c: 504:        while(RXB0CONbits.FILHIT3)
  1024  0004AA  A660               	btfss	3936,3,c	;volatile
  1025  0004AC  0012               	return	
  1026  0004AE  D7F9               	goto	l474
  1027  0004B0                     __end_of_FRAME_HandleCanFrame:
  1028                           	opt callstack 0
  1029                           
  1030 ;; *************** function _LED_Error *****************
  1031 ;; Defined at:
  1032 ;;		line 31 in file "LED.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  2  251[None  ] unsigned int 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    4
  1053 ;; This function calls:
  1054 ;;		_LED_Control
  1055 ;; This function is called by:
  1056 ;;		_FRAME_HandleCanFrame
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text3
  1061  000EDA                     __ptext3:
  1062                           	opt callstack 0
  1063  000EDA                     _LED_Error:
  1064                           	opt callstack 24
  1065                           
  1066                           ;LED.c: 33:     LED_Control(RED,0b1010101010);
  1067                           
  1068                           ;incstack = 0
  1069  000EDA  0E02               	movlw	2
  1070  000EDC  6E07               	movwf	LED_Control@diode+1,c
  1071  000EDE  0EAA               	movlw	170
  1072  000EE0  6E06               	movwf	LED_Control@diode,c
  1073  000EE2  0E00               	movlw	0
  1074  000EE4  EC0F  F003         	call	_LED_Control
  1075                           
  1076                           ;LED.c: 34:     LED_Control(GREEN,0b0000000000);
  1077  000EE8  0E00               	movlw	0
  1078  000EEA  6E07               	movwf	LED_Control@diode+1,c
  1079  000EEC  0E00               	movlw	0
  1080  000EEE  6E06               	movwf	LED_Control@diode,c
  1081  000EF0  0E01               	movlw	1
  1082  000EF2  EC0F  F003         	call	_LED_Control
  1083  000EF6  0012               	return		;funcret
  1084  000EF8                     __end_of_LED_Error:
  1085                           	opt callstack 0
  1086                           
  1087 ;; *************** function _FRAME_SoftwareVersion *****************
  1088 ;; Defined at:
  1089 ;;		line 345 in file "FRAME.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  message         2    5[COMRAM] PTR struct .
  1092 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		None
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; Hardware stack levels required when called:    3
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_FRAME_HandleCanFrame
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text4
  1119  000FC8                     __ptext4:
  1120                           	opt callstack 0
  1121  000FC8                     _FRAME_SoftwareVersion:
  1122                           	opt callstack 25
  1123                           
  1124                           ;incstack = 0
  1125  000FC8  0012               	return		;funcret
  1126  000FCA                     __end_of_FRAME_SoftwareVersion:
  1127                           	opt callstack 0
  1128                           
  1129 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1130 ;; Defined at:
  1131 ;;		line 31 in file "FRAME.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  message         2    7[COMRAM] PTR struct .
  1134 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1149 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1150 ;;Total ram usage:        3 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    4
  1153 ;; This function calls:
  1154 ;;		_MOC_Aktualna_Temperatura
  1155 ;;		_MOC_Frame_Counter
  1156 ;;		_MOC_LQI_ramki
  1157 ;;		_MOC_NOTWORK
  1158 ;;		_MOC_RSSI_ramki
  1159 ;;		_MOC_StanWzbudzenia
  1160 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1161 ;; This function is called by:
  1162 ;;		_FRAME_HandleCanFrame
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text5
  1167  000770                     __ptext5:
  1168                           	opt callstack 0
  1169  000770                     _FRAME_SensorExcitationStatus:
  1170                           	opt callstack 24
  1171                           
  1172                           ;FRAME.c: 31: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 32: {;FRAM
      +                          E.c: 33:     if(message->message_type == 0x02)
  1173                           
  1174                           ;incstack = 0
  1175  000770  EE20 F001          	lfsr	2,1
  1176  000774  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1177  000776  26D9               	addwf	fsr2l,f,c
  1178  000778  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1179  00077A  22DA               	addwfc	fsr2h,f,c
  1180  00077C  0E02               	movlw	2
  1181  00077E  18DE               	xorwf	postinc2,w,c
  1182  000780  A4D8               	btfss	status,2,c
  1183  000782  0012               	return	
  1184                           
  1185                           ;FRAME.c: 34:     {;FRAME.c: 35:         message->data_length = 8;
  1186  000784  EE20 F010          	lfsr	2,16
  1187  000788  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1188  00078A  26D9               	addwf	fsr2l,f,c
  1189  00078C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1190  00078E  22DA               	addwfc	fsr2h,f,c
  1191  000790  0E08               	movlw	8
  1192  000792  6EDF               	movwf	indf2,c
  1193                           
  1194                           ;FRAME.c: 41:         message->data[0] = MOC_StanWzbudzenia();
  1195  000794  EE20 F008          	lfsr	2,8
  1196  000798  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1197  00079A  26D9               	addwf	fsr2l,f,c
  1198  00079C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1199  00079E  22DA               	addwfc	fsr2h,f,c
  1200  0007A0  ECB0  F007         	call	_MOC_StanWzbudzenia	;wreg free
  1201  0007A4  5006               	movf	?_MOC_StanWzbudzenia,w,c
  1202  0007A6  6EDF               	movwf	indf2,c
  1203                           
  1204                           ;FRAME.c: 42:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1205  0007A8  EE20 F009          	lfsr	2,9
  1206  0007AC  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1207  0007AE  26D9               	addwf	fsr2l,f,c
  1208  0007B0  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1209  0007B2  22DA               	addwfc	fsr2h,f,c
  1210  0007B4  ECAB  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1211  0007B8  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1212  0007BA  6EDF               	movwf	indf2,c
  1213                           
  1214                           ;FRAME.c: 43:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa()>>8;
  1215  0007BC  EE20 F00A          	lfsr	2,10
  1216  0007C0  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1217  0007C2  26D9               	addwf	fsr2l,f,c
  1218  0007C4  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1219  0007C6  22DA               	addwfc	fsr2h,f,c
  1220  0007C8  ECAB  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1221  0007CC  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1222  0007D0  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1223  0007D2  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1224  0007D4  6EDF               	movwf	indf2,c
  1225                           
  1226                           ;FRAME.c: 44:         message->data[3] = MOC_Frame_Counter();
  1227  0007D6  EE20 F00B          	lfsr	2,11
  1228  0007DA  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1229  0007DC  26D9               	addwf	fsr2l,f,c
  1230  0007DE  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1231  0007E0  22DA               	addwfc	fsr2h,f,c
  1232  0007E2  ECC4  F007         	call	_MOC_Frame_Counter	;wreg free
  1233  0007E6  5006               	movf	?_MOC_Frame_Counter,w,c
  1234  0007E8  6EDF               	movwf	indf2,c
  1235                           
  1236                           ;FRAME.c: 45:         message->data[4] = MOC_Aktualna_Temperatura();
  1237  0007EA  EE20 F00C          	lfsr	2,12
  1238  0007EE  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1239  0007F0  26D9               	addwf	fsr2l,f,c
  1240  0007F2  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1241  0007F4  22DA               	addwfc	fsr2h,f,c
  1242  0007F6  ECC9  F007         	call	_MOC_Aktualna_Temperatura	;wreg free
  1243  0007FA  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1244  0007FC  6EDF               	movwf	indf2,c
  1245                           
  1246                           ;FRAME.c: 46:         message->data[5] = MOC_NOTWORK();
  1247  0007FE  EE20 F00D          	lfsr	2,13
  1248  000802  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1249  000804  26D9               	addwf	fsr2l,f,c
  1250  000806  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1251  000808  22DA               	addwfc	fsr2h,f,c
  1252  00080A  ECBA  F007         	call	_MOC_NOTWORK	;wreg free
  1253  00080E  5006               	movf	?_MOC_NOTWORK,w,c
  1254  000810  6EDF               	movwf	indf2,c
  1255                           
  1256                           ;FRAME.c: 47:         message->data[6] = MOC_RSSI_ramki();
  1257  000812  EE20 F00E          	lfsr	2,14
  1258  000816  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1259  000818  26D9               	addwf	fsr2l,f,c
  1260  00081A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1261  00081C  22DA               	addwfc	fsr2h,f,c
  1262  00081E  ECB5  F007         	call	_MOC_RSSI_ramki	;wreg free
  1263  000822  5006               	movf	?_MOC_RSSI_ramki,w,c
  1264  000824  6EDF               	movwf	indf2,c
  1265                           
  1266                           ;FRAME.c: 48:         message->data[7] = MOC_LQI_ramki();
  1267  000826  EE20 F00F          	lfsr	2,15
  1268  00082A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1269  00082C  26D9               	addwf	fsr2l,f,c
  1270  00082E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1271  000830  22DA               	addwfc	fsr2h,f,c
  1272  000832  ECBF  F007         	call	_MOC_LQI_ramki	;wreg free
  1273  000836  5006               	movf	?_MOC_LQI_ramki,w,c
  1274  000838  6EDF               	movwf	indf2,c
  1275                           
  1276                           ;FRAME.c: 52:     }
  1277  00083A  0012               	return		;funcret
  1278  00083C                     __end_of_FRAME_SensorExcitationStatus:
  1279                           	opt callstack 0
  1280                           
  1281 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1282 ;; Defined at:
  1283 ;;		line 28 in file "MOC_Funct.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  2    5[COMRAM] unsigned int 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1301 ;;Total ram usage:        2 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    3
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_FRAME_SensorExcitationStatus
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text6
  1312  000F56                     __ptext6:
  1313                           	opt callstack 0
  1314  000F56                     _MOC_Wynikowa_wartosc_roznicowa:
  1315                           	opt callstack 24
  1316                           
  1317                           ;MOC_Funct.c: 30:     return 0x1234;
  1318                           
  1319                           ;incstack = 0
  1320  000F56  0E12               	movlw	18
  1321  000F58  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1322  000F5A  0E34               	movlw	52
  1323  000F5C  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1324  000F5E  0012               	return		;funcret
  1325  000F60                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1326                           	opt callstack 0
  1327                           
  1328 ;; *************** function _MOC_StanWzbudzenia *****************
  1329 ;; Defined at:
  1330 ;;		line 23 in file "MOC_Funct.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  2    5[COMRAM] unsigned int 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1348 ;;Total ram usage:        2 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    3
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_FRAME_SensorExcitationStatus
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text7
  1359  000F60                     __ptext7:
  1360                           	opt callstack 0
  1361  000F60                     _MOC_StanWzbudzenia:
  1362                           	opt callstack 24
  1363                           
  1364                           ;MOC_Funct.c: 25:     return 1;
  1365                           
  1366                           ;incstack = 0
  1367  000F60  0E00               	movlw	0
  1368  000F62  6E07               	movwf	?_MOC_StanWzbudzenia+1,c
  1369  000F64  0E01               	movlw	1
  1370  000F66  6E06               	movwf	?_MOC_StanWzbudzenia,c
  1371  000F68  0012               	return		;funcret
  1372  000F6A                     __end_of_MOC_StanWzbudzenia:
  1373                           	opt callstack 0
  1374                           
  1375 ;; *************** function _MOC_RSSI_ramki *****************
  1376 ;; Defined at:
  1377 ;;		line 45 in file "MOC_Funct.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2    5[COMRAM] unsigned int 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1395 ;;Total ram usage:        2 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    3
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_FRAME_SensorExcitationStatus
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text8
  1406  000F6A                     __ptext8:
  1407                           	opt callstack 0
  1408  000F6A                     _MOC_RSSI_ramki:
  1409                           	opt callstack 24
  1410                           
  1411                           ;MOC_Funct.c: 47:     return 0xEE;
  1412                           
  1413                           ;incstack = 0
  1414  000F6A  0E00               	movlw	0
  1415  000F6C  6E07               	movwf	?_MOC_RSSI_ramki+1,c
  1416  000F6E  0EEE               	movlw	238
  1417  000F70  6E06               	movwf	?_MOC_RSSI_ramki,c
  1418  000F72  0012               	return		;funcret
  1419  000F74                     __end_of_MOC_RSSI_ramki:
  1420                           	opt callstack 0
  1421                           
  1422 ;; *************** function _MOC_NOTWORK *****************
  1423 ;; Defined at:
  1424 ;;		line 41 in file "MOC_Funct.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2    5[COMRAM] unsigned int 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1442 ;;Total ram usage:        2 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    3
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_FRAME_SensorExcitationStatus
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text9
  1453  000F74                     __ptext9:
  1454                           	opt callstack 0
  1455  000F74                     _MOC_NOTWORK:
  1456                           	opt callstack 24
  1457                           
  1458                           ;MOC_Funct.c: 43:     return 0x21;
  1459                           
  1460                           ;incstack = 0
  1461  000F74  0E00               	movlw	0
  1462  000F76  6E07               	movwf	?_MOC_NOTWORK+1,c
  1463  000F78  0E21               	movlw	33
  1464  000F7A  6E06               	movwf	?_MOC_NOTWORK,c
  1465  000F7C  0012               	return		;funcret
  1466  000F7E                     __end_of_MOC_NOTWORK:
  1467                           	opt callstack 0
  1468                           
  1469 ;; *************** function _MOC_LQI_ramki *****************
  1470 ;; Defined at:
  1471 ;;		line 50 in file "MOC_Funct.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2    5[COMRAM] unsigned int 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1489 ;;Total ram usage:        2 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    3
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_FRAME_SensorExcitationStatus
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text10
  1500  000F7E                     __ptext10:
  1501                           	opt callstack 0
  1502  000F7E                     _MOC_LQI_ramki:
  1503                           	opt callstack 24
  1504                           
  1505                           ;MOC_Funct.c: 52:     return 0xE1;
  1506                           
  1507                           ;incstack = 0
  1508  000F7E  0E00               	movlw	0
  1509  000F80  6E07               	movwf	?_MOC_LQI_ramki+1,c
  1510  000F82  0EE1               	movlw	225
  1511  000F84  6E06               	movwf	?_MOC_LQI_ramki,c
  1512  000F86  0012               	return		;funcret
  1513  000F88                     __end_of_MOC_LQI_ramki:
  1514                           	opt callstack 0
  1515                           
  1516 ;; *************** function _MOC_Frame_Counter *****************
  1517 ;; Defined at:
  1518 ;;		line 33 in file "MOC_Funct.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2    5[COMRAM] unsigned int 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    3
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_FRAME_SensorExcitationStatus
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text11
  1547  000F88                     __ptext11:
  1548                           	opt callstack 0
  1549  000F88                     _MOC_Frame_Counter:
  1550                           	opt callstack 24
  1551                           
  1552                           ;MOC_Funct.c: 35:     return 0x22;
  1553                           
  1554                           ;incstack = 0
  1555  000F88  0E00               	movlw	0
  1556  000F8A  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1557  000F8C  0E22               	movlw	34
  1558  000F8E  6E06               	movwf	?_MOC_Frame_Counter,c
  1559  000F90  0012               	return		;funcret
  1560  000F92                     __end_of_MOC_Frame_Counter:
  1561                           	opt callstack 0
  1562                           
  1563 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1564 ;; Defined at:
  1565 ;;		line 37 in file "MOC_Funct.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  2    5[COMRAM] unsigned int 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1583 ;;Total ram usage:        2 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    3
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_FRAME_SensorExcitationStatus
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text12
  1594  000F92                     __ptext12:
  1595                           	opt callstack 0
  1596  000F92                     _MOC_Aktualna_Temperatura:
  1597                           	opt callstack 24
  1598                           
  1599                           ;MOC_Funct.c: 39:     return 0x24;
  1600                           
  1601                           ;incstack = 0
  1602  000F92  0E00               	movlw	0
  1603  000F94  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1604  000F96  0E24               	movlw	36
  1605  000F98  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1606  000F9A  0012               	return		;funcret
  1607  000F9C                     __end_of_MOC_Aktualna_Temperatura:
  1608                           	opt callstack 0
  1609                           
  1610 ;; *************** function _FRAME_Plot *****************
  1611 ;; Defined at:
  1612 ;;		line 298 in file "FRAME.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  message         2    5[COMRAM] PTR struct .
  1615 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1631 ;;Total ram usage:        2 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    3
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_FRAME_HandleCanFrame
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text13
  1642  000EB8                     __ptext13:
  1643                           	opt callstack 0
  1644  000EB8                     _FRAME_Plot:
  1645                           	opt callstack 25
  1646                           
  1647                           ;FRAME.c: 298: static void FRAME_Plot(mID *message);FRAME.c: 299: {;FRAME.c: 310:     me
      +                          ssage->data_length = 1;
  1648                           
  1649                           ;incstack = 0
  1650  000EB8  EE20 F010          	lfsr	2,16
  1651  000EBC  5006               	movf	FRAME_Plot@message,w,c
  1652  000EBE  26D9               	addwf	fsr2l,f,c
  1653  000EC0  5007               	movf	FRAME_Plot@message+1,w,c
  1654  000EC2  22DA               	addwfc	fsr2h,f,c
  1655  000EC4  0E01               	movlw	1
  1656  000EC6  6EDF               	movwf	indf2,c
  1657                           
  1658                           ;FRAME.c: 311:     message->data[0] = 0xFF;
  1659  000EC8  EE20 F008          	lfsr	2,8
  1660  000ECC  5006               	movf	FRAME_Plot@message,w,c
  1661  000ECE  26D9               	addwf	fsr2l,f,c
  1662  000ED0  5007               	movf	FRAME_Plot@message+1,w,c
  1663  000ED2  22DA               	addwfc	fsr2h,f,c
  1664  000ED4  0EFF               	movlw	255
  1665  000ED6  6EDF               	movwf	indf2,c
  1666  000ED8  0012               	return		;funcret
  1667  000EDA                     __end_of_FRAME_Plot:
  1668                           	opt callstack 0
  1669                           
  1670 ;; *************** function _FRAME_MapPosition *****************
  1671 ;; Defined at:
  1672 ;;		line 320 in file "FRAME.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  message         2    5[COMRAM] PTR struct .
  1675 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		None
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    3
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_FRAME_HandleCanFrame
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text14
  1702  000FCA                     __ptext14:
  1703                           	opt callstack 0
  1704  000FCA                     _FRAME_MapPosition:
  1705                           	opt callstack 25
  1706                           
  1707                           ;incstack = 0
  1708  000FCA  0012               	return		;funcret
  1709  000FCC                     __end_of_FRAME_MapPosition:
  1710                           	opt callstack 0
  1711                           
  1712 ;; *************** function _FRAME_ExcitationValue *****************
  1713 ;; Defined at:
  1714 ;;		line 87 in file "FRAME.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  message         2    5[COMRAM] PTR struct .
  1717 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1733 ;;Total ram usage:        3 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    3
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_FRAME_HandleCanFrame
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text15
  1744  000D08                     __ptext15:
  1745                           	opt callstack 0
  1746  000D08                     _FRAME_ExcitationValue:
  1747                           	opt callstack 25
  1748                           
  1749                           ;FRAME.c: 87: static void FRAME_ExcitationValue(mID *message);FRAME.c: 88: {;FRAME.c: 89
      +                          :     if(message->message_type == 0x02)
  1750                           
  1751                           ;incstack = 0
  1752  000D08  EE20 F001          	lfsr	2,1
  1753  000D0C  5006               	movf	FRAME_ExcitationValue@message,w,c
  1754  000D0E  26D9               	addwf	fsr2l,f,c
  1755  000D10  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1756  000D12  22DA               	addwfc	fsr2h,f,c
  1757  000D14  0E02               	movlw	2
  1758  000D16  18DE               	xorwf	postinc2,w,c
  1759  000D18  A4D8               	btfss	status,2,c
  1760  000D1A  0012               	return	
  1761                           
  1762                           ;FRAME.c: 90:     {;FRAME.c: 91:         message->data_length = 1;
  1763  000D1C  EE20 F010          	lfsr	2,16
  1764  000D20  5006               	movf	FRAME_ExcitationValue@message,w,c
  1765  000D22  26D9               	addwf	fsr2l,f,c
  1766  000D24  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1767  000D26  22DA               	addwfc	fsr2h,f,c
  1768  000D28  0E01               	movlw	1
  1769  000D2A  6EDF               	movwf	indf2,c
  1770                           
  1771                           ;FRAME.c: 96:         message->data[0] = 0xFF;
  1772  000D2C  EE20 F008          	lfsr	2,8
  1773  000D30  5006               	movf	FRAME_ExcitationValue@message,w,c
  1774  000D32  26D9               	addwf	fsr2l,f,c
  1775  000D34  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1776  000D36  22DA               	addwfc	fsr2h,f,c
  1777  000D38  0EFF               	movlw	255
  1778  000D3A  6EDF               	movwf	indf2,c
  1779                           
  1780                           ;FRAME.c: 97:     }
  1781  000D3C  0012               	return		;funcret
  1782  000D3E                     __end_of_FRAME_ExcitationValue:
  1783                           	opt callstack 0
  1784                           
  1785 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1786 ;; Defined at:
  1787 ;;		line 111 in file "FRAME.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  message         2    5[COMRAM] PTR struct .
  1790 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  i               2    8[COMRAM] unsigned short 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1803 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1805 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1806 ;;Total ram usage:        5 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    3
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_FRAME_HandleCanFrame
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text16
  1817  000BE6                     __ptext16:
  1818                           	opt callstack 0
  1819  000BE6                     _FRAME_ExcitationMultiplier:
  1820                           	opt callstack 25
  1821                           
  1822                           ;FRAME.c: 111: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 112: {;FRAM
      +                          E.c: 113:     WORD i;;FRAME.c: 115:     if(message->message_type == 0x02)
  1823                           
  1824                           ;incstack = 0
  1825  000BE6  EE20 F001          	lfsr	2,1
  1826  000BEA  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1827  000BEC  26D9               	addwf	fsr2l,f,c
  1828  000BEE  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1829  000BF0  22DA               	addwfc	fsr2h,f,c
  1830  000BF2  0E02               	movlw	2
  1831  000BF4  18DE               	xorwf	postinc2,w,c
  1832  000BF6  A4D8               	btfss	status,2,c
  1833  000BF8  0012               	return	
  1834                           
  1835                           ;FRAME.c: 116:     {;FRAME.c: 117:         message->data_length = 1;
  1836  000BFA  EE20 F010          	lfsr	2,16
  1837  000BFE  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1838  000C00  26D9               	addwf	fsr2l,f,c
  1839  000C02  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1840  000C04  22DA               	addwfc	fsr2h,f,c
  1841  000C06  0E01               	movlw	1
  1842  000C08  6EDF               	movwf	indf2,c
  1843                           
  1844                           ;FRAME.c: 118:         for(i=0; i<3; i++)
  1845  000C0A  0E00               	movlw	0
  1846  000C0C  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1847  000C0E  0E00               	movlw	0
  1848  000C10  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1849  000C12                     l2385:
  1850                           
  1851                           ;FRAME.c: 119:         {;FRAME.c: 122:         }
  1852  000C12  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1853  000C14  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1854  000C16  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1855  000C18  E104               	bnz	u1040
  1856  000C1A  0E03               	movlw	3
  1857  000C1C  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1858  000C1E  A0D8               	btfss	status,0,c
  1859  000C20  D7F8               	goto	l2385
  1860  000C22                     u1040:
  1861                           
  1862                           ;FRAME.c: 123:         message->data[0] = 0xFF;
  1863  000C22  EE20 F008          	lfsr	2,8
  1864  000C26  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1865  000C28  26D9               	addwf	fsr2l,f,c
  1866  000C2A  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1867  000C2C  22DA               	addwfc	fsr2h,f,c
  1868  000C2E  0EFF               	movlw	255
  1869  000C30  6EDF               	movwf	indf2,c
  1870                           
  1871                           ;FRAME.c: 124:     }
  1872  000C32  0012               	return		;funcret
  1873  000C34                     __end_of_FRAME_ExcitationMultiplier:
  1874                           	opt callstack 0
  1875                           
  1876 ;; *************** function _FRAME_DeviceReset *****************
  1877 ;; Defined at:
  1878 ;;		line 245 in file "FRAME.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  message         2    5[COMRAM] PTR struct .
  1881 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    3
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_FRAME_HandleCanFrame
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text17
  1908  000A90                     __ptext17:
  1909                           	opt callstack 0
  1910  000A90                     _FRAME_DeviceReset:
  1911                           	opt callstack 25
  1912                           
  1913                           ;FRAME.c: 245: static void FRAME_DeviceReset(mID *message);FRAME.c: 246: {;FRAME.c: 247:
      +                               if(message->message_type == 0x02)
  1914                           
  1915                           ;incstack = 0
  1916  000A90  EE20 F001          	lfsr	2,1
  1917  000A94  5006               	movf	FRAME_DeviceReset@message,w,c
  1918  000A96  26D9               	addwf	fsr2l,f,c
  1919  000A98  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1920  000A9A  22DA               	addwfc	fsr2h,f,c
  1921  000A9C  0E02               	movlw	2
  1922  000A9E  18DE               	xorwf	postinc2,w,c
  1923  000AA0  A4D8               	btfss	status,2,c
  1924  000AA2  D011               	goto	l2403
  1925                           
  1926                           ;FRAME.c: 248:     {;FRAME.c: 249:         message->data_length = 1;
  1927  000AA4  EE20 F010          	lfsr	2,16
  1928  000AA8  5006               	movf	FRAME_DeviceReset@message,w,c
  1929  000AAA  26D9               	addwf	fsr2l,f,c
  1930  000AAC  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1931  000AAE  22DA               	addwfc	fsr2h,f,c
  1932  000AB0  0E01               	movlw	1
  1933  000AB2  6EDF               	movwf	indf2,c
  1934                           
  1935                           ;FRAME.c: 262:         message->data[0] = 0xFF;
  1936  000AB4  EE20 F008          	lfsr	2,8
  1937  000AB8  5006               	movf	FRAME_DeviceReset@message,w,c
  1938  000ABA  26D9               	addwf	fsr2l,f,c
  1939  000ABC  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1940  000ABE  22DA               	addwfc	fsr2h,f,c
  1941  000AC0  0EFF               	movlw	255
  1942  000AC2  6EDF               	movwf	indf2,c
  1943                           
  1944                           ;FRAME.c: 263:     }
  1945  000AC4  0012               	return	
  1946  000AC6                     l2403:
  1947                           
  1948                           ;FRAME.c: 265:     {;FRAME.c: 266:         message->data_length = 1;
  1949  000AC6  EE20 F010          	lfsr	2,16
  1950  000ACA  5006               	movf	FRAME_DeviceReset@message,w,c
  1951  000ACC  26D9               	addwf	fsr2l,f,c
  1952  000ACE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1953  000AD0  22DA               	addwfc	fsr2h,f,c
  1954  000AD2  0E01               	movlw	1
  1955  000AD4  6EDF               	movwf	indf2,c
  1956                           
  1957                           ;FRAME.c: 288:         message->data[0] = 0xFF;
  1958  000AD6  EE20 F008          	lfsr	2,8
  1959  000ADA  5006               	movf	FRAME_DeviceReset@message,w,c
  1960  000ADC  26D9               	addwf	fsr2l,f,c
  1961  000ADE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1962  000AE0  22DA               	addwfc	fsr2h,f,c
  1963  000AE2  0EFF               	movlw	255
  1964  000AE4  6EDF               	movwf	indf2,c
  1965  000AE6  0012               	return		;funcret
  1966  000AE8                     __end_of_FRAME_DeviceReset:
  1967                           	opt callstack 0
  1968                           
  1969 ;; *************** function _FRAME_AxisStatus *****************
  1970 ;; Defined at:
  1971 ;;		line 198 in file "FRAME.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  message         2    5[COMRAM] PTR struct .
  1974 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  i               2    0        unsigned short 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1989 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1990 ;;Total ram usage:        3 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    3
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_FRAME_HandleCanFrame
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text18
  2001  000D3E                     __ptext18:
  2002                           	opt callstack 0
  2003  000D3E                     _FRAME_AxisStatus:
  2004                           	opt callstack 25
  2005                           
  2006                           ;FRAME.c: 198: static void FRAME_AxisStatus(mID *message);FRAME.c: 199: {;FRAME.c: 200: 
      +                              WORD i;;FRAME.c: 202:     if(message->message_type == 0x02)
  2007                           
  2008                           ;incstack = 0
  2009  000D3E  EE20 F001          	lfsr	2,1
  2010  000D42  5006               	movf	FRAME_AxisStatus@message,w,c
  2011  000D44  26D9               	addwf	fsr2l,f,c
  2012  000D46  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2013  000D48  22DA               	addwfc	fsr2h,f,c
  2014  000D4A  0E02               	movlw	2
  2015  000D4C  18DE               	xorwf	postinc2,w,c
  2016  000D4E  A4D8               	btfss	status,2,c
  2017  000D50  0012               	return	
  2018                           
  2019                           ;FRAME.c: 203:     {;FRAME.c: 204:         message->data_length = 1;
  2020  000D52  EE20 F010          	lfsr	2,16
  2021  000D56  5006               	movf	FRAME_AxisStatus@message,w,c
  2022  000D58  26D9               	addwf	fsr2l,f,c
  2023  000D5A  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2024  000D5C  22DA               	addwfc	fsr2h,f,c
  2025  000D5E  0E01               	movlw	1
  2026  000D60  6EDF               	movwf	indf2,c
  2027                           
  2028                           ;FRAME.c: 215:         message->data[0] = 0xFF;
  2029  000D62  EE20 F008          	lfsr	2,8
  2030  000D66  5006               	movf	FRAME_AxisStatus@message,w,c
  2031  000D68  26D9               	addwf	fsr2l,f,c
  2032  000D6A  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2033  000D6C  22DA               	addwfc	fsr2h,f,c
  2034  000D6E  0EFF               	movlw	255
  2035  000D70  6EDF               	movwf	indf2,c
  2036                           
  2037                           ;FRAME.c: 216:     }
  2038  000D72  0012               	return		;funcret
  2039  000D74                     __end_of_FRAME_AxisStatus:
  2040                           	opt callstack 0
  2041                           
  2042 ;; *************** function _FRAME_AveragingTimes *****************
  2043 ;; Defined at:
  2044 ;;		line 139 in file "FRAME.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  message         2    5[COMRAM] PTR struct .
  2047 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2062 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;Total ram usage:        3 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    3
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_FRAME_HandleCanFrame
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text19
  2074  000D74                     __ptext19:
  2075                           	opt callstack 0
  2076  000D74                     _FRAME_AveragingTimes:
  2077                           	opt callstack 25
  2078                           
  2079                           ;FRAME.c: 139: static void FRAME_AveragingTimes(mID *message);FRAME.c: 140: {;FRAME.c: 1
      +                          41:     if(message->message_type == 0x02)
  2080                           
  2081                           ;incstack = 0
  2082  000D74  EE20 F001          	lfsr	2,1
  2083  000D78  5006               	movf	FRAME_AveragingTimes@message,w,c
  2084  000D7A  26D9               	addwf	fsr2l,f,c
  2085  000D7C  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2086  000D7E  22DA               	addwfc	fsr2h,f,c
  2087  000D80  0E02               	movlw	2
  2088  000D82  18DE               	xorwf	postinc2,w,c
  2089  000D84  A4D8               	btfss	status,2,c
  2090  000D86  0012               	return	
  2091                           
  2092                           ;FRAME.c: 142:     {;FRAME.c: 143:         message->data_length = 1;
  2093  000D88  EE20 F010          	lfsr	2,16
  2094  000D8C  5006               	movf	FRAME_AveragingTimes@message,w,c
  2095  000D8E  26D9               	addwf	fsr2l,f,c
  2096  000D90  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2097  000D92  22DA               	addwfc	fsr2h,f,c
  2098  000D94  0E01               	movlw	1
  2099  000D96  6EDF               	movwf	indf2,c
  2100                           
  2101                           ;FRAME.c: 151:         message->data[0] = 0xFF;
  2102  000D98  EE20 F008          	lfsr	2,8
  2103  000D9C  5006               	movf	FRAME_AveragingTimes@message,w,c
  2104  000D9E  26D9               	addwf	fsr2l,f,c
  2105  000DA0  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2106  000DA2  22DA               	addwfc	fsr2h,f,c
  2107  000DA4  0EFF               	movlw	255
  2108  000DA6  6EDF               	movwf	indf2,c
  2109                           
  2110                           ;FRAME.c: 152:     }
  2111  000DA8  0012               	return		;funcret
  2112  000DAA                     __end_of_FRAME_AveragingTimes:
  2113                           	opt callstack 0
  2114                           
  2115 ;; *************** function _FRAME_AnalogValue *****************
  2116 ;; Defined at:
  2117 ;;		line 368 in file "FRAME.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  message         2    5[COMRAM] PTR struct .
  2120 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2121 ;;  set             2    7[COMRAM] unsigned short 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  i               2    0        unsigned short 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		None
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;Total ram usage:        4 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    3
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_FRAME_HandleCanFrame
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text20
  2148  000FCC                     __ptext20:
  2149                           	opt callstack 0
  2150  000FCC                     _FRAME_AnalogValue:
  2151                           	opt callstack 25
  2152                           
  2153                           ;incstack = 0
  2154  000FCC  0012               	return		;funcret
  2155  000FCE                     __end_of_FRAME_AnalogValue:
  2156                           	opt callstack 0
  2157                           
  2158 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2159 ;; Defined at:
  2160 ;;		line 411 in file "FRAME.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  message         2    5[COMRAM] PTR struct .
  2163 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2164 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  i               2    0        unsigned short 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		None
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;Total ram usage:        4 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_FRAME_HandleCanFrame
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text21
  2191  000FCE                     __ptext21:
  2192                           	opt callstack 0
  2193  000FCE                     _FRAME_AdressOfNeighbors:
  2194                           	opt callstack 25
  2195                           
  2196                           ;incstack = 0
  2197  000FCE  0012               	return		;funcret
  2198  000FD0                     __end_of_FRAME_AdressOfNeighbors:
  2199                           	opt callstack 0
  2200                           
  2201 ;; *************** function _FRAME_AccelerometerStatus *****************
  2202 ;; Defined at:
  2203 ;;		line 65 in file "FRAME.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  message         2    5[COMRAM] PTR struct .
  2206 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2221 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2222 ;;Total ram usage:        3 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    3
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_FRAME_HandleCanFrame
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text22
  2233  000DAA                     __ptext22:
  2234                           	opt callstack 0
  2235  000DAA                     _FRAME_AccelerometerStatus:
  2236                           	opt callstack 25
  2237                           
  2238                           ;FRAME.c: 65: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 66: {;FRAME.c
      +                          : 67:     if(message->message_type == 0x02)
  2239                           
  2240                           ;incstack = 0
  2241  000DAA  EE20 F001          	lfsr	2,1
  2242  000DAE  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2243  000DB0  26D9               	addwf	fsr2l,f,c
  2244  000DB2  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2245  000DB4  22DA               	addwfc	fsr2h,f,c
  2246  000DB6  0E02               	movlw	2
  2247  000DB8  18DE               	xorwf	postinc2,w,c
  2248  000DBA  A4D8               	btfss	status,2,c
  2249  000DBC  0012               	return	
  2250                           
  2251                           ;FRAME.c: 68:     {;FRAME.c: 69:         message->data_length = 1;
  2252  000DBE  EE20 F010          	lfsr	2,16
  2253  000DC2  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2254  000DC4  26D9               	addwf	fsr2l,f,c
  2255  000DC6  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2256  000DC8  22DA               	addwfc	fsr2h,f,c
  2257  000DCA  0E01               	movlw	1
  2258  000DCC  6EDF               	movwf	indf2,c
  2259                           
  2260                           ;FRAME.c: 73:         message->data[0] = 0xFF;
  2261  000DCE  EE20 F008          	lfsr	2,8
  2262  000DD2  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2263  000DD4  26D9               	addwf	fsr2l,f,c
  2264  000DD6  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2265  000DD8  22DA               	addwfc	fsr2h,f,c
  2266  000DDA  0EFF               	movlw	255
  2267  000DDC  6EDF               	movwf	indf2,c
  2268                           
  2269                           ;FRAME.c: 74:     }
  2270  000DDE  0012               	return		;funcret
  2271  000DE0                     __end_of_FRAME_AccelerometerStatus:
  2272                           	opt callstack 0
  2273                           
  2274 ;; *************** function _CAN_SendFrame *****************
  2275 ;; Defined at:
  2276 ;;		line 183 in file "CAN.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  message         2   10[COMRAM] PTR struct .
  2279 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2295 ;;Total ram usage:        5 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    4
  2298 ;; This function calls:
  2299 ;;		_CAN_MoveBuffIntoFrame
  2300 ;; This function is called by:
  2301 ;;		_FRAME_HandleCanFrame
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text23
  2306  0004B0                     __ptext23:
  2307                           	opt callstack 0
  2308  0004B0                     _CAN_SendFrame:
  2309                           	opt callstack 24
  2310                           
  2311                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  2312                           
  2313                           ;incstack = 0
  2314                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  2315  0004B0  0E83               	movlw	131
  2316  0004B2  6E77               	movwf	3959,c	;volatile
  2317                           
  2318                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  2319  0004B4  A660               	btfss	3936,3,c	;volatile
  2320  0004B6  D00A               	goto	l177
  2321                           
  2322                           ;CAN.c: 195:         ECANCON = 0x84;
  2323  0004B8  0E84               	movlw	132
  2324  0004BA  6E77               	movwf	3959,c	;volatile
  2325                           
  2326                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  2327  0004BC  A660               	btfss	3936,3,c	;volatile
  2328  0004BE  D006               	goto	l177
  2329                           
  2330                           ;CAN.c: 201:         ECANCON = 0x85;
  2331  0004C0  0E85               	movlw	133
  2332  0004C2  6E77               	movwf	3959,c	;volatile
  2333                           
  2334                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  2335  0004C4  A660               	btfss	3936,3,c	;volatile
  2336  0004C6  D002               	goto	l177
  2337  0004C8  D7F3               	goto	_CAN_SendFrame
  2338  0004CA                     l178:
  2339  0004CA  00FF               	reset		;# 
  2340  0004CC                     l177:
  2341                           
  2342                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  2343  0004CC  B474               	btfsc	3956,2,c	;volatile
  2344  0004CE  D7FD               	goto	l178
  2345                           
  2346                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  2347  0004D0  0E00               	movlw	0
  2348  0004D2  6E3E               	movwf	_DetectorLedRadar+1,c
  2349                           
  2350                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  2351  0004D4  EE20 F004          	lfsr	2,4
  2352  0004D8  500B               	movf	CAN_SendFrame@message,w,c
  2353  0004DA  26D9               	addwf	fsr2l,f,c
  2354  0004DC  500C               	movf	CAN_SendFrame@message+1,w,c
  2355  0004DE  22DA               	addwfc	fsr2h,f,c
  2356  0004E0  50DF               	movf	indf2,w,c
  2357  0004E2  6E64               	movwf	3940,c	;volatile
  2358                           
  2359                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  2360  0004E4  EE20 F005          	lfsr	2,5
  2361  0004E8  500B               	movf	CAN_SendFrame@message,w,c
  2362  0004EA  26D9               	addwf	fsr2l,f,c
  2363  0004EC  500C               	movf	CAN_SendFrame@message+1,w,c
  2364  0004EE  22DA               	addwfc	fsr2h,f,c
  2365  0004F0  50DF               	movf	indf2,w,c
  2366  0004F2  6E63               	movwf	3939,c	;volatile
  2367                           
  2368                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2369  0004F4  EE20 F006          	lfsr	2,6
  2370  0004F8  500B               	movf	CAN_SendFrame@message,w,c
  2371  0004FA  26D9               	addwf	fsr2l,f,c
  2372  0004FC  500C               	movf	CAN_SendFrame@message+1,w,c
  2373  0004FE  22DA               	addwfc	fsr2h,f,c
  2374  000500  50DF               	movf	indf2,w,c
  2375  000502  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2376  000504  0E03               	movlw	3
  2377  000506  160D               	andwf	??_CAN_SendFrame,f,c
  2378  000508  EE20 F006          	lfsr	2,6
  2379  00050C  500B               	movf	CAN_SendFrame@message,w,c
  2380  00050E  26D9               	addwf	fsr2l,f,c
  2381  000510  500C               	movf	CAN_SendFrame@message+1,w,c
  2382  000512  22DA               	addwfc	fsr2h,f,c
  2383  000514  50DF               	movf	indf2,w,c
  2384  000516  0BFC               	andlw	252
  2385  000518  0D08               	mullw	8
  2386  00051A  50F3               	movf	prodl,w,c
  2387  00051C  100D               	iorwf	??_CAN_SendFrame,w,c
  2388  00051E  6E62               	movwf	3938,c	;volatile
  2389                           
  2390                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2391  000520  8662               	bsf	3938,3,c	;volatile
  2392                           
  2393                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2394  000522  EE20 F006          	lfsr	2,6
  2395  000526  500B               	movf	CAN_SendFrame@message,w,c
  2396  000528  26D9               	addwf	fsr2l,f,c
  2397  00052A  500C               	movf	CAN_SendFrame@message+1,w,c
  2398  00052C  22DA               	addwfc	fsr2h,f,c
  2399  00052E  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2400  000532  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2401  000536  0E05               	movlw	5
  2402  000538  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2403  00053A                     u965:
  2404  00053A  90D8               	bcf	status,0,c
  2405  00053C  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2406  00053E  320D               	rrcf	??_CAN_SendFrame,f,c
  2407  000540  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2408  000542  D7FB               	goto	u965
  2409  000544  500D               	movf	??_CAN_SendFrame,w,c
  2410  000546  6E61               	movwf	3937,c	;volatile
  2411                           
  2412                           ;CAN.c: 220:     RXB0DLC = 0;
  2413  000548  0E00               	movlw	0
  2414  00054A  6E65               	movwf	3941,c	;volatile
  2415                           
  2416                           ;CAN.c: 222:     if(message->message_type==0x02)
  2417  00054C  EE20 F001          	lfsr	2,1
  2418  000550  500B               	movf	CAN_SendFrame@message,w,c
  2419  000552  26D9               	addwf	fsr2l,f,c
  2420  000554  500C               	movf	CAN_SendFrame@message+1,w,c
  2421  000556  22DA               	addwfc	fsr2h,f,c
  2422  000558  0E02               	movlw	2
  2423  00055A  18DE               	xorwf	postinc2,w,c
  2424  00055C  A4D8               	btfss	status,2,c
  2425  00055E  D002               	goto	l2301
  2426                           
  2427                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2428  000560  8C65               	bsf	3941,6,c	;volatile
  2429                           
  2430                           ;CAN.c: 225:     }
  2431  000562  D05A               	goto	l2305
  2432  000564                     l2301:
  2433                           
  2434                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2435  000564  EE20 F010          	lfsr	2,16
  2436  000568  500B               	movf	CAN_SendFrame@message,w,c
  2437  00056A  26D9               	addwf	fsr2l,f,c
  2438  00056C  500C               	movf	CAN_SendFrame@message+1,w,c
  2439  00056E  22DA               	addwfc	fsr2h,f,c
  2440  000570  50DF               	movf	indf2,w,c
  2441  000572  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2442  000574  0E0F               	movlw	15
  2443  000576  160D               	andwf	??_CAN_SendFrame,f,c
  2444  000578  5065               	movf	3941,w,c	;volatile
  2445  00057A  180D               	xorwf	??_CAN_SendFrame,w,c
  2446  00057C  0BFE               	andlw	-2
  2447  00057E  180D               	xorwf	??_CAN_SendFrame,w,c
  2448  000580  6E65               	movwf	3941,c	;volatile
  2449                           
  2450                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2451  000582  EE20 F010          	lfsr	2,16
  2452  000586  500B               	movf	CAN_SendFrame@message,w,c
  2453  000588  26D9               	addwf	fsr2l,f,c
  2454  00058A  500C               	movf	CAN_SendFrame@message+1,w,c
  2455  00058C  22DA               	addwfc	fsr2h,f,c
  2456  00058E  50DF               	movf	indf2,w,c
  2457  000590  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2458  000592  90D8               	bcf	status,0,c
  2459  000594  320D               	rrcf	??_CAN_SendFrame,f,c
  2460  000596  0E07               	movlw	7
  2461  000598  160D               	andwf	??_CAN_SendFrame,f,c
  2462  00059A  460D               	rlncf	??_CAN_SendFrame,f,c
  2463  00059C  5065               	movf	3941,w,c	;volatile
  2464  00059E  180D               	xorwf	??_CAN_SendFrame,w,c
  2465  0005A0  0BFD               	andlw	-3
  2466  0005A2  180D               	xorwf	??_CAN_SendFrame,w,c
  2467  0005A4  6E65               	movwf	3941,c	;volatile
  2468                           
  2469                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2470  0005A6  EE20 F010          	lfsr	2,16
  2471  0005AA  500B               	movf	CAN_SendFrame@message,w,c
  2472  0005AC  26D9               	addwf	fsr2l,f,c
  2473  0005AE  500C               	movf	CAN_SendFrame@message+1,w,c
  2474  0005B0  22DA               	addwfc	fsr2h,f,c
  2475  0005B2  50DF               	movf	indf2,w,c
  2476  0005B4  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2477  0005B6  90D8               	bcf	status,0,c
  2478  0005B8  320D               	rrcf	??_CAN_SendFrame,f,c
  2479  0005BA  90D8               	bcf	status,0,c
  2480  0005BC  320D               	rrcf	??_CAN_SendFrame,f,c
  2481  0005BE  0E03               	movlw	3
  2482  0005C0  160D               	andwf	??_CAN_SendFrame,f,c
  2483  0005C2  460D               	rlncf	??_CAN_SendFrame,f,c
  2484  0005C4  460D               	rlncf	??_CAN_SendFrame,f,c
  2485  0005C6  5065               	movf	3941,w,c	;volatile
  2486  0005C8  180D               	xorwf	??_CAN_SendFrame,w,c
  2487  0005CA  0BFB               	andlw	-5
  2488  0005CC  180D               	xorwf	??_CAN_SendFrame,w,c
  2489  0005CE  6E65               	movwf	3941,c	;volatile
  2490                           
  2491                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2492  0005D0  EE20 F010          	lfsr	2,16
  2493  0005D4  500B               	movf	CAN_SendFrame@message,w,c
  2494  0005D6  26D9               	addwf	fsr2l,f,c
  2495  0005D8  500C               	movf	CAN_SendFrame@message+1,w,c
  2496  0005DA  22DA               	addwfc	fsr2h,f,c
  2497  0005DC  50DF               	movf	indf2,w,c
  2498  0005DE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2499  0005E0  90D8               	bcf	status,0,c
  2500  0005E2  320D               	rrcf	??_CAN_SendFrame,f,c
  2501  0005E4  90D8               	bcf	status,0,c
  2502  0005E6  320D               	rrcf	??_CAN_SendFrame,f,c
  2503  0005E8  90D8               	bcf	status,0,c
  2504  0005EA  320D               	rrcf	??_CAN_SendFrame,f,c
  2505  0005EC  0E01               	movlw	1
  2506  0005EE  160D               	andwf	??_CAN_SendFrame,f,c
  2507  0005F0  460D               	rlncf	??_CAN_SendFrame,f,c
  2508  0005F2  460D               	rlncf	??_CAN_SendFrame,f,c
  2509  0005F4  460D               	rlncf	??_CAN_SendFrame,f,c
  2510  0005F6  5065               	movf	3941,w,c	;volatile
  2511  0005F8  180D               	xorwf	??_CAN_SendFrame,w,c
  2512  0005FA  0BF7               	andlw	-9
  2513  0005FC  180D               	xorwf	??_CAN_SendFrame,w,c
  2514  0005FE  6E65               	movwf	3941,c	;volatile
  2515                           
  2516                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2517  000600  0E66               	movlw	102
  2518  000602  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2519  000604  0E0F               	movlw	15
  2520  000606  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2521  000608  0E08               	movlw	8
  2522  00060A  240B               	addwf	CAN_SendFrame@message,w,c
  2523  00060C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2524  00060E  0E00               	movlw	0
  2525  000610  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2526  000612  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2527  000614  EC21  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2528  000618                     l2305:
  2529                           
  2530                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2531  000618  8660               	bsf	3936,3,c	;volatile
  2532                           
  2533                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2534  00061A  883D               	bsf	_DetectorLedRadar,4,c
  2535  00061C  0012               	return		;funcret
  2536  00061E                     __end_of_CAN_SendFrame:
  2537                           	opt callstack 0
  2538                           
  2539 ;; *************** function _CAN_GenID *****************
  2540 ;; Defined at:
  2541 ;;		line 382 in file "CAN.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  message         2    5[COMRAM] PTR struct .
  2544 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2545 ;;  frameID         1    7[COMRAM] unsigned char 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2557 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2560 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;Total ram usage:        3 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    3
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_FRAME_HandleCanFrame
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text24
  2572  000A36                     __ptext24:
  2573                           	opt callstack 0
  2574  000A36                     _CAN_GenID:
  2575                           	opt callstack 25
  2576                           
  2577                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2578                           
  2579                           ;incstack = 0
  2580  000A36  EE20 F002          	lfsr	2,2
  2581  000A3A  5006               	movf	CAN_GenID@message,w,c
  2582  000A3C  26D9               	addwf	fsr2l,f,c
  2583  000A3E  5007               	movf	CAN_GenID@message+1,w,c
  2584  000A40  22DA               	addwfc	fsr2h,f,c
  2585  000A42  0E03               	movlw	3
  2586  000A44  6EDF               	movwf	indf2,c
  2587                           
  2588                           ;CAN.c: 386:     message->message_type = 0x01;
  2589  000A46  EE20 F001          	lfsr	2,1
  2590  000A4A  5006               	movf	CAN_GenID@message,w,c
  2591  000A4C  26D9               	addwf	fsr2l,f,c
  2592  000A4E  5007               	movf	CAN_GenID@message+1,w,c
  2593  000A50  22DA               	addwfc	fsr2h,f,c
  2594  000A52  0E01               	movlw	1
  2595  000A54  6EDF               	movwf	indf2,c
  2596                           
  2597                           ;CAN.c: 387:     message->id.w[1] = 0x0025;
  2598  000A56  EE20 F006          	lfsr	2,6
  2599  000A5A  5006               	movf	CAN_GenID@message,w,c
  2600  000A5C  26D9               	addwf	fsr2l,f,c
  2601  000A5E  5007               	movf	CAN_GenID@message+1,w,c
  2602  000A60  22DA               	addwfc	fsr2h,f,c
  2603  000A62  0E25               	movlw	37
  2604  000A64  6EDE               	movwf	postinc2,c
  2605  000A66  0E00               	movlw	0
  2606  000A68  6EDD               	movwf	postdec2,c
  2607                           
  2608                           ;CAN.c: 388:     message->id.w[0] = 0x8006;
  2609  000A6A  EE20 F004          	lfsr	2,4
  2610  000A6E  5006               	movf	CAN_GenID@message,w,c
  2611  000A70  26D9               	addwf	fsr2l,f,c
  2612  000A72  5007               	movf	CAN_GenID@message+1,w,c
  2613  000A74  22DA               	addwfc	fsr2h,f,c
  2614  000A76  0E06               	movlw	6
  2615  000A78  6EDE               	movwf	postinc2,c
  2616  000A7A  0E80               	movlw	128
  2617  000A7C  6EDD               	movwf	postdec2,c
  2618                           
  2619                           ;CAN.c: 389:     message->id.v[2] |= 0x01;
  2620  000A7E  EE20 F006          	lfsr	2,6
  2621  000A82  5006               	movf	CAN_GenID@message,w,c
  2622  000A84  26D9               	addwf	fsr2l,f,c
  2623  000A86  5007               	movf	CAN_GenID@message+1,w,c
  2624  000A88  22DA               	addwfc	fsr2h,f,c
  2625  000A8A  0E00               	movlw	0
  2626  000A8C  80DB               	bsf	plusw2,0,c
  2627  000A8E  0012               	return		;funcret
  2628  000A90                     __end_of_CAN_GenID:
  2629                           	opt callstack 0
  2630                           
  2631 ;; *************** function _CAN_TakeFrame *****************
  2632 ;; Defined at:
  2633 ;;		line 247 in file "CAN.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  message         2   13[COMRAM] PTR struct .
  2636 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  k               1   18[COMRAM] unsigned char 
  2639 ;;  tempCON         1   17[COMRAM] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      enum E10433
  2642 ;; Registers used:
  2643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    4
  2656 ;; This function calls:
  2657 ;;		_CAN_MoveBuffIntoFrame
  2658 ;;		___awdiv
  2659 ;; This function is called by:
  2660 ;;		_TRM_DataTransmition
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text25
  2665  000060                     __ptext25:
  2666                           	opt callstack 0
  2667  000060                     _CAN_TakeFrame:
  2668                           	opt callstack 25
  2669                           
  2670                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2671                           
  2672                           ;incstack = 0
  2673  000060  506F               	movf	3951,w,c	;volatile
  2674  000062  0B0F               	andlw	15
  2675  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2676                           
  2677                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2678  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2679  000068  0990               	iorlw	144
  2680  00006A  6E77               	movwf	3959,c	;volatile
  2681                           
  2682                           ;CAN.c: 256:     switch(k)
  2683  00006C  D018               	goto	l2495
  2684  00006E                     l186:
  2685                           
  2686                           ;CAN.c: 259:             tempCON = RXB0CON;
  2687  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2688                           
  2689                           ;CAN.c: 260:             break;
  2690  000072  D035               	goto	l187
  2691  000074                     l188:
  2692                           
  2693                           ;CAN.c: 262:             tempCON = RXB1CON;
  2694  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2695                           
  2696                           ;CAN.c: 263:             break;
  2697  000078  D032               	goto	l187
  2698  00007A                     l189:
  2699                           
  2700                           ;CAN.c: 265:             tempCON = B0CON;
  2701  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2702                           
  2703                           ;CAN.c: 266:             break;
  2704  00007E  D02F               	goto	l187
  2705  000080                     l190:
  2706                           
  2707                           ;CAN.c: 268:             tempCON = B1CON;
  2708  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2709                           
  2710                           ;CAN.c: 269:             break;
  2711  000084  D02C               	goto	l187
  2712  000086                     l191:
  2713                           
  2714                           ;CAN.c: 271:             tempCON = B2CON;
  2715  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2716                           
  2717                           ;CAN.c: 272:             break;
  2718  00008A  D029               	goto	l187
  2719  00008C                     l192:
  2720                           
  2721                           ;CAN.c: 274:             tempCON = B3CON;
  2722  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2723                           
  2724                           ;CAN.c: 275:             break;
  2725  000090  D026               	goto	l187
  2726  000092                     l193:
  2727                           
  2728                           ;CAN.c: 277:             tempCON = B4CON;
  2729  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2730                           
  2731                           ;CAN.c: 278:             break;
  2732  000096  D023               	goto	l187
  2733  000098                     l194:
  2734                           
  2735                           ;CAN.c: 280:             tempCON = B5CON;
  2736  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2737                           
  2738                           ;CAN.c: 281:             break;
  2739  00009C  D020               	goto	l187
  2740  00009E                     l2495:
  2741  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2742  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2743  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2744                           
  2745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2746                           ; Switch size 1, requested type "simple"
  2747                           ; Number of cases is 1, Range of values is 0 to 0
  2748                           ; switch strategies available:
  2749                           ; Name         Instructions Cycles
  2750                           ; simple_byte            4     3 (average)
  2751                           ;	Chosen strategy is simple_byte
  2752  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2753  0000A6  0A00               	xorlw	0	; case 0
  2754  0000A8  A4D8               	btfss	status,2,c
  2755  0000AA  D019               	goto	l187
  2756                           
  2757                           ; Switch size 1, requested type "simple"
  2758                           ; Number of cases is 8, Range of values is 0 to 7
  2759                           ; switch strategies available:
  2760                           ; Name         Instructions Cycles
  2761                           ; simple_byte           25    13 (average)
  2762                           ;	Chosen strategy is simple_byte
  2763  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2764  0000AE  0A00               	xorlw	0	; case 0
  2765  0000B0  B4D8               	btfsc	status,2,c
  2766  0000B2  D7DD               	goto	l186
  2767  0000B4  0A01               	xorlw	1	; case 1
  2768  0000B6  B4D8               	btfsc	status,2,c
  2769  0000B8  D7DD               	goto	l188
  2770  0000BA  0A03               	xorlw	3	; case 2
  2771  0000BC  B4D8               	btfsc	status,2,c
  2772  0000BE  D7DD               	goto	l189
  2773  0000C0  0A01               	xorlw	1	; case 3
  2774  0000C2  B4D8               	btfsc	status,2,c
  2775  0000C4  D7DD               	goto	l190
  2776  0000C6  0A07               	xorlw	7	; case 4
  2777  0000C8  B4D8               	btfsc	status,2,c
  2778  0000CA  D7DD               	goto	l191
  2779  0000CC  0A01               	xorlw	1	; case 5
  2780  0000CE  B4D8               	btfsc	status,2,c
  2781  0000D0  D7DD               	goto	l192
  2782  0000D2  0A03               	xorlw	3	; case 6
  2783  0000D4  B4D8               	btfsc	status,2,c
  2784  0000D6  D7DD               	goto	l193
  2785  0000D8  0A01               	xorlw	1	; case 7
  2786  0000DA  B4D8               	btfsc	status,2,c
  2787  0000DC  D7DD               	goto	l194
  2788  0000DE                     l187:
  2789                           
  2790                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2791  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2792  0000E0  D0A5               	goto	l2531
  2793                           
  2794                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2795  0000E2  EE20 F003          	lfsr	2,3
  2796  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2797  0000E8  26D9               	addwf	fsr2l,f,c
  2798  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2799  0000EC  22DA               	addwfc	fsr2h,f,c
  2800  0000EE  5060               	movf	3936,w,c	;volatile
  2801  0000F0  0B1F               	andlw	31
  2802  0000F2  6EDF               	movwf	indf2,c
  2803                           
  2804                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2805  0000F4  EE20 F004          	lfsr	2,4
  2806  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2807  0000FA  26D9               	addwf	fsr2l,f,c
  2808  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2809  0000FE  22DA               	addwfc	fsr2h,f,c
  2810  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2811                           
  2812                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2813  000104  EE20 F005          	lfsr	2,5
  2814  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2815  00010A  26D9               	addwf	fsr2l,f,c
  2816  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2817  00010E  22DA               	addwfc	fsr2h,f,c
  2818  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2819                           
  2820                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2821  000114  EE20 F006          	lfsr	2,6
  2822  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2823  00011A  26D9               	addwf	fsr2l,f,c
  2824  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2825  00011E  22DA               	addwfc	fsr2h,f,c
  2826  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2827  000124  0E03               	movlw	3
  2828  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2829  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2830  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2831  00012E  0E00               	movlw	0
  2832  000130  6E09               	movwf	___awdiv@divisor+1,c
  2833  000132  0E08               	movlw	8
  2834  000134  6E08               	movwf	___awdiv@divisor,c
  2835  000136  EC76  F004         	call	___awdiv	;wreg free
  2836  00013A  5006               	movf	?___awdiv,w,c
  2837  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2838  00013E  6EDF               	movwf	indf2,c
  2839                           
  2840                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2841  000140  5061               	movf	3937,w,c	;volatile
  2842  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2843  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2844  000146  0E05               	movlw	5
  2845  000148                     u1205:
  2846  000148  90D8               	bcf	status,0,c
  2847  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2848  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2849  00014E  2EE8               	decfsz	wreg,f,c
  2850  000150  D7FB               	goto	u1205
  2851  000152  EE20 F006          	lfsr	2,6
  2852  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2853  000158  26D9               	addwf	fsr2l,f,c
  2854  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2855  00015C  22DA               	addwfc	fsr2h,f,c
  2856  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2857  000160  12DE               	iorwf	postinc2,f,c
  2858  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2859  000164  12DD               	iorwf	postdec2,f,c
  2860                           
  2861                           ;CAN.c: 292:         message->frame_type=0x03;
  2862  000166  EE20 F002          	lfsr	2,2
  2863  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2864  00016C  26D9               	addwf	fsr2l,f,c
  2865  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2866  000170  22DA               	addwfc	fsr2h,f,c
  2867  000172  0E03               	movlw	3
  2868  000174  6EDF               	movwf	indf2,c
  2869                           
  2870                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2871  000176  BC65               	btfsc	3941,6,c	;volatile
  2872  000178  D068               	goto	l2537
  2873                           
  2874                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2875  00017A  EE20 F001          	lfsr	2,1
  2876  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2877  000180  26D9               	addwf	fsr2l,f,c
  2878  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2879  000184  22DA               	addwfc	fsr2h,f,c
  2880  000186  0E01               	movlw	1
  2881  000188  6EDF               	movwf	indf2,c
  2882                           
  2883                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2884  00018A  EE20 F010          	lfsr	2,16
  2885  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2886  000190  26D9               	addwf	fsr2l,f,c
  2887  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2888  000194  22DA               	addwfc	fsr2h,f,c
  2889  000196  5065               	movf	3941,w,c	;volatile
  2890  000198  0B0F               	andlw	15
  2891  00019A  6EDF               	movwf	indf2,c
  2892                           
  2893                           ;CAN.c: 300:             if(message->data_length > 8)
  2894  00019C  EE20 F010          	lfsr	2,16
  2895  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2896  0001A2  26D9               	addwf	fsr2l,f,c
  2897  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2898  0001A6  22DA               	addwfc	fsr2h,f,c
  2899  0001A8  0E08               	movlw	8
  2900  0001AA  64DF               	cpfsgt	indf2,c
  2901  0001AC  D041               	goto	l2535
  2902  0001AE  D01E               	goto	l2529
  2903  0001B0                     l2511:
  2904                           
  2905                           ;CAN.c: 306:                         RXB0CON = 0;
  2906  0001B0  0E00               	movlw	0
  2907  0001B2  6E60               	movwf	3936,c	;volatile
  2908                           
  2909                           ;CAN.c: 307:                         break;
  2910  0001B4  D03B               	goto	l2531
  2911  0001B6                     l2513:
  2912                           
  2913                           ;CAN.c: 309:                         RXB1CON = 0;
  2914  0001B6  0E00               	movlw	0
  2915  0001B8  010F               	movlb	15	; () banked
  2916  0001BA  D00E               	goto	L1
  2917  0001BC                     l2515:
  2918                           
  2919                           ;CAN.c: 312:                         B0CON = 0;
  2920  0001BC  0E00               	movlw	0
  2921  0001BE  010E               	movlb	14	; () banked
  2922  0001C0  6F20               	movwf	32,b	;volatile
  2923                           
  2924                           ;CAN.c: 313:                         break;
  2925  0001C2  D034               	goto	l2531
  2926  0001C4                     l2517:
  2927                           
  2928                           ;CAN.c: 315:                         B1CON = 0;
  2929  0001C4  0E00               	movlw	0
  2930  0001C6  010E               	movlb	14	; () banked
  2931  0001C8  6F30               	movwf	48,b	;volatile
  2932                           
  2933                           ;CAN.c: 316:                         break;
  2934  0001CA  D030               	goto	l2531
  2935  0001CC                     l2519:
  2936                           
  2937                           ;CAN.c: 318:                         B2CON = 0;
  2938  0001CC  0E00               	movlw	0
  2939  0001CE  010E               	movlb	14	; () banked
  2940  0001D0  6F40               	movwf	64,b	;volatile
  2941                           
  2942                           ;CAN.c: 319:                         break;
  2943  0001D2  D02C               	goto	l2531
  2944  0001D4                     l2521:
  2945                           
  2946                           ;CAN.c: 321:                         B3CON = 0;
  2947  0001D4  0E00               	movlw	0
  2948  0001D6  010E               	movlb	14	; () banked
  2949  0001D8                     L1:
  2950  0001D8  6F50               	movwf	80,b	;volatile
  2951                           
  2952                           ;CAN.c: 322:                         break;
  2953  0001DA  D028               	goto	l2531
  2954  0001DC                     l2523:
  2955                           
  2956                           ;CAN.c: 324:                         B4CON = 0;
  2957  0001DC  0E00               	movlw	0
  2958  0001DE  010E               	movlb	14	; () banked
  2959  0001E0  6F60               	movwf	96,b	;volatile
  2960                           
  2961                           ;CAN.c: 325:                         break;
  2962  0001E2  D024               	goto	l2531
  2963  0001E4                     l2525:
  2964                           
  2965                           ;CAN.c: 327:                         B5CON = 0;
  2966  0001E4  0E00               	movlw	0
  2967  0001E6  010E               	movlb	14	; () banked
  2968  0001E8  6F70               	movwf	112,b	;volatile
  2969                           
  2970                           ;CAN.c: 328:                         break;
  2971  0001EA  D020               	goto	l2531
  2972  0001EC                     l2529:
  2973  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2974  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2975  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2976                           
  2977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2978                           ; Switch size 1, requested type "simple"
  2979                           ; Number of cases is 1, Range of values is 0 to 0
  2980                           ; switch strategies available:
  2981                           ; Name         Instructions Cycles
  2982                           ; simple_byte            4     3 (average)
  2983                           ;	Chosen strategy is simple_byte
  2984  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2985  0001F4  0A00               	xorlw	0	; case 0
  2986  0001F6  A4D8               	btfss	status,2,c
  2987  0001F8  D019               	goto	l2531
  2988                           
  2989                           ; Switch size 1, requested type "simple"
  2990                           ; Number of cases is 8, Range of values is 0 to 7
  2991                           ; switch strategies available:
  2992                           ; Name         Instructions Cycles
  2993                           ; simple_byte           25    13 (average)
  2994                           ;	Chosen strategy is simple_byte
  2995  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2996  0001FC  0A00               	xorlw	0	; case 0
  2997  0001FE  B4D8               	btfsc	status,2,c
  2998  000200  D7D7               	goto	l2511
  2999  000202  0A01               	xorlw	1	; case 1
  3000  000204  B4D8               	btfsc	status,2,c
  3001  000206  D7D7               	goto	l2513
  3002  000208  0A03               	xorlw	3	; case 2
  3003  00020A  B4D8               	btfsc	status,2,c
  3004  00020C  D7D7               	goto	l2515
  3005  00020E  0A01               	xorlw	1	; case 3
  3006  000210  B4D8               	btfsc	status,2,c
  3007  000212  D7D8               	goto	l2517
  3008  000214  0A07               	xorlw	7	; case 4
  3009  000216  B4D8               	btfsc	status,2,c
  3010  000218  D7D9               	goto	l2519
  3011  00021A  0A01               	xorlw	1	; case 5
  3012  00021C  B4D8               	btfsc	status,2,c
  3013  00021E  D7DA               	goto	l2521
  3014  000220  0A03               	xorlw	3	; case 6
  3015  000222  B4D8               	btfsc	status,2,c
  3016  000224  D7DB               	goto	l2523
  3017  000226  0A01               	xorlw	1	; case 7
  3018  000228  B4D8               	btfsc	status,2,c
  3019  00022A  D7DC               	goto	l2525
  3020  00022C                     l2531:
  3021                           
  3022                           ;CAN.c: 330:                 return FALSE;
  3023  00022C  0E00               	movlw	0
  3024  00022E  0012               	return	
  3025  000230                     l2535:
  3026                           
  3027                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  3028  000230  0E08               	movlw	8
  3029  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  3030  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3031  000236  0E00               	movlw	0
  3032  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  3033  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3034  00023C  0E66               	movlw	102
  3035  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3036  000240  0E0F               	movlw	15
  3037  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3038  000244  EC21  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3039                           
  3040                           ;CAN.c: 333:         }
  3041  000248  D027               	goto	l2557
  3042  00024A                     l2537:
  3043                           
  3044                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  3045  00024A  EE20 F001          	lfsr	2,1
  3046  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  3047  000250  26D9               	addwf	fsr2l,f,c
  3048  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  3049  000254  22DA               	addwfc	fsr2h,f,c
  3050  000256  0E02               	movlw	2
  3051  000258  6EDF               	movwf	indf2,c
  3052  00025A  D01E               	goto	l2557
  3053  00025C                     l2539:
  3054                           
  3055                           ;CAN.c: 343:                 RXB0CON = 0;
  3056  00025C  0E00               	movlw	0
  3057  00025E  6E60               	movwf	3936,c	;volatile
  3058                           
  3059                           ;CAN.c: 344:                 break;
  3060  000260  D03B               	goto	l2559
  3061  000262                     l2541:
  3062                           
  3063                           ;CAN.c: 346:                 RXB1CON = 0;
  3064  000262  0E00               	movlw	0
  3065  000264  010F               	movlb	15	; () banked
  3066  000266  D00E               	goto	L2
  3067  000268                     l2543:
  3068                           
  3069                           ;CAN.c: 349:                 B0CON = 0;
  3070  000268  0E00               	movlw	0
  3071  00026A  010E               	movlb	14	; () banked
  3072  00026C  6F20               	movwf	32,b	;volatile
  3073                           
  3074                           ;CAN.c: 350:                 break;
  3075  00026E  D034               	goto	l2559
  3076  000270                     l2545:
  3077                           
  3078                           ;CAN.c: 352:                 B1CON = 0;
  3079  000270  0E00               	movlw	0
  3080  000272  010E               	movlb	14	; () banked
  3081  000274  6F30               	movwf	48,b	;volatile
  3082                           
  3083                           ;CAN.c: 353:                 break;
  3084  000276  D030               	goto	l2559
  3085  000278                     l2547:
  3086                           
  3087                           ;CAN.c: 355:                 B2CON = 0;
  3088  000278  0E00               	movlw	0
  3089  00027A  010E               	movlb	14	; () banked
  3090  00027C  6F40               	movwf	64,b	;volatile
  3091                           
  3092                           ;CAN.c: 356:                 break;
  3093  00027E  D02C               	goto	l2559
  3094  000280                     l2549:
  3095                           
  3096                           ;CAN.c: 358:                 B3CON = 0;
  3097  000280  0E00               	movlw	0
  3098  000282  010E               	movlb	14	; () banked
  3099  000284                     L2:
  3100  000284  6F50               	movwf	80,b	;volatile
  3101                           
  3102                           ;CAN.c: 359:                 break;
  3103  000286  D028               	goto	l2559
  3104  000288                     l2551:
  3105                           
  3106                           ;CAN.c: 361:                 B4CON = 0;
  3107  000288  0E00               	movlw	0
  3108  00028A  010E               	movlb	14	; () banked
  3109  00028C  6F60               	movwf	96,b	;volatile
  3110                           
  3111                           ;CAN.c: 362:                 break;
  3112  00028E  D024               	goto	l2559
  3113  000290                     l2553:
  3114                           
  3115                           ;CAN.c: 364:                 B5CON = 0;
  3116  000290  0E00               	movlw	0
  3117  000292  010E               	movlb	14	; () banked
  3118  000294  6F70               	movwf	112,b	;volatile
  3119                           
  3120                           ;CAN.c: 365:                 break;
  3121  000296  D020               	goto	l2559
  3122  000298                     l2557:
  3123  000298  5013               	movf	CAN_TakeFrame@k,w,c
  3124  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3125  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3126                           
  3127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3128                           ; Switch size 1, requested type "simple"
  3129                           ; Number of cases is 1, Range of values is 0 to 0
  3130                           ; switch strategies available:
  3131                           ; Name         Instructions Cycles
  3132                           ; simple_byte            4     3 (average)
  3133                           ;	Chosen strategy is simple_byte
  3134  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  3135  0002A0  0A00               	xorlw	0	; case 0
  3136  0002A2  A4D8               	btfss	status,2,c
  3137  0002A4  D019               	goto	l2559
  3138                           
  3139                           ; Switch size 1, requested type "simple"
  3140                           ; Number of cases is 8, Range of values is 0 to 7
  3141                           ; switch strategies available:
  3142                           ; Name         Instructions Cycles
  3143                           ; simple_byte           25    13 (average)
  3144                           ;	Chosen strategy is simple_byte
  3145  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  3146  0002A8  0A00               	xorlw	0	; case 0
  3147  0002AA  B4D8               	btfsc	status,2,c
  3148  0002AC  D7D7               	goto	l2539
  3149  0002AE  0A01               	xorlw	1	; case 1
  3150  0002B0  B4D8               	btfsc	status,2,c
  3151  0002B2  D7D7               	goto	l2541
  3152  0002B4  0A03               	xorlw	3	; case 2
  3153  0002B6  B4D8               	btfsc	status,2,c
  3154  0002B8  D7D7               	goto	l2543
  3155  0002BA  0A01               	xorlw	1	; case 3
  3156  0002BC  B4D8               	btfsc	status,2,c
  3157  0002BE  D7D8               	goto	l2545
  3158  0002C0  0A07               	xorlw	7	; case 4
  3159  0002C2  B4D8               	btfsc	status,2,c
  3160  0002C4  D7D9               	goto	l2547
  3161  0002C6  0A01               	xorlw	1	; case 5
  3162  0002C8  B4D8               	btfsc	status,2,c
  3163  0002CA  D7DA               	goto	l2549
  3164  0002CC  0A03               	xorlw	3	; case 6
  3165  0002CE  B4D8               	btfsc	status,2,c
  3166  0002D0  D7DB               	goto	l2551
  3167  0002D2  0A01               	xorlw	1	; case 7
  3168  0002D4  B4D8               	btfsc	status,2,c
  3169  0002D6  D7DC               	goto	l2553
  3170  0002D8                     l2559:
  3171                           
  3172                           ;CAN.c: 367:         return TRUE;
  3173  0002D8  0E01               	movlw	1
  3174  0002DA  0012               	return		;funcret
  3175  0002DC                     __end_of_CAN_TakeFrame:
  3176                           	opt callstack 0
  3177                           
  3178 ;; *************** function ___awdiv *****************
  3179 ;; Defined at:
  3180 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  dividend        2    5[COMRAM] int 
  3183 ;;  divisor         2    7[COMRAM] int 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  quotient        2   11[COMRAM] int 
  3186 ;;  sign            1   10[COMRAM] unsigned char 
  3187 ;;  counter         1    9[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  2    5[COMRAM] int 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;Total ram usage:        8 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    3
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_CAN_TakeFrame
  3208 ;;		_FRAME_HandleCanFrame
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text26
  3213  0008EC                     __ptext26:
  3214                           	opt callstack 0
  3215  0008EC                     ___awdiv:
  3216                           	opt callstack 25
  3217                           
  3218                           ;incstack = 0
  3219  0008EC  0E00               	movlw	0
  3220  0008EE  6E0B               	movwf	___awdiv@sign,c
  3221  0008F0  AE09               	btfss	___awdiv@divisor+1,7,c
  3222  0008F2  D006               	goto	l2415
  3223  0008F4  6C08               	negf	___awdiv@divisor,c
  3224  0008F6  1E09               	comf	___awdiv@divisor+1,f,c
  3225  0008F8  B0D8               	btfsc	status,0,c
  3226  0008FA  2A09               	incf	___awdiv@divisor+1,f,c
  3227  0008FC  0E01               	movlw	1
  3228  0008FE  6E0B               	movwf	___awdiv@sign,c
  3229  000900                     l2415:
  3230  000900  AE07               	btfss	___awdiv@dividend+1,7,c
  3231  000902  D006               	goto	l2421
  3232  000904  6C06               	negf	___awdiv@dividend,c
  3233  000906  1E07               	comf	___awdiv@dividend+1,f,c
  3234  000908  B0D8               	btfsc	status,0,c
  3235  00090A  2A07               	incf	___awdiv@dividend+1,f,c
  3236  00090C  0E01               	movlw	1
  3237  00090E  1A0B               	xorwf	___awdiv@sign,f,c
  3238  000910                     l2421:
  3239  000910  0E00               	movlw	0
  3240  000912  6E0D               	movwf	___awdiv@quotient+1,c
  3241  000914  0E00               	movlw	0
  3242  000916  6E0C               	movwf	___awdiv@quotient,c
  3243  000918  5008               	movf	___awdiv@divisor,w,c
  3244  00091A  1009               	iorwf	___awdiv@divisor+1,w,c
  3245  00091C  B4D8               	btfsc	status,2,c
  3246  00091E  D01C               	goto	l2443
  3247  000920  0E01               	movlw	1
  3248  000922  6E0A               	movwf	___awdiv@counter,c
  3249  000924  D004               	goto	l2429
  3250  000926                     l2427:
  3251  000926  90D8               	bcf	status,0,c
  3252  000928  3608               	rlcf	___awdiv@divisor,f,c
  3253  00092A  3609               	rlcf	___awdiv@divisor+1,f,c
  3254  00092C  2A0A               	incf	___awdiv@counter,f,c
  3255  00092E                     l2429:
  3256  00092E  AE09               	btfss	___awdiv@divisor+1,7,c
  3257  000930  D7FA               	goto	l2427
  3258  000932                     u1110:
  3259  000932  90D8               	bcf	status,0,c
  3260  000934  360C               	rlcf	___awdiv@quotient,f,c
  3261  000936  360D               	rlcf	___awdiv@quotient+1,f,c
  3262  000938  5008               	movf	___awdiv@divisor,w,c
  3263  00093A  5C06               	subwf	___awdiv@dividend,w,c
  3264  00093C  5009               	movf	___awdiv@divisor+1,w,c
  3265  00093E  5807               	subwfb	___awdiv@dividend+1,w,c
  3266  000940  A0D8               	btfss	status,0,c
  3267  000942  D005               	goto	l2439
  3268  000944  5008               	movf	___awdiv@divisor,w,c
  3269  000946  5E06               	subwf	___awdiv@dividend,f,c
  3270  000948  5009               	movf	___awdiv@divisor+1,w,c
  3271  00094A  5A07               	subwfb	___awdiv@dividend+1,f,c
  3272  00094C  800C               	bsf	___awdiv@quotient,0,c
  3273  00094E                     l2439:
  3274  00094E  90D8               	bcf	status,0,c
  3275  000950  3209               	rrcf	___awdiv@divisor+1,f,c
  3276  000952  3208               	rrcf	___awdiv@divisor,f,c
  3277  000954  2E0A               	decfsz	___awdiv@counter,f,c
  3278  000956  D7ED               	goto	u1110
  3279  000958                     l2443:
  3280  000958  500B               	movf	___awdiv@sign,w,c
  3281  00095A  B4D8               	btfsc	status,2,c
  3282  00095C  D004               	goto	l2447
  3283  00095E  6C0C               	negf	___awdiv@quotient,c
  3284  000960  1E0D               	comf	___awdiv@quotient+1,f,c
  3285  000962  B0D8               	btfsc	status,0,c
  3286  000964  2A0D               	incf	___awdiv@quotient+1,f,c
  3287  000966                     l2447:
  3288  000966  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3289  00096A  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3290  00096E  0012               	return		;funcret
  3291  000970                     __end_of___awdiv:
  3292                           	opt callstack 0
  3293                           
  3294 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  3295 ;; Defined at:
  3296 ;;		line 169 in file "CAN.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  3299 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3300 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  3301 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  i               1    9[COMRAM] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;Total ram usage:        5 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    3
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_CAN_SendFrame
  3324 ;;		_CAN_TakeFrame
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text27
  3329  000E42                     __ptext27:
  3330                           	opt callstack 0
  3331  000E42                     _CAN_MoveBuffIntoFrame:
  3332                           	opt callstack 24
  3333                           
  3334                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  3335                           
  3336                           ;incstack = 0
  3337  000E42  0E00               	movlw	0
  3338  000E44  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  3339  000E46                     l2067:
  3340                           
  3341                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  3342  000E46  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3343  000E48  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  3344  000E4A  6ED9               	movwf	fsr2l,c
  3345  000E4C  0E00               	movlw	0
  3346  000E4E  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  3347  000E50  6EDA               	movwf	fsr2h,c
  3348  000E52  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3349  000E54  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  3350  000E56  6EE1               	movwf	fsr1l,c
  3351  000E58  0E00               	movlw	0
  3352  000E5A  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3353  000E5C  6EE2               	movwf	fsr1h,c
  3354  000E5E  CFDF FFE7          	movff	indf2,indf1
  3355                           
  3356                           ;CAN.c: 175:     }
  3357  000E62  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3358  000E64  0E07               	movlw	7
  3359  000E66  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3360  000E68  D7EE               	goto	l2067
  3361  000E6A  0012               	return	
  3362  000E6C                     __end_of_CAN_MoveBuffIntoFrame:
  3363                           	opt callstack 0
  3364                           
  3365 ;; *************** function _TMR1_Update_flag_Set *****************
  3366 ;; Defined at:
  3367 ;;		line 32 in file "TMR1.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  a               2    5[COMRAM] unsigned int 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		None
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;Total ram usage:        2 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    3
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text28
  3396  000F9C                     __ptext28:
  3397                           	opt callstack 0
  3398  000F9C                     _TMR1_Update_flag_Set:
  3399                           	opt callstack 27
  3400                           
  3401                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3402                           
  3403                           ;incstack = 0
  3404  000F9C  C006  F03B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3405  000FA0  C007  F03C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3406  000FA4  0012               	return		;funcret
  3407  000FA6                     __end_of_TMR1_Update_flag_Set:
  3408                           	opt callstack 0
  3409                           
  3410 ;; *************** function _TMR1_Update_flag_Get *****************
  3411 ;; Defined at:
  3412 ;;		line 47 in file "TMR1.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  2    5[COMRAM] unsigned int 
  3419 ;; Registers used:
  3420 ;;		None
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    3
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text29
  3441  000FA6                     __ptext29:
  3442                           	opt callstack 0
  3443  000FA6                     _TMR1_Update_flag_Get:
  3444                           	opt callstack 27
  3445                           
  3446                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3447                           
  3448                           ;incstack = 0
  3449  000FA6  C03B  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3450  000FAA  C03C  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3451  000FAE  0012               	return		;funcret
  3452  000FB0                     __end_of_TMR1_Update_flag_Get:
  3453                           	opt callstack 0
  3454                           
  3455 ;; *************** function _LED_Update *****************
  3456 ;; Defined at:
  3457 ;;		line 81 in file "LED.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      unsigned char 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    5
  3478 ;; This function calls:
  3479 ;;		_LED_Left
  3480 ;;		_LED_Light_Pos
  3481 ;;		_LED_Right
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text30
  3488  000B3E                     __ptext30:
  3489                           	opt callstack 0
  3490  000B3E                     _LED_Update:
  3491                           	opt callstack 25
  3492                           
  3493                           ;LED.c: 83:     static LED_RGA_type Red = RED;;LED.c: 84:     static LED_RGA_type Green 
      +                          = GREEN;;LED.c: 85:     static UINT pos1 = 0b0000000001;;LED.c: 86:     static UINT pos2
      +                           = 0b0000000001;;LED.c: 89:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3494                           
  3495                           ;incstack = 0
  3496  000B3E  C043  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3497  000B42  C044  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3498  000B46  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3499  000B4A  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3500  000B4E  5049               	movf	LED_Update@Green,w,c
  3501  000B50  EC1E  F004         	call	_LED_Light_Pos
  3502                           
  3503                           ;LED.c: 90:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3504  000B54  C045  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3505  000B58  C046  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3506  000B5C  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3507  000B60  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3508  000B64  0E00               	movlw	0
  3509  000B66  EC1E  F004         	call	_LED_Light_Pos
  3510                           
  3511                           ;LED.c: 91:     pos1 = LED_Right(pos1);
  3512  000B6A  C045  F006         	movff	LED_Update@pos1,LED_Right@a
  3513  000B6E  C046  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3514  000B72  EC1A  F006         	call	_LED_Right	;wreg free
  3515  000B76  C006  F045         	movff	?_LED_Right,LED_Update@pos1
  3516  000B7A  C007  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  3517                           
  3518                           ;LED.c: 92:     pos2 = LED_Left(pos2);
  3519  000B7E  C043  F006         	movff	LED_Update@pos2,LED_Left@a
  3520  000B82  C044  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3521  000B86  EC63  F006         	call	_LED_Left	;wreg free
  3522  000B8A  C006  F043         	movff	?_LED_Left,LED_Update@pos2
  3523  000B8E  C007  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  3524  000B92  0012               	return		;funcret
  3525  000B94                     __end_of_LED_Update:
  3526                           	opt callstack 0
  3527                           
  3528 ;; *************** function _LED_Light_Pos *****************
  3529 ;; Defined at:
  3530 ;;		line 164 in file "LED.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  color           1    wreg     enum E10640
  3533 ;;  pos             2   12[COMRAM] unsigned int 
  3534 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  color           1   16[COMRAM] enum E10640
  3537 ;;  flage           2   21[COMRAM] unsigned int 
  3538 ;;  pos2            2   19[COMRAM] unsigned int 
  3539 ;;  LED_array       2   17[COMRAM] unsigned int 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2   12[COMRAM] unsigned int 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3552 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3553 ;;Total ram usage:       11 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    4
  3556 ;; This function calls:
  3557 ;;		_LED_Control
  3558 ;;		_LED_Left
  3559 ;;		_LED_Right
  3560 ;;		___lwdiv
  3561 ;; This function is called by:
  3562 ;;		_LED_Update
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text31
  3567  00083C                     __ptext31:
  3568                           	opt callstack 0
  3569  00083C                     _LED_Light_Pos:
  3570                           	opt callstack 25
  3571                           
  3572                           ;incstack = 0
  3573                           ;LED_Light_Pos@color stored from wreg
  3574  00083C  6E11               	movwf	LED_Light_Pos@color,c
  3575                           
  3576                           ;LED.c: 164: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 16
      +                          5: {;LED.c: 166:     UINT pos2 =pos;
  3577  00083E  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3578  000842  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3579                           
  3580                           ;LED.c: 167:     UINT LED_array = 0b0000000000;
  3581  000846  0E00               	movlw	0
  3582  000848  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3583  00084A  0E00               	movlw	0
  3584  00084C  6E12               	movwf	LED_Light_Pos@LED_array,c
  3585                           
  3586                           ;LED.c: 168:     UINT flage = fulfillment/10;
  3587  00084E  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3588  000852  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3589  000856  0E00               	movlw	0
  3590  000858  6E09               	movwf	___lwdiv@divisor+1,c
  3591  00085A  0E0A               	movlw	10
  3592  00085C  6E08               	movwf	___lwdiv@divisor,c
  3593  00085E  ECCA  F005         	call	___lwdiv	;wreg free
  3594  000862  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3595  000866  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3596                           
  3597                           ;LED.c: 169:     if(color == RED)
  3598  00086A  5011               	movf	LED_Light_Pos@color,w,c
  3599  00086C  B4D8               	btfsc	status,2,c
  3600  00086E  D017               	goto	l2597
  3601  000870  D031               	goto	l2605
  3602  000872                     l2591:
  3603                           
  3604                           ;LED.c: 172:         {;LED.c: 173:             LED_array = pos2|LED_array;
  3605  000872  5012               	movf	LED_Light_Pos@LED_array,w,c
  3606  000874  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3607  000876  6E12               	movwf	LED_Light_Pos@LED_array,c
  3608  000878  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3609  00087A  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3610  00087C  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3611                           
  3612                           ;LED.c: 174:             pos2 = LED_Left(pos2);
  3613  00087E  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3614  000882  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3615  000886  EC63  F006         	call	_LED_Left	;wreg free
  3616  00088A  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3617  00088E  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3618                           
  3619                           ;LED.c: 175:             flage = flage - 1;
  3620  000892  0EFF               	movlw	255
  3621  000894  2416               	addwf	LED_Light_Pos@flage,w,c
  3622  000896  6E16               	movwf	LED_Light_Pos@flage,c
  3623  000898  0EFF               	movlw	255
  3624  00089A  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3625  00089C  6E17               	movwf	LED_Light_Pos@flage+1,c
  3626  00089E                     l2597:
  3627                           
  3628                           ;LED.c: 171:         while(flage>0)
  3629  00089E  5016               	movf	LED_Light_Pos@flage,w,c
  3630  0008A0  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3631  0008A2  B4D8               	btfsc	status,2,c
  3632  0008A4  D01B               	goto	u1250
  3633  0008A6  D7E5               	goto	l2591
  3634  0008A8                     l2599:
  3635                           
  3636                           ;LED.c: 181:         {;LED.c: 182:             LED_array = pos2|LED_array;
  3637  0008A8  5012               	movf	LED_Light_Pos@LED_array,w,c
  3638  0008AA  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3639  0008AC  6E12               	movwf	LED_Light_Pos@LED_array,c
  3640  0008AE  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3641  0008B0  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3642  0008B2  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3643                           
  3644                           ;LED.c: 183:             pos2 = LED_Right(pos2);
  3645  0008B4  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3646  0008B8  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3647  0008BC  EC1A  F006         	call	_LED_Right	;wreg free
  3648  0008C0  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3649  0008C4  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3650                           
  3651                           ;LED.c: 184:             flage = flage - 1;
  3652  0008C8  0EFF               	movlw	255
  3653  0008CA  2416               	addwf	LED_Light_Pos@flage,w,c
  3654  0008CC  6E16               	movwf	LED_Light_Pos@flage,c
  3655  0008CE  0EFF               	movlw	255
  3656  0008D0  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3657  0008D2  6E17               	movwf	LED_Light_Pos@flage+1,c
  3658  0008D4                     l2605:
  3659                           
  3660                           ;LED.c: 180:         while(flage>0)
  3661  0008D4  5016               	movf	LED_Light_Pos@flage,w,c
  3662  0008D6  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3663  0008D8  A4D8               	btfss	status,2,c
  3664  0008DA  D7E6               	goto	l2599
  3665  0008DC                     u1250:
  3666                           
  3667                           ;LED.c: 187:     LED_Control(color, LED_array);
  3668  0008DC  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3669  0008E0  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3670  0008E4  5011               	movf	LED_Light_Pos@color,w,c
  3671  0008E6  EC0F  F003         	call	_LED_Control
  3672  0008EA  0012               	return		;funcret
  3673  0008EC                     __end_of_LED_Light_Pos:
  3674                           	opt callstack 0
  3675                           
  3676 ;; *************** function ___lwdiv *****************
  3677 ;; Defined at:
  3678 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  dividend        2    5[COMRAM] unsigned int 
  3681 ;;  divisor         2    7[COMRAM] unsigned int 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  quotient        2    9[COMRAM] unsigned int 
  3684 ;;  counter         1   11[COMRAM] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2    5[COMRAM] unsigned int 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;Total ram usage:        7 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    3
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_LED_Light_Pos
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text32
  3709  000B94                     __ptext32:
  3710                           	opt callstack 0
  3711  000B94                     ___lwdiv:
  3712                           	opt callstack 25
  3713                           
  3714                           ;incstack = 0
  3715  000B94  0E00               	movlw	0
  3716  000B96  6E0B               	movwf	___lwdiv@quotient+1,c
  3717  000B98  0E00               	movlw	0
  3718  000B9A  6E0A               	movwf	___lwdiv@quotient,c
  3719  000B9C  5008               	movf	___lwdiv@divisor,w,c
  3720  000B9E  1009               	iorwf	___lwdiv@divisor+1,w,c
  3721  000BA0  B4D8               	btfsc	status,2,c
  3722  000BA2  D01C               	goto	l1079
  3723  000BA4  0E01               	movlw	1
  3724  000BA6  6E0C               	movwf	___lwdiv@counter,c
  3725  000BA8  D004               	goto	l2459
  3726  000BAA                     l2457:
  3727  000BAA  90D8               	bcf	status,0,c
  3728  000BAC  3608               	rlcf	___lwdiv@divisor,f,c
  3729  000BAE  3609               	rlcf	___lwdiv@divisor+1,f,c
  3730  000BB0  2A0C               	incf	___lwdiv@counter,f,c
  3731  000BB2                     l2459:
  3732  000BB2  AE09               	btfss	___lwdiv@divisor+1,7,c
  3733  000BB4  D7FA               	goto	l2457
  3734  000BB6                     u1150:
  3735  000BB6  90D8               	bcf	status,0,c
  3736  000BB8  360A               	rlcf	___lwdiv@quotient,f,c
  3737  000BBA  360B               	rlcf	___lwdiv@quotient+1,f,c
  3738  000BBC  5008               	movf	___lwdiv@divisor,w,c
  3739  000BBE  5C06               	subwf	___lwdiv@dividend,w,c
  3740  000BC0  5009               	movf	___lwdiv@divisor+1,w,c
  3741  000BC2  5807               	subwfb	___lwdiv@dividend+1,w,c
  3742  000BC4  A0D8               	btfss	status,0,c
  3743  000BC6  D005               	goto	l2469
  3744  000BC8  5008               	movf	___lwdiv@divisor,w,c
  3745  000BCA  5E06               	subwf	___lwdiv@dividend,f,c
  3746  000BCC  5009               	movf	___lwdiv@divisor+1,w,c
  3747  000BCE  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3748  000BD0  800A               	bsf	___lwdiv@quotient,0,c
  3749  000BD2                     l2469:
  3750  000BD2  90D8               	bcf	status,0,c
  3751  000BD4  3209               	rrcf	___lwdiv@divisor+1,f,c
  3752  000BD6  3208               	rrcf	___lwdiv@divisor,f,c
  3753  000BD8  2E0C               	decfsz	___lwdiv@counter,f,c
  3754  000BDA  D7ED               	goto	u1150
  3755  000BDC                     l1079:
  3756  000BDC  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3757  000BE0  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3758  000BE4  0012               	return		;funcret
  3759  000BE6                     __end_of___lwdiv:
  3760                           	opt callstack 0
  3761                           
  3762 ;; *************** function _LED_Right *****************
  3763 ;; Defined at:
  3764 ;;		line 108 in file "LED.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  a               2    5[COMRAM] unsigned int 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  b               2    9[COMRAM] unsigned int 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    5[COMRAM] unsigned int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;Total ram usage:        6 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    3
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_LED_Update
  3789 ;;		_LED_Light_Pos
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text33
  3794  000C34                     __ptext33:
  3795                           	opt callstack 0
  3796  000C34                     _LED_Right:
  3797                           	opt callstack 26
  3798                           
  3799                           ;LED.c: 108: UINT LED_Right(UINT a);LED.c: 109: {;LED.c: 110:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3800                           
  3801                           ;incstack = 0
  3802  000C34  A006               	btfss	LED_Right@a,0,c
  3803  000C36  D018               	goto	l2325
  3804                           
  3805                           ;LED.c: 111:     {;LED.c: 112:         UINT b = a & 0b1111111110;
  3806  000C38  0EFE               	movlw	254
  3807  000C3A  1406               	andwf	LED_Right@a,w,c
  3808  000C3C  6E0A               	movwf	LED_Right@b,c
  3809  000C3E  0E03               	movlw	3
  3810  000C40  1407               	andwf	LED_Right@a+1,w,c
  3811  000C42  6E0B               	movwf	LED_Right@b+1,c
  3812                           
  3813                           ;LED.c: 113:         b = b >> 1;
  3814  000C44  90D8               	bcf	status,0,c
  3815  000C46  300B               	rrcf	LED_Right@b+1,w,c
  3816  000C48  6E08               	movwf	??_LED_Right& (0+255),c
  3817  000C4A  300A               	rrcf	LED_Right@b,w,c
  3818  000C4C  6E0A               	movwf	LED_Right@b,c
  3819  000C4E  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3820                           
  3821                           ;LED.c: 114:         b = b | 0b1000000000;
  3822  000C52  0E00               	movlw	0
  3823  000C54  100A               	iorwf	LED_Right@b,w,c
  3824  000C56  6E0A               	movwf	LED_Right@b,c
  3825  000C58  0E02               	movlw	2
  3826  000C5A  100B               	iorwf	LED_Right@b+1,w,c
  3827  000C5C  6E0B               	movwf	LED_Right@b+1,c
  3828                           
  3829                           ;LED.c: 115:         return b;
  3830  000C5E  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3831  000C62  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3832  000C66  0012               	return	
  3833  000C68                     l2325:
  3834                           
  3835                           ;LED.c: 118:     {;LED.c: 119:         a =a >> 1;
  3836  000C68  90D8               	bcf	status,0,c
  3837  000C6A  3007               	rrcf	LED_Right@a+1,w,c
  3838  000C6C  6E08               	movwf	??_LED_Right& (0+255),c
  3839  000C6E  3006               	rrcf	LED_Right@a,w,c
  3840  000C70  6E06               	movwf	LED_Right@a,c
  3841  000C72  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3842                           
  3843                           ;LED.c: 120:         return a;
  3844  000C76  C006  F006         	movff	LED_Right@a,?_LED_Right
  3845  000C7A  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3846  000C7E  0012               	return		;funcret
  3847  000C80                     __end_of_LED_Right:
  3848                           	opt callstack 0
  3849                           
  3850 ;; *************** function _LED_Left *****************
  3851 ;; Defined at:
  3852 ;;		line 135 in file "LED.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  a               2    5[COMRAM] unsigned int 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  b               2    7[COMRAM] unsigned int 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  2    5[COMRAM] unsigned int 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3869 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;Total ram usage:        4 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    3
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_LED_Update
  3877 ;;		_LED_Light_Pos
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text34
  3882  000CC6                     __ptext34:
  3883                           	opt callstack 0
  3884  000CC6                     _LED_Left:
  3885                           	opt callstack 25
  3886                           
  3887                           ;LED.c: 135: UINT LED_Left(UINT a);LED.c: 136: {;LED.c: 137:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3888                           
  3889                           ;incstack = 0
  3890  000CC6  A207               	btfss	LED_Left@a+1,1,c
  3891  000CC8  D015               	goto	l2341
  3892                           
  3893                           ;LED.c: 138:     {;LED.c: 139:         UINT b = a & 0b0111111111;
  3894  000CCA  0EFF               	movlw	255
  3895  000CCC  1406               	andwf	LED_Left@a,w,c
  3896  000CCE  6E08               	movwf	LED_Left@b,c
  3897  000CD0  0E01               	movlw	1
  3898  000CD2  1407               	andwf	LED_Left@a+1,w,c
  3899  000CD4  6E09               	movwf	LED_Left@b+1,c
  3900                           
  3901                           ;LED.c: 140:         b = b << 1;
  3902  000CD6  90D8               	bcf	status,0,c
  3903  000CD8  3408               	rlcf	LED_Left@b,w,c
  3904  000CDA  6E08               	movwf	LED_Left@b,c
  3905  000CDC  3409               	rlcf	LED_Left@b+1,w,c
  3906  000CDE  6E09               	movwf	LED_Left@b+1,c
  3907                           
  3908                           ;LED.c: 141:         b = b | 0b0000000001;
  3909  000CE0  0E01               	movlw	1
  3910  000CE2  1008               	iorwf	LED_Left@b,w,c
  3911  000CE4  6E08               	movwf	LED_Left@b,c
  3912  000CE6  5009               	movf	LED_Left@b+1,w,c
  3913  000CE8  6E09               	movwf	LED_Left@b+1,c
  3914                           
  3915                           ;LED.c: 142:         return b;
  3916  000CEA  C008  F006         	movff	LED_Left@b,?_LED_Left
  3917  000CEE  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3918  000CF2  0012               	return	
  3919  000CF4                     l2341:
  3920                           
  3921                           ;LED.c: 145:     {;LED.c: 146:         a = a << 1;
  3922  000CF4  90D8               	bcf	status,0,c
  3923  000CF6  3406               	rlcf	LED_Left@a,w,c
  3924  000CF8  6E06               	movwf	LED_Left@a,c
  3925  000CFA  3407               	rlcf	LED_Left@a+1,w,c
  3926  000CFC  6E07               	movwf	LED_Left@a+1,c
  3927                           
  3928                           ;LED.c: 147:         return a;
  3929  000CFE  C006  F006         	movff	LED_Left@a,?_LED_Left
  3930  000D02  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3931  000D06  0012               	return		;funcret
  3932  000D08                     __end_of_LED_Left:
  3933                           	opt callstack 0
  3934                           
  3935 ;; *************** function _INI_All *****************
  3936 ;; Defined at:
  3937 ;;		line 52 in file "INI.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:    5
  3958 ;; This function calls:
  3959 ;;		_CAN_Setup
  3960 ;;		_INI_GlobalInterrupt
  3961 ;;		_INI_LED_Start
  3962 ;;		_INI_OUTPUT
  3963 ;;		_INI_Timer
  3964 ;; This function is called by:
  3965 ;;		_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text35
  3970  000F16                     __ptext35:
  3971                           	opt callstack 0
  3972  000F16                     _INI_All:
  3973                           	opt callstack 25
  3974                           
  3975                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3976                           
  3977                           ;incstack = 0
  3978  000F16  80D1               	bsf	4049,0,c	;volatile
  3979  000F18  0004               	clrwdt		;# 
  3980                           
  3981                           ;INI.c: 64:     INI_OUTPUT();
  3982  000F1A  EC7C  F007         	call	_INI_OUTPUT	;wreg free
  3983                           
  3984                           ;INI.c: 66:     CAN_Setup();
  3985  000F1E  ECED  F004         	call	_CAN_Setup	;wreg free
  3986                           
  3987                           ;INI.c: 67:     INI_GlobalInterrupt();
  3988  000F22  ECA4  F007         	call	_INI_GlobalInterrupt	;wreg free
  3989                           
  3990                           ;INI.c: 69:     INI_Timer();
  3991  000F26  EC98  F007         	call	_INI_Timer	;wreg free
  3992                           
  3993                           ;INI.c: 71:     INI_LED_Start();
  3994  000F2A  ECF0  F006         	call	_INI_LED_Start	;wreg free
  3995  000F2E  0012               	return		;funcret
  3996  000F30                     __end_of_INI_All:
  3997                           	opt callstack 0
  3998                           
  3999 ;; *************** function _INI_Timer *****************
  4000 ;; Defined at:
  4001 ;;		line 92 in file "TMR1.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      unsigned char 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4019 ;;Total ram usage:        0 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    3
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_INI_All
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text36
  4030  000F30                     __ptext36:
  4031                           	opt callstack 0
  4032  000F30                     _INI_Timer:
  4033                           	opt callstack 26
  4034                           
  4035                           ;TMR1.c: 96:     IRCF2 = 1;
  4036                           
  4037                           ;incstack = 0
  4038  000F30  8CD3               	bsf	4051,6,c	;volatile
  4039                           
  4040                           ;TMR1.c: 97:     IRCF1 = 1;
  4041  000F32  8AD3               	bsf	4051,5,c	;volatile
  4042                           
  4043                           ;TMR1.c: 98:     IRCF0 = 1;
  4044  000F34  88D3               	bsf	4051,4,c	;volatile
  4045                           
  4046                           ;TMR1.c: 99:     T1CON = 0b00111101;
  4047  000F36  0E3D               	movlw	61
  4048  000F38  6ECD               	movwf	4045,c	;volatile
  4049                           
  4050                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4051  000F3A  0E9E               	movlw	158
  4052  000F3C  6ECF               	movwf	4047,c	;volatile
  4053                           
  4054                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4055  000F3E  0E57               	movlw	87
  4056  000F40  6ECE               	movwf	4046,c	;volatile
  4057                           
  4058                           ;TMR1.c: 102:     TMR1IE=1;
  4059  000F42  809D               	bsf	3997,0,c	;volatile
  4060                           
  4061                           ;TMR1.c: 103:     TMR1ON = 1;
  4062  000F44  80CD               	bsf	4045,0,c	;volatile
  4063  000F46  0012               	return		;funcret
  4064  000F48                     __end_of_INI_Timer:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _INI_OUTPUT *****************
  4068 ;; Defined at:
  4069 ;;		line 27 in file "INI.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    3
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_INI_All
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text37
  4098  000EF8                     __ptext37:
  4099                           	opt callstack 0
  4100  000EF8                     _INI_OUTPUT:
  4101                           	opt callstack 26
  4102                           
  4103                           ;INI.c: 31:     LATA = 0;
  4104                           
  4105                           ;incstack = 0
  4106  000EF8  0E00               	movlw	0
  4107  000EFA  6E89               	movwf	3977,c	;volatile
  4108                           
  4109                           ;INI.c: 32:     LATB = 0;
  4110  000EFC  0E00               	movlw	0
  4111  000EFE  6E8A               	movwf	3978,c	;volatile
  4112                           
  4113                           ;INI.c: 33:     LATC = 0;
  4114  000F00  0E00               	movlw	0
  4115  000F02  6E8B               	movwf	3979,c	;volatile
  4116                           
  4117                           ;INI.c: 34:     TRISA = 0x0C;
  4118  000F04  0E0C               	movlw	12
  4119  000F06  6E92               	movwf	3986,c	;volatile
  4120                           
  4121                           ;INI.c: 35:     TRISB = 0b10001000;
  4122  000F08  0E88               	movlw	136
  4123  000F0A  6E93               	movwf	3987,c	;volatile
  4124                           
  4125                           ;INI.c: 36:     TRISC = 0xBF;
  4126  000F0C  0EBF               	movlw	191
  4127  000F0E  6E94               	movwf	3988,c	;volatile
  4128                           
  4129                           ;INI.c: 37:     RCONbits.IPEN = 1;
  4130  000F10  8ED0               	bsf	4048,7,c	;volatile
  4131                           
  4132                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  4133  000F12  863D               	bsf	_DetectorLedRadar,3,c
  4134  000F14  0012               	return		;funcret
  4135  000F16                     __end_of_INI_OUTPUT:
  4136                           	opt callstack 0
  4137                           
  4138 ;; *************** function _INI_LED_Start *****************
  4139 ;; Defined at:
  4140 ;;		line 199 in file "LED.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, status,0, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:    4
  4161 ;; This function calls:
  4162 ;;		_LED_Control
  4163 ;; This function is called by:
  4164 ;;		_INI_All
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text38
  4169  000DE0                     __ptext38:
  4170                           	opt callstack 0
  4171  000DE0                     _INI_LED_Start:
  4172                           	opt callstack 25
  4173                           
  4174                           ;LED.c: 201:     TRISA = TRISA & 0b00000001;
  4175                           
  4176                           ;incstack = 0
  4177  000DE0  5092               	movf	3986,w,c	;volatile
  4178  000DE2  0B01               	andlw	1
  4179  000DE4  6E92               	movwf	3986,c	;volatile
  4180                           
  4181                           ;LED.c: 202:     TRISB = TRISB & 0b11111100;
  4182  000DE6  5093               	movf	3987,w,c	;volatile
  4183  000DE8  0BFC               	andlw	252
  4184  000DEA  6E93               	movwf	3987,c	;volatile
  4185                           
  4186                           ;LED.c: 203:     TRISE = TRISE & 0b11111000;
  4187  000DEC  5096               	movf	3990,w,c	;volatile
  4188  000DEE  0BF8               	andlw	248
  4189  000DF0  6E96               	movwf	3990,c	;volatile
  4190                           
  4191                           ;LED.c: 204:     TRISD = TRISD & 0b00000000;
  4192  000DF2  0E00               	movlw	0
  4193  000DF4  6E95               	movwf	3989,c	;volatile
  4194                           
  4195                           ;LED.c: 205:     LED_Control(RED,0b0000000000);
  4196  000DF6  0E00               	movlw	0
  4197  000DF8  6E07               	movwf	LED_Control@diode+1,c
  4198  000DFA  0E00               	movlw	0
  4199  000DFC  6E06               	movwf	LED_Control@diode,c
  4200  000DFE  0E00               	movlw	0
  4201  000E00  EC0F  F003         	call	_LED_Control
  4202                           
  4203                           ;LED.c: 206:     LED_Control(GREEN,0b0000000000);
  4204  000E04  0E00               	movlw	0
  4205  000E06  6E07               	movwf	LED_Control@diode+1,c
  4206  000E08  0E00               	movlw	0
  4207  000E0A  6E06               	movwf	LED_Control@diode,c
  4208  000E0C  0E01               	movlw	1
  4209  000E0E  EC0F  F003         	call	_LED_Control
  4210  000E12  0012               	return		;funcret
  4211  000E14                     __end_of_INI_LED_Start:
  4212                           	opt callstack 0
  4213                           
  4214 ;; *************** function _LED_Control *****************
  4215 ;; Defined at:
  4216 ;;		line 224 in file "LED.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  color           1    wreg     enum E10640
  4219 ;;  diode           2    5[COMRAM] unsigned int 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  color           1    9[COMRAM] enum E10640
  4222 ;;  cos             2    0        unsigned int 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4233 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;Total ram usage:        5 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    3
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_LED_Error
  4243 ;;		_LED_Light_Pos
  4244 ;;		_INI_LED_Start
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text39
  4249  00061E                     __ptext39:
  4250                           	opt callstack 0
  4251  00061E                     _LED_Control:
  4252                           	opt callstack 24
  4253                           
  4254                           ;incstack = 0
  4255                           ;LED_Control@color stored from wreg
  4256  00061E  6E0A               	movwf	LED_Control@color,c
  4257                           
  4258                           ;LED.c: 227:     if(color == RED)
  4259  000620  500A               	movf	LED_Control@color,w,c
  4260  000622  A4D8               	btfss	status,2,c
  4261  000624  D050               	goto	l296
  4262                           
  4263                           ;LED.c: 228:     {;LED.c: 230:         if((diode & 0b0000000001)== 0b0000000001)
  4264  000626  A006               	btfss	LED_Control@diode,0,c
  4265  000628  D003               	goto	l2081
  4266                           
  4267                           ;LED.c: 231:         {;LED.c: 232:             LATD = LATD | ~0b11101111;
  4268  00062A  508C               	movf	3980,w,c	;volatile
  4269  00062C  0910               	iorlw	16
  4270  00062E  D002               	goto	L3
  4271  000630                     l2081:
  4272                           
  4273                           ;LED.c: 235:         {;LED.c: 236:             LATD = LATD &0b11101111;
  4274  000630  508C               	movf	3980,w,c	;volatile
  4275  000632  0BEF               	andlw	239
  4276  000634                     L3:
  4277  000634  6E8C               	movwf	3980,c	;volatile
  4278                           
  4279                           ;LED.c: 239:         if((diode & 0b0000000010) == 0b0000000010)
  4280  000636  A206               	btfss	LED_Control@diode,1,c
  4281  000638  D003               	goto	l2087
  4282                           
  4283                           ;LED.c: 240:         {;LED.c: 241:             LATD = LATD | ~0b10111111;
  4284  00063A  508C               	movf	3980,w,c	;volatile
  4285  00063C  0940               	iorlw	64
  4286  00063E  D002               	goto	L4
  4287  000640                     l2087:
  4288                           
  4289                           ;LED.c: 244:         {;LED.c: 245:             LATD = LATD & 0b10111111;
  4290  000640  508C               	movf	3980,w,c	;volatile
  4291  000642  0BBF               	andlw	191
  4292  000644                     L4:
  4293  000644  6E8C               	movwf	3980,c	;volatile
  4294                           
  4295                           ;LED.c: 248:         if((diode & 0b0000000100) == 0b0000000100)
  4296  000646  A406               	btfss	LED_Control@diode,2,c
  4297  000648  D003               	goto	l2093
  4298                           
  4299                           ;LED.c: 249:         {;LED.c: 250:             LATB = LATB | ~0b11111110;
  4300  00064A  508A               	movf	3978,w,c	;volatile
  4301  00064C  0901               	iorlw	1
  4302  00064E  D002               	goto	L5
  4303  000650                     l2093:
  4304                           
  4305                           ;LED.c: 253:         {;LED.c: 254:             LATB = LATB & 0b11111110;
  4306  000650  508A               	movf	3978,w,c	;volatile
  4307  000652  0BFE               	andlw	254
  4308  000654                     L5:
  4309  000654  6E8A               	movwf	3978,c	;volatile
  4310                           
  4311                           ;LED.c: 258:         if((diode & 0b0000001000) == 0b0000001000)
  4312  000656  A606               	btfss	LED_Control@diode,3,c
  4313  000658  D003               	goto	l2099
  4314                           
  4315                           ;LED.c: 259:         {;LED.c: 260:             LATA = LATA | ~0b11111101;
  4316  00065A  5089               	movf	3977,w,c	;volatile
  4317  00065C  0902               	iorlw	2
  4318  00065E  D002               	goto	L6
  4319  000660                     l2099:
  4320                           
  4321                           ;LED.c: 263:         {;LED.c: 264:             LATA = LATA & 0b11111101;
  4322  000660  5089               	movf	3977,w,c	;volatile
  4323  000662  0BFD               	andlw	253
  4324  000664                     L6:
  4325  000664  6E89               	movwf	3977,c	;volatile
  4326                           
  4327                           ;LED.c: 268:         if((diode & 0b0000010000) == 0b0000010000)
  4328  000666  A806               	btfss	LED_Control@diode,4,c
  4329  000668  D003               	goto	l2105
  4330                           
  4331                           ;LED.c: 269:         {;LED.c: 270:             LATA = LATA | ~0b11110111;
  4332  00066A  5089               	movf	3977,w,c	;volatile
  4333  00066C  0908               	iorlw	8
  4334  00066E  D002               	goto	L7
  4335  000670                     l2105:
  4336                           
  4337                           ;LED.c: 273:         {;LED.c: 274:             LATA = LATA & 0b11110111;
  4338  000670  5089               	movf	3977,w,c	;volatile
  4339  000672  0BF7               	andlw	247
  4340  000674                     L7:
  4341  000674  6E89               	movwf	3977,c	;volatile
  4342                           
  4343                           ;LED.c: 278:         if((diode & 0b0000100000) == 0b0000100000)
  4344  000676  AA06               	btfss	LED_Control@diode,5,c
  4345  000678  D003               	goto	l2111
  4346                           
  4347                           ;LED.c: 279:         {;LED.c: 280:             LATA = LATA | ~0b11011111;
  4348  00067A  5089               	movf	3977,w,c	;volatile
  4349  00067C  0920               	iorlw	32
  4350  00067E  D002               	goto	L8
  4351  000680                     l2111:
  4352                           
  4353                           ;LED.c: 283:         {;LED.c: 284:             LATA = LATA & 0b11011111;
  4354  000680  5089               	movf	3977,w,c	;volatile
  4355  000682  0BDF               	andlw	223
  4356  000684                     L8:
  4357  000684  6E89               	movwf	3977,c	;volatile
  4358                           
  4359                           ;LED.c: 287:         if((diode & 0b0001000000) == 0b0001000000)
  4360  000686  AC06               	btfss	LED_Control@diode,6,c
  4361  000688  D003               	goto	l2117
  4362                           
  4363                           ;LED.c: 288:         {;LED.c: 289:             LATE = LATE | ~0b11111101;
  4364  00068A  508D               	movf	3981,w,c	;volatile
  4365  00068C  0902               	iorlw	2
  4366  00068E  D002               	goto	L9
  4367  000690                     l2117:
  4368                           
  4369                           ;LED.c: 292:         {;LED.c: 293:             LATE = LATE & 0b11111101;
  4370  000690  508D               	movf	3981,w,c	;volatile
  4371  000692  0BFD               	andlw	253
  4372  000694                     L9:
  4373  000694  6E8D               	movwf	3981,c	;volatile
  4374                           
  4375                           ;LED.c: 296:         if((diode & 0b0010000000) == 0b0010000000)
  4376  000696  AE06               	btfss	LED_Control@diode,7,c
  4377  000698  D003               	goto	l2123
  4378                           
  4379                           ;LED.c: 297:         {;LED.c: 298:             LATA = LATA | ~0b01111111;
  4380  00069A  5089               	movf	3977,w,c	;volatile
  4381  00069C  0980               	iorlw	128
  4382  00069E  D002               	goto	L10
  4383  0006A0                     l2123:
  4384                           
  4385                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA & 0b01111111;
  4386  0006A0  5089               	movf	3977,w,c	;volatile
  4387  0006A2  0B7F               	andlw	127
  4388  0006A4                     L10:
  4389  0006A4  6E89               	movwf	3977,c	;volatile
  4390                           
  4391                           ;LED.c: 306:         if((diode & 0b0100000000) == 0b0100000000)
  4392  0006A6  A007               	btfss	LED_Control@diode+1,0,c
  4393  0006A8  D003               	goto	l2129
  4394                           
  4395                           ;LED.c: 307:         {;LED.c: 308:             LATD = LATD | ~0b11111110;
  4396  0006AA  508C               	movf	3980,w,c	;volatile
  4397  0006AC  0901               	iorlw	1
  4398  0006AE  D002               	goto	L11
  4399  0006B0                     l2129:
  4400                           
  4401                           ;LED.c: 311:         {;LED.c: 312:             LATD = LATD & 0b11111110;
  4402  0006B0  508C               	movf	3980,w,c	;volatile
  4403  0006B2  0BFE               	andlw	254
  4404  0006B4                     L11:
  4405  0006B4  6E8C               	movwf	3980,c	;volatile
  4406                           
  4407                           ;LED.c: 315:         if((diode & 0b1000000000) == 0b1000000000)
  4408  0006B6  A207               	btfss	LED_Control@diode+1,1,c
  4409  0006B8  D003               	goto	l2135
  4410                           
  4411                           ;LED.c: 316:         {;LED.c: 317:             LATD = LATD | ~0b11111011;
  4412  0006BA  508C               	movf	3980,w,c	;volatile
  4413  0006BC  0904               	iorlw	4
  4414  0006BE  D002               	goto	L12
  4415  0006C0                     l2135:
  4416                           
  4417                           ;LED.c: 320:         {;LED.c: 321:             LATD = LATD & 0b11111011;
  4418  0006C0  508C               	movf	3980,w,c	;volatile
  4419  0006C2  0BFB               	andlw	251
  4420  0006C4                     L12:
  4421  0006C4  6E8C               	movwf	3980,c	;volatile
  4422  0006C6                     l296:
  4423                           
  4424                           ;LED.c: 326:     if(color == GREEN)
  4425  0006C6  040A               	decf	LED_Control@color,w,c
  4426  0006C8  A4D8               	btfss	status,2,c
  4427  0006CA  0012               	return	
  4428                           
  4429                           ;LED.c: 327:     {;LED.c: 329:         if((diode & 0b0000000001) == 0b0000000001)
  4430  0006CC  A006               	btfss	LED_Control@diode,0,c
  4431  0006CE  D003               	goto	l2141
  4432                           
  4433                           ;LED.c: 330:         {;LED.c: 331:             LATD = LATD | ~0b11011111;
  4434  0006D0  508C               	movf	3980,w,c	;volatile
  4435  0006D2  0920               	iorlw	32
  4436  0006D4  D002               	goto	L13
  4437  0006D6                     l2141:
  4438                           
  4439                           ;LED.c: 334:         {;LED.c: 335:             LATD = LATD & 0b11011111;
  4440  0006D6  508C               	movf	3980,w,c	;volatile
  4441  0006D8  0BDF               	andlw	223
  4442  0006DA                     L13:
  4443  0006DA  6E8C               	movwf	3980,c	;volatile
  4444                           
  4445                           ;LED.c: 339:         if((diode & 0b0000000010) == 0b0000000010)
  4446  0006DC  A206               	btfss	LED_Control@diode,1,c
  4447  0006DE  D003               	goto	l2147
  4448                           
  4449                           ;LED.c: 340:         {;LED.c: 341:             LATD = LATD | ~0b01111111;
  4450  0006E0  508C               	movf	3980,w,c	;volatile
  4451  0006E2  0980               	iorlw	128
  4452  0006E4  D002               	goto	L14
  4453  0006E6                     l2147:
  4454                           
  4455                           ;LED.c: 344:         {;LED.c: 345:             LATD = LATD & 0b01111111;
  4456  0006E6  508C               	movf	3980,w,c	;volatile
  4457  0006E8  0B7F               	andlw	127
  4458  0006EA                     L14:
  4459  0006EA  6E8C               	movwf	3980,c	;volatile
  4460                           
  4461                           ;LED.c: 349:         if((diode & 0b0000000100) == 0b0000000100)
  4462  0006EC  A406               	btfss	LED_Control@diode,2,c
  4463  0006EE  D003               	goto	l2153
  4464                           
  4465                           ;LED.c: 350:         {;LED.c: 351:             LATB = LATB | ~0b11111101;
  4466  0006F0  508A               	movf	3978,w,c	;volatile
  4467  0006F2  0902               	iorlw	2
  4468  0006F4  D002               	goto	L15
  4469  0006F6                     l2153:
  4470                           
  4471                           ;LED.c: 354:         {;LED.c: 355:             LATB = LATB & 0b11111101;
  4472  0006F6  508A               	movf	3978,w,c	;volatile
  4473  0006F8  0BFD               	andlw	253
  4474  0006FA                     L15:
  4475  0006FA  6E8A               	movwf	3978,c	;volatile
  4476                           
  4477                           ;LED.c: 358:         if((diode & 0b0000001000) == 0b0000001000)
  4478  0006FC  A606               	btfss	LED_Control@diode,3,c
  4479  0006FE  D003               	goto	l2159
  4480                           
  4481                           ;LED.c: 359:         {;LED.c: 360:             LATA = LATA | ~0b11111011;
  4482  000700  5089               	movf	3977,w,c	;volatile
  4483  000702  0904               	iorlw	4
  4484  000704  D002               	goto	L16
  4485  000706                     l2159:
  4486                           
  4487                           ;LED.c: 363:         {;LED.c: 364:             LATA = LATA & 0b11111011;
  4488  000706  5089               	movf	3977,w,c	;volatile
  4489  000708  0BFB               	andlw	251
  4490  00070A                     L16:
  4491  00070A  6E89               	movwf	3977,c	;volatile
  4492                           
  4493                           ;LED.c: 368:         if((diode & 0b0000010000) == 0b0000010000)
  4494  00070C  A806               	btfss	LED_Control@diode,4,c
  4495  00070E  D003               	goto	l2165
  4496                           
  4497                           ;LED.c: 369:         {;LED.c: 370:             LATA = LATA | ~0b11101111;
  4498  000710  5089               	movf	3977,w,c	;volatile
  4499  000712  0910               	iorlw	16
  4500  000714  D002               	goto	L17
  4501  000716                     l2165:
  4502                           
  4503                           ;LED.c: 373:         {;LED.c: 374:             LATA = LATA & 0b11101111;
  4504  000716  5089               	movf	3977,w,c	;volatile
  4505  000718  0BEF               	andlw	239
  4506  00071A                     L17:
  4507  00071A  6E89               	movwf	3977,c	;volatile
  4508                           
  4509                           ;LED.c: 378:         if((diode & 0b0000100000) == 0b0000100000)
  4510  00071C  AA06               	btfss	LED_Control@diode,5,c
  4511  00071E  D003               	goto	l2171
  4512                           
  4513                           ;LED.c: 379:         {;LED.c: 380:             LATE = LATE | ~0b11111110;
  4514  000720  508D               	movf	3981,w,c	;volatile
  4515  000722  0901               	iorlw	1
  4516  000724  D002               	goto	L18
  4517  000726                     l2171:
  4518                           
  4519                           ;LED.c: 383:         {;LED.c: 384:             LATE = LATE & 0b11111110;
  4520  000726  508D               	movf	3981,w,c	;volatile
  4521  000728  0BFE               	andlw	254
  4522  00072A                     L18:
  4523  00072A  6E8D               	movwf	3981,c	;volatile
  4524                           
  4525                           ;LED.c: 388:         if((diode & 0b0001000000) == 0b0001000000)
  4526  00072C  AC06               	btfss	LED_Control@diode,6,c
  4527  00072E  D003               	goto	l2177
  4528                           
  4529                           ;LED.c: 389:         {;LED.c: 390:             LATE = LATE | ~0b11111011;
  4530  000730  508D               	movf	3981,w,c	;volatile
  4531  000732  0904               	iorlw	4
  4532  000734  D002               	goto	L19
  4533  000736                     l2177:
  4534                           
  4535                           ;LED.c: 393:         {;LED.c: 394:             LATE = LATE & 0b11111011;
  4536  000736  508D               	movf	3981,w,c	;volatile
  4537  000738  0BFB               	andlw	251
  4538  00073A                     L19:
  4539  00073A  6E8D               	movwf	3981,c	;volatile
  4540                           
  4541                           ;LED.c: 397:         if((diode & 0b0010000000) == 0b0010000000)
  4542  00073C  AE06               	btfss	LED_Control@diode,7,c
  4543  00073E  D003               	goto	l2183
  4544                           
  4545                           ;LED.c: 398:         {;LED.c: 399:             LATA = LATA | ~0b10111111;
  4546  000740  5089               	movf	3977,w,c	;volatile
  4547  000742  0940               	iorlw	64
  4548  000744  D002               	goto	L20
  4549  000746                     l2183:
  4550                           
  4551                           ;LED.c: 402:         {;LED.c: 403:             LATA = LATA & 0b10111111;
  4552  000746  5089               	movf	3977,w,c	;volatile
  4553  000748  0BBF               	andlw	191
  4554  00074A                     L20:
  4555  00074A  6E89               	movwf	3977,c	;volatile
  4556                           
  4557                           ;LED.c: 406:         if((diode & 0b0100000000) == 0b0100000000)
  4558  00074C  A007               	btfss	LED_Control@diode+1,0,c
  4559  00074E  D003               	goto	l2189
  4560                           
  4561                           ;LED.c: 407:         {;LED.c: 408:             LATD = LATD | ~0b11111101;
  4562  000750  508C               	movf	3980,w,c	;volatile
  4563  000752  0902               	iorlw	2
  4564  000754  D002               	goto	L21
  4565  000756                     l2189:
  4566                           
  4567                           ;LED.c: 411:         {;LED.c: 412:             LATD = LATD & 0b11111101;
  4568  000756  508C               	movf	3980,w,c	;volatile
  4569  000758  0BFD               	andlw	253
  4570  00075A                     L21:
  4571  00075A  6E8C               	movwf	3980,c	;volatile
  4572                           
  4573                           ;LED.c: 415:         if((diode & 0b1000000000) == 0b1000000000)
  4574  00075C  A207               	btfss	LED_Control@diode+1,1,c
  4575  00075E  D004               	goto	l2195
  4576                           
  4577                           ;LED.c: 416:         {;LED.c: 417:             LATD = LATD | ~0b11110111;
  4578  000760  508C               	movf	3980,w,c	;volatile
  4579  000762  0908               	iorlw	8
  4580  000764  6E8C               	movwf	3980,c	;volatile
  4581                           
  4582                           ;LED.c: 418:         }
  4583  000766  0012               	return	
  4584  000768                     l2195:
  4585                           
  4586                           ;LED.c: 420:         {;LED.c: 421:             LATD = LATD &0b11110111;
  4587  000768  508C               	movf	3980,w,c	;volatile
  4588  00076A  0BF7               	andlw	247
  4589  00076C  6E8C               	movwf	3980,c	;volatile
  4590  00076E  0012               	return		;funcret
  4591  000770                     __end_of_LED_Control:
  4592                           	opt callstack 0
  4593                           
  4594 ;; *************** function _INI_GlobalInterrupt *****************
  4595 ;; Defined at:
  4596 ;;		line 74 in file "INI.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		None
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    3
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_INI_All
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text40
  4625  000F48                     __ptext40:
  4626                           	opt callstack 0
  4627  000F48                     _INI_GlobalInterrupt:
  4628                           	opt callstack 26
  4629                           
  4630                           ;INI.c: 76: INTCONbits.GIEH=1;
  4631                           
  4632                           ;incstack = 0
  4633  000F48  8EF2               	bsf	4082,7,c	;volatile
  4634                           
  4635                           ;INI.c: 77: INTCONbits.GIEL=1;
  4636  000F4A  8CF2               	bsf	4082,6,c	;volatile
  4637                           
  4638                           ;INI.c: 78: RCONbits.IPEN=1;
  4639  000F4C  8ED0               	bsf	4048,7,c	;volatile
  4640                           
  4641                           ;INI.c: 79: IPEN =1;
  4642  000F4E  8ED0               	bsf	4048,7,c	;volatile
  4643                           
  4644                           ;INI.c: 81: PEIE=1;
  4645  000F50  8CF2               	bsf	4082,6,c	;volatile
  4646                           
  4647                           ;INI.c: 82: TMR1IP = 0;
  4648  000F52  909F               	bcf	3999,0,c	;volatile
  4649  000F54  0012               	return		;funcret
  4650  000F56                     __end_of_INI_GlobalInterrupt:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function _CAN_Setup *****************
  4654 ;; Defined at:
  4655 ;;		line 22 in file "CAN.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;Total ram usage:        1 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    4
  4676 ;; This function calls:
  4677 ;;		_CAN_SetupClock
  4678 ;;		_CAN_SetupMask
  4679 ;; This function is called by:
  4680 ;;		_INI_All
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text41
  4685  0009DA                     __ptext41:
  4686                           	opt callstack 0
  4687  0009DA                     _CAN_Setup:
  4688                           	opt callstack 25
  4689                           
  4690                           ;CAN.c: 27:     CANCON = 0x80;
  4691                           
  4692                           ;incstack = 0
  4693  0009DA  0E80               	movlw	128
  4694  0009DC  6E6F               	movwf	3951,c	;volatile
  4695  0009DE                     l2475:
  4696                           
  4697                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4698  0009DE  506E               	movf	3950,w,c	;volatile
  4699  0009E0  0BE0               	andlw	224
  4700  0009E2  0A80               	xorlw	128
  4701  0009E4  A4D8               	btfss	status,2,c
  4702  0009E6  D7FB               	goto	l2475
  4703                           
  4704                           ;CAN.c: 33:     BSEL0 = 0;
  4705  0009E8  0E00               	movlw	0
  4706  0009EA  010D               	movlb	13	; () banked
  4707  0009EC  6FF8               	movwf	248,b	;volatile
  4708                           
  4709                           ;CAN.c: 34:     TXB0CON = 0;
  4710  0009EE  0E00               	movlw	0
  4711  0009F0  010F               	movlb	15	; () banked
  4712  0009F2  6F40               	movwf	64,b	;volatile
  4713                           
  4714                           ;CAN.c: 35:     RXB0CON = 0;
  4715  0009F4  0E00               	movlw	0
  4716  0009F6  6E60               	movwf	3936,c	;volatile
  4717                           
  4718                           ;CAN.c: 36:     RXB1CON = 0;
  4719  0009F8  0E00               	movlw	0
  4720  0009FA  6F50               	movwf	80,b	;volatile
  4721                           
  4722                           ;CAN.c: 37:     B0CON = 0;
  4723  0009FC  0E00               	movlw	0
  4724  0009FE  010E               	movlb	14	; () banked
  4725  000A00  6F20               	movwf	32,b	;volatile
  4726                           
  4727                           ;CAN.c: 38:     B1CON = 0;
  4728  000A02  0E00               	movlw	0
  4729  000A04  6F30               	movwf	48,b	;volatile
  4730                           
  4731                           ;CAN.c: 39:     PIE3 = 0;
  4732  000A06  0E00               	movlw	0
  4733  000A08  6EA3               	movwf	4003,c	;volatile
  4734                           
  4735                           ; BSR set to: 14
  4736                           ;CAN.c: 40:     IPR3 = 0xFF;
  4737  000A0A  68A5               	setf	4005,c	;volatile
  4738                           
  4739                           ;CAN.c: 41:     PIR3 = 0x00;
  4740  000A0C  0E00               	movlw	0
  4741  000A0E  6EA4               	movwf	4004,c	;volatile
  4742                           
  4743                           ;CAN.c: 42:     BIE0 = 0;
  4744  000A10  0E00               	movlw	0
  4745  000A12  010D               	movlb	13	; () banked
  4746  000A14  6FFA               	movwf	250,b	;volatile
  4747                           
  4748                           ;CAN.c: 45:     ECANCON = 0x90;
  4749  000A16  0E90               	movlw	144
  4750  000A18  6E77               	movwf	3959,c	;volatile
  4751                           
  4752                           ; BSR set to: 13
  4753                           ;CAN.c: 48:     CAN_SetupClock();
  4754  000A1A  EC36  F007         	call	_CAN_SetupClock	;wreg free
  4755                           
  4756                           ;CAN.c: 51:     CAN_SetupMask();
  4757  000A1E  ECB8  F004         	call	_CAN_SetupMask	;wreg free
  4758                           
  4759                           ;CAN.c: 53:     CIOCON = 0xff;
  4760  000A22  6873               	setf	3955,c	;volatile
  4761                           
  4762                           ;CAN.c: 59:     CANCON = 0x00;
  4763  000A24  0E00               	movlw	0
  4764  000A26  6E6F               	movwf	3951,c	;volatile
  4765  000A28                     l2489:
  4766                           
  4767                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4768  000A28  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4769  000A2C  0EE0               	movlw	224
  4770  000A2E  1606               	andwf	??_CAN_Setup,f,c
  4771  000A30  B4D8               	btfsc	status,2,c
  4772  000A32  0012               	return	
  4773  000A34  D7F9               	goto	l2489
  4774  000A36                     __end_of_CAN_Setup:
  4775                           	opt callstack 0
  4776                           
  4777 ;; *************** function _CAN_SetupMask *****************
  4778 ;; Defined at:
  4779 ;;		line 81 in file "CAN.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;Total ram usage:        0 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    3
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_CAN_Setup
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text42
  4808  000970                     __ptext42:
  4809                           	opt callstack 0
  4810  000970                     _CAN_SetupMask:
  4811                           	opt callstack 25
  4812                           
  4813                           ;CAN.c: 83:     MSEL0 = 0x50;
  4814                           
  4815                           ;incstack = 0
  4816  000970  0E50               	movlw	80
  4817  000972  010D               	movlb	13	; () banked
  4818  000974  6FF0               	movwf	240,b	;volatile
  4819                           
  4820                           ;CAN.c: 84:     MSEL1 = 0x55;
  4821  000976  0E55               	movlw	85
  4822  000978  6FF1               	movwf	241,b	;volatile
  4823                           
  4824                           ;CAN.c: 85:     MSEL2 = 0x55;
  4825  00097A  0E55               	movlw	85
  4826  00097C  6FF2               	movwf	242,b	;volatile
  4827                           
  4828                           ;CAN.c: 86:     MSEL3 = 0x55;
  4829  00097E  0E55               	movlw	85
  4830  000980  6FF3               	movwf	243,b	;volatile
  4831                           
  4832                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4833  000982  0E00               	movlw	0
  4834  000984  010F               	movlb	15	; () banked
  4835  000986  6F18               	movwf	24,b	;volatile
  4836                           
  4837                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4838  000988  0E0B               	movlw	11
  4839  00098A  6F19               	movwf	25,b	;volatile
  4840                           
  4841                           ; BSR set to: 15
  4842                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4843  00098C  691A               	setf	26,b	;volatile
  4844                           
  4845                           ; BSR set to: 15
  4846                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4847  00098E  691B               	setf	27,b	;volatile
  4848                           
  4849                           ; BSR set to: 15
  4850                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4851  000990  691C               	setf	28,b	;volatile
  4852                           
  4853                           ; BSR set to: 15
  4854                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4855  000992  691D               	setf	29,b	;volatile
  4856                           
  4857                           ;CAN.c: 97:     RXM1EIDH = 0;
  4858  000994  0E00               	movlw	0
  4859  000996  6F1E               	movwf	30,b	;volatile
  4860                           
  4861                           ;CAN.c: 98:     RXM1EIDL = 0;
  4862  000998  0E00               	movlw	0
  4863  00099A  6F1F               	movwf	31,b	;volatile
  4864                           
  4865                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4866  00099C  0E00               	movlw	0
  4867  00099E  6F00               	movwf	0,b	;volatile
  4868                           
  4869                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4870  0009A0  0E01               	movlw	1
  4871  0009A2  6F01               	movwf	1,b	;volatile
  4872                           
  4873                           ; BSR set to: 15
  4874                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4875  0009A4  8701               	bsf	1,3,b	;volatile
  4876                           
  4877                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4878  0009A6  503A               	movf	_DaneCan+3,w,c
  4879  0009A8  6F02               	movwf	2,b	;volatile
  4880                           
  4881                           ; BSR set to: 15
  4882                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4883  0009AA  8D02               	bsf	2,6,b	;volatile
  4884                           
  4885                           ; BSR set to: 15
  4886                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4887  0009AC  C039  FF03         	movff	_DaneCan+2,3843	;volatile
  4888                           
  4889                           ; BSR set to: 15
  4890                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4891  0009B0  0E00               	movlw	0
  4892  0009B2  6F04               	movwf	4,b	;volatile
  4893                           
  4894                           ; BSR set to: 15
  4895                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4896  0009B4  0E01               	movlw	1
  4897  0009B6  6F05               	movwf	5,b	;volatile
  4898                           
  4899                           ; BSR set to: 15
  4900                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4901  0009B8  8705               	bsf	5,3,b	;volatile
  4902                           
  4903                           ; BSR set to: 15
  4904                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4905  0009BA  0E7F               	movlw	127
  4906  0009BC  6F06               	movwf	6,b	;volatile
  4907                           
  4908                           ; BSR set to: 15
  4909                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4910  0009BE  6907               	setf	7,b	;volatile
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;CAN.c: 115:     RXF2SIDH = 0;
  4914  0009C0  0E00               	movlw	0
  4915  0009C2  6F08               	movwf	8,b	;volatile
  4916                           
  4917                           ; BSR set to: 15
  4918                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4919  0009C4  0E20               	movlw	32
  4920  0009C6  6F09               	movwf	9,b	;volatile
  4921                           
  4922                           ; BSR set to: 15
  4923                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4924  0009C8  8709               	bsf	9,3,b	;volatile
  4925                           
  4926                           ; BSR set to: 15
  4927                           ;CAN.c: 118:     RXF2EIDH = 0;
  4928  0009CA  0E00               	movlw	0
  4929  0009CC  6F0A               	movwf	10,b	;volatile
  4930                           
  4931                           ; BSR set to: 15
  4932                           ;CAN.c: 119:     RXF2EIDL = 0;
  4933  0009CE  0E00               	movlw	0
  4934  0009D0  6F0B               	movwf	11,b	;volatile
  4935                           
  4936                           ; BSR set to: 15
  4937                           ;CAN.c: 127:     RXFCON0 = 0x07;
  4938  0009D2  0E07               	movlw	7
  4939  0009D4  010D               	movlb	13	; () banked
  4940  0009D6  6FD4               	movwf	212,b	;volatile
  4941                           
  4942                           ; BSR set to: 13
  4943  0009D8  0012               	return		;funcret
  4944  0009DA                     __end_of_CAN_SetupMask:
  4945                           	opt callstack 0
  4946                           
  4947 ;; *************** function _CAN_SetupClock *****************
  4948 ;; Defined at:
  4949 ;;		line 136 in file "CAN.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		None
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    3
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_CAN_Setup
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text43
  4978  000E6C                     __ptext43:
  4979                           	opt callstack 0
  4980  000E6C                     _CAN_SetupClock:
  4981                           	opt callstack 25
  4982                           
  4983                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4984                           
  4985                           ; BSR set to: 13
  4986                           ;incstack = 0
  4987  000E6C  8070               	bsf	3952,0,c	;volatile
  4988                           
  4989                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4990  000E6E  8270               	bsf	3952,1,c	;volatile
  4991                           
  4992                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4993  000E70  9470               	bcf	3952,2,c	;volatile
  4994                           
  4995                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4996  000E72  9670               	bcf	3952,3,c	;volatile
  4997                           
  4998                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4999  000E74  9870               	bcf	3952,4,c	;volatile
  5000                           
  5001                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  5002  000E76  9A70               	bcf	3952,5,c	;volatile
  5003                           
  5004                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  5005  000E78  8C70               	bsf	3952,6,c	;volatile
  5006                           
  5007                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  5008  000E7A  8E70               	bsf	3952,7,c	;volatile
  5009                           
  5010                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  5011  000E7C  8671               	bsf	3953,3,c	;volatile
  5012                           
  5013                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  5014  000E7E  8871               	bsf	3953,4,c	;volatile
  5015                           
  5016                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  5017  000E80  8A71               	bsf	3953,5,c	;volatile
  5018                           
  5019                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  5020  000E82  8471               	bsf	3953,2,c	;volatile
  5021                           
  5022                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  5023  000E84  9271               	bcf	3953,1,c	;volatile
  5024                           
  5025                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  5026  000E86  9071               	bcf	3953,0,c	;volatile
  5027                           
  5028                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  5029  000E88  8072               	bsf	3954,0,c	;volatile
  5030                           
  5031                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  5032  000E8A  9272               	bcf	3954,1,c	;volatile
  5033                           
  5034                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  5035  000E8C  8472               	bsf	3954,2,c	;volatile
  5036                           
  5037                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  5038  000E8E  8C71               	bsf	3953,6,c	;volatile
  5039                           
  5040                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  5041  000E90  8E71               	bsf	3953,7,c	;volatile
  5042  000E92  0012               	return		;funcret
  5043  000E94                     __end_of_CAN_SetupClock:
  5044                           	opt callstack 0
  5045                           
  5046 ;; *************** function _ISR_low *****************
  5047 ;; Defined at:
  5048 ;;		line 16 in file "ISR.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;		None
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;Total ram usage:        3 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; Hardware stack levels required when called:    2
  5069 ;; This function calls:
  5070 ;;		_TMR1_Timer_reset
  5071 ;;		i1_TMR1_Update_flag_Set
  5072 ;; This function is called by:
  5073 ;;		Interrupt level 1
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	intcodelo
  5078  000018                     __pintcodelo:
  5079                           	opt callstack 0
  5080  000018                     _ISR_low:
  5081                           	opt callstack 24
  5082                           
  5083                           ;incstack = 0
  5084  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5085  00001A  CFD8 F003          	movff	status,??_ISR_low
  5086  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  5087  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  5088                           
  5089                           ;ISR.c: 21:     if(TMR1IF==1)
  5090  000026  A09E               	btfss	3998,0,c	;volatile
  5091  000028  D011               	goto	i1l539
  5092                           
  5093                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  5094  00002A  EC4A  F007         	call	_TMR1_Timer_reset	;wreg free
  5095                           
  5096                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  5097  00002E  0E00               	movlw	0
  5098  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  5099  000032  0E01               	movlw	1
  5100  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  5101  000036  ECD8  F007         	call	i1_TMR1_Update_flag_Set	;wreg free
  5102                           
  5103                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  5104  00003A  803D               	bsf	_DetectorLedRadar,0,c
  5105                           
  5106                           ;ISR.c: 33:             if(++ramkaStanuU8 > (5*10))
  5107  00003C  2A41               	incf	ISR_low@ramkaStanuU8,f,c
  5108  00003E  0E32               	movlw	50
  5109  000040  6441               	cpfsgt	ISR_low@ramkaStanuU8,c
  5110  000042  D003               	goto	i1l2753
  5111                           
  5112                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  5113  000044  0E00               	movlw	0
  5114  000046  6E41               	movwf	ISR_low@ramkaStanuU8,c
  5115                           
  5116                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  5117  000048  8037               	bsf	_DaneCan,0,c
  5118  00004A                     i1l2753:
  5119                           
  5120                           ;ISR.c: 41:             TMR1IF=0;
  5121  00004A  909E               	bcf	3998,0,c	;volatile
  5122  00004C                     i1l539:
  5123  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  5124  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  5125  000054  C003  FFD8         	movff	??_ISR_low,status
  5126  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5127  00005A  0010               	retfie	
  5128  00005C                     __end_of_ISR_low:
  5129                           	opt callstack 0
  5130                           
  5131 ;; *************** function i1_TMR1_Update_flag_Set *****************
  5132 ;; Defined at:
  5133 ;;		line 32 in file "TMR1.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  a               2    0[COMRAM] unsigned int 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		None
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:        2 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    1
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_ISR_low
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text45
  5162  000FB0                     __ptext45:
  5163                           	opt callstack 0
  5164  000FB0                     i1_TMR1_Update_flag_Set:
  5165                           	opt callstack 24
  5166                           
  5167                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5168                           
  5169                           ;incstack = 0
  5170  000FB0  C001  F03B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5171  000FB4  C002  F03C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5172  000FB8  0012               	return		;funcret
  5173  000FBA                     __end_ofi1_TMR1_Update_flag_Set:
  5174                           	opt callstack 0
  5175                           
  5176 ;; *************** function _TMR1_Timer_reset *****************
  5177 ;; Defined at:
  5178 ;;		line 63 in file "TMR1.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  5183 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      unsigned char 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;Total ram usage:        2 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    1
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_ISR_low
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text46
  5208  000E94                     __ptext46:
  5209                           	opt callstack 0
  5210  000E94                     _TMR1_Timer_reset:
  5211                           	opt callstack 24
  5212                           
  5213                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  5214                           
  5215                           ;incstack = 0
  5216  000E94  0E00               	movlw	0
  5217  000E96  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  5218  000E98  0E00               	movlw	0
  5219  000E9A  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  5220                           
  5221                           ;TMR1.c: 70:     t1L = TMR1L;
  5222  000E9C  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  5223                           
  5224                           ;TMR1.c: 71:     t1H = TMR1H;
  5225  000EA0  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  5226                           
  5227                           ;TMR1.c: 72:     __nop();
  5228  000EA4  F000               	nop	
  5229                           
  5230                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5231  000EA6  0E9E               	movlw	158
  5232  000EA8  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  5233                           
  5234                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5235  000EAA  0E57               	movlw	87
  5236  000EAC  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  5237                           
  5238                           ;TMR1.c: 75:     TMR1H = t1H;
  5239  000EAE  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  5240                           
  5241                           ;TMR1.c: 76:     TMR1L = 0x5B;
  5242  000EB2  0E5B               	movlw	91
  5243  000EB4  6ECE               	movwf	4046,c	;volatile
  5244  000EB6  0012               	return		;funcret
  5245  000EB8                     __end_of_TMR1_Timer_reset:
  5246                           	opt callstack 0
  5247                           
  5248 ;; *************** function _ISR_high *****************
  5249 ;; Defined at:
  5250 ;;		line 53 in file "ISR.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		None
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		Interrupt level 2
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	intcode
  5278  000008                     __pintcode:
  5279                           	opt callstack 0
  5280  000008                     _ISR_high:
  5281                           	opt callstack 24
  5282                           
  5283                           ;incstack = 0
  5284  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5285  00000A  EDE1  F007         	call	int_func,f	;refresh shadow registers
  5286                           
  5287                           	psect	intcode_body
  5288  000FC2                     __pintcode_body:
  5289                           	opt callstack 24
  5290  000FC2                     int_func:
  5291                           	opt callstack 24
  5292  000FC2  0006               	pop		; remove dummy address from shadow register refresh
  5293  000FC4  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5294  000FC6  0011               	retfie		f
  5295  000FC8                     __end_of_ISR_high:
  5296                           	opt callstack 0
  5297  0000                     
  5298                           	psect	rparam
  5299  0000                     
  5300                           	psect	temp
  5301  00004A                     btemp:
  5302                           	opt callstack 0
  5303  00004A                     	ds	1
  5304  0000                     int$flags	set	btemp
  5305  0000                     wtemp8	set	btemp+1
  5306  0000                     ttemp5	set	btemp+1
  5307  0000                     ttemp6	set	btemp+4
  5308  0000                     ttemp7	set	btemp+8
  5309                           tosu	equ	0xFFF
  5310                           tosh	equ	0xFFE
  5311                           tosl	equ	0xFFD
  5312                           stkptr	equ	0xFFC
  5313                           pclatu	equ	0xFFB
  5314                           pclath	equ	0xFFA
  5315                           pcl	equ	0xFF9
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           prodh	equ	0xFF4
  5321                           prodl	equ	0xFF3
  5322                           indf0	equ	0xFEF
  5323                           postinc0	equ	0xFEE
  5324                           postdec0	equ	0xFED
  5325                           preinc0	equ	0xFEC
  5326                           plusw0	equ	0xFEB
  5327                           fsr0h	equ	0xFEA
  5328                           fsr0l	equ	0xFE9
  5329                           wreg	equ	0xFE8
  5330                           indf1	equ	0xFE7
  5331                           postinc1	equ	0xFE6
  5332                           postdec1	equ	0xFE5
  5333                           preinc1	equ	0xFE4
  5334                           plusw1	equ	0xFE3
  5335                           fsr1h	equ	0xFE2
  5336                           fsr1l	equ	0xFE1
  5337                           bsr	equ	0xFE0
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           postdec2	equ	0xFDD
  5341                           preinc2	equ	0xFDC
  5342                           plusw2	equ	0xFDB
  5343                           fsr2h	equ	0xFDA
  5344                           fsr2l	equ	0xFD9
  5345                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      73
    BANK0           160      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_LQI_ramki
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_RSSI_ramki
    _FRAME_SensorExcitationStatus->_MOC_StanWzbudzenia
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12466
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    7683
                                             20 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    5768
                                             15 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1000
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     323
                                              7 COMRAM     3     1      2
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                      _MOC_LQI_ramki
                        _MOC_NOTWORK
                     _MOC_RSSI_ramki
                 _MOC_StanWzbudzenia
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_StanWzbudzenia                                   2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_RSSI_ramki                                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_LQI_ramki                                        2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     213
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                              6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            3     0      3     316
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    3581
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    2853
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     368
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1000
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1000
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1000
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
       _FRAME_SensorExcitationStatus
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_LQI_ramki
         _MOC_NOTWORK
         _MOC_RSSI_ramki
         _MOC_StanWzbudzenia
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0      55       6       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      49       1       77.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E       3        0.0%
DATA                 0      0      9E       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 15:18:57 2019

              __end_of_FRAME_DeviceReset 0AE8                    ?_FRAME_AveragingTimes 0006  
                           ___awdiv@sign 000B                                       bsr 000FE0  
                            __CFG_BORV$3 000000                        ?_FRAME_AxisStatus 0006  
                      _FRAME_MapPosition 0FCA                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                       __size_of_CAN_GenID 005A  
                                    l190 0080                                      l191 0086  
                                    l192 008C                                      l193 0092  
                                    l177 04CC                                      l194 0098  
                                    l186 006E                                      l178 04CA  
                                    l187 00DE                                      l188 0074  
                                    l189 007A                                      l296 06C6  
                            ?_LED_Update 0001                                      l474 04A2  
                           __CFG_CPB$OFF 000000                       ??_FRAME_AxisStatus 0008  
                           __CFG_CPD$OFF 000000                                      u965 053A  
                     ?_FRAME_MapPosition 0006                       __size_of_CAN_Setup 005C  
                           ?_LED_Control 0006                                      wreg 000FE8  
                  __end_of_CAN_TakeFrame 02DC                              ?_INI_OUTPUT 0001  
                 __size_of_INI_LED_Start 0034                    __end_of_CAN_SendFrame 061E  
                           __CFG_LVP$OFF 000000                TRM_DataTransmition@weWyU8 0040  
           __size_of_INI_GlobalInterrupt 000E                      ??_FRAME_MapPosition 0008  
                           __CFG_WDT$OFF 000000                                     l2111 0680  
                                   l2105 0670                                     l2123 06A0  
                                   l2141 06D6                                     l2117 0690  
                                   l2301 0564                                     l2135 06C0  
                                   l1079 0BDC                                     l2153 06F6  
                                   l2129 06B0                                     l2081 0630  
                                   l2305 0618                                     l2171 0726  
                                   l2147 06E6                                     l2067 0E46  
                                   l2403 0AC6                                     l2165 0716  
                                   l2093 0650                                     l2341 0CF4  
                                   l2325 0C68                                     l2421 0910  
                                   l2183 0746                                     l2159 0706  
                                   l2087 0640                                     l2415 0900  
                                   l2511 01B0                                     l2177 0736  
                                   l2521 01D4                                     l2513 01B6  
                                   l2195 0768                                     l2099 0660  
                        __end_of_INI_All 0F30                                     l2427 0926  
                                   l2443 0958                                     l2523 01DC  
                                   l2515 01BC                                     l2531 022C  
                                   l2189 0756                                     l2605 08D4  
                                   l2429 092E                                     l2541 0262  
                                   l2525 01E4                                     l2517 01C4  
                                   l2621 0304                                     l2447 0966  
                                   l2439 094E                                     l2551 0288  
                                   l2543 0268                                     l2519 01CC  
                                   l2535 0230                                     l2631 034A  
                                   l2623 0312                                     l2457 0BAA  
                                   l2553 0290                                     l2545 0270  
                                   l2529 01EC                                     l2537 024A  
                                   l2385 0C12                                     l2641 0390  
                                   l2633 0358                                     l2625 0320  
                                   l2475 09DE                                     l2459 0BB2  
                                   l2547 0278                                     l2539 025C  
                                   l2643 03AA                                     l2635 0366  
                                   l2627 032E                                     l2469 0BD2  
                                   l2549 0280                                     l2557 0298  
                                   l2661 04AA                                     l2637 0374  
                                   l2629 033C                                     l2591 0872  
                                   l2559 02D8                                     l2495 009E  
                                   l2639 0382                                     l2647 03C4  
                                   l2727 0E1A                                     l2489 0A28  
                                   l2649 0428                                     l2737 0E3A  
                                   l2597 089E                                     l2599 08A8  
                                   l2697 0B12                                     _BIE0 000DFA  
                      _MOC_Frame_Counter 0F88                                     u1110 0932  
                                   u1040 0C22                                     u1205 0148  
                                   u1150 0BB6                                     u1320 0B30  
                                   u1250 08DC                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   _IPR3 000FA5                                     _IPEN 007E87  
                                   _PIE3 000FA3                                     _PEIE 007F96  
                                   _PIR3 000FA4                                     _RCON 000FD0  
            ??_FRAME_AccelerometerStatus 0008                          __end_of_ISR_low 005C  
                       LED_Control@diode 0006                     FRAME_AnalogValue@set 0008  
                     ?_MOC_Frame_Counter 0006                                     _main 0E14  
                       LED_Control@color 000A                                     fsr2h 000FDA  
                                   indf1 000FE7                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 004A                           _CAN_SetupClock 0E6C  
                                   prodl 000FF3                    __end_of_CAN_SetupMask 09DA  
          __size_of_TMR1_Update_flag_Get 000A                                     start 005C  
          __size_of_TMR1_Update_flag_Set 000A                       __size_of_LED_Error 001E  
                          __CFG_IESO$OFF 000000                       _MOC_StanWzbudzenia 0F60  
                     __size_of_LED_Right 004C            __size_of_FRAME_HandleCanFrame 01D4  
                          _LED_Light_Pos 083C                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000                      ??_MOC_Frame_Counter 0008  
             ??_MOC_Aktualna_Temperatura 0008        FRAME_HandleCanFrame@identyfikator 0014  
                     __size_of_INI_Timer 0018                __end_of_FRAME_MapPosition 0FCC  
                    ?_MOC_StanWzbudzenia 0006                         __end_of_LED_Left 0D08  
                                  _B0CON 000E20                                    _B1CON 000E30  
                                  _B2CON 000E40                                    _B3CON 000E50  
                                  _B4CON 000E60                                    _B5CON 000E70  
                                  ?_main 0001                          __end_of___awdiv 0970  
                                  _BSEL0 000DF8                          ___awdiv@divisor 0008  
                                  _T1CON 000FCD                                    _IRCF0 007E9C  
                                  _IRCF1 007E9D        FRAME_ExcitationMultiplier@message 0006  
                                  _IRCF2 007E9E                          __end_of___lwdiv 0BE6  
                                  i1l539 004C                      __size_of_FRAME_Plot 0022  
                        ___awdiv@counter 000A                                    _MSEL0 000DF0  
                                  _MSEL1 000DF1                                    _MSEL2 000DF2  
                                  _MSEL3 000DF3                                    _TMR1H 000FCF  
                                  _TMR1L 000FCE                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                          __CFG_PWRT$OFF 000000                   ?_CAN_MoveBuffIntoFrame 0006  
                          __CFG_WRT0$OFF 000000               __size_of_FRAME_AnalogValue 0002  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                       __end_of_ISR_high 0FC8                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
              __end_of_MOC_Frame_Counter 0F92                           __CFG_EBTRB$OFF 000000  
                i1TMR1_Update_flag_Set@a 0001                             ?_MOC_NOTWORK 0006  
                   ??_MOC_StanWzbudzenia 0008                                    tablat 000FF5  
                 __end_of_CAN_SetupClock 0E94                                    plusw2 000FDB  
                                  ttemp5 004B                                    ttemp6 004E  
                                  ttemp7 0052                                    status 000FD8  
                                  wtemp8 004B                        __end_of_CAN_GenID 0A90  
                         __CFG_PBADEN$ON 000000                      __size_of_LED_Update 0056  
                         ?_LED_Light_Pos 000D                         _TMR1_Timer_reset 0E94  
                      __end_of_CAN_Setup 0A36                            _INI_LED_Start 0DE0  
                  _FRAME_ExcitationValue 0D08         FRAME_AccelerometerStatus@message 0006  
                        __initialization 0C80                      __size_of_INI_OUTPUT 001E  
                       CAN_GenID@frameID 0008                             __end_of_main 0E42  
                 ??_FRAME_AveragingTimes 0008               __size_of_FRAME_DeviceReset 0058  
               ?_FRAME_AdressOfNeighbors 0006                         CAN_GenID@message 0006  
              _FRAME_AccelerometerStatus 0DAA                                   ??_main 0026  
                 CAN_MoveBuffIntoFrame@i 000A                            __activetblptr 000002  
                       _TMR1_Update_flag 003B                                ??_INI_All 000B  
                      __end_of_LED_Error 0EF8                        __end_of_LED_Right 0C80  
                       ??_MOC_RSSI_ramki 0008                                ??_ISR_low 0003  
                                 _CANCON 000F6F                         ___awdiv@dividend 0006  
            FRAME_ExcitationMultiplier@i 0009                                   _CIOCON 000F73  
                        __CFG_BBSIZ$1024 000000                        __end_of_INI_Timer 0F48  
                                 i1l2753 004A                          ?_CAN_SetupClock 0001  
                                 _RXB0D0 000F66                                   _TMR1IE 007CE8  
                                 _TMR1IF 007CF0                                   _TMR1IP 007CF8  
                                 _TMR1ON 007E68             ??_FRAME_ExcitationMultiplier 0008  
                         ?_INI_LED_Start 0001                           __CFG_XINST$OFF 000000  
                              ??___awdiv 000A                           __CFG_STVREN$ON 000000  
                       LED_Light_Pos@pos 000D               __size_of_FRAME_MapPosition 0002  
                              ??___lwdiv 000A                                   clear_0 0CA6  
                                 clear_1 0CB2                         ___awdiv@quotient 000C  
               ??i1_TMR1_Update_flag_Set 0003                          __CFG_BOREN$BOHW 000000  
                           __pdataCOMRAM 0043                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
    __size_of_FRAME_ExcitationMultiplier 004E               __size_of_MOC_Frame_Counter 000A  
                   __size_of_LED_Control 0152                 FRAME_MapPosition@message 0006  
                  TMR1_Update_flag_Set@a 0006                               __accesstop 0060  
                __end_of__initialization 0CB8                             ??_FRAME_Plot 0008  
                    ISR_low@ramkaStanuU8 0041                                ?_LED_Left 0006  
                        ??_LED_Light_Pos 0011                            ___rparam_used 000001  
                 ?_FRAME_ExcitationValue 0006          __end_of_FRAME_AdressOfNeighbors 0FD0  
                         __pcstackCOMRAM 0001                   __size_of_MOC_LQI_ramki 000A  
                              LED_Left@a 0006                                LED_Left@b 0008  
                    _INI_GlobalInterrupt 0F48                                ?_ISR_high 0001  
                           ??_LED_Update 0018              __end_of_TRM_DataTransmition 0B3E  
                  _FRAME_SoftwareVersion 0FC8                       __end_of_FRAME_Plot 0EDA  
                           ??_INI_OUTPUT 0006                  FRAME_AxisStatus@message 0006  
                   ?_INI_GlobalInterrupt 0001                __size_of_FRAME_AxisStatus 0036  
                             __pbssBANK0 0060                     __size_of_MOC_NOTWORK 000A  
                        ??_INI_LED_Start 000B                               ??_LED_Left 0008  
                     __end_of_LED_Update 0B94                       __end_of_INI_OUTPUT 0F16  
                             ??_ISR_high 0001                      TMR1_Timer_reset@t1H 0002  
                    TMR1_Timer_reset@t1L 0001                                  _ECANCON 000F77  
                                _CANSTAT 000F6E                  ??_CAN_MoveBuffIntoFrame 000A  
           __end_of_TMR1_Update_flag_Get 0FB0             __end_of_TMR1_Update_flag_Set 0FA6  
        __size_ofi1_TMR1_Update_flag_Set 000A             __end_of_FRAME_HandleCanFrame 04B0  
                                _INI_All 0F16                 __end_of_TMR1_Timer_reset 0EB8  
                                _RXB0DLC 000F65                                  _RXB0CON 000F60  
                                _RXB1CON 000F50                            _MOC_LQI_ramki 0F7E  
                  ??_INI_GlobalInterrupt 0006                                  _TXB0CON 000F40  
                                _ISR_low 0018                                  _RXFCON0 000DD4  
                                _DaneCan 0037       __end_of_FRAME_ExcitationMultiplier 0C34  
             _FRAME_ExcitationMultiplier 0BE6              FRAME_HandleCanFrame@message 0010  
                                __Hparam 0000         ??_MOC_Wynikowa_wartosc_roznicowa 0008  
        ?_MOC_Wynikowa_wartosc_roznicowa 0006                                  __Lparam 0000  
                 __size_of_CAN_TakeFrame 027C                                _CAN_GenID 0A36  
                                ___awdiv 08EC                                _CAN_Setup 09DA  
                 __size_of_CAN_SendFrame 016E                                  ___lwdiv 0B94  
                      LED_Light_Pos@pos2 0014                                  __pcinit 0C80  
                                __ramtop 0D00                                  __ptext0 0E14  
                                __ptext1 0AE8                                  __ptext2 02DC  
                                __ptext3 0EDA                                  __ptext4 0FC8  
                                __ptext5 0770                                  __ptext6 0F56  
                                __ptext7 0F60                                  __ptext8 0F6A  
                                __ptext9 0F74                   ?_FRAME_SoftwareVersion 0006  
                 __size_of_CAN_SetupMask 006A                           ?_MOC_LQI_ramki 0006  
      __size_of_MOC_Aktualna_Temperatura 000A           FRAME_AdressOfNeighbors@nrRamki 0008  
              ?_MOC_Aktualna_Temperatura 0006         __size_of_FRAME_AdressOfNeighbors 0002  
                       ??_CAN_SetupClock 0006           FRAME_AdressOfNeighbors@message 0006  
                              _LED_Error 0EDA                           __pintcode_body 0FC2  
                              _LED_Right 0C34                     end_of_initialization 0CB8  
            __size_of_MOC_StanWzbudzenia 000A                            __Lmediumconst 0000  
                                int_func 0FC2                                _INI_Timer 0F30  
                 i1_TMR1_Update_flag_Set 0FB0         TRM_DataTransmition@czujnikWeWyU8 003F  
                             ?_CAN_GenID 0006                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc2 000FDE                               ?_CAN_Setup 0001  
          __size_of_FRAME_AveragingTimes 0036                     CAN_SendFrame@message 000B  
                          LED_Update@Red 0042                            _CAN_TakeFrame 0060  
                          _CAN_SendFrame 04B0                               ?_LED_Error 0001  
                             ?_LED_Right 0006                         _FRAME_AxisStatus 0D3E  
                ??_FRAME_ExcitationValue 0008                               ?_INI_Timer 0001  
                        _ramkaCanRxKarty 0060                     _TMR1_Update_flag_Get 0FA6  
                        _ramkaCanTxKarty 0026                     _TMR1_Update_flag_Set 0F9C  
                          _CAN_SetupMask 0970                        __size_of_LED_Left 0042  
                   _FRAME_HandleCanFrame 02DC                           CAN_TakeFrame@k 0013  
                          __pidataCOMRAM 0FBA                        __size_of_ISR_high 0FC0  
                             LED_Right@a 0006                               LED_Right@b 000A  
                        ??_MOC_LQI_ramki 0008                            ??_LED_Control 0008  
                    start_initialization 0C80                           ?_CAN_TakeFrame 000E  
                         ?_CAN_SendFrame 000B                         __CFG_OSC$IRCIO67 000000  
                  ?_TMR1_Update_flag_Get 0006                    ?_TMR1_Update_flag_Set 0006  
                __size_of_MOC_RSSI_ramki 000A                           ?_CAN_SetupMask 0001  
                  __end_of_LED_Light_Pos 08EC                    ?_FRAME_HandleCanFrame 0010  
                            ??_CAN_GenID 0009                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                 CAN_MoveBuffIntoFrame@Buf 0008  
   __end_of_FRAME_SensorExcitationStatus 083C    __size_of_FRAME_SensorExcitationStatus 00CC  
               CAN_MoveBuffIntoFrame@Ram 0006             _FRAME_SensorExcitationStatus 0770  
         __size_of_CAN_MoveBuffIntoFrame 002A            __end_of_CAN_MoveBuffIntoFrame 0E6C  
                        _Fulfillment_Lvl 0047                              __pbssCOMRAM 0026  
                               ?_INI_All 0001                  _FRAME_AdressOfNeighbors 0FCE  
                      ?_TMR1_Timer_reset 0001                              _BRGCON1bits 000F70  
                            _BRGCON2bits 000F71                              _BRGCON3bits 000F72  
                               ?_ISR_low 0001                            ??_MOC_NOTWORK 0008  
                     ??_TMR1_Timer_reset 0001                              ??_LED_Error 000B  
                            ??_LED_Right 0008             __size_of_TRM_DataTransmition 0056  
                    __end_of_LED_Control 0770              ?_FRAME_ExcitationMultiplier 0006  
                            ??_INI_Timer 0006                    __end_of_INI_LED_Start 0E14  
                       ___lwdiv@dividend 0006                                __pintcode 0008  
                               ?___awdiv 0006                  ??_FRAME_SoftwareVersion 0008  
       __end_of_MOC_Aktualna_Temperatura 0F9C                                 ?___lwdiv 0006  
                      FRAME_Plot@message 0006                              __pintcodelo 0018  
            __end_of_INI_GlobalInterrupt 0F56                          ??_CAN_TakeFrame 0010  
          ?_FRAME_SensorExcitationStatus 0008   __end_of_MOC_Wynikowa_wartosc_roznicowa 0F60  
__size_of_MOC_Wynikowa_wartosc_roznicowa 000A           _MOC_Wynikowa_wartosc_roznicowa 0F56  
                            _COMSTATbits 000F74                          ??_CAN_SendFrame 000D  
                       ___lwdiv@quotient 000A                  ?i1_TMR1_Update_flag_Set 0001  
            FRAME_AveragingTimes@message 0006                   ??_TMR1_Update_flag_Get 0008  
                 ??_TMR1_Update_flag_Set 0008                          ??_CAN_SetupMask 0006  
                               _LED_Left 0CC6                   ??_FRAME_HandleCanFrame 0012  
                   CAN_TakeFrame@message 000E                      __end_of_MOC_NOTWORK 0F7E  
                   CAN_TakeFrame@tempCON 0012                                 _RXB0EIDH 000F63  
                               _RXB0EIDL 000F64                                 _RCONbits 000FD0  
                       __CFG_WDTPS$32768 000000                                 _RXB0SIDH 000F61  
                               _RXB0SIDL 000F62                                 _RXF0EIDH 000F02  
                               _RXF0EIDL 000F03                                 _RXF1EIDH 000F06  
                               _RXF1EIDL 000F07                                 _RXF2EIDH 000F0A  
                               _RXF2EIDL 000F0B                                 _RXF0SIDH 000F00  
                               _RXF0SIDL 000F01                                 _RXF1SIDH 000F04  
                               _RXF1SIDL 000F05                                 _RXF2SIDH 000F08  
                               _RXF2SIDL 000F09                                 _ISR_high 0008  
                               _RXM0EIDH 000F1A                                 _RXM0EIDL 000F1B  
                               _RXM1EIDH 000F1E                                 _RXM1EIDL 000F1F  
                               _RXM0SIDH 000F18                                 _RXM0SIDL 000F19  
                               _RXM1SIDH 000F1C                                 _RXM1SIDL 000F1D  
               __end_of_FRAME_AxisStatus 0D74                ??_FRAME_AdressOfNeighbors 000A  
                       _DetectorLedRadar 003D                              _LED_Control 061E  
                       __size_of_INI_All 001A             FRAME_ExcitationValue@message 0006  
             __end_of_MOC_StanWzbudzenia 0F6A           __end_ofi1_TMR1_Update_flag_Set 0FBA  
                              copy_data0 0C94                         __size_of_ISR_low 0044  
     __size_of_FRAME_AccelerometerStatus 0036             __end_of_FRAME_AveragingTimes 0DAA  
             ?_FRAME_AccelerometerStatus 0006           __size_of_FRAME_ExcitationValue 0036  
                         _MOC_RSSI_ramki 0F6A            __end_of_FRAME_ExcitationValue 0D3E  
                               __Hrparam 0000                             _RXB0SIDLbits 000F62  
                               __Lrparam 0000                         __size_of___awdiv 0084  
                       __size_of___lwdiv 0052                 _MOC_Aktualna_Temperatura 0F92  
                     LED_Light_Pos@flage 0016                       LED_Light_Pos@color 0011  
                           _RXF0SIDLbits 000F01                 FRAME_AnalogValue@message 0006  
                        ___lwdiv@divisor 0008                             _RXF1SIDLbits 000F05  
                        ___lwdiv@counter 000C                                 __ptext10 0F7E  
                               __ptext11 0F88                                 __ptext20 0FCC  
                               __ptext12 0F92                                 __ptext21 0FCE  
                               __ptext13 0EB8                                 __ptext30 0B3E  
                               __ptext22 0DAA                                 __ptext14 0FCA  
                               __ptext31 083C                                 __ptext23 04B0  
                               __ptext15 0D08                                 __ptext40 0F48  
                               __ptext32 0B94                                 __ptext24 0A36  
                               __ptext16 0BE6                                 __ptext41 09DA  
                               __ptext33 0C34                                 __ptext25 0060  
                               __ptext17 0A90                                 __ptext42 0970  
                               __ptext34 0CC6                                 __ptext26 08EC  
                               __ptext18 0D3E                                 __ptext43 0E6C  
                               __ptext35 0F16                                 __ptext27 0E42  
                               __ptext19 0D74                                 __ptext36 0F30  
                               __ptext28 0F9C           ??_FRAME_SensorExcitationStatus 000A  
                               __ptext45 0FB0                                 __ptext37 0EF8  
                               __ptext29 0FA6                                 __ptext46 0E94  
                               __ptext38 0DE0                                 __ptext39 061E  
          TRM_DataTransmition@canMessage 0015                             _RXF2SIDLbits 000F09  
                            _MOC_NOTWORK 0F74                   __end_of_MOC_RSSI_ramki 0F74  
               FRAME_DeviceReset@message 0006        __end_of_FRAME_AccelerometerStatus 0DE0  
                             _FRAME_Plot 0EB8                            __size_of_main 002E  
                __size_of_CAN_SetupClock 0028                                 int$flags 004A  
                    _TRM_DataTransmition 0AE8                              _RXB0DLCbits 000F65  
                             _LED_Update 0B3E                              _RXB0CONbits 000F60  
                             _INTCONbits 000FF2                               _INI_OUTPUT 0EF8  
                  __end_of_MOC_LQI_ramki 0F88                        _FRAME_AnalogValue 0FCC  
                   ?_TRM_DataTransmition 0001             FRAME_SoftwareVersion@message 0006  
                               intlevel1 0000                                 intlevel2 0000  
                     ?_FRAME_AnalogValue 0006                          ?_MOC_RSSI_ramki 0006  
    FRAME_SensorExcitationStatus@message 0008                              _TXB0CONbits 000F40  
                    ??_FRAME_AnalogValue 000A                __size_of_TMR1_Timer_reset 0024  
               LED_Light_Pos@fulfillment 000F                     _FRAME_AveragingTimes 0D74  
         __size_of_FRAME_SoftwareVersion 0002                        _FRAME_DeviceReset 0A90  
          __end_of_FRAME_SoftwareVersion 0FCA                       ?_FRAME_DeviceReset 0006  
                        LED_Update@Green 0049                __end_of_FRAME_AnalogValue 0FCE  
                 __size_of_LED_Light_Pos 00B0                    _CAN_MoveBuffIntoFrame 0E42  
                             _WDTCONbits 000FD1                      ??_FRAME_DeviceReset 0008  
                  ??_TRM_DataTransmition 0015                   LED_Light_Pos@LED_array 0012  
                         LED_Update@pos1 0045                           LED_Update@pos2 0043  
                            ?_FRAME_Plot 0006  
