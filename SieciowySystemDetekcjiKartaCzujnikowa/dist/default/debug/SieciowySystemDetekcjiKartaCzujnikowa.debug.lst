

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 24 12:50:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4680 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  00171C                     __pidataCOMRAM:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for MOC_Frame_Counter@zeta
   112  00171C  0011               	dw	17
   113                           
   114                           ;initializer for LED_Update@pos2
   115  00171E  0001               	dw	1
   116                           
   117                           ;initializer for LED_Update@pos1
   118  001720  0001               	dw	1
   119                           
   120                           ;initializer for _Fulfillment_Lvl
   121  001722  0014               	dw	20
   122                           
   123                           ;initializer for LED_Update@Green
   124  001724  01                 	db	1
   125  0000                     _RXFCON0	set	3540
   126  0000                     _MSEL3	set	3571
   127  0000                     _MSEL2	set	3570
   128  0000                     _MSEL1	set	3569
   129  0000                     _MSEL0	set	3568
   130  0000                     _BIE0	set	3578
   131  0000                     _BSEL0	set	3576
   132  0000                     _B5CON	set	3696
   133  0000                     _B4CON	set	3680
   134  0000                     _B3CON	set	3664
   135  0000                     _B2CON	set	3648
   136  0000                     _B1CON	set	3632
   137  0000                     _B0CON	set	3616
   138  0000                     _TXB0CONbits	set	3904
   139  0000                     _RXF3EIDL	set	3855
   140  0000                     _RXF3EIDH	set	3854
   141  0000                     _RXF3SIDL	set	3853
   142  0000                     _RXF3SIDH	set	3852
   143  0000                     _RXF2EIDL	set	3851
   144  0000                     _RXF2EIDH	set	3850
   145  0000                     _RXF2SIDLbits	set	3849
   146  0000                     _RXF2SIDL	set	3849
   147  0000                     _RXF2SIDH	set	3848
   148  0000                     _RXF1EIDL	set	3847
   149  0000                     _RXF1EIDH	set	3846
   150  0000                     _RXF1SIDLbits	set	3845
   151  0000                     _RXF1SIDL	set	3845
   152  0000                     _RXF1SIDH	set	3844
   153  0000                     _RXF0EIDL	set	3843
   154  0000                     _RXF0EIDH	set	3842
   155  0000                     _RXF0SIDLbits	set	3841
   156  0000                     _RXF0SIDL	set	3841
   157  0000                     _RXF0SIDH	set	3840
   158  0000                     _RXM1EIDL	set	3871
   159  0000                     _RXM1EIDH	set	3870
   160  0000                     _RXM1SIDL	set	3869
   161  0000                     _RXM1SIDH	set	3868
   162  0000                     _RXM0EIDL	set	3867
   163  0000                     _RXM0EIDH	set	3866
   164  0000                     _RXM0SIDL	set	3865
   165  0000                     _RXM0SIDH	set	3864
   166  0000                     _RXB1CON	set	3920
   167  0000                     _TXB0CON	set	3904
   168  0000                     _TRISC	set	3988
   169  0000                     _LATC	set	3979
   170  0000                     _LATE	set	3981
   171  0000                     _LATA	set	3977
   172  0000                     _LATB	set	3978
   173  0000                     _LATD	set	3980
   174  0000                     _TRISD	set	3989
   175  0000                     _TRISE	set	3990
   176  0000                     _TRISB	set	3987
   177  0000                     _TRISA	set	3986
   178  0000                     _RXB0DLCbits	set	3941
   179  0000                     _RXB0DLC	set	3941
   180  0000                     _RXB0SIDH	set	3937
   181  0000                     _RXB0SIDLbits	set	3938
   182  0000                     _RXB0SIDL	set	3938
   183  0000                     _RXB0EIDH	set	3939
   184  0000                     _RXB0EIDL	set	3940
   185  0000                     _COMSTATbits	set	3956
   186  0000                     _RXB0CONbits	set	3936
   187  0000                     _BRGCON3bits	set	3954
   188  0000                     _BRGCON2bits	set	3953
   189  0000                     _BRGCON1bits	set	3952
   190  0000                     _CIOCON	set	3955
   191  0000                     _ECANCON	set	3959
   192  0000                     _RXB0CON	set	3936
   193  0000                     _CANSTAT	set	3950
   194  0000                     _CANCON	set	3951
   195  0000                     _RXB0D0	set	3942
   196  0000                     _WDTCONbits	set	4049
   197  0000                     _RCONbits	set	4048
   198  0000                     _T1CON	set	4045
   199  0000                     _TMR1H	set	4047
   200  0000                     _TMR1L	set	4046
   201  0000                     _PIR3	set	4004
   202  0000                     _IPR3	set	4005
   203  0000                     _PIE3	set	4003
   204  0000                     _RCON	set	4048
   205  0000                     _TMR1IF	set	31984
   206  0000                     _TMR1IP	set	31992
   207  0000                     _IPEN	set	32391
   208  0000                     _TMR1ON	set	32360
   209  0000                     _TMR1IE	set	31976
   210  0000                     _IRCF0	set	32412
   211  0000                     _IRCF1	set	32413
   212  0000                     _IRCF2	set	32414
   213  0000                     _INTCONbits	set	4082
   214  0000                     _PEIE	set	32662
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  00121C                     __pcinit:
   220                           	opt callstack 0
   221  00121C                     start_initialization:
   222                           	opt callstack 0
   223  00121C                     __initialization:
   224                           	opt callstack 0
   225                           
   226                           ; Initialize objects allocated to COMRAM (9 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228  00121C  0E1C               	movlw	low __pidataCOMRAM
   229  00121E  6EF6               	movwf	tblptrl,c
   230  001220  0E17               	movlw	high __pidataCOMRAM
   231  001222  6EF7               	movwf	tblptrh,c
   232  001224  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233  001226  6EF8               	movwf	tblptru,c
   234  001228  EE00  F050         	lfsr	0,__pdataCOMRAM
   235  00122C  EE10 F009          	lfsr	1,9
   236  001230                     copy_data0:
   237  001230  0009               	tblrd		*+
   238  001232  CFF5 FFEE          	movff	tablat,postinc0
   239  001236  50E5               	movf	postdec1,w,c
   240  001238  50E1               	movf	fsr1l,w,c
   241  00123A  E1FA               	bnz	copy_data0
   242                           
   243                           ; Clear objects allocated to BIGRAM (544 bytes)
   244  00123C  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   245  001240  EE12 F020          	lfsr	1,544
   246  001244                     clear_0:
   247  001244  6AEE               	clrf	postinc0,c
   248  001246  50E5               	movf	postdec1,w,c
   249  001248  50E1               	movf	fsr1l,w,c
   250  00124A  E1FC               	bnz	clear_0
   251  00124C  50E2               	movf	fsr1h,w,c
   252  00124E  E1FA               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (102 bytes)
   255  001250  EE00  F060         	lfsr	0,__pbssBANK0
   256  001254  0E66               	movlw	102
   257  001256                     clear_1:
   258  001256  6AEE               	clrf	postinc0,c
   259  001258  06E8               	decf	wreg,f,c
   260  00125A  E1FD               	bnz	clear_1
   261                           
   262                           ; Clear objects allocated to COMRAM (37 bytes)
   263  00125C  EE00  F02B         	lfsr	0,__pbssCOMRAM
   264  001260  0E25               	movlw	37
   265  001262                     clear_2:
   266  001262  6AEE               	clrf	postinc0,c
   267  001264  06E8               	decf	wreg,f,c
   268  001266  E1FD               	bnz	clear_2
   269  001268                     end_of_initialization:
   270                           	opt callstack 0
   271  001268                     __end_of__initialization:
   272                           	opt callstack 0
   273  001268  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274  00126A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275  00126C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  00126E  6EF8               	movwf	tblptru,c
   277  001270  0100               	movlb	0
   278  001272  EFBB  F00A         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281  00002B                     __pbssCOMRAM:
   282                           	opt callstack 0
   283  00002B                     _Flagi:
   284                           	opt callstack 0
   285  00002B                     	ds	5
   286  000030                     _DaneCan:
   287                           	opt callstack 0
   288  000030                     	ds	4
   289  000034                     _DetectorLedRadar:
   290                           	opt callstack 0
   291  000034                     	ds	3
   292  000037                     _NeightAdress8:
   293                           	opt callstack 0
   294  000037                     	ds	2
   295  000039                     _NeightAdress7:
   296                           	opt callstack 0
   297  000039                     	ds	2
   298  00003B                     _NeightAdress6:
   299                           	opt callstack 0
   300  00003B                     	ds	2
   301  00003D                     _NeightAdress5:
   302                           	opt callstack 0
   303  00003D                     	ds	2
   304  00003F                     _NeightAdress4:
   305                           	opt callstack 0
   306  00003F                     	ds	2
   307  000041                     _NeightAdress3:
   308                           	opt callstack 0
   309  000041                     	ds	2
   310  000043                     _NeightAdress2:
   311                           	opt callstack 0
   312  000043                     	ds	2
   313  000045                     _NeightAdress1:
   314                           	opt callstack 0
   315  000045                     	ds	2
   316  000047                     _TMR1_Update_flag:
   317                           	opt callstack 0
   318  000047                     	ds	2
   319  000049                     _Dane:
   320                           	opt callstack 0
   321  000049                     	ds	2
   322  00004B                     	ds	1
   323  00004C                     	ds	1
   324  00004D                     ISR_low@ramkaStanuU8:
   325                           	opt callstack 0
   326  00004D                     	ds	1
   327  00004E                     	ds	1
   328  00004F                     _LOCK:
   329                           	opt callstack 0
   330  00004F                     	ds	1
   331                           
   332                           	psect	dataCOMRAM
   333  000050                     __pdataCOMRAM:
   334                           	opt callstack 0
   335  000050                     MOC_Frame_Counter@zeta:
   336                           	opt callstack 0
   337  000050                     	ds	2
   338  000052                     LED_Update@pos2:
   339                           	opt callstack 0
   340  000052                     	ds	2
   341  000054                     LED_Update@pos1:
   342                           	opt callstack 0
   343  000054                     	ds	2
   344  000056                     _Fulfillment_Lvl:
   345                           	opt callstack 0
   346  000056                     	ds	2
   347  000058                     LED_Update@Green:
   348                           	opt callstack 0
   349  000058                     	ds	1
   350                           
   351                           	psect	bssBANK0
   352  000060                     __pbssBANK0:
   353                           	opt callstack 0
   354  000060                     _ramkaCanRxKarty:
   355                           	opt callstack 0
   356  000060                     	ds	85
   357  0000B5                     _ramkaCanTxKarty:
   358                           	opt callstack 0
   359  0000B5                     	ds	17
   360                           
   361                           	psect	bssBIGRAM
   362  0000C6                     __pbssBIGRAM:
   363                           	opt callstack 0
   364  0000C6                     _wartosciSasiada:
   365                           	opt callstack 0
   366  0000C6                     	ds	544
   367                           
   368                           	psect	cstackCOMRAM
   369  000001                     __pcstackCOMRAM:
   370                           	opt callstack 0
   371  000001                     TMR1_Timer_reset@t1L:
   372                           	opt callstack 0
   373  000001                     i1TMR1_Update_flag_Set@a:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x0
   377  000001                     	ds	1
   378  000002                     TMR1_Timer_reset@t1H:
   379                           	opt callstack 0
   380                           
   381                           ; 1 bytes @ 0x1
   382  000002                     	ds	1
   383  000003                     ??_ISR_low:
   384  000003                     
   385                           ; 1 bytes @ 0x2
   386  000003                     	ds	3
   387  000006                     ??_CAN_Setup:
   388  000006                     ?_TMR1_Update_flag_Get:
   389                           	opt callstack 0
   390  000006                     ?_LED_Right:
   391                           	opt callstack 0
   392  000006                     ?_LED_Left:
   393                           	opt callstack 0
   394  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   395                           	opt callstack 0
   396  000006                     ?_MOC_Frame_Counter:
   397                           	opt callstack 0
   398  000006                     ?_MOC_Aktualna_Temperatura:
   399                           	opt callstack 0
   400  000006                     ?_MOC_NOTWORK:
   401                           	opt callstack 0
   402  000006                     ?_MOCK_PrzyspieszenieX:
   403                           	opt callstack 0
   404  000006                     ?_MOCK_PrzyspieszenieY:
   405                           	opt callstack 0
   406  000006                     ?_MOCK_PrzyspieszenieZ:
   407                           	opt callstack 0
   408  000006                     ?_MOCK_Klikniecie_Spadek:
   409                           	opt callstack 0
   410  000006                     ?___awdiv:
   411                           	opt callstack 0
   412  000006                     ?___lwdiv:
   413                           	opt callstack 0
   414  000006                     LOCK_Set@k:
   415                           	opt callstack 0
   416  000006                     CAN_MoveBuffIntoFrame@Ram:
   417                           	opt callstack 0
   418  000006                     CAN_GenID@message:
   419                           	opt callstack 0
   420  000006                     LED_Right@a:
   421                           	opt callstack 0
   422  000006                     LED_Left@a:
   423                           	opt callstack 0
   424  000006                     LED_Control@diode:
   425                           	opt callstack 0
   426  000006                     TMR1_Update_flag_Set@a:
   427                           	opt callstack 0
   428  000006                     IsInNeighbors@message_adress:
   429                           	opt callstack 0
   430  000006                     FRAME_ExcitationValue@message:
   431                           	opt callstack 0
   432  000006                     FRAME_ExcitationMultiplier@message:
   433                           	opt callstack 0
   434  000006                     FRAME_AveragingTimes@message:
   435                           	opt callstack 0
   436  000006                     FRAME_AxisStatus@message:
   437                           	opt callstack 0
   438  000006                     FRAME_DataUpdateAndChangeOption@message:
   439                           	opt callstack 0
   440  000006                     FRAME_MapPosition@message:
   441                           	opt callstack 0
   442  000006                     FRAME_SoftwareVersion@message:
   443                           	opt callstack 0
   444  000006                     FRAME_AnalogValue@message:
   445                           	opt callstack 0
   446  000006                     FRAME_PrzypisanieDokarty@message:
   447                           	opt callstack 0
   448  000006                     FRAME_AdressOfNeighbors@message:
   449                           	opt callstack 0
   450  000006                     ___awdiv@dividend:
   451                           	opt callstack 0
   452  000006                     ___lwdiv@dividend:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x5
   456  000006                     	ds	2
   457  000008                     ??_LED_Right:
   458  000008                     ??_FRAME_DataUpdateAndChangeOption:
   459  000008                     ??_FRAME_PrzypisanieDokarty:
   460  000008                     CAN_GenID@frameID:
   461                           	opt callstack 0
   462  000008                     CAN_MoveBuffIntoFrame@Buf:
   463                           	opt callstack 0
   464  000008                     LED_Left@b:
   465                           	opt callstack 0
   466  000008                     FRAME_AccelerometerStatus@message:
   467                           	opt callstack 0
   468  000008                     FRAME_AnalogValue@set:
   469                           	opt callstack 0
   470  000008                     FRAME_AdressOfNeighbors@nrRamki:
   471                           	opt callstack 0
   472  000008                     ___awdiv@divisor:
   473                           	opt callstack 0
   474  000008                     ___lwdiv@divisor:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x7
   478  000008                     	ds	1
   479  000009                     ??_CAN_GenID:
   480  000009                     FRAME_ExcitationMultiplier@i:
   481                           	opt callstack 0
   482  000009                     FRAME_DeviceReset@message:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x8
   486  000009                     	ds	1
   487  00000A                     ??_FRAME_AdressOfNeighbors:
   488  00000A                     CAN_MoveBuffIntoFrame@i:
   489                           	opt callstack 0
   490  00000A                     LED_Control@color:
   491                           	opt callstack 0
   492  00000A                     ___awdiv@counter:
   493                           	opt callstack 0
   494  00000A                     LED_Right@b:
   495                           	opt callstack 0
   496  00000A                     ___lwdiv@quotient:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x9
   500  00000A                     	ds	1
   501  00000B                     ___awdiv@sign:
   502                           	opt callstack 0
   503  00000B                     CAN_SendFrame@message:
   504                           	opt callstack 0
   505  00000B                     FRAME_SensorExcitationStatus@message:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0xA
   509  00000B                     	ds	1
   510  00000C                     ___lwdiv@counter:
   511                           	opt callstack 0
   512  00000C                     ___awdiv@quotient:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0xB
   516  00000C                     	ds	1
   517  00000D                     ??_CAN_SendFrame:
   518  00000D                     LED_Light_Pos@pos:
   519                           	opt callstack 0
   520  00000D                     FRAME_Plot@message:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0xC
   524  00000D                     	ds	1
   525  00000E                     CAN_TakeFrame@message:
   526                           	opt callstack 0
   527  00000E                     FRAME_AdressOfNeighbors@kier:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0xD
   531  00000E                     	ds	1
   532  00000F                     ??_FRAME_Plot:
   533  00000F                     LED_Light_Pos@fulfillment:
   534                           	opt callstack 0
   535  00000F                     FRAME_SensorExcitationStatus@iterator_beta:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0xE
   539  00000F                     	ds	1
   540  000010                     ??_CAN_TakeFrame:
   541                           
   542                           ; 1 bytes @ 0xF
   543  000010                     	ds	1
   544  000011                     LED_Light_Pos@color:
   545                           	opt callstack 0
   546  000011                     FRAME_HandleCanFrame@message:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x10
   550  000011                     	ds	1
   551  000012                     CAN_TakeFrame@tempCON:
   552                           	opt callstack 0
   553  000012                     LED_Light_Pos@LED_array:
   554                           	opt callstack 0
   555                           
   556                           ; 2 bytes @ 0x11
   557  000012                     	ds	1
   558  000013                     ??_FRAME_HandleCanFrame:
   559  000013                     CAN_TakeFrame@k:
   560                           	opt callstack 0
   561                           
   562                           ; 1 bytes @ 0x12
   563  000013                     	ds	1
   564  000014                     LED_Light_Pos@pos2:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x13
   568  000014                     	ds	2
   569  000016                     LED_Light_Pos@flage:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x15
   573  000016                     	ds	1
   574  000017                     FRAME_HandleCanFrame@ident:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x16
   578  000017                     	ds	1
   579  000018                     
   580                           ; 1 bytes @ 0x17
   581  000018                     	ds	1
   582  000019                     FRAME_HandleCanFrame@identyfikator:
   583                           	opt callstack 0
   584                           
   585                           ; 1 bytes @ 0x18
   586  000019                     	ds	1
   587  00001A                     TRM_DataTransmition@canMessage:
   588                           	opt callstack 0
   589                           
   590                           ; 17 bytes @ 0x19
   591  00001A                     	ds	17
   592  00002B                     
   593                           ; 1 bytes @ 0x2A
   594 ;;
   595 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   596 ;;
   597 ;; *************** function _main *****************
   598 ;; Defined at:
   599 ;;		line 94 in file "main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels required when called:    8
   619 ;; This function calls:
   620 ;;		_INI_All
   621 ;;		_LED_Update
   622 ;;		_TMR1_Update_flag_Get
   623 ;;		_TMR1_Update_flag_Set
   624 ;;		_TRM_DataTransmition
   625 ;; This function is called by:
   626 ;;		Startup code after reset
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text0
   631  001576                     __ptext0:
   632                           	opt callstack 0
   633  001576                     _main:
   634                           	opt callstack 23
   635                           
   636                           ;main.c: 96:     INI_All();
   637                           
   638                           ;incstack = 0
   639  001576  EC3A  F00B         	call	_INI_All	;wreg free
   640                           
   641                           ;main.c: 98:     RCON = 0xFF;
   642  00157A  68D0               	setf	4048,c	;volatile
   643  00157C                     l3245:
   644                           
   645                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   646  00157C  B034               	btfsc	_DetectorLedRadar,0,c
   647                           
   648                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   649  00157E  9034               	bcf	_DetectorLedRadar,0,c
   650                           
   651                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   652  001580  EC84  F00B         	call	_TMR1_Update_flag_Get	;wreg free
   653  001584  0406               	decf	?_TMR1_Update_flag_Get,w,c
   654  001586  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   655  001588  A4D8               	btfss	status,2,c
   656  00158A  D008               	goto	l3255
   657                           
   658                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   659  00158C  ECF9  F007         	call	_LED_Update	;wreg free
   660                           
   661                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   662  001590  0E00               	movlw	0
   663  001592  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   664  001594  0E00               	movlw	0
   665  001596  6E06               	movwf	TMR1_Update_flag_Set@a,c
   666  001598  EC7F  F00B         	call	_TMR1_Update_flag_Set	;wreg free
   667  00159C                     l3255:
   668                           
   669                           ;main.c: 115:         TRM_DataTransmition();
   670  00159C  EC0A  F00A         	call	_TRM_DataTransmition	;wreg free
   671  0015A0  0004               	clrwdt		;# 
   672                           
   673                           ;main.c: 117:     }
   674  0015A2  D7EC               	goto	l3245
   675  0015A4                     __end_of_main:
   676                           	opt callstack 0
   677                           
   678 ;; *************** function _TRM_DataTransmition *****************
   679 ;; Defined at:
   680 ;;		line 19 in file "TRM.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  canMessage     17   25[COMRAM] struct .
   685 ;;  i               1    0        unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   696 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   698 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   699 ;;Total ram usage:       17 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    7
   702 ;; This function calls:
   703 ;;		_CAN_TakeFrame
   704 ;;		_FRAME_HandleCanFrame
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text1
   711  001414                     __ptext1:
   712                           	opt callstack 0
   713  001414                     _TRM_DataTransmition:
   714                           	opt callstack 23
   715                           
   716                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   717                           
   718                           ;incstack = 0
   719  001414  A030               	btfss	_DaneCan,0,c
   720  001416  D013               	goto	l3213
   721                           
   722                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   723  001418  0E02               	movlw	2
   724  00141A  6E1B               	movwf	TRM_DataTransmition@canMessage+1,c
   725                           
   726                           ;TRM.c: 30:         canMessage.id.Val = 0;
   727  00141C  0E00               	movlw	0
   728  00141E  6E1E               	movwf	TRM_DataTransmition@canMessage+4,c
   729  001420  0E00               	movlw	0
   730  001422  6E1F               	movwf	TRM_DataTransmition@canMessage+5,c
   731  001424  0E00               	movlw	0
   732  001426  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   733  001428  0E00               	movlw	0
   734  00142A  6E21               	movwf	TRM_DataTransmition@canMessage+7,c
   735                           
   736                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   737  00142C  0E04               	movlw	4
   738  00142E  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   739                           
   740                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   741  001430  0E1A               	movlw	low TRM_DataTransmition@canMessage
   742  001432  6E11               	movwf	FRAME_HandleCanFrame@message,c
   743  001434  0E00               	movlw	high TRM_DataTransmition@canMessage
   744  001436  6E12               	movwf	FRAME_HandleCanFrame@message+1,c
   745  001438  ECF2  F002         	call	_FRAME_HandleCanFrame	;wreg free
   746                           
   747                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   748  00143C  9030               	bcf	_DaneCan,0,c
   749  00143E                     l3213:
   750                           
   751                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   752  00143E  0E1A               	movlw	low TRM_DataTransmition@canMessage
   753  001440  6E0E               	movwf	CAN_TakeFrame@message,c
   754  001442  0E00               	movlw	high TRM_DataTransmition@canMessage
   755  001444  6E0F               	movwf	CAN_TakeFrame@message+1,c
   756  001446  ECB4  F001         	call	_CAN_TakeFrame	;wreg free
   757  00144A  0900               	iorlw	0
   758  00144C  B4D8               	btfsc	status,2,c
   759  00144E  0012               	return	
   760                           
   761                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   762  001450  0E1A               	movlw	low TRM_DataTransmition@canMessage
   763  001452  6E11               	movwf	FRAME_HandleCanFrame@message,c
   764  001454  0E00               	movlw	high TRM_DataTransmition@canMessage
   765  001456  6E12               	movwf	FRAME_HandleCanFrame@message+1,c
   766  001458  ECF2  F002         	call	_FRAME_HandleCanFrame	;wreg free
   767                           
   768                           ;TRM.c: 67:         }
   769  00145C  0012               	return		;funcret
   770  00145E                     __end_of_TRM_DataTransmition:
   771                           	opt callstack 0
   772                           
   773 ;; *************** function _FRAME_HandleCanFrame *****************
   774 ;; Defined at:
   775 ;;		line 635 in file "FRAME.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  message         2   16[COMRAM] PTR struct .
   778 ;;		 -> TRM_DataTransmition@canMessage(17), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  ident           2   22[COMRAM] unsigned short 
   781 ;;  alfa            2    0        int 
   782 ;;  identyfikato    1   24[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   793 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   795 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   796 ;;Total ram usage:        9 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    6
   799 ;; This function calls:
   800 ;;		_CAN_GenID
   801 ;;		_CAN_SendFrame
   802 ;;		_FRAME_AccelerometerStatus
   803 ;;		_FRAME_AdressOfNeighbors
   804 ;;		_FRAME_AnalogValue
   805 ;;		_FRAME_AveragingTimes
   806 ;;		_FRAME_AxisStatus
   807 ;;		_FRAME_DeviceReset
   808 ;;		_FRAME_ExcitationMultiplier
   809 ;;		_FRAME_ExcitationValue
   810 ;;		_FRAME_MapPosition
   811 ;;		_FRAME_Plot
   812 ;;		_FRAME_PrzypisanieDokarty
   813 ;;		_FRAME_SensorExcitationStatus
   814 ;;		_FRAME_SoftwareVersion
   815 ;;		_LED_Error
   816 ;;		___awdiv
   817 ;; This function is called by:
   818 ;;		_TRM_DataTransmition
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text2
   823  0005E4                     __ptext2:
   824                           	opt callstack 0
   825  0005E4                     _FRAME_HandleCanFrame:
   826                           	opt callstack 23
   827                           
   828                           ;FRAME.c: 635: void FRAME_HandleCanFrame(mID * message);FRAME.c: 636: {;FRAME.c: 637:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   829                           
   830                           ;incstack = 0
   831  0005E4  EE20 F006          	lfsr	2,6
   832  0005E8  5011               	movf	FRAME_HandleCanFrame@message,w,c
   833  0005EA  26D9               	addwf	fsr2l,f,c
   834  0005EC  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
   835  0005EE  22DA               	addwfc	fsr2h,f,c
   836  0005F0  50DF               	movf	indf2,w,c
   837  0005F2  6E13               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   838  0005F4  5013               	movf	??_FRAME_HandleCanFrame,w,c
   839  0005F6  6E06               	movwf	___awdiv@dividend,c
   840  0005F8  6A07               	clrf	___awdiv@dividend+1,c
   841  0005FA  0E00               	movlw	0
   842  0005FC  6E09               	movwf	___awdiv@divisor+1,c
   843  0005FE  0E04               	movlw	4
   844  000600  6E08               	movwf	___awdiv@divisor,c
   845  000602  ECB7  F007         	call	___awdiv	;wreg free
   846  000606  5006               	movf	?___awdiv,w,c
   847  000608  6E19               	movwf	FRAME_HandleCanFrame@identyfikator,c
   848                           
   849                           ;FRAME.c: 640:     if(identyfikator != 0x01)
   850  00060A  0419               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   851  00060C  B4D8               	btfsc	status,2,c
   852  00060E  D074               	goto	l3161
   853                           
   854                           ;FRAME.c: 641:     {;FRAME.c: 642:         WORD ident = identyfikator;
   855  000610  C019  F017         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   856  000614  6A18               	clrf	FRAME_HandleCanFrame@ident+1,c
   857  000616  D070               	goto	l3161
   858  000618                     l3131:
   859                           
   860                           ;FRAME.c: 649:             FRAME_SensorExcitationStatus(message);
   861  000618  C011  F00B         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   862  00061C  C012  F00C         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   863  000620  ECF3  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   864                           
   865                           ;FRAME.c: 650:             break;
   866  000624  D09E               	goto	l3163
   867  000626                     l3133:
   868                           
   869                           ;FRAME.c: 652:             FRAME_AccelerometerStatus(message);
   870  000626  C011  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   871  00062A  C012  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   872  00062E  EC72  F008         	call	_FRAME_AccelerometerStatus	;wreg free
   873                           
   874                           ;FRAME.c: 653:             break;
   875  000632  D097               	goto	l3163
   876  000634                     l3135:
   877                           
   878                           ;FRAME.c: 655:             FRAME_ExcitationValue(message);
   879  000634  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   880  000638  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   881  00063C  EC50  F00A         	call	_FRAME_ExcitationValue	;wreg free
   882                           
   883                           ;FRAME.c: 656:             break;
   884  000640  D090               	goto	l3163
   885  000642                     l3137:
   886                           
   887                           ;FRAME.c: 658:             FRAME_ExcitationMultiplier(message);
   888  000642  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   889  000646  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   890  00064A  ECBD  F009         	call	_FRAME_ExcitationMultiplier	;wreg free
   891                           
   892                           ;FRAME.c: 659:             break;
   893  00064E  D089               	goto	l3163
   894  000650                     l3139:
   895                           
   896                           ;FRAME.c: 661:             FRAME_AveragingTimes(message);
   897  000650  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   898  000654  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   899  000658  EC86  F00A         	call	_FRAME_AveragingTimes	;wreg free
   900                           
   901                           ;FRAME.c: 662:             break;
   902  00065C  D082               	goto	l3163
   903  00065E                     l3141:
   904                           
   905                           ;FRAME.c: 664:             FRAME_AxisStatus(message);
   906  00065E  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   907  000662  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   908  000666  EC6B  F00A         	call	_FRAME_AxisStatus	;wreg free
   909                           
   910                           ;FRAME.c: 665:             break;
   911  00066A  D07B               	goto	l3163
   912  00066C                     l3143:
   913                           
   914                           ;FRAME.c: 667:             FRAME_DeviceReset(message);
   915  00066C  C011  F009         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   916  000670  C012  F00A         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   917  000674  EC55  F005         	call	_FRAME_DeviceReset	;wreg free
   918                           
   919                           ;FRAME.c: 668:             break;
   920  000678  D074               	goto	l3163
   921  00067A                     l3145:
   922                           
   923                           ;FRAME.c: 670:             FRAME_Plot(message);
   924  00067A  C011  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   925  00067E  C012  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   926  000682  EC68  F009         	call	_FRAME_Plot	;wreg free
   927                           
   928                           ;FRAME.c: 671:             break;
   929  000686  D06D               	goto	l3163
   930  000688                     l3147:
   931                           
   932                           ;FRAME.c: 673:             FRAME_MapPosition(message);
   933  000688  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   934  00068C  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   935  000690  ECA0  F00B         	call	_FRAME_MapPosition	;wreg free
   936                           
   937                           ;FRAME.c: 674:             break;
   938  000694  D066               	goto	l3163
   939  000696                     l3149:
   940                           
   941                           ;FRAME.c: 676:             FRAME_SoftwareVersion(message);
   942  000696  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   943  00069A  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   944  00069E  ECAD  F008         	call	_FRAME_SoftwareVersion	;wreg free
   945                           
   946                           ;FRAME.c: 677:             break;
   947  0006A2  D05F               	goto	l3163
   948  0006A4                     l3151:
   949                           
   950                           ;FRAME.c: 680:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   951  0006A4  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   952  0006A8  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   953  0006AC  0EF4               	movlw	244
   954  0006AE  2419               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   955  0006B0  6E08               	movwf	FRAME_AnalogValue@set,c
   956  0006B2  6A09               	clrf	FRAME_AnalogValue@set+1,c
   957  0006B4  0EFF               	movlw	255
   958  0006B6  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   959  0006B8  ECA1  F00B         	call	_FRAME_AnalogValue	;wreg free
   960                           
   961                           ;FRAME.c: 681:             break;
   962  0006BC  D052               	goto	l3163
   963  0006BE                     l3153:
   964                           
   965                           ;FRAME.c: 683:             FRAME_PrzypisanieDokarty(message);
   966  0006BE  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   967  0006C2  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   968  0006C6  ECD8  F006         	call	_FRAME_PrzypisanieDokarty	;wreg free
   969                           
   970                           ;FRAME.c: 684:             break;
   971  0006CA  D04B               	goto	l3163
   972  0006CC                     l3155:
   973                           
   974                           ;FRAME.c: 686:             FRAME_AdressOfNeighbors(message,0x10);
   975  0006CC  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   976  0006D0  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   977  0006D4  0E00               	movlw	0
   978  0006D6  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
   979  0006D8  0E10               	movlw	16
   980  0006DA  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   981  0006DC  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   982                           
   983                           ;FRAME.c: 687:             break;
   984  0006E0  D040               	goto	l3163
   985  0006E2                     l3157:
   986                           
   987                           ;FRAME.c: 689:             FRAME_AdressOfNeighbors(message,0x11);
   988  0006E2  C011  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   989  0006E6  C012  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   990  0006EA  0E00               	movlw	0
   991  0006EC  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
   992  0006EE  0E11               	movlw	17
   993  0006F0  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   994  0006F2  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   995                           
   996                           ;FRAME.c: 690:             break;
   997  0006F6  D035               	goto	l3163
   998  0006F8                     l3161:
   999  0006F8  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1000  0006FA  6E13               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1001  0006FC  6A14               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1002                           
  1003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1004                           ; Switch size 1, requested type "simple"
  1005                           ; Number of cases is 1, Range of values is 0 to 0
  1006                           ; switch strategies available:
  1007                           ; Name         Instructions Cycles
  1008                           ; simple_byte            4     3 (average)
  1009                           ;	Chosen strategy is simple_byte
  1010  0006FE  5014               	movf	??_FRAME_HandleCanFrame+1,w,c
  1011  000700  0A00               	xorlw	0	; case 0
  1012  000702  A4D8               	btfss	status,2,c
  1013  000704  D02E               	goto	l3163
  1014                           
  1015                           ; Switch size 1, requested type "simple"
  1016                           ; Number of cases is 15, Range of values is 1 to 17
  1017                           ; switch strategies available:
  1018                           ; Name         Instructions Cycles
  1019                           ; simple_byte           46    24 (average)
  1020                           ;	Chosen strategy is simple_byte
  1021  000706  5013               	movf	??_FRAME_HandleCanFrame,w,c
  1022  000708  0A01               	xorlw	1	; case 1
  1023  00070A  B4D8               	btfsc	status,2,c
  1024  00070C  D785               	goto	l3131
  1025  00070E  0A03               	xorlw	3	; case 2
  1026  000710  B4D8               	btfsc	status,2,c
  1027  000712  D789               	goto	l3133
  1028  000714  0A01               	xorlw	1	; case 3
  1029  000716  B4D8               	btfsc	status,2,c
  1030  000718  D78D               	goto	l3135
  1031  00071A  0A07               	xorlw	7	; case 4
  1032  00071C  B4D8               	btfsc	status,2,c
  1033  00071E  D791               	goto	l3137
  1034  000720  0A01               	xorlw	1	; case 5
  1035  000722  B4D8               	btfsc	status,2,c
  1036  000724  D795               	goto	l3139
  1037  000726  0A03               	xorlw	3	; case 6
  1038  000728  B4D8               	btfsc	status,2,c
  1039  00072A  D799               	goto	l3141
  1040  00072C  0A01               	xorlw	1	; case 7
  1041  00072E  B4D8               	btfsc	status,2,c
  1042  000730  D79D               	goto	l3143
  1043  000732  0A0E               	xorlw	14	; case 9
  1044  000734  B4D8               	btfsc	status,2,c
  1045  000736  D7A1               	goto	l3145
  1046  000738  0A03               	xorlw	3	; case 10
  1047  00073A  B4D8               	btfsc	status,2,c
  1048  00073C  D7A5               	goto	l3147
  1049  00073E  0A01               	xorlw	1	; case 11
  1050  000740  B4D8               	btfsc	status,2,c
  1051  000742  D7A9               	goto	l3149
  1052  000744  0A07               	xorlw	7	; case 12
  1053  000746  B4D8               	btfsc	status,2,c
  1054  000748  D7AD               	goto	l3151
  1055  00074A  0A01               	xorlw	1	; case 13
  1056  00074C  B4D8               	btfsc	status,2,c
  1057  00074E  D7AA               	goto	l3151
  1058  000750  0A02               	xorlw	2	; case 15
  1059  000752  B4D8               	btfsc	status,2,c
  1060  000754  D7B4               	goto	l3153
  1061  000756  0A1F               	xorlw	31	; case 16
  1062  000758  B4D8               	btfsc	status,2,c
  1063  00075A  D7B8               	goto	l3155
  1064  00075C  0A01               	xorlw	1	; case 17
  1065  00075E  B4D8               	btfsc	status,2,c
  1066  000760  D7C0               	goto	l3157
  1067  000762                     l3163:
  1068                           
  1069                           ;FRAME.c: 699:     if(message->message_type == 0x02)
  1070  000762  EE20 F001          	lfsr	2,1
  1071  000766  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1072  000768  26D9               	addwf	fsr2l,f,c
  1073  00076A  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1074  00076C  22DA               	addwfc	fsr2h,f,c
  1075  00076E  0E02               	movlw	2
  1076  000770  18DE               	xorwf	postinc2,w,c
  1077  000772  A4D8               	btfss	status,2,c
  1078  000774  0012               	return	
  1079                           
  1080                           ;FRAME.c: 700:     {;FRAME.c: 702:         message->frame_type = 0x03;
  1081  000776  EE20 F002          	lfsr	2,2
  1082  00077A  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1083  00077C  26D9               	addwf	fsr2l,f,c
  1084  00077E  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1085  000780  22DA               	addwfc	fsr2h,f,c
  1086  000782  0E03               	movlw	3
  1087  000784  6EDF               	movwf	indf2,c
  1088                           
  1089                           ;FRAME.c: 703:         message->message_type = 0x01;
  1090  000786  EE20 F001          	lfsr	2,1
  1091  00078A  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1092  00078C  26D9               	addwf	fsr2l,f,c
  1093  00078E  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1094  000790  22DA               	addwfc	fsr2h,f,c
  1095  000792  0E01               	movlw	1
  1096  000794  6EDF               	movwf	indf2,c
  1097                           
  1098                           ;FRAME.c: 704:         message->id.Val = 0;
  1099  000796  EE20 F004          	lfsr	2,4
  1100  00079A  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1101  00079C  26D9               	addwf	fsr2l,f,c
  1102  00079E  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1103  0007A0  22DA               	addwfc	fsr2h,f,c
  1104  0007A2  6ADE               	clrf	postinc2,c
  1105  0007A4  6ADE               	clrf	postinc2,c
  1106  0007A6  6ADE               	clrf	postinc2,c
  1107  0007A8  6ADD               	clrf	postdec2,c
  1108                           
  1109                           ;FRAME.c: 706:         message->id.v[2] = identyfikator*4;
  1110  0007AA  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1111  0007AC  0D04               	mullw	4
  1112  0007AE  EE20 F006          	lfsr	2,6
  1113  0007B2  5011               	movf	FRAME_HandleCanFrame@message,w,c
  1114  0007B4  26D9               	addwf	fsr2l,f,c
  1115  0007B6  5012               	movf	FRAME_HandleCanFrame@message+1,w,c
  1116  0007B8  22DA               	addwfc	fsr2h,f,c
  1117  0007BA  CFF3 FFDF          	movff	prodl,indf2
  1118                           
  1119                           ;FRAME.c: 707:         CAN_GenID(message,identyfikator);
  1120  0007BE  C011  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1121  0007C2  C012  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1122  0007C6  C019  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1123  0007CA  EC27  F007         	call	_CAN_GenID	;wreg free
  1124                           
  1125                           ;FRAME.c: 708:         CAN_SendFrame(message);
  1126  0007CE  C011  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1127  0007D2  C012  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1128  0007D6  ECF5  F003         	call	_CAN_SendFrame	;wreg free
  1129                           
  1130                           ;FRAME.c: 719:        while(RXB0CONbits.FILHIT3)
  1131  0007DA  D004               	goto	l570
  1132  0007DC                     l571:
  1133                           
  1134                           ;FRAME.c: 720:        {;FRAME.c: 721:            if(TXB0CONbits.TXERR == 1){
  1135  0007DC  010F               	movlb	15	; () banked
  1136  0007DE  B940               	btfsc	64,4,b	;volatile
  1137                           
  1138                           ; BSR set to: 15
  1139                           ;FRAME.c: 722:                LED_Error();
  1140  0007E0  EC0D  F00B         	call	_LED_Error	;wreg free
  1141  0007E4                     l570:
  1142                           
  1143                           ;FRAME.c: 719:        while(RXB0CONbits.FILHIT3)
  1144  0007E4  A660               	btfss	3936,3,c	;volatile
  1145  0007E6  0012               	return	
  1146  0007E8  D7F9               	goto	l571
  1147  0007EA                     __end_of_FRAME_HandleCanFrame:
  1148                           	opt callstack 0
  1149                           
  1150 ;; *************** function _FRAME_SoftwareVersion *****************
  1151 ;; Defined at:
  1152 ;;		line 463 in file "FRAME.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  message         2    5[COMRAM] PTR struct .
  1155 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1171 ;;Total ram usage:        3 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    3
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_FRAME_HandleCanFrame
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text3
  1182  00115A                     __ptext3:
  1183                           	opt callstack 0
  1184  00115A                     _FRAME_SoftwareVersion:
  1185                           	opt callstack 25
  1186                           
  1187                           ;FRAME.c: 463: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 464: {;FRAME.c: 
      +                          466:     if(message->message_type == 0x02)
  1188                           
  1189                           ;incstack = 0
  1190  00115A  EE20 F001          	lfsr	2,1
  1191  00115E  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1192  001160  26D9               	addwf	fsr2l,f,c
  1193  001162  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1194  001164  22DA               	addwfc	fsr2h,f,c
  1195  001166  0E02               	movlw	2
  1196  001168  18DE               	xorwf	postinc2,w,c
  1197  00116A  A4D8               	btfss	status,2,c
  1198  00116C  0012               	return	
  1199                           
  1200                           ;FRAME.c: 467:     {;FRAME.c: 468:         message->data_length = 4;
  1201  00116E  EE20 F010          	lfsr	2,16
  1202  001172  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1203  001174  26D9               	addwf	fsr2l,f,c
  1204  001176  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1205  001178  22DA               	addwfc	fsr2h,f,c
  1206  00117A  0E04               	movlw	4
  1207  00117C  6EDF               	movwf	indf2,c
  1208                           
  1209                           ;FRAME.c: 469:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1210  00117E  EE20 F008          	lfsr	2,8
  1211  001182  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1212  001184  26D9               	addwf	fsr2l,f,c
  1213  001186  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1214  001188  22DA               	addwfc	fsr2h,f,c
  1215  00118A  5005               	movf	5,w,c
  1216  00118C  6EDF               	movwf	indf2,c
  1217                           
  1218                           ;FRAME.c: 470:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1219  00118E  EE20 F009          	lfsr	2,9
  1220  001192  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1221  001194  26D9               	addwf	fsr2l,f,c
  1222  001196  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1223  001198  22DA               	addwfc	fsr2h,f,c
  1224  00119A  C004 FFDF          	movff	4,indf2
  1225                           
  1226                           ;FRAME.c: 471:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1227  00119E  EE20 F00A          	lfsr	2,10
  1228  0011A2  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1229  0011A4  26D9               	addwf	fsr2l,f,c
  1230  0011A6  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1231  0011A8  22DA               	addwfc	fsr2h,f,c
  1232  0011AA  500B               	movf	11,w,c
  1233  0011AC  6EDF               	movwf	indf2,c
  1234                           
  1235                           ;FRAME.c: 472:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1236  0011AE  EE20 F00B          	lfsr	2,11
  1237  0011B2  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1238  0011B4  26D9               	addwf	fsr2l,f,c
  1239  0011B6  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1240  0011B8  22DA               	addwfc	fsr2h,f,c
  1241  0011BA  C00A FFDF          	movff	10,indf2
  1242                           
  1243                           ;FRAME.c: 473:     }
  1244  0011BE  0012               	return		;funcret
  1245  0011C0                     __end_of_FRAME_SoftwareVersion:
  1246                           	opt callstack 0
  1247                           
  1248 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1249 ;; Defined at:
  1250 ;;		line 43 in file "FRAME.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  message         2   10[COMRAM] PTR struct .
  1253 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  iterator_bet    2   14[COMRAM] unsigned short 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1269 ;;Total ram usage:        6 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    5
  1272 ;; This function calls:
  1273 ;;		_IsInNeighbors
  1274 ;;		_LED_Clear
  1275 ;;		_LED_Error
  1276 ;;		_LOCK_Get
  1277 ;;		_LOCK_Set
  1278 ;;		_MOC_Aktualna_Temperatura
  1279 ;;		_MOC_Frame_Counter
  1280 ;;		_MOC_NOTWORK
  1281 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1282 ;; This function is called by:
  1283 ;;		_FRAME_HandleCanFrame
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text4
  1288  000BE6                     __ptext4:
  1289                           	opt callstack 0
  1290  000BE6                     _FRAME_SensorExcitationStatus:
  1291                           	opt callstack 23
  1292                           
  1293                           ;FRAME.c: 43: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 44: {;FRAM
      +                          E.c: 45:     if(message->message_type == 0x02)
  1294                           
  1295                           ;incstack = 0
  1296  000BE6  EE20 F001          	lfsr	2,1
  1297  000BEA  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1298  000BEC  26D9               	addwf	fsr2l,f,c
  1299  000BEE  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1300  000BF0  22DA               	addwfc	fsr2h,f,c
  1301  000BF2  0E02               	movlw	2
  1302  000BF4  18DE               	xorwf	postinc2,w,c
  1303  000BF6  A4D8               	btfss	status,2,c
  1304  000BF8  D047               	goto	l2789
  1305                           
  1306                           ;FRAME.c: 46:     {;FRAME.c: 47:         message->data_length = 6;
  1307  000BFA  EE20 F010          	lfsr	2,16
  1308  000BFE  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1309  000C00  26D9               	addwf	fsr2l,f,c
  1310  000C02  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1311  000C04  22DA               	addwfc	fsr2h,f,c
  1312  000C06  0E06               	movlw	6
  1313  000C08  6EDF               	movwf	indf2,c
  1314                           
  1315                           ;FRAME.c: 53:         message->data[0] = LOCK_Get();
  1316  000C0A  EE20 F008          	lfsr	2,8
  1317  000C0E  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1318  000C10  26D9               	addwf	fsr2l,f,c
  1319  000C12  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1320  000C14  22DA               	addwfc	fsr2h,f,c
  1321  000C16  EC9E  F00B         	call	_LOCK_Get	;wreg free
  1322  000C1A  6EDF               	movwf	indf2,c
  1323                           
  1324                           ;FRAME.c: 54:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1325  000C1C  EE20 F009          	lfsr	2,9
  1326  000C20  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1327  000C22  26D9               	addwf	fsr2l,f,c
  1328  000C24  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1329  000C26  22DA               	addwfc	fsr2h,f,c
  1330  000C28  EC61  F00B         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1331  000C2C  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1332  000C30  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1333  000C32  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1334  000C34  6EDF               	movwf	indf2,c
  1335                           
  1336                           ;FRAME.c: 55:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1337  000C36  EE20 F00A          	lfsr	2,10
  1338  000C3A  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1339  000C3C  26D9               	addwf	fsr2l,f,c
  1340  000C3E  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1341  000C40  22DA               	addwfc	fsr2h,f,c
  1342  000C42  EC61  F00B         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1343  000C46  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1344  000C48  6EDF               	movwf	indf2,c
  1345                           
  1346                           ;FRAME.c: 56:         message->data[3] = MOC_Frame_Counter();
  1347  000C4A  EE20 F00B          	lfsr	2,11
  1348  000C4E  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1349  000C50  26D9               	addwf	fsr2l,f,c
  1350  000C52  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1351  000C54  22DA               	addwfc	fsr2h,f,c
  1352  000C56  EC53  F00B         	call	_MOC_Frame_Counter	;wreg free
  1353  000C5A  5006               	movf	?_MOC_Frame_Counter,w,c
  1354  000C5C  6EDF               	movwf	indf2,c
  1355                           
  1356                           ;FRAME.c: 57:         message->data[4] = MOC_Aktualna_Temperatura();
  1357  000C5E  EE20 F00C          	lfsr	2,12
  1358  000C62  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1359  000C64  26D9               	addwf	fsr2l,f,c
  1360  000C66  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1361  000C68  22DA               	addwfc	fsr2h,f,c
  1362  000C6A  EC66  F00B         	call	_MOC_Aktualna_Temperatura	;wreg free
  1363  000C6E  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1364  000C70  6EDF               	movwf	indf2,c
  1365                           
  1366                           ;FRAME.c: 58:         message->data[5] = MOC_NOTWORK();
  1367  000C72  EE20 F00D          	lfsr	2,13
  1368  000C76  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1369  000C78  26D9               	addwf	fsr2l,f,c
  1370  000C7A  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1371  000C7C  22DA               	addwfc	fsr2h,f,c
  1372  000C7E  EC93  F00B         	call	_MOC_NOTWORK	;wreg free
  1373  000C82  5006               	movf	?_MOC_NOTWORK,w,c
  1374  000C84  6EDF               	movwf	indf2,c
  1375                           
  1376                           ;FRAME.c: 68:     }
  1377  000C86  0012               	return	
  1378  000C88                     l2789:
  1379                           
  1380                           ;FRAME.c: 70:     {;FRAME.c: 72:         WORD iterator_beta;;FRAME.c: 75:         if(IsI
      +                          nNeighbors(12))
  1381  000C88  0E00               	movlw	0
  1382  000C8A  6E07               	movwf	IsInNeighbors@message_adress+1,c
  1383  000C8C  0E0C               	movlw	12
  1384  000C8E  6E06               	movwf	IsInNeighbors@message_adress,c
  1385  000C90  EC36  F008         	call	_IsInNeighbors	;wreg free
  1386  000C94  0900               	iorlw	0
  1387  000C96  B4D8               	btfsc	status,2,c
  1388  000C98  D00F               	goto	l2803
  1389                           
  1390                           ;FRAME.c: 76:         {;FRAME.c: 79:             for(iterator_beta=0;iterator_beta<400;i
      +                          terator_beta++)
  1391  000C9A  0E00               	movlw	0
  1392  000C9C  6E10               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1393  000C9E  0E00               	movlw	0
  1394  000CA0  6E0F               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1395  000CA2                     l2797:
  1396                           
  1397                           ;FRAME.c: 80:             {;FRAME.c: 81:             LED_Clear();
  1398  000CA2  EC1C  F00B         	call	_LED_Clear	;wreg free
  1399                           
  1400                           ;FRAME.c: 82:             }
  1401  000CA6  4A0F               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1402  000CA8  2A10               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1403  000CAA  0E90               	movlw	144
  1404  000CAC  5C0F               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1405  000CAE  0E01               	movlw	1
  1406  000CB0  5810               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1407  000CB2  B0D8               	btfsc	status,0,c
  1408  000CB4  D00F               	goto	u1380
  1409  000CB6  D7F5               	goto	l2797
  1410  000CB8                     l2803:
  1411                           
  1412                           ;FRAME.c: 87:         {;FRAME.c: 89:             for(iterator_beta=0;iterator_beta<400;i
      +                          terator_beta++)
  1413  000CB8  0E00               	movlw	0
  1414  000CBA  6E10               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1415  000CBC  0E00               	movlw	0
  1416  000CBE  6E0F               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1417  000CC0                     l2809:
  1418                           
  1419                           ;FRAME.c: 90:             {;FRAME.c: 91:             LED_Error();
  1420  000CC0  EC0D  F00B         	call	_LED_Error	;wreg free
  1421                           
  1422                           ;FRAME.c: 92:             }
  1423  000CC4  4A0F               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1424  000CC6  2A10               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1425  000CC8  0E90               	movlw	144
  1426  000CCA  5C0F               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1427  000CCC  0E01               	movlw	1
  1428  000CCE  5810               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1429  000CD0  A0D8               	btfss	status,0,c
  1430  000CD2  D7F6               	goto	l2809
  1431  000CD4                     u1380:
  1432                           
  1433                           ;FRAME.c: 96:         if(0x12b==message->id.w[0])
  1434  000CD4  EE20 F004          	lfsr	2,4
  1435  000CD8  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1436  000CDA  26D9               	addwf	fsr2l,f,c
  1437  000CDC  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1438  000CDE  22DA               	addwfc	fsr2h,f,c
  1439  000CE0  0E2B               	movlw	43
  1440  000CE2  18DE               	xorwf	postinc2,w,c
  1441  000CE4  E10C               	bnz	l467
  1442  000CE6  04DE               	decf	postinc2,w,c
  1443  000CE8  A4D8               	btfss	status,2,c
  1444  000CEA  0012               	return	
  1445                           
  1446                           ;FRAME.c: 97:         {;FRAME.c: 98:         LOCK_Set(message->data[0]);
  1447  000CEC  EE20 F008          	lfsr	2,8
  1448  000CF0  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1449  000CF2  26D9               	addwf	fsr2l,f,c
  1450  000CF4  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1451  000CF6  22DA               	addwfc	fsr2h,f,c
  1452  000CF8  50DF               	movf	indf2,w,c
  1453  000CFA  EC97  F00B         	call	_LOCK_Set
  1454  000CFE                     l467:
  1455  000CFE  0012               	return		;funcret
  1456  000D00                     __end_of_FRAME_SensorExcitationStatus:
  1457                           	opt callstack 0
  1458                           
  1459 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1460 ;; Defined at:
  1461 ;;		line 33 in file "MOC_Funct.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  2    5[COMRAM] unsigned int 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;Total ram usage:        2 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_FRAME_SensorExcitationStatus
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text5
  1490  0016C2                     __ptext5:
  1491                           	opt callstack 0
  1492  0016C2                     _MOC_Wynikowa_wartosc_roznicowa:
  1493                           	opt callstack 24
  1494                           
  1495                           ;MOC_Funct.c: 35:     return 0x0220;
  1496                           
  1497                           ;incstack = 0
  1498  0016C2  0E02               	movlw	2
  1499  0016C4  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1500  0016C6  0E20               	movlw	32
  1501  0016C8  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1502  0016CA  0012               	return		;funcret
  1503  0016CC                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1504                           	opt callstack 0
  1505                           
  1506 ;; *************** function _MOC_NOTWORK *****************
  1507 ;; Defined at:
  1508 ;;		line 47 in file "MOC_Funct.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2    5[COMRAM] unsigned int 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;Total ram usage:        2 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    3
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_FRAME_SensorExcitationStatus
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text6
  1537  001726                     __ptext6:
  1538                           	opt callstack 0
  1539  001726                     _MOC_NOTWORK:
  1540                           	opt callstack 24
  1541                           
  1542                           ;MOC_Funct.c: 49:     return 0xFF;
  1543                           
  1544                           ;incstack = 0
  1545  001726  0E00               	movlw	0
  1546  001728  6E07               	movwf	?_MOC_NOTWORK+1,c
  1547  00172A  6806               	setf	?_MOC_NOTWORK,c
  1548  00172C  0012               	return		;funcret
  1549  00172E                     __end_of_MOC_NOTWORK:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _MOC_Frame_Counter *****************
  1553 ;; Defined at:
  1554 ;;		line 38 in file "MOC_Funct.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2    5[COMRAM] unsigned int 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    3
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_FRAME_SensorExcitationStatus
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text7
  1583  0016A6                     __ptext7:
  1584                           	opt callstack 0
  1585  0016A6                     _MOC_Frame_Counter:
  1586                           	opt callstack 24
  1587                           
  1588                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1589                           
  1590                           ;incstack = 0
  1591  0016A6  5050               	movf	MOC_Frame_Counter@zeta,w,c
  1592  0016A8  6E06               	movwf	?_MOC_Frame_Counter,c
  1593  0016AA  5051               	movf	MOC_Frame_Counter@zeta+1,w,c
  1594  0016AC  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1595  0016AE  4A50               	infsnz	MOC_Frame_Counter@zeta,f,c
  1596  0016B0  2A51               	incf	MOC_Frame_Counter@zeta+1,f,c
  1597  0016B2  0012               	return		;funcret
  1598  0016B4                     __end_of_MOC_Frame_Counter:
  1599                           	opt callstack 0
  1600                           
  1601 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1602 ;; Defined at:
  1603 ;;		line 43 in file "MOC_Funct.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2    5[COMRAM] unsigned int 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    3
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_FRAME_SensorExcitationStatus
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text8
  1632  0016CC                     __ptext8:
  1633                           	opt callstack 0
  1634  0016CC                     _MOC_Aktualna_Temperatura:
  1635                           	opt callstack 24
  1636                           
  1637                           ;MOC_Funct.c: 45:     return 0x1B;
  1638                           
  1639                           ;incstack = 0
  1640  0016CC  0E00               	movlw	0
  1641  0016CE  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1642  0016D0  0E1B               	movlw	27
  1643  0016D2  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1644  0016D4  0012               	return		;funcret
  1645  0016D6                     __end_of_MOC_Aktualna_Temperatura:
  1646                           	opt callstack 0
  1647                           
  1648 ;; *************** function _LOCK_Set *****************
  1649 ;; Defined at:
  1650 ;;		line 52 in file "LED.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  k               1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  k               1    5[COMRAM] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;Total ram usage:        1 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_FRAME_SensorExcitationStatus
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text9
  1679  00172E                     __ptext9:
  1680                           	opt callstack 0
  1681  00172E                     _LOCK_Set:
  1682                           	opt callstack 24
  1683                           
  1684                           ;incstack = 0
  1685                           ;LOCK_Set@k stored from wreg
  1686  00172E  6E06               	movwf	LOCK_Set@k,c
  1687                           
  1688                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1689  001730  C006  F04F         	movff	LOCK_Set@k,_LOCK
  1690  001734  0012               	return		;funcret
  1691  001736                     __end_of_LOCK_Set:
  1692                           	opt callstack 0
  1693                           
  1694 ;; *************** function _LOCK_Get *****************
  1695 ;; Defined at:
  1696 ;;		line 57 in file "LED.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      unsigned char 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    3
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_FRAME_SensorExcitationStatus
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text10
  1725  00173C                     __ptext10:
  1726                           	opt callstack 0
  1727  00173C                     _LOCK_Get:
  1728                           	opt callstack 24
  1729                           
  1730                           ;LED.c: 59:     return LOCK;
  1731                           
  1732                           ;incstack = 0
  1733  00173C  504F               	movf	_LOCK,w,c
  1734  00173E  0012               	return		;funcret
  1735  001740                     __end_of_LOCK_Get:
  1736                           	opt callstack 0
  1737                           
  1738 ;; *************** function _LED_Error *****************
  1739 ;; Defined at:
  1740 ;;		line 37 in file "LED.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  2  265[None  ] unsigned int 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    4
  1761 ;; This function calls:
  1762 ;;		_LED_Control
  1763 ;; This function is called by:
  1764 ;;		_FRAME_SensorExcitationStatus
  1765 ;;		_FRAME_HandleCanFrame
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text11
  1770  00161A                     __ptext11:
  1771                           	opt callstack 0
  1772  00161A                     _LED_Error:
  1773                           	opt callstack 24
  1774                           
  1775                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1776                           
  1777                           ;incstack = 0
  1778  00161A  0E02               	movlw	2
  1779  00161C  6E07               	movwf	LED_Control@diode+1,c
  1780  00161E  0EAA               	movlw	170
  1781  001620  6E06               	movwf	LED_Control@diode,c
  1782  001622  0E00               	movlw	0
  1783  001624  ECAC  F004         	call	_LED_Control
  1784                           
  1785                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1786  001628  0E00               	movlw	0
  1787  00162A  6E07               	movwf	LED_Control@diode+1,c
  1788  00162C  0E00               	movlw	0
  1789  00162E  6E06               	movwf	LED_Control@diode,c
  1790  001630  0E01               	movlw	1
  1791  001632  ECAC  F004         	call	_LED_Control
  1792  001636  0012               	return		;funcret
  1793  001638                     __end_of_LED_Error:
  1794                           	opt callstack 0
  1795                           
  1796 ;; *************** function _LED_Clear *****************
  1797 ;; Defined at:
  1798 ;;		line 45 in file "LED.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2  268[None  ] unsigned int 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    4
  1819 ;; This function calls:
  1820 ;;		_LED_Control
  1821 ;; This function is called by:
  1822 ;;		_FRAME_SensorExcitationStatus
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text12
  1827  001638                     __ptext12:
  1828                           	opt callstack 0
  1829  001638                     _LED_Clear:
  1830                           	opt callstack 23
  1831                           
  1832                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  1833                           
  1834                           ;incstack = 0
  1835  001638  0E00               	movlw	0
  1836  00163A  6E07               	movwf	LED_Control@diode+1,c
  1837  00163C  0E00               	movlw	0
  1838  00163E  6E06               	movwf	LED_Control@diode,c
  1839  001640  0E00               	movlw	0
  1840  001642  ECAC  F004         	call	_LED_Control
  1841                           
  1842                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  1843  001646  0E02               	movlw	2
  1844  001648  6E07               	movwf	LED_Control@diode+1,c
  1845  00164A  0EAA               	movlw	170
  1846  00164C  6E06               	movwf	LED_Control@diode,c
  1847  00164E  0E01               	movlw	1
  1848  001650  ECAC  F004         	call	_LED_Control
  1849  001654  0012               	return		;funcret
  1850  001656                     __end_of_LED_Clear:
  1851                           	opt callstack 0
  1852                           
  1853 ;; *************** function _IsInNeighbors *****************
  1854 ;; Defined at:
  1855 ;;		line 103 in file "FRAME.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  message_adre    2    5[COMRAM] unsigned int 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  i               2    0        unsigned short 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      unsigned char 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;Total ram usage:        2 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    3
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_FRAME_SensorExcitationStatus
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text13
  1884  00106C                     __ptext13:
  1885                           	opt callstack 0
  1886  00106C                     _IsInNeighbors:
  1887                           	opt callstack 24
  1888                           
  1889                           ;FRAME.c: 103: BYTE IsInNeighbors(UINT message_adress);FRAME.c: 104: {;FRAME.c: 105:    
      +                           WORD i;;FRAME.c: 115:     if(NeightAdress1==message_adress)
  1890                           
  1891                           ;incstack = 0
  1892  00106C  5006               	movf	IsInNeighbors@message_adress,w,c
  1893  00106E  1845               	xorwf	_NeightAdress1,w,c	;volatile
  1894  001070  E106               	bnz	l2561
  1895  001072  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1896  001074  1846               	xorwf	_NeightAdress1+1,w,c	;volatile
  1897  001076  A4D8               	btfss	status,2,c
  1898  001078  D002               	goto	l2561
  1899  00107A                     u1160:
  1900                           
  1901                           ;FRAME.c: 116:     {;FRAME.c: 117:         return 1;
  1902  00107A  0E01               	movlw	1
  1903  00107C  0012               	return	
  1904  00107E                     l2561:
  1905                           
  1906                           ;FRAME.c: 119:     if(NeightAdress2==message_adress)
  1907  00107E  5006               	movf	IsInNeighbors@message_adress,w,c
  1908  001080  1843               	xorwf	_NeightAdress2,w,c	;volatile
  1909  001082  E104               	bnz	l2567
  1910  001084  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1911  001086  1844               	xorwf	_NeightAdress2+1,w,c	;volatile
  1912  001088  B4D8               	btfsc	status,2,c
  1913  00108A  D7F7               	goto	u1160
  1914  00108C                     l2567:
  1915                           
  1916                           ;FRAME.c: 123:     if(NeightAdress3==message_adress)
  1917  00108C  5006               	movf	IsInNeighbors@message_adress,w,c
  1918  00108E  1841               	xorwf	_NeightAdress3,w,c	;volatile
  1919  001090  E104               	bnz	l2573
  1920  001092  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1921  001094  1842               	xorwf	_NeightAdress3+1,w,c	;volatile
  1922  001096  B4D8               	btfsc	status,2,c
  1923  001098  D7F0               	goto	u1160
  1924  00109A                     l2573:
  1925                           
  1926                           ;FRAME.c: 127:     if(NeightAdress4==message_adress)
  1927  00109A  5006               	movf	IsInNeighbors@message_adress,w,c
  1928  00109C  183F               	xorwf	_NeightAdress4,w,c	;volatile
  1929  00109E  E104               	bnz	l2579
  1930  0010A0  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1931  0010A2  1840               	xorwf	_NeightAdress4+1,w,c	;volatile
  1932  0010A4  B4D8               	btfsc	status,2,c
  1933  0010A6  D7E9               	goto	u1160
  1934  0010A8                     l2579:
  1935                           
  1936                           ;FRAME.c: 131:     if(NeightAdress5==message_adress)
  1937  0010A8  5006               	movf	IsInNeighbors@message_adress,w,c
  1938  0010AA  183D               	xorwf	_NeightAdress5,w,c	;volatile
  1939  0010AC  E104               	bnz	l2585
  1940  0010AE  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1941  0010B0  183E               	xorwf	_NeightAdress5+1,w,c	;volatile
  1942  0010B2  B4D8               	btfsc	status,2,c
  1943  0010B4  D7E2               	goto	u1160
  1944  0010B6                     l2585:
  1945                           
  1946                           ;FRAME.c: 135:     if(NeightAdress6==message_adress)
  1947  0010B6  5006               	movf	IsInNeighbors@message_adress,w,c
  1948  0010B8  183B               	xorwf	_NeightAdress6,w,c	;volatile
  1949  0010BA  E104               	bnz	l2591
  1950  0010BC  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1951  0010BE  183C               	xorwf	_NeightAdress6+1,w,c	;volatile
  1952  0010C0  B4D8               	btfsc	status,2,c
  1953  0010C2  D7DB               	goto	u1160
  1954  0010C4                     l2591:
  1955                           
  1956                           ;FRAME.c: 139:     if(NeightAdress7==message_adress)
  1957  0010C4  5006               	movf	IsInNeighbors@message_adress,w,c
  1958  0010C6  1839               	xorwf	_NeightAdress7,w,c	;volatile
  1959  0010C8  E104               	bnz	l2597
  1960  0010CA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1961  0010CC  183A               	xorwf	_NeightAdress7+1,w,c	;volatile
  1962  0010CE  B4D8               	btfsc	status,2,c
  1963  0010D0  D7D4               	goto	u1160
  1964  0010D2                     l2597:
  1965                           
  1966                           ;FRAME.c: 143:     if(NeightAdress8==message_adress)
  1967  0010D2  5006               	movf	IsInNeighbors@message_adress,w,c
  1968  0010D4  1837               	xorwf	_NeightAdress8,w,c	;volatile
  1969  0010D6  E104               	bnz	l2603
  1970  0010D8  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1971  0010DA  1838               	xorwf	_NeightAdress8+1,w,c	;volatile
  1972  0010DC  B4D8               	btfsc	status,2,c
  1973  0010DE  D7CD               	goto	u1160
  1974  0010E0                     l2603:
  1975                           
  1976                           ;FRAME.c: 161:     return 0;
  1977  0010E0  0E00               	movlw	0
  1978  0010E2  0012               	return		;funcret
  1979  0010E4                     __end_of_IsInNeighbors:
  1980                           	opt callstack 0
  1981                           
  1982 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1983 ;; Defined at:
  1984 ;;		line 512 in file "FRAME.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  message         2    5[COMRAM] PTR struct .
  1987 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      void 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;Total ram usage:        6 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    3
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_FRAME_HandleCanFrame
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text14
  2014  000DB0                     __ptext14:
  2015                           	opt callstack 0
  2016  000DB0                     _FRAME_PrzypisanieDokarty:
  2017                           	opt callstack 25
  2018                           
  2019                           ;FRAME.c: 512: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 513: {;FRAME.
      +                          c: 514:     if(message->message_type == 0x02)
  2020                           
  2021                           ;incstack = 0
  2022  000DB0  EE20 F001          	lfsr	2,1
  2023  000DB4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2024  000DB6  26D9               	addwf	fsr2l,f,c
  2025  000DB8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2026  000DBA  22DA               	addwfc	fsr2h,f,c
  2027  000DBC  0E02               	movlw	2
  2028  000DBE  18DE               	xorwf	postinc2,w,c
  2029  000DC0  A4D8               	btfss	status,2,c
  2030  000DC2  D021               	goto	l2899
  2031                           
  2032                           ;FRAME.c: 515:     {;FRAME.c: 516:         message->data_length = 3;
  2033  000DC4  EE20 F010          	lfsr	2,16
  2034  000DC8  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2035  000DCA  26D9               	addwf	fsr2l,f,c
  2036  000DCC  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2037  000DCE  22DA               	addwfc	fsr2h,f,c
  2038  000DD0  0E03               	movlw	3
  2039  000DD2  6EDF               	movwf	indf2,c
  2040                           
  2041                           ;FRAME.c: 517:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2042  000DD4  EE20 F008          	lfsr	2,8
  2043  000DD8  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2044  000DDA  26D9               	addwf	fsr2l,f,c
  2045  000DDC  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2046  000DDE  22DA               	addwfc	fsr2h,f,c
  2047  000DE0  0E00               	movlw	0
  2048  000DE2  6EDF               	movwf	indf2,c
  2049                           
  2050                           ;FRAME.c: 518:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2051  000DE4  EE20 F009          	lfsr	2,9
  2052  000DE8  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2053  000DEA  26D9               	addwf	fsr2l,f,c
  2054  000DEC  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2055  000DEE  22DA               	addwfc	fsr2h,f,c
  2056  000DF0  C038 FFDF          	movff	56,indf2
  2057                           
  2058                           ;FRAME.c: 519:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2059  000DF4  EE20 F00A          	lfsr	2,10
  2060  000DF8  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2061  000DFA  26D9               	addwf	fsr2l,f,c
  2062  000DFC  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2063  000DFE  22DA               	addwfc	fsr2h,f,c
  2064  000E00  C03A FFDF          	movff	58,indf2
  2065                           
  2066                           ;FRAME.c: 521:     }
  2067  000E04  0012               	return	
  2068  000E06                     l2899:
  2069                           
  2070                           ;FRAME.c: 523:     {;FRAME.c: 524:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2071  000E06  EE20 F008          	lfsr	2,8
  2072  000E0A  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2073  000E0C  26D9               	addwf	fsr2l,f,c
  2074  000E0E  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2075  000E10  22DA               	addwfc	fsr2h,f,c
  2076  000E12  50DF               	movf	indf2,w,c
  2077  000E14  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2078  000E16  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2079  000E18  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2080  000E1A  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2081  000E1C  EE20 F009          	lfsr	2,9
  2082  000E20  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2083  000E22  26D9               	addwf	fsr2l,f,c
  2084  000E24  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2085  000E26  22DA               	addwfc	fsr2h,f,c
  2086  000E28  50DF               	movf	indf2,w,c
  2087  000E2A  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2088  000E2C  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2089  000E2E  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2090  000E30  6E38               	movwf	56,c
  2091  000E32  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2092  000E34  6E39               	movwf	57,c
  2093                           
  2094                           ;FRAME.c: 525:          Dane->Nr_WeWy = (message->data[2]);
  2095  000E36  EE20 F00A          	lfsr	2,10
  2096  000E3A  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2097  000E3C  26D9               	addwf	fsr2l,f,c
  2098  000E3E  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2099  000E40  22DA               	addwfc	fsr2h,f,c
  2100  000E42  50DF               	movf	indf2,w,c
  2101  000E44  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2102  000E46  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2103  000E48  6E3A               	movwf	58,c
  2104  000E4A  6A3B               	clrf	59,c
  2105  000E4C  0012               	return		;funcret
  2106  000E4E                     __end_of_FRAME_PrzypisanieDokarty:
  2107                           	opt callstack 0
  2108                           
  2109 ;; *************** function _FRAME_Plot *****************
  2110 ;; Defined at:
  2111 ;;		line 417 in file "FRAME.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  message         2   12[COMRAM] PTR struct .
  2114 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2130 ;;Total ram usage:        3 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    4
  2133 ;; This function calls:
  2134 ;;		___lwdiv
  2135 ;; This function is called by:
  2136 ;;		_FRAME_HandleCanFrame
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text15
  2141  0012D0                     __ptext15:
  2142                           	opt callstack 0
  2143  0012D0                     _FRAME_Plot:
  2144                           	opt callstack 24
  2145                           
  2146                           ;FRAME.c: 417: static void FRAME_Plot(mID *message);FRAME.c: 418: {;FRAME.c: 420:     if
      +                          (message->message_type == 0x02)
  2147                           
  2148                           ;incstack = 0
  2149  0012D0  EE20 F001          	lfsr	2,1
  2150  0012D4  500D               	movf	FRAME_Plot@message,w,c
  2151  0012D6  26D9               	addwf	fsr2l,f,c
  2152  0012D8  500E               	movf	FRAME_Plot@message+1,w,c
  2153  0012DA  22DA               	addwfc	fsr2h,f,c
  2154  0012DC  0E02               	movlw	2
  2155  0012DE  18DE               	xorwf	postinc2,w,c
  2156  0012E0  A4D8               	btfss	status,2,c
  2157  0012E2  D013               	goto	l2889
  2158                           
  2159                           ;FRAME.c: 421:     {;FRAME.c: 422:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2160  0012E4  EE20 F008          	lfsr	2,8
  2161  0012E8  500D               	movf	FRAME_Plot@message,w,c
  2162  0012EA  26D9               	addwf	fsr2l,f,c
  2163  0012EC  500E               	movf	FRAME_Plot@message+1,w,c
  2164  0012EE  22DA               	addwfc	fsr2h,f,c
  2165  0012F0  C00C F006          	movff	12,___lwdiv@dividend
  2166  0012F4  C00D F007          	movff	13,___lwdiv@dividend+1
  2167  0012F8  0E00               	movlw	0
  2168  0012FA  6E09               	movwf	___lwdiv@divisor+1,c
  2169  0012FC  0E0A               	movlw	10
  2170  0012FE  6E08               	movwf	___lwdiv@divisor,c
  2171  001300  EC94  F009         	call	___lwdiv	;wreg free
  2172  001304  5006               	movf	?___lwdiv,w,c
  2173  001306  6EDF               	movwf	indf2,c
  2174                           
  2175                           ;FRAME.c: 423:     }
  2176  001308  0012               	return	
  2177  00130A                     l2889:
  2178                           
  2179                           ;FRAME.c: 425:     {;FRAME.c: 426:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2180  00130A  EE20 F008          	lfsr	2,8
  2181  00130E  500D               	movf	FRAME_Plot@message,w,c
  2182  001310  26D9               	addwf	fsr2l,f,c
  2183  001312  500E               	movf	FRAME_Plot@message+1,w,c
  2184  001314  22DA               	addwfc	fsr2h,f,c
  2185  001316  50DF               	movf	indf2,w,c
  2186  001318  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2187  00131A  500F               	movf	??_FRAME_Plot,w,c
  2188  00131C  0D0A               	mullw	10
  2189  00131E  CFF3 F00C          	movff	prodl,12
  2190  001322  CFF4 F00D          	movff	prodh,13
  2191  001326  0012               	return		;funcret
  2192  001328                     __end_of_FRAME_Plot:
  2193                           	opt callstack 0
  2194                           
  2195 ;; *************** function _FRAME_MapPosition *****************
  2196 ;; Defined at:
  2197 ;;		line 438 in file "FRAME.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  message         2    5[COMRAM] PTR struct .
  2200 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		None
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;Total ram usage:        2 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    3
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_FRAME_HandleCanFrame
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text16
  2227  001740                     __ptext16:
  2228                           	opt callstack 0
  2229  001740                     _FRAME_MapPosition:
  2230                           	opt callstack 25
  2231                           
  2232                           ;incstack = 0
  2233  001740  0012               	return		;funcret
  2234  001742                     __end_of_FRAME_MapPosition:
  2235                           	opt callstack 0
  2236                           
  2237 ;; *************** function _FRAME_ExcitationValue *****************
  2238 ;; Defined at:
  2239 ;;		line 195 in file "FRAME.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  message         2    5[COMRAM] PTR struct .
  2242 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;Total ram usage:        3 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    3
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_FRAME_HandleCanFrame
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text17
  2269  0014A0                     __ptext17:
  2270                           	opt callstack 0
  2271  0014A0                     _FRAME_ExcitationValue:
  2272                           	opt callstack 25
  2273                           
  2274                           ;FRAME.c: 195: static void FRAME_ExcitationValue(mID *message);FRAME.c: 196: {;FRAME.c: 
      +                          197:     if(message->message_type == 0x02)
  2275                           
  2276                           ;incstack = 0
  2277  0014A0  EE20 F001          	lfsr	2,1
  2278  0014A4  5006               	movf	FRAME_ExcitationValue@message,w,c
  2279  0014A6  26D9               	addwf	fsr2l,f,c
  2280  0014A8  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2281  0014AA  22DA               	addwfc	fsr2h,f,c
  2282  0014AC  0E02               	movlw	2
  2283  0014AE  18DE               	xorwf	postinc2,w,c
  2284  0014B0  A4D8               	btfss	status,2,c
  2285  0014B2  0012               	return	
  2286                           
  2287                           ;FRAME.c: 198:     {;FRAME.c: 199:         message->data_length = 1;
  2288  0014B4  EE20 F010          	lfsr	2,16
  2289  0014B8  5006               	movf	FRAME_ExcitationValue@message,w,c
  2290  0014BA  26D9               	addwf	fsr2l,f,c
  2291  0014BC  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2292  0014BE  22DA               	addwfc	fsr2h,f,c
  2293  0014C0  0E01               	movlw	1
  2294  0014C2  6EDF               	movwf	indf2,c
  2295                           
  2296                           ;FRAME.c: 204:         message->data[0] = 0xFF;
  2297  0014C4  EE20 F008          	lfsr	2,8
  2298  0014C8  5006               	movf	FRAME_ExcitationValue@message,w,c
  2299  0014CA  26D9               	addwf	fsr2l,f,c
  2300  0014CC  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2301  0014CE  22DA               	addwfc	fsr2h,f,c
  2302  0014D0  0EFF               	movlw	255
  2303  0014D2  6EDF               	movwf	indf2,c
  2304                           
  2305                           ;FRAME.c: 205:     }
  2306  0014D4  0012               	return		;funcret
  2307  0014D6                     __end_of_FRAME_ExcitationValue:
  2308                           	opt callstack 0
  2309                           
  2310 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2311 ;; Defined at:
  2312 ;;		line 219 in file "FRAME.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  message         2    5[COMRAM] PTR struct .
  2315 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  i               2    8[COMRAM] unsigned short 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;Total ram usage:        5 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    3
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_FRAME_HandleCanFrame
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text18
  2342  00137A                     __ptext18:
  2343                           	opt callstack 0
  2344  00137A                     _FRAME_ExcitationMultiplier:
  2345                           	opt callstack 25
  2346                           
  2347                           ;FRAME.c: 219: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 220: {;FRAM
      +                          E.c: 221:     WORD i;;FRAME.c: 223:     if(message->message_type == 0x02)
  2348                           
  2349                           ;incstack = 0
  2350  00137A  EE20 F001          	lfsr	2,1
  2351  00137E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2352  001380  26D9               	addwf	fsr2l,f,c
  2353  001382  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2354  001384  22DA               	addwfc	fsr2h,f,c
  2355  001386  0E02               	movlw	2
  2356  001388  18DE               	xorwf	postinc2,w,c
  2357  00138A  A4D8               	btfss	status,2,c
  2358  00138C  0012               	return	
  2359                           
  2360                           ;FRAME.c: 224:     {;FRAME.c: 225:         message->data_length = 1;
  2361  00138E  EE20 F010          	lfsr	2,16
  2362  001392  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2363  001394  26D9               	addwf	fsr2l,f,c
  2364  001396  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2365  001398  22DA               	addwfc	fsr2h,f,c
  2366  00139A  0E01               	movlw	1
  2367  00139C  6EDF               	movwf	indf2,c
  2368                           
  2369                           ;FRAME.c: 226:         for(i=0; i<3; i++)
  2370  00139E  0E00               	movlw	0
  2371  0013A0  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2372  0013A2  0E00               	movlw	0
  2373  0013A4  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2374  0013A6                     l2845:
  2375                           
  2376                           ;FRAME.c: 227:         {;FRAME.c: 230:         }
  2377  0013A6  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2378  0013A8  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2379  0013AA  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2380  0013AC  E104               	bnz	u1430
  2381  0013AE  0E03               	movlw	3
  2382  0013B0  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2383  0013B2  A0D8               	btfss	status,0,c
  2384  0013B4  D7F8               	goto	l2845
  2385  0013B6                     u1430:
  2386                           
  2387                           ;FRAME.c: 231:         message->data[0] = 0xFF;
  2388  0013B6  EE20 F008          	lfsr	2,8
  2389  0013BA  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2390  0013BC  26D9               	addwf	fsr2l,f,c
  2391  0013BE  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2392  0013C0  22DA               	addwfc	fsr2h,f,c
  2393  0013C2  0EFF               	movlw	255
  2394  0013C4  6EDF               	movwf	indf2,c
  2395                           
  2396                           ;FRAME.c: 232:     }
  2397  0013C6  0012               	return		;funcret
  2398  0013C8                     __end_of_FRAME_ExcitationMultiplier:
  2399                           	opt callstack 0
  2400                           
  2401 ;; *************** function _FRAME_DeviceReset *****************
  2402 ;; Defined at:
  2403 ;;		line 353 in file "FRAME.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  message         2    8[COMRAM] PTR struct .
  2406 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;Total ram usage:        3 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    4
  2425 ;; This function calls:
  2426 ;;		_FRAME_DataUpdateAndChangeOption
  2427 ;; This function is called by:
  2428 ;;		_FRAME_HandleCanFrame
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text19
  2433  000AAA                     __ptext19:
  2434                           	opt callstack 0
  2435  000AAA                     _FRAME_DeviceReset:
  2436                           	opt callstack 24
  2437                           
  2438                           ;FRAME.c: 353: static void FRAME_DeviceReset(mID *message);FRAME.c: 354: {;FRAME.c: 355:
      +                               if(message->message_type == 0x02)
  2439                           
  2440                           ;incstack = 0
  2441  000AAA  EE20 F001          	lfsr	2,1
  2442  000AAE  5009               	movf	FRAME_DeviceReset@message,w,c
  2443  000AB0  26D9               	addwf	fsr2l,f,c
  2444  000AB2  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2445  000AB4  22DA               	addwfc	fsr2h,f,c
  2446  000AB6  0E02               	movlw	2
  2447  000AB8  18DE               	xorwf	postinc2,w,c
  2448  000ABA  A4D8               	btfss	status,2,c
  2449  000ABC  D056               	goto	l2867
  2450                           
  2451                           ;FRAME.c: 356:     {;FRAME.c: 357:         message->data_length = 1;
  2452  000ABE  EE20 F010          	lfsr	2,16
  2453  000AC2  5009               	movf	FRAME_DeviceReset@message,w,c
  2454  000AC4  26D9               	addwf	fsr2l,f,c
  2455  000AC6  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2456  000AC8  22DA               	addwfc	fsr2h,f,c
  2457  000ACA  0E01               	movlw	1
  2458  000ACC  6EDF               	movwf	indf2,c
  2459                           
  2460                           ;FRAME.c: 359:         message->data[0] = (RCON>>6) & 0x01;
  2461  000ACE  EE20 F008          	lfsr	2,8
  2462  000AD2  5009               	movf	FRAME_DeviceReset@message,w,c
  2463  000AD4  26D9               	addwf	fsr2l,f,c
  2464  000AD6  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2465  000AD8  22DA               	addwfc	fsr2h,f,c
  2466  000ADA  44D0               	rlncf	4048,w,c	;volatile
  2467  000ADC  46E8               	rlncf	wreg,f,c
  2468  000ADE  0B03               	andlw	3
  2469  000AE0  0B01               	andlw	1
  2470  000AE2  6EDF               	movwf	indf2,c
  2471                           
  2472                           ;FRAME.c: 360:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2473  000AE4  EE20 F009          	lfsr	2,9
  2474  000AE8  5009               	movf	FRAME_DeviceReset@message,w,c
  2475  000AEA  26D9               	addwf	fsr2l,f,c
  2476  000AEC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2477  000AEE  22DA               	addwfc	fsr2h,f,c
  2478  000AF0  A82B               	btfss	_Flagi,4,c
  2479  000AF2  D002               	goto	u1470
  2480  000AF4  0E01               	movlw	1
  2481  000AF6  D001               	goto	u1476
  2482  000AF8                     u1470:
  2483  000AF8  0E00               	movlw	0
  2484  000AFA                     u1476:
  2485  000AFA  6EDF               	movwf	indf2,c
  2486                           
  2487                           ;FRAME.c: 361:         message->data[2] = Flagi.pomiarTla;
  2488  000AFC  EE20 F00A          	lfsr	2,10
  2489  000B00  5009               	movf	FRAME_DeviceReset@message,w,c
  2490  000B02  26D9               	addwf	fsr2l,f,c
  2491  000B04  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2492  000B06  22DA               	addwfc	fsr2h,f,c
  2493  000B08  A02B               	btfss	_Flagi,0,c
  2494  000B0A  D002               	goto	u1480
  2495  000B0C  0E01               	movlw	1
  2496  000B0E  D001               	goto	u1486
  2497  000B10                     u1480:
  2498  000B10  0E00               	movlw	0
  2499  000B12                     u1486:
  2500  000B12  6EDF               	movwf	indf2,c
  2501                           
  2502                           ;FRAME.c: 362:         message->data[3] = 0;
  2503  000B14  EE20 F00B          	lfsr	2,11
  2504  000B18  5009               	movf	FRAME_DeviceReset@message,w,c
  2505  000B1A  26D9               	addwf	fsr2l,f,c
  2506  000B1C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2507  000B1E  22DA               	addwfc	fsr2h,f,c
  2508  000B20  0E00               	movlw	0
  2509  000B22  6EDF               	movwf	indf2,c
  2510                           
  2511                           ;FRAME.c: 363:         message->data[4] = Dane->rokU16;
  2512  000B24  EE20 F00C          	lfsr	2,12
  2513  000B28  5009               	movf	FRAME_DeviceReset@message,w,c
  2514  000B2A  26D9               	addwf	fsr2l,f,c
  2515  000B2C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2516  000B2E  22DA               	addwfc	fsr2h,f,c
  2517  000B30  C02E FFDF          	movff	46,indf2
  2518                           
  2519                           ;FRAME.c: 364:         message->data[5] = Dane->miesiacU16;
  2520  000B34  EE20 F00D          	lfsr	2,13
  2521  000B38  5009               	movf	FRAME_DeviceReset@message,w,c
  2522  000B3A  26D9               	addwf	fsr2l,f,c
  2523  000B3C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2524  000B3E  22DA               	addwfc	fsr2h,f,c
  2525  000B40  C030 FFDF          	movff	48,indf2
  2526                           
  2527                           ;FRAME.c: 365:         message->data[6] = Dane->dzienU16;
  2528  000B44  EE20 F00E          	lfsr	2,14
  2529  000B48  5009               	movf	FRAME_DeviceReset@message,w,c
  2530  000B4A  26D9               	addwf	fsr2l,f,c
  2531  000B4C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2532  000B4E  22DA               	addwfc	fsr2h,f,c
  2533  000B50  C032 FFDF          	movff	50,indf2
  2534                           
  2535                           ;FRAME.c: 366:         message->data[7] = Dane->godzinaU16;
  2536  000B54  EE20 F00F          	lfsr	2,15
  2537  000B58  5009               	movf	FRAME_DeviceReset@message,w,c
  2538  000B5A  26D9               	addwf	fsr2l,f,c
  2539  000B5C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2540  000B5E  22DA               	addwfc	fsr2h,f,c
  2541  000B60  C034 FFDF          	movff	52,indf2
  2542                           
  2543                           ;FRAME.c: 367:         RCON &= ~(1<<6);
  2544  000B64  9CD0               	bcf	4048,6,c	;volatile
  2545                           
  2546                           ;FRAME.c: 368:         Flagi.wykonanoZapisDoFlash = 0;
  2547  000B66  982B               	bcf	_Flagi,4,c
  2548                           
  2549                           ;FRAME.c: 382:     }
  2550  000B68  0012               	return	
  2551  000B6A                     l2867:
  2552                           
  2553                           ;FRAME.c: 384:     {;FRAME.c: 385:         message->data_length = 1;
  2554  000B6A  EE20 F010          	lfsr	2,16
  2555  000B6E  5009               	movf	FRAME_DeviceReset@message,w,c
  2556  000B70  26D9               	addwf	fsr2l,f,c
  2557  000B72  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2558  000B74  22DA               	addwfc	fsr2h,f,c
  2559  000B76  0E01               	movlw	1
  2560  000B78  6EDF               	movwf	indf2,c
  2561                           
  2562                           ;FRAME.c: 387:         if(message->data[2])
  2563  000B7A  EE20 F00A          	lfsr	2,10
  2564  000B7E  5009               	movf	FRAME_DeviceReset@message,w,c
  2565  000B80  26D9               	addwf	fsr2l,f,c
  2566  000B82  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2567  000B84  22DA               	addwfc	fsr2h,f,c
  2568  000B86  50DF               	movf	indf2,w,c
  2569  000B88  B4D8               	btfsc	status,2,c
  2570  000B8A  D00C               	goto	l2875
  2571                           
  2572                           ;FRAME.c: 388:         {;FRAME.c: 389:             Flagi.pomiarTla = 1;
  2573  000B8C  802B               	bsf	_Flagi,0,c
  2574                           
  2575                           ;FRAME.c: 390:             if(message->data[1])
  2576  000B8E  EE20 F009          	lfsr	2,9
  2577  000B92  5009               	movf	FRAME_DeviceReset@message,w,c
  2578  000B94  26D9               	addwf	fsr2l,f,c
  2579  000B96  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2580  000B98  22DA               	addwfc	fsr2h,f,c
  2581  000B9A  50DF               	movf	indf2,w,c
  2582  000B9C  B4D8               	btfsc	status,2,c
  2583  000B9E  D01A               	goto	l2883
  2584                           
  2585                           ;FRAME.c: 391:             {;FRAME.c: 392:                 Flagi.zapisDoFlash = 1;
  2586  000BA0  862B               	bsf	_Flagi,3,c
  2587  000BA2  D018               	goto	l2883
  2588  000BA4                     l2875:
  2589                           
  2590                           ;FRAME.c: 396:         {;FRAME.c: 397:             if(message->data[1])
  2591  000BA4  EE20 F009          	lfsr	2,9
  2592  000BA8  5009               	movf	FRAME_DeviceReset@message,w,c
  2593  000BAA  26D9               	addwf	fsr2l,f,c
  2594  000BAC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2595  000BAE  22DA               	addwfc	fsr2h,f,c
  2596  000BB0  50DF               	movf	indf2,w,c
  2597  000BB2  B4D8               	btfsc	status,2,c
  2598  000BB4  D006               	goto	l2879
  2599                           
  2600                           ;FRAME.c: 398:             {;FRAME.c: 399:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2601  000BB6  C009  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2602  000BBA  C00A  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2603  000BBE  EC3B  F009         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2604  000BC2                     l2879:
  2605                           
  2606                           ;FRAME.c: 402:             if(message->data[0])
  2607  000BC2  EE20 F008          	lfsr	2,8
  2608  000BC6  5009               	movf	FRAME_DeviceReset@message,w,c
  2609  000BC8  26D9               	addwf	fsr2l,f,c
  2610  000BCA  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2611  000BCC  22DA               	addwfc	fsr2h,f,c
  2612  000BCE  50DF               	movf	indf2,w,c
  2613  000BD0  A4D8               	btfss	status,2,c
  2614  000BD2  00FF               	reset		;# 
  2615  000BD4                     l2883:
  2616                           
  2617                           ;FRAME.c: 407:         message->data[0] = 0xFF;
  2618  000BD4  EE20 F008          	lfsr	2,8
  2619  000BD8  5009               	movf	FRAME_DeviceReset@message,w,c
  2620  000BDA  26D9               	addwf	fsr2l,f,c
  2621  000BDC  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2622  000BDE  22DA               	addwfc	fsr2h,f,c
  2623  000BE0  0EFF               	movlw	255
  2624  000BE2  6EDF               	movwf	indf2,c
  2625  000BE4  0012               	return		;funcret
  2626  000BE6                     __end_of_FRAME_DeviceReset:
  2627                           	opt callstack 0
  2628                           
  2629 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  2630 ;; Defined at:
  2631 ;;		line 337 in file "FRAME.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  message         2    5[COMRAM] PTR struct .
  2634 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;Total ram usage:        3 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    3
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_FRAME_DeviceReset
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text20
  2661  001276                     __ptext20:
  2662                           	opt callstack 0
  2663  001276                     _FRAME_DataUpdateAndChangeOption:
  2664                           	opt callstack 24
  2665                           
  2666                           ;FRAME.c: 337: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 338: {
      +                          ;FRAME.c: 340:     Dane->rokU16 = message->data[4];
  2667                           
  2668                           ;incstack = 0
  2669  001276  EE20 F00C          	lfsr	2,12
  2670  00127A  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2671  00127C  26D9               	addwf	fsr2l,f,c
  2672  00127E  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2673  001280  22DA               	addwfc	fsr2h,f,c
  2674  001282  50DF               	movf	indf2,w,c
  2675  001284  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2676  001286  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2677  001288  6E2E               	movwf	46,c
  2678  00128A  6A2F               	clrf	47,c
  2679                           
  2680                           ;FRAME.c: 341:     Dane->miesiacU16 = message->data[5];
  2681  00128C  EE20 F00D          	lfsr	2,13
  2682  001290  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2683  001292  26D9               	addwf	fsr2l,f,c
  2684  001294  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2685  001296  22DA               	addwfc	fsr2h,f,c
  2686  001298  50DF               	movf	indf2,w,c
  2687  00129A  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2688  00129C  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2689  00129E  6E30               	movwf	48,c
  2690  0012A0  6A31               	clrf	49,c
  2691                           
  2692                           ;FRAME.c: 342:     Dane->dzienU16 = message->data[6];
  2693  0012A2  EE20 F00E          	lfsr	2,14
  2694  0012A6  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2695  0012A8  26D9               	addwf	fsr2l,f,c
  2696  0012AA  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2697  0012AC  22DA               	addwfc	fsr2h,f,c
  2698  0012AE  50DF               	movf	indf2,w,c
  2699  0012B0  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2700  0012B2  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2701  0012B4  6E32               	movwf	50,c
  2702  0012B6  6A33               	clrf	51,c
  2703                           
  2704                           ;FRAME.c: 343:     Dane->godzinaU16 = message->data[7];
  2705  0012B8  EE20 F00F          	lfsr	2,15
  2706  0012BC  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2707  0012BE  26D9               	addwf	fsr2l,f,c
  2708  0012C0  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2709  0012C2  22DA               	addwfc	fsr2h,f,c
  2710  0012C4  50DF               	movf	indf2,w,c
  2711  0012C6  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2712  0012C8  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2713  0012CA  6E34               	movwf	52,c
  2714  0012CC  6A35               	clrf	53,c
  2715  0012CE  0012               	return		;funcret
  2716  0012D0                     __end_of_FRAME_DataUpdateAndChangeOption:
  2717                           	opt callstack 0
  2718                           
  2719 ;; *************** function _FRAME_AxisStatus *****************
  2720 ;; Defined at:
  2721 ;;		line 306 in file "FRAME.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  message         2    5[COMRAM] PTR struct .
  2724 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  i               2    0        unsigned short 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;Total ram usage:        3 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    3
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_FRAME_HandleCanFrame
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text21
  2751  0014D6                     __ptext21:
  2752                           	opt callstack 0
  2753  0014D6                     _FRAME_AxisStatus:
  2754                           	opt callstack 25
  2755                           
  2756                           ;FRAME.c: 306: static void FRAME_AxisStatus(mID *message);FRAME.c: 307: {;FRAME.c: 308: 
      +                              WORD i;;FRAME.c: 310:     if(message->message_type == 0x02)
  2757                           
  2758                           ;incstack = 0
  2759  0014D6  EE20 F001          	lfsr	2,1
  2760  0014DA  5006               	movf	FRAME_AxisStatus@message,w,c
  2761  0014DC  26D9               	addwf	fsr2l,f,c
  2762  0014DE  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2763  0014E0  22DA               	addwfc	fsr2h,f,c
  2764  0014E2  0E02               	movlw	2
  2765  0014E4  18DE               	xorwf	postinc2,w,c
  2766  0014E6  A4D8               	btfss	status,2,c
  2767  0014E8  0012               	return	
  2768                           
  2769                           ;FRAME.c: 311:     {;FRAME.c: 312:         message->data_length = 1;
  2770  0014EA  EE20 F010          	lfsr	2,16
  2771  0014EE  5006               	movf	FRAME_AxisStatus@message,w,c
  2772  0014F0  26D9               	addwf	fsr2l,f,c
  2773  0014F2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2774  0014F4  22DA               	addwfc	fsr2h,f,c
  2775  0014F6  0E01               	movlw	1
  2776  0014F8  6EDF               	movwf	indf2,c
  2777                           
  2778                           ;FRAME.c: 323:         message->data[0] = 0xFF;
  2779  0014FA  EE20 F008          	lfsr	2,8
  2780  0014FE  5006               	movf	FRAME_AxisStatus@message,w,c
  2781  001500  26D9               	addwf	fsr2l,f,c
  2782  001502  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2783  001504  22DA               	addwfc	fsr2h,f,c
  2784  001506  0EFF               	movlw	255
  2785  001508  6EDF               	movwf	indf2,c
  2786                           
  2787                           ;FRAME.c: 324:     }
  2788  00150A  0012               	return		;funcret
  2789  00150C                     __end_of_FRAME_AxisStatus:
  2790                           	opt callstack 0
  2791                           
  2792 ;; *************** function _FRAME_AveragingTimes *****************
  2793 ;; Defined at:
  2794 ;;		line 247 in file "FRAME.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  message         2    5[COMRAM] PTR struct .
  2797 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;Total ram usage:        3 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    3
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_FRAME_HandleCanFrame
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text22
  2824  00150C                     __ptext22:
  2825                           	opt callstack 0
  2826  00150C                     _FRAME_AveragingTimes:
  2827                           	opt callstack 25
  2828                           
  2829                           ;FRAME.c: 247: static void FRAME_AveragingTimes(mID *message);FRAME.c: 248: {;FRAME.c: 2
      +                          49:     if(message->message_type == 0x02)
  2830                           
  2831                           ;incstack = 0
  2832  00150C  EE20 F001          	lfsr	2,1
  2833  001510  5006               	movf	FRAME_AveragingTimes@message,w,c
  2834  001512  26D9               	addwf	fsr2l,f,c
  2835  001514  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2836  001516  22DA               	addwfc	fsr2h,f,c
  2837  001518  0E02               	movlw	2
  2838  00151A  18DE               	xorwf	postinc2,w,c
  2839  00151C  A4D8               	btfss	status,2,c
  2840  00151E  0012               	return	
  2841                           
  2842                           ;FRAME.c: 250:     {;FRAME.c: 251:         message->data_length = 1;
  2843  001520  EE20 F010          	lfsr	2,16
  2844  001524  5006               	movf	FRAME_AveragingTimes@message,w,c
  2845  001526  26D9               	addwf	fsr2l,f,c
  2846  001528  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2847  00152A  22DA               	addwfc	fsr2h,f,c
  2848  00152C  0E01               	movlw	1
  2849  00152E  6EDF               	movwf	indf2,c
  2850                           
  2851                           ;FRAME.c: 259:         message->data[0] = 0xFF;
  2852  001530  EE20 F008          	lfsr	2,8
  2853  001534  5006               	movf	FRAME_AveragingTimes@message,w,c
  2854  001536  26D9               	addwf	fsr2l,f,c
  2855  001538  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2856  00153A  22DA               	addwfc	fsr2h,f,c
  2857  00153C  0EFF               	movlw	255
  2858  00153E  6EDF               	movwf	indf2,c
  2859                           
  2860                           ;FRAME.c: 260:     }
  2861  001540  0012               	return		;funcret
  2862  001542                     __end_of_FRAME_AveragingTimes:
  2863                           	opt callstack 0
  2864                           
  2865 ;; *************** function _FRAME_AnalogValue *****************
  2866 ;; Defined at:
  2867 ;;		line 486 in file "FRAME.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  message         2    5[COMRAM] PTR struct .
  2870 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2871 ;;  set             2    7[COMRAM] unsigned short 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  i               2    0        unsigned short 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		None
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;Total ram usage:        4 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    3
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_FRAME_HandleCanFrame
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text23
  2898  001742                     __ptext23:
  2899                           	opt callstack 0
  2900  001742                     _FRAME_AnalogValue:
  2901                           	opt callstack 25
  2902                           
  2903                           ;incstack = 0
  2904  001742  0012               	return		;funcret
  2905  001744                     __end_of_FRAME_AnalogValue:
  2906                           	opt callstack 0
  2907                           
  2908 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2909 ;; Defined at:
  2910 ;;		line 534 in file "FRAME.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  message         2    5[COMRAM] PTR struct .
  2913 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2914 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  kier            2   13[COMRAM] unsigned short 
  2917 ;;  it              2    0        unsigned short 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2929 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;Total ram usage:       10 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    3
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_FRAME_HandleCanFrame
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text24
  2942  000060                     __ptext24:
  2943                           	opt callstack 0
  2944  000060                     _FRAME_AdressOfNeighbors:
  2945                           	opt callstack 25
  2946                           
  2947                           ;FRAME.c: 534: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          535: {;FRAME.c: 536:     WORD it;;FRAME.c: 539:     WORD kier = (nrRamki-0x10);
  2948                           
  2949                           ;incstack = 0
  2950  000060  0EF0               	movlw	240
  2951  000062  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  2952  000064  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  2953  000066  0EFF               	movlw	255
  2954  000068  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  2955  00006A  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  2956                           
  2957                           ;FRAME.c: 540:     if(message->message_type == 0x02)
  2958  00006C  EE20 F001          	lfsr	2,1
  2959  000070  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2960  000072  26D9               	addwf	fsr2l,f,c
  2961  000074  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2962  000076  22DA               	addwfc	fsr2h,f,c
  2963  000078  0E02               	movlw	2
  2964  00007A  18DE               	xorwf	postinc2,w,c
  2965  00007C  A4D8               	btfss	status,2,c
  2966  00007E  D08E               	goto	l2913
  2967                           
  2968                           ;FRAME.c: 541:     {;FRAME.c: 543:         message->data_length = 8;
  2969  000080  EE20 F010          	lfsr	2,16
  2970  000084  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2971  000086  26D9               	addwf	fsr2l,f,c
  2972  000088  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2973  00008A  22DA               	addwfc	fsr2h,f,c
  2974  00008C  0E08               	movlw	8
  2975  00008E  6EDF               	movwf	indf2,c
  2976                           
  2977                           ;FRAME.c: 545:         if(kier == 0)
  2978  000090  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  2979  000092  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  2980  000094  A4D8               	btfss	status,2,c
  2981  000096  D041               	goto	l2911
  2982                           
  2983                           ;FRAME.c: 546:         {;FRAME.c: 547:         message->data[0] = (NeightAdress1>> 8);
  2984  000098  EE20 F008          	lfsr	2,8
  2985  00009C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2986  00009E  26D9               	addwf	fsr2l,f,c
  2987  0000A0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2988  0000A2  22DA               	addwfc	fsr2h,f,c
  2989  0000A4  5046               	movf	_NeightAdress1+1,w,c	;volatile
  2990  0000A6  6EDF               	movwf	indf2,c
  2991                           
  2992                           ;FRAME.c: 548:         message->data[1] = NeightAdress1 & 0b11111111;
  2993  0000A8  EE20 F009          	lfsr	2,9
  2994  0000AC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2995  0000AE  26D9               	addwf	fsr2l,f,c
  2996  0000B0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2997  0000B2  22DA               	addwfc	fsr2h,f,c
  2998  0000B4  C045  FFDF         	movff	_NeightAdress1,indf2	;volatile
  2999                           
  3000                           ;FRAME.c: 549:         message->data[2] = (NeightAdress2>> 8);
  3001  0000B8  EE20 F00A          	lfsr	2,10
  3002  0000BC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3003  0000BE  26D9               	addwf	fsr2l,f,c
  3004  0000C0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3005  0000C2  22DA               	addwfc	fsr2h,f,c
  3006  0000C4  5044               	movf	_NeightAdress2+1,w,c	;volatile
  3007  0000C6  6EDF               	movwf	indf2,c
  3008                           
  3009                           ;FRAME.c: 550:         message->data[3] = NeightAdress2 & 0b11111111;
  3010  0000C8  EE20 F00B          	lfsr	2,11
  3011  0000CC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3012  0000CE  26D9               	addwf	fsr2l,f,c
  3013  0000D0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3014  0000D2  22DA               	addwfc	fsr2h,f,c
  3015  0000D4  C043  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3016                           
  3017                           ;FRAME.c: 551:         message->data[4] = (NeightAdress3>> 8);
  3018  0000D8  EE20 F00C          	lfsr	2,12
  3019  0000DC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3020  0000DE  26D9               	addwf	fsr2l,f,c
  3021  0000E0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3022  0000E2  22DA               	addwfc	fsr2h,f,c
  3023  0000E4  5042               	movf	_NeightAdress3+1,w,c	;volatile
  3024  0000E6  6EDF               	movwf	indf2,c
  3025                           
  3026                           ;FRAME.c: 552:         message->data[5] = NeightAdress3 & 0b11111111;
  3027  0000E8  EE20 F00D          	lfsr	2,13
  3028  0000EC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3029  0000EE  26D9               	addwf	fsr2l,f,c
  3030  0000F0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3031  0000F2  22DA               	addwfc	fsr2h,f,c
  3032  0000F4  C041  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3033                           
  3034                           ;FRAME.c: 553:         message->data[6] = (NeightAdress4>> 8);
  3035  0000F8  EE20 F00E          	lfsr	2,14
  3036  0000FC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3037  0000FE  26D9               	addwf	fsr2l,f,c
  3038  000100  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3039  000102  22DA               	addwfc	fsr2h,f,c
  3040  000104  5040               	movf	_NeightAdress4+1,w,c	;volatile
  3041  000106  6EDF               	movwf	indf2,c
  3042                           
  3043                           ;FRAME.c: 554:         message->data[7] = NeightAdress4 & 0b11111111;
  3044  000108  EE20 F00F          	lfsr	2,15
  3045  00010C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3046  00010E  26D9               	addwf	fsr2l,f,c
  3047  000110  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3048  000112  22DA               	addwfc	fsr2h,f,c
  3049  000114  C03F  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3050                           
  3051                           ;FRAME.c: 555:         }
  3052  000118  0012               	return	
  3053  00011A                     l2911:
  3054                           
  3055                           ;FRAME.c: 557:         {;FRAME.c: 558:         message->data[0] = (NeightAdress5>> 8);
  3056  00011A  EE20 F008          	lfsr	2,8
  3057  00011E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3058  000120  26D9               	addwf	fsr2l,f,c
  3059  000122  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3060  000124  22DA               	addwfc	fsr2h,f,c
  3061  000126  503E               	movf	_NeightAdress5+1,w,c	;volatile
  3062  000128  6EDF               	movwf	indf2,c
  3063                           
  3064                           ;FRAME.c: 559:         message->data[1] = NeightAdress5 & 0b11111111;
  3065  00012A  EE20 F009          	lfsr	2,9
  3066  00012E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3067  000130  26D9               	addwf	fsr2l,f,c
  3068  000132  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3069  000134  22DA               	addwfc	fsr2h,f,c
  3070  000136  C03D  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3071                           
  3072                           ;FRAME.c: 560:         message->data[2] = (NeightAdress6>> 8);
  3073  00013A  EE20 F00A          	lfsr	2,10
  3074  00013E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3075  000140  26D9               	addwf	fsr2l,f,c
  3076  000142  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3077  000144  22DA               	addwfc	fsr2h,f,c
  3078  000146  503C               	movf	_NeightAdress6+1,w,c	;volatile
  3079  000148  6EDF               	movwf	indf2,c
  3080                           
  3081                           ;FRAME.c: 561:         message->data[3] = NeightAdress6 & 0b11111111;
  3082  00014A  EE20 F00B          	lfsr	2,11
  3083  00014E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3084  000150  26D9               	addwf	fsr2l,f,c
  3085  000152  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3086  000154  22DA               	addwfc	fsr2h,f,c
  3087  000156  C03B  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3088                           
  3089                           ;FRAME.c: 562:         message->data[4] = (NeightAdress7>> 8);
  3090  00015A  EE20 F00C          	lfsr	2,12
  3091  00015E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3092  000160  26D9               	addwf	fsr2l,f,c
  3093  000162  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3094  000164  22DA               	addwfc	fsr2h,f,c
  3095  000166  503A               	movf	_NeightAdress7+1,w,c	;volatile
  3096  000168  6EDF               	movwf	indf2,c
  3097                           
  3098                           ;FRAME.c: 563:         message->data[5] = NeightAdress7 & 0b11111111;
  3099  00016A  EE20 F00D          	lfsr	2,13
  3100  00016E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3101  000170  26D9               	addwf	fsr2l,f,c
  3102  000172  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3103  000174  22DA               	addwfc	fsr2h,f,c
  3104  000176  C039  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3105                           
  3106                           ;FRAME.c: 564:         message->data[6] = (NeightAdress8>> 8);
  3107  00017A  EE20 F00E          	lfsr	2,14
  3108  00017E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3109  000180  26D9               	addwf	fsr2l,f,c
  3110  000182  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3111  000184  22DA               	addwfc	fsr2h,f,c
  3112  000186  5038               	movf	_NeightAdress8+1,w,c	;volatile
  3113  000188  6EDF               	movwf	indf2,c
  3114                           
  3115                           ;FRAME.c: 565:         message->data[7] = NeightAdress8 & 0b11111111;
  3116  00018A  EE20 F00F          	lfsr	2,15
  3117  00018E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3118  000190  26D9               	addwf	fsr2l,f,c
  3119  000192  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3120  000194  22DA               	addwfc	fsr2h,f,c
  3121  000196  C037  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3122  00019A  0012               	return	
  3123  00019C                     l2913:
  3124                           
  3125                           ;FRAME.c: 572:     {;FRAME.c: 575:         if(kier == 0)
  3126  00019C  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3127  00019E  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3128  0001A0  A4D8               	btfss	status,2,c
  3129  0001A2  D071               	goto	l2925
  3130                           
  3131                           ;FRAME.c: 576:         {;FRAME.c: 577:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3132  0001A4  EE20 F008          	lfsr	2,8
  3133  0001A8  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3134  0001AA  26D9               	addwf	fsr2l,f,c
  3135  0001AC  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3136  0001AE  22DA               	addwfc	fsr2h,f,c
  3137  0001B0  50DF               	movf	indf2,w,c
  3138  0001B2  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3139  0001B4  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3140  0001B6  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3141  0001B8  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3142  0001BA  EE20 F009          	lfsr	2,9
  3143  0001BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3144  0001C0  26D9               	addwf	fsr2l,f,c
  3145  0001C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3146  0001C4  22DA               	addwfc	fsr2h,f,c
  3147  0001C6  50DF               	movf	indf2,w,c
  3148  0001C8  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3149  0001CA  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3150  0001CC  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3151  0001CE  6E45               	movwf	_NeightAdress1,c	;volatile
  3152  0001D0  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3153  0001D2  6E46               	movwf	_NeightAdress1+1,c	;volatile
  3154                           
  3155                           ;FRAME.c: 578:          Dane->sasiedzi[0].adres = (WORD) NeightAdress1;
  3156  0001D4  C045  F00E         	movff	_NeightAdress1,14	;volatile
  3157  0001D8  C046  F00F         	movff	_NeightAdress1+1,15	;volatile
  3158                           
  3159                           ;FRAME.c: 579:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3160  0001DC  EE20 F00A          	lfsr	2,10
  3161  0001E0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3162  0001E2  26D9               	addwf	fsr2l,f,c
  3163  0001E4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3164  0001E6  22DA               	addwfc	fsr2h,f,c
  3165  0001E8  50DF               	movf	indf2,w,c
  3166  0001EA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3167  0001EC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3168  0001EE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3169  0001F0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3170  0001F2  EE20 F00B          	lfsr	2,11
  3171  0001F6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3172  0001F8  26D9               	addwf	fsr2l,f,c
  3173  0001FA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3174  0001FC  22DA               	addwfc	fsr2h,f,c
  3175  0001FE  50DF               	movf	indf2,w,c
  3176  000200  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3177  000202  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3178  000204  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3179  000206  6E43               	movwf	_NeightAdress2,c	;volatile
  3180  000208  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3181  00020A  6E44               	movwf	_NeightAdress2+1,c	;volatile
  3182                           
  3183                           ;FRAME.c: 580:          Dane->sasiedzi[1].adres = (WORD) NeightAdress2;
  3184  00020C  C043  F012         	movff	_NeightAdress2,18	;volatile
  3185  000210  C044  F013         	movff	_NeightAdress2+1,19	;volatile
  3186                           
  3187                           ;FRAME.c: 581:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3188  000214  EE20 F00C          	lfsr	2,12
  3189  000218  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3190  00021A  26D9               	addwf	fsr2l,f,c
  3191  00021C  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3192  00021E  22DA               	addwfc	fsr2h,f,c
  3193  000220  50DF               	movf	indf2,w,c
  3194  000222  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3195  000224  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3196  000226  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3197  000228  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3198  00022A  EE20 F00D          	lfsr	2,13
  3199  00022E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3200  000230  26D9               	addwf	fsr2l,f,c
  3201  000232  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3202  000234  22DA               	addwfc	fsr2h,f,c
  3203  000236  50DF               	movf	indf2,w,c
  3204  000238  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3205  00023A  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3206  00023C  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3207  00023E  6E41               	movwf	_NeightAdress3,c	;volatile
  3208  000240  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3209  000242  6E42               	movwf	_NeightAdress3+1,c	;volatile
  3210                           
  3211                           ;FRAME.c: 582:          Dane->sasiedzi[2].adres = (WORD) NeightAdress3;
  3212  000244  C041  F016         	movff	_NeightAdress3,22	;volatile
  3213  000248  C042  F017         	movff	_NeightAdress3+1,23	;volatile
  3214                           
  3215                           ;FRAME.c: 583:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3216  00024C  EE20 F00E          	lfsr	2,14
  3217  000250  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3218  000252  26D9               	addwf	fsr2l,f,c
  3219  000254  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3220  000256  22DA               	addwfc	fsr2h,f,c
  3221  000258  50DF               	movf	indf2,w,c
  3222  00025A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3223  00025C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3224  00025E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3225  000260  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3226  000262  EE20 F00F          	lfsr	2,15
  3227  000266  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3228  000268  26D9               	addwf	fsr2l,f,c
  3229  00026A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3230  00026C  22DA               	addwfc	fsr2h,f,c
  3231  00026E  50DF               	movf	indf2,w,c
  3232  000270  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3233  000272  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3234  000274  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3235  000276  6E3F               	movwf	_NeightAdress4,c	;volatile
  3236  000278  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3237  00027A  6E40               	movwf	_NeightAdress4+1,c	;volatile
  3238                           
  3239                           ;FRAME.c: 584:          Dane->sasiedzi[3].adres = (WORD) NeightAdress4;
  3240  00027C  C03F  F01A         	movff	_NeightAdress4,26	;volatile
  3241  000280  C040  F01B         	movff	_NeightAdress4+1,27	;volatile
  3242                           
  3243                           ;FRAME.c: 587:         }
  3244  000284  0012               	return	
  3245  000286                     l2925:
  3246                           
  3247                           ;FRAME.c: 589:         {;FRAME.c: 590:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3248  000286  EE20 F008          	lfsr	2,8
  3249  00028A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3250  00028C  26D9               	addwf	fsr2l,f,c
  3251  00028E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3252  000290  22DA               	addwfc	fsr2h,f,c
  3253  000292  50DF               	movf	indf2,w,c
  3254  000294  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3255  000296  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3256  000298  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3257  00029A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3258  00029C  EE20 F009          	lfsr	2,9
  3259  0002A0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3260  0002A2  26D9               	addwf	fsr2l,f,c
  3261  0002A4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3262  0002A6  22DA               	addwfc	fsr2h,f,c
  3263  0002A8  50DF               	movf	indf2,w,c
  3264  0002AA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3265  0002AC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3266  0002AE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3267  0002B0  6E3D               	movwf	_NeightAdress5,c	;volatile
  3268  0002B2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3269  0002B4  6E3E               	movwf	_NeightAdress5+1,c	;volatile
  3270                           
  3271                           ;FRAME.c: 591:          Dane->sasiedzi[4].adres = (WORD) NeightAdress5;
  3272  0002B6  C03D  F01E         	movff	_NeightAdress5,30	;volatile
  3273  0002BA  C03E  F01F         	movff	_NeightAdress5+1,31	;volatile
  3274                           
  3275                           ;FRAME.c: 592:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3276  0002BE  EE20 F00A          	lfsr	2,10
  3277  0002C2  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3278  0002C4  26D9               	addwf	fsr2l,f,c
  3279  0002C6  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3280  0002C8  22DA               	addwfc	fsr2h,f,c
  3281  0002CA  50DF               	movf	indf2,w,c
  3282  0002CC  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3283  0002CE  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3284  0002D0  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3285  0002D2  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3286  0002D4  EE20 F00B          	lfsr	2,11
  3287  0002D8  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3288  0002DA  26D9               	addwf	fsr2l,f,c
  3289  0002DC  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3290  0002DE  22DA               	addwfc	fsr2h,f,c
  3291  0002E0  50DF               	movf	indf2,w,c
  3292  0002E2  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3293  0002E4  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3294  0002E6  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3295  0002E8  6E3B               	movwf	_NeightAdress6,c	;volatile
  3296  0002EA  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3297  0002EC  6E3C               	movwf	_NeightAdress6+1,c	;volatile
  3298                           
  3299                           ;FRAME.c: 593:          Dane->sasiedzi[5].adres = (WORD) NeightAdress6;
  3300  0002EE  C03B  F022         	movff	_NeightAdress6,34	;volatile
  3301  0002F2  C03C  F023         	movff	_NeightAdress6+1,35	;volatile
  3302                           
  3303                           ;FRAME.c: 594:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3304  0002F6  EE20 F00C          	lfsr	2,12
  3305  0002FA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3306  0002FC  26D9               	addwf	fsr2l,f,c
  3307  0002FE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3308  000300  22DA               	addwfc	fsr2h,f,c
  3309  000302  50DF               	movf	indf2,w,c
  3310  000304  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3311  000306  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3312  000308  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3313  00030A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3314  00030C  EE20 F00D          	lfsr	2,13
  3315  000310  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3316  000312  26D9               	addwf	fsr2l,f,c
  3317  000314  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3318  000316  22DA               	addwfc	fsr2h,f,c
  3319  000318  50DF               	movf	indf2,w,c
  3320  00031A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3321  00031C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3322  00031E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3323  000320  6E39               	movwf	_NeightAdress7,c	;volatile
  3324  000322  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3325  000324  6E3A               	movwf	_NeightAdress7+1,c	;volatile
  3326                           
  3327                           ;FRAME.c: 595:          Dane->sasiedzi[6].adres = (WORD) NeightAdress7;
  3328  000326  C039  F026         	movff	_NeightAdress7,38	;volatile
  3329  00032A  C03A  F027         	movff	_NeightAdress7+1,39	;volatile
  3330                           
  3331                           ;FRAME.c: 596:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3332  00032E  EE20 F00E          	lfsr	2,14
  3333  000332  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3334  000334  26D9               	addwf	fsr2l,f,c
  3335  000336  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3336  000338  22DA               	addwfc	fsr2h,f,c
  3337  00033A  50DF               	movf	indf2,w,c
  3338  00033C  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3339  00033E  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3340  000340  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3341  000342  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3342  000344  EE20 F00F          	lfsr	2,15
  3343  000348  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3344  00034A  26D9               	addwf	fsr2l,f,c
  3345  00034C  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3346  00034E  22DA               	addwfc	fsr2h,f,c
  3347  000350  50DF               	movf	indf2,w,c
  3348  000352  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3349  000354  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3350  000356  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3351  000358  6E37               	movwf	_NeightAdress8,c	;volatile
  3352  00035A  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3353  00035C  6E38               	movwf	_NeightAdress8+1,c	;volatile
  3354                           
  3355                           ;FRAME.c: 597:          Dane->sasiedzi[7].adres = (WORD) NeightAdress8;
  3356  00035E  C037  F02A         	movff	_NeightAdress8,42	;volatile
  3357  000362  C038  F02B         	movff	_NeightAdress8+1,43	;volatile
  3358  000366  0012               	return		;funcret
  3359  000368                     __end_of_FRAME_AdressOfNeighbors:
  3360                           	opt callstack 0
  3361                           
  3362 ;; *************** function _FRAME_AccelerometerStatus *****************
  3363 ;; Defined at:
  3364 ;;		line 170 in file "FRAME.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  message         2    7[COMRAM] PTR struct .
  3367 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;Total ram usage:        3 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    4
  3386 ;; This function calls:
  3387 ;;		_MOCK_Klikniecie_Spadek
  3388 ;;		_MOCK_PrzyspieszenieX
  3389 ;;		_MOCK_PrzyspieszenieY
  3390 ;;		_MOCK_PrzyspieszenieZ
  3391 ;; This function is called by:
  3392 ;;		_FRAME_HandleCanFrame
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text25
  3397  0010E4                     __ptext25:
  3398                           	opt callstack 0
  3399  0010E4                     _FRAME_AccelerometerStatus:
  3400                           	opt callstack 24
  3401                           
  3402                           ;FRAME.c: 170: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 171: {;FRAME
      +                          .c: 172:     if(message->message_type == 0x02)
  3403                           
  3404                           ;incstack = 0
  3405  0010E4  EE20 F001          	lfsr	2,1
  3406  0010E8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3407  0010EA  26D9               	addwf	fsr2l,f,c
  3408  0010EC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3409  0010EE  22DA               	addwfc	fsr2h,f,c
  3410  0010F0  0E02               	movlw	2
  3411  0010F2  18DE               	xorwf	postinc2,w,c
  3412  0010F4  A4D8               	btfss	status,2,c
  3413  0010F6  0012               	return	
  3414                           
  3415                           ;FRAME.c: 173:     {;FRAME.c: 174:         message->data_length = 4;
  3416  0010F8  EE20 F010          	lfsr	2,16
  3417  0010FC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3418  0010FE  26D9               	addwf	fsr2l,f,c
  3419  001100  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3420  001102  22DA               	addwfc	fsr2h,f,c
  3421  001104  0E04               	movlw	4
  3422  001106  6EDF               	movwf	indf2,c
  3423                           
  3424                           ;FRAME.c: 178:         message->data[0] = MOCK_PrzyspieszenieX();
  3425  001108  EE20 F008          	lfsr	2,8
  3426  00110C  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3427  00110E  26D9               	addwf	fsr2l,f,c
  3428  001110  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3429  001112  22DA               	addwfc	fsr2h,f,c
  3430  001114  EC75  F00B         	call	_MOCK_PrzyspieszenieX	;wreg free
  3431  001118  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3432  00111A  6EDF               	movwf	indf2,c
  3433                           
  3434                           ;FRAME.c: 179:         message->data[1] = MOCK_PrzyspieszenieY();
  3435  00111C  EE20 F009          	lfsr	2,9
  3436  001120  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3437  001122  26D9               	addwf	fsr2l,f,c
  3438  001124  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3439  001126  22DA               	addwfc	fsr2h,f,c
  3440  001128  EC70  F00B         	call	_MOCK_PrzyspieszenieY	;wreg free
  3441  00112C  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3442  00112E  6EDF               	movwf	indf2,c
  3443                           
  3444                           ;FRAME.c: 180:         message->data[2] = MOCK_PrzyspieszenieZ();
  3445  001130  EE20 F00A          	lfsr	2,10
  3446  001134  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3447  001136  26D9               	addwf	fsr2l,f,c
  3448  001138  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3449  00113A  22DA               	addwfc	fsr2h,f,c
  3450  00113C  EC6B  F00B         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3451  001140  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3452  001142  6EDF               	movwf	indf2,c
  3453                           
  3454                           ;FRAME.c: 181:         message->data[3] = MOCK_Klikniecie_Spadek();
  3455  001144  EE20 F00B          	lfsr	2,11
  3456  001148  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3457  00114A  26D9               	addwf	fsr2l,f,c
  3458  00114C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3459  00114E  22DA               	addwfc	fsr2h,f,c
  3460  001150  EC7A  F00B         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3461  001154  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3462  001156  6EDF               	movwf	indf2,c
  3463                           
  3464                           ;FRAME.c: 182:     }
  3465  001158  0012               	return		;funcret
  3466  00115A                     __end_of_FRAME_AccelerometerStatus:
  3467                           	opt callstack 0
  3468                           
  3469 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3470 ;; Defined at:
  3471 ;;		line 72 in file "MOC_Funct.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  2    5[COMRAM] unsigned int 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3489 ;;Total ram usage:        2 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    3
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_FRAME_AccelerometerStatus
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text26
  3500  0016D6                     __ptext26:
  3501                           	opt callstack 0
  3502  0016D6                     _MOCK_PrzyspieszenieZ:
  3503                           	opt callstack 24
  3504                           
  3505                           ;MOC_Funct.c: 74:     return 0xFE;
  3506                           
  3507                           ;incstack = 0
  3508  0016D6  0E00               	movlw	0
  3509  0016D8  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3510  0016DA  0EFE               	movlw	254
  3511  0016DC  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3512  0016DE  0012               	return		;funcret
  3513  0016E0                     __end_of_MOCK_PrzyspieszenieZ:
  3514                           	opt callstack 0
  3515                           
  3516 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3517 ;; Defined at:
  3518 ;;		line 68 in file "MOC_Funct.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  2    5[COMRAM] unsigned int 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;Total ram usage:        2 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    3
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_FRAME_AccelerometerStatus
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text27
  3547  0016E0                     __ptext27:
  3548                           	opt callstack 0
  3549  0016E0                     _MOCK_PrzyspieszenieY:
  3550                           	opt callstack 24
  3551                           
  3552                           ;MOC_Funct.c: 70:     return 0xFE;
  3553                           
  3554                           ;incstack = 0
  3555  0016E0  0E00               	movlw	0
  3556  0016E2  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3557  0016E4  0EFE               	movlw	254
  3558  0016E6  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3559  0016E8  0012               	return		;funcret
  3560  0016EA                     __end_of_MOCK_PrzyspieszenieY:
  3561                           	opt callstack 0
  3562                           
  3563 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3564 ;; Defined at:
  3565 ;;		line 63 in file "MOC_Funct.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  2    5[COMRAM] unsigned int 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;Total ram usage:        2 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    3
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_FRAME_AccelerometerStatus
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text28
  3594  0016EA                     __ptext28:
  3595                           	opt callstack 0
  3596  0016EA                     _MOCK_PrzyspieszenieX:
  3597                           	opt callstack 24
  3598                           
  3599                           ;MOC_Funct.c: 65:     return 0xFE;
  3600                           
  3601                           ;incstack = 0
  3602  0016EA  0E00               	movlw	0
  3603  0016EC  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3604  0016EE  0EFE               	movlw	254
  3605  0016F0  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  3606  0016F2  0012               	return		;funcret
  3607  0016F4                     __end_of_MOCK_PrzyspieszenieX:
  3608                           	opt callstack 0
  3609                           
  3610 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3611 ;; Defined at:
  3612 ;;		line 76 in file "MOC_Funct.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2    5[COMRAM] unsigned int 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;Total ram usage:        2 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    3
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_FRAME_AccelerometerStatus
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text29
  3641  0016F4                     __ptext29:
  3642                           	opt callstack 0
  3643  0016F4                     _MOCK_Klikniecie_Spadek:
  3644                           	opt callstack 24
  3645                           
  3646                           ;MOC_Funct.c: 78:     return 0b00000000;
  3647                           
  3648                           ;incstack = 0
  3649  0016F4  0E00               	movlw	0
  3650  0016F6  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3651  0016F8  0E00               	movlw	0
  3652  0016FA  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  3653  0016FC  0012               	return		;funcret
  3654  0016FE                     __end_of_MOCK_Klikniecie_Spadek:
  3655                           	opt callstack 0
  3656                           
  3657 ;; *************** function _CAN_SendFrame *****************
  3658 ;; Defined at:
  3659 ;;		line 196 in file "CAN.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  message         2   10[COMRAM] PTR struct .
  3662 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;Total ram usage:        5 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    4
  3681 ;; This function calls:
  3682 ;;		_CAN_MoveBuffIntoFrame
  3683 ;; This function is called by:
  3684 ;;		_FRAME_HandleCanFrame
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text30
  3689  0007EA                     __ptext30:
  3690                           	opt callstack 0
  3691  0007EA                     _CAN_SendFrame:
  3692                           	opt callstack 24
  3693                           
  3694                           ;CAN.c: 201:     {;CAN.c: 202:         ECANCON = 0x83;
  3695                           
  3696                           ;incstack = 0
  3697                           ;CAN.c: 196: void CAN_SendFrame(mID * message);CAN.c: 197: {;CAN.c: 200:     for(;;)
  3698  0007EA  0E83               	movlw	131
  3699  0007EC  6E77               	movwf	3959,c	;volatile
  3700                           
  3701                           ;CAN.c: 203:         if(!RXB0CONbits.FILHIT3)
  3702  0007EE  A660               	btfss	3936,3,c	;volatile
  3703  0007F0  D00A               	goto	l189
  3704                           
  3705                           ;CAN.c: 208:         ECANCON = 0x84;
  3706  0007F2  0E84               	movlw	132
  3707  0007F4  6E77               	movwf	3959,c	;volatile
  3708                           
  3709                           ;CAN.c: 209:         if(!RXB0CONbits.FILHIT3)
  3710  0007F6  A660               	btfss	3936,3,c	;volatile
  3711  0007F8  D006               	goto	l189
  3712                           
  3713                           ;CAN.c: 214:         ECANCON = 0x85;
  3714  0007FA  0E85               	movlw	133
  3715  0007FC  6E77               	movwf	3959,c	;volatile
  3716                           
  3717                           ;CAN.c: 215:         if(!RXB0CONbits.FILHIT3)
  3718  0007FE  A660               	btfss	3936,3,c	;volatile
  3719  000800  D002               	goto	l189
  3720  000802  D7F3               	goto	_CAN_SendFrame
  3721  000804                     l190:
  3722  000804  00FF               	reset		;# 
  3723  000806                     l189:
  3724                           
  3725                           ;CAN.c: 222:     while(COMSTATbits.TXWARN)
  3726  000806  B474               	btfsc	3956,2,c	;volatile
  3727  000808  D7FD               	goto	l190
  3728                           
  3729                           ;CAN.c: 226:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3730  00080A  0E00               	movlw	0
  3731  00080C  6E36               	movwf	_DetectorLedRadar+2,c
  3732                           
  3733                           ;CAN.c: 227:     RXB0EIDL = message->id.v[0];
  3734  00080E  EE20 F004          	lfsr	2,4
  3735  000812  500B               	movf	CAN_SendFrame@message,w,c
  3736  000814  26D9               	addwf	fsr2l,f,c
  3737  000816  500C               	movf	CAN_SendFrame@message+1,w,c
  3738  000818  22DA               	addwfc	fsr2h,f,c
  3739  00081A  50DF               	movf	indf2,w,c
  3740  00081C  6E64               	movwf	3940,c	;volatile
  3741                           
  3742                           ;CAN.c: 228:     RXB0EIDH = message->id.v[1];
  3743  00081E  EE20 F005          	lfsr	2,5
  3744  000822  500B               	movf	CAN_SendFrame@message,w,c
  3745  000824  26D9               	addwf	fsr2l,f,c
  3746  000826  500C               	movf	CAN_SendFrame@message+1,w,c
  3747  000828  22DA               	addwfc	fsr2h,f,c
  3748  00082A  50DF               	movf	indf2,w,c
  3749  00082C  6E63               	movwf	3939,c	;volatile
  3750                           
  3751                           ;CAN.c: 229:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3752  00082E  EE20 F006          	lfsr	2,6
  3753  000832  500B               	movf	CAN_SendFrame@message,w,c
  3754  000834  26D9               	addwf	fsr2l,f,c
  3755  000836  500C               	movf	CAN_SendFrame@message+1,w,c
  3756  000838  22DA               	addwfc	fsr2h,f,c
  3757  00083A  50DF               	movf	indf2,w,c
  3758  00083C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3759  00083E  0E03               	movlw	3
  3760  000840  160D               	andwf	??_CAN_SendFrame,f,c
  3761  000842  EE20 F006          	lfsr	2,6
  3762  000846  500B               	movf	CAN_SendFrame@message,w,c
  3763  000848  26D9               	addwf	fsr2l,f,c
  3764  00084A  500C               	movf	CAN_SendFrame@message+1,w,c
  3765  00084C  22DA               	addwfc	fsr2h,f,c
  3766  00084E  50DF               	movf	indf2,w,c
  3767  000850  0BFC               	andlw	252
  3768  000852  0D08               	mullw	8
  3769  000854  50F3               	movf	prodl,w,c
  3770  000856  100D               	iorwf	??_CAN_SendFrame,w,c
  3771  000858  6E62               	movwf	3938,c	;volatile
  3772                           
  3773                           ;CAN.c: 230:     RXB0SIDLbits.EXID = 1;
  3774  00085A  8662               	bsf	3938,3,c	;volatile
  3775                           
  3776                           ;CAN.c: 231:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3777  00085C  EE20 F006          	lfsr	2,6
  3778  000860  500B               	movf	CAN_SendFrame@message,w,c
  3779  000862  26D9               	addwf	fsr2l,f,c
  3780  000864  500C               	movf	CAN_SendFrame@message+1,w,c
  3781  000866  22DA               	addwfc	fsr2h,f,c
  3782  000868  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  3783  00086C  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  3784  000870  0E05               	movlw	5
  3785  000872  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3786  000874                     u1315:
  3787  000874  90D8               	bcf	status,0,c
  3788  000876  320E               	rrcf	??_CAN_SendFrame+1,f,c
  3789  000878  320D               	rrcf	??_CAN_SendFrame,f,c
  3790  00087A  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3791  00087C  D7FB               	goto	u1315
  3792  00087E  500D               	movf	??_CAN_SendFrame,w,c
  3793  000880  6E61               	movwf	3937,c	;volatile
  3794                           
  3795                           ;CAN.c: 233:     RXB0DLC = 0;
  3796  000882  0E00               	movlw	0
  3797  000884  6E65               	movwf	3941,c	;volatile
  3798                           
  3799                           ;CAN.c: 235:     if(message->message_type==0x02)
  3800  000886  EE20 F001          	lfsr	2,1
  3801  00088A  500B               	movf	CAN_SendFrame@message,w,c
  3802  00088C  26D9               	addwf	fsr2l,f,c
  3803  00088E  500C               	movf	CAN_SendFrame@message+1,w,c
  3804  000890  22DA               	addwfc	fsr2h,f,c
  3805  000892  0E02               	movlw	2
  3806  000894  18DE               	xorwf	postinc2,w,c
  3807  000896  A4D8               	btfss	status,2,c
  3808  000898  D002               	goto	l2731
  3809                           
  3810                           ;CAN.c: 236:     {;CAN.c: 237:         RXB0DLCbits.RXRTR = 1;
  3811  00089A  8C65               	bsf	3941,6,c	;volatile
  3812                           
  3813                           ;CAN.c: 238:     }
  3814  00089C  D05A               	goto	l2735
  3815  00089E                     l2731:
  3816                           
  3817                           ;CAN.c: 240:     {;CAN.c: 241:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  3818  00089E  EE20 F010          	lfsr	2,16
  3819  0008A2  500B               	movf	CAN_SendFrame@message,w,c
  3820  0008A4  26D9               	addwf	fsr2l,f,c
  3821  0008A6  500C               	movf	CAN_SendFrame@message+1,w,c
  3822  0008A8  22DA               	addwfc	fsr2h,f,c
  3823  0008AA  50DF               	movf	indf2,w,c
  3824  0008AC  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3825  0008AE  0E0F               	movlw	15
  3826  0008B0  160D               	andwf	??_CAN_SendFrame,f,c
  3827  0008B2  5065               	movf	3941,w,c	;volatile
  3828  0008B4  180D               	xorwf	??_CAN_SendFrame,w,c
  3829  0008B6  0BFE               	andlw	-2
  3830  0008B8  180D               	xorwf	??_CAN_SendFrame,w,c
  3831  0008BA  6E65               	movwf	3941,c	;volatile
  3832                           
  3833                           ;CAN.c: 242:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  3834  0008BC  EE20 F010          	lfsr	2,16
  3835  0008C0  500B               	movf	CAN_SendFrame@message,w,c
  3836  0008C2  26D9               	addwf	fsr2l,f,c
  3837  0008C4  500C               	movf	CAN_SendFrame@message+1,w,c
  3838  0008C6  22DA               	addwfc	fsr2h,f,c
  3839  0008C8  50DF               	movf	indf2,w,c
  3840  0008CA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3841  0008CC  90D8               	bcf	status,0,c
  3842  0008CE  320D               	rrcf	??_CAN_SendFrame,f,c
  3843  0008D0  0E07               	movlw	7
  3844  0008D2  160D               	andwf	??_CAN_SendFrame,f,c
  3845  0008D4  460D               	rlncf	??_CAN_SendFrame,f,c
  3846  0008D6  5065               	movf	3941,w,c	;volatile
  3847  0008D8  180D               	xorwf	??_CAN_SendFrame,w,c
  3848  0008DA  0BFD               	andlw	-3
  3849  0008DC  180D               	xorwf	??_CAN_SendFrame,w,c
  3850  0008DE  6E65               	movwf	3941,c	;volatile
  3851                           
  3852                           ;CAN.c: 243:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  3853  0008E0  EE20 F010          	lfsr	2,16
  3854  0008E4  500B               	movf	CAN_SendFrame@message,w,c
  3855  0008E6  26D9               	addwf	fsr2l,f,c
  3856  0008E8  500C               	movf	CAN_SendFrame@message+1,w,c
  3857  0008EA  22DA               	addwfc	fsr2h,f,c
  3858  0008EC  50DF               	movf	indf2,w,c
  3859  0008EE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3860  0008F0  90D8               	bcf	status,0,c
  3861  0008F2  320D               	rrcf	??_CAN_SendFrame,f,c
  3862  0008F4  90D8               	bcf	status,0,c
  3863  0008F6  320D               	rrcf	??_CAN_SendFrame,f,c
  3864  0008F8  0E03               	movlw	3
  3865  0008FA  160D               	andwf	??_CAN_SendFrame,f,c
  3866  0008FC  460D               	rlncf	??_CAN_SendFrame,f,c
  3867  0008FE  460D               	rlncf	??_CAN_SendFrame,f,c
  3868  000900  5065               	movf	3941,w,c	;volatile
  3869  000902  180D               	xorwf	??_CAN_SendFrame,w,c
  3870  000904  0BFB               	andlw	-5
  3871  000906  180D               	xorwf	??_CAN_SendFrame,w,c
  3872  000908  6E65               	movwf	3941,c	;volatile
  3873                           
  3874                           ;CAN.c: 244:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  3875  00090A  EE20 F010          	lfsr	2,16
  3876  00090E  500B               	movf	CAN_SendFrame@message,w,c
  3877  000910  26D9               	addwf	fsr2l,f,c
  3878  000912  500C               	movf	CAN_SendFrame@message+1,w,c
  3879  000914  22DA               	addwfc	fsr2h,f,c
  3880  000916  50DF               	movf	indf2,w,c
  3881  000918  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3882  00091A  90D8               	bcf	status,0,c
  3883  00091C  320D               	rrcf	??_CAN_SendFrame,f,c
  3884  00091E  90D8               	bcf	status,0,c
  3885  000920  320D               	rrcf	??_CAN_SendFrame,f,c
  3886  000922  90D8               	bcf	status,0,c
  3887  000924  320D               	rrcf	??_CAN_SendFrame,f,c
  3888  000926  0E01               	movlw	1
  3889  000928  160D               	andwf	??_CAN_SendFrame,f,c
  3890  00092A  460D               	rlncf	??_CAN_SendFrame,f,c
  3891  00092C  460D               	rlncf	??_CAN_SendFrame,f,c
  3892  00092E  460D               	rlncf	??_CAN_SendFrame,f,c
  3893  000930  5065               	movf	3941,w,c	;volatile
  3894  000932  180D               	xorwf	??_CAN_SendFrame,w,c
  3895  000934  0BF7               	andlw	-9
  3896  000936  180D               	xorwf	??_CAN_SendFrame,w,c
  3897  000938  6E65               	movwf	3941,c	;volatile
  3898                           
  3899                           ;CAN.c: 246:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  3900  00093A  0E66               	movlw	102
  3901  00093C  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3902  00093E  0E0F               	movlw	15
  3903  000940  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3904  000942  0E08               	movlw	8
  3905  000944  240B               	addwf	CAN_SendFrame@message,w,c
  3906  000946  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3907  000948  0E00               	movlw	0
  3908  00094A  200C               	addwfc	CAN_SendFrame@message+1,w,c
  3909  00094C  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3910  00094E  ECD2  F00A         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3911  000952                     l2735:
  3912                           
  3913                           ;CAN.c: 249:     RXB0CONbits.FILHIT3 = 1;
  3914  000952  8660               	bsf	3936,3,c	;volatile
  3915                           
  3916                           ;CAN.c: 251:     DetectorLedRadar.Flags.ramkaTx = 1;
  3917  000954  8834               	bsf	_DetectorLedRadar,4,c
  3918  000956  0012               	return		;funcret
  3919  000958                     __end_of_CAN_SendFrame:
  3920                           	opt callstack 0
  3921                           
  3922 ;; *************** function _CAN_GenID *****************
  3923 ;; Defined at:
  3924 ;;		line 395 in file "CAN.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  message         2    5[COMRAM] PTR struct .
  3927 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3928 ;;  frameID         1    7[COMRAM] unsigned char 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3940 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;Total ram usage:        7 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    3
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_FRAME_HandleCanFrame
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text31
  3955  000E4E                     __ptext31:
  3956                           	opt callstack 0
  3957  000E4E                     _CAN_GenID:
  3958                           	opt callstack 25
  3959                           
  3960                           ;CAN.c: 395: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 396: {;CAN.c: 398:     m
      +                          essage->frame_type = 0x03;
  3961                           
  3962                           ;incstack = 0
  3963  000E4E  EE20 F002          	lfsr	2,2
  3964  000E52  5006               	movf	CAN_GenID@message,w,c
  3965  000E54  26D9               	addwf	fsr2l,f,c
  3966  000E56  5007               	movf	CAN_GenID@message+1,w,c
  3967  000E58  22DA               	addwfc	fsr2h,f,c
  3968  000E5A  0E03               	movlw	3
  3969  000E5C  6EDF               	movwf	indf2,c
  3970                           
  3971                           ;CAN.c: 399:     message->message_type = 0x01;
  3972  000E5E  EE20 F001          	lfsr	2,1
  3973  000E62  5006               	movf	CAN_GenID@message,w,c
  3974  000E64  26D9               	addwf	fsr2l,f,c
  3975  000E66  5007               	movf	CAN_GenID@message+1,w,c
  3976  000E68  22DA               	addwfc	fsr2h,f,c
  3977  000E6A  0E01               	movlw	1
  3978  000E6C  6EDF               	movwf	indf2,c
  3979                           
  3980                           ;CAN.c: 400:     message->id.w[1] = (WORD)frameID * (WORD)4;
  3981  000E6E  5008               	movf	CAN_GenID@frameID,w,c
  3982  000E70  6E09               	movwf	??_CAN_GenID& (0+255),c
  3983  000E72  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  3984  000E74  90D8               	bcf	status,0,c
  3985  000E76  3609               	rlcf	??_CAN_GenID,f,c
  3986  000E78  360A               	rlcf	??_CAN_GenID+1,f,c
  3987  000E7A  90D8               	bcf	status,0,c
  3988  000E7C  3609               	rlcf	??_CAN_GenID,f,c
  3989  000E7E  360A               	rlcf	??_CAN_GenID+1,f,c
  3990  000E80  EE20 F006          	lfsr	2,6
  3991  000E84  5006               	movf	CAN_GenID@message,w,c
  3992  000E86  26D9               	addwf	fsr2l,f,c
  3993  000E88  5007               	movf	CAN_GenID@message+1,w,c
  3994  000E8A  22DA               	addwfc	fsr2h,f,c
  3995  000E8C  C009  FFDE         	movff	??_CAN_GenID,postinc2
  3996  000E90  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  3997                           
  3998                           ;CAN.c: 401:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  3999  000E94  0E2C               	movlw	44
  4000  000E96  6E09               	movwf	??_CAN_GenID& (0+255),c
  4001  000E98  0E01               	movlw	1
  4002  000E9A  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  4003  000E9C  EE20  F032         	lfsr	2,_DaneCan+2
  4004  000EA0  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  4005  000EA4  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  4006  000EA8  5009               	movf	??_CAN_GenID,w,c
  4007  000EAA  260B               	addwf	??_CAN_GenID+2,f,c
  4008  000EAC  500A               	movf	??_CAN_GenID+1,w,c
  4009  000EAE  220C               	addwfc	??_CAN_GenID+3,f,c
  4010  000EB0  EE20 F004          	lfsr	2,4
  4011  000EB4  5006               	movf	CAN_GenID@message,w,c
  4012  000EB6  26D9               	addwf	fsr2l,f,c
  4013  000EB8  5007               	movf	CAN_GenID@message+1,w,c
  4014  000EBA  22DA               	addwfc	fsr2h,f,c
  4015  000EBC  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  4016  000EC0  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  4017                           
  4018                           ;CAN.c: 404:     message ->id.bits.b16 = 0;
  4019  000EC4  EE20 F006          	lfsr	2,6
  4020  000EC8  5006               	movf	CAN_GenID@message,w,c
  4021  000ECA  26D9               	addwf	fsr2l,f,c
  4022  000ECC  5007               	movf	CAN_GenID@message+1,w,c
  4023  000ECE  22DA               	addwfc	fsr2h,f,c
  4024  000ED0  90DF               	bcf	indf2,0,c
  4025                           
  4026                           ;CAN.c: 405:     message ->id.bits.b17 = 0;
  4027  000ED2  EE20 F006          	lfsr	2,6
  4028  000ED6  5006               	movf	CAN_GenID@message,w,c
  4029  000ED8  26D9               	addwf	fsr2l,f,c
  4030  000EDA  5007               	movf	CAN_GenID@message+1,w,c
  4031  000EDC  22DA               	addwfc	fsr2h,f,c
  4032  000EDE  92DF               	bcf	indf2,1,c
  4033  000EE0  0012               	return		;funcret
  4034  000EE2                     __end_of_CAN_GenID:
  4035                           	opt callstack 0
  4036                           
  4037 ;; *************** function _CAN_TakeFrame *****************
  4038 ;; Defined at:
  4039 ;;		line 260 in file "CAN.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  message         2   13[COMRAM] PTR struct .
  4042 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  k               1   18[COMRAM] unsigned char 
  4045 ;;  tempCON         1   17[COMRAM] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      enum E10433
  4048 ;; Registers used:
  4049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;Total ram usage:        6 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    4
  4062 ;; This function calls:
  4063 ;;		_CAN_MoveBuffIntoFrame
  4064 ;;		___awdiv
  4065 ;; This function is called by:
  4066 ;;		_TRM_DataTransmition
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text32
  4071  000368                     __ptext32:
  4072                           	opt callstack 0
  4073  000368                     _CAN_TakeFrame:
  4074                           	opt callstack 25
  4075                           
  4076                           ;CAN.c: 260: BOOL CAN_TakeFrame(mID * message);CAN.c: 261: {;CAN.c: 262:     BYTE k, tem
      +                          pCON;;CAN.c: 264:     k = CANCON&0x0F;
  4077                           
  4078                           ;incstack = 0
  4079  000368  506F               	movf	3951,w,c	;volatile
  4080  00036A  0B0F               	andlw	15
  4081  00036C  6E13               	movwf	CAN_TakeFrame@k,c
  4082                           
  4083                           ;CAN.c: 266:     ECANCON = 0x90 | k;
  4084  00036E  5013               	movf	CAN_TakeFrame@k,w,c
  4085  000370  0990               	iorlw	144
  4086  000372  6E77               	movwf	3959,c	;volatile
  4087                           
  4088                           ;CAN.c: 269:     switch(k)
  4089  000374  D018               	goto	l3001
  4090  000376                     l198:
  4091                           
  4092                           ;CAN.c: 272:             tempCON = RXB0CON;
  4093  000376  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4094                           
  4095                           ;CAN.c: 273:             break;
  4096  00037A  D035               	goto	l199
  4097  00037C                     l200:
  4098                           
  4099                           ;CAN.c: 275:             tempCON = RXB1CON;
  4100  00037C  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4101                           
  4102                           ;CAN.c: 276:             break;
  4103  000380  D032               	goto	l199
  4104  000382                     l201:
  4105                           
  4106                           ;CAN.c: 278:             tempCON = B0CON;
  4107  000382  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4108                           
  4109                           ;CAN.c: 279:             break;
  4110  000386  D02F               	goto	l199
  4111  000388                     l202:
  4112                           
  4113                           ;CAN.c: 281:             tempCON = B1CON;
  4114  000388  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4115                           
  4116                           ;CAN.c: 282:             break;
  4117  00038C  D02C               	goto	l199
  4118  00038E                     l203:
  4119                           
  4120                           ;CAN.c: 284:             tempCON = B2CON;
  4121  00038E  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4122                           
  4123                           ;CAN.c: 285:             break;
  4124  000392  D029               	goto	l199
  4125  000394                     l204:
  4126                           
  4127                           ;CAN.c: 287:             tempCON = B3CON;
  4128  000394  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4129                           
  4130                           ;CAN.c: 288:             break;
  4131  000398  D026               	goto	l199
  4132  00039A                     l205:
  4133                           
  4134                           ;CAN.c: 290:             tempCON = B4CON;
  4135  00039A  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4136                           
  4137                           ;CAN.c: 291:             break;
  4138  00039E  D023               	goto	l199
  4139  0003A0                     l206:
  4140                           
  4141                           ;CAN.c: 293:             tempCON = B5CON;
  4142  0003A0  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4143                           
  4144                           ;CAN.c: 294:             break;
  4145  0003A4  D020               	goto	l199
  4146  0003A6                     l3001:
  4147  0003A6  5013               	movf	CAN_TakeFrame@k,w,c
  4148  0003A8  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4149  0003AA  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4150                           
  4151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4152                           ; Switch size 1, requested type "simple"
  4153                           ; Number of cases is 1, Range of values is 0 to 0
  4154                           ; switch strategies available:
  4155                           ; Name         Instructions Cycles
  4156                           ; simple_byte            4     3 (average)
  4157                           ;	Chosen strategy is simple_byte
  4158  0003AC  5011               	movf	??_CAN_TakeFrame+1,w,c
  4159  0003AE  0A00               	xorlw	0	; case 0
  4160  0003B0  A4D8               	btfss	status,2,c
  4161  0003B2  D019               	goto	l199
  4162                           
  4163                           ; Switch size 1, requested type "simple"
  4164                           ; Number of cases is 8, Range of values is 0 to 7
  4165                           ; switch strategies available:
  4166                           ; Name         Instructions Cycles
  4167                           ; simple_byte           25    13 (average)
  4168                           ;	Chosen strategy is simple_byte
  4169  0003B4  5010               	movf	??_CAN_TakeFrame,w,c
  4170  0003B6  0A00               	xorlw	0	; case 0
  4171  0003B8  B4D8               	btfsc	status,2,c
  4172  0003BA  D7DD               	goto	l198
  4173  0003BC  0A01               	xorlw	1	; case 1
  4174  0003BE  B4D8               	btfsc	status,2,c
  4175  0003C0  D7DD               	goto	l200
  4176  0003C2  0A03               	xorlw	3	; case 2
  4177  0003C4  B4D8               	btfsc	status,2,c
  4178  0003C6  D7DD               	goto	l201
  4179  0003C8  0A01               	xorlw	1	; case 3
  4180  0003CA  B4D8               	btfsc	status,2,c
  4181  0003CC  D7DD               	goto	l202
  4182  0003CE  0A07               	xorlw	7	; case 4
  4183  0003D0  B4D8               	btfsc	status,2,c
  4184  0003D2  D7DD               	goto	l203
  4185  0003D4  0A01               	xorlw	1	; case 5
  4186  0003D6  B4D8               	btfsc	status,2,c
  4187  0003D8  D7DD               	goto	l204
  4188  0003DA  0A03               	xorlw	3	; case 6
  4189  0003DC  B4D8               	btfsc	status,2,c
  4190  0003DE  D7DD               	goto	l205
  4191  0003E0  0A01               	xorlw	1	; case 7
  4192  0003E2  B4D8               	btfsc	status,2,c
  4193  0003E4  D7DD               	goto	l206
  4194  0003E6                     l199:
  4195                           
  4196                           ;CAN.c: 298:     if((tempCON & 0x80) > 0)
  4197  0003E6  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4198  0003E8  D0A5               	goto	l3037
  4199                           
  4200                           ;CAN.c: 299:     {;CAN.c: 300:         message->buffer = RXB0CON & 0x1F;
  4201  0003EA  EE20 F003          	lfsr	2,3
  4202  0003EE  500E               	movf	CAN_TakeFrame@message,w,c
  4203  0003F0  26D9               	addwf	fsr2l,f,c
  4204  0003F2  500F               	movf	CAN_TakeFrame@message+1,w,c
  4205  0003F4  22DA               	addwfc	fsr2h,f,c
  4206  0003F6  5060               	movf	3936,w,c	;volatile
  4207  0003F8  0B1F               	andlw	31
  4208  0003FA  6EDF               	movwf	indf2,c
  4209                           
  4210                           ;CAN.c: 301:         message->id.v[0] = RXB0EIDL;
  4211  0003FC  EE20 F004          	lfsr	2,4
  4212  000400  500E               	movf	CAN_TakeFrame@message,w,c
  4213  000402  26D9               	addwf	fsr2l,f,c
  4214  000404  500F               	movf	CAN_TakeFrame@message+1,w,c
  4215  000406  22DA               	addwfc	fsr2h,f,c
  4216  000408  CF64 FFDF          	movff	3940,indf2	;volatile
  4217                           
  4218                           ;CAN.c: 302:         message->id.v[1] = RXB0EIDH;
  4219  00040C  EE20 F005          	lfsr	2,5
  4220  000410  500E               	movf	CAN_TakeFrame@message,w,c
  4221  000412  26D9               	addwf	fsr2l,f,c
  4222  000414  500F               	movf	CAN_TakeFrame@message+1,w,c
  4223  000416  22DA               	addwfc	fsr2h,f,c
  4224  000418  CF63 FFDF          	movff	3939,indf2	;volatile
  4225                           
  4226                           ;CAN.c: 303:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4227  00041C  EE20 F006          	lfsr	2,6
  4228  000420  500E               	movf	CAN_TakeFrame@message,w,c
  4229  000422  26D9               	addwf	fsr2l,f,c
  4230  000424  500F               	movf	CAN_TakeFrame@message+1,w,c
  4231  000426  22DA               	addwfc	fsr2h,f,c
  4232  000428  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4233  00042C  0E03               	movlw	3
  4234  00042E  1610               	andwf	??_CAN_TakeFrame,f,c
  4235  000430  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4236  000434  6A07               	clrf	___awdiv@dividend+1,c
  4237  000436  0E00               	movlw	0
  4238  000438  6E09               	movwf	___awdiv@divisor+1,c
  4239  00043A  0E08               	movlw	8
  4240  00043C  6E08               	movwf	___awdiv@divisor,c
  4241  00043E  ECB7  F007         	call	___awdiv	;wreg free
  4242  000442  5006               	movf	?___awdiv,w,c
  4243  000444  1010               	iorwf	??_CAN_TakeFrame,w,c
  4244  000446  6EDF               	movwf	indf2,c
  4245                           
  4246                           ;CAN.c: 304:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4247  000448  5061               	movf	3937,w,c	;volatile
  4248  00044A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4249  00044C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4250  00044E  0E05               	movlw	5
  4251  000450                     u1685:
  4252  000450  90D8               	bcf	status,0,c
  4253  000452  3610               	rlcf	??_CAN_TakeFrame,f,c
  4254  000454  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4255  000456  2EE8               	decfsz	wreg,f,c
  4256  000458  D7FB               	goto	u1685
  4257  00045A  EE20 F006          	lfsr	2,6
  4258  00045E  500E               	movf	CAN_TakeFrame@message,w,c
  4259  000460  26D9               	addwf	fsr2l,f,c
  4260  000462  500F               	movf	CAN_TakeFrame@message+1,w,c
  4261  000464  22DA               	addwfc	fsr2h,f,c
  4262  000466  5010               	movf	??_CAN_TakeFrame,w,c
  4263  000468  12DE               	iorwf	postinc2,f,c
  4264  00046A  5011               	movf	??_CAN_TakeFrame+1,w,c
  4265  00046C  12DD               	iorwf	postdec2,f,c
  4266                           
  4267                           ;CAN.c: 305:         message->frame_type=0x03;
  4268  00046E  EE20 F002          	lfsr	2,2
  4269  000472  500E               	movf	CAN_TakeFrame@message,w,c
  4270  000474  26D9               	addwf	fsr2l,f,c
  4271  000476  500F               	movf	CAN_TakeFrame@message+1,w,c
  4272  000478  22DA               	addwfc	fsr2h,f,c
  4273  00047A  0E03               	movlw	3
  4274  00047C  6EDF               	movwf	indf2,c
  4275                           
  4276                           ;CAN.c: 309:         if(RXB0DLCbits.RXRTR == 0)
  4277  00047E  BC65               	btfsc	3941,6,c	;volatile
  4278  000480  D068               	goto	l3043
  4279                           
  4280                           ;CAN.c: 310:         {;CAN.c: 311:             message->message_type = 0x01;
  4281  000482  EE20 F001          	lfsr	2,1
  4282  000486  500E               	movf	CAN_TakeFrame@message,w,c
  4283  000488  26D9               	addwf	fsr2l,f,c
  4284  00048A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4285  00048C  22DA               	addwfc	fsr2h,f,c
  4286  00048E  0E01               	movlw	1
  4287  000490  6EDF               	movwf	indf2,c
  4288                           
  4289                           ;CAN.c: 312:             message->data_length= RXB0DLC & 0x0F;
  4290  000492  EE20 F010          	lfsr	2,16
  4291  000496  500E               	movf	CAN_TakeFrame@message,w,c
  4292  000498  26D9               	addwf	fsr2l,f,c
  4293  00049A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4294  00049C  22DA               	addwfc	fsr2h,f,c
  4295  00049E  5065               	movf	3941,w,c	;volatile
  4296  0004A0  0B0F               	andlw	15
  4297  0004A2  6EDF               	movwf	indf2,c
  4298                           
  4299                           ;CAN.c: 313:             if(message->data_length > 8)
  4300  0004A4  EE20 F010          	lfsr	2,16
  4301  0004A8  500E               	movf	CAN_TakeFrame@message,w,c
  4302  0004AA  26D9               	addwf	fsr2l,f,c
  4303  0004AC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4304  0004AE  22DA               	addwfc	fsr2h,f,c
  4305  0004B0  0E08               	movlw	8
  4306  0004B2  64DF               	cpfsgt	indf2,c
  4307  0004B4  D041               	goto	l3041
  4308  0004B6  D01E               	goto	l3035
  4309  0004B8                     l3017:
  4310                           
  4311                           ;CAN.c: 319:                         RXB0CON = 0;
  4312  0004B8  0E00               	movlw	0
  4313  0004BA  6E60               	movwf	3936,c	;volatile
  4314                           
  4315                           ;CAN.c: 320:                         break;
  4316  0004BC  D03B               	goto	l3037
  4317  0004BE                     l3019:
  4318                           
  4319                           ;CAN.c: 322:                         RXB1CON = 0;
  4320  0004BE  0E00               	movlw	0
  4321  0004C0  010F               	movlb	15	; () banked
  4322  0004C2  D00E               	goto	L1
  4323  0004C4                     l3021:
  4324                           
  4325                           ;CAN.c: 325:                         B0CON = 0;
  4326  0004C4  0E00               	movlw	0
  4327  0004C6  010E               	movlb	14	; () banked
  4328  0004C8  6F20               	movwf	32,b	;volatile
  4329                           
  4330                           ;CAN.c: 326:                         break;
  4331  0004CA  D034               	goto	l3037
  4332  0004CC                     l3023:
  4333                           
  4334                           ;CAN.c: 328:                         B1CON = 0;
  4335  0004CC  0E00               	movlw	0
  4336  0004CE  010E               	movlb	14	; () banked
  4337  0004D0  6F30               	movwf	48,b	;volatile
  4338                           
  4339                           ;CAN.c: 329:                         break;
  4340  0004D2  D030               	goto	l3037
  4341  0004D4                     l3025:
  4342                           
  4343                           ;CAN.c: 331:                         B2CON = 0;
  4344  0004D4  0E00               	movlw	0
  4345  0004D6  010E               	movlb	14	; () banked
  4346  0004D8  6F40               	movwf	64,b	;volatile
  4347                           
  4348                           ;CAN.c: 332:                         break;
  4349  0004DA  D02C               	goto	l3037
  4350  0004DC                     l3027:
  4351                           
  4352                           ;CAN.c: 334:                         B3CON = 0;
  4353  0004DC  0E00               	movlw	0
  4354  0004DE  010E               	movlb	14	; () banked
  4355  0004E0                     L1:
  4356  0004E0  6F50               	movwf	80,b	;volatile
  4357                           
  4358                           ;CAN.c: 335:                         break;
  4359  0004E2  D028               	goto	l3037
  4360  0004E4                     l3029:
  4361                           
  4362                           ;CAN.c: 337:                         B4CON = 0;
  4363  0004E4  0E00               	movlw	0
  4364  0004E6  010E               	movlb	14	; () banked
  4365  0004E8  6F60               	movwf	96,b	;volatile
  4366                           
  4367                           ;CAN.c: 338:                         break;
  4368  0004EA  D024               	goto	l3037
  4369  0004EC                     l3031:
  4370                           
  4371                           ;CAN.c: 340:                         B5CON = 0;
  4372  0004EC  0E00               	movlw	0
  4373  0004EE  010E               	movlb	14	; () banked
  4374  0004F0  6F70               	movwf	112,b	;volatile
  4375                           
  4376                           ;CAN.c: 341:                         break;
  4377  0004F2  D020               	goto	l3037
  4378  0004F4                     l3035:
  4379  0004F4  5013               	movf	CAN_TakeFrame@k,w,c
  4380  0004F6  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4381  0004F8  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4382                           
  4383                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4384                           ; Switch size 1, requested type "simple"
  4385                           ; Number of cases is 1, Range of values is 0 to 0
  4386                           ; switch strategies available:
  4387                           ; Name         Instructions Cycles
  4388                           ; simple_byte            4     3 (average)
  4389                           ;	Chosen strategy is simple_byte
  4390  0004FA  5011               	movf	??_CAN_TakeFrame+1,w,c
  4391  0004FC  0A00               	xorlw	0	; case 0
  4392  0004FE  A4D8               	btfss	status,2,c
  4393  000500  D019               	goto	l3037
  4394                           
  4395                           ; Switch size 1, requested type "simple"
  4396                           ; Number of cases is 8, Range of values is 0 to 7
  4397                           ; switch strategies available:
  4398                           ; Name         Instructions Cycles
  4399                           ; simple_byte           25    13 (average)
  4400                           ;	Chosen strategy is simple_byte
  4401  000502  5010               	movf	??_CAN_TakeFrame,w,c
  4402  000504  0A00               	xorlw	0	; case 0
  4403  000506  B4D8               	btfsc	status,2,c
  4404  000508  D7D7               	goto	l3017
  4405  00050A  0A01               	xorlw	1	; case 1
  4406  00050C  B4D8               	btfsc	status,2,c
  4407  00050E  D7D7               	goto	l3019
  4408  000510  0A03               	xorlw	3	; case 2
  4409  000512  B4D8               	btfsc	status,2,c
  4410  000514  D7D7               	goto	l3021
  4411  000516  0A01               	xorlw	1	; case 3
  4412  000518  B4D8               	btfsc	status,2,c
  4413  00051A  D7D8               	goto	l3023
  4414  00051C  0A07               	xorlw	7	; case 4
  4415  00051E  B4D8               	btfsc	status,2,c
  4416  000520  D7D9               	goto	l3025
  4417  000522  0A01               	xorlw	1	; case 5
  4418  000524  B4D8               	btfsc	status,2,c
  4419  000526  D7DA               	goto	l3027
  4420  000528  0A03               	xorlw	3	; case 6
  4421  00052A  B4D8               	btfsc	status,2,c
  4422  00052C  D7DB               	goto	l3029
  4423  00052E  0A01               	xorlw	1	; case 7
  4424  000530  B4D8               	btfsc	status,2,c
  4425  000532  D7DC               	goto	l3031
  4426  000534                     l3037:
  4427                           
  4428                           ;CAN.c: 343:                 return FALSE;
  4429  000534  0E00               	movlw	0
  4430  000536  0012               	return	
  4431  000538                     l3041:
  4432                           
  4433                           ;CAN.c: 345:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4434  000538  0E08               	movlw	8
  4435  00053A  240E               	addwf	CAN_TakeFrame@message,w,c
  4436  00053C  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4437  00053E  0E00               	movlw	0
  4438  000540  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4439  000542  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4440  000544  0E66               	movlw	102
  4441  000546  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4442  000548  0E0F               	movlw	15
  4443  00054A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4444  00054C  ECD2  F00A         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4445                           
  4446                           ;CAN.c: 346:         }
  4447  000550  D027               	goto	l3063
  4448  000552                     l3043:
  4449                           
  4450                           ;CAN.c: 349:         {;CAN.c: 350:             message->message_type=0x02;
  4451  000552  EE20 F001          	lfsr	2,1
  4452  000556  500E               	movf	CAN_TakeFrame@message,w,c
  4453  000558  26D9               	addwf	fsr2l,f,c
  4454  00055A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4455  00055C  22DA               	addwfc	fsr2h,f,c
  4456  00055E  0E02               	movlw	2
  4457  000560  6EDF               	movwf	indf2,c
  4458  000562  D01E               	goto	l3063
  4459  000564                     l3045:
  4460                           
  4461                           ;CAN.c: 356:                 RXB0CON = 0;
  4462  000564  0E00               	movlw	0
  4463  000566  6E60               	movwf	3936,c	;volatile
  4464                           
  4465                           ;CAN.c: 357:                 break;
  4466  000568  D03B               	goto	l3065
  4467  00056A                     l3047:
  4468                           
  4469                           ;CAN.c: 359:                 RXB1CON = 0;
  4470  00056A  0E00               	movlw	0
  4471  00056C  010F               	movlb	15	; () banked
  4472  00056E  D00E               	goto	L2
  4473  000570                     l3049:
  4474                           
  4475                           ;CAN.c: 362:                 B0CON = 0;
  4476  000570  0E00               	movlw	0
  4477  000572  010E               	movlb	14	; () banked
  4478  000574  6F20               	movwf	32,b	;volatile
  4479                           
  4480                           ;CAN.c: 363:                 break;
  4481  000576  D034               	goto	l3065
  4482  000578                     l3051:
  4483                           
  4484                           ;CAN.c: 365:                 B1CON = 0;
  4485  000578  0E00               	movlw	0
  4486  00057A  010E               	movlb	14	; () banked
  4487  00057C  6F30               	movwf	48,b	;volatile
  4488                           
  4489                           ;CAN.c: 366:                 break;
  4490  00057E  D030               	goto	l3065
  4491  000580                     l3053:
  4492                           
  4493                           ;CAN.c: 368:                 B2CON = 0;
  4494  000580  0E00               	movlw	0
  4495  000582  010E               	movlb	14	; () banked
  4496  000584  6F40               	movwf	64,b	;volatile
  4497                           
  4498                           ;CAN.c: 369:                 break;
  4499  000586  D02C               	goto	l3065
  4500  000588                     l3055:
  4501                           
  4502                           ;CAN.c: 371:                 B3CON = 0;
  4503  000588  0E00               	movlw	0
  4504  00058A  010E               	movlb	14	; () banked
  4505  00058C                     L2:
  4506  00058C  6F50               	movwf	80,b	;volatile
  4507                           
  4508                           ;CAN.c: 372:                 break;
  4509  00058E  D028               	goto	l3065
  4510  000590                     l3057:
  4511                           
  4512                           ;CAN.c: 374:                 B4CON = 0;
  4513  000590  0E00               	movlw	0
  4514  000592  010E               	movlb	14	; () banked
  4515  000594  6F60               	movwf	96,b	;volatile
  4516                           
  4517                           ;CAN.c: 375:                 break;
  4518  000596  D024               	goto	l3065
  4519  000598                     l3059:
  4520                           
  4521                           ;CAN.c: 377:                 B5CON = 0;
  4522  000598  0E00               	movlw	0
  4523  00059A  010E               	movlb	14	; () banked
  4524  00059C  6F70               	movwf	112,b	;volatile
  4525                           
  4526                           ;CAN.c: 378:                 break;
  4527  00059E  D020               	goto	l3065
  4528  0005A0                     l3063:
  4529  0005A0  5013               	movf	CAN_TakeFrame@k,w,c
  4530  0005A2  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4531  0005A4  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4532                           
  4533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4534                           ; Switch size 1, requested type "simple"
  4535                           ; Number of cases is 1, Range of values is 0 to 0
  4536                           ; switch strategies available:
  4537                           ; Name         Instructions Cycles
  4538                           ; simple_byte            4     3 (average)
  4539                           ;	Chosen strategy is simple_byte
  4540  0005A6  5011               	movf	??_CAN_TakeFrame+1,w,c
  4541  0005A8  0A00               	xorlw	0	; case 0
  4542  0005AA  A4D8               	btfss	status,2,c
  4543  0005AC  D019               	goto	l3065
  4544                           
  4545                           ; Switch size 1, requested type "simple"
  4546                           ; Number of cases is 8, Range of values is 0 to 7
  4547                           ; switch strategies available:
  4548                           ; Name         Instructions Cycles
  4549                           ; simple_byte           25    13 (average)
  4550                           ;	Chosen strategy is simple_byte
  4551  0005AE  5010               	movf	??_CAN_TakeFrame,w,c
  4552  0005B0  0A00               	xorlw	0	; case 0
  4553  0005B2  B4D8               	btfsc	status,2,c
  4554  0005B4  D7D7               	goto	l3045
  4555  0005B6  0A01               	xorlw	1	; case 1
  4556  0005B8  B4D8               	btfsc	status,2,c
  4557  0005BA  D7D7               	goto	l3047
  4558  0005BC  0A03               	xorlw	3	; case 2
  4559  0005BE  B4D8               	btfsc	status,2,c
  4560  0005C0  D7D7               	goto	l3049
  4561  0005C2  0A01               	xorlw	1	; case 3
  4562  0005C4  B4D8               	btfsc	status,2,c
  4563  0005C6  D7D8               	goto	l3051
  4564  0005C8  0A07               	xorlw	7	; case 4
  4565  0005CA  B4D8               	btfsc	status,2,c
  4566  0005CC  D7D9               	goto	l3053
  4567  0005CE  0A01               	xorlw	1	; case 5
  4568  0005D0  B4D8               	btfsc	status,2,c
  4569  0005D2  D7DA               	goto	l3055
  4570  0005D4  0A03               	xorlw	3	; case 6
  4571  0005D6  B4D8               	btfsc	status,2,c
  4572  0005D8  D7DB               	goto	l3057
  4573  0005DA  0A01               	xorlw	1	; case 7
  4574  0005DC  B4D8               	btfsc	status,2,c
  4575  0005DE  D7DC               	goto	l3059
  4576  0005E0                     l3065:
  4577                           
  4578                           ;CAN.c: 380:         return TRUE;
  4579  0005E0  0E01               	movlw	1
  4580  0005E2  0012               	return		;funcret
  4581  0005E4                     __end_of_CAN_TakeFrame:
  4582                           	opt callstack 0
  4583                           
  4584 ;; *************** function ___awdiv *****************
  4585 ;; Defined at:
  4586 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  dividend        2    5[COMRAM] int 
  4589 ;;  divisor         2    7[COMRAM] int 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  quotient        2   11[COMRAM] int 
  4592 ;;  sign            1   10[COMRAM] unsigned char 
  4593 ;;  counter         1    9[COMRAM] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  2    5[COMRAM] int 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;Total ram usage:        8 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    3
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_CAN_TakeFrame
  4614 ;;		_FRAME_HandleCanFrame
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text33
  4619  000F6E                     __ptext33:
  4620                           	opt callstack 0
  4621  000F6E                     ___awdiv:
  4622                           	opt callstack 25
  4623                           
  4624                           ;incstack = 0
  4625  000F6E  0E00               	movlw	0
  4626  000F70  6E0B               	movwf	___awdiv@sign,c
  4627  000F72  AE09               	btfss	___awdiv@divisor+1,7,c
  4628  000F74  D006               	goto	l2943
  4629  000F76  6C08               	negf	___awdiv@divisor,c
  4630  000F78  1E09               	comf	___awdiv@divisor+1,f,c
  4631  000F7A  B0D8               	btfsc	status,0,c
  4632  000F7C  2A09               	incf	___awdiv@divisor+1,f,c
  4633  000F7E  0E01               	movlw	1
  4634  000F80  6E0B               	movwf	___awdiv@sign,c
  4635  000F82                     l2943:
  4636  000F82  AE07               	btfss	___awdiv@dividend+1,7,c
  4637  000F84  D006               	goto	l2949
  4638  000F86  6C06               	negf	___awdiv@dividend,c
  4639  000F88  1E07               	comf	___awdiv@dividend+1,f,c
  4640  000F8A  B0D8               	btfsc	status,0,c
  4641  000F8C  2A07               	incf	___awdiv@dividend+1,f,c
  4642  000F8E  0E01               	movlw	1
  4643  000F90  1A0B               	xorwf	___awdiv@sign,f,c
  4644  000F92                     l2949:
  4645  000F92  0E00               	movlw	0
  4646  000F94  6E0D               	movwf	___awdiv@quotient+1,c
  4647  000F96  0E00               	movlw	0
  4648  000F98  6E0C               	movwf	___awdiv@quotient,c
  4649  000F9A  5008               	movf	___awdiv@divisor,w,c
  4650  000F9C  1009               	iorwf	___awdiv@divisor+1,w,c
  4651  000F9E  B4D8               	btfsc	status,2,c
  4652  000FA0  D01C               	goto	l2971
  4653  000FA2  0E01               	movlw	1
  4654  000FA4  6E0A               	movwf	___awdiv@counter,c
  4655  000FA6  D004               	goto	l2957
  4656  000FA8                     l2955:
  4657  000FA8  90D8               	bcf	status,0,c
  4658  000FAA  3608               	rlcf	___awdiv@divisor,f,c
  4659  000FAC  3609               	rlcf	___awdiv@divisor+1,f,c
  4660  000FAE  2A0A               	incf	___awdiv@counter,f,c
  4661  000FB0                     l2957:
  4662  000FB0  AE09               	btfss	___awdiv@divisor+1,7,c
  4663  000FB2  D7FA               	goto	l2955
  4664  000FB4                     u1620:
  4665  000FB4  90D8               	bcf	status,0,c
  4666  000FB6  360C               	rlcf	___awdiv@quotient,f,c
  4667  000FB8  360D               	rlcf	___awdiv@quotient+1,f,c
  4668  000FBA  5008               	movf	___awdiv@divisor,w,c
  4669  000FBC  5C06               	subwf	___awdiv@dividend,w,c
  4670  000FBE  5009               	movf	___awdiv@divisor+1,w,c
  4671  000FC0  5807               	subwfb	___awdiv@dividend+1,w,c
  4672  000FC2  A0D8               	btfss	status,0,c
  4673  000FC4  D005               	goto	l2967
  4674  000FC6  5008               	movf	___awdiv@divisor,w,c
  4675  000FC8  5E06               	subwf	___awdiv@dividend,f,c
  4676  000FCA  5009               	movf	___awdiv@divisor+1,w,c
  4677  000FCC  5A07               	subwfb	___awdiv@dividend+1,f,c
  4678  000FCE  800C               	bsf	___awdiv@quotient,0,c
  4679  000FD0                     l2967:
  4680  000FD0  90D8               	bcf	status,0,c
  4681  000FD2  3209               	rrcf	___awdiv@divisor+1,f,c
  4682  000FD4  3208               	rrcf	___awdiv@divisor,f,c
  4683  000FD6  2E0A               	decfsz	___awdiv@counter,f,c
  4684  000FD8  D7ED               	goto	u1620
  4685  000FDA                     l2971:
  4686  000FDA  500B               	movf	___awdiv@sign,w,c
  4687  000FDC  B4D8               	btfsc	status,2,c
  4688  000FDE  D004               	goto	l2975
  4689  000FE0  6C0C               	negf	___awdiv@quotient,c
  4690  000FE2  1E0D               	comf	___awdiv@quotient+1,f,c
  4691  000FE4  B0D8               	btfsc	status,0,c
  4692  000FE6  2A0D               	incf	___awdiv@quotient+1,f,c
  4693  000FE8                     l2975:
  4694  000FE8  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4695  000FEC  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4696  000FF0  0012               	return		;funcret
  4697  000FF2                     __end_of___awdiv:
  4698                           	opt callstack 0
  4699                           
  4700 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4701 ;; Defined at:
  4702 ;;		line 182 in file "CAN.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4705 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4706 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4707 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  i               1    9[COMRAM] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;Total ram usage:        5 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    3
  4726 ;; This function calls:
  4727 ;;		Nothing
  4728 ;; This function is called by:
  4729 ;;		_CAN_SendFrame
  4730 ;;		_CAN_TakeFrame
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text34
  4735  0015A4                     __ptext34:
  4736                           	opt callstack 0
  4737  0015A4                     _CAN_MoveBuffIntoFrame:
  4738                           	opt callstack 24
  4739                           
  4740                           ;CAN.c: 182: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 183: {;CAN.c
      +                          : 184:     BYTE i;;CAN.c: 185:     for(i=0; i<8; ++i)
  4741                           
  4742                           ;incstack = 0
  4743  0015A4  0E00               	movlw	0
  4744  0015A6  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4745  0015A8                     l2519:
  4746                           
  4747                           ;CAN.c: 186:     {;CAN.c: 187:         Ram[i]=(*(Buf+i));
  4748  0015A8  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4749  0015AA  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4750  0015AC  6ED9               	movwf	fsr2l,c
  4751  0015AE  0E00               	movlw	0
  4752  0015B0  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4753  0015B2  6EDA               	movwf	fsr2h,c
  4754  0015B4  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4755  0015B6  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4756  0015B8  6EE1               	movwf	fsr1l,c
  4757  0015BA  0E00               	movlw	0
  4758  0015BC  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4759  0015BE  6EE2               	movwf	fsr1h,c
  4760  0015C0  CFDF FFE7          	movff	indf2,indf1
  4761                           
  4762                           ;CAN.c: 188:     }
  4763  0015C4  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4764  0015C6  0E07               	movlw	7
  4765  0015C8  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4766  0015CA  D7EE               	goto	l2519
  4767  0015CC  0012               	return	
  4768  0015CE                     __end_of_CAN_MoveBuffIntoFrame:
  4769                           	opt callstack 0
  4770                           
  4771 ;; *************** function _TMR1_Update_flag_Set *****************
  4772 ;; Defined at:
  4773 ;;		line 32 in file "TMR1.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  a               2    5[COMRAM] unsigned int 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		None
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;Total ram usage:        2 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    3
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_main
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text35
  4802  0016FE                     __ptext35:
  4803                           	opt callstack 0
  4804  0016FE                     _TMR1_Update_flag_Set:
  4805                           	opt callstack 27
  4806                           
  4807                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4808                           
  4809                           ;incstack = 0
  4810  0016FE  C006  F047         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4811  001702  C007  F048         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4812  001706  0012               	return		;funcret
  4813  001708                     __end_of_TMR1_Update_flag_Set:
  4814                           	opt callstack 0
  4815                           
  4816 ;; *************** function _TMR1_Update_flag_Get *****************
  4817 ;; Defined at:
  4818 ;;		line 47 in file "TMR1.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  2    5[COMRAM] unsigned int 
  4825 ;; Registers used:
  4826 ;;		None
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;Total ram usage:        2 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    3
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_main
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text36
  4847  001708                     __ptext36:
  4848                           	opt callstack 0
  4849  001708                     _TMR1_Update_flag_Get:
  4850                           	opt callstack 27
  4851                           
  4852                           ;TMR1.c: 49:     return TMR1_Update_flag;
  4853                           
  4854                           ;incstack = 0
  4855  001708  C047  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  4856  00170C  C048  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  4857  001710  0012               	return		;funcret
  4858  001712                     __end_of_TMR1_Update_flag_Get:
  4859                           	opt callstack 0
  4860                           
  4861 ;; *************** function _LED_Update *****************
  4862 ;; Defined at:
  4863 ;;		line 105 in file "LED.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      unsigned char 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    5
  4884 ;; This function calls:
  4885 ;;		_LED_Control
  4886 ;;		_LED_Left
  4887 ;;		_LED_Light_Pos
  4888 ;;		_LED_Right
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text37
  4895  000FF2                     __ptext37:
  4896                           	opt callstack 0
  4897  000FF2                     _LED_Update:
  4898                           	opt callstack 25
  4899                           
  4900                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  4901                           
  4902                           ;incstack = 0
  4903  000FF2  504F               	movf	_LOCK,w,c
  4904  000FF4  A4D8               	btfss	status,2,c
  4905  000FF6  D013               	goto	l3197
  4906                           
  4907                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  4908  000FF8  0E00               	movlw	0
  4909  000FFA  6E07               	movwf	LED_Control@diode+1,c
  4910  000FFC  0E00               	movlw	0
  4911  000FFE  6E06               	movwf	LED_Control@diode,c
  4912  001000  0E00               	movlw	0
  4913  001002  ECAC  F004         	call	_LED_Control
  4914                           
  4915                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  4916  001006  C052  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  4917  00100A  C053  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  4918  00100E  C056  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4919  001012  C057  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4920  001016  5058               	movf	LED_Update@Green,w,c
  4921  001018  EC80  F006         	call	_LED_Light_Pos
  4922                           
  4923                           ;LED.c: 117:     }
  4924  00101C  D012               	goto	l293
  4925  00101E                     l3197:
  4926                           
  4927                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  4928  00101E  0E00               	movlw	0
  4929  001020  6E07               	movwf	LED_Control@diode+1,c
  4930  001022  0E00               	movlw	0
  4931  001024  6E06               	movwf	LED_Control@diode,c
  4932  001026  5058               	movf	LED_Update@Green,w,c
  4933  001028  ECAC  F004         	call	_LED_Control
  4934                           
  4935                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  4936  00102C  C054  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  4937  001030  C055  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  4938  001034  C056  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4939  001038  C057  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4940  00103C  0E00               	movlw	0
  4941  00103E  EC80  F006         	call	_LED_Light_Pos
  4942  001042                     l293:
  4943                           
  4944                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  4945  001042  C054  F006         	movff	LED_Update@pos1,LED_Right@a
  4946  001046  C055  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  4947  00104A  ECE4  F009         	call	_LED_Right	;wreg free
  4948  00104E  C006  F054         	movff	?_LED_Right,LED_Update@pos1
  4949  001052  C007  F055         	movff	?_LED_Right+1,LED_Update@pos1+1
  4950                           
  4951                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  4952  001056  C052  F006         	movff	LED_Update@pos2,LED_Left@a
  4953  00105A  C053  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  4954  00105E  EC2F  F00A         	call	_LED_Left	;wreg free
  4955  001062  C006  F052         	movff	?_LED_Left,LED_Update@pos2
  4956  001066  C007  F053         	movff	?_LED_Left+1,LED_Update@pos2+1
  4957  00106A  0012               	return		;funcret
  4958  00106C                     __end_of_LED_Update:
  4959                           	opt callstack 0
  4960                           
  4961 ;; *************** function _LED_Light_Pos *****************
  4962 ;; Defined at:
  4963 ;;		line 196 in file "LED.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  color           1    wreg     enum E10644
  4966 ;;  pos             2   12[COMRAM] unsigned int 
  4967 ;;  fulfillment     2   14[COMRAM] unsigned int 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  color           1   16[COMRAM] enum E10644
  4970 ;;  flage           2   21[COMRAM] unsigned int 
  4971 ;;  pos2            2   19[COMRAM] unsigned int 
  4972 ;;  LED_array       2   17[COMRAM] unsigned int 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  2   12[COMRAM] unsigned int 
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;Total ram usage:       11 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    4
  4989 ;; This function calls:
  4990 ;;		_LED_Control
  4991 ;;		_LED_Left
  4992 ;;		_LED_Right
  4993 ;;		___lwdiv
  4994 ;; This function is called by:
  4995 ;;		_LED_Update
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text38
  5000  000D00                     __ptext38:
  5001                           	opt callstack 0
  5002  000D00                     _LED_Light_Pos:
  5003                           	opt callstack 25
  5004                           
  5005                           ;incstack = 0
  5006                           ;LED_Light_Pos@color stored from wreg
  5007  000D00  6E11               	movwf	LED_Light_Pos@color,c
  5008                           
  5009                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  5010  000D02  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5011  000D06  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5012                           
  5013                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  5014  000D0A  0E00               	movlw	0
  5015  000D0C  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5016  000D0E  0E00               	movlw	0
  5017  000D10  6E12               	movwf	LED_Light_Pos@LED_array,c
  5018                           
  5019                           ;LED.c: 200:     UINT flage = fulfillment/10;
  5020  000D12  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5021  000D16  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5022  000D1A  0E00               	movlw	0
  5023  000D1C  6E09               	movwf	___lwdiv@divisor+1,c
  5024  000D1E  0E0A               	movlw	10
  5025  000D20  6E08               	movwf	___lwdiv@divisor,c
  5026  000D22  EC94  F009         	call	___lwdiv	;wreg free
  5027  000D26  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5028  000D2A  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5029                           
  5030                           ;LED.c: 201:     if(color == RED)
  5031  000D2E  5011               	movf	LED_Light_Pos@color,w,c
  5032  000D30  B4D8               	btfsc	status,2,c
  5033  000D32  D017               	goto	l3103
  5034  000D34  D031               	goto	l3111
  5035  000D36                     l3097:
  5036                           
  5037                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5038  000D36  5012               	movf	LED_Light_Pos@LED_array,w,c
  5039  000D38  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5040  000D3A  6E12               	movwf	LED_Light_Pos@LED_array,c
  5041  000D3C  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5042  000D3E  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5043  000D40  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5044                           
  5045                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5046  000D42  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5047  000D46  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5048  000D4A  EC2F  F00A         	call	_LED_Left	;wreg free
  5049  000D4E  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5050  000D52  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5051                           
  5052                           ;LED.c: 207:             flage = flage - 1;
  5053  000D56  0EFF               	movlw	255
  5054  000D58  2416               	addwf	LED_Light_Pos@flage,w,c
  5055  000D5A  6E16               	movwf	LED_Light_Pos@flage,c
  5056  000D5C  0EFF               	movlw	255
  5057  000D5E  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5058  000D60  6E17               	movwf	LED_Light_Pos@flage+1,c
  5059  000D62                     l3103:
  5060                           
  5061                           ;LED.c: 203:         while(flage>0)
  5062  000D62  5016               	movf	LED_Light_Pos@flage,w,c
  5063  000D64  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5064  000D66  B4D8               	btfsc	status,2,c
  5065  000D68  D01B               	goto	u1730
  5066  000D6A  D7E5               	goto	l3097
  5067  000D6C                     l3105:
  5068                           
  5069                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5070  000D6C  5012               	movf	LED_Light_Pos@LED_array,w,c
  5071  000D6E  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5072  000D70  6E12               	movwf	LED_Light_Pos@LED_array,c
  5073  000D72  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5074  000D74  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5075  000D76  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5076                           
  5077                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5078  000D78  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5079  000D7C  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5080  000D80  ECE4  F009         	call	_LED_Right	;wreg free
  5081  000D84  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5082  000D88  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5083                           
  5084                           ;LED.c: 216:             flage = flage - 1;
  5085  000D8C  0EFF               	movlw	255
  5086  000D8E  2416               	addwf	LED_Light_Pos@flage,w,c
  5087  000D90  6E16               	movwf	LED_Light_Pos@flage,c
  5088  000D92  0EFF               	movlw	255
  5089  000D94  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5090  000D96  6E17               	movwf	LED_Light_Pos@flage+1,c
  5091  000D98                     l3111:
  5092                           
  5093                           ;LED.c: 212:         while(flage>0)
  5094  000D98  5016               	movf	LED_Light_Pos@flage,w,c
  5095  000D9A  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5096  000D9C  A4D8               	btfss	status,2,c
  5097  000D9E  D7E6               	goto	l3105
  5098  000DA0                     u1730:
  5099                           
  5100                           ;LED.c: 219:     LED_Control(color, LED_array);
  5101  000DA0  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5102  000DA4  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5103  000DA8  5011               	movf	LED_Light_Pos@color,w,c
  5104  000DAA  ECAC  F004         	call	_LED_Control
  5105  000DAE  0012               	return		;funcret
  5106  000DB0                     __end_of_LED_Light_Pos:
  5107                           	opt callstack 0
  5108                           
  5109 ;; *************** function ___lwdiv *****************
  5110 ;; Defined at:
  5111 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  dividend        2    5[COMRAM] unsigned int 
  5114 ;;  divisor         2    7[COMRAM] unsigned int 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  quotient        2    9[COMRAM] unsigned int 
  5117 ;;  counter         1   11[COMRAM] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  2    5[COMRAM] unsigned int 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;Total ram usage:        7 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    3
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_LED_Light_Pos
  5138 ;;		_FRAME_Plot
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text39
  5143  001328                     __ptext39:
  5144                           	opt callstack 0
  5145  001328                     ___lwdiv:
  5146                           	opt callstack 24
  5147                           
  5148                           ;incstack = 0
  5149  001328  0E00               	movlw	0
  5150  00132A  6E0B               	movwf	___lwdiv@quotient+1,c
  5151  00132C  0E00               	movlw	0
  5152  00132E  6E0A               	movwf	___lwdiv@quotient,c
  5153  001330  5008               	movf	___lwdiv@divisor,w,c
  5154  001332  1009               	iorwf	___lwdiv@divisor+1,w,c
  5155  001334  B4D8               	btfsc	status,2,c
  5156  001336  D01C               	goto	l1201
  5157  001338  0E01               	movlw	1
  5158  00133A  6E0C               	movwf	___lwdiv@counter,c
  5159  00133C  D004               	goto	l2633
  5160  00133E                     l2631:
  5161  00133E  90D8               	bcf	status,0,c
  5162  001340  3608               	rlcf	___lwdiv@divisor,f,c
  5163  001342  3609               	rlcf	___lwdiv@divisor+1,f,c
  5164  001344  2A0C               	incf	___lwdiv@counter,f,c
  5165  001346                     l2633:
  5166  001346  AE09               	btfss	___lwdiv@divisor+1,7,c
  5167  001348  D7FA               	goto	l2631
  5168  00134A                     u1250:
  5169  00134A  90D8               	bcf	status,0,c
  5170  00134C  360A               	rlcf	___lwdiv@quotient,f,c
  5171  00134E  360B               	rlcf	___lwdiv@quotient+1,f,c
  5172  001350  5008               	movf	___lwdiv@divisor,w,c
  5173  001352  5C06               	subwf	___lwdiv@dividend,w,c
  5174  001354  5009               	movf	___lwdiv@divisor+1,w,c
  5175  001356  5807               	subwfb	___lwdiv@dividend+1,w,c
  5176  001358  A0D8               	btfss	status,0,c
  5177  00135A  D005               	goto	l2643
  5178  00135C  5008               	movf	___lwdiv@divisor,w,c
  5179  00135E  5E06               	subwf	___lwdiv@dividend,f,c
  5180  001360  5009               	movf	___lwdiv@divisor+1,w,c
  5181  001362  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5182  001364  800A               	bsf	___lwdiv@quotient,0,c
  5183  001366                     l2643:
  5184  001366  90D8               	bcf	status,0,c
  5185  001368  3209               	rrcf	___lwdiv@divisor+1,f,c
  5186  00136A  3208               	rrcf	___lwdiv@divisor,f,c
  5187  00136C  2E0C               	decfsz	___lwdiv@counter,f,c
  5188  00136E  D7ED               	goto	u1250
  5189  001370                     l1201:
  5190  001370  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  5191  001374  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5192  001378  0012               	return		;funcret
  5193  00137A                     __end_of___lwdiv:
  5194                           	opt callstack 0
  5195                           
  5196 ;; *************** function _LED_Right *****************
  5197 ;; Defined at:
  5198 ;;		line 140 in file "LED.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  a               2    5[COMRAM] unsigned int 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  b               2    9[COMRAM] unsigned int 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  2    5[COMRAM] unsigned int 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;Total ram usage:        6 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    3
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_LED_Update
  5223 ;;		_LED_Light_Pos
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text40
  5228  0013C8                     __ptext40:
  5229                           	opt callstack 0
  5230  0013C8                     _LED_Right:
  5231                           	opt callstack 26
  5232                           
  5233                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5234                           
  5235                           ;incstack = 0
  5236  0013C8  A006               	btfss	LED_Right@a,0,c
  5237  0013CA  D018               	goto	l2751
  5238                           
  5239                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5240  0013CC  0EFE               	movlw	254
  5241  0013CE  1406               	andwf	LED_Right@a,w,c
  5242  0013D0  6E0A               	movwf	LED_Right@b,c
  5243  0013D2  0E03               	movlw	3
  5244  0013D4  1407               	andwf	LED_Right@a+1,w,c
  5245  0013D6  6E0B               	movwf	LED_Right@b+1,c
  5246                           
  5247                           ;LED.c: 145:         b = b >> 1;
  5248  0013D8  90D8               	bcf	status,0,c
  5249  0013DA  300B               	rrcf	LED_Right@b+1,w,c
  5250  0013DC  6E08               	movwf	??_LED_Right& (0+255),c
  5251  0013DE  300A               	rrcf	LED_Right@b,w,c
  5252  0013E0  6E0A               	movwf	LED_Right@b,c
  5253  0013E2  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5254                           
  5255                           ;LED.c: 146:         b = b | 0b1000000000;
  5256  0013E6  0E00               	movlw	0
  5257  0013E8  100A               	iorwf	LED_Right@b,w,c
  5258  0013EA  6E0A               	movwf	LED_Right@b,c
  5259  0013EC  0E02               	movlw	2
  5260  0013EE  100B               	iorwf	LED_Right@b+1,w,c
  5261  0013F0  6E0B               	movwf	LED_Right@b+1,c
  5262                           
  5263                           ;LED.c: 147:         return b;
  5264  0013F2  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5265  0013F6  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5266  0013FA  0012               	return	
  5267  0013FC                     l2751:
  5268                           
  5269                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5270  0013FC  90D8               	bcf	status,0,c
  5271  0013FE  3007               	rrcf	LED_Right@a+1,w,c
  5272  001400  6E08               	movwf	??_LED_Right& (0+255),c
  5273  001402  3006               	rrcf	LED_Right@a,w,c
  5274  001404  6E06               	movwf	LED_Right@a,c
  5275  001406  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5276                           
  5277                           ;LED.c: 152:         return a;
  5278  00140A  C006  F006         	movff	LED_Right@a,?_LED_Right
  5279  00140E  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5280  001412  0012               	return		;funcret
  5281  001414                     __end_of_LED_Right:
  5282                           	opt callstack 0
  5283                           
  5284 ;; *************** function _LED_Left *****************
  5285 ;; Defined at:
  5286 ;;		line 167 in file "LED.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  a               2    5[COMRAM] unsigned int 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  b               2    7[COMRAM] unsigned int 
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  2    5[COMRAM] unsigned int 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5303 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;Total ram usage:        4 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    3
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_LED_Update
  5311 ;;		_LED_Light_Pos
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text41
  5316  00145E                     __ptext41:
  5317                           	opt callstack 0
  5318  00145E                     _LED_Left:
  5319                           	opt callstack 25
  5320                           
  5321                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5322                           
  5323                           ;incstack = 0
  5324  00145E  A207               	btfss	LED_Left@a+1,1,c
  5325  001460  D015               	goto	l2767
  5326                           
  5327                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5328  001462  0EFF               	movlw	255
  5329  001464  1406               	andwf	LED_Left@a,w,c
  5330  001466  6E08               	movwf	LED_Left@b,c
  5331  001468  0E01               	movlw	1
  5332  00146A  1407               	andwf	LED_Left@a+1,w,c
  5333  00146C  6E09               	movwf	LED_Left@b+1,c
  5334                           
  5335                           ;LED.c: 172:         b = b << 1;
  5336  00146E  90D8               	bcf	status,0,c
  5337  001470  3408               	rlcf	LED_Left@b,w,c
  5338  001472  6E08               	movwf	LED_Left@b,c
  5339  001474  3409               	rlcf	LED_Left@b+1,w,c
  5340  001476  6E09               	movwf	LED_Left@b+1,c
  5341                           
  5342                           ;LED.c: 173:         b = b | 0b0000000001;
  5343  001478  0E01               	movlw	1
  5344  00147A  1008               	iorwf	LED_Left@b,w,c
  5345  00147C  6E08               	movwf	LED_Left@b,c
  5346  00147E  5009               	movf	LED_Left@b+1,w,c
  5347  001480  6E09               	movwf	LED_Left@b+1,c
  5348                           
  5349                           ;LED.c: 174:         return b;
  5350  001482  C008  F006         	movff	LED_Left@b,?_LED_Left
  5351  001486  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5352  00148A  0012               	return	
  5353  00148C                     l2767:
  5354                           
  5355                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5356  00148C  90D8               	bcf	status,0,c
  5357  00148E  3406               	rlcf	LED_Left@a,w,c
  5358  001490  6E06               	movwf	LED_Left@a,c
  5359  001492  3407               	rlcf	LED_Left@a+1,w,c
  5360  001494  6E07               	movwf	LED_Left@a+1,c
  5361                           
  5362                           ;LED.c: 179:         return a;
  5363  001496  C006  F006         	movff	LED_Left@a,?_LED_Left
  5364  00149A  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5365  00149E  0012               	return		;funcret
  5366  0014A0                     __end_of_LED_Left:
  5367                           	opt callstack 0
  5368                           
  5369 ;; *************** function _INI_All *****************
  5370 ;; Defined at:
  5371 ;;		line 52 in file "INI.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;		None
  5374 ;; Auto vars:     Size  Location     Type
  5375 ;;		None
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1    wreg      void 
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, status,0, cstack
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;Total ram usage:        0 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    5
  5392 ;; This function calls:
  5393 ;;		_CAN_Setup
  5394 ;;		_INI_GlobalInterrupt
  5395 ;;		_INI_LED_Start
  5396 ;;		_INI_OUTPUT
  5397 ;;		_INI_Timer
  5398 ;; This function is called by:
  5399 ;;		_main
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text42
  5404  001674                     __ptext42:
  5405                           	opt callstack 0
  5406  001674                     _INI_All:
  5407                           	opt callstack 25
  5408                           
  5409                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  5410                           
  5411                           ;incstack = 0
  5412  001674  80D1               	bsf	4049,0,c	;volatile
  5413  001676  0004               	clrwdt		;# 
  5414                           
  5415                           ;INI.c: 64:     INI_OUTPUT();
  5416  001678  EC2B  F00B         	call	_INI_OUTPUT	;wreg free
  5417                           
  5418                           ;INI.c: 66:     CAN_Setup();
  5419  00167C  ECE0  F008         	call	_CAN_Setup	;wreg free
  5420                           
  5421                           ;INI.c: 67:     INI_GlobalInterrupt();
  5422  001680  EC5A  F00B         	call	_INI_GlobalInterrupt	;wreg free
  5423                           
  5424                           ;INI.c: 69:     INI_Timer();
  5425  001684  EC47  F00B         	call	_INI_Timer	;wreg free
  5426                           
  5427                           ;INI.c: 71:     INI_LED_Start();
  5428  001688  ECA1  F00A         	call	_INI_LED_Start	;wreg free
  5429  00168C  0012               	return		;funcret
  5430  00168E                     __end_of_INI_All:
  5431                           	opt callstack 0
  5432                           
  5433 ;; *************** function _INI_Timer *****************
  5434 ;; Defined at:
  5435 ;;		line 92 in file "TMR1.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      unsigned char 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;Total ram usage:        0 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    3
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_INI_All
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text43
  5464  00168E                     __ptext43:
  5465                           	opt callstack 0
  5466  00168E                     _INI_Timer:
  5467                           	opt callstack 26
  5468                           
  5469                           ;TMR1.c: 96:     IRCF2 = 1;
  5470                           
  5471                           ;incstack = 0
  5472  00168E  8CD3               	bsf	4051,6,c	;volatile
  5473                           
  5474                           ;TMR1.c: 97:     IRCF1 = 1;
  5475  001690  8AD3               	bsf	4051,5,c	;volatile
  5476                           
  5477                           ;TMR1.c: 98:     IRCF0 = 1;
  5478  001692  88D3               	bsf	4051,4,c	;volatile
  5479                           
  5480                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5481  001694  0E3D               	movlw	61
  5482  001696  6ECD               	movwf	4045,c	;volatile
  5483                           
  5484                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5485  001698  0E9E               	movlw	158
  5486  00169A  6ECF               	movwf	4047,c	;volatile
  5487                           
  5488                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5489  00169C  0E57               	movlw	87
  5490  00169E  6ECE               	movwf	4046,c	;volatile
  5491                           
  5492                           ;TMR1.c: 102:     TMR1IE=1;
  5493  0016A0  809D               	bsf	3997,0,c	;volatile
  5494                           
  5495                           ;TMR1.c: 103:     TMR1ON = 1;
  5496  0016A2  80CD               	bsf	4045,0,c	;volatile
  5497  0016A4  0012               	return		;funcret
  5498  0016A6                     __end_of_INI_Timer:
  5499                           	opt callstack 0
  5500                           
  5501 ;; *************** function _INI_OUTPUT *****************
  5502 ;; Defined at:
  5503 ;;		line 27 in file "INI.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;Total ram usage:        0 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    3
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_INI_All
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text44
  5532  001656                     __ptext44:
  5533                           	opt callstack 0
  5534  001656                     _INI_OUTPUT:
  5535                           	opt callstack 26
  5536                           
  5537                           ;INI.c: 31:     LATA = 0;
  5538                           
  5539                           ;incstack = 0
  5540  001656  0E00               	movlw	0
  5541  001658  6E89               	movwf	3977,c	;volatile
  5542                           
  5543                           ;INI.c: 32:     LATB = 0;
  5544  00165A  0E00               	movlw	0
  5545  00165C  6E8A               	movwf	3978,c	;volatile
  5546                           
  5547                           ;INI.c: 33:     LATC = 0;
  5548  00165E  0E00               	movlw	0
  5549  001660  6E8B               	movwf	3979,c	;volatile
  5550                           
  5551                           ;INI.c: 34:     TRISA = 0x0C;
  5552  001662  0E0C               	movlw	12
  5553  001664  6E92               	movwf	3986,c	;volatile
  5554                           
  5555                           ;INI.c: 35:     TRISB = 0b10001000;
  5556  001666  0E88               	movlw	136
  5557  001668  6E93               	movwf	3987,c	;volatile
  5558                           
  5559                           ;INI.c: 36:     TRISC = 0xBF;
  5560  00166A  0EBF               	movlw	191
  5561  00166C  6E94               	movwf	3988,c	;volatile
  5562                           
  5563                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5564  00166E  8ED0               	bsf	4048,7,c	;volatile
  5565                           
  5566                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5567  001670  8634               	bsf	_DetectorLedRadar,3,c
  5568  001672  0012               	return		;funcret
  5569  001674                     __end_of_INI_OUTPUT:
  5570                           	opt callstack 0
  5571                           
  5572 ;; *************** function _INI_LED_Start *****************
  5573 ;; Defined at:
  5574 ;;		line 231 in file "LED.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;		None
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0, cstack
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5592 ;;Total ram usage:        0 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; Hardware stack levels required when called:    4
  5595 ;; This function calls:
  5596 ;;		_LED_Control
  5597 ;; This function is called by:
  5598 ;;		_INI_All
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text45
  5603  001542                     __ptext45:
  5604                           	opt callstack 0
  5605  001542                     _INI_LED_Start:
  5606                           	opt callstack 25
  5607                           
  5608                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5609                           
  5610                           ;incstack = 0
  5611  001542  5092               	movf	3986,w,c	;volatile
  5612  001544  0B01               	andlw	1
  5613  001546  6E92               	movwf	3986,c	;volatile
  5614                           
  5615                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5616  001548  5093               	movf	3987,w,c	;volatile
  5617  00154A  0BFC               	andlw	252
  5618  00154C  6E93               	movwf	3987,c	;volatile
  5619                           
  5620                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5621  00154E  5096               	movf	3990,w,c	;volatile
  5622  001550  0BF8               	andlw	248
  5623  001552  6E96               	movwf	3990,c	;volatile
  5624                           
  5625                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5626  001554  0E00               	movlw	0
  5627  001556  6E95               	movwf	3989,c	;volatile
  5628                           
  5629                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5630  001558  0E00               	movlw	0
  5631  00155A  6E07               	movwf	LED_Control@diode+1,c
  5632  00155C  0E00               	movlw	0
  5633  00155E  6E06               	movwf	LED_Control@diode,c
  5634  001560  0E00               	movlw	0
  5635  001562  ECAC  F004         	call	_LED_Control
  5636                           
  5637                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5638  001566  0E00               	movlw	0
  5639  001568  6E07               	movwf	LED_Control@diode+1,c
  5640  00156A  0E00               	movlw	0
  5641  00156C  6E06               	movwf	LED_Control@diode,c
  5642  00156E  0E01               	movlw	1
  5643  001570  ECAC  F004         	call	_LED_Control
  5644  001574  0012               	return		;funcret
  5645  001576                     __end_of_INI_LED_Start:
  5646                           	opt callstack 0
  5647                           
  5648 ;; *************** function _LED_Control *****************
  5649 ;; Defined at:
  5650 ;;		line 256 in file "LED.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  color           1    wreg     enum E10644
  5653 ;;  diode           2    5[COMRAM] unsigned int 
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;  color           1    9[COMRAM] enum E10644
  5656 ;;  cos             2    0        unsigned int 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      unsigned char 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5670 ;;Total ram usage:        5 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    3
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_LED_Error
  5677 ;;		_LED_Clear
  5678 ;;		_LED_Update
  5679 ;;		_LED_Light_Pos
  5680 ;;		_INI_LED_Start
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text46
  5685  000958                     __ptext46:
  5686                           	opt callstack 0
  5687  000958                     _LED_Control:
  5688                           	opt callstack 24
  5689                           
  5690                           ;incstack = 0
  5691                           ;LED_Control@color stored from wreg
  5692  000958  6E0A               	movwf	LED_Control@color,c
  5693                           
  5694                           ;LED.c: 259:     if(color == RED)
  5695  00095A  500A               	movf	LED_Control@color,w,c
  5696  00095C  A4D8               	btfss	status,2,c
  5697  00095E  D050               	goto	l321
  5698                           
  5699                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5700  000960  A006               	btfss	LED_Control@diode,0,c
  5701  000962  D003               	goto	l2395
  5702                           
  5703                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5704  000964  508C               	movf	3980,w,c	;volatile
  5705  000966  0910               	iorlw	16
  5706  000968  D002               	goto	L3
  5707  00096A                     l2395:
  5708                           
  5709                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5710  00096A  508C               	movf	3980,w,c	;volatile
  5711  00096C  0BEF               	andlw	239
  5712  00096E                     L3:
  5713  00096E  6E8C               	movwf	3980,c	;volatile
  5714                           
  5715                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5716  000970  A206               	btfss	LED_Control@diode,1,c
  5717  000972  D003               	goto	l2401
  5718                           
  5719                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5720  000974  508C               	movf	3980,w,c	;volatile
  5721  000976  0940               	iorlw	64
  5722  000978  D002               	goto	L4
  5723  00097A                     l2401:
  5724                           
  5725                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5726  00097A  508C               	movf	3980,w,c	;volatile
  5727  00097C  0BBF               	andlw	191
  5728  00097E                     L4:
  5729  00097E  6E8C               	movwf	3980,c	;volatile
  5730                           
  5731                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5732  000980  A406               	btfss	LED_Control@diode,2,c
  5733  000982  D003               	goto	l2407
  5734                           
  5735                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5736  000984  508A               	movf	3978,w,c	;volatile
  5737  000986  0901               	iorlw	1
  5738  000988  D002               	goto	L5
  5739  00098A                     l2407:
  5740                           
  5741                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5742  00098A  508A               	movf	3978,w,c	;volatile
  5743  00098C  0BFE               	andlw	254
  5744  00098E                     L5:
  5745  00098E  6E8A               	movwf	3978,c	;volatile
  5746                           
  5747                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5748  000990  A606               	btfss	LED_Control@diode,3,c
  5749  000992  D003               	goto	l2413
  5750                           
  5751                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5752  000994  5089               	movf	3977,w,c	;volatile
  5753  000996  0902               	iorlw	2
  5754  000998  D002               	goto	L6
  5755  00099A                     l2413:
  5756                           
  5757                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5758  00099A  5089               	movf	3977,w,c	;volatile
  5759  00099C  0BFD               	andlw	253
  5760  00099E                     L6:
  5761  00099E  6E89               	movwf	3977,c	;volatile
  5762                           
  5763                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5764  0009A0  A806               	btfss	LED_Control@diode,4,c
  5765  0009A2  D003               	goto	l2419
  5766                           
  5767                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5768  0009A4  5089               	movf	3977,w,c	;volatile
  5769  0009A6  0908               	iorlw	8
  5770  0009A8  D002               	goto	L7
  5771  0009AA                     l2419:
  5772                           
  5773                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5774  0009AA  5089               	movf	3977,w,c	;volatile
  5775  0009AC  0BF7               	andlw	247
  5776  0009AE                     L7:
  5777  0009AE  6E89               	movwf	3977,c	;volatile
  5778                           
  5779                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5780  0009B0  AA06               	btfss	LED_Control@diode,5,c
  5781  0009B2  D003               	goto	l2425
  5782                           
  5783                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5784  0009B4  5089               	movf	3977,w,c	;volatile
  5785  0009B6  0920               	iorlw	32
  5786  0009B8  D002               	goto	L8
  5787  0009BA                     l2425:
  5788                           
  5789                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5790  0009BA  5089               	movf	3977,w,c	;volatile
  5791  0009BC  0BDF               	andlw	223
  5792  0009BE                     L8:
  5793  0009BE  6E89               	movwf	3977,c	;volatile
  5794                           
  5795                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5796  0009C0  AC06               	btfss	LED_Control@diode,6,c
  5797  0009C2  D003               	goto	l2431
  5798                           
  5799                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5800  0009C4  508D               	movf	3981,w,c	;volatile
  5801  0009C6  0902               	iorlw	2
  5802  0009C8  D002               	goto	L9
  5803  0009CA                     l2431:
  5804                           
  5805                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  5806  0009CA  508D               	movf	3981,w,c	;volatile
  5807  0009CC  0BFD               	andlw	253
  5808  0009CE                     L9:
  5809  0009CE  6E8D               	movwf	3981,c	;volatile
  5810                           
  5811                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  5812  0009D0  AE06               	btfss	LED_Control@diode,7,c
  5813  0009D2  D003               	goto	l2437
  5814                           
  5815                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  5816  0009D4  5089               	movf	3977,w,c	;volatile
  5817  0009D6  0980               	iorlw	128
  5818  0009D8  D002               	goto	L10
  5819  0009DA                     l2437:
  5820                           
  5821                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  5822  0009DA  5089               	movf	3977,w,c	;volatile
  5823  0009DC  0B7F               	andlw	127
  5824  0009DE                     L10:
  5825  0009DE  6E89               	movwf	3977,c	;volatile
  5826                           
  5827                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  5828  0009E0  A007               	btfss	LED_Control@diode+1,0,c
  5829  0009E2  D003               	goto	l2443
  5830                           
  5831                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  5832  0009E4  508C               	movf	3980,w,c	;volatile
  5833  0009E6  0901               	iorlw	1
  5834  0009E8  D002               	goto	L11
  5835  0009EA                     l2443:
  5836                           
  5837                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  5838  0009EA  508C               	movf	3980,w,c	;volatile
  5839  0009EC  0BFE               	andlw	254
  5840  0009EE                     L11:
  5841  0009EE  6E8C               	movwf	3980,c	;volatile
  5842                           
  5843                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  5844  0009F0  A207               	btfss	LED_Control@diode+1,1,c
  5845  0009F2  D003               	goto	l2449
  5846                           
  5847                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  5848  0009F4  508C               	movf	3980,w,c	;volatile
  5849  0009F6  0904               	iorlw	4
  5850  0009F8  D002               	goto	L12
  5851  0009FA                     l2449:
  5852                           
  5853                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  5854  0009FA  508C               	movf	3980,w,c	;volatile
  5855  0009FC  0BFB               	andlw	251
  5856  0009FE                     L12:
  5857  0009FE  6E8C               	movwf	3980,c	;volatile
  5858  000A00                     l321:
  5859                           
  5860                           ;LED.c: 358:     if(color == GREEN)
  5861  000A00  040A               	decf	LED_Control@color,w,c
  5862  000A02  A4D8               	btfss	status,2,c
  5863  000A04  0012               	return	
  5864                           
  5865                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  5866  000A06  A006               	btfss	LED_Control@diode,0,c
  5867  000A08  D003               	goto	l2455
  5868                           
  5869                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  5870  000A0A  508C               	movf	3980,w,c	;volatile
  5871  000A0C  0920               	iorlw	32
  5872  000A0E  D002               	goto	L13
  5873  000A10                     l2455:
  5874                           
  5875                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  5876  000A10  508C               	movf	3980,w,c	;volatile
  5877  000A12  0BDF               	andlw	223
  5878  000A14                     L13:
  5879  000A14  6E8C               	movwf	3980,c	;volatile
  5880                           
  5881                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  5882  000A16  A206               	btfss	LED_Control@diode,1,c
  5883  000A18  D003               	goto	l2461
  5884                           
  5885                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  5886  000A1A  508C               	movf	3980,w,c	;volatile
  5887  000A1C  0980               	iorlw	128
  5888  000A1E  D002               	goto	L14
  5889  000A20                     l2461:
  5890                           
  5891                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  5892  000A20  508C               	movf	3980,w,c	;volatile
  5893  000A22  0B7F               	andlw	127
  5894  000A24                     L14:
  5895  000A24  6E8C               	movwf	3980,c	;volatile
  5896                           
  5897                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  5898  000A26  A406               	btfss	LED_Control@diode,2,c
  5899  000A28  D003               	goto	l2467
  5900                           
  5901                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  5902  000A2A  508A               	movf	3978,w,c	;volatile
  5903  000A2C  0902               	iorlw	2
  5904  000A2E  D002               	goto	L15
  5905  000A30                     l2467:
  5906                           
  5907                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  5908  000A30  508A               	movf	3978,w,c	;volatile
  5909  000A32  0BFD               	andlw	253
  5910  000A34                     L15:
  5911  000A34  6E8A               	movwf	3978,c	;volatile
  5912                           
  5913                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  5914  000A36  A606               	btfss	LED_Control@diode,3,c
  5915  000A38  D003               	goto	l2473
  5916                           
  5917                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  5918  000A3A  5089               	movf	3977,w,c	;volatile
  5919  000A3C  0904               	iorlw	4
  5920  000A3E  D002               	goto	L16
  5921  000A40                     l2473:
  5922                           
  5923                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  5924  000A40  5089               	movf	3977,w,c	;volatile
  5925  000A42  0BFB               	andlw	251
  5926  000A44                     L16:
  5927  000A44  6E89               	movwf	3977,c	;volatile
  5928                           
  5929                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  5930  000A46  A806               	btfss	LED_Control@diode,4,c
  5931  000A48  D003               	goto	l2479
  5932                           
  5933                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  5934  000A4A  5089               	movf	3977,w,c	;volatile
  5935  000A4C  0910               	iorlw	16
  5936  000A4E  D002               	goto	L17
  5937  000A50                     l2479:
  5938                           
  5939                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  5940  000A50  5089               	movf	3977,w,c	;volatile
  5941  000A52  0BEF               	andlw	239
  5942  000A54                     L17:
  5943  000A54  6E89               	movwf	3977,c	;volatile
  5944                           
  5945                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  5946  000A56  AA06               	btfss	LED_Control@diode,5,c
  5947  000A58  D003               	goto	l2485
  5948                           
  5949                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  5950  000A5A  508D               	movf	3981,w,c	;volatile
  5951  000A5C  0901               	iorlw	1
  5952  000A5E  D002               	goto	L18
  5953  000A60                     l2485:
  5954                           
  5955                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  5956  000A60  508D               	movf	3981,w,c	;volatile
  5957  000A62  0BFE               	andlw	254
  5958  000A64                     L18:
  5959  000A64  6E8D               	movwf	3981,c	;volatile
  5960                           
  5961                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  5962  000A66  AC06               	btfss	LED_Control@diode,6,c
  5963  000A68  D003               	goto	l2491
  5964                           
  5965                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  5966  000A6A  508D               	movf	3981,w,c	;volatile
  5967  000A6C  0904               	iorlw	4
  5968  000A6E  D002               	goto	L19
  5969  000A70                     l2491:
  5970                           
  5971                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  5972  000A70  508D               	movf	3981,w,c	;volatile
  5973  000A72  0BFB               	andlw	251
  5974  000A74                     L19:
  5975  000A74  6E8D               	movwf	3981,c	;volatile
  5976                           
  5977                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  5978  000A76  AE06               	btfss	LED_Control@diode,7,c
  5979  000A78  D003               	goto	l2497
  5980                           
  5981                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  5982  000A7A  5089               	movf	3977,w,c	;volatile
  5983  000A7C  0940               	iorlw	64
  5984  000A7E  D002               	goto	L20
  5985  000A80                     l2497:
  5986                           
  5987                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  5988  000A80  5089               	movf	3977,w,c	;volatile
  5989  000A82  0BBF               	andlw	191
  5990  000A84                     L20:
  5991  000A84  6E89               	movwf	3977,c	;volatile
  5992                           
  5993                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  5994  000A86  A007               	btfss	LED_Control@diode+1,0,c
  5995  000A88  D003               	goto	l2503
  5996                           
  5997                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  5998  000A8A  508C               	movf	3980,w,c	;volatile
  5999  000A8C  0902               	iorlw	2
  6000  000A8E  D002               	goto	L21
  6001  000A90                     l2503:
  6002                           
  6003                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  6004  000A90  508C               	movf	3980,w,c	;volatile
  6005  000A92  0BFD               	andlw	253
  6006  000A94                     L21:
  6007  000A94  6E8C               	movwf	3980,c	;volatile
  6008                           
  6009                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  6010  000A96  A207               	btfss	LED_Control@diode+1,1,c
  6011  000A98  D004               	goto	l2509
  6012                           
  6013                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  6014  000A9A  508C               	movf	3980,w,c	;volatile
  6015  000A9C  0908               	iorlw	8
  6016  000A9E  6E8C               	movwf	3980,c	;volatile
  6017                           
  6018                           ;LED.c: 450:         }
  6019  000AA0  0012               	return	
  6020  000AA2                     l2509:
  6021                           
  6022                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  6023  000AA2  508C               	movf	3980,w,c	;volatile
  6024  000AA4  0BF7               	andlw	247
  6025  000AA6  6E8C               	movwf	3980,c	;volatile
  6026  000AA8  0012               	return		;funcret
  6027  000AAA                     __end_of_LED_Control:
  6028                           	opt callstack 0
  6029                           
  6030 ;; *************** function _INI_GlobalInterrupt *****************
  6031 ;; Defined at:
  6032 ;;		line 74 in file "INI.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;		None
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1    wreg      void 
  6039 ;; Registers used:
  6040 ;;		None
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;Total ram usage:        0 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    3
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_INI_All
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text47
  6061  0016B4                     __ptext47:
  6062                           	opt callstack 0
  6063  0016B4                     _INI_GlobalInterrupt:
  6064                           	opt callstack 26
  6065                           
  6066                           ;INI.c: 76: INTCONbits.GIEH=1;
  6067                           
  6068                           ;incstack = 0
  6069  0016B4  8EF2               	bsf	4082,7,c	;volatile
  6070                           
  6071                           ;INI.c: 77: INTCONbits.GIEL=1;
  6072  0016B6  8CF2               	bsf	4082,6,c	;volatile
  6073                           
  6074                           ;INI.c: 78: RCONbits.IPEN=1;
  6075  0016B8  8ED0               	bsf	4048,7,c	;volatile
  6076                           
  6077                           ;INI.c: 79: IPEN =1;
  6078  0016BA  8ED0               	bsf	4048,7,c	;volatile
  6079                           
  6080                           ;INI.c: 81: PEIE=1;
  6081  0016BC  8CF2               	bsf	4082,6,c	;volatile
  6082                           
  6083                           ;INI.c: 82: TMR1IP = 0;
  6084  0016BE  909F               	bcf	3999,0,c	;volatile
  6085  0016C0  0012               	return		;funcret
  6086  0016C2                     __end_of_INI_GlobalInterrupt:
  6087                           	opt callstack 0
  6088                           
  6089 ;; *************** function _CAN_Setup *****************
  6090 ;; Defined at:
  6091 ;;		line 23 in file "CAN.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;		None
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;Total ram usage:        1 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    4
  6112 ;; This function calls:
  6113 ;;		_CAN_SetupClock
  6114 ;;		_CAN_SetupMask
  6115 ;; This function is called by:
  6116 ;;		_INI_All
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text48
  6121  0011C0                     __ptext48:
  6122                           	opt callstack 0
  6123  0011C0                     _CAN_Setup:
  6124                           	opt callstack 25
  6125                           
  6126                           ;CAN.c: 28:     CANCON = 0x80;
  6127                           
  6128                           ;incstack = 0
  6129  0011C0  0E80               	movlw	128
  6130  0011C2  6E6F               	movwf	3951,c	;volatile
  6131  0011C4                     l2981:
  6132                           
  6133                           ;CAN.c: 29:     while((CANSTAT & 0xE0)!=0x80)
  6134  0011C4  506E               	movf	3950,w,c	;volatile
  6135  0011C6  0BE0               	andlw	224
  6136  0011C8  0A80               	xorlw	128
  6137  0011CA  A4D8               	btfss	status,2,c
  6138  0011CC  D7FB               	goto	l2981
  6139                           
  6140                           ;CAN.c: 34:     BSEL0 = 0;
  6141  0011CE  0E00               	movlw	0
  6142  0011D0  010D               	movlb	13	; () banked
  6143  0011D2  6FF8               	movwf	248,b	;volatile
  6144                           
  6145                           ;CAN.c: 35:     TXB0CON = 0;
  6146  0011D4  0E00               	movlw	0
  6147  0011D6  010F               	movlb	15	; () banked
  6148  0011D8  6F40               	movwf	64,b	;volatile
  6149                           
  6150                           ;CAN.c: 36:     RXB0CON = 0;
  6151  0011DA  0E00               	movlw	0
  6152  0011DC  6E60               	movwf	3936,c	;volatile
  6153                           
  6154                           ;CAN.c: 37:     RXB1CON = 0;
  6155  0011DE  0E00               	movlw	0
  6156  0011E0  6F50               	movwf	80,b	;volatile
  6157                           
  6158                           ;CAN.c: 38:     B0CON = 0;
  6159  0011E2  0E00               	movlw	0
  6160  0011E4  010E               	movlb	14	; () banked
  6161  0011E6  6F20               	movwf	32,b	;volatile
  6162                           
  6163                           ;CAN.c: 39:     B1CON = 0;
  6164  0011E8  0E00               	movlw	0
  6165  0011EA  6F30               	movwf	48,b	;volatile
  6166                           
  6167                           ;CAN.c: 40:     PIE3 = 0;
  6168  0011EC  0E00               	movlw	0
  6169  0011EE  6EA3               	movwf	4003,c	;volatile
  6170                           
  6171                           ; BSR set to: 14
  6172                           ;CAN.c: 41:     IPR3 = 0xFF;
  6173  0011F0  68A5               	setf	4005,c	;volatile
  6174                           
  6175                           ;CAN.c: 42:     PIR3 = 0x00;
  6176  0011F2  0E00               	movlw	0
  6177  0011F4  6EA4               	movwf	4004,c	;volatile
  6178                           
  6179                           ;CAN.c: 43:     BIE0 = 0;
  6180  0011F6  0E00               	movlw	0
  6181  0011F8  010D               	movlb	13	; () banked
  6182  0011FA  6FFA               	movwf	250,b	;volatile
  6183                           
  6184                           ;CAN.c: 46:     ECANCON = 0x90;
  6185  0011FC  0E90               	movlw	144
  6186  0011FE  6E77               	movwf	3959,c	;volatile
  6187                           
  6188                           ; BSR set to: 13
  6189                           ;CAN.c: 49:     CAN_SetupClock();
  6190  001200  ECE7  F00A         	call	_CAN_SetupClock	;wreg free
  6191                           
  6192                           ;CAN.c: 52:     CAN_SetupMask();
  6193  001204  EC71  F007         	call	_CAN_SetupMask	;wreg free
  6194                           
  6195                           ;CAN.c: 54:     CIOCON = 0xff;
  6196  001208  6873               	setf	3955,c	;volatile
  6197                           
  6198                           ;CAN.c: 60:     CANCON = 0x00;
  6199  00120A  0E00               	movlw	0
  6200  00120C  6E6F               	movwf	3951,c	;volatile
  6201  00120E                     l2995:
  6202                           
  6203                           ;CAN.c: 61:     while((CANSTAT & 0xE0) != 0x00)
  6204  00120E  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  6205  001212  0EE0               	movlw	224
  6206  001214  1606               	andwf	??_CAN_Setup,f,c
  6207  001216  B4D8               	btfsc	status,2,c
  6208  001218  0012               	return	
  6209  00121A  D7F9               	goto	l2995
  6210  00121C                     __end_of_CAN_Setup:
  6211                           	opt callstack 0
  6212                           
  6213 ;; *************** function _CAN_SetupMask *****************
  6214 ;; Defined at:
  6215 ;;		line 82 in file "CAN.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      void 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;Total ram usage:        0 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; Hardware stack levels required when called:    3
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_CAN_Setup
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text49
  6244  000EE2                     __ptext49:
  6245                           	opt callstack 0
  6246  000EE2                     _CAN_SetupMask:
  6247                           	opt callstack 25
  6248                           
  6249                           ;CAN.c: 84:     MSEL0 = 0x50;
  6250                           
  6251                           ;incstack = 0
  6252  000EE2  0E50               	movlw	80
  6253  000EE4  010D               	movlb	13	; () banked
  6254  000EE6  6FF0               	movwf	240,b	;volatile
  6255                           
  6256                           ;CAN.c: 85:     MSEL1 = 0x55;
  6257  000EE8  0E55               	movlw	85
  6258  000EEA  6FF1               	movwf	241,b	;volatile
  6259                           
  6260                           ;CAN.c: 86:     MSEL2 = 0x55;
  6261  000EEC  0E55               	movlw	85
  6262  000EEE  6FF2               	movwf	242,b	;volatile
  6263                           
  6264                           ;CAN.c: 87:     MSEL3 = 0x55;
  6265  000EF0  0E55               	movlw	85
  6266  000EF2  6FF3               	movwf	243,b	;volatile
  6267                           
  6268                           ;CAN.c: 90:     RXM0SIDH = 0b00000000;
  6269  000EF4  0E00               	movlw	0
  6270  000EF6  010F               	movlb	15	; () banked
  6271  000EF8  6F18               	movwf	24,b	;volatile
  6272                           
  6273                           ;CAN.c: 91:     RXM0SIDL = 0b00001011;
  6274  000EFA  0E0B               	movlw	11
  6275  000EFC  6F19               	movwf	25,b	;volatile
  6276                           
  6277                           ; BSR set to: 15
  6278                           ;CAN.c: 92:     RXM0EIDH = 0xFF;
  6279  000EFE  691A               	setf	26,b	;volatile
  6280                           
  6281                           ; BSR set to: 15
  6282                           ;CAN.c: 93:     RXM0EIDL = 0xFF;
  6283  000F00  691B               	setf	27,b	;volatile
  6284                           
  6285                           ; BSR set to: 15
  6286                           ;CAN.c: 96:     RXM1SIDH = 0xFF;
  6287  000F02  691C               	setf	28,b	;volatile
  6288                           
  6289                           ; BSR set to: 15
  6290                           ;CAN.c: 97:     RXM1SIDL = 0xFF;
  6291  000F04  691D               	setf	29,b	;volatile
  6292                           
  6293                           ;CAN.c: 98:     RXM1EIDH = 0;
  6294  000F06  0E00               	movlw	0
  6295  000F08  6F1E               	movwf	30,b	;volatile
  6296                           
  6297                           ;CAN.c: 99:     RXM1EIDL = 0;
  6298  000F0A  0E00               	movlw	0
  6299  000F0C  6F1F               	movwf	31,b	;volatile
  6300                           
  6301                           ;CAN.c: 102:     RXM0SIDH = 0x00;
  6302  000F0E  0E00               	movlw	0
  6303  000F10  6F18               	movwf	24,b	;volatile
  6304                           
  6305                           ;CAN.c: 103:     RXM0SIDL = 0x00;
  6306  000F12  0E00               	movlw	0
  6307  000F14  6F19               	movwf	25,b	;volatile
  6308                           
  6309                           ;CAN.c: 104:     RXM0EIDH = 0;
  6310  000F16  0E00               	movlw	0
  6311  000F18  6F1A               	movwf	26,b	;volatile
  6312                           
  6313                           ;CAN.c: 105:     RXM0EIDL = 0;
  6314  000F1A  0E00               	movlw	0
  6315  000F1C  6F1B               	movwf	27,b	;volatile
  6316                           
  6317                           ;CAN.c: 108:     RXF0SIDH = 0x00;
  6318  000F1E  0E00               	movlw	0
  6319  000F20  6F00               	movwf	0,b	;volatile
  6320                           
  6321                           ;CAN.c: 109:     RXF0SIDL = 0x01;
  6322  000F22  0E01               	movlw	1
  6323  000F24  6F01               	movwf	1,b	;volatile
  6324                           
  6325                           ; BSR set to: 15
  6326                           ;CAN.c: 110:     RXF0SIDLbits.EXIDEN = 1;
  6327  000F26  8701               	bsf	1,3,b	;volatile
  6328                           
  6329                           ;CAN.c: 111:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  6330  000F28  5033               	movf	_DaneCan+3,w,c
  6331  000F2A  6F02               	movwf	2,b	;volatile
  6332                           
  6333                           ; BSR set to: 15
  6334                           ;CAN.c: 112:  RXF0EIDH |= 0x40;
  6335  000F2C  8D02               	bsf	2,6,b	;volatile
  6336                           
  6337                           ; BSR set to: 15
  6338                           ;CAN.c: 113:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  6339  000F2E  C032  FF03         	movff	_DaneCan+2,3843	;volatile
  6340                           
  6341                           ; BSR set to: 15
  6342                           ;CAN.c: 115:     RXF1SIDH = 0x00;
  6343  000F32  0E00               	movlw	0
  6344  000F34  6F04               	movwf	4,b	;volatile
  6345                           
  6346                           ; BSR set to: 15
  6347                           ;CAN.c: 116:     RXF1SIDL = 0x01;
  6348  000F36  0E01               	movlw	1
  6349  000F38  6F05               	movwf	5,b	;volatile
  6350                           
  6351                           ; BSR set to: 15
  6352                           ;CAN.c: 117:     RXF1SIDLbits.EXIDEN = 1;
  6353  000F3A  8705               	bsf	5,3,b	;volatile
  6354                           
  6355                           ; BSR set to: 15
  6356                           ;CAN.c: 118:     RXF1EIDH = 0x7F;
  6357  000F3C  0E7F               	movlw	127
  6358  000F3E  6F06               	movwf	6,b	;volatile
  6359                           
  6360                           ; BSR set to: 15
  6361                           ;CAN.c: 119:     RXF1EIDL = 0xFF;
  6362  000F40  6907               	setf	7,b	;volatile
  6363                           
  6364                           ; BSR set to: 15
  6365                           ;CAN.c: 122:     RXF2SIDH = 0;
  6366  000F42  0E00               	movlw	0
  6367  000F44  6F08               	movwf	8,b	;volatile
  6368                           
  6369                           ; BSR set to: 15
  6370                           ;CAN.c: 123:     RXF2SIDL = 0x20;
  6371  000F46  0E20               	movlw	32
  6372  000F48  6F09               	movwf	9,b	;volatile
  6373                           
  6374                           ; BSR set to: 15
  6375                           ;CAN.c: 124:     RXF2SIDLbits.EXIDEN = 1;
  6376  000F4A  8709               	bsf	9,3,b	;volatile
  6377                           
  6378                           ; BSR set to: 15
  6379                           ;CAN.c: 125:     RXF2EIDH = 0;
  6380  000F4C  0E00               	movlw	0
  6381  000F4E  6F0A               	movwf	10,b	;volatile
  6382                           
  6383                           ; BSR set to: 15
  6384                           ;CAN.c: 126:     RXF2EIDL = 0;
  6385  000F50  0E00               	movlw	0
  6386  000F52  6F0B               	movwf	11,b	;volatile
  6387                           
  6388                           ; BSR set to: 15
  6389                           ;CAN.c: 129:     RXF3SIDH = 0x00;
  6390  000F54  0E00               	movlw	0
  6391  000F56  6F0C               	movwf	12,b	;volatile
  6392                           
  6393                           ; BSR set to: 15
  6394                           ;CAN.c: 130:     RXF3SIDL = 0x00;
  6395  000F58  0E00               	movlw	0
  6396  000F5A  6F0D               	movwf	13,b	;volatile
  6397                           
  6398                           ; BSR set to: 15
  6399                           ;CAN.c: 131:     RXF3EIDH = 0x00;
  6400  000F5C  0E00               	movlw	0
  6401  000F5E  6F0E               	movwf	14,b	;volatile
  6402                           
  6403                           ; BSR set to: 15
  6404                           ;CAN.c: 132:  RXF3EIDH |= 0x00;
  6405  000F60  510E               	movf	14,w,b	;volatile
  6406                           
  6407                           ; BSR set to: 15
  6408                           ;CAN.c: 133:     RXF3EIDL = 0x00;
  6409  000F62  0E00               	movlw	0
  6410  000F64  6F0F               	movwf	15,b	;volatile
  6411                           
  6412                           ; BSR set to: 15
  6413                           ;CAN.c: 140:     RXFCON0 = 0x0F;
  6414  000F66  0E0F               	movlw	15
  6415  000F68  010D               	movlb	13	; () banked
  6416  000F6A  6FD4               	movwf	212,b	;volatile
  6417                           
  6418                           ; BSR set to: 13
  6419  000F6C  0012               	return		;funcret
  6420  000F6E                     __end_of_CAN_SetupMask:
  6421                           	opt callstack 0
  6422                           
  6423 ;; *************** function _CAN_SetupClock *****************
  6424 ;; Defined at:
  6425 ;;		line 149 in file "CAN.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		None
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    3
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_CAN_Setup
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text50
  6454  0015CE                     __ptext50:
  6455                           	opt callstack 0
  6456  0015CE                     _CAN_SetupClock:
  6457                           	opt callstack 25
  6458                           
  6459                           ;CAN.c: 151:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6460                           
  6461                           ; BSR set to: 13
  6462                           ;incstack = 0
  6463  0015CE  8070               	bsf	3952,0,c	;volatile
  6464                           
  6465                           ;CAN.c: 152:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6466  0015D0  8270               	bsf	3952,1,c	;volatile
  6467                           
  6468                           ;CAN.c: 153:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6469  0015D2  9470               	bcf	3952,2,c	;volatile
  6470                           
  6471                           ;CAN.c: 154:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6472  0015D4  9670               	bcf	3952,3,c	;volatile
  6473                           
  6474                           ;CAN.c: 155:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6475  0015D6  9870               	bcf	3952,4,c	;volatile
  6476                           
  6477                           ;CAN.c: 156:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6478  0015D8  9A70               	bcf	3952,5,c	;volatile
  6479                           
  6480                           ;CAN.c: 158:     BRGCON1bits.SJW0 = 1;
  6481  0015DA  8C70               	bsf	3952,6,c	;volatile
  6482                           
  6483                           ;CAN.c: 159:     BRGCON1bits.SJW1 = 1;
  6484  0015DC  8E70               	bsf	3952,7,c	;volatile
  6485                           
  6486                           ;CAN.c: 161:     BRGCON2bits.SEG1PH0 = 1;
  6487  0015DE  8671               	bsf	3953,3,c	;volatile
  6488                           
  6489                           ;CAN.c: 162:     BRGCON2bits.SEG1PH1 = 1;
  6490  0015E0  8871               	bsf	3953,4,c	;volatile
  6491                           
  6492                           ;CAN.c: 163:     BRGCON2bits.SEG1PH2 = 1;
  6493  0015E2  8A71               	bsf	3953,5,c	;volatile
  6494                           
  6495                           ;CAN.c: 165:     BRGCON2bits.PRSEG2 = 1;
  6496  0015E4  8471               	bsf	3953,2,c	;volatile
  6497                           
  6498                           ;CAN.c: 166:     BRGCON2bits.PRSEG1 = 0;
  6499  0015E6  9271               	bcf	3953,1,c	;volatile
  6500                           
  6501                           ;CAN.c: 167:     BRGCON2bits.PRSEG0 = 0;
  6502  0015E8  9071               	bcf	3953,0,c	;volatile
  6503                           
  6504                           ;CAN.c: 169:     BRGCON3bits.SEG2PH0 = 1;
  6505  0015EA  8072               	bsf	3954,0,c	;volatile
  6506                           
  6507                           ;CAN.c: 170:     BRGCON3bits.SEG2PH1 = 0;
  6508  0015EC  9272               	bcf	3954,1,c	;volatile
  6509                           
  6510                           ;CAN.c: 171:     BRGCON3bits.SEG2PH2 = 1;
  6511  0015EE  8472               	bsf	3954,2,c	;volatile
  6512                           
  6513                           ;CAN.c: 173:     BRGCON2bits.SAM = 1;
  6514  0015F0  8C71               	bsf	3953,6,c	;volatile
  6515                           
  6516                           ;CAN.c: 174:     BRGCON2bits.SEG2PHTS = 1;
  6517  0015F2  8E71               	bsf	3953,7,c	;volatile
  6518  0015F4  0012               	return		;funcret
  6519  0015F6                     __end_of_CAN_SetupClock:
  6520                           	opt callstack 0
  6521                           
  6522 ;; *************** function _ISR_low *****************
  6523 ;; Defined at:
  6524 ;;		line 16 in file "ISR.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;		None
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;		None
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  1    wreg      void 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;Total ram usage:        3 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    2
  6545 ;; This function calls:
  6546 ;;		_TMR1_Timer_reset
  6547 ;;		i1_TMR1_Update_flag_Set
  6548 ;; This function is called by:
  6549 ;;		Interrupt level 1
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	intcodelo
  6554  000018                     __pintcodelo:
  6555                           	opt callstack 0
  6556  000018                     _ISR_low:
  6557                           	opt callstack 23
  6558                           
  6559                           ;incstack = 0
  6560  000018  8059               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6561  00001A  CFD8 F003          	movff	status,??_ISR_low
  6562  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  6563  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  6564                           
  6565                           ;ISR.c: 21:     if(TMR1IF==1)
  6566  000026  A09E               	btfss	3998,0,c	;volatile
  6567  000028  D011               	goto	i1l637
  6568                           
  6569                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6570  00002A  ECFB  F00A         	call	_TMR1_Timer_reset	;wreg free
  6571                           
  6572                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6573  00002E  0E00               	movlw	0
  6574  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6575  000032  0E01               	movlw	1
  6576  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  6577  000036  EC89  F00B         	call	i1_TMR1_Update_flag_Set	;wreg free
  6578                           
  6579                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6580  00003A  8034               	bsf	_DetectorLedRadar,0,c
  6581                           
  6582                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6583  00003C  2A4D               	incf	ISR_low@ramkaStanuU8,f,c
  6584  00003E  0E14               	movlw	20
  6585  000040  644D               	cpfsgt	ISR_low@ramkaStanuU8,c
  6586  000042  D003               	goto	i1l3271
  6587                           
  6588                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6589  000044  0E00               	movlw	0
  6590  000046  6E4D               	movwf	ISR_low@ramkaStanuU8,c
  6591                           
  6592                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6593  000048  8030               	bsf	_DaneCan,0,c
  6594  00004A                     i1l3271:
  6595                           
  6596                           ;ISR.c: 41:             TMR1IF=0;
  6597  00004A  909E               	bcf	3998,0,c	;volatile
  6598  00004C                     i1l637:
  6599  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  6600  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  6601  000054  C003  FFD8         	movff	??_ISR_low,status
  6602  000058  9059               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6603  00005A  0010               	retfie	
  6604  00005C                     __end_of_ISR_low:
  6605                           	opt callstack 0
  6606                           
  6607 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6608 ;; Defined at:
  6609 ;;		line 32 in file "TMR1.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  a               2    0[COMRAM] unsigned int 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;		None
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  1    wreg      void 
  6616 ;; Registers used:
  6617 ;;		None
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;Total ram usage:        2 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    1
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_ISR_low
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text52
  6638  001712                     __ptext52:
  6639                           	opt callstack 0
  6640  001712                     i1_TMR1_Update_flag_Set:
  6641                           	opt callstack 23
  6642                           
  6643                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6644                           
  6645                           ;incstack = 0
  6646  001712  C001  F047         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6647  001716  C002  F048         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6648  00171A  0012               	return		;funcret
  6649  00171C                     __end_ofi1_TMR1_Update_flag_Set:
  6650                           	opt callstack 0
  6651                           
  6652 ;; *************** function _TMR1_Timer_reset *****************
  6653 ;; Defined at:
  6654 ;;		line 63 in file "TMR1.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6659 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      unsigned char 
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;Total ram usage:        2 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    1
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_ISR_low
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text53
  6684  0015F6                     __ptext53:
  6685                           	opt callstack 0
  6686  0015F6                     _TMR1_Timer_reset:
  6687                           	opt callstack 23
  6688                           
  6689                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6690                           
  6691                           ;incstack = 0
  6692  0015F6  0E00               	movlw	0
  6693  0015F8  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6694  0015FA  0E00               	movlw	0
  6695  0015FC  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6696                           
  6697                           ;TMR1.c: 70:     t1L = TMR1L;
  6698  0015FE  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6699                           
  6700                           ;TMR1.c: 71:     t1H = TMR1H;
  6701  001602  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6702                           
  6703                           ;TMR1.c: 72:     __nop();
  6704  001606  F000               	nop	
  6705                           
  6706                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6707  001608  0E9E               	movlw	158
  6708  00160A  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6709                           
  6710                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6711  00160C  0E57               	movlw	87
  6712  00160E  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6713                           
  6714                           ;TMR1.c: 75:     TMR1H = t1H;
  6715  001610  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6716                           
  6717                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6718  001614  0E5B               	movlw	91
  6719  001616  6ECE               	movwf	4046,c	;volatile
  6720  001618  0012               	return		;funcret
  6721  00161A                     __end_of_TMR1_Timer_reset:
  6722                           	opt callstack 0
  6723                           
  6724 ;; *************** function _ISR_high *****************
  6725 ;; Defined at:
  6726 ;;		line 53 in file "ISR.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;		None
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      void 
  6733 ;; Registers used:
  6734 ;;		None
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;Total ram usage:        0 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		Interrupt level 2
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	intcode
  6754  000008                     __pintcode:
  6755                           	opt callstack 0
  6756  000008                     _ISR_high:
  6757                           	opt callstack 23
  6758                           
  6759                           ;incstack = 0
  6760  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6761  00000A  ED9B  F00B         	call	int_func,f	;refresh shadow registers
  6762                           
  6763                           	psect	intcode_body
  6764  001736                     __pintcode_body:
  6765                           	opt callstack 23
  6766  001736                     int_func:
  6767                           	opt callstack 23
  6768  001736  0006               	pop		; remove dummy address from shadow register refresh
  6769  001738  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6770  00173A  0011               	retfie		f
  6771  00173C                     __end_of_ISR_high:
  6772                           	opt callstack 0
  6773  0000                     
  6774                           	psect	rparam
  6775  0000                     
  6776                           	psect	temp
  6777  000059                     btemp:
  6778                           	opt callstack 0
  6779  000059                     	ds	1
  6780  0000                     int$flags	set	btemp
  6781  0000                     wtemp8	set	btemp+1
  6782  0000                     ttemp5	set	btemp+1
  6783  0000                     ttemp6	set	btemp+4
  6784  0000                     ttemp7	set	btemp+8
  6785                           tosu	equ	0xFFF
  6786                           tosh	equ	0xFFE
  6787                           tosl	equ	0xFFD
  6788                           stkptr	equ	0xFFC
  6789                           pclatu	equ	0xFFB
  6790                           pclath	equ	0xFFA
  6791                           pcl	equ	0xFF9
  6792                           tblptru	equ	0xFF8
  6793                           tblptrh	equ	0xFF7
  6794                           tblptrl	equ	0xFF6
  6795                           tablat	equ	0xFF5
  6796                           prodh	equ	0xFF4
  6797                           prodl	equ	0xFF3
  6798                           indf0	equ	0xFEF
  6799                           postinc0	equ	0xFEE
  6800                           postdec0	equ	0xFED
  6801                           preinc0	equ	0xFEC
  6802                           plusw0	equ	0xFEB
  6803                           fsr0h	equ	0xFEA
  6804                           fsr0l	equ	0xFE9
  6805                           wreg	equ	0xFE8
  6806                           indf1	equ	0xFE7
  6807                           postinc1	equ	0xFE6
  6808                           postdec1	equ	0xFE5
  6809                           preinc1	equ	0xFE4
  6810                           plusw1	equ	0xFE3
  6811                           fsr1h	equ	0xFE2
  6812                           fsr1l	equ	0xFE1
  6813                           bsr	equ	0xFE0
  6814                           indf2	equ	0xFDF
  6815                           postinc2	equ	0xFDE
  6816                           postdec2	equ	0xFDD
  6817                           preinc2	equ	0xFDC
  6818                           plusw2	equ	0xFDB
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      88
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 0

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 0

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_SensorExcitationStatus
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_Plot->___lwdiv
    _FRAME_DeviceReset->_FRAME_DataUpdateAndChangeOption
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21445
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   14220
                                             25 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   12183
                                             16 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     235
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2    3540
                                             10 COMRAM     6     4      2
                      _IsInNeighbors
                          _LED_Clear
                          _LED_Error
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     279
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     279
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     743
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     668
                                              8 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     191
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1227
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     360
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LED_Clear
           _LED_Control
         _LED_Error
           _LED_Control
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0      66       6       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      58       1       93.6%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE       3        0.0%
DATA                 0      0     2DE       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 24 12:50:08 2019

                __end_of_FRAME_DeviceReset 0BE6                      ?_FRAME_AveragingTimes 0006  
                             ___awdiv@sign 000B                                         bsr 000FE0  
                              __CFG_BORV$3 000000                          ?_FRAME_AxisStatus 0006  
                        _FRAME_MapPosition 1740                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                         __size_of_CAN_GenID 0094  
                                      l200 037C                                        l201 0382  
                                      l202 0388                                        l203 038E  
                                      l204 0394                                        l205 039A  
                                      l206 03A0                                        l321 0A00  
                                      l190 0804                                        l293 1042  
                                      l189 0806                                        l198 0376  
                                      l199 03E6                                ?_LED_Update 0001  
                                      l570 07E4                                        l467 0CFE  
                                      l571 07DC                               __CFG_CPB$OFF 000000  
                       ??_FRAME_AxisStatus 0008                               __CFG_CPD$OFF 000000  
                       ?_FRAME_MapPosition 0006                         __size_of_CAN_Setup 005C  
                             ?_LED_Control 0006                                        wreg 000FE8  
                    __end_of_CAN_TakeFrame 05E4                                ?_INI_OUTPUT 0001  
                   __size_of_INI_LED_Start 0034                   ??_MOCK_Klikniecie_Spadek 0008  
                    __end_of_CAN_SendFrame 0958                               __CFG_LVP$OFF 000000  
                TRM_DataTransmition@weWyU8 004C               __size_of_INI_GlobalInterrupt 000E  
                      ??_FRAME_MapPosition 0008                               __CFG_WDT$OFF 000000  
                                     l1201 1370                                       l3001 03A6  
                                     l3021 04C4                                       l3103 0D62  
                                     l3111 0D98                                       l3031 04EC  
                                     l3023 04CC                                       l2401 097A  
                                     l3105 0D6C                                       l3025 04D4  
                                     l3017 04B8                                       l3041 0538  
                                     l3051 0578                                       l3027 04DC  
                                     l3019 04BE                                       l3035 04F4  
                                     l3043 0552                                       l3131 0618  
                                     l2413 099A                                       l3053 0580  
                                     l3045 0564                                       l3029 04E4  
                                     l3037 0534                                       l3141 065E  
                                     l3133 0626                                       l3213 143E  
                                     l2503 0A90                                       l2431 09CA  
                                     l2407 098A                                       l3055 0588  
                                     l3047 056A                                       l3063 05A0  
                                     l3151 06A4                                       l3143 066C  
                                     l3135 0634                                       l2425 09BA  
                                     l3057 0590                                       l3049 0570  
                                     l3065 05E0                                       l3153 06BE  
                                     l3145 067A                                       l3137 0642  
                                     l3161 06F8                                       l2443 09EA  
                                     l2419 09AA                            __end_of_INI_All 168E  
                                     l3059 0598                                       l2603 10E0  
                                     l3155 06CC                                       l3147 0688  
                                     l3139 0650                                       l3163 0762  
                                     l2509 0AA2                                       l2461 0A20  
                                     l2437 09DA                                       l3157 06E2  
                                     l3149 0696                                       l3245 157C  
                                     l2455 0A10                                       l2631 133E  
                                     l2519 15A8                                       l3255 159C  
                                     l2473 0A40                                       l2449 09FA  
                                     l2633 1346                                       l3097 0D36  
                                     l2561 107E                                       l2491 0A70  
                                     l2467 0A30                                       l2395 096A  
                                     l2643 1366                                       l2731 089E  
                                     l2803 0CB8                                       l2485 0A60  
                                     l3197 101E                                       l2573 109A  
                                     l2479 0A50                                       l2751 13FC  
                                     l2735 0952                                       l2911 011A  
                                     l2591 10C4                                       l2567 108C  
                                     l2497 0A80                                       l2913 019C  
                                     l2585 10B6                                       l2809 0CC0  
                                     l2579 10A8                                       l2925 0286  
                                     l2845 13A6                                       l2597 10D2  
                                     l2767 148C                                       l2943 0F82  
                                     l2955 0FA8                                       l2971 0FDA  
                                     l2883 0BD4                                       l2875 0BA4  
                                     l2867 0B6A                                       l2981 11C4  
                                     l2957 0FB0                                       l2949 0F92  
                                     l2797 0CA2                                       l2789 0C88  
                                     l2975 0FE8                                       l2967 0FD0  
                                     l2879 0BC2                                       l2889 130A  
                                     l2995 120E                                       l2899 0E06  
                                     _BIE0 000DFA                          _MOC_Frame_Counter 16A6  
                                     u1160 107A                                       u1250 134A  
                                     u1315 0874                                       _LATA 000F89  
                                     u1430 13B6                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u1620 0FB4  
                                     u1380 0CD4                                       u1470 0AF8  
                                     u1480 0B10                                       u1730 0DA0  
                                     u1476 0AFA                                       u1486 0B12  
                                     _IPR3 000FA5                                       _IPEN 007E87  
                                     _PIE3 000FA3                                       u1685 0450  
                                     _PEIE 007F96                                       _LOCK 004F  
                                     _PIR3 000FA4                                       _RCON 000FD0  
              ??_FRAME_AccelerometerStatus 000A                                       _Dane 0049  
                          __end_of_ISR_low 005C                           LED_Control@diode 0006  
                     FRAME_AnalogValue@set 0008                         ?_MOC_Frame_Counter 0006  
                                     _main 1576                           LED_Control@color 000A  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 0059                             _CAN_SetupClock 15CE  
                       __size_of_LED_Clear 001E                                       prodh 000FF4  
                                     prodl 000FF3                      __end_of_CAN_SetupMask 0F6E  
            __size_of_TMR1_Update_flag_Get 000A                                       start 005C  
            __size_of_TMR1_Update_flag_Set 000A                         __size_of_LED_Error 001E  
                            __CFG_IESO$OFF 000000                         __size_of_LED_Right 004C  
            __size_of_FRAME_HandleCanFrame 0206                              _LED_Light_Pos 0D00  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                      ??_MOC_Frame_Counter 0008                 ??_MOC_Aktualna_Temperatura 0008  
        FRAME_HandleCanFrame@identyfikator 0019                         __size_of_INI_Timer 0018  
                __end_of_FRAME_MapPosition 1742                              _NeightAdress1 0045  
                            _NeightAdress2 0043                              _NeightAdress3 0041  
                            _NeightAdress4 003F                              _NeightAdress5 003D  
                            _NeightAdress6 003B                              _NeightAdress7 0039  
                            _NeightAdress8 0037                           __end_of_LED_Left 14A0  
            __size_of_MOCK_PrzyspieszenieX 000A              __size_of_MOCK_PrzyspieszenieY 000A  
            __size_of_MOCK_PrzyspieszenieZ 000A                                      _B0CON 000E20  
                                    _B1CON 000E30                                      _B2CON 000E40  
                                    _B3CON 000E50                                      _B4CON 000E60  
                                    _B5CON 000E70                           __end_of_LOCK_Get 1740  
                                    ?_main 0001                           __end_of_LOCK_Set 1736  
                          __end_of___awdiv 0FF2                                      _BSEL0 000DF8  
                          ___awdiv@divisor 0008                                      _T1CON 000FCD  
                                    _IRCF0 007E9C                                      _IRCF1 007E9D  
        FRAME_ExcitationMultiplier@message 0006                                      _IRCF2 007E9E  
                          __end_of___lwdiv 137A                                      i1l637 004C  
                      __size_of_FRAME_Plot 0058                            ___awdiv@counter 000A  
                                    _MSEL0 000DF0                                      _MSEL1 000DF1  
                                    _MSEL2 000DF2                                      _MSEL3 000DF3  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_PWRT$OFF 000000  
                                    _Flagi 002B                     ?_CAN_MoveBuffIntoFrame 0006  
                            __CFG_WRT0$OFF 000000                 __size_of_FRAME_AnalogValue 0002  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                         __end_of_ISR_high 173C                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                __end_of_MOC_Frame_Counter 16B4                             __CFG_EBTRB$OFF 000000  
                  i1TMR1_Update_flag_Set@a 0001                               ?_MOC_NOTWORK 0006  
                                    tablat 000FF5                     __end_of_CAN_SetupClock 15F6  
                                    ttemp5 005A                                      ttemp6 005D  
                                    ttemp7 0061                                      status 000FD8  
                                    wtemp8 005A                          __end_of_CAN_GenID 0EE2  
                           __CFG_PBADEN$ON 000000                        __size_of_LED_Update 007A  
                           ?_LED_Light_Pos 000D                           _TMR1_Timer_reset 15F6  
                        __end_of_CAN_Setup 121C                              _INI_LED_Start 1542  
                    _FRAME_ExcitationValue 14A0           FRAME_AccelerometerStatus@message 0008  
                          __initialization 121C                        __size_of_INI_OUTPUT 001E  
                         CAN_GenID@frameID 0008                               __end_of_main 15A4  
                   ??_FRAME_AveragingTimes 0008                 __size_of_FRAME_DeviceReset 013C  
                 ?_FRAME_AdressOfNeighbors 0006                           CAN_GenID@message 0006  
                _FRAME_AccelerometerStatus 10E4  FRAME_SensorExcitationStatus@iterator_beta 000F  
                                   ??_main 002B                     CAN_MoveBuffIntoFrame@i 000A  
                            __activetblptr 000002                           _TMR1_Update_flag 0047  
                        __end_of_LED_Clear 1656                      __end_of_IsInNeighbors 10E4  
                          _wartosciSasiada 00C6                                  ??_INI_All 000B  
                        __end_of_LED_Error 1638                          __end_of_LED_Right 1414  
          __size_of_MOCK_Klikniecie_Spadek 000A                                  ??_ISR_low 0003  
                                   _CANCON 000F6F                           ___awdiv@dividend 0006  
              FRAME_ExcitationMultiplier@i 0009                                     _CIOCON 000F73  
                          __CFG_BBSIZ$1024 000000                          __end_of_INI_Timer 16A6  
                                   i1l3271 004A                            ?_CAN_SetupClock 0001  
                                   _RXB0D0 000F66                                     _TMR1IE 007CE8  
                                   _TMR1IF 007CF0                                     _TMR1IP 007CF8  
                                   _TMR1ON 007E68               ??_FRAME_ExcitationMultiplier 0008  
                           ?_INI_LED_Start 0001                             __CFG_XINST$OFF 000000  
                                ??___awdiv 000A                             __CFG_STVREN$ON 000000  
                         LED_Light_Pos@pos 000D                 __size_of_FRAME_MapPosition 0002  
                                ??___lwdiv 000A                                     clear_0 1244  
                                   clear_1 1256                                     clear_2 1262  
                         ___awdiv@quotient 000C                 ??_FRAME_PrzypisanieDokarty 0008  
                 ??i1_TMR1_Update_flag_Set 0003                            __CFG_BOREN$BOHW 000000  
                             __pdataCOMRAM 0050                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
      __size_of_FRAME_ExcitationMultiplier 004E                 __size_of_MOC_Frame_Counter 000E  
                     __size_of_LED_Control 0152                   FRAME_MapPosition@message 0006  
                    TMR1_Update_flag_Set@a 0006                                 __accesstop 0060  
                  __end_of__initialization 1268                               ??_FRAME_Plot 000F  
                      ISR_low@ramkaStanuU8 004D                                  ?_LED_Left 0006  
                          ??_LED_Light_Pos 0011                              ___rparam_used 000001  
                   ?_FRAME_ExcitationValue 0006                                  ?_LOCK_Get 0001  
                                ?_LOCK_Set 0001            __end_of_FRAME_AdressOfNeighbors 0368  
                   _MOCK_Klikniecie_Spadek 16F4                             __pcstackCOMRAM 0001  
                                LED_Left@a 0006                                  LED_Left@b 0008  
                      _INI_GlobalInterrupt 16B4                                  ?_ISR_high 0001  
                             ??_LED_Update 0018                __end_of_TRM_DataTransmition 145E  
                    _FRAME_SoftwareVersion 115A                         __end_of_FRAME_Plot 1328  
                             ??_INI_OUTPUT 0006                                  LOCK_Set@k 0006  
                  FRAME_AxisStatus@message 0006                IsInNeighbors@message_adress 0006  
                     ?_INI_GlobalInterrupt 0001                  __size_of_FRAME_AxisStatus 0036  
                               __pbssBANK0 0060                       __size_of_MOC_NOTWORK 0008  
                          ??_INI_LED_Start 000B                                 ??_LED_Left 0008  
                               ??_LOCK_Get 0006                                 ??_LOCK_Set 0006  
                       __end_of_LED_Update 106C                         __end_of_INI_OUTPUT 1674  
                               ??_ISR_high 0001                        TMR1_Timer_reset@t1H 0002  
                      TMR1_Timer_reset@t1L 0001                                    _ECANCON 000F77  
                                  _CANSTAT 000F6E                    ??_CAN_MoveBuffIntoFrame 000A  
             __end_of_TMR1_Update_flag_Get 1712               __end_of_TMR1_Update_flag_Set 1708  
          __size_ofi1_TMR1_Update_flag_Set 000A               __end_of_FRAME_HandleCanFrame 07EA  
                                  _INI_All 1674                   __end_of_TMR1_Timer_reset 161A  
                                  _RXB0DLC 000F65                                    _RXB0CON 000F60  
                                  _RXB1CON 000F50                      ??_INI_GlobalInterrupt 0006  
                                  _TXB0CON 000F40                                    _ISR_low 0018  
                                  _RXFCON0 000DD4                                    _DaneCan 0030  
             __end_of_MOCK_PrzyspieszenieX 16F4               __end_of_MOCK_PrzyspieszenieY 16EA  
             __end_of_MOCK_PrzyspieszenieZ 16E0         __end_of_FRAME_ExcitationMultiplier 13C8  
               _FRAME_ExcitationMultiplier 137A                FRAME_HandleCanFrame@message 0011  
                                  __Hparam 0000           ??_MOC_Wynikowa_wartosc_roznicowa 0008  
          ?_MOC_Wynikowa_wartosc_roznicowa 0006                                    __Lparam 0000  
                   __size_of_CAN_TakeFrame 027C                                  _CAN_GenID 0E4E  
                                  ___awdiv 0F6E                                  _CAN_Setup 11C0  
                   __size_of_CAN_SendFrame 016E                                    ___lwdiv 1328  
                        LED_Light_Pos@pos2 0014                                    __pcinit 121C  
                                  __ramtop 0D00     FRAME_DataUpdateAndChangeOption@message 0006  
                                  __ptext0 1576                                    __ptext1 1414  
                                  __ptext2 05E4                                    __ptext3 115A  
                                  __ptext4 0BE6                                    __ptext5 16C2  
                                  __ptext6 1726                                    __ptext7 16A6  
                                  __ptext8 16CC                                    __ptext9 172E  
                   ?_FRAME_SoftwareVersion 0006                     __size_of_CAN_SetupMask 008C  
        __size_of_MOC_Aktualna_Temperatura 000A             FRAME_AdressOfNeighbors@nrRamki 0008  
                ?_MOC_Aktualna_Temperatura 0006           __size_of_FRAME_AdressOfNeighbors 0308  
                         ??_CAN_SetupClock 0006             FRAME_AdressOfNeighbors@message 0006  
                                _LED_Clear 1638                                  _LED_Error 161A  
                           __pintcode_body 1736                                  _LED_Right 13C8  
                     end_of_initialization 1268                              __Lmediumconst 0000  
                                  int_func 1736                                  _INI_Timer 168E  
                   i1_TMR1_Update_flag_Set 1712           TRM_DataTransmition@czujnikWeWyU8 004B  
                               ?_CAN_GenID 0006                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc2 000FDE                                 ?_CAN_Setup 0001  
            __size_of_FRAME_AveragingTimes 0036                       CAN_SendFrame@message 000B  
                            LED_Update@Red 004E                              _CAN_TakeFrame 0368  
                               ?_LED_Clear 0001                              _CAN_SendFrame 07EA  
                               ?_LED_Error 0001                FRAME_AdressOfNeighbors@kier 000E  
                               ?_LED_Right 0006                           _FRAME_AxisStatus 14D6  
                  ??_FRAME_ExcitationValue 0008                                 ?_INI_Timer 0001  
                  ?_MOCK_Klikniecie_Spadek 0006                            _ramkaCanRxKarty 0060  
                     _TMR1_Update_flag_Get 1708                            _ramkaCanTxKarty 00B5  
                     _TMR1_Update_flag_Set 16FE                              _CAN_SetupMask 0EE2  
                        __size_of_LED_Left 0042                       _FRAME_HandleCanFrame 05E4  
                   __size_of_IsInNeighbors 0078                          __size_of_LOCK_Get 0004  
                        __size_of_LOCK_Set 0008                             CAN_TakeFrame@k 0013  
                            __pidataCOMRAM 171C                          __size_of_ISR_high 1734  
                     _MOCK_PrzyspieszenieX 16EA                       _MOCK_PrzyspieszenieY 16E0  
                     _MOCK_PrzyspieszenieZ 16D6                                 LED_Right@a 0006  
                               LED_Right@b 000A                      MOC_Frame_Counter@zeta 0050  
                            ??_LED_Control 0008                        start_initialization 121C  
                           ?_CAN_TakeFrame 000E                             ?_CAN_SendFrame 000B  
           __end_of_MOCK_Klikniecie_Spadek 16FE                           __CFG_OSC$IRCIO67 000000  
        __size_of_FRAME_PrzypisanieDokarty 009E                  ?_FRAME_PrzypisanieDokarty 0006  
                    ?_TMR1_Update_flag_Get 0006                      ?_TMR1_Update_flag_Set 0006  
                           ?_CAN_SetupMask 0001                      __end_of_LED_Light_Pos 0DB0  
                    ?_FRAME_HandleCanFrame 0011                                ??_CAN_GenID 0009  
                              ??_CAN_Setup 0006                           __CFG_LPT1OSC$OFF 000000  
                    ?_MOCK_PrzyspieszenieX 0006                      ?_MOCK_PrzyspieszenieY 0006  
                    ?_MOCK_PrzyspieszenieZ 0006                   CAN_MoveBuffIntoFrame@Buf 0008  
     __end_of_FRAME_SensorExcitationStatus 0D00      __size_of_FRAME_SensorExcitationStatus 011A  
                 CAN_MoveBuffIntoFrame@Ram 0006               _FRAME_SensorExcitationStatus 0BE6  
           __size_of_CAN_MoveBuffIntoFrame 002A                                __pbssBIGRAM 00C6  
            __end_of_CAN_MoveBuffIntoFrame 15CE                            _Fulfillment_Lvl 0056  
                              __pbssCOMRAM 002B                                   ?_INI_All 0001  
                  _FRAME_AdressOfNeighbors 0060                              _IsInNeighbors 106C  
                        ?_TMR1_Timer_reset 0001                                _BRGCON1bits 000F70  
                              _BRGCON2bits 000F71                                _BRGCON3bits 000F72  
                                 ?_ISR_low 0001    __end_of_FRAME_DataUpdateAndChangeOption 12D0  
 __size_of_FRAME_DataUpdateAndChangeOption 005A          ??_FRAME_DataUpdateAndChangeOption 0008  
         ?_FRAME_DataUpdateAndChangeOption 0006            _FRAME_DataUpdateAndChangeOption 1276  
                              ??_LED_Clear 000B                              ??_MOC_NOTWORK 0008  
                       ??_TMR1_Timer_reset 0001                                ??_LED_Error 000B  
                              ??_LED_Right 0008               __size_of_TRM_DataTransmition 004A  
                      __end_of_LED_Control 0AAA                ?_FRAME_ExcitationMultiplier 0006  
                              ??_INI_Timer 0006                      __end_of_INI_LED_Start 1576  
                         ___lwdiv@dividend 0006                                  __pintcode 0008  
                                 ?___awdiv 0006                    ??_FRAME_SoftwareVersion 0008  
         __end_of_MOC_Aktualna_Temperatura 16D6                                   ?___lwdiv 0006  
                        FRAME_Plot@message 000D                                __pintcodelo 0018  
              __end_of_INI_GlobalInterrupt 16C2                            ??_CAN_TakeFrame 0010  
            ?_FRAME_SensorExcitationStatus 000B     __end_of_MOC_Wynikowa_wartosc_roznicowa 16CC  
  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A             _MOC_Wynikowa_wartosc_roznicowa 16C2  
                              _COMSTATbits 000F74                             ?_IsInNeighbors 0006  
                          ??_CAN_SendFrame 000D                           ___lwdiv@quotient 000A  
                  ?i1_TMR1_Update_flag_Set 0001                FRAME_AveragingTimes@message 0006  
                   ??_TMR1_Update_flag_Get 0008                     ??_TMR1_Update_flag_Set 0008  
                          ??_CAN_SetupMask 0006                                   _LED_Left 145E  
                   ??_FRAME_HandleCanFrame 0013                       CAN_TakeFrame@message 000E  
                      __end_of_MOC_NOTWORK 172E                                   _LOCK_Get 173C  
                     CAN_TakeFrame@tempCON 0012                                   _LOCK_Set 172E  
                                 _RXB0EIDH 000F63                                   _RXB0EIDL 000F64  
                                 _RCONbits 000FD0                           __CFG_WDTPS$32768 000000  
                                 _RXB0SIDH 000F61                                   _RXB0SIDL 000F62  
                                 _RXF0EIDH 000F02                                   _RXF0EIDL 000F03  
                                 _RXF1EIDH 000F06                                   _RXF1EIDL 000F07  
                                 _RXF2EIDH 000F0A                                   _RXF2EIDL 000F0B  
                                 _RXF3EIDH 000F0E                                   _RXF3EIDL 000F0F  
                                 _RXF0SIDH 000F00                                   _RXF0SIDL 000F01  
                                 _RXF1SIDH 000F04                                   _RXF1SIDL 000F05  
                                 _RXF2SIDH 000F08                                   _RXF2SIDL 000F09  
                                 _RXF3SIDH 000F0C                                   _RXF3SIDL 000F0D  
                                 _ISR_high 0008                                   _RXM0EIDH 000F1A  
                                 _RXM0EIDL 000F1B                                   _RXM1EIDH 000F1E  
                                 _RXM1EIDL 000F1F                     ??_MOCK_PrzyspieszenieX 0008  
                   ??_MOCK_PrzyspieszenieY 0008                     ??_MOCK_PrzyspieszenieZ 0008  
                                 _RXM0SIDH 000F18                                   _RXM0SIDL 000F19  
                                 _RXM1SIDH 000F1C                                   _RXM1SIDL 000F1D  
                 __end_of_FRAME_AxisStatus 150C                  ??_FRAME_AdressOfNeighbors 000A  
                         _DetectorLedRadar 0034                                _LED_Control 0958  
                         __size_of_INI_All 001A               FRAME_ExcitationValue@message 0006  
           __end_ofi1_TMR1_Update_flag_Set 171C                                  copy_data0 1230  
                         __size_of_ISR_low 0044         __size_of_FRAME_AccelerometerStatus 0076  
             __end_of_FRAME_AveragingTimes 1542                 ?_FRAME_AccelerometerStatus 0008  
           __size_of_FRAME_ExcitationValue 0036              __end_of_FRAME_ExcitationValue 14D6  
                                 __Hrparam 0000                               _RXB0SIDLbits 000F62  
                                 __Lrparam 0000                           __size_of___awdiv 0084  
                         __size_of___lwdiv 0052                            ??_IsInNeighbors 0008  
                 _MOC_Aktualna_Temperatura 16CC            FRAME_PrzypisanieDokarty@message 0006  
                       LED_Light_Pos@flage 0016                         LED_Light_Pos@color 0011  
         __end_of_FRAME_PrzypisanieDokarty 0E4E                               _RXF0SIDLbits 000F01  
                 FRAME_AnalogValue@message 0006                            ___lwdiv@divisor 0008  
                             _RXF1SIDLbits 000F05                            ___lwdiv@counter 000C  
                                 __ptext10 173C                                   __ptext11 161A  
                                 __ptext20 1276                                   __ptext12 1638  
                                 __ptext21 14D6                                   __ptext13 106C  
                                 __ptext30 07EA                                   __ptext22 150C  
                                 __ptext14 0DB0                                   __ptext31 0E4E  
                                 __ptext23 1742                                   __ptext15 12D0  
                                 __ptext40 13C8                                   __ptext32 0368  
                                 __ptext24 0060                                   __ptext16 1740  
                                 __ptext41 145E                                   __ptext33 0F6E  
                                 __ptext25 10E4                                   __ptext17 14A0  
                                 __ptext50 15CE                                   __ptext42 1674  
                                 __ptext34 15A4                                   __ptext26 16D6  
                                 __ptext18 137A                                   __ptext43 168E  
                                 __ptext35 16FE                                   __ptext27 16E0  
                                 __ptext19 0AAA                                   __ptext52 1712  
                                 __ptext44 1656                                   __ptext36 1708  
                                 __ptext28 16EA             ??_FRAME_SensorExcitationStatus 000D  
                                 __ptext53 15F6                                   __ptext45 1542  
                                 __ptext37 0FF2                                   __ptext29 16F4  
                                 __ptext46 0958                                   __ptext38 0D00  
                                 __ptext47 16B4                                   __ptext39 1328  
                                 __ptext48 11C0                                   __ptext49 0EE2  
            TRM_DataTransmition@canMessage 001A                               _RXF2SIDLbits 000F09  
                              _MOC_NOTWORK 1726                  FRAME_HandleCanFrame@ident 0017  
                 FRAME_DeviceReset@message 0009          __end_of_FRAME_AccelerometerStatus 115A  
                               _FRAME_Plot 12D0                              __size_of_main 002E  
                  __size_of_CAN_SetupClock 0028                                   int$flags 0059  
                      _TRM_DataTransmition 1414                                _RXB0DLCbits 000F65  
                               _LED_Update 0FF2                                _RXB0CONbits 000F60  
                               _INTCONbits 000FF2                                 _INI_OUTPUT 1656  
                        _FRAME_AnalogValue 1742                       ?_TRM_DataTransmition 0001  
             FRAME_SoftwareVersion@message 0006                                   intlevel1 0000  
                                 intlevel2 0000                         ?_FRAME_AnalogValue 0006  
      FRAME_SensorExcitationStatus@message 000B                                _TXB0CONbits 000F40  
                      ??_FRAME_AnalogValue 000A                  __size_of_TMR1_Timer_reset 0024  
                 LED_Light_Pos@fulfillment 000F                       _FRAME_AveragingTimes 150C  
           __size_of_FRAME_SoftwareVersion 0066                          _FRAME_DeviceReset 0AAA  
            __end_of_FRAME_SoftwareVersion 11C0                         ?_FRAME_DeviceReset 0009  
                          LED_Update@Green 0058                  __end_of_FRAME_AnalogValue 1744  
                   __size_of_LED_Light_Pos 00B0                      _CAN_MoveBuffIntoFrame 15A4  
                               _WDTCONbits 000FD1                        ??_FRAME_DeviceReset 000B  
                    ??_TRM_DataTransmition 001A                   _FRAME_PrzypisanieDokarty 0DB0  
                   LED_Light_Pos@LED_array 0012                             LED_Update@pos1 0054  
                           LED_Update@pos2 0052                                ?_FRAME_Plot 000D  
