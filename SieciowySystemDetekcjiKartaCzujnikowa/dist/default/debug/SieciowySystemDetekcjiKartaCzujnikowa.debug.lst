

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 11:48:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4680 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataCOMRAM
    92  000F48                     __pidataCOMRAM:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for LED_Update@pos2
    96  000F48  0001               	dw	1
    97                           
    98                           ;initializer for LED_Update@pos1
    99  000F4A  0001               	dw	1
   100                           
   101                           ;initializer for _Fulfillment_Lvl
   102  000F4C  0014               	dw	20
   103                           
   104                           ;initializer for LED_Update@Green
   105  000F4E  01                 	db	1
   106  0000                     _RXFCON0	set	3540
   107  0000                     _MSEL3	set	3571
   108  0000                     _MSEL2	set	3570
   109  0000                     _MSEL1	set	3569
   110  0000                     _MSEL0	set	3568
   111  0000                     _BIE0bits	set	3578
   112  0000                     _BSEL0bits	set	3576
   113  0000                     _BIE0	set	3578
   114  0000                     _BSEL0	set	3576
   115  0000                     _B5CON	set	3696
   116  0000                     _B4CON	set	3680
   117  0000                     _B3CON	set	3664
   118  0000                     _B2CON	set	3648
   119  0000                     _B1CON	set	3632
   120  0000                     _B0CON	set	3616
   121  0000                     _RXF2EIDL	set	3851
   122  0000                     _RXF2EIDH	set	3850
   123  0000                     _RXF2SIDLbits	set	3849
   124  0000                     _RXF2SIDL	set	3849
   125  0000                     _RXF2SIDH	set	3848
   126  0000                     _RXF1EIDL	set	3847
   127  0000                     _RXF1EIDH	set	3846
   128  0000                     _RXF1SIDLbits	set	3845
   129  0000                     _RXF1SIDL	set	3845
   130  0000                     _RXF1SIDH	set	3844
   131  0000                     _RXF0EIDL	set	3843
   132  0000                     _RXF0EIDH	set	3842
   133  0000                     _RXF0SIDLbits	set	3841
   134  0000                     _RXF0SIDL	set	3841
   135  0000                     _RXF0SIDH	set	3840
   136  0000                     _RXM1EIDL	set	3871
   137  0000                     _RXM1EIDH	set	3870
   138  0000                     _RXM1SIDL	set	3869
   139  0000                     _RXM1SIDH	set	3868
   140  0000                     _RXM0EIDL	set	3867
   141  0000                     _RXM0EIDH	set	3866
   142  0000                     _RXM0SIDL	set	3865
   143  0000                     _RXM0SIDH	set	3864
   144  0000                     _TXB0CONbits	set	3904
   145  0000                     _RXB1CON	set	3920
   146  0000                     _TXB0CON	set	3904
   147  0000                     _TRISC	set	3988
   148  0000                     _LATC	set	3979
   149  0000                     _LATE	set	3981
   150  0000                     _LATA	set	3977
   151  0000                     _LATB	set	3978
   152  0000                     _LATD	set	3980
   153  0000                     _TRISD	set	3989
   154  0000                     _TRISE	set	3990
   155  0000                     _TRISB	set	3987
   156  0000                     _TRISA	set	3986
   157  0000                     _RXB0DLCbits	set	3941
   158  0000                     _RXB0DLC	set	3941
   159  0000                     _RXB0SIDH	set	3937
   160  0000                     _RXB0SIDLbits	set	3938
   161  0000                     _RXB0SIDL	set	3938
   162  0000                     _RXB0EIDH	set	3939
   163  0000                     _RXB0EIDL	set	3940
   164  0000                     _COMSTATbits	set	3956
   165  0000                     _RXB0CONbits	set	3936
   166  0000                     _BRGCON3bits	set	3954
   167  0000                     _BRGCON2bits	set	3953
   168  0000                     _BRGCON1bits	set	3952
   169  0000                     _CIOCON	set	3955
   170  0000                     _ECANCON	set	3959
   171  0000                     _RXB0CON	set	3936
   172  0000                     _CANSTAT	set	3950
   173  0000                     _CANCON	set	3951
   174  0000                     _RXB0D0	set	3942
   175  0000                     _WDTCONbits	set	4049
   176  0000                     _RCONbits	set	4048
   177  0000                     _T1CON	set	4045
   178  0000                     _TMR1H	set	4047
   179  0000                     _TMR1L	set	4046
   180  0000                     _PIR3bits	set	4004
   181  0000                     _IPR3bits	set	4005
   182  0000                     _PIE3bits	set	4003
   183  0000                     _PIR3	set	4004
   184  0000                     _IPR3	set	4005
   185  0000                     _PIE3	set	4003
   186  0000                     _RCON	set	4048
   187  0000                     _TMR1IF	set	31984
   188  0000                     _TMR1IP	set	31992
   189  0000                     _IPEN	set	32391
   190  0000                     _TMR1ON	set	32360
   191  0000                     _TMR1IE	set	31976
   192  0000                     _IRCF0	set	32412
   193  0000                     _IRCF1	set	32413
   194  0000                     _IRCF2	set	32414
   195  0000                     _INTCONbits	set	4082
   196  0000                     _PEIE	set	32662
   197                           
   198                           ; #config settings
   199  0000                     
   200                           	psect	cinit
   201  000C72                     __pcinit:
   202                           	opt callstack 0
   203  000C72                     start_initialization:
   204                           	opt callstack 0
   205  000C72                     __initialization:
   206                           	opt callstack 0
   207                           
   208                           ; Initialize objects allocated to COMRAM (7 bytes)
   209                           ; load TBLPTR registers with __pidataCOMRAM
   210  000C72  0E48               	movlw	low __pidataCOMRAM
   211  000C74  6EF6               	movwf	tblptrl,c
   212  000C76  0E0F               	movlw	high __pidataCOMRAM
   213  000C78  6EF7               	movwf	tblptrh,c
   214  000C7A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   215  000C7C  6EF8               	movwf	tblptru,c
   216  000C7E  EE00  F043         	lfsr	0,__pdataCOMRAM
   217  000C82  EE10 F007          	lfsr	1,7
   218  000C86                     copy_data0:
   219  000C86  0009               	tblrd		*+
   220  000C88  CFF5 FFEE          	movff	tablat,postinc0
   221  000C8C  50E5               	movf	postdec1,w,c
   222  000C8E  50E1               	movf	fsr1l,w,c
   223  000C90  E1FA               	bnz	copy_data0
   224                           
   225                           ; Clear objects allocated to BANK0 (85 bytes)
   226  000C92  EE00  F060         	lfsr	0,__pbssBANK0
   227  000C96  0E55               	movlw	85
   228  000C98                     clear_0:
   229  000C98  6AEE               	clrf	postinc0,c
   230  000C9A  06E8               	decf	wreg,f,c
   231  000C9C  E1FD               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to COMRAM (29 bytes)
   234  000C9E  EE00  F026         	lfsr	0,__pbssCOMRAM
   235  000CA2  0E1D               	movlw	29
   236  000CA4                     clear_1:
   237  000CA4  6AEE               	clrf	postinc0,c
   238  000CA6  06E8               	decf	wreg,f,c
   239  000CA8  E1FD               	bnz	clear_1
   240  000CAA                     end_of_initialization:
   241                           	opt callstack 0
   242  000CAA                     __end_of__initialization:
   243                           	opt callstack 0
   244  000CAA  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   245  000CAC  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   246  000CAE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   247  000CB0  6EF8               	movwf	tblptru,c
   248  000CB2  0100               	movlb	0
   249  000CB4  EF03  F007         	goto	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMRAM
   252  000026                     __pbssCOMRAM:
   253                           	opt callstack 0
   254  000026                     _ramkaCanTxKarty:
   255                           	opt callstack 0
   256  000026                     	ds	17
   257  000037                     _DaneCan:
   258                           	opt callstack 0
   259  000037                     	ds	4
   260  00003B                     _TMR1_Update_flag:
   261                           	opt callstack 0
   262  00003B                     	ds	2
   263  00003D                     _DetectorLedRadar:
   264                           	opt callstack 0
   265  00003D                     	ds	2
   266  00003F                     	ds	1
   267  000040                     	ds	1
   268  000041                     ISR_low@ramkaStanuU8:
   269                           	opt callstack 0
   270  000041                     	ds	1
   271  000042                     	ds	1
   272                           
   273                           	psect	dataCOMRAM
   274  000043                     __pdataCOMRAM:
   275                           	opt callstack 0
   276  000043                     LED_Update@pos2:
   277                           	opt callstack 0
   278  000043                     	ds	2
   279  000045                     LED_Update@pos1:
   280                           	opt callstack 0
   281  000045                     	ds	2
   282  000047                     _Fulfillment_Lvl:
   283                           	opt callstack 0
   284  000047                     	ds	2
   285  000049                     LED_Update@Green:
   286                           	opt callstack 0
   287  000049                     	ds	1
   288                           
   289                           	psect	bssBANK0
   290  000060                     __pbssBANK0:
   291                           	opt callstack 0
   292  000060                     _ramkaCanRxKarty:
   293                           	opt callstack 0
   294  000060                     	ds	85
   295                           
   296                           	psect	cstackCOMRAM
   297  000001                     __pcstackCOMRAM:
   298                           	opt callstack 0
   299  000001                     TMR1_Timer_reset@t1L:
   300                           	opt callstack 0
   301  000001                     i1TMR1_Update_flag_Set@a:
   302                           	opt callstack 0
   303                           
   304                           ; 2 bytes @ 0x0
   305  000001                     	ds	1
   306  000002                     TMR1_Timer_reset@t1H:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x1
   310  000002                     	ds	1
   311  000003                     ??_ISR_low:
   312  000003                     
   313                           ; 1 bytes @ 0x2
   314  000003                     	ds	3
   315  000006                     ??_CAN_Setup:
   316  000006                     ?_TMR1_Update_flag_Get:
   317                           	opt callstack 0
   318  000006                     ?_LED_Right:
   319                           	opt callstack 0
   320  000006                     ?_LED_Left:
   321                           	opt callstack 0
   322  000006                     ?___awdiv:
   323                           	opt callstack 0
   324  000006                     ?___lwdiv:
   325                           	opt callstack 0
   326  000006                     CAN_MoveBuffIntoFrame@Ram:
   327                           	opt callstack 0
   328  000006                     CAN_GenID@message:
   329                           	opt callstack 0
   330  000006                     LED_Right@a:
   331                           	opt callstack 0
   332  000006                     LED_Left@a:
   333                           	opt callstack 0
   334  000006                     LED_Control@diode:
   335                           	opt callstack 0
   336  000006                     TMR1_Update_flag_Set@a:
   337                           	opt callstack 0
   338  000006                     FRAME_SensorExcitationStatus@message:
   339                           	opt callstack 0
   340  000006                     FRAME_AccelerometerStatus@message:
   341                           	opt callstack 0
   342  000006                     FRAME_ExcitationValue@message:
   343                           	opt callstack 0
   344  000006                     FRAME_ExcitationMultiplier@message:
   345                           	opt callstack 0
   346  000006                     FRAME_AveragingTimes@message:
   347                           	opt callstack 0
   348  000006                     FRAME_AxisStatus@message:
   349                           	opt callstack 0
   350  000006                     FRAME_DeviceReset@message:
   351                           	opt callstack 0
   352  000006                     FRAME_Plot@message:
   353                           	opt callstack 0
   354  000006                     FRAME_MapPosition@message:
   355                           	opt callstack 0
   356  000006                     FRAME_SoftwareVersion@message:
   357                           	opt callstack 0
   358  000006                     FRAME_AnalogValue@message:
   359                           	opt callstack 0
   360  000006                     FRAME_AdressOfNeighbors@message:
   361                           	opt callstack 0
   362  000006                     ___awdiv@dividend:
   363                           	opt callstack 0
   364  000006                     ___lwdiv@dividend:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x5
   368  000006                     	ds	2
   369  000008                     ??_LED_Right:
   370  000008                     CAN_GenID@frameID:
   371                           	opt callstack 0
   372  000008                     CAN_MoveBuffIntoFrame@Buf:
   373                           	opt callstack 0
   374  000008                     LED_Left@b:
   375                           	opt callstack 0
   376  000008                     FRAME_AnalogValue@set:
   377                           	opt callstack 0
   378  000008                     FRAME_AdressOfNeighbors@nrRamki:
   379                           	opt callstack 0
   380  000008                     ___awdiv@divisor:
   381                           	opt callstack 0
   382  000008                     ___lwdiv@divisor:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x7
   386  000008                     	ds	1
   387  000009                     ??_CAN_GenID:
   388  000009                     FRAME_ExcitationMultiplier@i:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x8
   392  000009                     	ds	1
   393  00000A                     CAN_MoveBuffIntoFrame@i:
   394                           	opt callstack 0
   395  00000A                     LED_Control@color:
   396                           	opt callstack 0
   397  00000A                     ___awdiv@counter:
   398                           	opt callstack 0
   399  00000A                     LED_Right@b:
   400                           	opt callstack 0
   401  00000A                     ___lwdiv@quotient:
   402                           	opt callstack 0
   403                           
   404                           ; 2 bytes @ 0x9
   405  00000A                     	ds	1
   406  00000B                     ___awdiv@sign:
   407                           	opt callstack 0
   408  00000B                     CAN_SendFrame@message:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0xA
   412  00000B                     	ds	1
   413  00000C                     ___lwdiv@counter:
   414                           	opt callstack 0
   415  00000C                     ___awdiv@quotient:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0xB
   419  00000C                     	ds	1
   420  00000D                     ??_CAN_SendFrame:
   421  00000D                     LED_Light_Pos@pos:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0xC
   425  00000D                     	ds	1
   426  00000E                     CAN_TakeFrame@message:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0xD
   430  00000E                     	ds	1
   431  00000F                     LED_Light_Pos@fulfillment:
   432                           	opt callstack 0
   433                           
   434                           ; 2 bytes @ 0xE
   435  00000F                     	ds	1
   436  000010                     ??_CAN_TakeFrame:
   437  000010                     FRAME_HandleCanFrame@message:
   438                           	opt callstack 0
   439                           
   440                           ; 2 bytes @ 0xF
   441  000010                     	ds	1
   442  000011                     LED_Light_Pos@color:
   443                           	opt callstack 0
   444                           
   445                           ; 1 bytes @ 0x10
   446  000011                     	ds	1
   447  000012                     ??_FRAME_HandleCanFrame:
   448  000012                     CAN_TakeFrame@tempCON:
   449                           	opt callstack 0
   450  000012                     LED_Light_Pos@LED_array:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x11
   454  000012                     	ds	1
   455  000013                     CAN_TakeFrame@k:
   456                           	opt callstack 0
   457                           
   458                           ; 1 bytes @ 0x12
   459  000013                     	ds	1
   460  000014                     FRAME_HandleCanFrame@identyfikator:
   461                           	opt callstack 0
   462  000014                     LED_Light_Pos@pos2:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x13
   466  000014                     	ds	1
   467  000015                     TRM_DataTransmition@canMessage:
   468                           	opt callstack 0
   469                           
   470                           ; 17 bytes @ 0x14
   471  000015                     	ds	1
   472  000016                     LED_Light_Pos@flage:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x15
   476  000016                     	ds	2
   477  000018                     
   478                           ; 1 bytes @ 0x17
   479  000018                     	ds	14
   480  000026                     
   481                           ; 1 bytes @ 0x25
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 89 in file "main.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   505 ;;Total ram usage:        0 bytes
   506 ;; Hardware stack levels required when called:    7
   507 ;; This function calls:
   508 ;;		_INI_All
   509 ;;		_LED_Update
   510 ;;		_TMR1_Update_flag_Get
   511 ;;		_TMR1_Update_flag_Set
   512 ;;		_TRM_DataTransmition
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           	psect	text0
   519  000E06                     __ptext0:
   520                           	opt callstack 0
   521  000E06                     _main:
   522                           	opt callstack 24
   523                           
   524                           ;main.c: 91:     INI_All();
   525                           
   526                           ;incstack = 0
   527  000E06  EC75  F007         	call	_INI_All	;wreg free
   528                           
   529                           ;main.c: 93:     RCON = 0xFF;
   530  000E0A  68D0               	setf	4048,c	;volatile
   531  000E0C                     l2647:
   532                           
   533                           ;main.c: 96:     {;main.c: 97:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   534  000E0C  B03D               	btfsc	_DetectorLedRadar,0,c
   535                           
   536                           ;main.c: 98:         {;main.c: 99:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   537  000E0E  903D               	bcf	_DetectorLedRadar,0,c
   538                           
   539                           ;main.c: 103:         if(TMR1_Update_flag_Get()==1)
   540  000E10  EC9A  F007         	call	_TMR1_Update_flag_Get	;wreg free
   541  000E14  0406               	decf	?_TMR1_Update_flag_Get,w,c
   542  000E16  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   543  000E18  A4D8               	btfss	status,2,c
   544  000E1A  D008               	goto	l2657
   545                           
   546                           ;main.c: 104:         {;main.c: 105:             LED_Update();
   547  000E1C  EC98  F005         	call	_LED_Update	;wreg free
   548                           
   549                           ;main.c: 106:             TMR1_Update_flag_Set(0);
   550  000E20  0E00               	movlw	0
   551  000E22  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   552  000E24  0E00               	movlw	0
   553  000E26  6E06               	movwf	TMR1_Update_flag_Set@a,c
   554  000E28  EC95  F007         	call	_TMR1_Update_flag_Set	;wreg free
   555  000E2C                     l2657:
   556                           
   557                           ;main.c: 110:         TRM_DataTransmition();
   558  000E2C  EC6D  F005         	call	_TRM_DataTransmition	;wreg free
   559  000E30  0004               	clrwdt		;# 
   560                           
   561                           ;main.c: 112:     }
   562  000E32  D7EC               	goto	l2647
   563  000E34                     __end_of_main:
   564                           	opt callstack 0
   565                           
   566 ;; *************** function _TRM_DataTransmition *****************
   567 ;; Defined at:
   568 ;;		line 16 in file "TRM.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  canMessage     17   20[COMRAM] struct .
   573 ;;  i               1    0        unsigned char 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   584 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   586 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   587 ;;Total ram usage:       17 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    6
   590 ;; This function calls:
   591 ;;		_CAN_TakeFrame
   592 ;;		_FRAME_HandleCanFrame
   593 ;; This function is called by:
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text1
   599  000ADA                     __ptext1:
   600                           	opt callstack 0
   601  000ADA                     _TRM_DataTransmition:
   602                           	opt callstack 24
   603                           
   604                           ;TRM.c: 18:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 19:     BYTE i;;TRM.c:
      +                           20:     mID canMessage;;TRM.c: 23:     if(DaneCan.Flags.wyslijRamkeStanu)
   605                           
   606                           ;incstack = 0
   607  000ADA  A037               	btfss	_DaneCan,0,c
   608  000ADC  D013               	goto	l2617
   609                           
   610                           ;TRM.c: 24:     {;TRM.c: 26:         canMessage.message_type = 0x02;
   611  000ADE  0E02               	movlw	2
   612  000AE0  6E16               	movwf	TRM_DataTransmition@canMessage+1,c
   613                           
   614                           ;TRM.c: 27:         canMessage.id.Val = 0;
   615  000AE2  0E00               	movlw	0
   616  000AE4  6E19               	movwf	TRM_DataTransmition@canMessage+4,c
   617  000AE6  0E00               	movlw	0
   618  000AE8  6E1A               	movwf	TRM_DataTransmition@canMessage+5,c
   619  000AEA  0E00               	movlw	0
   620  000AEC  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   621  000AEE  0E00               	movlw	0
   622  000AF0  6E1C               	movwf	TRM_DataTransmition@canMessage+7,c
   623                           
   624                           ;TRM.c: 28:         canMessage.id.v[2] = 0x09 *4;
   625  000AF2  0E24               	movlw	36
   626  000AF4  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   627                           
   628                           ;TRM.c: 29:         FRAME_HandleCanFrame(&canMessage);
   629  000AF6  0E15               	movlw	low TRM_DataTransmition@canMessage
   630  000AF8  6E10               	movwf	FRAME_HandleCanFrame@message,c
   631  000AFA  0E00               	movlw	high TRM_DataTransmition@canMessage
   632  000AFC  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   633  000AFE  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   634                           
   635                           ;TRM.c: 46:         DaneCan.Flags.wyslijRamkeStanu = 0;
   636  000B02  9037               	bcf	_DaneCan,0,c
   637  000B04                     l2617:
   638                           
   639                           ;TRM.c: 56:     if(CAN_TakeFrame(&canMessage))
   640  000B04  0E15               	movlw	low TRM_DataTransmition@canMessage
   641  000B06  6E0E               	movwf	CAN_TakeFrame@message,c
   642  000B08  0E00               	movlw	high TRM_DataTransmition@canMessage
   643  000B0A  6E0F               	movwf	CAN_TakeFrame@message+1,c
   644  000B0C  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   645  000B10  0900               	iorlw	0
   646  000B12  B4D8               	btfsc	status,2,c
   647  000B14  0012               	return	
   648                           
   649                           ;TRM.c: 57:     {;TRM.c: 58:         if((canMessage.buffer == 0) || (canMessage.buffer =
      +                          = 1))
   650  000B16  5018               	movf	TRM_DataTransmition@canMessage+3,w,c
   651  000B18  B4D8               	btfsc	status,2,c
   652  000B1A  D003               	goto	u1320
   653  000B1C  0418               	decf	TRM_DataTransmition@canMessage+3,w,c
   654  000B1E  A4D8               	btfss	status,2,c
   655  000B20  0012               	return	
   656  000B22                     u1320:
   657                           
   658                           ;TRM.c: 59:         {;TRM.c: 60:             FRAME_HandleCanFrame(&canMessage);
   659  000B22  0E15               	movlw	low TRM_DataTransmition@canMessage
   660  000B24  6E10               	movwf	FRAME_HandleCanFrame@message,c
   661  000B26  0E00               	movlw	high TRM_DataTransmition@canMessage
   662  000B28  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   663  000B2A  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   664                           
   665                           ;TRM.c: 61:         }
   666  000B2E  0012               	return		;funcret
   667  000B30                     __end_of_TRM_DataTransmition:
   668                           	opt callstack 0
   669                           
   670 ;; *************** function _FRAME_HandleCanFrame *****************
   671 ;; Defined at:
   672 ;;		line 438 in file "FRAME.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;  message         2   15[COMRAM] PTR struct .
   675 ;;		 -> TRM_DataTransmition@canMessage(17), 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  identyfikato    1   19[COMRAM] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   690 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   691 ;;Total ram usage:        5 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    5
   694 ;; This function calls:
   695 ;;		_CAN_GenID
   696 ;;		_CAN_SendFrame
   697 ;;		_FRAME_AccelerometerStatus
   698 ;;		_FRAME_AdressOfNeighbors
   699 ;;		_FRAME_AnalogValue
   700 ;;		_FRAME_AveragingTimes
   701 ;;		_FRAME_AxisStatus
   702 ;;		_FRAME_DeviceReset
   703 ;;		_FRAME_ExcitationMultiplier
   704 ;;		_FRAME_ExcitationValue
   705 ;;		_FRAME_MapPosition
   706 ;;		_FRAME_Plot
   707 ;;		_FRAME_SensorExcitationStatus
   708 ;;		_FRAME_SoftwareVersion
   709 ;;		___awdiv
   710 ;; This function is called by:
   711 ;;		_TRM_DataTransmition
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text2
   716  0002DC                     __ptext2:
   717                           	opt callstack 0
   718  0002DC                     _FRAME_HandleCanFrame:
   719                           	opt callstack 24
   720                           
   721                           ;FRAME.c: 438: void FRAME_HandleCanFrame(mID * message);FRAME.c: 439: {;FRAME.c: 440:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   722                           
   723                           ;incstack = 0
   724  0002DC  EE20 F006          	lfsr	2,6
   725  0002E0  5010               	movf	FRAME_HandleCanFrame@message,w,c
   726  0002E2  26D9               	addwf	fsr2l,f,c
   727  0002E4  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   728  0002E6  22DA               	addwfc	fsr2h,f,c
   729  0002E8  50DF               	movf	indf2,w,c
   730  0002EA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   731  0002EC  5012               	movf	??_FRAME_HandleCanFrame,w,c
   732  0002EE  6E06               	movwf	___awdiv@dividend,c
   733  0002F0  6A07               	clrf	___awdiv@dividend+1,c
   734  0002F2  0E00               	movlw	0
   735  0002F4  6E09               	movwf	___awdiv@divisor+1,c
   736  0002F6  0E04               	movlw	4
   737  0002F8  6E08               	movwf	___awdiv@divisor,c
   738  0002FA  EC5E  F004         	call	___awdiv	;wreg free
   739  0002FE  5006               	movf	?___awdiv,w,c
   740  000300  6E14               	movwf	FRAME_HandleCanFrame@identyfikator,c
   741                           
   742                           ;FRAME.c: 442:     switch(identyfikator)
   743  000302  D060               	goto	l2571
   744  000304                     l2545:
   745                           
   746                           ;FRAME.c: 445:             FRAME_SensorExcitationStatus(message);
   747  000304  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   748  000308  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   749  00030C  EC0B  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   750                           
   751                           ;FRAME.c: 446:             break;
   752  000310  D08B               	goto	l2573
   753  000312                     l2547:
   754                           
   755                           ;FRAME.c: 448:             FRAME_AccelerometerStatus(message);
   756  000312  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   757  000316  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   758  00031A  ECCE  F006         	call	_FRAME_AccelerometerStatus	;wreg free
   759                           
   760                           ;FRAME.c: 449:             break;
   761  00031E  D084               	goto	l2573
   762  000320                     l2549:
   763                           
   764                           ;FRAME.c: 451:             FRAME_ExcitationValue(message);
   765  000320  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   766  000324  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   767  000328  EC7D  F006         	call	_FRAME_ExcitationValue	;wreg free
   768                           
   769                           ;FRAME.c: 452:             break;
   770  00032C  D07D               	goto	l2573
   771  00032E                     l2551:
   772                           
   773                           ;FRAME.c: 454:             FRAME_ExcitationMultiplier(message);
   774  00032E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   775  000332  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   776  000336  ECEC  F005         	call	_FRAME_ExcitationMultiplier	;wreg free
   777                           
   778                           ;FRAME.c: 455:             break;
   779  00033A  D076               	goto	l2573
   780  00033C                     l2553:
   781                           
   782                           ;FRAME.c: 457:             FRAME_AveragingTimes(message);
   783  00033C  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   784  000340  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   785  000344  ECB3  F006         	call	_FRAME_AveragingTimes	;wreg free
   786                           
   787                           ;FRAME.c: 458:             break;
   788  000348  D06F               	goto	l2573
   789  00034A                     l2555:
   790                           
   791                           ;FRAME.c: 460:             FRAME_AxisStatus(message);
   792  00034A  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   793  00034E  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   794  000352  EC98  F006         	call	_FRAME_AxisStatus	;wreg free
   795                           
   796                           ;FRAME.c: 461:             break;
   797  000356  D068               	goto	l2573
   798  000358                     l2557:
   799                           
   800                           ;FRAME.c: 463:             FRAME_DeviceReset(message);
   801  000358  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   802  00035C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   803  000360  EC41  F005         	call	_FRAME_DeviceReset	;wreg free
   804                           
   805                           ;FRAME.c: 464:             break;
   806  000364  D061               	goto	l2573
   807  000366                     l2559:
   808                           
   809                           ;FRAME.c: 466:             FRAME_Plot(message);
   810  000366  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   811  00036A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   812  00036E  EC55  F007         	call	_FRAME_Plot	;wreg free
   813                           
   814                           ;FRAME.c: 467:             break;
   815  000372  D05A               	goto	l2573
   816  000374                     l2561:
   817                           
   818                           ;FRAME.c: 469:             FRAME_MapPosition(message);
   819  000374  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   820  000378  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   821  00037C  ECAC  F007         	call	_FRAME_MapPosition	;wreg free
   822                           
   823                           ;FRAME.c: 470:             break;
   824  000380  D053               	goto	l2573
   825  000382                     l2563:
   826                           
   827                           ;FRAME.c: 472:             FRAME_SoftwareVersion(message);
   828  000382  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   829  000386  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   830  00038A  ECAB  F007         	call	_FRAME_SoftwareVersion	;wreg free
   831                           
   832                           ;FRAME.c: 473:             break;
   833  00038E  D04C               	goto	l2573
   834  000390                     l2565:
   835                           
   836                           ;FRAME.c: 476:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   837  000390  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   838  000394  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   839  000398  0EF4               	movlw	244
   840  00039A  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   841  00039C  6E08               	movwf	FRAME_AnalogValue@set,c
   842  00039E  6A09               	clrf	FRAME_AnalogValue@set+1,c
   843  0003A0  0EFF               	movlw	255
   844  0003A2  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   845  0003A4  ECAD  F007         	call	_FRAME_AnalogValue	;wreg free
   846                           
   847                           ;FRAME.c: 477:             break;
   848  0003A8  D03F               	goto	l2573
   849  0003AA                     l2567:
   850                           
   851                           ;FRAME.c: 480:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   852  0003AA  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   853  0003AE  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   854  0003B2  0EF0               	movlw	240
   855  0003B4  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   856  0003B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   857  0003B8  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   858  0003BA  0EFF               	movlw	255
   859  0003BC  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   860  0003BE  ECAE  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
   861                           
   862                           ;FRAME.c: 481:             break;
   863  0003C2  D032               	goto	l2573
   864  0003C4                     l2571:
   865  0003C4  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   866  0003C6  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   867  0003C8  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   868                           
   869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   870                           ; Switch size 1, requested type "simple"
   871                           ; Number of cases is 1, Range of values is 0 to 0
   872                           ; switch strategies available:
   873                           ; Name         Instructions Cycles
   874                           ; simple_byte            4     3 (average)
   875                           ;	Chosen strategy is simple_byte
   876  0003CA  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
   877  0003CC  0A00               	xorlw	0	; case 0
   878  0003CE  A4D8               	btfss	status,2,c
   879  0003D0  D02B               	goto	l2573
   880                           
   881                           ; Switch size 1, requested type "simple"
   882                           ; Number of cases is 14, Range of values is 1 to 17
   883                           ; switch strategies available:
   884                           ; Name         Instructions Cycles
   885                           ; simple_byte           43    22 (average)
   886                           ;	Chosen strategy is simple_byte
   887  0003D2  5012               	movf	??_FRAME_HandleCanFrame,w,c
   888  0003D4  0A01               	xorlw	1	; case 1
   889  0003D6  B4D8               	btfsc	status,2,c
   890  0003D8  D795               	goto	l2545
   891  0003DA  0A03               	xorlw	3	; case 2
   892  0003DC  B4D8               	btfsc	status,2,c
   893  0003DE  D799               	goto	l2547
   894  0003E0  0A01               	xorlw	1	; case 3
   895  0003E2  B4D8               	btfsc	status,2,c
   896  0003E4  D79D               	goto	l2549
   897  0003E6  0A07               	xorlw	7	; case 4
   898  0003E8  B4D8               	btfsc	status,2,c
   899  0003EA  D7A1               	goto	l2551
   900  0003EC  0A01               	xorlw	1	; case 5
   901  0003EE  B4D8               	btfsc	status,2,c
   902  0003F0  D7A5               	goto	l2553
   903  0003F2  0A03               	xorlw	3	; case 6
   904  0003F4  B4D8               	btfsc	status,2,c
   905  0003F6  D7A9               	goto	l2555
   906  0003F8  0A01               	xorlw	1	; case 7
   907  0003FA  B4D8               	btfsc	status,2,c
   908  0003FC  D7AD               	goto	l2557
   909  0003FE  0A0E               	xorlw	14	; case 9
   910  000400  B4D8               	btfsc	status,2,c
   911  000402  D7B1               	goto	l2559
   912  000404  0A03               	xorlw	3	; case 10
   913  000406  B4D8               	btfsc	status,2,c
   914  000408  D7B5               	goto	l2561
   915  00040A  0A01               	xorlw	1	; case 11
   916  00040C  B4D8               	btfsc	status,2,c
   917  00040E  D7B9               	goto	l2563
   918  000410  0A07               	xorlw	7	; case 12
   919  000412  B4D8               	btfsc	status,2,c
   920  000414  D7BD               	goto	l2565
   921  000416  0A01               	xorlw	1	; case 13
   922  000418  B4D8               	btfsc	status,2,c
   923  00041A  D7BA               	goto	l2565
   924  00041C  0A1D               	xorlw	29	; case 16
   925  00041E  B4D8               	btfsc	status,2,c
   926  000420  D7C4               	goto	l2567
   927  000422  0A01               	xorlw	1	; case 17
   928  000424  B4D8               	btfsc	status,2,c
   929  000426  D7C1               	goto	l2567
   930  000428                     l2573:
   931                           
   932                           ;FRAME.c: 483:     if(message->message_type == 0x02)
   933  000428  EE20 F001          	lfsr	2,1
   934  00042C  5010               	movf	FRAME_HandleCanFrame@message,w,c
   935  00042E  26D9               	addwf	fsr2l,f,c
   936  000430  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   937  000432  22DA               	addwfc	fsr2h,f,c
   938  000434  0E02               	movlw	2
   939  000436  18DE               	xorwf	postinc2,w,c
   940  000438  A4D8               	btfss	status,2,c
   941  00043A  0012               	return	
   942                           
   943                           ;FRAME.c: 484:     {;FRAME.c: 486:         message->frame_type = 0x03;
   944  00043C  EE20 F002          	lfsr	2,2
   945  000440  5010               	movf	FRAME_HandleCanFrame@message,w,c
   946  000442  26D9               	addwf	fsr2l,f,c
   947  000444  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   948  000446  22DA               	addwfc	fsr2h,f,c
   949  000448  0E03               	movlw	3
   950  00044A  6EDF               	movwf	indf2,c
   951                           
   952                           ;FRAME.c: 487:         message->message_type = 0x01;
   953  00044C  EE20 F001          	lfsr	2,1
   954  000450  5010               	movf	FRAME_HandleCanFrame@message,w,c
   955  000452  26D9               	addwf	fsr2l,f,c
   956  000454  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   957  000456  22DA               	addwfc	fsr2h,f,c
   958  000458  0E01               	movlw	1
   959  00045A  6EDF               	movwf	indf2,c
   960                           
   961                           ;FRAME.c: 488:         message->id.Val = 0;
   962  00045C  EE20 F004          	lfsr	2,4
   963  000460  5010               	movf	FRAME_HandleCanFrame@message,w,c
   964  000462  26D9               	addwf	fsr2l,f,c
   965  000464  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   966  000466  22DA               	addwfc	fsr2h,f,c
   967  000468  6ADE               	clrf	postinc2,c
   968  00046A  6ADE               	clrf	postinc2,c
   969  00046C  6ADE               	clrf	postinc2,c
   970  00046E  6ADD               	clrf	postdec2,c
   971                           
   972                           ;FRAME.c: 490:         message->id.v[2] = identyfikator*4;
   973  000470  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   974  000472  0D04               	mullw	4
   975  000474  EE20 F006          	lfsr	2,6
   976  000478  5010               	movf	FRAME_HandleCanFrame@message,w,c
   977  00047A  26D9               	addwf	fsr2l,f,c
   978  00047C  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   979  00047E  22DA               	addwfc	fsr2h,f,c
   980  000480  CFF3 FFDF          	movff	prodl,indf2
   981                           
   982                           ;FRAME.c: 491:         CAN_GenID(message,identyfikator);
   983  000484  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   984  000488  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   985  00048C  C014  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
   986  000490  ECA0  F004         	call	_CAN_GenID	;wreg free
   987                           
   988                           ;FRAME.c: 492:         CAN_SendFrame(message);
   989  000494  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
   990  000498  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
   991  00049C  EC53  F002         	call	_CAN_SendFrame	;wreg free
   992  0004A0                     l473:
   993  0004A0  A660               	btfss	3936,3,c	;volatile
   994  0004A2  0012               	return	
   995  0004A4  D7FD               	goto	l473
   996  0004A6                     __end_of_FRAME_HandleCanFrame:
   997                           	opt callstack 0
   998                           
   999 ;; *************** function _FRAME_SoftwareVersion *****************
  1000 ;; Defined at:
  1001 ;;		line 342 in file "FRAME.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  message         2    5[COMRAM] PTR struct .
  1004 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		None
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1016 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1020 ;;Total ram usage:        2 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    3
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_FRAME_HandleCanFrame
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text3
  1031  000F56                     __ptext3:
  1032                           	opt callstack 0
  1033  000F56                     _FRAME_SoftwareVersion:
  1034                           	opt callstack 25
  1035                           
  1036                           ;incstack = 0
  1037  000F56  0012               	return		;funcret
  1038  000F58                     __end_of_FRAME_SoftwareVersion:
  1039                           	opt callstack 0
  1040                           
  1041 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1042 ;; Defined at:
  1043 ;;		line 28 in file "FRAME.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  message         2    5[COMRAM] PTR struct .
  1046 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    3
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_FRAME_HandleCanFrame
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text4
  1073  000816                     __ptext4:
  1074                           	opt callstack 0
  1075  000816                     _FRAME_SensorExcitationStatus:
  1076                           	opt callstack 25
  1077                           
  1078                           ;FRAME.c: 28: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 29: {;FRAM
      +                          E.c: 30:     if(message->message_type == 0x02)
  1079                           
  1080                           ;incstack = 0
  1081  000816  EE20 F001          	lfsr	2,1
  1082  00081A  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1083  00081C  26D9               	addwf	fsr2l,f,c
  1084  00081E  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1085  000820  22DA               	addwfc	fsr2h,f,c
  1086  000822  0E02               	movlw	2
  1087  000824  18DE               	xorwf	postinc2,w,c
  1088  000826  A4D8               	btfss	status,2,c
  1089  000828  0012               	return	
  1090                           
  1091                           ;FRAME.c: 31:     {;FRAME.c: 32:         message->data_length = 8;
  1092  00082A  EE20 F010          	lfsr	2,16
  1093  00082E  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1094  000830  26D9               	addwf	fsr2l,f,c
  1095  000832  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1096  000834  22DA               	addwfc	fsr2h,f,c
  1097  000836  0E08               	movlw	8
  1098  000838  6EDF               	movwf	indf2,c
  1099                           
  1100                           ;FRAME.c: 38:         message->data[0] = 0b01;
  1101  00083A  EE20 F008          	lfsr	2,8
  1102  00083E  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1103  000840  26D9               	addwf	fsr2l,f,c
  1104  000842  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1105  000844  22DA               	addwfc	fsr2h,f,c
  1106  000846  0E01               	movlw	1
  1107  000848  6EDF               	movwf	indf2,c
  1108                           
  1109                           ;FRAME.c: 39:         message->data[1] = 0xFF;
  1110  00084A  EE20 F009          	lfsr	2,9
  1111  00084E  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1112  000850  26D9               	addwf	fsr2l,f,c
  1113  000852  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1114  000854  22DA               	addwfc	fsr2h,f,c
  1115  000856  0EFF               	movlw	255
  1116  000858  6EDF               	movwf	indf2,c
  1117                           
  1118                           ;FRAME.c: 40:         message->data[2] = 0xFF;
  1119  00085A  EE20 F00A          	lfsr	2,10
  1120  00085E  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1121  000860  26D9               	addwf	fsr2l,f,c
  1122  000862  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1123  000864  22DA               	addwfc	fsr2h,f,c
  1124  000866  0EFF               	movlw	255
  1125  000868  6EDF               	movwf	indf2,c
  1126                           
  1127                           ;FRAME.c: 41:         message->data[3] = 0x00;
  1128  00086A  EE20 F00B          	lfsr	2,11
  1129  00086E  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1130  000870  26D9               	addwf	fsr2l,f,c
  1131  000872  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1132  000874  22DA               	addwfc	fsr2h,f,c
  1133  000876  0E00               	movlw	0
  1134  000878  6EDF               	movwf	indf2,c
  1135                           
  1136                           ;FRAME.c: 42:         message->data[4] = 18;
  1137  00087A  EE20 F00C          	lfsr	2,12
  1138  00087E  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1139  000880  26D9               	addwf	fsr2l,f,c
  1140  000882  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1141  000884  22DA               	addwfc	fsr2h,f,c
  1142  000886  0E12               	movlw	18
  1143  000888  6EDF               	movwf	indf2,c
  1144                           
  1145                           ;FRAME.c: 43:         message->data[5] = 0x00;
  1146  00088A  EE20 F00D          	lfsr	2,13
  1147  00088E  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1148  000890  26D9               	addwf	fsr2l,f,c
  1149  000892  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1150  000894  22DA               	addwfc	fsr2h,f,c
  1151  000896  0E00               	movlw	0
  1152  000898  6EDF               	movwf	indf2,c
  1153                           
  1154                           ;FRAME.c: 44:         message->data[6] = 0x00;
  1155  00089A  EE20 F00E          	lfsr	2,14
  1156  00089E  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1157  0008A0  26D9               	addwf	fsr2l,f,c
  1158  0008A2  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1159  0008A4  22DA               	addwfc	fsr2h,f,c
  1160  0008A6  0E00               	movlw	0
  1161  0008A8  6EDF               	movwf	indf2,c
  1162                           
  1163                           ;FRAME.c: 45:         message->data[7] = 0x00;
  1164  0008AA  EE20 F00F          	lfsr	2,15
  1165  0008AE  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1166  0008B0  26D9               	addwf	fsr2l,f,c
  1167  0008B2  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1168  0008B4  22DA               	addwfc	fsr2h,f,c
  1169  0008B6  0E00               	movlw	0
  1170  0008B8  6EDF               	movwf	indf2,c
  1171                           
  1172                           ;FRAME.c: 49:     }
  1173  0008BA  0012               	return		;funcret
  1174  0008BC                     __end_of_FRAME_SensorExcitationStatus:
  1175                           	opt callstack 0
  1176                           
  1177 ;; *************** function _FRAME_Plot *****************
  1178 ;; Defined at:
  1179 ;;		line 295 in file "FRAME.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  message         2    5[COMRAM] PTR struct .
  1182 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    3
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_FRAME_HandleCanFrame
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text5
  1209  000EAA                     __ptext5:
  1210                           	opt callstack 0
  1211  000EAA                     _FRAME_Plot:
  1212                           	opt callstack 25
  1213                           
  1214                           ;FRAME.c: 295: static void FRAME_Plot(mID *message);FRAME.c: 296: {;FRAME.c: 307:     me
      +                          ssage->data_length = 1;
  1215                           
  1216                           ;incstack = 0
  1217  000EAA  EE20 F010          	lfsr	2,16
  1218  000EAE  5006               	movf	FRAME_Plot@message,w,c
  1219  000EB0  26D9               	addwf	fsr2l,f,c
  1220  000EB2  5007               	movf	FRAME_Plot@message+1,w,c
  1221  000EB4  22DA               	addwfc	fsr2h,f,c
  1222  000EB6  0E01               	movlw	1
  1223  000EB8  6EDF               	movwf	indf2,c
  1224                           
  1225                           ;FRAME.c: 308:     message->data[0] = 0xFF;
  1226  000EBA  EE20 F008          	lfsr	2,8
  1227  000EBE  5006               	movf	FRAME_Plot@message,w,c
  1228  000EC0  26D9               	addwf	fsr2l,f,c
  1229  000EC2  5007               	movf	FRAME_Plot@message+1,w,c
  1230  000EC4  22DA               	addwfc	fsr2h,f,c
  1231  000EC6  0EFF               	movlw	255
  1232  000EC8  6EDF               	movwf	indf2,c
  1233  000ECA  0012               	return		;funcret
  1234  000ECC                     __end_of_FRAME_Plot:
  1235                           	opt callstack 0
  1236                           
  1237 ;; *************** function _FRAME_MapPosition *****************
  1238 ;; Defined at:
  1239 ;;		line 317 in file "FRAME.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  message         2    5[COMRAM] PTR struct .
  1242 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;		None
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		None
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1258 ;;Total ram usage:        2 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    3
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_FRAME_HandleCanFrame
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text6
  1269  000F58                     __ptext6:
  1270                           	opt callstack 0
  1271  000F58                     _FRAME_MapPosition:
  1272                           	opt callstack 25
  1273                           
  1274                           ;incstack = 0
  1275  000F58  0012               	return		;funcret
  1276  000F5A                     __end_of_FRAME_MapPosition:
  1277                           	opt callstack 0
  1278                           
  1279 ;; *************** function _FRAME_ExcitationValue *****************
  1280 ;; Defined at:
  1281 ;;		line 84 in file "FRAME.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  message         2    5[COMRAM] PTR struct .
  1284 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1299 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1300 ;;Total ram usage:        3 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    3
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_FRAME_HandleCanFrame
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text7
  1311  000CFA                     __ptext7:
  1312                           	opt callstack 0
  1313  000CFA                     _FRAME_ExcitationValue:
  1314                           	opt callstack 25
  1315                           
  1316                           ;FRAME.c: 84: static void FRAME_ExcitationValue(mID *message);FRAME.c: 85: {;FRAME.c: 86
      +                          :     if(message->message_type == 0x02)
  1317                           
  1318                           ;incstack = 0
  1319  000CFA  EE20 F001          	lfsr	2,1
  1320  000CFE  5006               	movf	FRAME_ExcitationValue@message,w,c
  1321  000D00  26D9               	addwf	fsr2l,f,c
  1322  000D02  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1323  000D04  22DA               	addwfc	fsr2h,f,c
  1324  000D06  0E02               	movlw	2
  1325  000D08  18DE               	xorwf	postinc2,w,c
  1326  000D0A  A4D8               	btfss	status,2,c
  1327  000D0C  0012               	return	
  1328                           
  1329                           ;FRAME.c: 87:     {;FRAME.c: 88:         message->data_length = 1;
  1330  000D0E  EE20 F010          	lfsr	2,16
  1331  000D12  5006               	movf	FRAME_ExcitationValue@message,w,c
  1332  000D14  26D9               	addwf	fsr2l,f,c
  1333  000D16  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1334  000D18  22DA               	addwfc	fsr2h,f,c
  1335  000D1A  0E01               	movlw	1
  1336  000D1C  6EDF               	movwf	indf2,c
  1337                           
  1338                           ;FRAME.c: 93:         message->data[0] = 0xFF;
  1339  000D1E  EE20 F008          	lfsr	2,8
  1340  000D22  5006               	movf	FRAME_ExcitationValue@message,w,c
  1341  000D24  26D9               	addwf	fsr2l,f,c
  1342  000D26  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1343  000D28  22DA               	addwfc	fsr2h,f,c
  1344  000D2A  0EFF               	movlw	255
  1345  000D2C  6EDF               	movwf	indf2,c
  1346                           
  1347                           ;FRAME.c: 94:     }
  1348  000D2E  0012               	return		;funcret
  1349  000D30                     __end_of_FRAME_ExcitationValue:
  1350                           	opt callstack 0
  1351                           
  1352 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1353 ;; Defined at:
  1354 ;;		line 108 in file "FRAME.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  message         2    5[COMRAM] PTR struct .
  1357 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  i               2    8[COMRAM] unsigned short 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1372 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1373 ;;Total ram usage:        5 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    3
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_FRAME_HandleCanFrame
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text8
  1384  000BD8                     __ptext8:
  1385                           	opt callstack 0
  1386  000BD8                     _FRAME_ExcitationMultiplier:
  1387                           	opt callstack 25
  1388                           
  1389                           ;FRAME.c: 108: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 109: {;FRAM
      +                          E.c: 110:     WORD i;;FRAME.c: 112:     if(message->message_type == 0x02)
  1390                           
  1391                           ;incstack = 0
  1392  000BD8  EE20 F001          	lfsr	2,1
  1393  000BDC  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1394  000BDE  26D9               	addwf	fsr2l,f,c
  1395  000BE0  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1396  000BE2  22DA               	addwfc	fsr2h,f,c
  1397  000BE4  0E02               	movlw	2
  1398  000BE6  18DE               	xorwf	postinc2,w,c
  1399  000BE8  A4D8               	btfss	status,2,c
  1400  000BEA  0012               	return	
  1401                           
  1402                           ;FRAME.c: 113:     {;FRAME.c: 114:         message->data_length = 1;
  1403  000BEC  EE20 F010          	lfsr	2,16
  1404  000BF0  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1405  000BF2  26D9               	addwf	fsr2l,f,c
  1406  000BF4  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1407  000BF6  22DA               	addwfc	fsr2h,f,c
  1408  000BF8  0E01               	movlw	1
  1409  000BFA  6EDF               	movwf	indf2,c
  1410                           
  1411                           ;FRAME.c: 115:         for(i=0; i<3; i++)
  1412  000BFC  0E00               	movlw	0
  1413  000BFE  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1414  000C00  0E00               	movlw	0
  1415  000C02  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1416  000C04                     l2309:
  1417                           
  1418                           ;FRAME.c: 116:         {;FRAME.c: 119:         }
  1419  000C04  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1420  000C06  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1421  000C08  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1422  000C0A  E104               	bnz	u1050
  1423  000C0C  0E03               	movlw	3
  1424  000C0E  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1425  000C10  A0D8               	btfss	status,0,c
  1426  000C12  D7F8               	goto	l2309
  1427  000C14                     u1050:
  1428                           
  1429                           ;FRAME.c: 120:         message->data[0] = 0xFF;
  1430  000C14  EE20 F008          	lfsr	2,8
  1431  000C18  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1432  000C1A  26D9               	addwf	fsr2l,f,c
  1433  000C1C  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1434  000C1E  22DA               	addwfc	fsr2h,f,c
  1435  000C20  0EFF               	movlw	255
  1436  000C22  6EDF               	movwf	indf2,c
  1437                           
  1438                           ;FRAME.c: 121:     }
  1439  000C24  0012               	return		;funcret
  1440  000C26                     __end_of_FRAME_ExcitationMultiplier:
  1441                           	opt callstack 0
  1442                           
  1443 ;; *************** function _FRAME_DeviceReset *****************
  1444 ;; Defined at:
  1445 ;;		line 242 in file "FRAME.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  message         2    5[COMRAM] PTR struct .
  1448 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1463 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1464 ;;Total ram usage:        3 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    3
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_FRAME_HandleCanFrame
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text9
  1475  000A82                     __ptext9:
  1476                           	opt callstack 0
  1477  000A82                     _FRAME_DeviceReset:
  1478                           	opt callstack 25
  1479                           
  1480                           ;FRAME.c: 242: static void FRAME_DeviceReset(mID *message);FRAME.c: 243: {;FRAME.c: 244:
      +                               if(message->message_type == 0x02)
  1481                           
  1482                           ;incstack = 0
  1483  000A82  EE20 F001          	lfsr	2,1
  1484  000A86  5006               	movf	FRAME_DeviceReset@message,w,c
  1485  000A88  26D9               	addwf	fsr2l,f,c
  1486  000A8A  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1487  000A8C  22DA               	addwfc	fsr2h,f,c
  1488  000A8E  0E02               	movlw	2
  1489  000A90  18DE               	xorwf	postinc2,w,c
  1490  000A92  A4D8               	btfss	status,2,c
  1491  000A94  D011               	goto	l2327
  1492                           
  1493                           ;FRAME.c: 245:     {;FRAME.c: 246:         message->data_length = 1;
  1494  000A96  EE20 F010          	lfsr	2,16
  1495  000A9A  5006               	movf	FRAME_DeviceReset@message,w,c
  1496  000A9C  26D9               	addwf	fsr2l,f,c
  1497  000A9E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1498  000AA0  22DA               	addwfc	fsr2h,f,c
  1499  000AA2  0E01               	movlw	1
  1500  000AA4  6EDF               	movwf	indf2,c
  1501                           
  1502                           ;FRAME.c: 259:         message->data[0] = 0xFF;
  1503  000AA6  EE20 F008          	lfsr	2,8
  1504  000AAA  5006               	movf	FRAME_DeviceReset@message,w,c
  1505  000AAC  26D9               	addwf	fsr2l,f,c
  1506  000AAE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1507  000AB0  22DA               	addwfc	fsr2h,f,c
  1508  000AB2  0EFF               	movlw	255
  1509  000AB4  6EDF               	movwf	indf2,c
  1510                           
  1511                           ;FRAME.c: 260:     }
  1512  000AB6  0012               	return	
  1513  000AB8                     l2327:
  1514                           
  1515                           ;FRAME.c: 262:     {;FRAME.c: 263:         message->data_length = 1;
  1516  000AB8  EE20 F010          	lfsr	2,16
  1517  000ABC  5006               	movf	FRAME_DeviceReset@message,w,c
  1518  000ABE  26D9               	addwf	fsr2l,f,c
  1519  000AC0  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1520  000AC2  22DA               	addwfc	fsr2h,f,c
  1521  000AC4  0E01               	movlw	1
  1522  000AC6  6EDF               	movwf	indf2,c
  1523                           
  1524                           ;FRAME.c: 285:         message->data[0] = 0xFF;
  1525  000AC8  EE20 F008          	lfsr	2,8
  1526  000ACC  5006               	movf	FRAME_DeviceReset@message,w,c
  1527  000ACE  26D9               	addwf	fsr2l,f,c
  1528  000AD0  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1529  000AD2  22DA               	addwfc	fsr2h,f,c
  1530  000AD4  0EFF               	movlw	255
  1531  000AD6  6EDF               	movwf	indf2,c
  1532  000AD8  0012               	return		;funcret
  1533  000ADA                     __end_of_FRAME_DeviceReset:
  1534                           	opt callstack 0
  1535                           
  1536 ;; *************** function _FRAME_AxisStatus *****************
  1537 ;; Defined at:
  1538 ;;		line 195 in file "FRAME.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  message         2    5[COMRAM] PTR struct .
  1541 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  i               2    0        unsigned short 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1556 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;Total ram usage:        3 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    3
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_FRAME_HandleCanFrame
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text10
  1568  000D30                     __ptext10:
  1569                           	opt callstack 0
  1570  000D30                     _FRAME_AxisStatus:
  1571                           	opt callstack 25
  1572                           
  1573                           ;FRAME.c: 195: static void FRAME_AxisStatus(mID *message);FRAME.c: 196: {;FRAME.c: 197: 
      +                              WORD i;;FRAME.c: 199:     if(message->message_type == 0x02)
  1574                           
  1575                           ;incstack = 0
  1576  000D30  EE20 F001          	lfsr	2,1
  1577  000D34  5006               	movf	FRAME_AxisStatus@message,w,c
  1578  000D36  26D9               	addwf	fsr2l,f,c
  1579  000D38  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1580  000D3A  22DA               	addwfc	fsr2h,f,c
  1581  000D3C  0E02               	movlw	2
  1582  000D3E  18DE               	xorwf	postinc2,w,c
  1583  000D40  A4D8               	btfss	status,2,c
  1584  000D42  0012               	return	
  1585                           
  1586                           ;FRAME.c: 200:     {;FRAME.c: 201:         message->data_length = 1;
  1587  000D44  EE20 F010          	lfsr	2,16
  1588  000D48  5006               	movf	FRAME_AxisStatus@message,w,c
  1589  000D4A  26D9               	addwf	fsr2l,f,c
  1590  000D4C  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1591  000D4E  22DA               	addwfc	fsr2h,f,c
  1592  000D50  0E01               	movlw	1
  1593  000D52  6EDF               	movwf	indf2,c
  1594                           
  1595                           ;FRAME.c: 212:         message->data[0] = 0xFF;
  1596  000D54  EE20 F008          	lfsr	2,8
  1597  000D58  5006               	movf	FRAME_AxisStatus@message,w,c
  1598  000D5A  26D9               	addwf	fsr2l,f,c
  1599  000D5C  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1600  000D5E  22DA               	addwfc	fsr2h,f,c
  1601  000D60  0EFF               	movlw	255
  1602  000D62  6EDF               	movwf	indf2,c
  1603                           
  1604                           ;FRAME.c: 213:     }
  1605  000D64  0012               	return		;funcret
  1606  000D66                     __end_of_FRAME_AxisStatus:
  1607                           	opt callstack 0
  1608                           
  1609 ;; *************** function _FRAME_AveragingTimes *****************
  1610 ;; Defined at:
  1611 ;;		line 136 in file "FRAME.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  message         2    5[COMRAM] PTR struct .
  1614 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1630 ;;Total ram usage:        3 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    3
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_FRAME_HandleCanFrame
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text11
  1641  000D66                     __ptext11:
  1642                           	opt callstack 0
  1643  000D66                     _FRAME_AveragingTimes:
  1644                           	opt callstack 25
  1645                           
  1646                           ;FRAME.c: 136: static void FRAME_AveragingTimes(mID *message);FRAME.c: 137: {;FRAME.c: 1
      +                          38:     if(message->message_type == 0x02)
  1647                           
  1648                           ;incstack = 0
  1649  000D66  EE20 F001          	lfsr	2,1
  1650  000D6A  5006               	movf	FRAME_AveragingTimes@message,w,c
  1651  000D6C  26D9               	addwf	fsr2l,f,c
  1652  000D6E  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1653  000D70  22DA               	addwfc	fsr2h,f,c
  1654  000D72  0E02               	movlw	2
  1655  000D74  18DE               	xorwf	postinc2,w,c
  1656  000D76  A4D8               	btfss	status,2,c
  1657  000D78  0012               	return	
  1658                           
  1659                           ;FRAME.c: 139:     {;FRAME.c: 140:         message->data_length = 1;
  1660  000D7A  EE20 F010          	lfsr	2,16
  1661  000D7E  5006               	movf	FRAME_AveragingTimes@message,w,c
  1662  000D80  26D9               	addwf	fsr2l,f,c
  1663  000D82  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1664  000D84  22DA               	addwfc	fsr2h,f,c
  1665  000D86  0E01               	movlw	1
  1666  000D88  6EDF               	movwf	indf2,c
  1667                           
  1668                           ;FRAME.c: 148:         message->data[0] = 0xFF;
  1669  000D8A  EE20 F008          	lfsr	2,8
  1670  000D8E  5006               	movf	FRAME_AveragingTimes@message,w,c
  1671  000D90  26D9               	addwf	fsr2l,f,c
  1672  000D92  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1673  000D94  22DA               	addwfc	fsr2h,f,c
  1674  000D96  0EFF               	movlw	255
  1675  000D98  6EDF               	movwf	indf2,c
  1676                           
  1677                           ;FRAME.c: 149:     }
  1678  000D9A  0012               	return		;funcret
  1679  000D9C                     __end_of_FRAME_AveragingTimes:
  1680                           	opt callstack 0
  1681                           
  1682 ;; *************** function _FRAME_AnalogValue *****************
  1683 ;; Defined at:
  1684 ;;		line 365 in file "FRAME.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  message         2    5[COMRAM] PTR struct .
  1687 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1688 ;;  set             2    7[COMRAM] unsigned short 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  i               2    0        unsigned short 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		None
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;Total ram usage:        4 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    3
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_FRAME_HandleCanFrame
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text12
  1715  000F5A                     __ptext12:
  1716                           	opt callstack 0
  1717  000F5A                     _FRAME_AnalogValue:
  1718                           	opt callstack 25
  1719                           
  1720                           ;incstack = 0
  1721  000F5A  0012               	return		;funcret
  1722  000F5C                     __end_of_FRAME_AnalogValue:
  1723                           	opt callstack 0
  1724                           
  1725 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1726 ;; Defined at:
  1727 ;;		line 408 in file "FRAME.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  message         2    5[COMRAM] PTR struct .
  1730 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1731 ;;  nrRamki         2    7[COMRAM] unsigned short 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  i               2    0        unsigned short 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		None
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;Total ram usage:        4 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    3
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_FRAME_HandleCanFrame
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text13
  1758  000F5C                     __ptext13:
  1759                           	opt callstack 0
  1760  000F5C                     _FRAME_AdressOfNeighbors:
  1761                           	opt callstack 25
  1762                           
  1763                           ;incstack = 0
  1764  000F5C  0012               	return		;funcret
  1765  000F5E                     __end_of_FRAME_AdressOfNeighbors:
  1766                           	opt callstack 0
  1767                           
  1768 ;; *************** function _FRAME_AccelerometerStatus *****************
  1769 ;; Defined at:
  1770 ;;		line 62 in file "FRAME.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  message         2    5[COMRAM] PTR struct .
  1773 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;Total ram usage:        3 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    3
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_FRAME_HandleCanFrame
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text14
  1800  000D9C                     __ptext14:
  1801                           	opt callstack 0
  1802  000D9C                     _FRAME_AccelerometerStatus:
  1803                           	opt callstack 25
  1804                           
  1805                           ;FRAME.c: 62: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 63: {;FRAME.c
      +                          : 64:     if(message->message_type == 0x02)
  1806                           
  1807                           ;incstack = 0
  1808  000D9C  EE20 F001          	lfsr	2,1
  1809  000DA0  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1810  000DA2  26D9               	addwf	fsr2l,f,c
  1811  000DA4  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1812  000DA6  22DA               	addwfc	fsr2h,f,c
  1813  000DA8  0E02               	movlw	2
  1814  000DAA  18DE               	xorwf	postinc2,w,c
  1815  000DAC  A4D8               	btfss	status,2,c
  1816  000DAE  0012               	return	
  1817                           
  1818                           ;FRAME.c: 65:     {;FRAME.c: 66:         message->data_length = 1;
  1819  000DB0  EE20 F010          	lfsr	2,16
  1820  000DB4  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1821  000DB6  26D9               	addwf	fsr2l,f,c
  1822  000DB8  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1823  000DBA  22DA               	addwfc	fsr2h,f,c
  1824  000DBC  0E01               	movlw	1
  1825  000DBE  6EDF               	movwf	indf2,c
  1826                           
  1827                           ;FRAME.c: 70:         message->data[0] = 0xFF;
  1828  000DC0  EE20 F008          	lfsr	2,8
  1829  000DC4  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1830  000DC6  26D9               	addwf	fsr2l,f,c
  1831  000DC8  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1832  000DCA  22DA               	addwfc	fsr2h,f,c
  1833  000DCC  0EFF               	movlw	255
  1834  000DCE  6EDF               	movwf	indf2,c
  1835                           
  1836                           ;FRAME.c: 71:     }
  1837  000DD0  0012               	return		;funcret
  1838  000DD2                     __end_of_FRAME_AccelerometerStatus:
  1839                           	opt callstack 0
  1840                           
  1841 ;; *************** function _CAN_SendFrame *****************
  1842 ;; Defined at:
  1843 ;;		line 240 in file "CAN.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  message         2   10[COMRAM] PTR struct .
  1846 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1860 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;Total ram usage:        5 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    4
  1865 ;; This function calls:
  1866 ;;		_CAN_MoveBuffIntoFrame
  1867 ;; This function is called by:
  1868 ;;		_FRAME_HandleCanFrame
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text15
  1873  0004A6                     __ptext15:
  1874                           	opt callstack 0
  1875  0004A6                     _CAN_SendFrame:
  1876                           	opt callstack 24
  1877                           
  1878                           ;CAN.c: 245:     {;CAN.c: 246:         ECANCON = 0x83;
  1879                           
  1880                           ;incstack = 0
  1881                           ;CAN.c: 240: void CAN_SendFrame(mID * message);CAN.c: 241: {;CAN.c: 244:     for(;;)
  1882  0004A6  0E83               	movlw	131
  1883  0004A8  6E77               	movwf	3959,c	;volatile
  1884                           
  1885                           ;CAN.c: 247:         if(!RXB0CONbits.FILHIT3)
  1886  0004AA  A660               	btfss	3936,3,c	;volatile
  1887  0004AC  D00A               	goto	l198
  1888                           
  1889                           ;CAN.c: 252:         ECANCON = 0x84;
  1890  0004AE  0E84               	movlw	132
  1891  0004B0  6E77               	movwf	3959,c	;volatile
  1892                           
  1893                           ;CAN.c: 253:         if(!RXB0CONbits.FILHIT3)
  1894  0004B2  A660               	btfss	3936,3,c	;volatile
  1895  0004B4  D006               	goto	l198
  1896                           
  1897                           ;CAN.c: 258:         ECANCON = 0x85;
  1898  0004B6  0E85               	movlw	133
  1899  0004B8  6E77               	movwf	3959,c	;volatile
  1900                           
  1901                           ;CAN.c: 259:         if(!RXB0CONbits.FILHIT3)
  1902  0004BA  A660               	btfss	3936,3,c	;volatile
  1903  0004BC  D002               	goto	l198
  1904  0004BE  D7F3               	goto	_CAN_SendFrame
  1905  0004C0                     l199:
  1906  0004C0  00FF               	reset		;# 
  1907  0004C2                     l198:
  1908                           
  1909                           ;CAN.c: 266:     while(COMSTATbits.TXWARN)
  1910  0004C2  B474               	btfsc	3956,2,c	;volatile
  1911  0004C4  D7FD               	goto	l199
  1912                           
  1913                           ;CAN.c: 270:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  1914  0004C6  0E00               	movlw	0
  1915  0004C8  6E3E               	movwf	_DetectorLedRadar+1,c
  1916                           
  1917                           ;CAN.c: 271:     RXB0EIDL = message->id.v[0];
  1918  0004CA  EE20 F004          	lfsr	2,4
  1919  0004CE  500B               	movf	CAN_SendFrame@message,w,c
  1920  0004D0  26D9               	addwf	fsr2l,f,c
  1921  0004D2  500C               	movf	CAN_SendFrame@message+1,w,c
  1922  0004D4  22DA               	addwfc	fsr2h,f,c
  1923  0004D6  50DF               	movf	indf2,w,c
  1924  0004D8  6E64               	movwf	3940,c	;volatile
  1925                           
  1926                           ;CAN.c: 272:     RXB0EIDH = message->id.v[1];
  1927  0004DA  EE20 F005          	lfsr	2,5
  1928  0004DE  500B               	movf	CAN_SendFrame@message,w,c
  1929  0004E0  26D9               	addwf	fsr2l,f,c
  1930  0004E2  500C               	movf	CAN_SendFrame@message+1,w,c
  1931  0004E4  22DA               	addwfc	fsr2h,f,c
  1932  0004E6  50DF               	movf	indf2,w,c
  1933  0004E8  6E63               	movwf	3939,c	;volatile
  1934                           
  1935                           ;CAN.c: 273:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  1936  0004EA  EE20 F006          	lfsr	2,6
  1937  0004EE  500B               	movf	CAN_SendFrame@message,w,c
  1938  0004F0  26D9               	addwf	fsr2l,f,c
  1939  0004F2  500C               	movf	CAN_SendFrame@message+1,w,c
  1940  0004F4  22DA               	addwfc	fsr2h,f,c
  1941  0004F6  50DF               	movf	indf2,w,c
  1942  0004F8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  1943  0004FA  0E03               	movlw	3
  1944  0004FC  160D               	andwf	??_CAN_SendFrame,f,c
  1945  0004FE  EE20 F006          	lfsr	2,6
  1946  000502  500B               	movf	CAN_SendFrame@message,w,c
  1947  000504  26D9               	addwf	fsr2l,f,c
  1948  000506  500C               	movf	CAN_SendFrame@message+1,w,c
  1949  000508  22DA               	addwfc	fsr2h,f,c
  1950  00050A  50DF               	movf	indf2,w,c
  1951  00050C  0BFC               	andlw	252
  1952  00050E  0D08               	mullw	8
  1953  000510  50F3               	movf	prodl,w,c
  1954  000512  100D               	iorwf	??_CAN_SendFrame,w,c
  1955  000514  6E62               	movwf	3938,c	;volatile
  1956                           
  1957                           ;CAN.c: 274:     RXB0SIDLbits.EXID = 1;
  1958  000516  8662               	bsf	3938,3,c	;volatile
  1959                           
  1960                           ;CAN.c: 275:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  1961  000518  EE20 F006          	lfsr	2,6
  1962  00051C  500B               	movf	CAN_SendFrame@message,w,c
  1963  00051E  26D9               	addwf	fsr2l,f,c
  1964  000520  500C               	movf	CAN_SendFrame@message+1,w,c
  1965  000522  22DA               	addwfc	fsr2h,f,c
  1966  000524  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  1967  000528  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  1968  00052C  0E05               	movlw	5
  1969  00052E  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  1970  000530                     u755:
  1971  000530  90D8               	bcf	status,0,c
  1972  000532  320E               	rrcf	??_CAN_SendFrame+1,f,c
  1973  000534  320D               	rrcf	??_CAN_SendFrame,f,c
  1974  000536  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  1975  000538  D7FB               	goto	u755
  1976  00053A  500D               	movf	??_CAN_SendFrame,w,c
  1977  00053C  6E61               	movwf	3937,c	;volatile
  1978                           
  1979                           ;CAN.c: 277:     RXB0DLC = 0;
  1980  00053E  0E00               	movlw	0
  1981  000540  6E65               	movwf	3941,c	;volatile
  1982                           
  1983                           ;CAN.c: 279:     if(message->message_type==0x02)
  1984  000542  EE20 F001          	lfsr	2,1
  1985  000546  500B               	movf	CAN_SendFrame@message,w,c
  1986  000548  26D9               	addwf	fsr2l,f,c
  1987  00054A  500C               	movf	CAN_SendFrame@message+1,w,c
  1988  00054C  22DA               	addwfc	fsr2h,f,c
  1989  00054E  0E02               	movlw	2
  1990  000550  18DE               	xorwf	postinc2,w,c
  1991  000552  A4D8               	btfss	status,2,c
  1992  000554  D002               	goto	l2119
  1993                           
  1994                           ;CAN.c: 280:     {;CAN.c: 281:         RXB0DLCbits.RXRTR = 1;
  1995  000556  8C65               	bsf	3941,6,c	;volatile
  1996                           
  1997                           ;CAN.c: 282:     }
  1998  000558  D05A               	goto	l2123
  1999  00055A                     l2119:
  2000                           
  2001                           ;CAN.c: 284:     {;CAN.c: 285:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2002  00055A  EE20 F010          	lfsr	2,16
  2003  00055E  500B               	movf	CAN_SendFrame@message,w,c
  2004  000560  26D9               	addwf	fsr2l,f,c
  2005  000562  500C               	movf	CAN_SendFrame@message+1,w,c
  2006  000564  22DA               	addwfc	fsr2h,f,c
  2007  000566  50DF               	movf	indf2,w,c
  2008  000568  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2009  00056A  0E0F               	movlw	15
  2010  00056C  160D               	andwf	??_CAN_SendFrame,f,c
  2011  00056E  5065               	movf	3941,w,c	;volatile
  2012  000570  180D               	xorwf	??_CAN_SendFrame,w,c
  2013  000572  0BFE               	andlw	-2
  2014  000574  180D               	xorwf	??_CAN_SendFrame,w,c
  2015  000576  6E65               	movwf	3941,c	;volatile
  2016                           
  2017                           ;CAN.c: 286:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2018  000578  EE20 F010          	lfsr	2,16
  2019  00057C  500B               	movf	CAN_SendFrame@message,w,c
  2020  00057E  26D9               	addwf	fsr2l,f,c
  2021  000580  500C               	movf	CAN_SendFrame@message+1,w,c
  2022  000582  22DA               	addwfc	fsr2h,f,c
  2023  000584  50DF               	movf	indf2,w,c
  2024  000586  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2025  000588  90D8               	bcf	status,0,c
  2026  00058A  320D               	rrcf	??_CAN_SendFrame,f,c
  2027  00058C  0E07               	movlw	7
  2028  00058E  160D               	andwf	??_CAN_SendFrame,f,c
  2029  000590  460D               	rlncf	??_CAN_SendFrame,f,c
  2030  000592  5065               	movf	3941,w,c	;volatile
  2031  000594  180D               	xorwf	??_CAN_SendFrame,w,c
  2032  000596  0BFD               	andlw	-3
  2033  000598  180D               	xorwf	??_CAN_SendFrame,w,c
  2034  00059A  6E65               	movwf	3941,c	;volatile
  2035                           
  2036                           ;CAN.c: 287:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2037  00059C  EE20 F010          	lfsr	2,16
  2038  0005A0  500B               	movf	CAN_SendFrame@message,w,c
  2039  0005A2  26D9               	addwf	fsr2l,f,c
  2040  0005A4  500C               	movf	CAN_SendFrame@message+1,w,c
  2041  0005A6  22DA               	addwfc	fsr2h,f,c
  2042  0005A8  50DF               	movf	indf2,w,c
  2043  0005AA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2044  0005AC  90D8               	bcf	status,0,c
  2045  0005AE  320D               	rrcf	??_CAN_SendFrame,f,c
  2046  0005B0  90D8               	bcf	status,0,c
  2047  0005B2  320D               	rrcf	??_CAN_SendFrame,f,c
  2048  0005B4  0E03               	movlw	3
  2049  0005B6  160D               	andwf	??_CAN_SendFrame,f,c
  2050  0005B8  460D               	rlncf	??_CAN_SendFrame,f,c
  2051  0005BA  460D               	rlncf	??_CAN_SendFrame,f,c
  2052  0005BC  5065               	movf	3941,w,c	;volatile
  2053  0005BE  180D               	xorwf	??_CAN_SendFrame,w,c
  2054  0005C0  0BFB               	andlw	-5
  2055  0005C2  180D               	xorwf	??_CAN_SendFrame,w,c
  2056  0005C4  6E65               	movwf	3941,c	;volatile
  2057                           
  2058                           ;CAN.c: 288:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2059  0005C6  EE20 F010          	lfsr	2,16
  2060  0005CA  500B               	movf	CAN_SendFrame@message,w,c
  2061  0005CC  26D9               	addwf	fsr2l,f,c
  2062  0005CE  500C               	movf	CAN_SendFrame@message+1,w,c
  2063  0005D0  22DA               	addwfc	fsr2h,f,c
  2064  0005D2  50DF               	movf	indf2,w,c
  2065  0005D4  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2066  0005D6  90D8               	bcf	status,0,c
  2067  0005D8  320D               	rrcf	??_CAN_SendFrame,f,c
  2068  0005DA  90D8               	bcf	status,0,c
  2069  0005DC  320D               	rrcf	??_CAN_SendFrame,f,c
  2070  0005DE  90D8               	bcf	status,0,c
  2071  0005E0  320D               	rrcf	??_CAN_SendFrame,f,c
  2072  0005E2  0E01               	movlw	1
  2073  0005E4  160D               	andwf	??_CAN_SendFrame,f,c
  2074  0005E6  460D               	rlncf	??_CAN_SendFrame,f,c
  2075  0005E8  460D               	rlncf	??_CAN_SendFrame,f,c
  2076  0005EA  460D               	rlncf	??_CAN_SendFrame,f,c
  2077  0005EC  5065               	movf	3941,w,c	;volatile
  2078  0005EE  180D               	xorwf	??_CAN_SendFrame,w,c
  2079  0005F0  0BF7               	andlw	-9
  2080  0005F2  180D               	xorwf	??_CAN_SendFrame,w,c
  2081  0005F4  6E65               	movwf	3941,c	;volatile
  2082                           
  2083                           ;CAN.c: 290:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2084  0005F6  0E66               	movlw	102
  2085  0005F8  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2086  0005FA  0E0F               	movlw	15
  2087  0005FC  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2088  0005FE  0E08               	movlw	8
  2089  000600  240B               	addwf	CAN_SendFrame@message,w,c
  2090  000602  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2091  000604  0E00               	movlw	0
  2092  000606  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2093  000608  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2094  00060A  EC1A  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2095  00060E                     l2123:
  2096                           
  2097                           ;CAN.c: 293:     RXB0CONbits.FILHIT3 = 1;
  2098  00060E  8660               	bsf	3936,3,c	;volatile
  2099                           
  2100                           ;CAN.c: 295:     DetectorLedRadar.Flags.ramkaTx = 1;
  2101  000610  883D               	bsf	_DetectorLedRadar,4,c
  2102  000612  0012               	return		;funcret
  2103  000614                     __end_of_CAN_SendFrame:
  2104                           	opt callstack 0
  2105                           
  2106 ;; *************** function _CAN_GenID *****************
  2107 ;; Defined at:
  2108 ;;		line 439 in file "CAN.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  message         2    5[COMRAM] PTR struct .
  2111 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2112 ;;  frameID         1    7[COMRAM] unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2124 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;Total ram usage:        5 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    3
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_FRAME_HandleCanFrame
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text16
  2139  000940                     __ptext16:
  2140                           	opt callstack 0
  2141  000940                     _CAN_GenID:
  2142                           	opt callstack 25
  2143                           
  2144                           ;CAN.c: 439: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 440: {;CAN.c: 442:     m
      +                          essage->frame_type = 0x03;
  2145                           
  2146                           ;incstack = 0
  2147  000940  EE20 F002          	lfsr	2,2
  2148  000944  5006               	movf	CAN_GenID@message,w,c
  2149  000946  26D9               	addwf	fsr2l,f,c
  2150  000948  5007               	movf	CAN_GenID@message+1,w,c
  2151  00094A  22DA               	addwfc	fsr2h,f,c
  2152  00094C  0E03               	movlw	3
  2153  00094E  6EDF               	movwf	indf2,c
  2154                           
  2155                           ;CAN.c: 443:     message->message_type = 0x01;
  2156  000950  EE20 F001          	lfsr	2,1
  2157  000954  5006               	movf	CAN_GenID@message,w,c
  2158  000956  26D9               	addwf	fsr2l,f,c
  2159  000958  5007               	movf	CAN_GenID@message+1,w,c
  2160  00095A  22DA               	addwfc	fsr2h,f,c
  2161  00095C  0E01               	movlw	1
  2162  00095E  6EDF               	movwf	indf2,c
  2163                           
  2164                           ;CAN.c: 444:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2165  000960  5008               	movf	CAN_GenID@frameID,w,c
  2166  000962  6E09               	movwf	??_CAN_GenID& (0+255),c
  2167  000964  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2168  000966  90D8               	bcf	status,0,c
  2169  000968  3609               	rlcf	??_CAN_GenID,f,c
  2170  00096A  360A               	rlcf	??_CAN_GenID+1,f,c
  2171  00096C  90D8               	bcf	status,0,c
  2172  00096E  3609               	rlcf	??_CAN_GenID,f,c
  2173  000970  360A               	rlcf	??_CAN_GenID+1,f,c
  2174  000972  EE20 F006          	lfsr	2,6
  2175  000976  5006               	movf	CAN_GenID@message,w,c
  2176  000978  26D9               	addwf	fsr2l,f,c
  2177  00097A  5007               	movf	CAN_GenID@message+1,w,c
  2178  00097C  22DA               	addwfc	fsr2h,f,c
  2179  00097E  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2180  000982  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2181                           
  2182                           ;CAN.c: 445:     message->id.w[0] = DaneCan.adresCAN;
  2183  000986  EE20 F004          	lfsr	2,4
  2184  00098A  5006               	movf	CAN_GenID@message,w,c
  2185  00098C  26D9               	addwf	fsr2l,f,c
  2186  00098E  5007               	movf	CAN_GenID@message+1,w,c
  2187  000990  22DA               	addwfc	fsr2h,f,c
  2188  000992  C039  FFDE         	movff	_DaneCan+2,postinc2
  2189  000996  C03A  FFDD         	movff	_DaneCan+3,postdec2
  2190                           
  2191                           ;CAN.c: 446:     message->id.v[2] |= 0x01;
  2192  00099A  EE20 F006          	lfsr	2,6
  2193  00099E  5006               	movf	CAN_GenID@message,w,c
  2194  0009A0  26D9               	addwf	fsr2l,f,c
  2195  0009A2  5007               	movf	CAN_GenID@message+1,w,c
  2196  0009A4  22DA               	addwfc	fsr2h,f,c
  2197  0009A6  0E00               	movlw	0
  2198  0009A8  80DB               	bsf	plusw2,0,c
  2199                           
  2200                           ;CAN.c: 447:     message->id.v[1] |= 0x40;
  2201  0009AA  EE20 F005          	lfsr	2,5
  2202  0009AE  5006               	movf	CAN_GenID@message,w,c
  2203  0009B0  26D9               	addwf	fsr2l,f,c
  2204  0009B2  5007               	movf	CAN_GenID@message+1,w,c
  2205  0009B4  22DA               	addwfc	fsr2h,f,c
  2206  0009B6  0E00               	movlw	0
  2207  0009B8  8CDB               	bsf	plusw2,6,c
  2208  0009BA  0012               	return		;funcret
  2209  0009BC                     __end_of_CAN_GenID:
  2210                           	opt callstack 0
  2211                           
  2212 ;; *************** function _CAN_TakeFrame *****************
  2213 ;; Defined at:
  2214 ;;		line 304 in file "CAN.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  message         2   13[COMRAM] PTR struct .
  2217 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  k               1   18[COMRAM] unsigned char 
  2220 ;;  tempCON         1   17[COMRAM] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      enum E10433
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;Total ram usage:        6 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    4
  2237 ;; This function calls:
  2238 ;;		_CAN_MoveBuffIntoFrame
  2239 ;;		___awdiv
  2240 ;; This function is called by:
  2241 ;;		_TRM_DataTransmition
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text17
  2246  000060                     __ptext17:
  2247                           	opt callstack 0
  2248  000060                     _CAN_TakeFrame:
  2249                           	opt callstack 25
  2250                           
  2251                           ;CAN.c: 304: BOOL CAN_TakeFrame(mID * message);CAN.c: 305: {;CAN.c: 306:     BYTE k, tem
      +                          pCON;;CAN.c: 308:     k = CANCON&0x0F;
  2252                           
  2253                           ;incstack = 0
  2254  000060  506F               	movf	3951,w,c	;volatile
  2255  000062  0B0F               	andlw	15
  2256  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2257                           
  2258                           ;CAN.c: 310:     ECANCON = 0x90 | k;
  2259  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2260  000068  0990               	iorlw	144
  2261  00006A  6E77               	movwf	3959,c	;volatile
  2262                           
  2263                           ;CAN.c: 313:     switch(k)
  2264  00006C  D018               	goto	l2419
  2265  00006E                     l207:
  2266                           
  2267                           ;CAN.c: 316:             tempCON = RXB0CON;
  2268  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2269                           
  2270                           ;CAN.c: 317:             break;
  2271  000072  D035               	goto	l208
  2272  000074                     l209:
  2273                           
  2274                           ;CAN.c: 319:             tempCON = RXB1CON;
  2275  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2276                           
  2277                           ;CAN.c: 320:             break;
  2278  000078  D032               	goto	l208
  2279  00007A                     l210:
  2280                           
  2281                           ;CAN.c: 322:             tempCON = B0CON;
  2282  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2283                           
  2284                           ;CAN.c: 323:             break;
  2285  00007E  D02F               	goto	l208
  2286  000080                     l211:
  2287                           
  2288                           ;CAN.c: 325:             tempCON = B1CON;
  2289  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2290                           
  2291                           ;CAN.c: 326:             break;
  2292  000084  D02C               	goto	l208
  2293  000086                     l212:
  2294                           
  2295                           ;CAN.c: 328:             tempCON = B2CON;
  2296  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2297                           
  2298                           ;CAN.c: 329:             break;
  2299  00008A  D029               	goto	l208
  2300  00008C                     l213:
  2301                           
  2302                           ;CAN.c: 331:             tempCON = B3CON;
  2303  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2304                           
  2305                           ;CAN.c: 332:             break;
  2306  000090  D026               	goto	l208
  2307  000092                     l214:
  2308                           
  2309                           ;CAN.c: 334:             tempCON = B4CON;
  2310  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2311                           
  2312                           ;CAN.c: 335:             break;
  2313  000096  D023               	goto	l208
  2314  000098                     l215:
  2315                           
  2316                           ;CAN.c: 337:             tempCON = B5CON;
  2317  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2318                           
  2319                           ;CAN.c: 338:             break;
  2320  00009C  D020               	goto	l208
  2321  00009E                     l2419:
  2322  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2323  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2324  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2325                           
  2326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2327                           ; Switch size 1, requested type "simple"
  2328                           ; Number of cases is 1, Range of values is 0 to 0
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte            4     3 (average)
  2332                           ;	Chosen strategy is simple_byte
  2333  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2334  0000A6  0A00               	xorlw	0	; case 0
  2335  0000A8  A4D8               	btfss	status,2,c
  2336  0000AA  D019               	goto	l208
  2337                           
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 8, Range of values is 0 to 7
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte           25    13 (average)
  2343                           ;	Chosen strategy is simple_byte
  2344  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2345  0000AE  0A00               	xorlw	0	; case 0
  2346  0000B0  B4D8               	btfsc	status,2,c
  2347  0000B2  D7DD               	goto	l207
  2348  0000B4  0A01               	xorlw	1	; case 1
  2349  0000B6  B4D8               	btfsc	status,2,c
  2350  0000B8  D7DD               	goto	l209
  2351  0000BA  0A03               	xorlw	3	; case 2
  2352  0000BC  B4D8               	btfsc	status,2,c
  2353  0000BE  D7DD               	goto	l210
  2354  0000C0  0A01               	xorlw	1	; case 3
  2355  0000C2  B4D8               	btfsc	status,2,c
  2356  0000C4  D7DD               	goto	l211
  2357  0000C6  0A07               	xorlw	7	; case 4
  2358  0000C8  B4D8               	btfsc	status,2,c
  2359  0000CA  D7DD               	goto	l212
  2360  0000CC  0A01               	xorlw	1	; case 5
  2361  0000CE  B4D8               	btfsc	status,2,c
  2362  0000D0  D7DD               	goto	l213
  2363  0000D2  0A03               	xorlw	3	; case 6
  2364  0000D4  B4D8               	btfsc	status,2,c
  2365  0000D6  D7DD               	goto	l214
  2366  0000D8  0A01               	xorlw	1	; case 7
  2367  0000DA  B4D8               	btfsc	status,2,c
  2368  0000DC  D7DD               	goto	l215
  2369  0000DE                     l208:
  2370                           
  2371                           ;CAN.c: 342:     if((tempCON & 0x80) > 0)
  2372  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2373  0000E0  D0A5               	goto	l2455
  2374                           
  2375                           ;CAN.c: 343:     {;CAN.c: 344:         message->buffer = RXB0CON & 0x1F;
  2376  0000E2  EE20 F003          	lfsr	2,3
  2377  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2378  0000E8  26D9               	addwf	fsr2l,f,c
  2379  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2380  0000EC  22DA               	addwfc	fsr2h,f,c
  2381  0000EE  5060               	movf	3936,w,c	;volatile
  2382  0000F0  0B1F               	andlw	31
  2383  0000F2  6EDF               	movwf	indf2,c
  2384                           
  2385                           ;CAN.c: 345:         message->id.v[0] = RXB0EIDL;
  2386  0000F4  EE20 F004          	lfsr	2,4
  2387  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2388  0000FA  26D9               	addwf	fsr2l,f,c
  2389  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2390  0000FE  22DA               	addwfc	fsr2h,f,c
  2391  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2392                           
  2393                           ;CAN.c: 346:         message->id.v[1] = RXB0EIDH;
  2394  000104  EE20 F005          	lfsr	2,5
  2395  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2396  00010A  26D9               	addwf	fsr2l,f,c
  2397  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2398  00010E  22DA               	addwfc	fsr2h,f,c
  2399  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2400                           
  2401                           ;CAN.c: 347:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2402  000114  EE20 F006          	lfsr	2,6
  2403  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2404  00011A  26D9               	addwf	fsr2l,f,c
  2405  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2406  00011E  22DA               	addwfc	fsr2h,f,c
  2407  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2408  000124  0E03               	movlw	3
  2409  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2410  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2411  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2412  00012E  0E00               	movlw	0
  2413  000130  6E09               	movwf	___awdiv@divisor+1,c
  2414  000132  0E08               	movlw	8
  2415  000134  6E08               	movwf	___awdiv@divisor,c
  2416  000136  EC5E  F004         	call	___awdiv	;wreg free
  2417  00013A  5006               	movf	?___awdiv,w,c
  2418  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2419  00013E  6EDF               	movwf	indf2,c
  2420                           
  2421                           ;CAN.c: 348:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2422  000140  5061               	movf	3937,w,c	;volatile
  2423  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2424  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2425  000146  0E05               	movlw	5
  2426  000148                     u1215:
  2427  000148  90D8               	bcf	status,0,c
  2428  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2429  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2430  00014E  2EE8               	decfsz	wreg,f,c
  2431  000150  D7FB               	goto	u1215
  2432  000152  EE20 F006          	lfsr	2,6
  2433  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2434  000158  26D9               	addwf	fsr2l,f,c
  2435  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2436  00015C  22DA               	addwfc	fsr2h,f,c
  2437  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2438  000160  12DE               	iorwf	postinc2,f,c
  2439  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2440  000164  12DD               	iorwf	postdec2,f,c
  2441                           
  2442                           ;CAN.c: 349:         message->frame_type=0x03;
  2443  000166  EE20 F002          	lfsr	2,2
  2444  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2445  00016C  26D9               	addwf	fsr2l,f,c
  2446  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2447  000170  22DA               	addwfc	fsr2h,f,c
  2448  000172  0E03               	movlw	3
  2449  000174  6EDF               	movwf	indf2,c
  2450                           
  2451                           ;CAN.c: 353:         if(RXB0DLCbits.RXRTR == 0)
  2452  000176  BC65               	btfsc	3941,6,c	;volatile
  2453  000178  D068               	goto	l2461
  2454                           
  2455                           ;CAN.c: 354:         {;CAN.c: 355:             message->message_type = 0x01;
  2456  00017A  EE20 F001          	lfsr	2,1
  2457  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2458  000180  26D9               	addwf	fsr2l,f,c
  2459  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2460  000184  22DA               	addwfc	fsr2h,f,c
  2461  000186  0E01               	movlw	1
  2462  000188  6EDF               	movwf	indf2,c
  2463                           
  2464                           ;CAN.c: 356:             message->data_length= RXB0DLC & 0x0F;
  2465  00018A  EE20 F010          	lfsr	2,16
  2466  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2467  000190  26D9               	addwf	fsr2l,f,c
  2468  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2469  000194  22DA               	addwfc	fsr2h,f,c
  2470  000196  5065               	movf	3941,w,c	;volatile
  2471  000198  0B0F               	andlw	15
  2472  00019A  6EDF               	movwf	indf2,c
  2473                           
  2474                           ;CAN.c: 357:             if(message->data_length > 8)
  2475  00019C  EE20 F010          	lfsr	2,16
  2476  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2477  0001A2  26D9               	addwf	fsr2l,f,c
  2478  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2479  0001A6  22DA               	addwfc	fsr2h,f,c
  2480  0001A8  0E08               	movlw	8
  2481  0001AA  64DF               	cpfsgt	indf2,c
  2482  0001AC  D041               	goto	l2459
  2483  0001AE  D01E               	goto	l2453
  2484  0001B0                     l2435:
  2485                           
  2486                           ;CAN.c: 363:                         RXB0CON = 0;
  2487  0001B0  0E00               	movlw	0
  2488  0001B2  6E60               	movwf	3936,c	;volatile
  2489                           
  2490                           ;CAN.c: 364:                         break;
  2491  0001B4  D03B               	goto	l2455
  2492  0001B6                     l2437:
  2493                           
  2494                           ;CAN.c: 366:                         RXB1CON = 0;
  2495  0001B6  0E00               	movlw	0
  2496  0001B8  010F               	movlb	15	; () banked
  2497  0001BA  D00E               	goto	L1
  2498  0001BC                     l2439:
  2499                           
  2500                           ;CAN.c: 369:                         B0CON = 0;
  2501  0001BC  0E00               	movlw	0
  2502  0001BE  010E               	movlb	14	; () banked
  2503  0001C0  6F20               	movwf	32,b	;volatile
  2504                           
  2505                           ;CAN.c: 370:                         break;
  2506  0001C2  D034               	goto	l2455
  2507  0001C4                     l2441:
  2508                           
  2509                           ;CAN.c: 372:                         B1CON = 0;
  2510  0001C4  0E00               	movlw	0
  2511  0001C6  010E               	movlb	14	; () banked
  2512  0001C8  6F30               	movwf	48,b	;volatile
  2513                           
  2514                           ;CAN.c: 373:                         break;
  2515  0001CA  D030               	goto	l2455
  2516  0001CC                     l2443:
  2517                           
  2518                           ;CAN.c: 375:                         B2CON = 0;
  2519  0001CC  0E00               	movlw	0
  2520  0001CE  010E               	movlb	14	; () banked
  2521  0001D0  6F40               	movwf	64,b	;volatile
  2522                           
  2523                           ;CAN.c: 376:                         break;
  2524  0001D2  D02C               	goto	l2455
  2525  0001D4                     l2445:
  2526                           
  2527                           ;CAN.c: 378:                         B3CON = 0;
  2528  0001D4  0E00               	movlw	0
  2529  0001D6  010E               	movlb	14	; () banked
  2530  0001D8                     L1:
  2531  0001D8  6F50               	movwf	80,b	;volatile
  2532                           
  2533                           ;CAN.c: 379:                         break;
  2534  0001DA  D028               	goto	l2455
  2535  0001DC                     l2447:
  2536                           
  2537                           ;CAN.c: 381:                         B4CON = 0;
  2538  0001DC  0E00               	movlw	0
  2539  0001DE  010E               	movlb	14	; () banked
  2540  0001E0  6F60               	movwf	96,b	;volatile
  2541                           
  2542                           ;CAN.c: 382:                         break;
  2543  0001E2  D024               	goto	l2455
  2544  0001E4                     l2449:
  2545                           
  2546                           ;CAN.c: 384:                         B5CON = 0;
  2547  0001E4  0E00               	movlw	0
  2548  0001E6  010E               	movlb	14	; () banked
  2549  0001E8  6F70               	movwf	112,b	;volatile
  2550                           
  2551                           ;CAN.c: 385:                         break;
  2552  0001EA  D020               	goto	l2455
  2553  0001EC                     l2453:
  2554  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2555  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2556  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2557                           
  2558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2559                           ; Switch size 1, requested type "simple"
  2560                           ; Number of cases is 1, Range of values is 0 to 0
  2561                           ; switch strategies available:
  2562                           ; Name         Instructions Cycles
  2563                           ; simple_byte            4     3 (average)
  2564                           ;	Chosen strategy is simple_byte
  2565  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2566  0001F4  0A00               	xorlw	0	; case 0
  2567  0001F6  A4D8               	btfss	status,2,c
  2568  0001F8  D019               	goto	l2455
  2569                           
  2570                           ; Switch size 1, requested type "simple"
  2571                           ; Number of cases is 8, Range of values is 0 to 7
  2572                           ; switch strategies available:
  2573                           ; Name         Instructions Cycles
  2574                           ; simple_byte           25    13 (average)
  2575                           ;	Chosen strategy is simple_byte
  2576  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2577  0001FC  0A00               	xorlw	0	; case 0
  2578  0001FE  B4D8               	btfsc	status,2,c
  2579  000200  D7D7               	goto	l2435
  2580  000202  0A01               	xorlw	1	; case 1
  2581  000204  B4D8               	btfsc	status,2,c
  2582  000206  D7D7               	goto	l2437
  2583  000208  0A03               	xorlw	3	; case 2
  2584  00020A  B4D8               	btfsc	status,2,c
  2585  00020C  D7D7               	goto	l2439
  2586  00020E  0A01               	xorlw	1	; case 3
  2587  000210  B4D8               	btfsc	status,2,c
  2588  000212  D7D8               	goto	l2441
  2589  000214  0A07               	xorlw	7	; case 4
  2590  000216  B4D8               	btfsc	status,2,c
  2591  000218  D7D9               	goto	l2443
  2592  00021A  0A01               	xorlw	1	; case 5
  2593  00021C  B4D8               	btfsc	status,2,c
  2594  00021E  D7DA               	goto	l2445
  2595  000220  0A03               	xorlw	3	; case 6
  2596  000222  B4D8               	btfsc	status,2,c
  2597  000224  D7DB               	goto	l2447
  2598  000226  0A01               	xorlw	1	; case 7
  2599  000228  B4D8               	btfsc	status,2,c
  2600  00022A  D7DC               	goto	l2449
  2601  00022C                     l2455:
  2602                           
  2603                           ;CAN.c: 387:                 return FALSE;
  2604  00022C  0E00               	movlw	0
  2605  00022E  0012               	return	
  2606  000230                     l2459:
  2607                           
  2608                           ;CAN.c: 389:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2609  000230  0E08               	movlw	8
  2610  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  2611  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2612  000236  0E00               	movlw	0
  2613  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2614  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2615  00023C  0E66               	movlw	102
  2616  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2617  000240  0E0F               	movlw	15
  2618  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2619  000244  EC1A  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2620                           
  2621                           ;CAN.c: 390:         }
  2622  000248  D027               	goto	l2481
  2623  00024A                     l2461:
  2624                           
  2625                           ;CAN.c: 393:         {;CAN.c: 394:             message->message_type=0x02;
  2626  00024A  EE20 F001          	lfsr	2,1
  2627  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  2628  000250  26D9               	addwf	fsr2l,f,c
  2629  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  2630  000254  22DA               	addwfc	fsr2h,f,c
  2631  000256  0E02               	movlw	2
  2632  000258  6EDF               	movwf	indf2,c
  2633  00025A  D01E               	goto	l2481
  2634  00025C                     l2463:
  2635                           
  2636                           ;CAN.c: 400:                 RXB0CON = 0;
  2637  00025C  0E00               	movlw	0
  2638  00025E  6E60               	movwf	3936,c	;volatile
  2639                           
  2640                           ;CAN.c: 401:                 break;
  2641  000260  D03B               	goto	l2483
  2642  000262                     l2465:
  2643                           
  2644                           ;CAN.c: 403:                 RXB1CON = 0;
  2645  000262  0E00               	movlw	0
  2646  000264  010F               	movlb	15	; () banked
  2647  000266  D00E               	goto	L2
  2648  000268                     l2467:
  2649                           
  2650                           ;CAN.c: 406:                 B0CON = 0;
  2651  000268  0E00               	movlw	0
  2652  00026A  010E               	movlb	14	; () banked
  2653  00026C  6F20               	movwf	32,b	;volatile
  2654                           
  2655                           ;CAN.c: 407:                 break;
  2656  00026E  D034               	goto	l2483
  2657  000270                     l2469:
  2658                           
  2659                           ;CAN.c: 409:                 B1CON = 0;
  2660  000270  0E00               	movlw	0
  2661  000272  010E               	movlb	14	; () banked
  2662  000274  6F30               	movwf	48,b	;volatile
  2663                           
  2664                           ;CAN.c: 410:                 break;
  2665  000276  D030               	goto	l2483
  2666  000278                     l2471:
  2667                           
  2668                           ;CAN.c: 412:                 B2CON = 0;
  2669  000278  0E00               	movlw	0
  2670  00027A  010E               	movlb	14	; () banked
  2671  00027C  6F40               	movwf	64,b	;volatile
  2672                           
  2673                           ;CAN.c: 413:                 break;
  2674  00027E  D02C               	goto	l2483
  2675  000280                     l2473:
  2676                           
  2677                           ;CAN.c: 415:                 B3CON = 0;
  2678  000280  0E00               	movlw	0
  2679  000282  010E               	movlb	14	; () banked
  2680  000284                     L2:
  2681  000284  6F50               	movwf	80,b	;volatile
  2682                           
  2683                           ;CAN.c: 416:                 break;
  2684  000286  D028               	goto	l2483
  2685  000288                     l2475:
  2686                           
  2687                           ;CAN.c: 418:                 B4CON = 0;
  2688  000288  0E00               	movlw	0
  2689  00028A  010E               	movlb	14	; () banked
  2690  00028C  6F60               	movwf	96,b	;volatile
  2691                           
  2692                           ;CAN.c: 419:                 break;
  2693  00028E  D024               	goto	l2483
  2694  000290                     l2477:
  2695                           
  2696                           ;CAN.c: 421:                 B5CON = 0;
  2697  000290  0E00               	movlw	0
  2698  000292  010E               	movlb	14	; () banked
  2699  000294  6F70               	movwf	112,b	;volatile
  2700                           
  2701                           ;CAN.c: 422:                 break;
  2702  000296  D020               	goto	l2483
  2703  000298                     l2481:
  2704  000298  5013               	movf	CAN_TakeFrame@k,w,c
  2705  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2706  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2707                           
  2708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2709                           ; Switch size 1, requested type "simple"
  2710                           ; Number of cases is 1, Range of values is 0 to 0
  2711                           ; switch strategies available:
  2712                           ; Name         Instructions Cycles
  2713                           ; simple_byte            4     3 (average)
  2714                           ;	Chosen strategy is simple_byte
  2715  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  2716  0002A0  0A00               	xorlw	0	; case 0
  2717  0002A2  A4D8               	btfss	status,2,c
  2718  0002A4  D019               	goto	l2483
  2719                           
  2720                           ; Switch size 1, requested type "simple"
  2721                           ; Number of cases is 8, Range of values is 0 to 7
  2722                           ; switch strategies available:
  2723                           ; Name         Instructions Cycles
  2724                           ; simple_byte           25    13 (average)
  2725                           ;	Chosen strategy is simple_byte
  2726  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  2727  0002A8  0A00               	xorlw	0	; case 0
  2728  0002AA  B4D8               	btfsc	status,2,c
  2729  0002AC  D7D7               	goto	l2463
  2730  0002AE  0A01               	xorlw	1	; case 1
  2731  0002B0  B4D8               	btfsc	status,2,c
  2732  0002B2  D7D7               	goto	l2465
  2733  0002B4  0A03               	xorlw	3	; case 2
  2734  0002B6  B4D8               	btfsc	status,2,c
  2735  0002B8  D7D7               	goto	l2467
  2736  0002BA  0A01               	xorlw	1	; case 3
  2737  0002BC  B4D8               	btfsc	status,2,c
  2738  0002BE  D7D8               	goto	l2469
  2739  0002C0  0A07               	xorlw	7	; case 4
  2740  0002C2  B4D8               	btfsc	status,2,c
  2741  0002C4  D7D9               	goto	l2471
  2742  0002C6  0A01               	xorlw	1	; case 5
  2743  0002C8  B4D8               	btfsc	status,2,c
  2744  0002CA  D7DA               	goto	l2473
  2745  0002CC  0A03               	xorlw	3	; case 6
  2746  0002CE  B4D8               	btfsc	status,2,c
  2747  0002D0  D7DB               	goto	l2475
  2748  0002D2  0A01               	xorlw	1	; case 7
  2749  0002D4  B4D8               	btfsc	status,2,c
  2750  0002D6  D7DC               	goto	l2477
  2751  0002D8                     l2483:
  2752                           
  2753                           ;CAN.c: 424:         return TRUE;
  2754  0002D8  0E01               	movlw	1
  2755  0002DA  0012               	return		;funcret
  2756  0002DC                     __end_of_CAN_TakeFrame:
  2757                           	opt callstack 0
  2758                           
  2759 ;; *************** function ___awdiv *****************
  2760 ;; Defined at:
  2761 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  dividend        2    5[COMRAM] int 
  2764 ;;  divisor         2    7[COMRAM] int 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  quotient        2   11[COMRAM] int 
  2767 ;;  sign            1   10[COMRAM] unsigned char 
  2768 ;;  counter         1    9[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  2    5[COMRAM] int 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2781 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2782 ;;Total ram usage:        8 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    3
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_CAN_TakeFrame
  2789 ;;		_FRAME_HandleCanFrame
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text18
  2794  0008BC                     __ptext18:
  2795                           	opt callstack 0
  2796  0008BC                     ___awdiv:
  2797                           	opt callstack 25
  2798                           
  2799                           ;incstack = 0
  2800  0008BC  0E00               	movlw	0
  2801  0008BE  6E0B               	movwf	___awdiv@sign,c
  2802  0008C0  AE09               	btfss	___awdiv@divisor+1,7,c
  2803  0008C2  D006               	goto	l2339
  2804  0008C4  6C08               	negf	___awdiv@divisor,c
  2805  0008C6  1E09               	comf	___awdiv@divisor+1,f,c
  2806  0008C8  B0D8               	btfsc	status,0,c
  2807  0008CA  2A09               	incf	___awdiv@divisor+1,f,c
  2808  0008CC  0E01               	movlw	1
  2809  0008CE  6E0B               	movwf	___awdiv@sign,c
  2810  0008D0                     l2339:
  2811  0008D0  AE07               	btfss	___awdiv@dividend+1,7,c
  2812  0008D2  D006               	goto	l2345
  2813  0008D4  6C06               	negf	___awdiv@dividend,c
  2814  0008D6  1E07               	comf	___awdiv@dividend+1,f,c
  2815  0008D8  B0D8               	btfsc	status,0,c
  2816  0008DA  2A07               	incf	___awdiv@dividend+1,f,c
  2817  0008DC  0E01               	movlw	1
  2818  0008DE  1A0B               	xorwf	___awdiv@sign,f,c
  2819  0008E0                     l2345:
  2820  0008E0  0E00               	movlw	0
  2821  0008E2  6E0D               	movwf	___awdiv@quotient+1,c
  2822  0008E4  0E00               	movlw	0
  2823  0008E6  6E0C               	movwf	___awdiv@quotient,c
  2824  0008E8  5008               	movf	___awdiv@divisor,w,c
  2825  0008EA  1009               	iorwf	___awdiv@divisor+1,w,c
  2826  0008EC  B4D8               	btfsc	status,2,c
  2827  0008EE  D01C               	goto	l2367
  2828  0008F0  0E01               	movlw	1
  2829  0008F2  6E0A               	movwf	___awdiv@counter,c
  2830  0008F4  D004               	goto	l2353
  2831  0008F6                     l2351:
  2832  0008F6  90D8               	bcf	status,0,c
  2833  0008F8  3608               	rlcf	___awdiv@divisor,f,c
  2834  0008FA  3609               	rlcf	___awdiv@divisor+1,f,c
  2835  0008FC  2A0A               	incf	___awdiv@counter,f,c
  2836  0008FE                     l2353:
  2837  0008FE  AE09               	btfss	___awdiv@divisor+1,7,c
  2838  000900  D7FA               	goto	l2351
  2839  000902                     u1120:
  2840  000902  90D8               	bcf	status,0,c
  2841  000904  360C               	rlcf	___awdiv@quotient,f,c
  2842  000906  360D               	rlcf	___awdiv@quotient+1,f,c
  2843  000908  5008               	movf	___awdiv@divisor,w,c
  2844  00090A  5C06               	subwf	___awdiv@dividend,w,c
  2845  00090C  5009               	movf	___awdiv@divisor+1,w,c
  2846  00090E  5807               	subwfb	___awdiv@dividend+1,w,c
  2847  000910  A0D8               	btfss	status,0,c
  2848  000912  D005               	goto	l2363
  2849  000914  5008               	movf	___awdiv@divisor,w,c
  2850  000916  5E06               	subwf	___awdiv@dividend,f,c
  2851  000918  5009               	movf	___awdiv@divisor+1,w,c
  2852  00091A  5A07               	subwfb	___awdiv@dividend+1,f,c
  2853  00091C  800C               	bsf	___awdiv@quotient,0,c
  2854  00091E                     l2363:
  2855  00091E  90D8               	bcf	status,0,c
  2856  000920  3209               	rrcf	___awdiv@divisor+1,f,c
  2857  000922  3208               	rrcf	___awdiv@divisor,f,c
  2858  000924  2E0A               	decfsz	___awdiv@counter,f,c
  2859  000926  D7ED               	goto	u1120
  2860  000928                     l2367:
  2861  000928  500B               	movf	___awdiv@sign,w,c
  2862  00092A  B4D8               	btfsc	status,2,c
  2863  00092C  D004               	goto	l2371
  2864  00092E  6C0C               	negf	___awdiv@quotient,c
  2865  000930  1E0D               	comf	___awdiv@quotient+1,f,c
  2866  000932  B0D8               	btfsc	status,0,c
  2867  000934  2A0D               	incf	___awdiv@quotient+1,f,c
  2868  000936                     l2371:
  2869  000936  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  2870  00093A  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  2871  00093E  0012               	return		;funcret
  2872  000940                     __end_of___awdiv:
  2873                           	opt callstack 0
  2874                           
  2875 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  2876 ;; Defined at:
  2877 ;;		line 226 in file "CAN.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  2880 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2881 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  2882 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  i               1    9[COMRAM] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2897 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2898 ;;Total ram usage:        5 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    3
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_CAN_SendFrame
  2905 ;;		_CAN_TakeFrame
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text19
  2910  000E34                     __ptext19:
  2911                           	opt callstack 0
  2912  000E34                     _CAN_MoveBuffIntoFrame:
  2913                           	opt callstack 24
  2914                           
  2915                           ;CAN.c: 226: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 227: {;CAN.c
      +                          : 228:     BYTE i;;CAN.c: 229:     for(i=0; i<8; ++i)
  2916                           
  2917                           ;incstack = 0
  2918  000E34  0E00               	movlw	0
  2919  000E36  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  2920  000E38                     l2039:
  2921                           
  2922                           ;CAN.c: 230:     {;CAN.c: 231:         Ram[i]=(*(Buf+i));
  2923  000E38  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2924  000E3A  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  2925  000E3C  6ED9               	movwf	fsr2l,c
  2926  000E3E  0E00               	movlw	0
  2927  000E40  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  2928  000E42  6EDA               	movwf	fsr2h,c
  2929  000E44  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2930  000E46  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  2931  000E48  6EE1               	movwf	fsr1l,c
  2932  000E4A  0E00               	movlw	0
  2933  000E4C  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  2934  000E4E  6EE2               	movwf	fsr1h,c
  2935  000E50  CFDF FFE7          	movff	indf2,indf1
  2936                           
  2937                           ;CAN.c: 232:     }
  2938  000E54  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  2939  000E56  0E07               	movlw	7
  2940  000E58  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  2941  000E5A  D7EE               	goto	l2039
  2942  000E5C  0012               	return	
  2943  000E5E                     __end_of_CAN_MoveBuffIntoFrame:
  2944                           	opt callstack 0
  2945                           
  2946 ;; *************** function _TMR1_Update_flag_Set *****************
  2947 ;; Defined at:
  2948 ;;		line 32 in file "TMR1.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  a               2    5[COMRAM] unsigned int 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		None
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;Total ram usage:        2 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    3
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text20
  2977  000F2A                     __ptext20:
  2978                           	opt callstack 0
  2979  000F2A                     _TMR1_Update_flag_Set:
  2980                           	opt callstack 27
  2981                           
  2982                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  2983                           
  2984                           ;incstack = 0
  2985  000F2A  C006  F03B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  2986  000F2E  C007  F03C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  2987  000F32  0012               	return		;funcret
  2988  000F34                     __end_of_TMR1_Update_flag_Set:
  2989                           	opt callstack 0
  2990                           
  2991 ;; *************** function _TMR1_Update_flag_Get *****************
  2992 ;; Defined at:
  2993 ;;		line 47 in file "TMR1.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  2    5[COMRAM] unsigned int 
  3000 ;; Registers used:
  3001 ;;		None
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    3
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text21
  3022  000F34                     __ptext21:
  3023                           	opt callstack 0
  3024  000F34                     _TMR1_Update_flag_Get:
  3025                           	opt callstack 27
  3026                           
  3027                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3028                           
  3029                           ;incstack = 0
  3030  000F34  C03B  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3031  000F38  C03C  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3032  000F3C  0012               	return		;funcret
  3033  000F3E                     __end_of_TMR1_Update_flag_Get:
  3034                           	opt callstack 0
  3035                           
  3036 ;; *************** function _LED_Update *****************
  3037 ;; Defined at:
  3038 ;;		line 75 in file "LED.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      unsigned char 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    5
  3059 ;; This function calls:
  3060 ;;		_LED_Left
  3061 ;;		_LED_Light_Pos
  3062 ;;		_LED_Right
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text22
  3069  000B30                     __ptext22:
  3070                           	opt callstack 0
  3071  000B30                     _LED_Update:
  3072                           	opt callstack 25
  3073                           
  3074                           ;LED.c: 77:     static LED_RGA_type Red = RED;;LED.c: 78:     static LED_RGA_type Green 
      +                          = GREEN;;LED.c: 79:     static UINT pos1 = 0b0000000001;;LED.c: 80:     static UINT pos2
      +                           = 0b0000000001;;LED.c: 83:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3075                           
  3076                           ;incstack = 0
  3077  000B30  C043  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3078  000B34  C044  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3079  000B38  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3080  000B3C  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3081  000B40  5049               	movf	LED_Update@Green,w,c
  3082  000B42  ECB3  F003         	call	_LED_Light_Pos
  3083                           
  3084                           ;LED.c: 84:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3085  000B46  C045  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3086  000B4A  C046  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3087  000B4E  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3088  000B52  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3089  000B56  0E00               	movlw	0
  3090  000B58  ECB3  F003         	call	_LED_Light_Pos
  3091                           
  3092                           ;LED.c: 85:     pos1 = LED_Right(pos1);
  3093  000B5C  C045  F006         	movff	LED_Update@pos1,LED_Right@a
  3094  000B60  C046  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3095  000B64  EC13  F006         	call	_LED_Right	;wreg free
  3096  000B68  C006  F045         	movff	?_LED_Right,LED_Update@pos1
  3097  000B6C  C007  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  3098                           
  3099                           ;LED.c: 86:     pos2 = LED_Left(pos2);
  3100  000B70  C043  F006         	movff	LED_Update@pos2,LED_Left@a
  3101  000B74  C044  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3102  000B78  EC5C  F006         	call	_LED_Left	;wreg free
  3103  000B7C  C006  F043         	movff	?_LED_Left,LED_Update@pos2
  3104  000B80  C007  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  3105  000B84  0012               	return		;funcret
  3106  000B86                     __end_of_LED_Update:
  3107                           	opt callstack 0
  3108                           
  3109 ;; *************** function _LED_Light_Pos *****************
  3110 ;; Defined at:
  3111 ;;		line 158 in file "LED.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  color           1    wreg     enum E10639
  3114 ;;  pos             2   12[COMRAM] unsigned int 
  3115 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  color           1   16[COMRAM] enum E10639
  3118 ;;  flage           2   21[COMRAM] unsigned int 
  3119 ;;  pos2            2   19[COMRAM] unsigned int 
  3120 ;;  LED_array       2   17[COMRAM] unsigned int 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  2   12[COMRAM] unsigned int 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3131 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3133 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3134 ;;Total ram usage:       11 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    4
  3137 ;; This function calls:
  3138 ;;		_LED_Control
  3139 ;;		_LED_Left
  3140 ;;		_LED_Right
  3141 ;;		___lwdiv
  3142 ;; This function is called by:
  3143 ;;		_LED_Update
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text23
  3148  000766                     __ptext23:
  3149                           	opt callstack 0
  3150  000766                     _LED_Light_Pos:
  3151                           	opt callstack 25
  3152                           
  3153                           ;incstack = 0
  3154                           ;LED_Light_Pos@color stored from wreg
  3155  000766  6E11               	movwf	LED_Light_Pos@color,c
  3156                           
  3157                           ;LED.c: 158: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 15
      +                          9: {;LED.c: 160:     UINT pos2 =pos;
  3158  000768  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3159  00076C  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3160                           
  3161                           ;LED.c: 161:     UINT LED_array = 0b0000000000;
  3162  000770  0E00               	movlw	0
  3163  000772  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3164  000774  0E00               	movlw	0
  3165  000776  6E12               	movwf	LED_Light_Pos@LED_array,c
  3166                           
  3167                           ;LED.c: 162:     UINT flage = fulfillment/10;
  3168  000778  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3169  00077C  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3170  000780  0E00               	movlw	0
  3171  000782  6E09               	movwf	___lwdiv@divisor+1,c
  3172  000784  0E0A               	movlw	10
  3173  000786  6E08               	movwf	___lwdiv@divisor,c
  3174  000788  ECC3  F005         	call	___lwdiv	;wreg free
  3175  00078C  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3176  000790  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3177                           
  3178                           ;LED.c: 163:     if(color == RED)
  3179  000794  5011               	movf	LED_Light_Pos@color,w,c
  3180  000796  B4D8               	btfsc	status,2,c
  3181  000798  D017               	goto	l2521
  3182  00079A  D031               	goto	l2529
  3183  00079C                     l2515:
  3184                           
  3185                           ;LED.c: 166:         {;LED.c: 167:             LED_array = pos2|LED_array;
  3186  00079C  5012               	movf	LED_Light_Pos@LED_array,w,c
  3187  00079E  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3188  0007A0  6E12               	movwf	LED_Light_Pos@LED_array,c
  3189  0007A2  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3190  0007A4  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3191  0007A6  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3192                           
  3193                           ;LED.c: 168:             pos2 = LED_Left(pos2);
  3194  0007A8  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3195  0007AC  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3196  0007B0  EC5C  F006         	call	_LED_Left	;wreg free
  3197  0007B4  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3198  0007B8  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3199                           
  3200                           ;LED.c: 169:             flage = flage - 1;
  3201  0007BC  0EFF               	movlw	255
  3202  0007BE  2416               	addwf	LED_Light_Pos@flage,w,c
  3203  0007C0  6E16               	movwf	LED_Light_Pos@flage,c
  3204  0007C2  0EFF               	movlw	255
  3205  0007C4  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3206  0007C6  6E17               	movwf	LED_Light_Pos@flage+1,c
  3207  0007C8                     l2521:
  3208                           
  3209                           ;LED.c: 165:         while(flage>0)
  3210  0007C8  5016               	movf	LED_Light_Pos@flage,w,c
  3211  0007CA  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3212  0007CC  B4D8               	btfsc	status,2,c
  3213  0007CE  D01B               	goto	u1260
  3214  0007D0  D7E5               	goto	l2515
  3215  0007D2                     l2523:
  3216                           
  3217                           ;LED.c: 175:         {;LED.c: 176:             LED_array = pos2|LED_array;
  3218  0007D2  5012               	movf	LED_Light_Pos@LED_array,w,c
  3219  0007D4  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3220  0007D6  6E12               	movwf	LED_Light_Pos@LED_array,c
  3221  0007D8  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3222  0007DA  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3223  0007DC  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3224                           
  3225                           ;LED.c: 177:             pos2 = LED_Right(pos2);
  3226  0007DE  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3227  0007E2  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3228  0007E6  EC13  F006         	call	_LED_Right	;wreg free
  3229  0007EA  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3230  0007EE  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3231                           
  3232                           ;LED.c: 178:             flage = flage - 1;
  3233  0007F2  0EFF               	movlw	255
  3234  0007F4  2416               	addwf	LED_Light_Pos@flage,w,c
  3235  0007F6  6E16               	movwf	LED_Light_Pos@flage,c
  3236  0007F8  0EFF               	movlw	255
  3237  0007FA  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3238  0007FC  6E17               	movwf	LED_Light_Pos@flage+1,c
  3239  0007FE                     l2529:
  3240                           
  3241                           ;LED.c: 174:         while(flage>0)
  3242  0007FE  5016               	movf	LED_Light_Pos@flage,w,c
  3243  000800  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3244  000802  A4D8               	btfss	status,2,c
  3245  000804  D7E6               	goto	l2523
  3246  000806                     u1260:
  3247                           
  3248                           ;LED.c: 181:     LED_Control(color, LED_array);
  3249  000806  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3250  00080A  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3251  00080E  5011               	movf	LED_Light_Pos@color,w,c
  3252  000810  EC0A  F003         	call	_LED_Control
  3253  000814  0012               	return		;funcret
  3254  000816                     __end_of_LED_Light_Pos:
  3255                           	opt callstack 0
  3256                           
  3257 ;; *************** function ___lwdiv *****************
  3258 ;; Defined at:
  3259 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  dividend        2    5[COMRAM] unsigned int 
  3262 ;;  divisor         2    7[COMRAM] unsigned int 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  quotient        2    9[COMRAM] unsigned int 
  3265 ;;  counter         1   11[COMRAM] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  2    5[COMRAM] unsigned int 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;Total ram usage:        7 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    3
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_LED_Light_Pos
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text24
  3290  000B86                     __ptext24:
  3291                           	opt callstack 0
  3292  000B86                     ___lwdiv:
  3293                           	opt callstack 25
  3294                           
  3295                           ;incstack = 0
  3296  000B86  0E00               	movlw	0
  3297  000B88  6E0B               	movwf	___lwdiv@quotient+1,c
  3298  000B8A  0E00               	movlw	0
  3299  000B8C  6E0A               	movwf	___lwdiv@quotient,c
  3300  000B8E  5008               	movf	___lwdiv@divisor,w,c
  3301  000B90  1009               	iorwf	___lwdiv@divisor+1,w,c
  3302  000B92  B4D8               	btfsc	status,2,c
  3303  000B94  D01C               	goto	l1057
  3304  000B96  0E01               	movlw	1
  3305  000B98  6E0C               	movwf	___lwdiv@counter,c
  3306  000B9A  D004               	goto	l2383
  3307  000B9C                     l2381:
  3308  000B9C  90D8               	bcf	status,0,c
  3309  000B9E  3608               	rlcf	___lwdiv@divisor,f,c
  3310  000BA0  3609               	rlcf	___lwdiv@divisor+1,f,c
  3311  000BA2  2A0C               	incf	___lwdiv@counter,f,c
  3312  000BA4                     l2383:
  3313  000BA4  AE09               	btfss	___lwdiv@divisor+1,7,c
  3314  000BA6  D7FA               	goto	l2381
  3315  000BA8                     u1160:
  3316  000BA8  90D8               	bcf	status,0,c
  3317  000BAA  360A               	rlcf	___lwdiv@quotient,f,c
  3318  000BAC  360B               	rlcf	___lwdiv@quotient+1,f,c
  3319  000BAE  5008               	movf	___lwdiv@divisor,w,c
  3320  000BB0  5C06               	subwf	___lwdiv@dividend,w,c
  3321  000BB2  5009               	movf	___lwdiv@divisor+1,w,c
  3322  000BB4  5807               	subwfb	___lwdiv@dividend+1,w,c
  3323  000BB6  A0D8               	btfss	status,0,c
  3324  000BB8  D005               	goto	l2393
  3325  000BBA  5008               	movf	___lwdiv@divisor,w,c
  3326  000BBC  5E06               	subwf	___lwdiv@dividend,f,c
  3327  000BBE  5009               	movf	___lwdiv@divisor+1,w,c
  3328  000BC0  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3329  000BC2  800A               	bsf	___lwdiv@quotient,0,c
  3330  000BC4                     l2393:
  3331  000BC4  90D8               	bcf	status,0,c
  3332  000BC6  3209               	rrcf	___lwdiv@divisor+1,f,c
  3333  000BC8  3208               	rrcf	___lwdiv@divisor,f,c
  3334  000BCA  2E0C               	decfsz	___lwdiv@counter,f,c
  3335  000BCC  D7ED               	goto	u1160
  3336  000BCE                     l1057:
  3337  000BCE  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3338  000BD2  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3339  000BD6  0012               	return		;funcret
  3340  000BD8                     __end_of___lwdiv:
  3341                           	opt callstack 0
  3342                           
  3343 ;; *************** function _LED_Right *****************
  3344 ;; Defined at:
  3345 ;;		line 102 in file "LED.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  a               2    5[COMRAM] unsigned int 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  b               2    9[COMRAM] unsigned int 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2    5[COMRAM] unsigned int 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3363 ;;Total ram usage:        6 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    3
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_LED_Update
  3370 ;;		_LED_Light_Pos
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text25
  3375  000C26                     __ptext25:
  3376                           	opt callstack 0
  3377  000C26                     _LED_Right:
  3378                           	opt callstack 26
  3379                           
  3380                           ;LED.c: 102: UINT LED_Right(UINT a);LED.c: 103: {;LED.c: 104:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3381                           
  3382                           ;incstack = 0
  3383  000C26  A006               	btfss	LED_Right@a,0,c
  3384  000C28  D018               	goto	l2139
  3385                           
  3386                           ;LED.c: 105:     {;LED.c: 106:         UINT b = a & 0b1111111110;
  3387  000C2A  0EFE               	movlw	254
  3388  000C2C  1406               	andwf	LED_Right@a,w,c
  3389  000C2E  6E0A               	movwf	LED_Right@b,c
  3390  000C30  0E03               	movlw	3
  3391  000C32  1407               	andwf	LED_Right@a+1,w,c
  3392  000C34  6E0B               	movwf	LED_Right@b+1,c
  3393                           
  3394                           ;LED.c: 107:         b = b >> 1;
  3395  000C36  90D8               	bcf	status,0,c
  3396  000C38  300B               	rrcf	LED_Right@b+1,w,c
  3397  000C3A  6E08               	movwf	??_LED_Right& (0+255),c
  3398  000C3C  300A               	rrcf	LED_Right@b,w,c
  3399  000C3E  6E0A               	movwf	LED_Right@b,c
  3400  000C40  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3401                           
  3402                           ;LED.c: 108:         b = b | 0b1000000000;
  3403  000C44  0E00               	movlw	0
  3404  000C46  100A               	iorwf	LED_Right@b,w,c
  3405  000C48  6E0A               	movwf	LED_Right@b,c
  3406  000C4A  0E02               	movlw	2
  3407  000C4C  100B               	iorwf	LED_Right@b+1,w,c
  3408  000C4E  6E0B               	movwf	LED_Right@b+1,c
  3409                           
  3410                           ;LED.c: 109:         return b;
  3411  000C50  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3412  000C54  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3413  000C58  0012               	return	
  3414  000C5A                     l2139:
  3415                           
  3416                           ;LED.c: 112:     {;LED.c: 113:         a =a >> 1;
  3417  000C5A  90D8               	bcf	status,0,c
  3418  000C5C  3007               	rrcf	LED_Right@a+1,w,c
  3419  000C5E  6E08               	movwf	??_LED_Right& (0+255),c
  3420  000C60  3006               	rrcf	LED_Right@a,w,c
  3421  000C62  6E06               	movwf	LED_Right@a,c
  3422  000C64  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3423                           
  3424                           ;LED.c: 114:         return a;
  3425  000C68  C006  F006         	movff	LED_Right@a,?_LED_Right
  3426  000C6C  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3427  000C70  0012               	return		;funcret
  3428  000C72                     __end_of_LED_Right:
  3429                           	opt callstack 0
  3430                           
  3431 ;; *************** function _LED_Left *****************
  3432 ;; Defined at:
  3433 ;;		line 129 in file "LED.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  a               2    5[COMRAM] unsigned int 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  b               2    7[COMRAM] unsigned int 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  2    5[COMRAM] unsigned int 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3450 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;Total ram usage:        4 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    3
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_LED_Update
  3458 ;;		_LED_Light_Pos
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text26
  3463  000CB8                     __ptext26:
  3464                           	opt callstack 0
  3465  000CB8                     _LED_Left:
  3466                           	opt callstack 25
  3467                           
  3468                           ;LED.c: 129: UINT LED_Left(UINT a);LED.c: 130: {;LED.c: 131:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3469                           
  3470                           ;incstack = 0
  3471  000CB8  A207               	btfss	LED_Left@a+1,1,c
  3472  000CBA  D015               	goto	l2155
  3473                           
  3474                           ;LED.c: 132:     {;LED.c: 133:         UINT b = a & 0b0111111111;
  3475  000CBC  0EFF               	movlw	255
  3476  000CBE  1406               	andwf	LED_Left@a,w,c
  3477  000CC0  6E08               	movwf	LED_Left@b,c
  3478  000CC2  0E01               	movlw	1
  3479  000CC4  1407               	andwf	LED_Left@a+1,w,c
  3480  000CC6  6E09               	movwf	LED_Left@b+1,c
  3481                           
  3482                           ;LED.c: 134:         b = b << 1;
  3483  000CC8  90D8               	bcf	status,0,c
  3484  000CCA  3408               	rlcf	LED_Left@b,w,c
  3485  000CCC  6E08               	movwf	LED_Left@b,c
  3486  000CCE  3409               	rlcf	LED_Left@b+1,w,c
  3487  000CD0  6E09               	movwf	LED_Left@b+1,c
  3488                           
  3489                           ;LED.c: 135:         b = b | 0b0000000001;
  3490  000CD2  0E01               	movlw	1
  3491  000CD4  1008               	iorwf	LED_Left@b,w,c
  3492  000CD6  6E08               	movwf	LED_Left@b,c
  3493  000CD8  5009               	movf	LED_Left@b+1,w,c
  3494  000CDA  6E09               	movwf	LED_Left@b+1,c
  3495                           
  3496                           ;LED.c: 136:         return b;
  3497  000CDC  C008  F006         	movff	LED_Left@b,?_LED_Left
  3498  000CE0  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3499  000CE4  0012               	return	
  3500  000CE6                     l2155:
  3501                           
  3502                           ;LED.c: 139:     {;LED.c: 140:         a = a << 1;
  3503  000CE6  90D8               	bcf	status,0,c
  3504  000CE8  3406               	rlcf	LED_Left@a,w,c
  3505  000CEA  6E06               	movwf	LED_Left@a,c
  3506  000CEC  3407               	rlcf	LED_Left@a+1,w,c
  3507  000CEE  6E07               	movwf	LED_Left@a+1,c
  3508                           
  3509                           ;LED.c: 141:         return a;
  3510  000CF0  C006  F006         	movff	LED_Left@a,?_LED_Left
  3511  000CF4  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3512  000CF8  0012               	return		;funcret
  3513  000CFA                     __end_of_LED_Left:
  3514                           	opt callstack 0
  3515                           
  3516 ;; *************** function _INI_All *****************
  3517 ;; Defined at:
  3518 ;;		line 52 in file "INI.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    5
  3539 ;; This function calls:
  3540 ;;		_CAN_Setup
  3541 ;;		_INI_GlobalInterrupt
  3542 ;;		_INI_LED_Start
  3543 ;;		_INI_OUTPUT
  3544 ;;		_INI_Timer
  3545 ;; This function is called by:
  3546 ;;		_main
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text27
  3551  000EEA                     __ptext27:
  3552                           	opt callstack 0
  3553  000EEA                     _INI_All:
  3554                           	opt callstack 25
  3555                           
  3556                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3557                           
  3558                           ;incstack = 0
  3559  000EEA  80D1               	bsf	4049,0,c	;volatile
  3560  000EEC  0004               	clrwdt		;# 
  3561                           
  3562                           ;INI.c: 64:     INI_OUTPUT();
  3563  000EEE  EC66  F007         	call	_INI_OUTPUT	;wreg free
  3564                           
  3565                           ;INI.c: 66:     CAN_Setup();
  3566  000EF2  EC13  F005         	call	_CAN_Setup	;wreg free
  3567                           
  3568                           ;INI.c: 67:     INI_GlobalInterrupt();
  3569  000EF6  EC8E  F007         	call	_INI_GlobalInterrupt	;wreg free
  3570                           
  3571                           ;INI.c: 69:     INI_Timer();
  3572  000EFA  EC82  F007         	call	_INI_Timer	;wreg free
  3573                           
  3574                           ;INI.c: 71:     INI_LED_Start();
  3575  000EFE  ECE9  F006         	call	_INI_LED_Start	;wreg free
  3576  000F02  0012               	return		;funcret
  3577  000F04                     __end_of_INI_All:
  3578                           	opt callstack 0
  3579                           
  3580 ;; *************** function _INI_Timer *****************
  3581 ;; Defined at:
  3582 ;;		line 92 in file "TMR1.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      unsigned char 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    3
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_INI_All
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text28
  3611  000F04                     __ptext28:
  3612                           	opt callstack 0
  3613  000F04                     _INI_Timer:
  3614                           	opt callstack 26
  3615                           
  3616                           ;TMR1.c: 96:     IRCF2 = 1;
  3617                           
  3618                           ;incstack = 0
  3619  000F04  8CD3               	bsf	4051,6,c	;volatile
  3620                           
  3621                           ;TMR1.c: 97:     IRCF1 = 1;
  3622  000F06  8AD3               	bsf	4051,5,c	;volatile
  3623                           
  3624                           ;TMR1.c: 98:     IRCF0 = 1;
  3625  000F08  88D3               	bsf	4051,4,c	;volatile
  3626                           
  3627                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3628  000F0A  0E3D               	movlw	61
  3629  000F0C  6ECD               	movwf	4045,c	;volatile
  3630                           
  3631                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3632  000F0E  0E9E               	movlw	158
  3633  000F10  6ECF               	movwf	4047,c	;volatile
  3634                           
  3635                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  3636  000F12  0E57               	movlw	87
  3637  000F14  6ECE               	movwf	4046,c	;volatile
  3638                           
  3639                           ;TMR1.c: 102:     TMR1IE=1;
  3640  000F16  809D               	bsf	3997,0,c	;volatile
  3641                           
  3642                           ;TMR1.c: 103:     TMR1ON = 1;
  3643  000F18  80CD               	bsf	4045,0,c	;volatile
  3644  000F1A  0012               	return		;funcret
  3645  000F1C                     __end_of_INI_Timer:
  3646                           	opt callstack 0
  3647                           
  3648 ;; *************** function _INI_OUTPUT *****************
  3649 ;; Defined at:
  3650 ;;		line 27 in file "INI.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    3
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_INI_All
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text29
  3679  000ECC                     __ptext29:
  3680                           	opt callstack 0
  3681  000ECC                     _INI_OUTPUT:
  3682                           	opt callstack 26
  3683                           
  3684                           ;INI.c: 31:     LATA = 0;
  3685                           
  3686                           ;incstack = 0
  3687  000ECC  0E00               	movlw	0
  3688  000ECE  6E89               	movwf	3977,c	;volatile
  3689                           
  3690                           ;INI.c: 32:     LATB = 0;
  3691  000ED0  0E00               	movlw	0
  3692  000ED2  6E8A               	movwf	3978,c	;volatile
  3693                           
  3694                           ;INI.c: 33:     LATC = 0;
  3695  000ED4  0E00               	movlw	0
  3696  000ED6  6E8B               	movwf	3979,c	;volatile
  3697                           
  3698                           ;INI.c: 34:     TRISA = 0x0C;
  3699  000ED8  0E0C               	movlw	12
  3700  000EDA  6E92               	movwf	3986,c	;volatile
  3701                           
  3702                           ;INI.c: 35:     TRISB = 0b10001000;
  3703  000EDC  0E88               	movlw	136
  3704  000EDE  6E93               	movwf	3987,c	;volatile
  3705                           
  3706                           ;INI.c: 36:     TRISC = 0xBF;
  3707  000EE0  0EBF               	movlw	191
  3708  000EE2  6E94               	movwf	3988,c	;volatile
  3709                           
  3710                           ;INI.c: 37:     RCONbits.IPEN = 1;
  3711  000EE4  8ED0               	bsf	4048,7,c	;volatile
  3712                           
  3713                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  3714  000EE6  863D               	bsf	_DetectorLedRadar,3,c
  3715  000EE8  0012               	return		;funcret
  3716  000EEA                     __end_of_INI_OUTPUT:
  3717                           	opt callstack 0
  3718                           
  3719 ;; *************** function _INI_LED_Start *****************
  3720 ;; Defined at:
  3721 ;;		line 193 in file "LED.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;Total ram usage:        0 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    4
  3742 ;; This function calls:
  3743 ;;		_LED_Control
  3744 ;; This function is called by:
  3745 ;;		_INI_All
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text30
  3750  000DD2                     __ptext30:
  3751                           	opt callstack 0
  3752  000DD2                     _INI_LED_Start:
  3753                           	opt callstack 25
  3754                           
  3755                           ;LED.c: 195:     TRISA = TRISA & 0b00000001;
  3756                           
  3757                           ;incstack = 0
  3758  000DD2  5092               	movf	3986,w,c	;volatile
  3759  000DD4  0B01               	andlw	1
  3760  000DD6  6E92               	movwf	3986,c	;volatile
  3761                           
  3762                           ;LED.c: 196:     TRISB = TRISB & 0b11111100;
  3763  000DD8  5093               	movf	3987,w,c	;volatile
  3764  000DDA  0BFC               	andlw	252
  3765  000DDC  6E93               	movwf	3987,c	;volatile
  3766                           
  3767                           ;LED.c: 197:     TRISE = TRISE & 0b11111000;
  3768  000DDE  5096               	movf	3990,w,c	;volatile
  3769  000DE0  0BF8               	andlw	248
  3770  000DE2  6E96               	movwf	3990,c	;volatile
  3771                           
  3772                           ;LED.c: 198:     TRISD = TRISD & 0b00000000;
  3773  000DE4  0E00               	movlw	0
  3774  000DE6  6E95               	movwf	3989,c	;volatile
  3775                           
  3776                           ;LED.c: 199:     LED_Control(RED,0b0000000000);
  3777  000DE8  0E00               	movlw	0
  3778  000DEA  6E07               	movwf	LED_Control@diode+1,c
  3779  000DEC  0E00               	movlw	0
  3780  000DEE  6E06               	movwf	LED_Control@diode,c
  3781  000DF0  0E00               	movlw	0
  3782  000DF2  EC0A  F003         	call	_LED_Control
  3783                           
  3784                           ;LED.c: 200:     LED_Control(GREEN,0b0000000000);
  3785  000DF6  0E00               	movlw	0
  3786  000DF8  6E07               	movwf	LED_Control@diode+1,c
  3787  000DFA  0E00               	movlw	0
  3788  000DFC  6E06               	movwf	LED_Control@diode,c
  3789  000DFE  0E01               	movlw	1
  3790  000E00  EC0A  F003         	call	_LED_Control
  3791  000E04  0012               	return		;funcret
  3792  000E06                     __end_of_INI_LED_Start:
  3793                           	opt callstack 0
  3794                           
  3795 ;; *************** function _LED_Control *****************
  3796 ;; Defined at:
  3797 ;;		line 218 in file "LED.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  color           1    wreg     enum E10639
  3800 ;;  diode           2    5[COMRAM] unsigned int 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  color           1    9[COMRAM] enum E10639
  3803 ;;  cos             2    0        unsigned int 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      unsigned char 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;Total ram usage:        5 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    3
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_LED_Light_Pos
  3824 ;;		_INI_LED_Start
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text31
  3829  000614                     __ptext31:
  3830                           	opt callstack 0
  3831  000614                     _LED_Control:
  3832                           	opt callstack 25
  3833                           
  3834                           ;incstack = 0
  3835                           ;LED_Control@color stored from wreg
  3836  000614  6E0A               	movwf	LED_Control@color,c
  3837                           
  3838                           ;LED.c: 221:     if(color == RED)
  3839  000616  500A               	movf	LED_Control@color,w,c
  3840  000618  A4D8               	btfss	status,2,c
  3841  00061A  D050               	goto	l314
  3842                           
  3843                           ;LED.c: 222:     {;LED.c: 224:         if((diode & 0b0000000001)== 0b0000000001)
  3844  00061C  A006               	btfss	LED_Control@diode,0,c
  3845  00061E  D003               	goto	l2169
  3846                           
  3847                           ;LED.c: 225:         {;LED.c: 226:             LATD = LATD | ~0b11101111;
  3848  000620  508C               	movf	3980,w,c	;volatile
  3849  000622  0910               	iorlw	16
  3850  000624  D002               	goto	L3
  3851  000626                     l2169:
  3852                           
  3853                           ;LED.c: 229:         {;LED.c: 230:             LATD = LATD &0b11101111;
  3854  000626  508C               	movf	3980,w,c	;volatile
  3855  000628  0BEF               	andlw	239
  3856  00062A                     L3:
  3857  00062A  6E8C               	movwf	3980,c	;volatile
  3858                           
  3859                           ;LED.c: 233:         if((diode & 0b0000000010) == 0b0000000010)
  3860  00062C  A206               	btfss	LED_Control@diode,1,c
  3861  00062E  D003               	goto	l2175
  3862                           
  3863                           ;LED.c: 234:         {;LED.c: 235:             LATD = LATD | ~0b10111111;
  3864  000630  508C               	movf	3980,w,c	;volatile
  3865  000632  0940               	iorlw	64
  3866  000634  D002               	goto	L4
  3867  000636                     l2175:
  3868                           
  3869                           ;LED.c: 238:         {;LED.c: 239:             LATD = LATD & 0b10111111;
  3870  000636  508C               	movf	3980,w,c	;volatile
  3871  000638  0BBF               	andlw	191
  3872  00063A                     L4:
  3873  00063A  6E8C               	movwf	3980,c	;volatile
  3874                           
  3875                           ;LED.c: 242:         if((diode & 0b0000000100) == 0b0000000100)
  3876  00063C  A406               	btfss	LED_Control@diode,2,c
  3877  00063E  D003               	goto	l2181
  3878                           
  3879                           ;LED.c: 243:         {;LED.c: 244:             LATB = LATB | ~0b11111110;
  3880  000640  508A               	movf	3978,w,c	;volatile
  3881  000642  0901               	iorlw	1
  3882  000644  D002               	goto	L5
  3883  000646                     l2181:
  3884                           
  3885                           ;LED.c: 247:         {;LED.c: 248:             LATB = LATB & 0b11111110;
  3886  000646  508A               	movf	3978,w,c	;volatile
  3887  000648  0BFE               	andlw	254
  3888  00064A                     L5:
  3889  00064A  6E8A               	movwf	3978,c	;volatile
  3890                           
  3891                           ;LED.c: 252:         if((diode & 0b0000001000) == 0b0000001000)
  3892  00064C  A606               	btfss	LED_Control@diode,3,c
  3893  00064E  D003               	goto	l2187
  3894                           
  3895                           ;LED.c: 253:         {;LED.c: 254:             LATA = LATA | ~0b11111101;
  3896  000650  5089               	movf	3977,w,c	;volatile
  3897  000652  0902               	iorlw	2
  3898  000654  D002               	goto	L6
  3899  000656                     l2187:
  3900                           
  3901                           ;LED.c: 257:         {;LED.c: 258:             LATA = LATA & 0b11111101;
  3902  000656  5089               	movf	3977,w,c	;volatile
  3903  000658  0BFD               	andlw	253
  3904  00065A                     L6:
  3905  00065A  6E89               	movwf	3977,c	;volatile
  3906                           
  3907                           ;LED.c: 262:         if((diode & 0b0000010000) == 0b0000010000)
  3908  00065C  A806               	btfss	LED_Control@diode,4,c
  3909  00065E  D003               	goto	l2193
  3910                           
  3911                           ;LED.c: 263:         {;LED.c: 264:             LATA = LATA | ~0b11110111;
  3912  000660  5089               	movf	3977,w,c	;volatile
  3913  000662  0908               	iorlw	8
  3914  000664  D002               	goto	L7
  3915  000666                     l2193:
  3916                           
  3917                           ;LED.c: 267:         {;LED.c: 268:             LATA = LATA & 0b11110111;
  3918  000666  5089               	movf	3977,w,c	;volatile
  3919  000668  0BF7               	andlw	247
  3920  00066A                     L7:
  3921  00066A  6E89               	movwf	3977,c	;volatile
  3922                           
  3923                           ;LED.c: 272:         if((diode & 0b0000100000) == 0b0000100000)
  3924  00066C  AA06               	btfss	LED_Control@diode,5,c
  3925  00066E  D003               	goto	l2199
  3926                           
  3927                           ;LED.c: 273:         {;LED.c: 274:             LATA = LATA | ~0b11011111;
  3928  000670  5089               	movf	3977,w,c	;volatile
  3929  000672  0920               	iorlw	32
  3930  000674  D002               	goto	L8
  3931  000676                     l2199:
  3932                           
  3933                           ;LED.c: 277:         {;LED.c: 278:             LATA = LATA & 0b11011111;
  3934  000676  5089               	movf	3977,w,c	;volatile
  3935  000678  0BDF               	andlw	223
  3936  00067A                     L8:
  3937  00067A  6E89               	movwf	3977,c	;volatile
  3938                           
  3939                           ;LED.c: 281:         if((diode & 0b0001000000) == 0b0001000000)
  3940  00067C  AC06               	btfss	LED_Control@diode,6,c
  3941  00067E  D003               	goto	l2205
  3942                           
  3943                           ;LED.c: 282:         {;LED.c: 283:             LATE = LATE | ~0b11111101;
  3944  000680  508D               	movf	3981,w,c	;volatile
  3945  000682  0902               	iorlw	2
  3946  000684  D002               	goto	L9
  3947  000686                     l2205:
  3948                           
  3949                           ;LED.c: 286:         {;LED.c: 287:             LATE = LATE & 0b11111101;
  3950  000686  508D               	movf	3981,w,c	;volatile
  3951  000688  0BFD               	andlw	253
  3952  00068A                     L9:
  3953  00068A  6E8D               	movwf	3981,c	;volatile
  3954                           
  3955                           ;LED.c: 290:         if((diode & 0b0010000000) == 0b0010000000)
  3956  00068C  AE06               	btfss	LED_Control@diode,7,c
  3957  00068E  D003               	goto	l2211
  3958                           
  3959                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b01111111;
  3960  000690  5089               	movf	3977,w,c	;volatile
  3961  000692  0980               	iorlw	128
  3962  000694  D002               	goto	L10
  3963  000696                     l2211:
  3964                           
  3965                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b01111111;
  3966  000696  5089               	movf	3977,w,c	;volatile
  3967  000698  0B7F               	andlw	127
  3968  00069A                     L10:
  3969  00069A  6E89               	movwf	3977,c	;volatile
  3970                           
  3971                           ;LED.c: 300:         if((diode & 0b0100000000) == 0b0100000000)
  3972  00069C  A007               	btfss	LED_Control@diode+1,0,c
  3973  00069E  D003               	goto	l2217
  3974                           
  3975                           ;LED.c: 301:         {;LED.c: 302:             LATD = LATD | ~0b11111110;
  3976  0006A0  508C               	movf	3980,w,c	;volatile
  3977  0006A2  0901               	iorlw	1
  3978  0006A4  D002               	goto	L11
  3979  0006A6                     l2217:
  3980                           
  3981                           ;LED.c: 305:         {;LED.c: 306:             LATD = LATD & 0b11111110;
  3982  0006A6  508C               	movf	3980,w,c	;volatile
  3983  0006A8  0BFE               	andlw	254
  3984  0006AA                     L11:
  3985  0006AA  6E8C               	movwf	3980,c	;volatile
  3986                           
  3987                           ;LED.c: 309:         if((diode & 0b1000000000) == 0b1000000000)
  3988  0006AC  A207               	btfss	LED_Control@diode+1,1,c
  3989  0006AE  D003               	goto	l2223
  3990                           
  3991                           ;LED.c: 310:         {;LED.c: 311:             LATD = LATD | ~0b11111011;
  3992  0006B0  508C               	movf	3980,w,c	;volatile
  3993  0006B2  0904               	iorlw	4
  3994  0006B4  D002               	goto	L12
  3995  0006B6                     l2223:
  3996                           
  3997                           ;LED.c: 314:         {;LED.c: 315:             LATD = LATD & 0b11111011;
  3998  0006B6  508C               	movf	3980,w,c	;volatile
  3999  0006B8  0BFB               	andlw	251
  4000  0006BA                     L12:
  4001  0006BA  6E8C               	movwf	3980,c	;volatile
  4002  0006BC                     l314:
  4003                           
  4004                           ;LED.c: 320:     if(color == GREEN)
  4005  0006BC  040A               	decf	LED_Control@color,w,c
  4006  0006BE  A4D8               	btfss	status,2,c
  4007  0006C0  0012               	return	
  4008                           
  4009                           ;LED.c: 321:     {;LED.c: 323:         if((diode & 0b0000000001) == 0b0000000001)
  4010  0006C2  A006               	btfss	LED_Control@diode,0,c
  4011  0006C4  D003               	goto	l2229
  4012                           
  4013                           ;LED.c: 324:         {;LED.c: 325:             LATD = LATD | ~0b11011111;
  4014  0006C6  508C               	movf	3980,w,c	;volatile
  4015  0006C8  0920               	iorlw	32
  4016  0006CA  D002               	goto	L13
  4017  0006CC                     l2229:
  4018                           
  4019                           ;LED.c: 328:         {;LED.c: 329:             LATD = LATD & 0b11011111;
  4020  0006CC  508C               	movf	3980,w,c	;volatile
  4021  0006CE  0BDF               	andlw	223
  4022  0006D0                     L13:
  4023  0006D0  6E8C               	movwf	3980,c	;volatile
  4024                           
  4025                           ;LED.c: 333:         if((diode & 0b0000000010) == 0b0000000010)
  4026  0006D2  A206               	btfss	LED_Control@diode,1,c
  4027  0006D4  D003               	goto	l2235
  4028                           
  4029                           ;LED.c: 334:         {;LED.c: 335:             LATD = LATD | ~0b01111111;
  4030  0006D6  508C               	movf	3980,w,c	;volatile
  4031  0006D8  0980               	iorlw	128
  4032  0006DA  D002               	goto	L14
  4033  0006DC                     l2235:
  4034                           
  4035                           ;LED.c: 338:         {;LED.c: 339:             LATD = LATD & 0b01111111;
  4036  0006DC  508C               	movf	3980,w,c	;volatile
  4037  0006DE  0B7F               	andlw	127
  4038  0006E0                     L14:
  4039  0006E0  6E8C               	movwf	3980,c	;volatile
  4040                           
  4041                           ;LED.c: 343:         if((diode & 0b0000000100) == 0b0000000100)
  4042  0006E2  A406               	btfss	LED_Control@diode,2,c
  4043  0006E4  D003               	goto	l2241
  4044                           
  4045                           ;LED.c: 344:         {;LED.c: 345:             LATB = LATB | ~0b11111101;
  4046  0006E6  508A               	movf	3978,w,c	;volatile
  4047  0006E8  0902               	iorlw	2
  4048  0006EA  D002               	goto	L15
  4049  0006EC                     l2241:
  4050                           
  4051                           ;LED.c: 348:         {;LED.c: 349:             LATB = LATB & 0b11111101;
  4052  0006EC  508A               	movf	3978,w,c	;volatile
  4053  0006EE  0BFD               	andlw	253
  4054  0006F0                     L15:
  4055  0006F0  6E8A               	movwf	3978,c	;volatile
  4056                           
  4057                           ;LED.c: 352:         if((diode & 0b0000001000) == 0b0000001000)
  4058  0006F2  A606               	btfss	LED_Control@diode,3,c
  4059  0006F4  D003               	goto	l2247
  4060                           
  4061                           ;LED.c: 353:         {;LED.c: 354:             LATA = LATA | ~0b11111011;
  4062  0006F6  5089               	movf	3977,w,c	;volatile
  4063  0006F8  0904               	iorlw	4
  4064  0006FA  D002               	goto	L16
  4065  0006FC                     l2247:
  4066                           
  4067                           ;LED.c: 357:         {;LED.c: 358:             LATA = LATA & 0b11111011;
  4068  0006FC  5089               	movf	3977,w,c	;volatile
  4069  0006FE  0BFB               	andlw	251
  4070  000700                     L16:
  4071  000700  6E89               	movwf	3977,c	;volatile
  4072                           
  4073                           ;LED.c: 362:         if((diode & 0b0000010000) == 0b0000010000)
  4074  000702  A806               	btfss	LED_Control@diode,4,c
  4075  000704  D003               	goto	l2253
  4076                           
  4077                           ;LED.c: 363:         {;LED.c: 364:             LATA = LATA | ~0b11101111;
  4078  000706  5089               	movf	3977,w,c	;volatile
  4079  000708  0910               	iorlw	16
  4080  00070A  D002               	goto	L17
  4081  00070C                     l2253:
  4082                           
  4083                           ;LED.c: 367:         {;LED.c: 368:             LATA = LATA & 0b11101111;
  4084  00070C  5089               	movf	3977,w,c	;volatile
  4085  00070E  0BEF               	andlw	239
  4086  000710                     L17:
  4087  000710  6E89               	movwf	3977,c	;volatile
  4088                           
  4089                           ;LED.c: 372:         if((diode & 0b0000100000) == 0b0000100000)
  4090  000712  AA06               	btfss	LED_Control@diode,5,c
  4091  000714  D003               	goto	l2259
  4092                           
  4093                           ;LED.c: 373:         {;LED.c: 374:             LATE = LATE | ~0b11111110;
  4094  000716  508D               	movf	3981,w,c	;volatile
  4095  000718  0901               	iorlw	1
  4096  00071A  D002               	goto	L18
  4097  00071C                     l2259:
  4098                           
  4099                           ;LED.c: 377:         {;LED.c: 378:             LATE = LATE & 0b11111110;
  4100  00071C  508D               	movf	3981,w,c	;volatile
  4101  00071E  0BFE               	andlw	254
  4102  000720                     L18:
  4103  000720  6E8D               	movwf	3981,c	;volatile
  4104                           
  4105                           ;LED.c: 382:         if((diode & 0b0001000000) == 0b0001000000)
  4106  000722  AC06               	btfss	LED_Control@diode,6,c
  4107  000724  D003               	goto	l2265
  4108                           
  4109                           ;LED.c: 383:         {;LED.c: 384:             LATE = LATE | ~0b11111011;
  4110  000726  508D               	movf	3981,w,c	;volatile
  4111  000728  0904               	iorlw	4
  4112  00072A  D002               	goto	L19
  4113  00072C                     l2265:
  4114                           
  4115                           ;LED.c: 387:         {;LED.c: 388:             LATE = LATE & 0b11111011;
  4116  00072C  508D               	movf	3981,w,c	;volatile
  4117  00072E  0BFB               	andlw	251
  4118  000730                     L19:
  4119  000730  6E8D               	movwf	3981,c	;volatile
  4120                           
  4121                           ;LED.c: 391:         if((diode & 0b0010000000) == 0b0010000000)
  4122  000732  AE06               	btfss	LED_Control@diode,7,c
  4123  000734  D003               	goto	l2271
  4124                           
  4125                           ;LED.c: 392:         {;LED.c: 393:             LATA = LATA | ~0b10111111;
  4126  000736  5089               	movf	3977,w,c	;volatile
  4127  000738  0940               	iorlw	64
  4128  00073A  D002               	goto	L20
  4129  00073C                     l2271:
  4130                           
  4131                           ;LED.c: 396:         {;LED.c: 397:             LATA = LATA & 0b10111111;
  4132  00073C  5089               	movf	3977,w,c	;volatile
  4133  00073E  0BBF               	andlw	191
  4134  000740                     L20:
  4135  000740  6E89               	movwf	3977,c	;volatile
  4136                           
  4137                           ;LED.c: 400:         if((diode & 0b0100000000) == 0b0100000000)
  4138  000742  A007               	btfss	LED_Control@diode+1,0,c
  4139  000744  D003               	goto	l2277
  4140                           
  4141                           ;LED.c: 401:         {;LED.c: 402:             LATD = LATD | ~0b11111101;
  4142  000746  508C               	movf	3980,w,c	;volatile
  4143  000748  0902               	iorlw	2
  4144  00074A  D002               	goto	L21
  4145  00074C                     l2277:
  4146                           
  4147                           ;LED.c: 405:         {;LED.c: 406:             LATD = LATD & 0b11111101;
  4148  00074C  508C               	movf	3980,w,c	;volatile
  4149  00074E  0BFD               	andlw	253
  4150  000750                     L21:
  4151  000750  6E8C               	movwf	3980,c	;volatile
  4152                           
  4153                           ;LED.c: 409:         if((diode & 0b1000000000) == 0b1000000000)
  4154  000752  A207               	btfss	LED_Control@diode+1,1,c
  4155  000754  D004               	goto	l2283
  4156                           
  4157                           ;LED.c: 410:         {;LED.c: 411:             LATD = LATD | ~0b11110111;
  4158  000756  508C               	movf	3980,w,c	;volatile
  4159  000758  0908               	iorlw	8
  4160  00075A  6E8C               	movwf	3980,c	;volatile
  4161                           
  4162                           ;LED.c: 412:         }
  4163  00075C  0012               	return	
  4164  00075E                     l2283:
  4165                           
  4166                           ;LED.c: 414:         {;LED.c: 415:             LATD = LATD &0b11110111;
  4167  00075E  508C               	movf	3980,w,c	;volatile
  4168  000760  0BF7               	andlw	247
  4169  000762  6E8C               	movwf	3980,c	;volatile
  4170  000764  0012               	return		;funcret
  4171  000766                     __end_of_LED_Control:
  4172                           	opt callstack 0
  4173                           
  4174 ;; *************** function _INI_GlobalInterrupt *****************
  4175 ;; Defined at:
  4176 ;;		line 74 in file "INI.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		None
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    3
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_INI_All
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text32
  4205  000F1C                     __ptext32:
  4206                           	opt callstack 0
  4207  000F1C                     _INI_GlobalInterrupt:
  4208                           	opt callstack 26
  4209                           
  4210                           ;INI.c: 76: INTCONbits.GIEH=1;
  4211                           
  4212                           ;incstack = 0
  4213  000F1C  8EF2               	bsf	4082,7,c	;volatile
  4214                           
  4215                           ;INI.c: 77: INTCONbits.GIEL=1;
  4216  000F1E  8CF2               	bsf	4082,6,c	;volatile
  4217                           
  4218                           ;INI.c: 78: RCONbits.IPEN=1;
  4219  000F20  8ED0               	bsf	4048,7,c	;volatile
  4220                           
  4221                           ;INI.c: 79: IPEN =1;
  4222  000F22  8ED0               	bsf	4048,7,c	;volatile
  4223                           
  4224                           ;INI.c: 81: PEIE=1;
  4225  000F24  8CF2               	bsf	4082,6,c	;volatile
  4226                           
  4227                           ;INI.c: 82: TMR1IP = 0;
  4228  000F26  909F               	bcf	3999,0,c	;volatile
  4229  000F28  0012               	return		;funcret
  4230  000F2A                     __end_of_INI_GlobalInterrupt:
  4231                           	opt callstack 0
  4232                           
  4233 ;; *************** function _CAN_Setup *****************
  4234 ;; Defined at:
  4235 ;;		line 22 in file "CAN.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;		None
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;		None
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;Total ram usage:        1 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    4
  4256 ;; This function calls:
  4257 ;;		_CAN_SetupClock
  4258 ;;		_CAN_SetupMask
  4259 ;; This function is called by:
  4260 ;;		_INI_All
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text33
  4265  000A26                     __ptext33:
  4266                           	opt callstack 0
  4267  000A26                     _CAN_Setup:
  4268                           	opt callstack 25
  4269                           
  4270                           ;CAN.c: 27:     CANCON = 0x80;
  4271                           
  4272                           ;incstack = 0
  4273  000A26  0E80               	movlw	128
  4274  000A28  6E6F               	movwf	3951,c	;volatile
  4275  000A2A                     l2399:
  4276                           
  4277                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4278  000A2A  506E               	movf	3950,w,c	;volatile
  4279  000A2C  0BE0               	andlw	224
  4280  000A2E  0A80               	xorlw	128
  4281  000A30  A4D8               	btfss	status,2,c
  4282  000A32  D7FB               	goto	l2399
  4283                           
  4284                           ;CAN.c: 33:     BSEL0 = 0;
  4285  000A34  0E00               	movlw	0
  4286  000A36  010D               	movlb	13	; () banked
  4287  000A38  6FF8               	movwf	248,b	;volatile
  4288                           
  4289                           ;CAN.c: 34:     TXB0CON = 0;
  4290  000A3A  0E00               	movlw	0
  4291  000A3C  010F               	movlb	15	; () banked
  4292  000A3E  6F40               	movwf	64,b	;volatile
  4293                           
  4294                           ;CAN.c: 35:     RXB0CON = 0;
  4295  000A40  0E00               	movlw	0
  4296  000A42  6E60               	movwf	3936,c	;volatile
  4297                           
  4298                           ;CAN.c: 36:     RXB1CON = 0;
  4299  000A44  0E00               	movlw	0
  4300  000A46  6F50               	movwf	80,b	;volatile
  4301                           
  4302                           ;CAN.c: 37:     B0CON = 0;
  4303  000A48  0E00               	movlw	0
  4304  000A4A  010E               	movlb	14	; () banked
  4305  000A4C  6F20               	movwf	32,b	;volatile
  4306                           
  4307                           ;CAN.c: 38:     B1CON = 0;
  4308  000A4E  0E00               	movlw	0
  4309  000A50  6F30               	movwf	48,b	;volatile
  4310                           
  4311                           ;CAN.c: 39:     PIE3 = 0;
  4312  000A52  0E00               	movlw	0
  4313  000A54  6EA3               	movwf	4003,c	;volatile
  4314                           
  4315                           ; BSR set to: 14
  4316                           ;CAN.c: 40:     IPR3 = 0xFF;
  4317  000A56  68A5               	setf	4005,c	;volatile
  4318                           
  4319                           ;CAN.c: 41:     PIR3 = 0x00;
  4320  000A58  0E00               	movlw	0
  4321  000A5A  6EA4               	movwf	4004,c	;volatile
  4322                           
  4323                           ;CAN.c: 42:     BIE0 = 0;
  4324  000A5C  0E00               	movlw	0
  4325  000A5E  010D               	movlb	13	; () banked
  4326  000A60  6FFA               	movwf	250,b	;volatile
  4327                           
  4328                           ;CAN.c: 45:     ECANCON = 0x90;
  4329  000A62  0E90               	movlw	144
  4330  000A64  6E77               	movwf	3959,c	;volatile
  4331                           
  4332                           ; BSR set to: 13
  4333                           ;CAN.c: 48:     CAN_SetupClock();
  4334  000A66  EC2F  F007         	call	_CAN_SetupClock	;wreg free
  4335                           
  4336                           ;CAN.c: 51:     CAN_SetupMask();
  4337  000A6A  ECDE  F004         	call	_CAN_SetupMask	;wreg free
  4338                           
  4339                           ;CAN.c: 53:     CIOCON = 0xff;
  4340  000A6E  6873               	setf	3955,c	;volatile
  4341                           
  4342                           ;CAN.c: 59:     CANCON = 0x00;
  4343  000A70  0E00               	movlw	0
  4344  000A72  6E6F               	movwf	3951,c	;volatile
  4345  000A74                     l2413:
  4346                           
  4347                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4348  000A74  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4349  000A78  0EE0               	movlw	224
  4350  000A7A  1606               	andwf	??_CAN_Setup,f,c
  4351  000A7C  B4D8               	btfsc	status,2,c
  4352  000A7E  0012               	return	
  4353  000A80  D7F9               	goto	l2413
  4354  000A82                     __end_of_CAN_Setup:
  4355                           	opt callstack 0
  4356                           
  4357 ;; *************** function _CAN_SetupMask *****************
  4358 ;; Defined at:
  4359 ;;		line 138 in file "CAN.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    3
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_CAN_Setup
  4384 ;;		_SetupCanB
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text34
  4389  0009BC                     __ptext34:
  4390                           	opt callstack 0
  4391  0009BC                     _CAN_SetupMask:
  4392                           	opt callstack 25
  4393                           
  4394                           ;CAN.c: 140:     MSEL0 = 0x50;
  4395                           
  4396                           ;incstack = 0
  4397  0009BC  0E50               	movlw	80
  4398  0009BE  010D               	movlb	13	; () banked
  4399  0009C0  6FF0               	movwf	240,b	;volatile
  4400                           
  4401                           ;CAN.c: 141:     MSEL1 = 0x55;
  4402  0009C2  0E55               	movlw	85
  4403  0009C4  6FF1               	movwf	241,b	;volatile
  4404                           
  4405                           ;CAN.c: 142:     MSEL2 = 0x55;
  4406  0009C6  0E55               	movlw	85
  4407  0009C8  6FF2               	movwf	242,b	;volatile
  4408                           
  4409                           ;CAN.c: 143:     MSEL3 = 0x55;
  4410  0009CA  0E55               	movlw	85
  4411  0009CC  6FF3               	movwf	243,b	;volatile
  4412                           
  4413                           ;CAN.c: 146:     RXM0SIDH = 0b00000000;
  4414  0009CE  0E00               	movlw	0
  4415  0009D0  010F               	movlb	15	; () banked
  4416  0009D2  6F18               	movwf	24,b	;volatile
  4417                           
  4418                           ;CAN.c: 147:     RXM0SIDL = 0b00001011;
  4419  0009D4  0E0B               	movlw	11
  4420  0009D6  6F19               	movwf	25,b	;volatile
  4421                           
  4422                           ; BSR set to: 15
  4423                           ;CAN.c: 148:     RXM0EIDH = 0xFF;
  4424  0009D8  691A               	setf	26,b	;volatile
  4425                           
  4426                           ; BSR set to: 15
  4427                           ;CAN.c: 149:     RXM0EIDL = 0xFF;
  4428  0009DA  691B               	setf	27,b	;volatile
  4429                           
  4430                           ; BSR set to: 15
  4431                           ;CAN.c: 152:     RXM1SIDH = 0xFF;
  4432  0009DC  691C               	setf	28,b	;volatile
  4433                           
  4434                           ; BSR set to: 15
  4435                           ;CAN.c: 153:     RXM1SIDL = 0xFF;
  4436  0009DE  691D               	setf	29,b	;volatile
  4437                           
  4438                           ;CAN.c: 154:     RXM1EIDH = 0;
  4439  0009E0  0E00               	movlw	0
  4440  0009E2  6F1E               	movwf	30,b	;volatile
  4441                           
  4442                           ;CAN.c: 155:     RXM1EIDL = 0;
  4443  0009E4  0E00               	movlw	0
  4444  0009E6  6F1F               	movwf	31,b	;volatile
  4445                           
  4446                           ;CAN.c: 158:     RXF0SIDH = 0x00;
  4447  0009E8  0E00               	movlw	0
  4448  0009EA  6F00               	movwf	0,b	;volatile
  4449                           
  4450                           ;CAN.c: 159:     RXF0SIDL = 0x01;
  4451  0009EC  0E01               	movlw	1
  4452  0009EE  6F01               	movwf	1,b	;volatile
  4453                           
  4454                           ; BSR set to: 15
  4455                           ;CAN.c: 160:     RXF0SIDLbits.EXIDEN = 1;
  4456  0009F0  8701               	bsf	1,3,b	;volatile
  4457                           
  4458                           ;CAN.c: 161:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4459  0009F2  503A               	movf	_DaneCan+3,w,c
  4460  0009F4  6F02               	movwf	2,b	;volatile
  4461                           
  4462                           ; BSR set to: 15
  4463                           ;CAN.c: 162:  RXF0EIDH |= 0x40;
  4464  0009F6  8D02               	bsf	2,6,b	;volatile
  4465                           
  4466                           ; BSR set to: 15
  4467                           ;CAN.c: 163:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4468  0009F8  C039  FF03         	movff	_DaneCan+2,3843	;volatile
  4469                           
  4470                           ; BSR set to: 15
  4471                           ;CAN.c: 165:     RXF1SIDH = 0x00;
  4472  0009FC  0E00               	movlw	0
  4473  0009FE  6F04               	movwf	4,b	;volatile
  4474                           
  4475                           ; BSR set to: 15
  4476                           ;CAN.c: 166:     RXF1SIDL = 0x01;
  4477  000A00  0E01               	movlw	1
  4478  000A02  6F05               	movwf	5,b	;volatile
  4479                           
  4480                           ; BSR set to: 15
  4481                           ;CAN.c: 167:     RXF1SIDLbits.EXIDEN = 1;
  4482  000A04  8705               	bsf	5,3,b	;volatile
  4483                           
  4484                           ; BSR set to: 15
  4485                           ;CAN.c: 168:     RXF1EIDH = 0x7F;
  4486  000A06  0E7F               	movlw	127
  4487  000A08  6F06               	movwf	6,b	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490                           ;CAN.c: 169:     RXF1EIDL = 0xFF;
  4491  000A0A  6907               	setf	7,b	;volatile
  4492                           
  4493                           ; BSR set to: 15
  4494                           ;CAN.c: 172:     RXF2SIDH = 0;
  4495  000A0C  0E00               	movlw	0
  4496  000A0E  6F08               	movwf	8,b	;volatile
  4497                           
  4498                           ; BSR set to: 15
  4499                           ;CAN.c: 173:     RXF2SIDL = 0x20;
  4500  000A10  0E20               	movlw	32
  4501  000A12  6F09               	movwf	9,b	;volatile
  4502                           
  4503                           ; BSR set to: 15
  4504                           ;CAN.c: 174:     RXF2SIDLbits.EXIDEN = 1;
  4505  000A14  8709               	bsf	9,3,b	;volatile
  4506                           
  4507                           ; BSR set to: 15
  4508                           ;CAN.c: 175:     RXF2EIDH = 0;
  4509  000A16  0E00               	movlw	0
  4510  000A18  6F0A               	movwf	10,b	;volatile
  4511                           
  4512                           ; BSR set to: 15
  4513                           ;CAN.c: 176:     RXF2EIDL = 0;
  4514  000A1A  0E00               	movlw	0
  4515  000A1C  6F0B               	movwf	11,b	;volatile
  4516                           
  4517                           ; BSR set to: 15
  4518                           ;CAN.c: 184:     RXFCON0 = 0x07;
  4519  000A1E  0E07               	movlw	7
  4520  000A20  010D               	movlb	13	; () banked
  4521  000A22  6FD4               	movwf	212,b	;volatile
  4522                           
  4523                           ; BSR set to: 13
  4524  000A24  0012               	return		;funcret
  4525  000A26                     __end_of_CAN_SetupMask:
  4526                           	opt callstack 0
  4527                           
  4528 ;; *************** function _CAN_SetupClock *****************
  4529 ;; Defined at:
  4530 ;;		line 193 in file "CAN.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		None
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    3
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_CAN_Setup
  4555 ;;		_SetupCanB
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text35
  4560  000E5E                     __ptext35:
  4561                           	opt callstack 0
  4562  000E5E                     _CAN_SetupClock:
  4563                           	opt callstack 25
  4564                           
  4565                           ;CAN.c: 195:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4566                           
  4567                           ; BSR set to: 13
  4568                           ;incstack = 0
  4569  000E5E  8070               	bsf	3952,0,c	;volatile
  4570                           
  4571                           ;CAN.c: 196:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4572  000E60  8270               	bsf	3952,1,c	;volatile
  4573                           
  4574                           ;CAN.c: 197:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4575  000E62  9470               	bcf	3952,2,c	;volatile
  4576                           
  4577                           ;CAN.c: 198:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4578  000E64  9670               	bcf	3952,3,c	;volatile
  4579                           
  4580                           ;CAN.c: 199:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4581  000E66  9870               	bcf	3952,4,c	;volatile
  4582                           
  4583                           ;CAN.c: 200:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4584  000E68  9A70               	bcf	3952,5,c	;volatile
  4585                           
  4586                           ;CAN.c: 202:     BRGCON1bits.SJW0 = 1;
  4587  000E6A  8C70               	bsf	3952,6,c	;volatile
  4588                           
  4589                           ;CAN.c: 203:     BRGCON1bits.SJW1 = 1;
  4590  000E6C  8E70               	bsf	3952,7,c	;volatile
  4591                           
  4592                           ;CAN.c: 205:     BRGCON2bits.SEG1PH0 = 1;
  4593  000E6E  8671               	bsf	3953,3,c	;volatile
  4594                           
  4595                           ;CAN.c: 206:     BRGCON2bits.SEG1PH1 = 1;
  4596  000E70  8871               	bsf	3953,4,c	;volatile
  4597                           
  4598                           ;CAN.c: 207:     BRGCON2bits.SEG1PH2 = 1;
  4599  000E72  8A71               	bsf	3953,5,c	;volatile
  4600                           
  4601                           ;CAN.c: 209:     BRGCON2bits.PRSEG2 = 1;
  4602  000E74  8471               	bsf	3953,2,c	;volatile
  4603                           
  4604                           ;CAN.c: 210:     BRGCON2bits.PRSEG1 = 0;
  4605  000E76  9271               	bcf	3953,1,c	;volatile
  4606                           
  4607                           ;CAN.c: 211:     BRGCON2bits.PRSEG0 = 0;
  4608  000E78  9071               	bcf	3953,0,c	;volatile
  4609                           
  4610                           ;CAN.c: 213:     BRGCON3bits.SEG2PH0 = 1;
  4611  000E7A  8072               	bsf	3954,0,c	;volatile
  4612                           
  4613                           ;CAN.c: 214:     BRGCON3bits.SEG2PH1 = 0;
  4614  000E7C  9272               	bcf	3954,1,c	;volatile
  4615                           
  4616                           ;CAN.c: 215:     BRGCON3bits.SEG2PH2 = 1;
  4617  000E7E  8472               	bsf	3954,2,c	;volatile
  4618                           
  4619                           ;CAN.c: 217:     BRGCON2bits.SAM = 1;
  4620  000E80  8C71               	bsf	3953,6,c	;volatile
  4621                           
  4622                           ;CAN.c: 218:     BRGCON2bits.SEG2PHTS = 1;
  4623  000E82  8E71               	bsf	3953,7,c	;volatile
  4624  000E84  0012               	return		;funcret
  4625  000E86                     __end_of_CAN_SetupClock:
  4626                           	opt callstack 0
  4627                           
  4628 ;; *************** function _ISR_low *****************
  4629 ;; Defined at:
  4630 ;;		line 16 in file "ISR.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;Total ram usage:        3 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    2
  4651 ;; This function calls:
  4652 ;;		_TMR1_Timer_reset
  4653 ;;		i1_TMR1_Update_flag_Set
  4654 ;; This function is called by:
  4655 ;;		Interrupt level 1
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	intcodelo
  4660  000018                     __pintcodelo:
  4661                           	opt callstack 0
  4662  000018                     _ISR_low:
  4663                           	opt callstack 24
  4664                           
  4665                           ;incstack = 0
  4666  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4667  00001A  CFD8 F003          	movff	status,??_ISR_low
  4668  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  4669  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  4670                           
  4671                           ;ISR.c: 21:     if(TMR1IF==1)
  4672  000026  A09E               	btfss	3998,0,c	;volatile
  4673  000028  D011               	goto	i1l538
  4674                           
  4675                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  4676  00002A  EC43  F007         	call	_TMR1_Timer_reset	;wreg free
  4677                           
  4678                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  4679  00002E  0E00               	movlw	0
  4680  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  4681  000032  0E01               	movlw	1
  4682  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  4683  000036  EC9F  F007         	call	i1_TMR1_Update_flag_Set	;wreg free
  4684                           
  4685                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  4686  00003A  803D               	bsf	_DetectorLedRadar,0,c
  4687                           
  4688                           ;ISR.c: 33:             if(++ramkaStanuU8 > 2)
  4689  00003C  2A41               	incf	ISR_low@ramkaStanuU8,f,c
  4690  00003E  0E02               	movlw	2
  4691  000040  6441               	cpfsgt	ISR_low@ramkaStanuU8,c
  4692  000042  D003               	goto	i1l2715
  4693                           
  4694                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  4695  000044  0E00               	movlw	0
  4696  000046  6E41               	movwf	ISR_low@ramkaStanuU8,c
  4697                           
  4698                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  4699  000048  8037               	bsf	_DaneCan,0,c
  4700  00004A                     i1l2715:
  4701                           
  4702                           ;ISR.c: 41:             TMR1IF=0;
  4703  00004A  909E               	bcf	3998,0,c	;volatile
  4704  00004C                     i1l538:
  4705  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  4706  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  4707  000054  C003  FFD8         	movff	??_ISR_low,status
  4708  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4709  00005A  0010               	retfie	
  4710  00005C                     __end_of_ISR_low:
  4711                           	opt callstack 0
  4712                           
  4713 ;; *************** function i1_TMR1_Update_flag_Set *****************
  4714 ;; Defined at:
  4715 ;;		line 32 in file "TMR1.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  a               2    0[COMRAM] unsigned int 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		None
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;Total ram usage:        2 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_ISR_low
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text37
  4744  000F3E                     __ptext37:
  4745                           	opt callstack 0
  4746  000F3E                     i1_TMR1_Update_flag_Set:
  4747                           	opt callstack 24
  4748                           
  4749                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4750                           
  4751                           ;incstack = 0
  4752  000F3E  C001  F03B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4753  000F42  C002  F03C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4754  000F46  0012               	return		;funcret
  4755  000F48                     __end_ofi1_TMR1_Update_flag_Set:
  4756                           	opt callstack 0
  4757                           
  4758 ;; *************** function _TMR1_Timer_reset *****************
  4759 ;; Defined at:
  4760 ;;		line 63 in file "TMR1.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  4765 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      unsigned char 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;Total ram usage:        2 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    1
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_ISR_low
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text38
  4790  000E86                     __ptext38:
  4791                           	opt callstack 0
  4792  000E86                     _TMR1_Timer_reset:
  4793                           	opt callstack 24
  4794                           
  4795                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  4796                           
  4797                           ;incstack = 0
  4798  000E86  0E00               	movlw	0
  4799  000E88  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  4800  000E8A  0E00               	movlw	0
  4801  000E8C  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  4802                           
  4803                           ;TMR1.c: 70:     t1L = TMR1L;
  4804  000E8E  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  4805                           
  4806                           ;TMR1.c: 71:     t1H = TMR1H;
  4807  000E92  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  4808                           
  4809                           ;TMR1.c: 72:     __nop();
  4810  000E96  F000               	nop	
  4811                           
  4812                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4813  000E98  0E9E               	movlw	158
  4814  000E9A  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  4815                           
  4816                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4817  000E9C  0E57               	movlw	87
  4818  000E9E  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  4819                           
  4820                           ;TMR1.c: 75:     TMR1H = t1H;
  4821  000EA0  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  4822                           
  4823                           ;TMR1.c: 76:     TMR1L = 0x5B;
  4824  000EA4  0E5B               	movlw	91
  4825  000EA6  6ECE               	movwf	4046,c	;volatile
  4826  000EA8  0012               	return		;funcret
  4827  000EAA                     __end_of_TMR1_Timer_reset:
  4828                           	opt callstack 0
  4829                           
  4830 ;; *************** function _ISR_high *****************
  4831 ;; Defined at:
  4832 ;;		line 53 in file "ISR.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		None
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		Interrupt level 2
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	intcode
  4860  000008                     __pintcode:
  4861                           	opt callstack 0
  4862  000008                     _ISR_high:
  4863                           	opt callstack 24
  4864                           
  4865                           ;incstack = 0
  4866  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4867  00000A  EDA8  F007         	call	int_func,f	;refresh shadow registers
  4868                           
  4869                           	psect	intcode_body
  4870  000F50                     __pintcode_body:
  4871                           	opt callstack 24
  4872  000F50                     int_func:
  4873                           	opt callstack 24
  4874  000F50  0006               	pop		; remove dummy address from shadow register refresh
  4875  000F52  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4876  000F54  0011               	retfie		f
  4877  000F56                     __end_of_ISR_high:
  4878                           	opt callstack 0
  4879  0000                     
  4880                           	psect	rparam
  4881  0000                     
  4882                           	psect	temp
  4883  00004A                     btemp:
  4884                           	opt callstack 0
  4885  00004A                     	ds	1
  4886  0000                     int$flags	set	btemp
  4887  0000                     wtemp8	set	btemp+1
  4888  0000                     ttemp5	set	btemp+1
  4889  0000                     ttemp6	set	btemp+4
  4890  0000                     ttemp7	set	btemp+8
  4891                           tosu	equ	0xFFF
  4892                           tosh	equ	0xFFE
  4893                           tosl	equ	0xFFD
  4894                           stkptr	equ	0xFFC
  4895                           pclatu	equ	0xFFB
  4896                           pclath	equ	0xFFA
  4897                           pcl	equ	0xFF9
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           prodh	equ	0xFF4
  4903                           prodl	equ	0xFF3
  4904                           indf0	equ	0xFEF
  4905                           postinc0	equ	0xFEE
  4906                           postdec0	equ	0xFED
  4907                           preinc0	equ	0xFEC
  4908                           plusw0	equ	0xFEB
  4909                           fsr0h	equ	0xFEA
  4910                           fsr0l	equ	0xFE9
  4911                           wreg	equ	0xFE8
  4912                           indf1	equ	0xFE7
  4913                           postinc1	equ	0xFE6
  4914                           postdec1	equ	0xFE5
  4915                           preinc1	equ	0xFE4
  4916                           plusw1	equ	0xFE3
  4917                           fsr1h	equ	0xFE2
  4918                           fsr1l	equ	0xFE1
  4919                           bsr	equ	0xFE0
  4920                           indf2	equ	0xFDF
  4921                           postinc2	equ	0xFDE
  4922                           postdec2	equ	0xFDD
  4923                           preinc2	equ	0xFDC
  4924                           plusw2	equ	0xFDB
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      73
    BANK0           160      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11100
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    6729
                                             20 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    4812
                                             15 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     323
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     213
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                              6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     360
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    3375
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    2647
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     368
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0     794
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0     794
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _LED_Control                                          5     3      2     794
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
       _FRAME_SensorExcitationStatus
       _FRAME_SoftwareVersion
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0      55       6       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      49       1       77.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E       3        0.0%
DATA                 0      0      9E       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 11:48:52 2019

            __end_of_FRAME_DeviceReset 0ADA                  ?_FRAME_AveragingTimes 0006  
                         ___awdiv@sign 000B                                     bsr 000FE0  
                          __CFG_BORV$3 000000                      ?_FRAME_AxisStatus 0006  
                    _FRAME_MapPosition 0F58                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                     __size_of_CAN_GenID 007C  
                                  l210 007A                                    l211 0080  
                                  l212 0086                                    l213 008C  
                                  l214 0092                                    l215 0098  
                                  l207 006E                                    l208 00DE  
                                  l209 0074                                    l314 06BC  
                                  l198 04C2                                    l199 04C0  
                          ?_LED_Update 0001                                    l473 04A0  
                         __CFG_CPB$OFF 000000                     ??_FRAME_AxisStatus 0008  
                         __CFG_CPD$OFF 000000                                    u755 0530  
                   ?_FRAME_MapPosition 0006                     __size_of_CAN_Setup 005C  
                         ?_LED_Control 0006                                    wreg 000FE8  
                __end_of_CAN_TakeFrame 02DC                            ?_INI_OUTPUT 0001  
               __size_of_INI_LED_Start 0034                  __end_of_CAN_SendFrame 0614  
                         __CFG_LVP$OFF 000000              TRM_DataTransmition@weWyU8 0040  
         __size_of_INI_GlobalInterrupt 000E                    ??_FRAME_MapPosition 0008  
                         __CFG_WDT$OFF 000000                                   l1057 0BCE  
                                 l2211 0696                                   l2123 060E  
                                 l2205 0686                                   l2223 06B6  
                                 l2039 0E38                                   l2119 055A  
                                 l2241 06EC                                   l2217 06A6  
                                 l2235 06DC                                   l2155 0CE6  
                                 l2139 0C5A                                   l2413 0A74  
                                 l2253 070C                                   l2229 06CC  
                                 l2181 0646                                   l2309 0C04  
                                 l2271 073C                                   l2247 06FC  
                                 l2175 0636                                   l2351 08F6  
                                 l2327 0AB8                                   l2265 072C  
                                 l2193 0666                                   l2169 0626  
                                 l2521 07C8                                   l2353 08FE  
                                 l2345 08E0                                   l2441 01C4  
                                 l2283 075E                                   l2259 071C  
                                 l2187 0656                        __end_of_INI_All 0F04  
                                 l2523 07D2                                   l2515 079C  
                                 l2371 0936                                   l2363 091E  
                                 l2339 08D0                                   l2443 01CC  
                                 l2435 01B0                                   l2419 009E  
                                 l2277 074C                                   l2381 0B9C  
                                 l2445 01D4                                   l2437 01B6  
                                 l2453 01EC                                   l2461 024A  
                                 l2199 0676                                   l2383 0BA4  
                                 l2367 0928                                   l2471 0278  
                                 l2463 025C                                   l2447 01DC  
                                 l2439 01BC                                   l2455 022C  
                                 l2551 032E                                   l2393 0BC4  
                                 l2529 07FE                                   l2473 0280  
                                 l2465 0262                                   l2481 0298  
                                 l2449 01E4                                   l2561 0374  
                                 l2553 033C                                   l2545 0304  
                                 l2617 0B04                                   l2475 0288  
                                 l2467 0268                                   l2483 02D8  
                                 l2459 0230                                   l2563 0382  
                                 l2555 034A                                   l2547 0312  
                                 l2571 03C4                                   l2477 0290  
                                 l2469 0270                                   l2565 0390  
                                 l2557 0358                                   l2549 0320  
                                 l2573 0428                                   l2399 0A2A  
                                 l2567 03AA                                   l2559 0366  
                                 l2647 0E0C                                   l2657 0E2C  
                                 _BIE0 000DFA                                   u1120 0902  
                                 u1050 0C14                                   u1215 0148  
                                 u1160 0BA8                                   u1320 0B22  
                                 u1260 0806                                   _LATA 000F89  
                                 _LATB 000F8A                                   _LATC 000F8B  
                                 _LATD 000F8C                                   _LATE 000F8D  
                                 _IPR3 000FA5                                   _IPEN 007E87  
                                 _PIE3 000FA3                                   _PEIE 007F96  
                                 _PIR3 000FA4                                   _RCON 000FD0  
          ??_FRAME_AccelerometerStatus 0008                        __end_of_ISR_low 005C  
                     LED_Control@diode 0006                   FRAME_AnalogValue@set 0008  
                                 _main 0E06                       LED_Control@color 000A  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 004A  
                       _CAN_SetupClock 0E5E                                   prodl 000FF3  
                __end_of_CAN_SetupMask 0A26          __size_of_TMR1_Update_flag_Get 000A  
                                 start 005C          __size_of_TMR1_Update_flag_Set 000A  
                        __CFG_IESO$OFF 000000                     __size_of_LED_Right 004C  
        __size_of_FRAME_HandleCanFrame 01CA                          _LED_Light_Pos 0766  
                        __CFG_MCLRE$ON 000000                           ___param_bank 000000  
    FRAME_HandleCanFrame@identyfikator 0014                     __size_of_INI_Timer 0018  
            __end_of_FRAME_MapPosition 0F5A                       __end_of_LED_Left 0CFA  
                                _B0CON 000E20                                  _B1CON 000E30  
                                _B2CON 000E40                                  _B3CON 000E50  
                                _B4CON 000E60                                  _B5CON 000E70  
                                ?_main 0001                        __end_of___awdiv 0940  
                                _BSEL0 000DF8                        ___awdiv@divisor 0008  
                                _T1CON 000FCD                                  _IRCF0 007E9C  
                                _IRCF1 007E9D      FRAME_ExcitationMultiplier@message 0006  
                                _IRCF2 007E9E                        __end_of___lwdiv 0BD8  
                                i1l538 004C                    __size_of_FRAME_Plot 0022  
                      ___awdiv@counter 000A                                  _MSEL0 000DF0  
                                _MSEL1 000DF1                                  _MSEL2 000DF2  
                                _MSEL3 000DF3                                  _TMR1H 000FCF  
                                _TMR1L 000FCE                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TRISD 000F95                                  _TRISE 000F96  
                        __CFG_PWRT$OFF 000000                 ?_CAN_MoveBuffIntoFrame 0006  
                        __CFG_WRT0$OFF 000000             __size_of_FRAME_AnalogValue 0002  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                     __end_of_ISR_high 0F56                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                i1TMR1_Update_flag_Set@a 0001  
                                tablat 000FF5                 __end_of_CAN_SetupClock 0E86  
                                plusw2 000FDB                                  ttemp5 004B  
                                ttemp6 004E                                  ttemp7 0052  
                                status 000FD8                                  wtemp8 004B  
                    __end_of_CAN_GenID 09BC                         __CFG_PBADEN$ON 000000  
                  __size_of_LED_Update 0056                         ?_LED_Light_Pos 000D  
                     _TMR1_Timer_reset 0E86                      __end_of_CAN_Setup 0A82  
                        _INI_LED_Start 0DD2                  _FRAME_ExcitationValue 0CFA  
     FRAME_AccelerometerStatus@message 0006                        __initialization 0C72  
                  __size_of_INI_OUTPUT 001E                       CAN_GenID@frameID 0008  
                         __end_of_main 0E34                 ??_FRAME_AveragingTimes 0008  
           __size_of_FRAME_DeviceReset 0058               ?_FRAME_AdressOfNeighbors 0006  
                     CAN_GenID@message 0006              _FRAME_AccelerometerStatus 0D9C  
                               ??_main 0026                 CAN_MoveBuffIntoFrame@i 000A  
                        __activetblptr 000002                       _TMR1_Update_flag 003B  
                            ??_INI_All 000B                      __end_of_LED_Right 0C72  
                            ??_ISR_low 0003                                 _CANCON 000F6F  
                     ___awdiv@dividend 0006            FRAME_ExcitationMultiplier@i 0009  
                               _CIOCON 000F73                        __CFG_BBSIZ$1024 000000  
                    __end_of_INI_Timer 0F1C                                 i1l2715 004A  
                      ?_CAN_SetupClock 0001                                 _RXB0D0 000F66  
                               _TMR1IE 007CE8                                 _TMR1IF 007CF0  
                               _TMR1IP 007CF8                                 _TMR1ON 007E68  
         ??_FRAME_ExcitationMultiplier 0008                         ?_INI_LED_Start 0001  
                       __CFG_XINST$OFF 000000                              ??___awdiv 000A  
                       __CFG_STVREN$ON 000000                       LED_Light_Pos@pos 000D  
           __size_of_FRAME_MapPosition 0002                              ??___lwdiv 000A  
                               clear_0 0C98                                 clear_1 0CA4  
                     ___awdiv@quotient 000C               ??i1_TMR1_Update_flag_Set 0003  
                      __CFG_BOREN$BOHW 000000                           __pdataCOMRAM 0043  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8    __size_of_FRAME_ExcitationMultiplier 004E  
                 __size_of_LED_Control 0152               FRAME_MapPosition@message 0006  
                TMR1_Update_flag_Set@a 0006                             __accesstop 0060  
              __end_of__initialization 0CAA                           ??_FRAME_Plot 0008  
                  ISR_low@ramkaStanuU8 0041                              ?_LED_Left 0006  
                      ??_LED_Light_Pos 0011                          ___rparam_used 000001  
               ?_FRAME_ExcitationValue 0006        __end_of_FRAME_AdressOfNeighbors 0F5E  
                       __pcstackCOMRAM 0001                              LED_Left@a 0006  
                            LED_Left@b 0008                    _INI_GlobalInterrupt 0F1C  
                            ?_ISR_high 0001                           ??_LED_Update 0018  
          __end_of_TRM_DataTransmition 0B30                  _FRAME_SoftwareVersion 0F56  
                   __end_of_FRAME_Plot 0ECC                           ??_INI_OUTPUT 0006  
              FRAME_AxisStatus@message 0006                   ?_INI_GlobalInterrupt 0001  
            __size_of_FRAME_AxisStatus 0036                             __pbssBANK0 0060  
                      ??_INI_LED_Start 000B                             ??_LED_Left 0008  
                   __end_of_LED_Update 0B86                     __end_of_INI_OUTPUT 0EEA  
                           ??_ISR_high 0001                    TMR1_Timer_reset@t1H 0002  
                  TMR1_Timer_reset@t1L 0001                                _ECANCON 000F77  
                              _CANSTAT 000F6E                ??_CAN_MoveBuffIntoFrame 000A  
         __end_of_TMR1_Update_flag_Get 0F3E           __end_of_TMR1_Update_flag_Set 0F34  
      __size_ofi1_TMR1_Update_flag_Set 000A           __end_of_FRAME_HandleCanFrame 04A6  
                              _INI_All 0EEA               __end_of_TMR1_Timer_reset 0EAA  
                              _RXB0DLC 000F65                                _RXB0CON 000F60  
                              _RXB1CON 000F50                  ??_INI_GlobalInterrupt 0006  
                              _TXB0CON 000F40                                _ISR_low 0018  
                              _RXFCON0 000DD4                                _DaneCan 0037  
   __end_of_FRAME_ExcitationMultiplier 0C26             _FRAME_ExcitationMultiplier 0BD8  
          FRAME_HandleCanFrame@message 0010                                __Hparam 0000  
                              __Lparam 0000                 __size_of_CAN_TakeFrame 027C  
                            _CAN_GenID 0940                                ___awdiv 08BC  
                            _CAN_Setup 0A26                 __size_of_CAN_SendFrame 016E  
                              ___lwdiv 0B86                              _BSEL0bits 000DF8  
                    LED_Light_Pos@pos2 0014                                __pcinit 0C72  
                              __ramtop 0D00                                __ptext0 0E06  
                              __ptext1 0ADA                                __ptext2 02DC  
                              __ptext3 0F56                                __ptext4 0816  
                              __ptext5 0EAA                                __ptext6 0F58  
                              __ptext7 0CFA                                __ptext8 0BD8  
                              __ptext9 0A82                 ?_FRAME_SoftwareVersion 0006  
               __size_of_CAN_SetupMask 006A         FRAME_AdressOfNeighbors@nrRamki 0008  
     __size_of_FRAME_AdressOfNeighbors 0002                       ??_CAN_SetupClock 0006  
       FRAME_AdressOfNeighbors@message 0006                         __pintcode_body 0F50  
                            _LED_Right 0C26                   end_of_initialization 0CAA  
                        __Lmediumconst 0000                                int_func 0F50  
                            _INI_Timer 0F04                 i1_TMR1_Update_flag_Set 0F3E  
     TRM_DataTransmition@czujnikWeWyU8 003F                             ?_CAN_GenID 0006  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           ?_CAN_Setup 0001          __size_of_FRAME_AveragingTimes 0036  
                 CAN_SendFrame@message 000B                          LED_Update@Red 0042  
                        _CAN_TakeFrame 0060                          _CAN_SendFrame 04A6  
                           ?_LED_Right 0006                       _FRAME_AxisStatus 0D30  
              ??_FRAME_ExcitationValue 0008                             ?_INI_Timer 0001  
                      _ramkaCanRxKarty 0060                   _TMR1_Update_flag_Get 0F34  
                      _ramkaCanTxKarty 0026                   _TMR1_Update_flag_Set 0F2A  
                        _CAN_SetupMask 09BC                      __size_of_LED_Left 0042  
                 _FRAME_HandleCanFrame 02DC                         CAN_TakeFrame@k 0013  
                        __pidataCOMRAM 0F48                      __size_of_ISR_high 0F4E  
                           LED_Right@a 0006                             LED_Right@b 000A  
                        ??_LED_Control 0008                    start_initialization 0C72  
                       ?_CAN_TakeFrame 000E                         ?_CAN_SendFrame 000B  
                     __CFG_OSC$IRCIO67 000000                  ?_TMR1_Update_flag_Get 0006  
                ?_TMR1_Update_flag_Set 0006                         ?_CAN_SetupMask 0001  
                __end_of_LED_Light_Pos 0816                  ?_FRAME_HandleCanFrame 0010  
                          ??_CAN_GenID 0009                            ??_CAN_Setup 0006  
                     __CFG_LPT1OSC$OFF 000000               CAN_MoveBuffIntoFrame@Buf 0008  
 __end_of_FRAME_SensorExcitationStatus 08BC  __size_of_FRAME_SensorExcitationStatus 00A6  
             CAN_MoveBuffIntoFrame@Ram 0006           _FRAME_SensorExcitationStatus 0816  
       __size_of_CAN_MoveBuffIntoFrame 002A          __end_of_CAN_MoveBuffIntoFrame 0E5E  
                      _Fulfillment_Lvl 0047                            __pbssCOMRAM 0026  
                             ?_INI_All 0001                _FRAME_AdressOfNeighbors 0F5C  
                    ?_TMR1_Timer_reset 0001                            _BRGCON1bits 000F70  
                          _BRGCON2bits 000F71                            _BRGCON3bits 000F72  
                             ?_ISR_low 0001                     ??_TMR1_Timer_reset 0001  
                          ??_LED_Right 0008           __size_of_TRM_DataTransmition 0056  
                  __end_of_LED_Control 0766            ?_FRAME_ExcitationMultiplier 0006  
                          ??_INI_Timer 0006                  __end_of_INI_LED_Start 0E06  
                     ___lwdiv@dividend 0006                              __pintcode 0008  
                             ?___awdiv 0006                ??_FRAME_SoftwareVersion 0008  
                             ?___lwdiv 0006                      FRAME_Plot@message 0006  
                          __pintcodelo 0018            __end_of_INI_GlobalInterrupt 0F2A  
                      ??_CAN_TakeFrame 0010          ?_FRAME_SensorExcitationStatus 0006  
                          _COMSTATbits 000F74                               _BIE0bits 000DFA  
                      ??_CAN_SendFrame 000D                       ___lwdiv@quotient 000A  
              ?i1_TMR1_Update_flag_Set 0001            FRAME_AveragingTimes@message 0006  
               ??_TMR1_Update_flag_Get 0008                 ??_TMR1_Update_flag_Set 0008  
                      ??_CAN_SetupMask 0006                               _LED_Left 0CB8  
               ??_FRAME_HandleCanFrame 0012                   CAN_TakeFrame@message 000E  
                             _IPR3bits 000FA5                               _PIE3bits 000FA3  
                 CAN_TakeFrame@tempCON 0012                               _PIR3bits 000FA4  
                             _RXB0EIDH 000F63                               _RXB0EIDL 000F64  
                             _RCONbits 000FD0                       __CFG_WDTPS$32768 000000  
                             _RXB0SIDH 000F61                               _RXB0SIDL 000F62  
                             _RXF0EIDH 000F02                               _RXF0EIDL 000F03  
                             _RXF1EIDH 000F06                               _RXF1EIDL 000F07  
                             _RXF2EIDH 000F0A                               _RXF2EIDL 000F0B  
                             _RXF0SIDH 000F00                               _RXF0SIDL 000F01  
                             _RXF1SIDH 000F04                               _RXF1SIDL 000F05  
                             _RXF2SIDH 000F08                               _RXF2SIDL 000F09  
                             _ISR_high 0008                               _RXM0EIDH 000F1A  
                             _RXM0EIDL 000F1B                               _RXM1EIDH 000F1E  
                             _RXM1EIDL 000F1F                               _RXM0SIDH 000F18  
                             _RXM0SIDL 000F19                               _RXM1SIDH 000F1C  
                             _RXM1SIDL 000F1D               __end_of_FRAME_AxisStatus 0D66  
            ??_FRAME_AdressOfNeighbors 000A                       _DetectorLedRadar 003D  
                          _LED_Control 0614                       __size_of_INI_All 001A  
         FRAME_ExcitationValue@message 0006         __end_ofi1_TMR1_Update_flag_Set 0F48  
                            copy_data0 0C86                       __size_of_ISR_low 0044  
   __size_of_FRAME_AccelerometerStatus 0036           __end_of_FRAME_AveragingTimes 0D9C  
           ?_FRAME_AccelerometerStatus 0006         __size_of_FRAME_ExcitationValue 0036  
        __end_of_FRAME_ExcitationValue 0D30                               __Hrparam 0000  
                         _RXB0SIDLbits 000F62                               __Lrparam 0000  
                     __size_of___awdiv 0084                       __size_of___lwdiv 0052  
                   LED_Light_Pos@flage 0016                     LED_Light_Pos@color 0011  
                         _RXF0SIDLbits 000F01               FRAME_AnalogValue@message 0006  
                      ___lwdiv@divisor 0008                           _RXF1SIDLbits 000F05  
                      ___lwdiv@counter 000C                               __ptext10 0D30  
                             __ptext11 0D66                               __ptext20 0F2A  
                             __ptext12 0F5A                               __ptext21 0F34  
                             __ptext13 0F5C                               __ptext30 0DD2  
                             __ptext22 0B30                               __ptext14 0D9C  
                             __ptext31 0614                               __ptext23 0766  
                             __ptext15 04A6                               __ptext32 0F1C  
                             __ptext24 0B86                               __ptext16 0940  
                             __ptext33 0A26                               __ptext25 0C26  
                             __ptext17 0060                               __ptext34 09BC  
                             __ptext26 0CB8                               __ptext18 08BC  
                             __ptext35 0E5E                               __ptext27 0EEA  
                             __ptext19 0E34                               __ptext28 0F04  
       ??_FRAME_SensorExcitationStatus 0008                               __ptext37 0F3E  
                             __ptext29 0ECC                               __ptext38 0E86  
        TRM_DataTransmition@canMessage 0015                           _RXF2SIDLbits 000F09  
             FRAME_DeviceReset@message 0006      __end_of_FRAME_AccelerometerStatus 0DD2  
                           _FRAME_Plot 0EAA                          __size_of_main 002E  
              __size_of_CAN_SetupClock 0028                               int$flags 004A  
                  _TRM_DataTransmition 0ADA                            _RXB0DLCbits 000F65  
                           _LED_Update 0B30                            _RXB0CONbits 000F60  
                           _INTCONbits 000FF2                             _INI_OUTPUT 0ECC  
                    _FRAME_AnalogValue 0F5A                   ?_TRM_DataTransmition 0001  
         FRAME_SoftwareVersion@message 0006                               intlevel1 0000  
                             intlevel2 0000                     ?_FRAME_AnalogValue 0006  
  FRAME_SensorExcitationStatus@message 0006                            _TXB0CONbits 000F40  
                  ??_FRAME_AnalogValue 000A              __size_of_TMR1_Timer_reset 0024  
             LED_Light_Pos@fulfillment 000F                   _FRAME_AveragingTimes 0D66  
       __size_of_FRAME_SoftwareVersion 0002                      _FRAME_DeviceReset 0A82  
        __end_of_FRAME_SoftwareVersion 0F58                     ?_FRAME_DeviceReset 0006  
                      LED_Update@Green 0049              __end_of_FRAME_AnalogValue 0F5C  
               __size_of_LED_Light_Pos 00B0                  _CAN_MoveBuffIntoFrame 0E34  
                           _WDTCONbits 000FD1                    ??_FRAME_DeviceReset 0008  
                ??_TRM_DataTransmition 0015                 LED_Light_Pos@LED_array 0012  
                       LED_Update@pos1 0045                         LED_Update@pos2 0043  
                          ?_FRAME_Plot 0006  
