

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 29 15:39:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4680 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  001BEE                     __pidataCOMRAM:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for MOC_Frame_Counter@zeta
   123  001BEE  0011               	dw	17
   124                           
   125                           ;initializer for LED_Update@pos2
   126  001BF0  0001               	dw	1
   127                           
   128                           ;initializer for LED_Update@pos1
   129  001BF2  0001               	dw	1
   130                           
   131                           ;initializer for _Fulfillment_Lvl
   132  001BF4  0014               	dw	20
   133                           
   134                           ;initializer for LED_Update@Green
   135  001BF6  01                 	db	1
   136                           
   137                           ;initializer for _NeightAdress2
   138  001BF7  012A               	dw	298
   139  0000                     _RXF9EIDL	set	3443
   140  0000                     _RXF9EIDH	set	3442
   141  0000                     _RXF9SIDLbits	set	3441
   142  0000                     _RXF9SIDL	set	3441
   143  0000                     _RXF9SIDH	set	3440
   144  0000                     _RXF8EIDL	set	3435
   145  0000                     _RXF8EIDH	set	3434
   146  0000                     _RXF8SIDLbits	set	3433
   147  0000                     _RXF8SIDL	set	3433
   148  0000                     _RXF8SIDH	set	3432
   149  0000                     _RXF7EIDL	set	3431
   150  0000                     _RXF7EIDH	set	3430
   151  0000                     _RXF7SIDLbits	set	3429
   152  0000                     _RXF7SIDL	set	3429
   153  0000                     _RXF7SIDH	set	3428
   154  0000                     _RXF6EIDL	set	3427
   155  0000                     _RXF6EIDH	set	3426
   156  0000                     _RXF6SIDLbits	set	3425
   157  0000                     _RXF6SIDL	set	3425
   158  0000                     _RXF6SIDH	set	3424
   159  0000                     _RXFCON0	set	3540
   160  0000                     _RXFBCON4	set	3556
   161  0000                     _RXFBCON3	set	3555
   162  0000                     _RXFBCON2	set	3554
   163  0000                     _RXFBCON1	set	3553
   164  0000                     _RXFBCON0	set	3552
   165  0000                     _MSEL3	set	3571
   166  0000                     _MSEL2	set	3570
   167  0000                     _MSEL1	set	3569
   168  0000                     _MSEL0	set	3568
   169  0000                     _BIE0	set	3578
   170  0000                     _BSEL0	set	3576
   171  0000                     _B5CON	set	3696
   172  0000                     _B4CON	set	3680
   173  0000                     _B3CON	set	3664
   174  0000                     _B2CON	set	3648
   175  0000                     _B1CON	set	3632
   176  0000                     _B0CON	set	3616
   177  0000                     _TXB0CONbits	set	3904
   178  0000                     _RXF5EIDL	set	3863
   179  0000                     _RXF5EIDH	set	3862
   180  0000                     _RXF5SIDLbits	set	3861
   181  0000                     _RXF5SIDL	set	3861
   182  0000                     _RXF5SIDH	set	3860
   183  0000                     _RXF4EIDL	set	3859
   184  0000                     _RXF4EIDH	set	3858
   185  0000                     _RXF4SIDLbits	set	3857
   186  0000                     _RXF4SIDL	set	3857
   187  0000                     _RXF4SIDH	set	3856
   188  0000                     _RXF3EIDL	set	3855
   189  0000                     _RXF3EIDH	set	3854
   190  0000                     _RXF3SIDLbits	set	3853
   191  0000                     _RXF3SIDL	set	3853
   192  0000                     _RXF3SIDH	set	3852
   193  0000                     _RXF2EIDL	set	3851
   194  0000                     _RXF2EIDH	set	3850
   195  0000                     _RXF2SIDLbits	set	3849
   196  0000                     _RXF2SIDL	set	3849
   197  0000                     _RXF2SIDH	set	3848
   198  0000                     _RXF1EIDL	set	3847
   199  0000                     _RXF1EIDH	set	3846
   200  0000                     _RXF1SIDLbits	set	3845
   201  0000                     _RXF1SIDL	set	3845
   202  0000                     _RXF1SIDH	set	3844
   203  0000                     _RXF0EIDL	set	3843
   204  0000                     _RXF0EIDH	set	3842
   205  0000                     _RXF0SIDLbits	set	3841
   206  0000                     _RXF0SIDL	set	3841
   207  0000                     _RXF0SIDH	set	3840
   208  0000                     _RXM1EIDL	set	3871
   209  0000                     _RXM1EIDH	set	3870
   210  0000                     _RXM1SIDL	set	3869
   211  0000                     _RXM1SIDH	set	3868
   212  0000                     _RXM0EIDL	set	3867
   213  0000                     _RXM0EIDH	set	3866
   214  0000                     _RXM0SIDL	set	3865
   215  0000                     _RXM0SIDH	set	3864
   216  0000                     _RXB1CON	set	3920
   217  0000                     _TXB0CON	set	3904
   218  0000                     _TRISC	set	3988
   219  0000                     _LATC	set	3979
   220  0000                     _LATE	set	3981
   221  0000                     _LATA	set	3977
   222  0000                     _LATB	set	3978
   223  0000                     _LATD	set	3980
   224  0000                     _TRISD	set	3989
   225  0000                     _TRISE	set	3990
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISA	set	3986
   228  0000                     _RXB0DLCbits	set	3941
   229  0000                     _RXB0DLC	set	3941
   230  0000                     _RXB0SIDH	set	3937
   231  0000                     _RXB0SIDLbits	set	3938
   232  0000                     _RXB0SIDL	set	3938
   233  0000                     _RXB0EIDH	set	3939
   234  0000                     _RXB0EIDL	set	3940
   235  0000                     _COMSTATbits	set	3956
   236  0000                     _RXB0CONbits	set	3936
   237  0000                     _BRGCON3bits	set	3954
   238  0000                     _BRGCON2bits	set	3953
   239  0000                     _BRGCON1bits	set	3952
   240  0000                     _CIOCON	set	3955
   241  0000                     _ECANCON	set	3959
   242  0000                     _RXB0CON	set	3936
   243  0000                     _CANSTAT	set	3950
   244  0000                     _CANCON	set	3951
   245  0000                     _RXB0D0	set	3942
   246  0000                     _EECON2	set	4007
   247  0000                     _EEDATA	set	4008
   248  0000                     _EECON1bits	set	4006
   249  0000                     _EEADR	set	4009
   250  0000                     _EEADRH	set	4010
   251  0000                     _WDTCONbits	set	4049
   252  0000                     _RCONbits	set	4048
   253  0000                     _T1CON	set	4045
   254  0000                     _TMR1H	set	4047
   255  0000                     _TMR1L	set	4046
   256  0000                     _PIR3	set	4004
   257  0000                     _IPR3	set	4005
   258  0000                     _PIE3	set	4003
   259  0000                     _RCON	set	4048
   260  0000                     _TMR1IF	set	31984
   261  0000                     _TMR1IP	set	31992
   262  0000                     _IPEN	set	32391
   263  0000                     _TMR1ON	set	32360
   264  0000                     _TMR1IE	set	31976
   265  0000                     _IRCF0	set	32412
   266  0000                     _IRCF1	set	32413
   267  0000                     _IRCF2	set	32414
   268  0000                     _TBLPTR	set	4086
   269  0000                     _TABLAT	set	4085
   270  0000                     _INTCONbits	set	4082
   271  0000                     _PEIE	set	32662
   272                           
   273                           ; #config settings
   274  0000                     
   275                           	psect	cinit
   276  001652                     __pcinit:
   277                           	opt callstack 0
   278  001652                     start_initialization:
   279                           	opt callstack 0
   280  001652                     __initialization:
   281                           	opt callstack 0
   282                           
   283                           ; Initialize objects allocated to COMRAM (11 bytes)
   284                           ; load TBLPTR registers with __pidataCOMRAM
   285  001652  0EEE               	movlw	low __pidataCOMRAM
   286  001654  6EF6               	movwf	tblptrl,c
   287  001656  0E1B               	movlw	high __pidataCOMRAM
   288  001658  6EF7               	movwf	tblptrh,c
   289  00165A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   290  00165C  6EF8               	movwf	tblptru,c
   291  00165E  EE00  F041         	lfsr	0,__pdataCOMRAM
   292  001662  EE10 F00B          	lfsr	1,11
   293  001666                     copy_data0:
   294  001666  0009               	tblrd		*+
   295  001668  CFF5 FFEE          	movff	tablat,postinc0
   296  00166C  50E5               	movf	postdec1,w,c
   297  00166E  50E1               	movf	fsr1l,w,c
   298  001670  E1FA               	bnz	copy_data0
   299                           
   300                           ; Clear objects allocated to BIGRAM (544 bytes)
   301  001672  EE00  F0E1         	lfsr	0,__pbssBIGRAM
   302  001676  EE12 F020          	lfsr	1,544
   303  00167A                     clear_0:
   304  00167A  6AEE               	clrf	postinc0,c
   305  00167C  50E5               	movf	postdec1,w,c
   306  00167E  50E1               	movf	fsr1l,w,c
   307  001680  E1FC               	bnz	clear_0
   308  001682  50E2               	movf	fsr1h,w,c
   309  001684  E1FA               	bnz	clear_0
   310                           
   311                           ; Clear objects allocated to BANK0 (112 bytes)
   312  001686  EE00  F060         	lfsr	0,__pbssBANK0
   313  00168A  0E70               	movlw	112
   314  00168C                     clear_1:
   315  00168C  6AEE               	clrf	postinc0,c
   316  00168E  06E8               	decf	wreg,f,c
   317  001690  E1FD               	bnz	clear_1
   318                           
   319                           ; Clear objects allocated to COMRAM (36 bytes)
   320  001692  EE00  F001         	lfsr	0,__pbssCOMRAM
   321  001696  0E24               	movlw	36
   322  001698                     clear_2:
   323  001698  6AEE               	clrf	postinc0,c
   324  00169A  06E8               	decf	wreg,f,c
   325  00169C  E1FD               	bnz	clear_2
   326  00169E                     end_of_initialization:
   327                           	opt callstack 0
   328  00169E                     __end_of__initialization:
   329                           	opt callstack 0
   330  00169E  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   331  0016A0  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   332  0016A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   333  0016A4  6EF8               	movwf	tblptru,c
   334  0016A6  0100               	movlb	0
   335  0016A8  EF1D  F007         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338  000001                     __pbssCOMRAM:
   339                           	opt callstack 0
   340  000001                     _DaneCan:
   341                           	opt callstack 0
   342  000001                     	ds	4
   343  000005                     _nextEEPosition:
   344                           	opt callstack 0
   345  000005                     	ds	2
   346  000007                     FRAME_SensorExcitationStatus@statwect:
   347                           	opt callstack 0
   348  000007                     	ds	2
   349  000009                     _TMR1_Update_flag:
   350                           	opt callstack 0
   351  000009                     	ds	2
   352  00000B                     _Dane:
   353                           	opt callstack 0
   354  00000B                     	ds	2
   355  00000D                     WritetoEEPROM@GIE_Status:
   356                           	opt callstack 0
   357  00000D                     	ds	1
   358  00000E                     	ds	1
   359  00000F                     	ds	1
   360  000010                     ISR_low@ramkaStanuU8:
   361                           	opt callstack 0
   362  000010                     	ds	1
   363  000011                     	ds	1
   364  000012                     _LOCK:
   365                           	opt callstack 0
   366  000012                     	ds	1
   367  000013                     _neighborsAdress:
   368                           	opt callstack 0
   369  000013                     	ds	2
   370  000015                     _ustawieniaKarty:
   371                           	opt callstack 0
   372  000015                     	ds	2
   373  000017                     _NeightAdress8:
   374                           	opt callstack 0
   375  000017                     	ds	2
   376  000019                     _NeightAdress7:
   377                           	opt callstack 0
   378  000019                     	ds	2
   379  00001B                     _NeightAdress6:
   380                           	opt callstack 0
   381  00001B                     	ds	2
   382  00001D                     _NeightAdress5:
   383                           	opt callstack 0
   384  00001D                     	ds	2
   385  00001F                     _NeightAdress4:
   386                           	opt callstack 0
   387  00001F                     	ds	2
   388  000021                     _NeightAdress3:
   389                           	opt callstack 0
   390  000021                     	ds	2
   391  000023                     _NeightAdress1:
   392                           	opt callstack 0
   393  000023                     	ds	2
   394                           
   395                           	psect	dataCOMRAM
   396  000041                     __pdataCOMRAM:
   397                           	opt callstack 0
   398  000041                     MOC_Frame_Counter@zeta:
   399                           	opt callstack 0
   400  000041                     	ds	2
   401  000043                     LED_Update@pos2:
   402                           	opt callstack 0
   403  000043                     	ds	2
   404  000045                     LED_Update@pos1:
   405                           	opt callstack 0
   406  000045                     	ds	2
   407  000047                     _Fulfillment_Lvl:
   408                           	opt callstack 0
   409  000047                     	ds	2
   410  000049                     LED_Update@Green:
   411                           	opt callstack 0
   412  000049                     	ds	1
   413  00004A                     _NeightAdress2:
   414                           	opt callstack 0
   415  00004A                     	ds	2
   416                           
   417                           	psect	bssBANK0
   418  000060                     __pbssBANK0:
   419                           	opt callstack 0
   420  000060                     _ramkaCanRxKarty:
   421                           	opt callstack 0
   422  000060                     	ds	85
   423  0000B5                     _ramkaCanTxKarty:
   424                           	opt callstack 0
   425  0000B5                     	ds	17
   426  0000C6                     _Flagi:
   427                           	opt callstack 0
   428  0000C6                     	ds	5
   429  0000CB                     _DetectorLedRadar:
   430                           	opt callstack 0
   431  0000CB                     	ds	3
   432  0000CE                     _czujnikiNaMapie:
   433                           	opt callstack 0
   434  0000CE                     	ds	2
   435                           
   436                           	psect	bssBIGRAM
   437  0000E1                     __pbssBIGRAM:
   438                           	opt callstack 0
   439  0000E1                     _wartosciSasiada:
   440                           	opt callstack 0
   441  0000E1                     	ds	544
   442                           
   443                           	psect	cstackBANK0
   444  0000D0                     __pcstackBANK0:
   445                           	opt callstack 0
   446  0000D0                     TRM_DataTransmition@canMessage:
   447                           	opt callstack 0
   448                           
   449                           ; 17 bytes @ 0x0
   450  0000D0                     	ds	17
   451                           
   452                           	psect	cstackCOMRAM
   453  000025                     __pcstackCOMRAM:
   454                           	opt callstack 0
   455  000025                     TMR1_Timer_reset@t1L:
   456                           	opt callstack 0
   457  000025                     i1TMR1_Update_flag_Set@a:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x0
   461  000025                     	ds	1
   462  000026                     TMR1_Timer_reset@t1H:
   463                           	opt callstack 0
   464                           
   465                           ; 1 bytes @ 0x1
   466  000026                     	ds	1
   467  000027                     ??_ISR_low:
   468  000027                     
   469                           ; 1 bytes @ 0x2
   470  000027                     	ds	3
   471  00002A                     ??_CAN_Setup:
   472  00002A                     ?_FLASH_Read:
   473                           	opt callstack 0
   474  00002A                     ?_TMR1_Update_flag_Get:
   475                           	opt callstack 0
   476  00002A                     ?_LED_Right:
   477                           	opt callstack 0
   478  00002A                     ?_LED_Left:
   479                           	opt callstack 0
   480  00002A                     ?_MOC_Wynikowa_wartosc_roznicowa:
   481                           	opt callstack 0
   482  00002A                     ?_MOC_Frame_Counter:
   483                           	opt callstack 0
   484  00002A                     ?_MOC_Aktualna_Temperatura:
   485                           	opt callstack 0
   486  00002A                     ?_MOC_NOTWORK:
   487                           	opt callstack 0
   488  00002A                     ?_IsInNeighbors:
   489                           	opt callstack 0
   490  00002A                     ?_MOCK_PrzyspieszenieX:
   491                           	opt callstack 0
   492  00002A                     ?_MOCK_PrzyspieszenieY:
   493                           	opt callstack 0
   494  00002A                     ?_MOCK_PrzyspieszenieZ:
   495                           	opt callstack 0
   496  00002A                     ?_MOCK_Klikniecie_Spadek:
   497                           	opt callstack 0
   498  00002A                     ?___awdiv:
   499                           	opt callstack 0
   500  00002A                     ?___lwdiv:
   501                           	opt callstack 0
   502  00002A                     LOCK_Set@k:
   503                           	opt callstack 0
   504  00002A                     CAN_MoveBuffIntoFrame@Ram:
   505                           	opt callstack 0
   506  00002A                     CAN_GenID@message:
   507                           	opt callstack 0
   508  00002A                     LED_Right@a:
   509                           	opt callstack 0
   510  00002A                     LED_Left@a:
   511                           	opt callstack 0
   512  00002A                     LED_Control@diode:
   513                           	opt callstack 0
   514  00002A                     TMR1_Update_flag_Set@a:
   515                           	opt callstack 0
   516  00002A                     IsInNeighbors@message_adress:
   517                           	opt callstack 0
   518  00002A                     FRAME_ExcitationValue@message:
   519                           	opt callstack 0
   520  00002A                     FRAME_ExcitationMultiplier@message:
   521                           	opt callstack 0
   522  00002A                     FRAME_AveragingTimes@message:
   523                           	opt callstack 0
   524  00002A                     FRAME_AxisStatus@message:
   525                           	opt callstack 0
   526  00002A                     FRAME_DataUpdateAndChangeOption@message:
   527                           	opt callstack 0
   528  00002A                     FRAME_MapPosition@message:
   529                           	opt callstack 0
   530  00002A                     FRAME_SoftwareVersion@message:
   531                           	opt callstack 0
   532  00002A                     FRAME_AnalogValue@message:
   533                           	opt callstack 0
   534  00002A                     FRAME_PrzypisanieDokarty@message:
   535                           	opt callstack 0
   536  00002A                     FRAME_AdressOfNeighbors@message:
   537                           	opt callstack 0
   538  00002A                     NVMalloc@size:
   539                           	opt callstack 0
   540  00002A                     ReadfromEEPROM@Address:
   541                           	opt callstack 0
   542  00002A                     WritetoEEPROM@Address:
   543                           	opt callstack 0
   544  00002A                     ___awdiv@dividend:
   545                           	opt callstack 0
   546  00002A                     ___lwdiv@dividend:
   547                           	opt callstack 0
   548  00002A                     FLASH_Read@addr:
   549                           	opt callstack 0
   550  00002A                     FLASH_Write@addr:
   551                           	opt callstack 0
   552                           
   553                           ; 4 bytes @ 0x5
   554  00002A                     	ds	2
   555  00002C                     ??_LED_Right:
   556  00002C                     ??_FRAME_DataUpdateAndChangeOption:
   557  00002C                     ??_FRAME_PrzypisanieDokarty:
   558  00002C                     CAN_GenID@frameID:
   559                           	opt callstack 0
   560  00002C                     WritetoEEPROM@Data:
   561                           	opt callstack 0
   562  00002C                     CAN_MoveBuffIntoFrame@Buf:
   563                           	opt callstack 0
   564  00002C                     LED_Left@b:
   565                           	opt callstack 0
   566  00002C                     FRAME_SensorExcitationStatus@message:
   567                           	opt callstack 0
   568  00002C                     FRAME_AccelerometerStatus@message:
   569                           	opt callstack 0
   570  00002C                     FRAME_AnalogValue@set:
   571                           	opt callstack 0
   572  00002C                     FRAME_AdressOfNeighbors@nrRamki:
   573                           	opt callstack 0
   574  00002C                     NVMalloc@location:
   575                           	opt callstack 0
   576  00002C                     NVMRead@dest:
   577                           	opt callstack 0
   578  00002C                     ___awdiv@divisor:
   579                           	opt callstack 0
   580  00002C                     ___lwdiv@divisor:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x7
   584  00002C                     	ds	1
   585  00002D                     ??_CAN_GenID:
   586  00002D                     FRAME_ExcitationMultiplier@i:
   587                           	opt callstack 0
   588  00002D                     NVMWrite@source:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x8
   592  00002D                     	ds	1
   593  00002E                     ??_FRAME_SensorExcitationStatus:
   594  00002E                     ??_FRAME_AdressOfNeighbors:
   595  00002E                     ??_NVMalloc:
   596  00002E                     CAN_MoveBuffIntoFrame@i:
   597                           	opt callstack 0
   598  00002E                     LED_Control@color:
   599                           	opt callstack 0
   600  00002E                     ___awdiv@counter:
   601                           	opt callstack 0
   602  00002E                     ___lwdiv@counter:
   603                           	opt callstack 0
   604  00002E                     LED_Right@b:
   605                           	opt callstack 0
   606  00002E                     NVMRead@addr:
   607                           	opt callstack 0
   608  00002E                     FLASH_Write@val:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x9
   612  00002E                     	ds	1
   613  00002F                     ___awdiv@sign:
   614                           	opt callstack 0
   615  00002F                     CAN_SendFrame@message:
   616                           	opt callstack 0
   617  00002F                     NVMWrite@addr:
   618                           	opt callstack 0
   619  00002F                     ___lwdiv@quotient:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0xA
   623  00002F                     	ds	1
   624  000030                     ??_FLASH_Write:
   625  000030                     FRAME_SensorExcitationStatus@tru:
   626                           	opt callstack 0
   627  000030                     NVMRead@count:
   628                           	opt callstack 0
   629  000030                     ___awdiv@quotient:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0xB
   633  000030                     	ds	1
   634  000031                     ??_CAN_SendFrame:
   635  000031                     LED_Light_Pos@pos:
   636                           	opt callstack 0
   637  000031                     FRAME_Plot@message:
   638                           	opt callstack 0
   639  000031                     NVMWrite@count:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0xC
   643  000031                     	ds	1
   644  000032                     NVMInit@result:
   645                           	opt callstack 0
   646  000032                     CAN_TakeFrame@message:
   647                           	opt callstack 0
   648  000032                     FRAME_AdressOfNeighbors@kier:
   649                           	opt callstack 0
   650  000032                     FLASH_Write@GIEBitValue:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0xD
   654  000032                     	ds	1
   655  000033                     ??_FRAME_Plot:
   656  000033                     LED_Light_Pos@fulfillment:
   657                           	opt callstack 0
   658  000033                     FRAME_DeviceReset@message:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0xE
   662  000033                     	ds	1
   663  000034                     ??_CAN_TakeFrame:
   664  000034                     FLASH_Write@flashWrBufPtr:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0xF
   668  000034                     	ds	1
   669  000035                     LED_Light_Pos@color:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0x10
   673  000035                     	ds	1
   674  000036                     CAN_TakeFrame@tempCON:
   675                           	opt callstack 0
   676  000036                     LED_Light_Pos@LED_array:
   677                           	opt callstack 0
   678  000036                     FRAME_HandleCanFrame@message:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x11
   682  000036                     	ds	1
   683  000037                     CAN_TakeFrame@k:
   684                           	opt callstack 0
   685                           
   686                           ; 1 bytes @ 0x12
   687  000037                     	ds	1
   688  000038                     ??_FRAME_HandleCanFrame:
   689  000038                     LED_Light_Pos@pos2:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x13
   693  000038                     	ds	2
   694  00003A                     LED_Light_Pos@flage:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x15
   698  00003A                     	ds	2
   699  00003C                     FRAME_HandleCanFrame@ident:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x17
   703  00003C                     	ds	2
   704  00003E                     FRAME_HandleCanFrame@identyfikator:
   705                           	opt callstack 0
   706                           
   707                           ; 1 bytes @ 0x19
   708  00003E                     	ds	1
   709  00003F                     main@adr:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0x1A
   713  00003F                     	ds	2
   714                           
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 100 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  adr             2   26[COMRAM] int 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels required when called:    9
   740 ;; This function calls:
   741 ;;		_FLASH_Read
   742 ;;		_FLASH_Write
   743 ;;		_INI_All
   744 ;;		_LED_Update
   745 ;;		_TMR1_Update_flag_Get
   746 ;;		_TMR1_Update_flag_Set
   747 ;;		_TRM_DataTransmition
   748 ;; This function is called by:
   749 ;;		Startup code after reset
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text0
   754  000E3A                     __ptext0:
   755                           	opt callstack 0
   756  000E3A                     _main:
   757                           	opt callstack 22
   758                           
   759                           ;main.c: 103:     int adr = FLASH_Read(0x200000);
   760                           
   761                           ;incstack = 0
   762  000E3A  0E00               	movlw	0
   763  000E3C  6E2A               	movwf	FLASH_Read@addr,c
   764  000E3E  0E00               	movlw	0
   765  000E40  6E2B               	movwf	FLASH_Read@addr+1,c
   766  000E42  0E20               	movlw	32
   767  000E44  6E2C               	movwf	FLASH_Read@addr+2,c
   768  000E46  0E00               	movlw	0
   769  000E48  6E2D               	movwf	FLASH_Read@addr+3,c
   770  000E4A  ECD5  F00D         	call	_FLASH_Read	;wreg free
   771  000E4E  C02A  F03F         	movff	?_FLASH_Read,main@adr
   772  000E52  C02B  F040         	movff	?_FLASH_Read+1,main@adr+1
   773                           
   774                           ;main.c: 104:      adr |= FLASH_Read(0x200001)<<8;
   775  000E56  0E01               	movlw	1
   776  000E58  6E2A               	movwf	FLASH_Read@addr,c
   777  000E5A  0E00               	movlw	0
   778  000E5C  6E2B               	movwf	FLASH_Read@addr+1,c
   779  000E5E  0E20               	movlw	32
   780  000E60  6E2C               	movwf	FLASH_Read@addr+2,c
   781  000E62  0E00               	movlw	0
   782  000E64  6E2D               	movwf	FLASH_Read@addr+3,c
   783  000E66  ECD5  F00D         	call	_FLASH_Read	;wreg free
   784  000E6A  C02A  F02B         	movff	?_FLASH_Read,?_FLASH_Read+1
   785  000E6E  6A2A               	clrf	?_FLASH_Read,c
   786  000E70  502A               	movf	?_FLASH_Read,w,c
   787  000E72  123F               	iorwf	main@adr,f,c
   788  000E74  502B               	movf	?_FLASH_Read+1,w,c
   789  000E76  1240               	iorwf	main@adr+1,f,c
   790                           
   791                           ;main.c: 108:      FLASH_Write(0x200000,0x76);
   792  000E78  0E00               	movlw	0
   793  000E7A  6E2A               	movwf	FLASH_Write@addr,c
   794  000E7C  0E00               	movlw	0
   795  000E7E  6E2B               	movwf	FLASH_Write@addr+1,c
   796  000E80  0E20               	movlw	32
   797  000E82  6E2C               	movwf	FLASH_Write@addr+2,c
   798  000E84  0E00               	movlw	0
   799  000E86  6E2D               	movwf	FLASH_Write@addr+3,c
   800  000E88  0E00               	movlw	0
   801  000E8A  6E2F               	movwf	FLASH_Write@val+1,c
   802  000E8C  0E76               	movlw	118
   803  000E8E  6E2E               	movwf	FLASH_Write@val,c
   804  000E90  EC9D  F009         	call	_FLASH_Write	;wreg free
   805                           
   806                           ;main.c: 109:      FLASH_Write(0x200001,0x00);
   807  000E94  0E01               	movlw	1
   808  000E96  6E2A               	movwf	FLASH_Write@addr,c
   809  000E98  0E00               	movlw	0
   810  000E9A  6E2B               	movwf	FLASH_Write@addr+1,c
   811  000E9C  0E20               	movlw	32
   812  000E9E  6E2C               	movwf	FLASH_Write@addr+2,c
   813  000EA0  0E00               	movlw	0
   814  000EA2  6E2D               	movwf	FLASH_Write@addr+3,c
   815  000EA4  0E00               	movlw	0
   816  000EA6  6E2F               	movwf	FLASH_Write@val+1,c
   817  000EA8  0E00               	movlw	0
   818  000EAA  6E2E               	movwf	FLASH_Write@val,c
   819  000EAC  EC9D  F009         	call	_FLASH_Write	;wreg free
   820                           
   821                           ;main.c: 111:      adr = FLASH_Read(0x200000);
   822  000EB0  0E00               	movlw	0
   823  000EB2  6E2A               	movwf	FLASH_Read@addr,c
   824  000EB4  0E00               	movlw	0
   825  000EB6  6E2B               	movwf	FLASH_Read@addr+1,c
   826  000EB8  0E20               	movlw	32
   827  000EBA  6E2C               	movwf	FLASH_Read@addr+2,c
   828  000EBC  0E00               	movlw	0
   829  000EBE  6E2D               	movwf	FLASH_Read@addr+3,c
   830  000EC0  ECD5  F00D         	call	_FLASH_Read	;wreg free
   831  000EC4  C02A  F03F         	movff	?_FLASH_Read,main@adr
   832  000EC8  C02B  F040         	movff	?_FLASH_Read+1,main@adr+1
   833                           
   834                           ;main.c: 112:      adr |= FLASH_Read(0x200001)<<8;
   835  000ECC  0E01               	movlw	1
   836  000ECE  6E2A               	movwf	FLASH_Read@addr,c
   837  000ED0  0E00               	movlw	0
   838  000ED2  6E2B               	movwf	FLASH_Read@addr+1,c
   839  000ED4  0E20               	movlw	32
   840  000ED6  6E2C               	movwf	FLASH_Read@addr+2,c
   841  000ED8  0E00               	movlw	0
   842  000EDA  6E2D               	movwf	FLASH_Read@addr+3,c
   843  000EDC  ECD5  F00D         	call	_FLASH_Read	;wreg free
   844  000EE0  C02A  F02B         	movff	?_FLASH_Read,?_FLASH_Read+1
   845  000EE4  6A2A               	clrf	?_FLASH_Read,c
   846  000EE6  502A               	movf	?_FLASH_Read,w,c
   847  000EE8  123F               	iorwf	main@adr,f,c
   848  000EEA  502B               	movf	?_FLASH_Read+1,w,c
   849  000EEC  1240               	iorwf	main@adr+1,f,c
   850                           
   851                           ;main.c: 114:     DaneCan.adresCAN = adr;
   852  000EEE  C03F  F003         	movff	main@adr,_DaneCan+2
   853  000EF2  C040  F004         	movff	main@adr+1,_DaneCan+3
   854                           
   855                           ;main.c: 115:     INI_All();
   856  000EF6  EC99  F00D         	call	_INI_All	;wreg free
   857                           
   858                           ;main.c: 117:     RCON = 0xFF;
   859  000EFA  68D0               	setf	4048,c	;volatile
   860  000EFC                     l4825:
   861                           
   862                           ;main.c: 120:     {;main.c: 121:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   863  000EFC  0100               	movlb	0	; () banked
   864  000EFE  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   865                           
   866                           ; BSR set to: 0
   867                           ;main.c: 122:         {;main.c: 123:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   868  000F00  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   869                           
   870                           ; BSR set to: 0
   871                           ;main.c: 127:         if(TMR1_Update_flag_Get()==1)
   872  000F02  EC20  F00E         	call	_TMR1_Update_flag_Get	;wreg free
   873  000F06  042A               	decf	?_TMR1_Update_flag_Get,w,c
   874  000F08  102B               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   875  000F0A  A4D8               	btfss	status,2,c
   876  000F0C  D008               	goto	l4835
   877                           
   878                           ;main.c: 128:         {;main.c: 129:             LED_Update();
   879  000F0E  ECDB  F009         	call	_LED_Update	;wreg free
   880                           
   881                           ;main.c: 130:             TMR1_Update_flag_Set(0);
   882  000F12  0E00               	movlw	0
   883  000F14  6E2B               	movwf	TMR1_Update_flag_Set@a+1,c
   884  000F16  0E00               	movlw	0
   885  000F18  6E2A               	movwf	TMR1_Update_flag_Set@a,c
   886  000F1A  EC1B  F00E         	call	_TMR1_Update_flag_Set	;wreg free
   887  000F1E                     l4835:
   888                           
   889                           ;main.c: 135:         TRM_DataTransmition();
   890  000F1E  ECFF  F00B         	call	_TRM_DataTransmition	;wreg free
   891  000F22  0004               	clrwdt		;# 
   892                           
   893                           ;main.c: 137:     }
   894  000F24  D7EB               	goto	l4825
   895  000F26                     __end_of_main:
   896                           	opt callstack 0
   897                           
   898 ;; *************** function _TRM_DataTransmition *****************
   899 ;; Defined at:
   900 ;;		line 19 in file "TRM.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  canMessage     17    0[BANK0 ] struct .
   905 ;;  i               1    0        unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   916 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   918 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   919 ;;Total ram usage:       17 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    8
   922 ;; This function calls:
   923 ;;		_CAN_TakeFrame
   924 ;;		_FRAME_HandleCanFrame
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text1
   931  0017FE                     __ptext1:
   932                           	opt callstack 0
   933  0017FE                     _TRM_DataTransmition:
   934                           	opt callstack 22
   935                           
   936                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   937                           
   938                           ;incstack = 0
   939  0017FE  A001               	btfss	_DaneCan,0,c
   940  001800  D014               	goto	l4799
   941                           
   942                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   943  001802  0E02               	movlw	2
   944  001804  0100               	movlb	0	; () banked
   945  001806  6FD1               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   946                           
   947                           ;TRM.c: 30:         canMessage.id.Val = 0;
   948  001808  0E00               	movlw	0
   949  00180A  6FD4               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   950  00180C  0E00               	movlw	0
   951  00180E  6FD5               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   952  001810  0E00               	movlw	0
   953  001812  6FD6               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   954  001814  0E00               	movlw	0
   955  001816  6FD7               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
   956                           
   957                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   958  001818  0E04               	movlw	4
   959  00181A  6FD6               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   960                           
   961                           ; BSR set to: 0
   962                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   963  00181C  0ED0               	movlw	low TRM_DataTransmition@canMessage
   964  00181E  6E36               	movwf	FRAME_HandleCanFrame@message,c
   965  001820  0E00               	movlw	high TRM_DataTransmition@canMessage
   966  001822  6E37               	movwf	FRAME_HandleCanFrame@message+1,c
   967  001824  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   968                           
   969                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   970  001828  9001               	bcf	_DaneCan,0,c
   971  00182A                     l4799:
   972                           
   973                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   974  00182A  0ED0               	movlw	low TRM_DataTransmition@canMessage
   975  00182C  6E32               	movwf	CAN_TakeFrame@message,c
   976  00182E  0E00               	movlw	high TRM_DataTransmition@canMessage
   977  001830  6E33               	movwf	CAN_TakeFrame@message+1,c
   978  001832  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   979  001836  0900               	iorlw	0
   980  001838  B4D8               	btfsc	status,2,c
   981  00183A  0012               	return	
   982                           
   983                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   984  00183C  0ED0               	movlw	low TRM_DataTransmition@canMessage
   985  00183E  6E36               	movwf	FRAME_HandleCanFrame@message,c
   986  001840  0E00               	movlw	high TRM_DataTransmition@canMessage
   987  001842  6E37               	movwf	FRAME_HandleCanFrame@message+1,c
   988  001844  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   989                           
   990                           ;TRM.c: 67:         }
   991  001848  0012               	return		;funcret
   992  00184A                     __end_of_TRM_DataTransmition:
   993                           	opt callstack 0
   994                           
   995 ;; *************** function _FRAME_HandleCanFrame *****************
   996 ;; Defined at:
   997 ;;		line 682 in file "FRAME.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  message         2   17[COMRAM] PTR struct .
  1000 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  ident           2   23[COMRAM] unsigned short 
  1003 ;;  alfa            2    0        int 
  1004 ;;  identyfikato    1   25[COMRAM] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1015 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1017 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1018 ;;Total ram usage:        9 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    7
  1021 ;; This function calls:
  1022 ;;		_CAN_GenID
  1023 ;;		_CAN_SendFrame
  1024 ;;		_FRAME_AccelerometerStatus
  1025 ;;		_FRAME_AdressOfNeighbors
  1026 ;;		_FRAME_AnalogValue
  1027 ;;		_FRAME_AveragingTimes
  1028 ;;		_FRAME_AxisStatus
  1029 ;;		_FRAME_DeviceReset
  1030 ;;		_FRAME_ExcitationMultiplier
  1031 ;;		_FRAME_ExcitationValue
  1032 ;;		_FRAME_MapPosition
  1033 ;;		_FRAME_Plot
  1034 ;;		_FRAME_PrzypisanieDokarty
  1035 ;;		_FRAME_SensorExcitationStatus
  1036 ;;		_FRAME_SoftwareVersion
  1037 ;;		_LED_Error
  1038 ;;		___awdiv
  1039 ;; This function is called by:
  1040 ;;		_TRM_DataTransmition
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text2
  1045  0005AA                     __ptext2:
  1046                           	opt callstack 0
  1047  0005AA                     _FRAME_HandleCanFrame:
  1048                           	opt callstack 22
  1049                           
  1050                           ;FRAME.c: 682: void FRAME_HandleCanFrame(mID * message);FRAME.c: 683: {;FRAME.c: 684:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
  1051                           
  1052                           ;incstack = 0
  1053  0005AA  EE20 F006          	lfsr	2,6
  1054  0005AE  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1055  0005B0  26D9               	addwf	fsr2l,f,c
  1056  0005B2  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1057  0005B4  22DA               	addwfc	fsr2h,f,c
  1058  0005B6  50DF               	movf	indf2,w,c
  1059  0005B8  6E38               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1060  0005BA  5038               	movf	??_FRAME_HandleCanFrame,w,c
  1061  0005BC  6E2A               	movwf	___awdiv@dividend,c
  1062  0005BE  6A2B               	clrf	___awdiv@dividend+1,c
  1063  0005C0  0E00               	movlw	0
  1064  0005C2  6E2D               	movwf	___awdiv@divisor+1,c
  1065  0005C4  0E04               	movlw	4
  1066  0005C6  6E2C               	movwf	___awdiv@divisor,c
  1067  0005C8  EC5B  F009         	call	___awdiv	;wreg free
  1068  0005CC  502A               	movf	?___awdiv,w,c
  1069  0005CE  6E3E               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1070                           
  1071                           ;FRAME.c: 687:     if(identyfikator != 0x01)
  1072  0005D0  043E               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1073  0005D2  B4D8               	btfsc	status,2,c
  1074  0005D4  D074               	goto	l4749
  1075                           
  1076                           ;FRAME.c: 688:     {;FRAME.c: 689:         WORD ident = identyfikator;
  1077  0005D6  C03E  F03C         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1078  0005DA  6A3D               	clrf	FRAME_HandleCanFrame@ident+1,c
  1079  0005DC  D070               	goto	l4749
  1080  0005DE                     l4719:
  1081                           
  1082                           ;FRAME.c: 696:             FRAME_SensorExcitationStatus(message);
  1083  0005DE  C036  F02C         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1084  0005E2  C037  F02D         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1085  0005E6  EC97  F006         	call	_FRAME_SensorExcitationStatus	;wreg free
  1086                           
  1087                           ;FRAME.c: 697:             break;
  1088  0005EA  D09E               	goto	l4751
  1089  0005EC                     l4721:
  1090                           
  1091                           ;FRAME.c: 699:             FRAME_AccelerometerStatus(message);
  1092  0005EC  C036  F02C         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1093  0005F0  C037  F02D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1094  0005F4  EC54  F00A         	call	_FRAME_AccelerometerStatus	;wreg free
  1095                           
  1096                           ;FRAME.c: 700:             break;
  1097  0005F8  D097               	goto	l4751
  1098  0005FA                     l4723:
  1099                           
  1100                           ;FRAME.c: 702:             FRAME_ExcitationValue(message);
  1101  0005FA  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1102  0005FE  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1103  000602  EC89  F00C         	call	_FRAME_ExcitationValue	;wreg free
  1104                           
  1105                           ;FRAME.c: 703:             break;
  1106  000606  D090               	goto	l4751
  1107  000608                     l4725:
  1108                           
  1109                           ;FRAME.c: 705:             FRAME_ExcitationMultiplier(message);
  1110  000608  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1111  00060C  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1112  000610  ECD8  F00B         	call	_FRAME_ExcitationMultiplier	;wreg free
  1113                           
  1114                           ;FRAME.c: 706:             break;
  1115  000614  D089               	goto	l4751
  1116  000616                     l4727:
  1117                           
  1118                           ;FRAME.c: 708:             FRAME_AveragingTimes(message);
  1119  000616  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1120  00061A  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1121  00061E  ECDA  F00C         	call	_FRAME_AveragingTimes	;wreg free
  1122                           
  1123                           ;FRAME.c: 709:             break;
  1124  000622  D082               	goto	l4751
  1125  000624                     l4729:
  1126                           
  1127                           ;FRAME.c: 711:             FRAME_AxisStatus(message);
  1128  000624  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1129  000628  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1130  00062C  ECBF  F00C         	call	_FRAME_AxisStatus	;wreg free
  1131                           
  1132                           ;FRAME.c: 712:             break;
  1133  000630  D07B               	goto	l4751
  1134  000632                     l4731:
  1135                           
  1136                           ;FRAME.c: 714:             FRAME_DeviceReset(message);
  1137  000632  C036  F033         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1138  000636  C037  F034         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1139  00063A  ECF3  F005         	call	_FRAME_DeviceReset	;wreg free
  1140                           
  1141                           ;FRAME.c: 715:             break;
  1142  00063E  D074               	goto	l4751
  1143  000640                     l4733:
  1144                           
  1145                           ;FRAME.c: 717:             FRAME_Plot(message);
  1146  000640  C036  F031         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1147  000644  C037  F032         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1148  000648  EC83  F00B         	call	_FRAME_Plot	;wreg free
  1149                           
  1150                           ;FRAME.c: 718:             break;
  1151  00064C  D06D               	goto	l4751
  1152  00064E                     l4735:
  1153                           
  1154                           ;FRAME.c: 720:             FRAME_MapPosition(message);
  1155  00064E  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1156  000652  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1157  000656  EC37  F00E         	call	_FRAME_MapPosition	;wreg free
  1158                           
  1159                           ;FRAME.c: 721:             break;
  1160  00065A  D066               	goto	l4751
  1161  00065C                     l4737:
  1162                           
  1163                           ;FRAME.c: 723:             FRAME_SoftwareVersion(message);
  1164  00065C  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1165  000660  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1166  000664  ECC8  F00A         	call	_FRAME_SoftwareVersion	;wreg free
  1167                           
  1168                           ;FRAME.c: 724:             break;
  1169  000668  D05F               	goto	l4751
  1170  00066A                     l4739:
  1171                           
  1172                           ;FRAME.c: 727:             FRAME_AnalogValue(message, identyfikator - 0x0C);
  1173  00066A  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1174  00066E  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1175  000672  0EF4               	movlw	244
  1176  000674  243E               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1177  000676  6E2C               	movwf	FRAME_AnalogValue@set,c
  1178  000678  6A2D               	clrf	FRAME_AnalogValue@set+1,c
  1179  00067A  0EFF               	movlw	255
  1180  00067C  222D               	addwfc	FRAME_AnalogValue@set+1,f,c
  1181  00067E  EC38  F00E         	call	_FRAME_AnalogValue	;wreg free
  1182                           
  1183                           ;FRAME.c: 728:             break;
  1184  000682  D052               	goto	l4751
  1185  000684                     l4741:
  1186                           
  1187                           ;FRAME.c: 730:             FRAME_PrzypisanieDokarty(message);
  1188  000684  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1189  000688  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1190  00068C  ECC1  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1191                           
  1192                           ;FRAME.c: 731:             break;
  1193  000690  D04B               	goto	l4751
  1194  000692                     l4743:
  1195                           
  1196                           ;FRAME.c: 733:             FRAME_AdressOfNeighbors(message,0x10);
  1197  000692  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1198  000696  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1199  00069A  0E00               	movlw	0
  1200  00069C  6E2D               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1201  00069E  0E10               	movlw	16
  1202  0006A0  6E2C               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1203  0006A2  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1204                           
  1205                           ;FRAME.c: 734:             break;
  1206  0006A6  D040               	goto	l4751
  1207  0006A8                     l4745:
  1208                           
  1209                           ;FRAME.c: 736:             FRAME_AdressOfNeighbors(message,0x11);
  1210  0006A8  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1211  0006AC  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1212  0006B0  0E00               	movlw	0
  1213  0006B2  6E2D               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1214  0006B4  0E11               	movlw	17
  1215  0006B6  6E2C               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1216  0006B8  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1217                           
  1218                           ;FRAME.c: 737:             break;
  1219  0006BC  D035               	goto	l4751
  1220  0006BE                     l4749:
  1221  0006BE  503E               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1222  0006C0  6E38               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1223  0006C2  6A39               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1224                           
  1225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1226                           ; Switch size 1, requested type "simple"
  1227                           ; Number of cases is 1, Range of values is 0 to 0
  1228                           ; switch strategies available:
  1229                           ; Name         Instructions Cycles
  1230                           ; simple_byte            4     3 (average)
  1231                           ;	Chosen strategy is simple_byte
  1232  0006C4  5039               	movf	??_FRAME_HandleCanFrame+1,w,c
  1233  0006C6  0A00               	xorlw	0	; case 0
  1234  0006C8  A4D8               	btfss	status,2,c
  1235  0006CA  D02E               	goto	l4751
  1236                           
  1237                           ; Switch size 1, requested type "simple"
  1238                           ; Number of cases is 15, Range of values is 1 to 17
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte           46    24 (average)
  1242                           ;	Chosen strategy is simple_byte
  1243  0006CC  5038               	movf	??_FRAME_HandleCanFrame,w,c
  1244  0006CE  0A01               	xorlw	1	; case 1
  1245  0006D0  B4D8               	btfsc	status,2,c
  1246  0006D2  D785               	goto	l4719
  1247  0006D4  0A03               	xorlw	3	; case 2
  1248  0006D6  B4D8               	btfsc	status,2,c
  1249  0006D8  D789               	goto	l4721
  1250  0006DA  0A01               	xorlw	1	; case 3
  1251  0006DC  B4D8               	btfsc	status,2,c
  1252  0006DE  D78D               	goto	l4723
  1253  0006E0  0A07               	xorlw	7	; case 4
  1254  0006E2  B4D8               	btfsc	status,2,c
  1255  0006E4  D791               	goto	l4725
  1256  0006E6  0A01               	xorlw	1	; case 5
  1257  0006E8  B4D8               	btfsc	status,2,c
  1258  0006EA  D795               	goto	l4727
  1259  0006EC  0A03               	xorlw	3	; case 6
  1260  0006EE  B4D8               	btfsc	status,2,c
  1261  0006F0  D799               	goto	l4729
  1262  0006F2  0A01               	xorlw	1	; case 7
  1263  0006F4  B4D8               	btfsc	status,2,c
  1264  0006F6  D79D               	goto	l4731
  1265  0006F8  0A0E               	xorlw	14	; case 9
  1266  0006FA  B4D8               	btfsc	status,2,c
  1267  0006FC  D7A1               	goto	l4733
  1268  0006FE  0A03               	xorlw	3	; case 10
  1269  000700  B4D8               	btfsc	status,2,c
  1270  000702  D7A5               	goto	l4735
  1271  000704  0A01               	xorlw	1	; case 11
  1272  000706  B4D8               	btfsc	status,2,c
  1273  000708  D7A9               	goto	l4737
  1274  00070A  0A07               	xorlw	7	; case 12
  1275  00070C  B4D8               	btfsc	status,2,c
  1276  00070E  D7AD               	goto	l4739
  1277  000710  0A01               	xorlw	1	; case 13
  1278  000712  B4D8               	btfsc	status,2,c
  1279  000714  D7AA               	goto	l4739
  1280  000716  0A02               	xorlw	2	; case 15
  1281  000718  B4D8               	btfsc	status,2,c
  1282  00071A  D7B4               	goto	l4741
  1283  00071C  0A1F               	xorlw	31	; case 16
  1284  00071E  B4D8               	btfsc	status,2,c
  1285  000720  D7B8               	goto	l4743
  1286  000722  0A01               	xorlw	1	; case 17
  1287  000724  B4D8               	btfsc	status,2,c
  1288  000726  D7C0               	goto	l4745
  1289  000728                     l4751:
  1290                           
  1291                           ;FRAME.c: 746:     if(message->message_type == 0x02)
  1292  000728  EE20 F001          	lfsr	2,1
  1293  00072C  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1294  00072E  26D9               	addwf	fsr2l,f,c
  1295  000730  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1296  000732  22DA               	addwfc	fsr2h,f,c
  1297  000734  0E02               	movlw	2
  1298  000736  18DE               	xorwf	postinc2,w,c
  1299  000738  A4D8               	btfss	status,2,c
  1300  00073A  0012               	return	
  1301                           
  1302                           ;FRAME.c: 747:     {;FRAME.c: 749:         message->frame_type = 0x03;
  1303  00073C  EE20 F002          	lfsr	2,2
  1304  000740  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1305  000742  26D9               	addwf	fsr2l,f,c
  1306  000744  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1307  000746  22DA               	addwfc	fsr2h,f,c
  1308  000748  0E03               	movlw	3
  1309  00074A  6EDF               	movwf	indf2,c
  1310                           
  1311                           ;FRAME.c: 750:         message->message_type = 0x01;
  1312  00074C  EE20 F001          	lfsr	2,1
  1313  000750  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1314  000752  26D9               	addwf	fsr2l,f,c
  1315  000754  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1316  000756  22DA               	addwfc	fsr2h,f,c
  1317  000758  0E01               	movlw	1
  1318  00075A  6EDF               	movwf	indf2,c
  1319                           
  1320                           ;FRAME.c: 751:         message->id.Val = 0;
  1321  00075C  EE20 F004          	lfsr	2,4
  1322  000760  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1323  000762  26D9               	addwf	fsr2l,f,c
  1324  000764  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1325  000766  22DA               	addwfc	fsr2h,f,c
  1326  000768  6ADE               	clrf	postinc2,c
  1327  00076A  6ADE               	clrf	postinc2,c
  1328  00076C  6ADE               	clrf	postinc2,c
  1329  00076E  6ADD               	clrf	postdec2,c
  1330                           
  1331                           ;FRAME.c: 753:         message->id.v[2] = identyfikator*4;
  1332  000770  503E               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1333  000772  0D04               	mullw	4
  1334  000774  EE20 F006          	lfsr	2,6
  1335  000778  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1336  00077A  26D9               	addwf	fsr2l,f,c
  1337  00077C  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1338  00077E  22DA               	addwfc	fsr2h,f,c
  1339  000780  CFF3 FFDF          	movff	prodl,indf2
  1340                           
  1341                           ;FRAME.c: 754:         CAN_GenID(message,identyfikator);
  1342  000784  C036  F02A         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1343  000788  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1344  00078C  C03E  F02C         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1345  000790  EC18  F00A         	call	_CAN_GenID	;wreg free
  1346                           
  1347                           ;FRAME.c: 755:         CAN_SendFrame(message);
  1348  000794  C036  F02F         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1349  000798  C037  F030         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1350  00079C  ECD8  F003         	call	_CAN_SendFrame	;wreg free
  1351                           
  1352                           ;FRAME.c: 766:        while(RXB0CONbits.FILHIT3)
  1353  0007A0  D004               	goto	l704
  1354  0007A2                     l705:
  1355                           
  1356                           ;FRAME.c: 767:        {;FRAME.c: 768:            if(TXB0CONbits.TXERR == 1){
  1357  0007A2  010F               	movlb	15	; () banked
  1358  0007A4  B940               	btfsc	64,4,b	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;FRAME.c: 769:                LED_Error();
  1362  0007A6  ECBA  F00D         	call	_LED_Error	;wreg free
  1363  0007AA                     l704:
  1364                           
  1365                           ;FRAME.c: 766:        while(RXB0CONbits.FILHIT3)
  1366  0007AA  A660               	btfss	3936,3,c	;volatile
  1367  0007AC  0012               	return	
  1368  0007AE  D7F9               	goto	l705
  1369  0007B0                     __end_of_FRAME_HandleCanFrame:
  1370                           	opt callstack 0
  1371                           
  1372 ;; *************** function _LED_Error *****************
  1373 ;; Defined at:
  1374 ;;		line 37 in file "LED.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2  364[None  ] unsigned int 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    4
  1395 ;; This function calls:
  1396 ;;		_LED_Control
  1397 ;; This function is called by:
  1398 ;;		_FRAME_HandleCanFrame
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text3
  1403  001B74                     __ptext3:
  1404                           	opt callstack 0
  1405  001B74                     _LED_Error:
  1406                           	opt callstack 24
  1407                           
  1408                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1409                           
  1410                           ;incstack = 0
  1411  001B74  0E02               	movlw	2
  1412  001B76  6E2B               	movwf	LED_Control@diode+1,c
  1413  001B78  0EAA               	movlw	170
  1414  001B7A  6E2A               	movwf	LED_Control@diode,c
  1415  001B7C  0E00               	movlw	0
  1416  001B7E  EC4A  F005         	call	_LED_Control
  1417                           
  1418                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1419  001B82  0E00               	movlw	0
  1420  001B84  6E2B               	movwf	LED_Control@diode+1,c
  1421  001B86  0E00               	movlw	0
  1422  001B88  6E2A               	movwf	LED_Control@diode,c
  1423  001B8A  0E01               	movlw	1
  1424  001B8C  EC4A  F005         	call	_LED_Control
  1425  001B90  0012               	return		;funcret
  1426  001B92                     __end_of_LED_Error:
  1427                           	opt callstack 0
  1428                           
  1429 ;; *************** function _FRAME_SoftwareVersion *****************
  1430 ;; Defined at:
  1431 ;;		line 516 in file "FRAME.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  message         2    5[COMRAM] PTR struct .
  1434 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;Total ram usage:        3 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    3
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_FRAME_HandleCanFrame
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text4
  1461  001590                     __ptext4:
  1462                           	opt callstack 0
  1463  001590                     _FRAME_SoftwareVersion:
  1464                           	opt callstack 25
  1465                           
  1466                           ;FRAME.c: 516: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 517: {;FRAME.c: 
      +                          519:     if(message->message_type == 0x02)
  1467                           
  1468                           ;incstack = 0
  1469  001590  EE20 F001          	lfsr	2,1
  1470  001594  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1471  001596  26D9               	addwf	fsr2l,f,c
  1472  001598  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1473  00159A  22DA               	addwfc	fsr2h,f,c
  1474  00159C  0E02               	movlw	2
  1475  00159E  18DE               	xorwf	postinc2,w,c
  1476  0015A0  A4D8               	btfss	status,2,c
  1477  0015A2  0012               	return	
  1478                           
  1479                           ;FRAME.c: 520:     {;FRAME.c: 521:         message->data_length = 4;
  1480  0015A4  EE20 F010          	lfsr	2,16
  1481  0015A8  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1482  0015AA  26D9               	addwf	fsr2l,f,c
  1483  0015AC  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1484  0015AE  22DA               	addwfc	fsr2h,f,c
  1485  0015B0  0E04               	movlw	4
  1486  0015B2  6EDF               	movwf	indf2,c
  1487                           
  1488                           ;FRAME.c: 522:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1489  0015B4  EE20 F008          	lfsr	2,8
  1490  0015B8  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1491  0015BA  26D9               	addwf	fsr2l,f,c
  1492  0015BC  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1493  0015BE  22DA               	addwfc	fsr2h,f,c
  1494  0015C0  5005               	movf	5,w,c
  1495  0015C2  6EDF               	movwf	indf2,c
  1496                           
  1497                           ;FRAME.c: 523:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1498  0015C4  EE20 F009          	lfsr	2,9
  1499  0015C8  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1500  0015CA  26D9               	addwf	fsr2l,f,c
  1501  0015CC  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1502  0015CE  22DA               	addwfc	fsr2h,f,c
  1503  0015D0  C004 FFDF          	movff	4,indf2
  1504                           
  1505                           ;FRAME.c: 524:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1506  0015D4  EE20 F00A          	lfsr	2,10
  1507  0015D8  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1508  0015DA  26D9               	addwf	fsr2l,f,c
  1509  0015DC  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1510  0015DE  22DA               	addwfc	fsr2h,f,c
  1511  0015E0  500B               	movf	11,w,c
  1512  0015E2  6EDF               	movwf	indf2,c
  1513                           
  1514                           ;FRAME.c: 525:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1515  0015E4  EE20 F00B          	lfsr	2,11
  1516  0015E8  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1517  0015EA  26D9               	addwf	fsr2l,f,c
  1518  0015EC  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1519  0015EE  22DA               	addwfc	fsr2h,f,c
  1520  0015F0  C00A FFDF          	movff	10,indf2
  1521                           
  1522                           ;FRAME.c: 526:     }
  1523  0015F4  0012               	return		;funcret
  1524  0015F6                     __end_of_FRAME_SoftwareVersion:
  1525                           	opt callstack 0
  1526                           
  1527 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1528 ;; Defined at:
  1529 ;;		line 47 in file "FRAME.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  message         2    7[COMRAM] PTR struct .
  1532 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  tru             2   11[COMRAM] unsigned int 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;Total ram usage:        6 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    4
  1551 ;; This function calls:
  1552 ;;		_IsInNeighbors
  1553 ;;		_LOCK_Get
  1554 ;;		_LOCK_Set
  1555 ;;		_MOC_Aktualna_Temperatura
  1556 ;;		_MOC_Frame_Counter
  1557 ;;		_MOC_NOTWORK
  1558 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1559 ;; This function is called by:
  1560 ;;		_FRAME_HandleCanFrame
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text5
  1565  000D2E                     __ptext5:
  1566                           	opt callstack 0
  1567  000D2E                     _FRAME_SensorExcitationStatus:
  1568                           	opt callstack 24
  1569                           
  1570                           ;FRAME.c: 47: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 48: {;FRAM
      +                          E.c: 50:     static UINT statwect = 0b00000000;;FRAME.c: 51:     if(message->message_typ
      +                          e == 0x02)
  1571                           
  1572                           ;incstack = 0
  1573  000D2E  EE20 F001          	lfsr	2,1
  1574  000D32  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1575  000D34  26D9               	addwf	fsr2l,f,c
  1576  000D36  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1577  000D38  22DA               	addwfc	fsr2h,f,c
  1578  000D3A  0E02               	movlw	2
  1579  000D3C  18DE               	xorwf	postinc2,w,c
  1580  000D3E  A4D8               	btfss	status,2,c
  1581  000D40  D047               	goto	l4407
  1582                           
  1583                           ;FRAME.c: 52:     {;FRAME.c: 53:         message->data_length = 6;
  1584  000D42  EE20 F010          	lfsr	2,16
  1585  000D46  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1586  000D48  26D9               	addwf	fsr2l,f,c
  1587  000D4A  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1588  000D4C  22DA               	addwfc	fsr2h,f,c
  1589  000D4E  0E06               	movlw	6
  1590  000D50  6EDF               	movwf	indf2,c
  1591                           
  1592                           ;FRAME.c: 59:         message->data[0] = LOCK_Get();
  1593  000D52  EE20 F008          	lfsr	2,8
  1594  000D56  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1595  000D58  26D9               	addwf	fsr2l,f,c
  1596  000D5A  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1597  000D5C  22DA               	addwfc	fsr2h,f,c
  1598  000D5E  EC35  F00E         	call	_LOCK_Get	;wreg free
  1599  000D62  6EDF               	movwf	indf2,c
  1600                           
  1601                           ;FRAME.c: 60:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1602  000D64  EE20 F009          	lfsr	2,9
  1603  000D68  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1604  000D6A  26D9               	addwf	fsr2l,f,c
  1605  000D6C  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1606  000D6E  22DA               	addwfc	fsr2h,f,c
  1607  000D70  ECFD  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1608  000D74  C02B  F02A         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1609  000D78  6A2B               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1610  000D7A  502A               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1611  000D7C  6EDF               	movwf	indf2,c
  1612                           
  1613                           ;FRAME.c: 61:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1614  000D7E  EE20 F00A          	lfsr	2,10
  1615  000D82  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1616  000D84  26D9               	addwf	fsr2l,f,c
  1617  000D86  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1618  000D88  22DA               	addwfc	fsr2h,f,c
  1619  000D8A  ECFD  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1620  000D8E  502A               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1621  000D90  6EDF               	movwf	indf2,c
  1622                           
  1623                           ;FRAME.c: 62:         message->data[3] = MOC_Frame_Counter();
  1624  000D92  EE20 F00B          	lfsr	2,11
  1625  000D96  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1626  000D98  26D9               	addwf	fsr2l,f,c
  1627  000D9A  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1628  000D9C  22DA               	addwfc	fsr2h,f,c
  1629  000D9E  ECE9  F00D         	call	_MOC_Frame_Counter	;wreg free
  1630  000DA2  502A               	movf	?_MOC_Frame_Counter,w,c
  1631  000DA4  6EDF               	movwf	indf2,c
  1632                           
  1633                           ;FRAME.c: 63:         message->data[4] = MOC_Aktualna_Temperatura();
  1634  000DA6  EE20 F00C          	lfsr	2,12
  1635  000DAA  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1636  000DAC  26D9               	addwf	fsr2l,f,c
  1637  000DAE  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1638  000DB0  22DA               	addwfc	fsr2h,f,c
  1639  000DB2  EC02  F00E         	call	_MOC_Aktualna_Temperatura	;wreg free
  1640  000DB6  502A               	movf	?_MOC_Aktualna_Temperatura,w,c
  1641  000DB8  6EDF               	movwf	indf2,c
  1642                           
  1643                           ;FRAME.c: 64:         message->data[5] = MOC_NOTWORK();
  1644  000DBA  EE20 F00D          	lfsr	2,13
  1645  000DBE  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1646  000DC0  26D9               	addwf	fsr2l,f,c
  1647  000DC2  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1648  000DC4  22DA               	addwfc	fsr2h,f,c
  1649  000DC6  EC2A  F00E         	call	_MOC_NOTWORK	;wreg free
  1650  000DCA  502A               	movf	?_MOC_NOTWORK,w,c
  1651  000DCC  6EDF               	movwf	indf2,c
  1652                           
  1653                           ;FRAME.c: 74:     }
  1654  000DCE  0012               	return	
  1655  000DD0                     l4407:
  1656                           
  1657                           ;FRAME.c: 76:     {;FRAME.c: 78:         UINT tru = IsInNeighbors(message->id.w[0]);
  1658  000DD0  EE20 F004          	lfsr	2,4
  1659  000DD4  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1660  000DD6  26D9               	addwf	fsr2l,f,c
  1661  000DD8  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1662  000DDA  22DA               	addwfc	fsr2h,f,c
  1663  000DDC  CFDE F02A          	movff	postinc2,IsInNeighbors@message_adress
  1664  000DE0  CFDD F02B          	movff	postdec2,IsInNeighbors@message_adress+1
  1665  000DE4  EC04  F008         	call	_IsInNeighbors	;wreg free
  1666  000DE8  C02A  F030         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1667  000DEC  C02B  F031         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1668                           
  1669                           ;FRAME.c: 81:         if(message->data[0]==0)
  1670  000DF0  EE20 F008          	lfsr	2,8
  1671  000DF4  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1672  000DF6  26D9               	addwf	fsr2l,f,c
  1673  000DF8  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1674  000DFA  22DA               	addwfc	fsr2h,f,c
  1675  000DFC  50DF               	movf	indf2,w,c
  1676  000DFE  A4D8               	btfss	status,2,c
  1677  000E00  D00A               	goto	l4413
  1678                           
  1679                           ;FRAME.c: 82:         {;FRAME.c: 84:             statwect = statwect &( ~tru );
  1680  000E02  1C30               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1681  000E04  6E2E               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1682  000E06  1C31               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1683  000E08  6E2F               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1684  000E0A  5007               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1685  000E0C  142E               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1686  000E0E  6E07               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1687  000E10  5008               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1688  000E12  142F               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1689  000E14  D005               	goto	L1
  1690  000E16                     l4413:
  1691                           
  1692                           ;FRAME.c: 87:         {;FRAME.c: 88:             statwect = statwect| tru;
  1693  000E16  5030               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1694  000E18  1007               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1695  000E1A  6E07               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1696  000E1C  5031               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1697  000E1E  1008               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1698  000E20                     L1:
  1699  000E20  6E08               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1700                           
  1701                           ;FRAME.c: 91:         if(statwect>0)
  1702                           
  1703                           ;FRAME.c: 89:         }
  1704  000E22  5007               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1705  000E24  1008               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1706  000E26  B4D8               	btfsc	status,2,c
  1707  000E28  D004               	goto	l4417
  1708                           
  1709                           ;FRAME.c: 92:         {;FRAME.c: 93:         LOCK_Set(1);
  1710  000E2A  0E01               	movlw	1
  1711  000E2C  EC2E  F00E         	call	_LOCK_Set
  1712                           
  1713                           ;FRAME.c: 94:         }
  1714  000E30  0012               	return	
  1715  000E32                     l4417:
  1716                           
  1717                           ;FRAME.c: 96:         {;FRAME.c: 97:         LOCK_Set(0);
  1718  000E32  0E00               	movlw	0
  1719  000E34  EC2E  F00E         	call	_LOCK_Set
  1720  000E38  0012               	return		;funcret
  1721  000E3A                     __end_of_FRAME_SensorExcitationStatus:
  1722                           	opt callstack 0
  1723                           
  1724 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1725 ;; Defined at:
  1726 ;;		line 33 in file "MOC_Funct.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2    5[COMRAM] unsigned int 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;Total ram usage:        2 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    3
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_FRAME_SensorExcitationStatus
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text6
  1755  001BFA                     __ptext6:
  1756                           	opt callstack 0
  1757  001BFA                     _MOC_Wynikowa_wartosc_roznicowa:
  1758                           	opt callstack 24
  1759                           
  1760                           ;MOC_Funct.c: 35:     return 0x0220;
  1761                           
  1762                           ;incstack = 0
  1763  001BFA  0E02               	movlw	2
  1764  001BFC  6E2B               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1765  001BFE  0E20               	movlw	32
  1766  001C00  6E2A               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1767  001C02  0012               	return		;funcret
  1768  001C04                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1769                           	opt callstack 0
  1770                           
  1771 ;; *************** function _MOC_NOTWORK *****************
  1772 ;; Defined at:
  1773 ;;		line 47 in file "MOC_Funct.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  2    5[COMRAM] unsigned int 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1791 ;;Total ram usage:        2 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    3
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_FRAME_SensorExcitationStatus
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text7
  1802  001C54                     __ptext7:
  1803                           	opt callstack 0
  1804  001C54                     _MOC_NOTWORK:
  1805                           	opt callstack 24
  1806                           
  1807                           ;MOC_Funct.c: 49:     return 0xFF;
  1808                           
  1809                           ;incstack = 0
  1810  001C54  0E00               	movlw	0
  1811  001C56  6E2B               	movwf	?_MOC_NOTWORK+1,c
  1812  001C58  682A               	setf	?_MOC_NOTWORK,c
  1813  001C5A  0012               	return		;funcret
  1814  001C5C                     __end_of_MOC_NOTWORK:
  1815                           	opt callstack 0
  1816                           
  1817 ;; *************** function _MOC_Frame_Counter *****************
  1818 ;; Defined at:
  1819 ;;		line 38 in file "MOC_Funct.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  2    5[COMRAM] unsigned int 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;Total ram usage:        2 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    3
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_FRAME_SensorExcitationStatus
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text8
  1848  001BD2                     __ptext8:
  1849                           	opt callstack 0
  1850  001BD2                     _MOC_Frame_Counter:
  1851                           	opt callstack 24
  1852                           
  1853                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1854                           
  1855                           ;incstack = 0
  1856  001BD2  5041               	movf	MOC_Frame_Counter@zeta,w,c
  1857  001BD4  6E2A               	movwf	?_MOC_Frame_Counter,c
  1858  001BD6  5042               	movf	MOC_Frame_Counter@zeta+1,w,c
  1859  001BD8  6E2B               	movwf	?_MOC_Frame_Counter+1,c
  1860  001BDA  4A41               	infsnz	MOC_Frame_Counter@zeta,f,c
  1861  001BDC  2A42               	incf	MOC_Frame_Counter@zeta+1,f,c
  1862  001BDE  0012               	return		;funcret
  1863  001BE0                     __end_of_MOC_Frame_Counter:
  1864                           	opt callstack 0
  1865                           
  1866 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1867 ;; Defined at:
  1868 ;;		line 43 in file "MOC_Funct.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2    5[COMRAM] unsigned int 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_FRAME_SensorExcitationStatus
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text9
  1897  001C04                     __ptext9:
  1898                           	opt callstack 0
  1899  001C04                     _MOC_Aktualna_Temperatura:
  1900                           	opt callstack 24
  1901                           
  1902                           ;MOC_Funct.c: 45:     return 0x1B;
  1903                           
  1904                           ;incstack = 0
  1905  001C04  0E00               	movlw	0
  1906  001C06  6E2B               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1907  001C08  0E1B               	movlw	27
  1908  001C0A  6E2A               	movwf	?_MOC_Aktualna_Temperatura,c
  1909  001C0C  0012               	return		;funcret
  1910  001C0E                     __end_of_MOC_Aktualna_Temperatura:
  1911                           	opt callstack 0
  1912                           
  1913 ;; *************** function _LOCK_Set *****************
  1914 ;; Defined at:
  1915 ;;		line 52 in file "LED.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  k               1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  k               1    5[COMRAM] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;Total ram usage:        1 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    3
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_FRAME_SensorExcitationStatus
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text10
  1944  001C5C                     __ptext10:
  1945                           	opt callstack 0
  1946  001C5C                     _LOCK_Set:
  1947                           	opt callstack 24
  1948                           
  1949                           ;incstack = 0
  1950                           ;LOCK_Set@k stored from wreg
  1951  001C5C  6E2A               	movwf	LOCK_Set@k,c
  1952                           
  1953                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1954  001C5E  C02A  F012         	movff	LOCK_Set@k,_LOCK
  1955  001C62  0012               	return		;funcret
  1956  001C64                     __end_of_LOCK_Set:
  1957                           	opt callstack 0
  1958                           
  1959 ;; *************** function _LOCK_Get *****************
  1960 ;; Defined at:
  1961 ;;		line 57 in file "LED.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      unsigned char 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    3
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_FRAME_SensorExcitationStatus
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text11
  1990  001C6A                     __ptext11:
  1991                           	opt callstack 0
  1992  001C6A                     _LOCK_Get:
  1993                           	opt callstack 24
  1994                           
  1995                           ;LED.c: 59:     return LOCK;
  1996                           
  1997                           ;incstack = 0
  1998  001C6A  5012               	movf	_LOCK,w,c
  1999  001C6C  0012               	return		;funcret
  2000  001C6E                     __end_of_LOCK_Get:
  2001                           	opt callstack 0
  2002                           
  2003 ;; *************** function _IsInNeighbors *****************
  2004 ;; Defined at:
  2005 ;;		line 102 in file "FRAME.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  message_adre    2    5[COMRAM] unsigned int 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  i               2    0        unsigned short 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  2    5[COMRAM] unsigned int 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;Total ram usage:        2 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    3
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_FRAME_SensorExcitationStatus
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text12
  2034  001008                     __ptext12:
  2035                           	opt callstack 0
  2036  001008                     _IsInNeighbors:
  2037                           	opt callstack 24
  2038                           
  2039                           ;FRAME.c: 102: UINT IsInNeighbors(UINT message_adress);FRAME.c: 103: {;FRAME.c: 104:    
      +                           WORD i;;FRAME.c: 106:     if(NeightAdress1==message_adress)
  2040                           
  2041                           ;incstack = 0
  2042  001008  502A               	movf	IsInNeighbors@message_adress,w,c
  2043  00100A  1823               	xorwf	_NeightAdress1,w,c	;volatile
  2044  00100C  E109               	bnz	l4217
  2045  00100E  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2046  001010  1824               	xorwf	_NeightAdress1+1,w,c	;volatile
  2047  001012  A4D8               	btfss	status,2,c
  2048  001014  D005               	goto	l4217
  2049                           
  2050                           ;FRAME.c: 107:     {;FRAME.c: 108:         return 0b1;
  2051  001016  0E00               	movlw	0
  2052  001018  6E2B               	movwf	?_IsInNeighbors+1,c
  2053  00101A  0E01               	movlw	1
  2054  00101C  6E2A               	movwf	?_IsInNeighbors,c
  2055  00101E  0012               	return	
  2056  001020                     l4217:
  2057                           
  2058                           ;FRAME.c: 110:     if(NeightAdress2==message_adress)
  2059  001020  502A               	movf	IsInNeighbors@message_adress,w,c
  2060  001022  184A               	xorwf	_NeightAdress2,w,c	;volatile
  2061  001024  E109               	bnz	l4223
  2062  001026  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2063  001028  184B               	xorwf	_NeightAdress2+1,w,c	;volatile
  2064  00102A  A4D8               	btfss	status,2,c
  2065  00102C  D005               	goto	l4223
  2066                           
  2067                           ;FRAME.c: 111:     {;FRAME.c: 112:         return 0b10;
  2068  00102E  0E00               	movlw	0
  2069  001030  6E2B               	movwf	?_IsInNeighbors+1,c
  2070  001032  0E02               	movlw	2
  2071  001034  6E2A               	movwf	?_IsInNeighbors,c
  2072  001036  0012               	return	
  2073  001038                     l4223:
  2074                           
  2075                           ;FRAME.c: 114:     if(NeightAdress3==message_adress)
  2076  001038  502A               	movf	IsInNeighbors@message_adress,w,c
  2077  00103A  1821               	xorwf	_NeightAdress3,w,c	;volatile
  2078  00103C  E109               	bnz	l4229
  2079  00103E  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2080  001040  1822               	xorwf	_NeightAdress3+1,w,c	;volatile
  2081  001042  A4D8               	btfss	status,2,c
  2082  001044  D005               	goto	l4229
  2083                           
  2084                           ;FRAME.c: 115:     {;FRAME.c: 116:         return 0b100;
  2085  001046  0E00               	movlw	0
  2086  001048  6E2B               	movwf	?_IsInNeighbors+1,c
  2087  00104A  0E04               	movlw	4
  2088  00104C  6E2A               	movwf	?_IsInNeighbors,c
  2089  00104E  0012               	return	
  2090  001050                     l4229:
  2091                           
  2092                           ;FRAME.c: 118:     if(NeightAdress4==message_adress)
  2093  001050  502A               	movf	IsInNeighbors@message_adress,w,c
  2094  001052  181F               	xorwf	_NeightAdress4,w,c	;volatile
  2095  001054  E109               	bnz	l4235
  2096  001056  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2097  001058  1820               	xorwf	_NeightAdress4+1,w,c	;volatile
  2098  00105A  A4D8               	btfss	status,2,c
  2099  00105C  D005               	goto	l4235
  2100                           
  2101                           ;FRAME.c: 119:     {;FRAME.c: 120:         return 0b1000;
  2102  00105E  0E00               	movlw	0
  2103  001060  6E2B               	movwf	?_IsInNeighbors+1,c
  2104  001062  0E08               	movlw	8
  2105  001064  6E2A               	movwf	?_IsInNeighbors,c
  2106  001066  0012               	return	
  2107  001068                     l4235:
  2108                           
  2109                           ;FRAME.c: 122:     if(NeightAdress5==message_adress)
  2110  001068  502A               	movf	IsInNeighbors@message_adress,w,c
  2111  00106A  181D               	xorwf	_NeightAdress5,w,c	;volatile
  2112  00106C  E109               	bnz	l4241
  2113  00106E  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2114  001070  181E               	xorwf	_NeightAdress5+1,w,c	;volatile
  2115  001072  A4D8               	btfss	status,2,c
  2116  001074  D005               	goto	l4241
  2117                           
  2118                           ;FRAME.c: 123:     {;FRAME.c: 124:         return 0b10000;
  2119  001076  0E00               	movlw	0
  2120  001078  6E2B               	movwf	?_IsInNeighbors+1,c
  2121  00107A  0E10               	movlw	16
  2122  00107C  6E2A               	movwf	?_IsInNeighbors,c
  2123  00107E  0012               	return	
  2124  001080                     l4241:
  2125                           
  2126                           ;FRAME.c: 126:     if(NeightAdress6==message_adress)
  2127  001080  502A               	movf	IsInNeighbors@message_adress,w,c
  2128  001082  181B               	xorwf	_NeightAdress6,w,c	;volatile
  2129  001084  E109               	bnz	l4247
  2130  001086  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2131  001088  181C               	xorwf	_NeightAdress6+1,w,c	;volatile
  2132  00108A  A4D8               	btfss	status,2,c
  2133  00108C  D005               	goto	l4247
  2134                           
  2135                           ;FRAME.c: 127:     {;FRAME.c: 128:         return 0b100000;
  2136  00108E  0E00               	movlw	0
  2137  001090  6E2B               	movwf	?_IsInNeighbors+1,c
  2138  001092  0E20               	movlw	32
  2139  001094  6E2A               	movwf	?_IsInNeighbors,c
  2140  001096  0012               	return	
  2141  001098                     l4247:
  2142                           
  2143                           ;FRAME.c: 130:     if(NeightAdress7==message_adress)
  2144  001098  502A               	movf	IsInNeighbors@message_adress,w,c
  2145  00109A  1819               	xorwf	_NeightAdress7,w,c	;volatile
  2146  00109C  E109               	bnz	l4253
  2147  00109E  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2148  0010A0  181A               	xorwf	_NeightAdress7+1,w,c	;volatile
  2149  0010A2  A4D8               	btfss	status,2,c
  2150  0010A4  D005               	goto	l4253
  2151                           
  2152                           ;FRAME.c: 131:     {;FRAME.c: 132:         return 0b1000000;
  2153  0010A6  0E00               	movlw	0
  2154  0010A8  6E2B               	movwf	?_IsInNeighbors+1,c
  2155  0010AA  0E40               	movlw	64
  2156  0010AC  6E2A               	movwf	?_IsInNeighbors,c
  2157  0010AE  0012               	return	
  2158  0010B0                     l4253:
  2159                           
  2160                           ;FRAME.c: 134:     if(NeightAdress8==message_adress)
  2161  0010B0  502A               	movf	IsInNeighbors@message_adress,w,c
  2162  0010B2  1817               	xorwf	_NeightAdress8,w,c	;volatile
  2163  0010B4  E109               	bnz	l4259
  2164  0010B6  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2165  0010B8  1818               	xorwf	_NeightAdress8+1,w,c	;volatile
  2166  0010BA  A4D8               	btfss	status,2,c
  2167  0010BC  D005               	goto	l4259
  2168                           
  2169                           ;FRAME.c: 135:     {;FRAME.c: 136:         return 0b10000000;
  2170  0010BE  0E00               	movlw	0
  2171  0010C0  6E2B               	movwf	?_IsInNeighbors+1,c
  2172  0010C2  0E80               	movlw	128
  2173  0010C4  6E2A               	movwf	?_IsInNeighbors,c
  2174  0010C6  0012               	return	
  2175  0010C8                     l4259:
  2176                           
  2177                           ;FRAME.c: 152:     return 0;
  2178  0010C8  0E00               	movlw	0
  2179  0010CA  6E2B               	movwf	?_IsInNeighbors+1,c
  2180  0010CC  0E00               	movlw	0
  2181  0010CE  6E2A               	movwf	?_IsInNeighbors,c
  2182  0010D0  0012               	return		;funcret
  2183  0010D2                     __end_of_IsInNeighbors:
  2184                           	opt callstack 0
  2185                           
  2186 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2187 ;; Defined at:
  2188 ;;		line 565 in file "FRAME.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  message         2    5[COMRAM] PTR struct .
  2191 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;Total ram usage:        6 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    3
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_FRAME_HandleCanFrame
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text13
  2218  001182                     __ptext13:
  2219                           	opt callstack 0
  2220  001182                     _FRAME_PrzypisanieDokarty:
  2221                           	opt callstack 25
  2222                           
  2223                           ;FRAME.c: 565: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 566: {;FRAME.
      +                          c: 567:     if(message->message_type == 0x02)
  2224                           
  2225                           ;incstack = 0
  2226  001182  EE20 F001          	lfsr	2,1
  2227  001186  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2228  001188  26D9               	addwf	fsr2l,f,c
  2229  00118A  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2230  00118C  22DA               	addwfc	fsr2h,f,c
  2231  00118E  0E02               	movlw	2
  2232  001190  18DE               	xorwf	postinc2,w,c
  2233  001192  A4D8               	btfss	status,2,c
  2234  001194  D021               	goto	l4501
  2235                           
  2236                           ;FRAME.c: 568:     {;FRAME.c: 569:         message->data_length = 3;
  2237  001196  EE20 F010          	lfsr	2,16
  2238  00119A  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2239  00119C  26D9               	addwf	fsr2l,f,c
  2240  00119E  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2241  0011A0  22DA               	addwfc	fsr2h,f,c
  2242  0011A2  0E03               	movlw	3
  2243  0011A4  6EDF               	movwf	indf2,c
  2244                           
  2245                           ;FRAME.c: 570:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2246  0011A6  EE20 F008          	lfsr	2,8
  2247  0011AA  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2248  0011AC  26D9               	addwf	fsr2l,f,c
  2249  0011AE  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2250  0011B0  22DA               	addwfc	fsr2h,f,c
  2251  0011B2  0E00               	movlw	0
  2252  0011B4  6EDF               	movwf	indf2,c
  2253                           
  2254                           ;FRAME.c: 571:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2255  0011B6  EE20 F009          	lfsr	2,9
  2256  0011BA  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2257  0011BC  26D9               	addwf	fsr2l,f,c
  2258  0011BE  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2259  0011C0  22DA               	addwfc	fsr2h,f,c
  2260  0011C2  C040 FFDF          	movff	64,indf2
  2261                           
  2262                           ;FRAME.c: 572:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2263  0011C6  EE20 F00A          	lfsr	2,10
  2264  0011CA  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2265  0011CC  26D9               	addwf	fsr2l,f,c
  2266  0011CE  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2267  0011D0  22DA               	addwfc	fsr2h,f,c
  2268  0011D2  C042 FFDF          	movff	66,indf2
  2269                           
  2270                           ;FRAME.c: 574:     }
  2271  0011D6  0012               	return	
  2272  0011D8                     l4501:
  2273                           
  2274                           ;FRAME.c: 576:     {;FRAME.c: 577:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2275  0011D8  EE20 F008          	lfsr	2,8
  2276  0011DC  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2277  0011DE  26D9               	addwf	fsr2l,f,c
  2278  0011E0  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2279  0011E2  22DA               	addwfc	fsr2h,f,c
  2280  0011E4  50DF               	movf	indf2,w,c
  2281  0011E6  6E2C               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2282  0011E8  502C               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2283  0011EA  6E2E               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2284  0011EC  6A2D               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2285  0011EE  EE20 F009          	lfsr	2,9
  2286  0011F2  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2287  0011F4  26D9               	addwf	fsr2l,f,c
  2288  0011F6  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2289  0011F8  22DA               	addwfc	fsr2h,f,c
  2290  0011FA  50DF               	movf	indf2,w,c
  2291  0011FC  6E2F               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2292  0011FE  502F               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2293  001200  102D               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2294  001202  6E40               	movwf	64,c
  2295  001204  502E               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2296  001206  6E41               	movwf	65,c
  2297                           
  2298                           ;FRAME.c: 578:          Dane->Nr_WeWy = (message->data[2]);
  2299  001208  EE20 F00A          	lfsr	2,10
  2300  00120C  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2301  00120E  26D9               	addwf	fsr2l,f,c
  2302  001210  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2303  001212  22DA               	addwfc	fsr2h,f,c
  2304  001214  50DF               	movf	indf2,w,c
  2305  001216  6E2C               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2306  001218  502C               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2307  00121A  6E42               	movwf	66,c
  2308  00121C  6A43               	clrf	67,c
  2309  00121E  0012               	return		;funcret
  2310  001220                     __end_of_FRAME_PrzypisanieDokarty:
  2311                           	opt callstack 0
  2312                           
  2313 ;; *************** function _FRAME_Plot *****************
  2314 ;; Defined at:
  2315 ;;		line 470 in file "FRAME.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  message         2   12[COMRAM] PTR struct .
  2318 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2333 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;Total ram usage:        3 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    4
  2337 ;; This function calls:
  2338 ;;		___lwdiv
  2339 ;; This function is called by:
  2340 ;;		_FRAME_HandleCanFrame
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text14
  2345  001706                     __ptext14:
  2346                           	opt callstack 0
  2347  001706                     _FRAME_Plot:
  2348                           	opt callstack 24
  2349                           
  2350                           ;FRAME.c: 470: static void FRAME_Plot(mID *message);FRAME.c: 471: {;FRAME.c: 473:     if
      +                          (message->message_type == 0x02)
  2351                           
  2352                           ;incstack = 0
  2353  001706  EE20 F001          	lfsr	2,1
  2354  00170A  5031               	movf	FRAME_Plot@message,w,c
  2355  00170C  26D9               	addwf	fsr2l,f,c
  2356  00170E  5032               	movf	FRAME_Plot@message+1,w,c
  2357  001710  22DA               	addwfc	fsr2h,f,c
  2358  001712  0E02               	movlw	2
  2359  001714  18DE               	xorwf	postinc2,w,c
  2360  001716  A4D8               	btfss	status,2,c
  2361  001718  D013               	goto	l4491
  2362                           
  2363                           ;FRAME.c: 474:     {;FRAME.c: 475:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2364  00171A  EE20 F008          	lfsr	2,8
  2365  00171E  5031               	movf	FRAME_Plot@message,w,c
  2366  001720  26D9               	addwf	fsr2l,f,c
  2367  001722  5032               	movf	FRAME_Plot@message+1,w,c
  2368  001724  22DA               	addwfc	fsr2h,f,c
  2369  001726  C00C F02A          	movff	12,___lwdiv@dividend
  2370  00172A  C00D F02B          	movff	13,___lwdiv@dividend+1
  2371  00172E  0E00               	movlw	0
  2372  001730  6E2D               	movwf	___lwdiv@divisor+1,c
  2373  001732  0E0A               	movlw	10
  2374  001734  6E2C               	movwf	___lwdiv@divisor,c
  2375  001736  ECAF  F00B         	call	___lwdiv	;wreg free
  2376  00173A  502A               	movf	?___lwdiv,w,c
  2377  00173C  6EDF               	movwf	indf2,c
  2378                           
  2379                           ;FRAME.c: 476:     }
  2380  00173E  0012               	return	
  2381  001740                     l4491:
  2382                           
  2383                           ;FRAME.c: 478:     {;FRAME.c: 479:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2384  001740  EE20 F008          	lfsr	2,8
  2385  001744  5031               	movf	FRAME_Plot@message,w,c
  2386  001746  26D9               	addwf	fsr2l,f,c
  2387  001748  5032               	movf	FRAME_Plot@message+1,w,c
  2388  00174A  22DA               	addwfc	fsr2h,f,c
  2389  00174C  50DF               	movf	indf2,w,c
  2390  00174E  6E33               	movwf	??_FRAME_Plot& (0+255),c
  2391  001750  5033               	movf	??_FRAME_Plot,w,c
  2392  001752  0D0A               	mullw	10
  2393  001754  CFF3 F00C          	movff	prodl,12
  2394  001758  CFF4 F00D          	movff	prodh,13
  2395  00175C  0012               	return		;funcret
  2396  00175E                     __end_of_FRAME_Plot:
  2397                           	opt callstack 0
  2398                           
  2399 ;; *************** function _FRAME_MapPosition *****************
  2400 ;; Defined at:
  2401 ;;		line 491 in file "FRAME.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  message         2    5[COMRAM] PTR struct .
  2404 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		None
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;Total ram usage:        2 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    3
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_FRAME_HandleCanFrame
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text15
  2431  001C6E                     __ptext15:
  2432                           	opt callstack 0
  2433  001C6E                     _FRAME_MapPosition:
  2434                           	opt callstack 25
  2435                           
  2436                           ;incstack = 0
  2437  001C6E  0012               	return		;funcret
  2438  001C70                     __end_of_FRAME_MapPosition:
  2439                           	opt callstack 0
  2440                           
  2441 ;; *************** function _FRAME_ExcitationValue *****************
  2442 ;; Defined at:
  2443 ;;		line 186 in file "FRAME.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  message         2    5[COMRAM] PTR struct .
  2446 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2461 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;Total ram usage:        3 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    3
  2465 ;; This function calls:
  2466 ;;		Nothing
  2467 ;; This function is called by:
  2468 ;;		_FRAME_HandleCanFrame
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text16
  2473  001912                     __ptext16:
  2474                           	opt callstack 0
  2475  001912                     _FRAME_ExcitationValue:
  2476                           	opt callstack 25
  2477                           
  2478                           ;FRAME.c: 186: static void FRAME_ExcitationValue(mID *message);FRAME.c: 187: {;FRAME.c: 
      +                          188:     if(message->message_type == 0x02)
  2479                           
  2480                           ;incstack = 0
  2481  001912  EE20 F001          	lfsr	2,1
  2482  001916  502A               	movf	FRAME_ExcitationValue@message,w,c
  2483  001918  26D9               	addwf	fsr2l,f,c
  2484  00191A  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2485  00191C  22DA               	addwfc	fsr2h,f,c
  2486  00191E  0E02               	movlw	2
  2487  001920  18DE               	xorwf	postinc2,w,c
  2488  001922  A4D8               	btfss	status,2,c
  2489  001924  0012               	return	
  2490                           
  2491                           ;FRAME.c: 189:     {;FRAME.c: 190:         message->data_length = 1;
  2492  001926  EE20 F010          	lfsr	2,16
  2493  00192A  502A               	movf	FRAME_ExcitationValue@message,w,c
  2494  00192C  26D9               	addwf	fsr2l,f,c
  2495  00192E  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2496  001930  22DA               	addwfc	fsr2h,f,c
  2497  001932  0E01               	movlw	1
  2498  001934  6EDF               	movwf	indf2,c
  2499                           
  2500                           ;FRAME.c: 195:         message->data[0] = 0xFF;
  2501  001936  EE20 F008          	lfsr	2,8
  2502  00193A  502A               	movf	FRAME_ExcitationValue@message,w,c
  2503  00193C  26D9               	addwf	fsr2l,f,c
  2504  00193E  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2505  001940  22DA               	addwfc	fsr2h,f,c
  2506  001942  0EFF               	movlw	255
  2507  001944  6EDF               	movwf	indf2,c
  2508                           
  2509                           ;FRAME.c: 196:     }
  2510  001946  0012               	return		;funcret
  2511  001948                     __end_of_FRAME_ExcitationValue:
  2512                           	opt callstack 0
  2513                           
  2514 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2515 ;; Defined at:
  2516 ;;		line 210 in file "FRAME.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  message         2    5[COMRAM] PTR struct .
  2519 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  i               2    8[COMRAM] unsigned short 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2534 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2535 ;;Total ram usage:        5 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    3
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_FRAME_HandleCanFrame
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text17
  2546  0017B0                     __ptext17:
  2547                           	opt callstack 0
  2548  0017B0                     _FRAME_ExcitationMultiplier:
  2549                           	opt callstack 25
  2550                           
  2551                           ;FRAME.c: 210: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 211: {;FRAM
      +                          E.c: 212:     WORD i;;FRAME.c: 214:     if(message->message_type == 0x02)
  2552                           
  2553                           ;incstack = 0
  2554  0017B0  EE20 F001          	lfsr	2,1
  2555  0017B4  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2556  0017B6  26D9               	addwf	fsr2l,f,c
  2557  0017B8  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2558  0017BA  22DA               	addwfc	fsr2h,f,c
  2559  0017BC  0E02               	movlw	2
  2560  0017BE  18DE               	xorwf	postinc2,w,c
  2561  0017C0  A4D8               	btfss	status,2,c
  2562  0017C2  0012               	return	
  2563                           
  2564                           ;FRAME.c: 215:     {;FRAME.c: 216:         message->data_length = 1;
  2565  0017C4  EE20 F010          	lfsr	2,16
  2566  0017C8  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2567  0017CA  26D9               	addwf	fsr2l,f,c
  2568  0017CC  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2569  0017CE  22DA               	addwfc	fsr2h,f,c
  2570  0017D0  0E01               	movlw	1
  2571  0017D2  6EDF               	movwf	indf2,c
  2572                           
  2573                           ;FRAME.c: 217:         for(i=0; i<3; i++)
  2574  0017D4  0E00               	movlw	0
  2575  0017D6  6E2E               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2576  0017D8  0E00               	movlw	0
  2577  0017DA  6E2D               	movwf	FRAME_ExcitationMultiplier@i,c
  2578  0017DC                     l4445:
  2579                           
  2580                           ;FRAME.c: 218:         {;FRAME.c: 221:         }
  2581  0017DC  4A2D               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2582  0017DE  2A2E               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2583  0017E0  502E               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2584  0017E2  E104               	bnz	u2650
  2585  0017E4  0E03               	movlw	3
  2586  0017E6  5C2D               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2587  0017E8  A0D8               	btfss	status,0,c
  2588  0017EA  D7F8               	goto	l4445
  2589  0017EC                     u2650:
  2590                           
  2591                           ;FRAME.c: 222:         message->data[0] = 0xFF;
  2592  0017EC  EE20 F008          	lfsr	2,8
  2593  0017F0  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2594  0017F2  26D9               	addwf	fsr2l,f,c
  2595  0017F4  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2596  0017F6  22DA               	addwfc	fsr2h,f,c
  2597  0017F8  0EFF               	movlw	255
  2598  0017FA  6EDF               	movwf	indf2,c
  2599                           
  2600                           ;FRAME.c: 223:     }
  2601  0017FC  0012               	return		;funcret
  2602  0017FE                     __end_of_FRAME_ExcitationMultiplier:
  2603                           	opt callstack 0
  2604                           
  2605 ;; *************** function _FRAME_DeviceReset *****************
  2606 ;; Defined at:
  2607 ;;		line 344 in file "FRAME.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  message         2   14[COMRAM] PTR struct .
  2610 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2626 ;;Total ram usage:        3 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    6
  2629 ;; This function calls:
  2630 ;;		_FRAME_DataUpdateAndChangeOption
  2631 ;;		_WriteDataToEEPROM
  2632 ;; This function is called by:
  2633 ;;		_FRAME_HandleCanFrame
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text18
  2638  000BE6                     __ptext18:
  2639                           	opt callstack 0
  2640  000BE6                     _FRAME_DeviceReset:
  2641                           	opt callstack 22
  2642                           
  2643                           ;FRAME.c: 344: static void FRAME_DeviceReset(mID *message);FRAME.c: 345: {;FRAME.c: 346:
      +                               if(message->message_type == 0x02)
  2644                           
  2645                           ;incstack = 0
  2646  000BE6  EE20 F001          	lfsr	2,1
  2647  000BEA  5033               	movf	FRAME_DeviceReset@message,w,c
  2648  000BEC  26D9               	addwf	fsr2l,f,c
  2649  000BEE  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2650  000BF0  22DA               	addwfc	fsr2h,f,c
  2651  000BF2  0E02               	movlw	2
  2652  000BF4  18DE               	xorwf	postinc2,w,c
  2653  000BF6  A4D8               	btfss	status,2,c
  2654  000BF8  D057               	goto	l4467
  2655                           
  2656                           ;FRAME.c: 347:     {;FRAME.c: 348:         message->data_length = 1;
  2657  000BFA  EE20 F010          	lfsr	2,16
  2658  000BFE  5033               	movf	FRAME_DeviceReset@message,w,c
  2659  000C00  26D9               	addwf	fsr2l,f,c
  2660  000C02  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2661  000C04  22DA               	addwfc	fsr2h,f,c
  2662  000C06  0E01               	movlw	1
  2663  000C08  6EDF               	movwf	indf2,c
  2664                           
  2665                           ;FRAME.c: 350:         message->data[0] = (RCON>>6) & 0x01;
  2666  000C0A  EE20 F008          	lfsr	2,8
  2667  000C0E  5033               	movf	FRAME_DeviceReset@message,w,c
  2668  000C10  26D9               	addwf	fsr2l,f,c
  2669  000C12  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2670  000C14  22DA               	addwfc	fsr2h,f,c
  2671  000C16  44D0               	rlncf	4048,w,c	;volatile
  2672  000C18  46E8               	rlncf	wreg,f,c
  2673  000C1A  0B03               	andlw	3
  2674  000C1C  0B01               	andlw	1
  2675  000C1E  6EDF               	movwf	indf2,c
  2676                           
  2677                           ;FRAME.c: 351:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2678  000C20  EE20 F009          	lfsr	2,9
  2679  000C24  5033               	movf	FRAME_DeviceReset@message,w,c
  2680  000C26  26D9               	addwf	fsr2l,f,c
  2681  000C28  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2682  000C2A  22DA               	addwfc	fsr2h,f,c
  2683  000C2C  0100               	movlb	0	; () banked
  2684  000C2E  A9C6               	btfss	_Flagi& (0+255),4,b
  2685  000C30  D002               	goto	u2690
  2686  000C32  0E01               	movlw	1
  2687  000C34  D001               	goto	u2696
  2688  000C36                     u2690:
  2689  000C36  0E00               	movlw	0
  2690  000C38                     u2696:
  2691  000C38  6EDF               	movwf	indf2,c
  2692                           
  2693                           ;FRAME.c: 352:         message->data[2] = Flagi.pomiarTla;
  2694  000C3A  EE20 F00A          	lfsr	2,10
  2695  000C3E  5033               	movf	FRAME_DeviceReset@message,w,c
  2696  000C40  26D9               	addwf	fsr2l,f,c
  2697  000C42  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2698  000C44  22DA               	addwfc	fsr2h,f,c
  2699  000C46  A1C6               	btfss	_Flagi& (0+255),0,b
  2700  000C48  D002               	goto	u2700
  2701  000C4A  0E01               	movlw	1
  2702  000C4C  D001               	goto	u2706
  2703  000C4E                     u2700:
  2704  000C4E  0E00               	movlw	0
  2705  000C50                     u2706:
  2706  000C50  6EDF               	movwf	indf2,c
  2707                           
  2708                           ;FRAME.c: 353:         message->data[3] = 0;
  2709  000C52  EE20 F00B          	lfsr	2,11
  2710  000C56  5033               	movf	FRAME_DeviceReset@message,w,c
  2711  000C58  26D9               	addwf	fsr2l,f,c
  2712  000C5A  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2713  000C5C  22DA               	addwfc	fsr2h,f,c
  2714  000C5E  0E00               	movlw	0
  2715  000C60  6EDF               	movwf	indf2,c
  2716                           
  2717                           ;FRAME.c: 354:         message->data[4] = Dane->rokU16;
  2718  000C62  EE20 F00C          	lfsr	2,12
  2719  000C66  5033               	movf	FRAME_DeviceReset@message,w,c
  2720  000C68  26D9               	addwf	fsr2l,f,c
  2721  000C6A  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2722  000C6C  22DA               	addwfc	fsr2h,f,c
  2723  000C6E  C036 FFDF          	movff	54,indf2
  2724                           
  2725                           ;FRAME.c: 355:         message->data[5] = Dane->miesiacU16;
  2726  000C72  EE20 F00D          	lfsr	2,13
  2727  000C76  5033               	movf	FRAME_DeviceReset@message,w,c
  2728  000C78  26D9               	addwf	fsr2l,f,c
  2729  000C7A  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2730  000C7C  22DA               	addwfc	fsr2h,f,c
  2731  000C7E  C038 FFDF          	movff	56,indf2
  2732                           
  2733                           ;FRAME.c: 356:         message->data[6] = Dane->dzienU16;
  2734  000C82  EE20 F00E          	lfsr	2,14
  2735  000C86  5033               	movf	FRAME_DeviceReset@message,w,c
  2736  000C88  26D9               	addwf	fsr2l,f,c
  2737  000C8A  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2738  000C8C  22DA               	addwfc	fsr2h,f,c
  2739  000C8E  C03A FFDF          	movff	58,indf2
  2740                           
  2741                           ;FRAME.c: 357:         message->data[7] = Dane->godzinaU16;
  2742  000C92  EE20 F00F          	lfsr	2,15
  2743  000C96  5033               	movf	FRAME_DeviceReset@message,w,c
  2744  000C98  26D9               	addwf	fsr2l,f,c
  2745  000C9A  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2746  000C9C  22DA               	addwfc	fsr2h,f,c
  2747  000C9E  C03C FFDF          	movff	60,indf2
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;FRAME.c: 358:         RCON &= ~(1<<6);
  2751  000CA2  9CD0               	bcf	4048,6,c	;volatile
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;FRAME.c: 359:         Flagi.wykonanoZapisDoFlash = 0;
  2755  000CA4  99C6               	bcf	_Flagi& (0+255),4,b
  2756                           
  2757                           ;FRAME.c: 373:     }
  2758  000CA6  0012               	return	
  2759  000CA8                     l4467:
  2760                           
  2761                           ;FRAME.c: 375:     {;FRAME.c: 376:         message->data_length = 1;
  2762  000CA8  EE20 F010          	lfsr	2,16
  2763  000CAC  5033               	movf	FRAME_DeviceReset@message,w,c
  2764  000CAE  26D9               	addwf	fsr2l,f,c
  2765  000CB0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2766  000CB2  22DA               	addwfc	fsr2h,f,c
  2767  000CB4  0E01               	movlw	1
  2768  000CB6  6EDF               	movwf	indf2,c
  2769                           
  2770                           ;FRAME.c: 378:         if(message->data[2])
  2771  000CB8  EE20 F00A          	lfsr	2,10
  2772  000CBC  5033               	movf	FRAME_DeviceReset@message,w,c
  2773  000CBE  26D9               	addwf	fsr2l,f,c
  2774  000CC0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2775  000CC2  22DA               	addwfc	fsr2h,f,c
  2776  000CC4  50DF               	movf	indf2,w,c
  2777  000CC6  B4D8               	btfsc	status,2,c
  2778  000CC8  D00F               	goto	l4477
  2779                           
  2780                           ;FRAME.c: 379:         {;FRAME.c: 380:             Flagi.pomiarTla = 1;
  2781  000CCA  0100               	movlb	0	; () banked
  2782  000CCC  81C6               	bsf	_Flagi& (0+255),0,b
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;FRAME.c: 381:             if(message->data[1])
  2786  000CCE  EE20 F009          	lfsr	2,9
  2787  000CD2  5033               	movf	FRAME_DeviceReset@message,w,c
  2788  000CD4  26D9               	addwf	fsr2l,f,c
  2789  000CD6  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2790  000CD8  22DA               	addwfc	fsr2h,f,c
  2791  000CDA  50DF               	movf	indf2,w,c
  2792  000CDC  B4D8               	btfsc	status,2,c
  2793  000CDE  D01E               	goto	l4485
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;FRAME.c: 382:             {;FRAME.c: 383:                 Flagi.zapisDoFlash = 1;
  2797  000CE0  87C6               	bsf	_Flagi& (0+255),3,b
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;FRAME.c: 384:                 WriteDataToEEPROM();
  2801  000CE2  EC93  F007         	call	_WriteDataToEEPROM	;wreg free
  2802  000CE6  D01A               	goto	l4485
  2803  000CE8                     l4477:
  2804                           
  2805                           ;FRAME.c: 388:         {;FRAME.c: 389:             if(message->data[1])
  2806  000CE8  EE20 F009          	lfsr	2,9
  2807  000CEC  5033               	movf	FRAME_DeviceReset@message,w,c
  2808  000CEE  26D9               	addwf	fsr2l,f,c
  2809  000CF0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2810  000CF2  22DA               	addwfc	fsr2h,f,c
  2811  000CF4  50DF               	movf	indf2,w,c
  2812  000CF6  B4D8               	btfsc	status,2,c
  2813  000CF8  D008               	goto	l4481
  2814                           
  2815                           ;FRAME.c: 390:             {;FRAME.c: 391:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2816  000CFA  C033  F02A         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2817  000CFE  C034  F02B         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2818  000D02  EC56  F00B         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2819                           
  2820                           ;FRAME.c: 392:                 WriteDataToEEPROM();
  2821  000D06  EC93  F007         	call	_WriteDataToEEPROM	;wreg free
  2822  000D0A                     l4481:
  2823                           
  2824                           ;FRAME.c: 395:             if(message->data[0])
  2825  000D0A  EE20 F008          	lfsr	2,8
  2826  000D0E  5033               	movf	FRAME_DeviceReset@message,w,c
  2827  000D10  26D9               	addwf	fsr2l,f,c
  2828  000D12  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2829  000D14  22DA               	addwfc	fsr2h,f,c
  2830  000D16  50DF               	movf	indf2,w,c
  2831  000D18  A4D8               	btfss	status,2,c
  2832  000D1A  00FF               	reset		;# 
  2833  000D1C                     l4485:
  2834                           
  2835                           ;FRAME.c: 400:         message->data[0] = 0xFF;
  2836  000D1C  EE20 F008          	lfsr	2,8
  2837  000D20  5033               	movf	FRAME_DeviceReset@message,w,c
  2838  000D22  26D9               	addwf	fsr2l,f,c
  2839  000D24  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2840  000D26  22DA               	addwfc	fsr2h,f,c
  2841  000D28  0EFF               	movlw	255
  2842  000D2A  6EDF               	movwf	indf2,c
  2843  000D2C  0012               	return		;funcret
  2844  000D2E                     __end_of_FRAME_DeviceReset:
  2845                           	opt callstack 0
  2846                           
  2847 ;; *************** function _WriteDataToEEPROM *****************
  2848 ;; Defined at:
  2849 ;;		line 450 in file "FRAME.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    5
  2870 ;; This function calls:
  2871 ;;		_NVMWrite
  2872 ;; This function is called by:
  2873 ;;		_FRAME_DeviceReset
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text19
  2878  000F26                     __ptext19:
  2879                           	opt callstack 0
  2880  000F26                     _WriteDataToEEPROM:
  2881                           	opt callstack 22
  2882                           
  2883                           ;FRAME.c: 453:     NVMWrite(&NeightAdress1,10,8);
  2884                           
  2885                           ;incstack = 0
  2886  000F26  0E23               	movlw	low _NeightAdress1
  2887  000F28  6E2D               	movwf	NVMWrite@source,c
  2888  000F2A  0E00               	movlw	high _NeightAdress1
  2889  000F2C  6E2E               	movwf	NVMWrite@source+1,c
  2890  000F2E  0E00               	movlw	0
  2891  000F30  6E30               	movwf	NVMWrite@addr+1,c
  2892  000F32  0E0A               	movlw	10
  2893  000F34  6E2F               	movwf	NVMWrite@addr,c
  2894  000F36  0E00               	movlw	0
  2895  000F38  6E32               	movwf	NVMWrite@count+1,c
  2896  000F3A  0E08               	movlw	8
  2897  000F3C  6E31               	movwf	NVMWrite@count,c
  2898  000F3E  ECA4  F00C         	call	_NVMWrite	;wreg free
  2899                           
  2900                           ;FRAME.c: 454:     NVMWrite(&NeightAdress2,20,8);
  2901  000F42  0E4A               	movlw	low _NeightAdress2
  2902  000F44  6E2D               	movwf	NVMWrite@source,c
  2903  000F46  0E00               	movlw	high _NeightAdress2
  2904  000F48  6E2E               	movwf	NVMWrite@source+1,c
  2905  000F4A  0E00               	movlw	0
  2906  000F4C  6E30               	movwf	NVMWrite@addr+1,c
  2907  000F4E  0E14               	movlw	20
  2908  000F50  6E2F               	movwf	NVMWrite@addr,c
  2909  000F52  0E00               	movlw	0
  2910  000F54  6E32               	movwf	NVMWrite@count+1,c
  2911  000F56  0E08               	movlw	8
  2912  000F58  6E31               	movwf	NVMWrite@count,c
  2913  000F5A  ECA4  F00C         	call	_NVMWrite	;wreg free
  2914                           
  2915                           ;FRAME.c: 455:     NVMWrite(&NeightAdress3,30,8);
  2916  000F5E  0E21               	movlw	low _NeightAdress3
  2917  000F60  6E2D               	movwf	NVMWrite@source,c
  2918  000F62  0E00               	movlw	high _NeightAdress3
  2919  000F64  6E2E               	movwf	NVMWrite@source+1,c
  2920  000F66  0E00               	movlw	0
  2921  000F68  6E30               	movwf	NVMWrite@addr+1,c
  2922  000F6A  0E1E               	movlw	30
  2923  000F6C  6E2F               	movwf	NVMWrite@addr,c
  2924  000F6E  0E00               	movlw	0
  2925  000F70  6E32               	movwf	NVMWrite@count+1,c
  2926  000F72  0E08               	movlw	8
  2927  000F74  6E31               	movwf	NVMWrite@count,c
  2928  000F76  ECA4  F00C         	call	_NVMWrite	;wreg free
  2929                           
  2930                           ;FRAME.c: 456:     NVMWrite(&NeightAdress4,40,8);
  2931  000F7A  0E1F               	movlw	low _NeightAdress4
  2932  000F7C  6E2D               	movwf	NVMWrite@source,c
  2933  000F7E  0E00               	movlw	high _NeightAdress4
  2934  000F80  6E2E               	movwf	NVMWrite@source+1,c
  2935  000F82  0E00               	movlw	0
  2936  000F84  6E30               	movwf	NVMWrite@addr+1,c
  2937  000F86  0E28               	movlw	40
  2938  000F88  6E2F               	movwf	NVMWrite@addr,c
  2939  000F8A  0E00               	movlw	0
  2940  000F8C  6E32               	movwf	NVMWrite@count+1,c
  2941  000F8E  0E08               	movlw	8
  2942  000F90  6E31               	movwf	NVMWrite@count,c
  2943  000F92  ECA4  F00C         	call	_NVMWrite	;wreg free
  2944                           
  2945                           ;FRAME.c: 457:     NVMWrite(&NeightAdress5,50,8);
  2946  000F96  0E1D               	movlw	low _NeightAdress5
  2947  000F98  6E2D               	movwf	NVMWrite@source,c
  2948  000F9A  0E00               	movlw	high _NeightAdress5
  2949  000F9C  6E2E               	movwf	NVMWrite@source+1,c
  2950  000F9E  0E00               	movlw	0
  2951  000FA0  6E30               	movwf	NVMWrite@addr+1,c
  2952  000FA2  0E32               	movlw	50
  2953  000FA4  6E2F               	movwf	NVMWrite@addr,c
  2954  000FA6  0E00               	movlw	0
  2955  000FA8  6E32               	movwf	NVMWrite@count+1,c
  2956  000FAA  0E08               	movlw	8
  2957  000FAC  6E31               	movwf	NVMWrite@count,c
  2958  000FAE  ECA4  F00C         	call	_NVMWrite	;wreg free
  2959                           
  2960                           ;FRAME.c: 458:     NVMWrite(&NeightAdress6,60,8);
  2961  000FB2  0E1B               	movlw	low _NeightAdress6
  2962  000FB4  6E2D               	movwf	NVMWrite@source,c
  2963  000FB6  0E00               	movlw	high _NeightAdress6
  2964  000FB8  6E2E               	movwf	NVMWrite@source+1,c
  2965  000FBA  0E00               	movlw	0
  2966  000FBC  6E30               	movwf	NVMWrite@addr+1,c
  2967  000FBE  0E3C               	movlw	60
  2968  000FC0  6E2F               	movwf	NVMWrite@addr,c
  2969  000FC2  0E00               	movlw	0
  2970  000FC4  6E32               	movwf	NVMWrite@count+1,c
  2971  000FC6  0E08               	movlw	8
  2972  000FC8  6E31               	movwf	NVMWrite@count,c
  2973  000FCA  ECA4  F00C         	call	_NVMWrite	;wreg free
  2974                           
  2975                           ;FRAME.c: 459:     NVMWrite(&NeightAdress7,70,8);
  2976  000FCE  0E19               	movlw	low _NeightAdress7
  2977  000FD0  6E2D               	movwf	NVMWrite@source,c
  2978  000FD2  0E00               	movlw	high _NeightAdress7
  2979  000FD4  6E2E               	movwf	NVMWrite@source+1,c
  2980  000FD6  0E00               	movlw	0
  2981  000FD8  6E30               	movwf	NVMWrite@addr+1,c
  2982  000FDA  0E46               	movlw	70
  2983  000FDC  6E2F               	movwf	NVMWrite@addr,c
  2984  000FDE  0E00               	movlw	0
  2985  000FE0  6E32               	movwf	NVMWrite@count+1,c
  2986  000FE2  0E08               	movlw	8
  2987  000FE4  6E31               	movwf	NVMWrite@count,c
  2988  000FE6  ECA4  F00C         	call	_NVMWrite	;wreg free
  2989                           
  2990                           ;FRAME.c: 460:     NVMWrite(&NeightAdress8,80,8);
  2991  000FEA  0E17               	movlw	low _NeightAdress8
  2992  000FEC  6E2D               	movwf	NVMWrite@source,c
  2993  000FEE  0E00               	movlw	high _NeightAdress8
  2994  000FF0  6E2E               	movwf	NVMWrite@source+1,c
  2995  000FF2  0E00               	movlw	0
  2996  000FF4  6E30               	movwf	NVMWrite@addr+1,c
  2997  000FF6  0E50               	movlw	80
  2998  000FF8  6E2F               	movwf	NVMWrite@addr,c
  2999  000FFA  0E00               	movlw	0
  3000  000FFC  6E32               	movwf	NVMWrite@count+1,c
  3001  000FFE  0E08               	movlw	8
  3002  001000  6E31               	movwf	NVMWrite@count,c
  3003  001002  ECA4  F00C         	call	_NVMWrite	;wreg free
  3004  001006  0012               	return		;funcret
  3005  001008                     __end_of_WriteDataToEEPROM:
  3006                           	opt callstack 0
  3007                           
  3008 ;; *************** function _NVMWrite *****************
  3009 ;; Defined at:
  3010 ;;		line 90 in file "EEPROM.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  source          2    8[COMRAM] PTR unsigned char 
  3013 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  3014 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  3015 ;;  addr            2   10[COMRAM] unsigned short 
  3016 ;;  count           2   12[COMRAM] unsigned short 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3028 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;Total ram usage:        6 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    4
  3035 ;; This function calls:
  3036 ;;		_WritetoEEPROM
  3037 ;; This function is called by:
  3038 ;;		_WriteDataToEEPROM
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text20
  3043  001948                     __ptext20:
  3044                           	opt callstack 0
  3045  001948                     _NVMWrite:
  3046                           	opt callstack 22
  3047                           
  3048                           ;EEPROM.c: 90: void NVMWrite(BYTE *source, WORD addr, WORD count);EEPROM.c: 91: {;EEPROM
      +                          .c: 92:     while(count > 0)
  3049                           
  3050                           ;incstack = 0
  3051  001948  D015               	goto	l4015
  3052  00194A                     l945:
  3053  00194A  B2A6               	btfsc	4006,1,c	;volsfr
  3054  00194C  D7FE               	goto	l945
  3055                           
  3056                           ;EEPROM.c: 95:         WritetoEEPROM(addr++,*source);
  3057  00194E  C02F  F02A         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3058  001952  C030  F02B         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3059  001956  C02D  FFD9         	movff	NVMWrite@source,fsr2l
  3060  00195A  C02E  FFDA         	movff	NVMWrite@source+1,fsr2h
  3061  00195E  50DF               	movf	indf2,w,c
  3062  001960  6E2C               	movwf	WritetoEEPROM@Data,c
  3063  001962  EC10  F00D         	call	_WritetoEEPROM	;wreg free
  3064  001966  4A2F               	infsnz	NVMWrite@addr,f,c
  3065  001968  2A30               	incf	NVMWrite@addr+1,f,c
  3066                           
  3067                           ;EEPROM.c: 96:         count--;
  3068  00196A  0631               	decf	NVMWrite@count,f,c
  3069  00196C  A0D8               	btfss	status,0,c
  3070  00196E  0632               	decf	NVMWrite@count+1,f,c
  3071                           
  3072                           ;EEPROM.c: 97:         source++;
  3073  001970  4A2D               	infsnz	NVMWrite@source,f,c
  3074  001972  2A2E               	incf	NVMWrite@source+1,f,c
  3075  001974                     l4015:
  3076                           
  3077                           ;EEPROM.c: 92:     while(count > 0)
  3078  001974  5031               	movf	NVMWrite@count,w,c
  3079  001976  1032               	iorwf	NVMWrite@count+1,w,c
  3080  001978  B4D8               	btfsc	status,2,c
  3081  00197A  0012               	return	
  3082  00197C  D7E6               	goto	l945
  3083  00197E                     __end_of_NVMWrite:
  3084                           	opt callstack 0
  3085                           
  3086 ;; *************** function _WritetoEEPROM *****************
  3087 ;; Defined at:
  3088 ;;		line 61 in file "EEPROM.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  Address         2    5[COMRAM] unsigned short 
  3091 ;;  Data            1    7[COMRAM] unsigned char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3103 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;Total ram usage:        3 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    3
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_NVMWrite
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text21
  3118  001A20                     __ptext21:
  3119                           	opt callstack 0
  3120  001A20                     _WritetoEEPROM:
  3121                           	opt callstack 22
  3122                           
  3123                           ;EEPROM.c: 61: static void WritetoEEPROM(WORD Address, BYTE Data);EEPROM.c: 62: {;EEPROM
      +                          .c: 63:     static BYTE GIE_Status;;EEPROM.c: 65:     EEADRH = (BYTE)(Address>>8);
  3124                           
  3125                           ;incstack = 0
  3126  001A20  502B               	movf	WritetoEEPROM@Address+1,w,c
  3127  001A22  6EAA               	movwf	4010,c	;volatile
  3128                           
  3129                           ;EEPROM.c: 66:     EEADR = (BYTE)Address;
  3130  001A24  C02A  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3131                           
  3132                           ;EEPROM.c: 67:     EEDATA = Data;
  3133  001A28  C02C  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3134                           
  3135                           ;EEPROM.c: 68:     EECON1bits.WREN = 1;
  3136  001A2C  84A6               	bsf	4006,2,c	;volsfr
  3137                           
  3138                           ;EEPROM.c: 69:     GIE_Status = INTCONbits.GIE;
  3139  001A2E  0E00               	movlw	0
  3140  001A30  BEF2               	btfsc	4082,7,c	;volatile
  3141  001A32  0E01               	movlw	1
  3142  001A34  6E0D               	movwf	WritetoEEPROM@GIE_Status,c
  3143                           
  3144                           ;EEPROM.c: 70:     INTCONbits.GIE = 0;
  3145  001A36  9EF2               	bcf	4082,7,c	;volatile
  3146                           
  3147                           ;EEPROM.c: 71:     EECON2 = 0x55;
  3148  001A38  0E55               	movlw	85
  3149  001A3A  6EA7               	movwf	4007,c	;volsfr
  3150                           
  3151                           ;EEPROM.c: 72:     EECON2 = 0xAA;
  3152  001A3C  0EAA               	movlw	170
  3153  001A3E  6EA7               	movwf	4007,c	;volsfr
  3154                           
  3155                           ;EEPROM.c: 73:     EECON1bits.WR = 1;
  3156  001A40  82A6               	bsf	4006,1,c	;volsfr
  3157                           
  3158                           ;EEPROM.c: 74:     INTCONbits.GIE = GIE_Status;
  3159  001A42  B00D               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3160  001A44  D002               	bra	u2155
  3161  001A46  9EF2               	bcf	4082,7,c	;volatile
  3162  001A48  D001               	bra	u2156
  3163  001A4A                     u2155:
  3164  001A4A  8EF2               	bsf	4082,7,c	;volatile
  3165  001A4C                     u2156:
  3166                           
  3167                           ;EEPROM.c: 75:     EECON1bits.WREN = 0;
  3168  001A4C  94A6               	bcf	4006,2,c	;volsfr
  3169  001A4E                     l928:
  3170  001A4E  B2A6               	btfsc	4006,1,c	;volsfr
  3171  001A50  D7FE               	goto	l928
  3172  001A52  0012               	return	
  3173  001A54                     __end_of_WritetoEEPROM:
  3174                           	opt callstack 0
  3175                           
  3176 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3177 ;; Defined at:
  3178 ;;		line 328 in file "FRAME.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  message         2    5[COMRAM] PTR struct .
  3181 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;Total ram usage:        3 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    3
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_FRAME_DeviceReset
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text22
  3208  0016AC                     __ptext22:
  3209                           	opt callstack 0
  3210  0016AC                     _FRAME_DataUpdateAndChangeOption:
  3211                           	opt callstack 24
  3212                           
  3213                           ;FRAME.c: 328: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 329: {
      +                          ;FRAME.c: 331:     Dane->rokU16 = message->data[4];
  3214                           
  3215                           ;incstack = 0
  3216  0016AC  EE20 F00C          	lfsr	2,12
  3217  0016B0  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3218  0016B2  26D9               	addwf	fsr2l,f,c
  3219  0016B4  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3220  0016B6  22DA               	addwfc	fsr2h,f,c
  3221  0016B8  50DF               	movf	indf2,w,c
  3222  0016BA  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3223  0016BC  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3224  0016BE  6E36               	movwf	54,c
  3225  0016C0  6A37               	clrf	55,c
  3226                           
  3227                           ;FRAME.c: 332:     Dane->miesiacU16 = message->data[5];
  3228  0016C2  EE20 F00D          	lfsr	2,13
  3229  0016C6  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3230  0016C8  26D9               	addwf	fsr2l,f,c
  3231  0016CA  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3232  0016CC  22DA               	addwfc	fsr2h,f,c
  3233  0016CE  50DF               	movf	indf2,w,c
  3234  0016D0  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3235  0016D2  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3236  0016D4  6E38               	movwf	56,c
  3237  0016D6  6A39               	clrf	57,c
  3238                           
  3239                           ;FRAME.c: 333:     Dane->dzienU16 = message->data[6];
  3240  0016D8  EE20 F00E          	lfsr	2,14
  3241  0016DC  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3242  0016DE  26D9               	addwf	fsr2l,f,c
  3243  0016E0  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3244  0016E2  22DA               	addwfc	fsr2h,f,c
  3245  0016E4  50DF               	movf	indf2,w,c
  3246  0016E6  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3247  0016E8  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3248  0016EA  6E3A               	movwf	58,c
  3249  0016EC  6A3B               	clrf	59,c
  3250                           
  3251                           ;FRAME.c: 334:     Dane->godzinaU16 = message->data[7];
  3252  0016EE  EE20 F00F          	lfsr	2,15
  3253  0016F2  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3254  0016F4  26D9               	addwf	fsr2l,f,c
  3255  0016F6  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3256  0016F8  22DA               	addwfc	fsr2h,f,c
  3257  0016FA  50DF               	movf	indf2,w,c
  3258  0016FC  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3259  0016FE  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3260  001700  6E3C               	movwf	60,c
  3261  001702  6A3D               	clrf	61,c
  3262  001704  0012               	return		;funcret
  3263  001706                     __end_of_FRAME_DataUpdateAndChangeOption:
  3264                           	opt callstack 0
  3265                           
  3266 ;; *************** function _FRAME_AxisStatus *****************
  3267 ;; Defined at:
  3268 ;;		line 297 in file "FRAME.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  message         2    5[COMRAM] PTR struct .
  3271 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  i               2    0        unsigned short 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;Total ram usage:        3 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    3
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_FRAME_HandleCanFrame
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text23
  3298  00197E                     __ptext23:
  3299                           	opt callstack 0
  3300  00197E                     _FRAME_AxisStatus:
  3301                           	opt callstack 25
  3302                           
  3303                           ;FRAME.c: 297: static void FRAME_AxisStatus(mID *message);FRAME.c: 298: {;FRAME.c: 299: 
      +                              WORD i;;FRAME.c: 301:     if(message->message_type == 0x02)
  3304                           
  3305                           ;incstack = 0
  3306  00197E  EE20 F001          	lfsr	2,1
  3307  001982  502A               	movf	FRAME_AxisStatus@message,w,c
  3308  001984  26D9               	addwf	fsr2l,f,c
  3309  001986  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3310  001988  22DA               	addwfc	fsr2h,f,c
  3311  00198A  0E02               	movlw	2
  3312  00198C  18DE               	xorwf	postinc2,w,c
  3313  00198E  A4D8               	btfss	status,2,c
  3314  001990  0012               	return	
  3315                           
  3316                           ;FRAME.c: 302:     {;FRAME.c: 303:         message->data_length = 1;
  3317  001992  EE20 F010          	lfsr	2,16
  3318  001996  502A               	movf	FRAME_AxisStatus@message,w,c
  3319  001998  26D9               	addwf	fsr2l,f,c
  3320  00199A  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3321  00199C  22DA               	addwfc	fsr2h,f,c
  3322  00199E  0E01               	movlw	1
  3323  0019A0  6EDF               	movwf	indf2,c
  3324                           
  3325                           ;FRAME.c: 314:         message->data[0] = 0xFF;
  3326  0019A2  EE20 F008          	lfsr	2,8
  3327  0019A6  502A               	movf	FRAME_AxisStatus@message,w,c
  3328  0019A8  26D9               	addwf	fsr2l,f,c
  3329  0019AA  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3330  0019AC  22DA               	addwfc	fsr2h,f,c
  3331  0019AE  0EFF               	movlw	255
  3332  0019B0  6EDF               	movwf	indf2,c
  3333                           
  3334                           ;FRAME.c: 315:     }
  3335  0019B2  0012               	return		;funcret
  3336  0019B4                     __end_of_FRAME_AxisStatus:
  3337                           	opt callstack 0
  3338                           
  3339 ;; *************** function _FRAME_AveragingTimes *****************
  3340 ;; Defined at:
  3341 ;;		line 238 in file "FRAME.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  message         2    5[COMRAM] PTR struct .
  3344 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;Total ram usage:        3 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    3
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_FRAME_HandleCanFrame
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text24
  3371  0019B4                     __ptext24:
  3372                           	opt callstack 0
  3373  0019B4                     _FRAME_AveragingTimes:
  3374                           	opt callstack 25
  3375                           
  3376                           ;FRAME.c: 238: static void FRAME_AveragingTimes(mID *message);FRAME.c: 239: {;FRAME.c: 2
      +                          40:     if(message->message_type == 0x02)
  3377                           
  3378                           ;incstack = 0
  3379  0019B4  EE20 F001          	lfsr	2,1
  3380  0019B8  502A               	movf	FRAME_AveragingTimes@message,w,c
  3381  0019BA  26D9               	addwf	fsr2l,f,c
  3382  0019BC  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3383  0019BE  22DA               	addwfc	fsr2h,f,c
  3384  0019C0  0E02               	movlw	2
  3385  0019C2  18DE               	xorwf	postinc2,w,c
  3386  0019C4  A4D8               	btfss	status,2,c
  3387  0019C6  0012               	return	
  3388                           
  3389                           ;FRAME.c: 241:     {;FRAME.c: 242:         message->data_length = 1;
  3390  0019C8  EE20 F010          	lfsr	2,16
  3391  0019CC  502A               	movf	FRAME_AveragingTimes@message,w,c
  3392  0019CE  26D9               	addwf	fsr2l,f,c
  3393  0019D0  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3394  0019D2  22DA               	addwfc	fsr2h,f,c
  3395  0019D4  0E01               	movlw	1
  3396  0019D6  6EDF               	movwf	indf2,c
  3397                           
  3398                           ;FRAME.c: 250:         message->data[0] = 0xFF;
  3399  0019D8  EE20 F008          	lfsr	2,8
  3400  0019DC  502A               	movf	FRAME_AveragingTimes@message,w,c
  3401  0019DE  26D9               	addwf	fsr2l,f,c
  3402  0019E0  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3403  0019E2  22DA               	addwfc	fsr2h,f,c
  3404  0019E4  0EFF               	movlw	255
  3405  0019E6  6EDF               	movwf	indf2,c
  3406                           
  3407                           ;FRAME.c: 251:     }
  3408  0019E8  0012               	return		;funcret
  3409  0019EA                     __end_of_FRAME_AveragingTimes:
  3410                           	opt callstack 0
  3411                           
  3412 ;; *************** function _FRAME_AnalogValue *****************
  3413 ;; Defined at:
  3414 ;;		line 539 in file "FRAME.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  message         2    5[COMRAM] PTR struct .
  3417 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3418 ;;  set             2    7[COMRAM] unsigned short 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  i               2    0        unsigned short 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		None
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;Total ram usage:        4 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    3
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_FRAME_HandleCanFrame
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text25
  3445  001C70                     __ptext25:
  3446                           	opt callstack 0
  3447  001C70                     _FRAME_AnalogValue:
  3448                           	opt callstack 25
  3449                           
  3450                           ;incstack = 0
  3451  001C70  0012               	return		;funcret
  3452  001C72                     __end_of_FRAME_AnalogValue:
  3453                           	opt callstack 0
  3454                           
  3455 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3456 ;; Defined at:
  3457 ;;		line 587 in file "FRAME.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  message         2    5[COMRAM] PTR struct .
  3460 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3461 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  kier            2   13[COMRAM] unsigned short 
  3464 ;;  it              2    0        unsigned short 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;Total ram usage:       10 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    4
  3481 ;; This function calls:
  3482 ;;		_CAN_SetupFilter_Ne
  3483 ;; This function is called by:
  3484 ;;		_FRAME_HandleCanFrame
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text26
  3489  000062                     __ptext26:
  3490                           	opt callstack 0
  3491  000062                     _FRAME_AdressOfNeighbors:
  3492                           	opt callstack 24
  3493                           
  3494                           ;FRAME.c: 587: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          588: {;FRAME.c: 589:     WORD it;;FRAME.c: 592:     WORD kier = (nrRamki-0x10);
  3495                           
  3496                           ;incstack = 0
  3497  000062  0EF0               	movlw	240
  3498  000064  242C               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3499  000066  6E32               	movwf	FRAME_AdressOfNeighbors@kier,c
  3500  000068  0EFF               	movlw	255
  3501  00006A  202D               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3502  00006C  6E33               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3503                           
  3504                           ;FRAME.c: 593:     if(message->message_type == 0x02)
  3505  00006E  EE20 F001          	lfsr	2,1
  3506  000072  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3507  000074  26D9               	addwf	fsr2l,f,c
  3508  000076  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3509  000078  22DA               	addwfc	fsr2h,f,c
  3510  00007A  0E02               	movlw	2
  3511  00007C  18DE               	xorwf	postinc2,w,c
  3512  00007E  A4D8               	btfss	status,2,c
  3513  000080  D08E               	goto	l4515
  3514                           
  3515                           ;FRAME.c: 594:     {;FRAME.c: 596:         message->data_length = 8;
  3516  000082  EE20 F010          	lfsr	2,16
  3517  000086  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3518  000088  26D9               	addwf	fsr2l,f,c
  3519  00008A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3520  00008C  22DA               	addwfc	fsr2h,f,c
  3521  00008E  0E08               	movlw	8
  3522  000090  6EDF               	movwf	indf2,c
  3523                           
  3524                           ;FRAME.c: 598:         if(kier == 0)
  3525  000092  5032               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3526  000094  1033               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3527  000096  A4D8               	btfss	status,2,c
  3528  000098  D041               	goto	l4513
  3529                           
  3530                           ;FRAME.c: 599:         {;FRAME.c: 600:         message->data[0] = (NeightAdress1>> 8);
  3531  00009A  EE20 F008          	lfsr	2,8
  3532  00009E  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3533  0000A0  26D9               	addwf	fsr2l,f,c
  3534  0000A2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3535  0000A4  22DA               	addwfc	fsr2h,f,c
  3536  0000A6  5024               	movf	_NeightAdress1+1,w,c	;volatile
  3537  0000A8  6EDF               	movwf	indf2,c
  3538                           
  3539                           ;FRAME.c: 601:         message->data[1] = NeightAdress1 & 0b11111111;
  3540  0000AA  EE20 F009          	lfsr	2,9
  3541  0000AE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3542  0000B0  26D9               	addwf	fsr2l,f,c
  3543  0000B2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3544  0000B4  22DA               	addwfc	fsr2h,f,c
  3545  0000B6  C023  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3546                           
  3547                           ;FRAME.c: 602:         message->data[2] = (NeightAdress2>> 8);
  3548  0000BA  EE20 F00A          	lfsr	2,10
  3549  0000BE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3550  0000C0  26D9               	addwf	fsr2l,f,c
  3551  0000C2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3552  0000C4  22DA               	addwfc	fsr2h,f,c
  3553  0000C6  504B               	movf	_NeightAdress2+1,w,c	;volatile
  3554  0000C8  6EDF               	movwf	indf2,c
  3555                           
  3556                           ;FRAME.c: 603:         message->data[3] = NeightAdress2 & 0b11111111;
  3557  0000CA  EE20 F00B          	lfsr	2,11
  3558  0000CE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3559  0000D0  26D9               	addwf	fsr2l,f,c
  3560  0000D2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3561  0000D4  22DA               	addwfc	fsr2h,f,c
  3562  0000D6  C04A  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3563                           
  3564                           ;FRAME.c: 604:         message->data[4] = (NeightAdress3>> 8);
  3565  0000DA  EE20 F00C          	lfsr	2,12
  3566  0000DE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3567  0000E0  26D9               	addwf	fsr2l,f,c
  3568  0000E2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3569  0000E4  22DA               	addwfc	fsr2h,f,c
  3570  0000E6  5022               	movf	_NeightAdress3+1,w,c	;volatile
  3571  0000E8  6EDF               	movwf	indf2,c
  3572                           
  3573                           ;FRAME.c: 605:         message->data[5] = NeightAdress3 & 0b11111111;
  3574  0000EA  EE20 F00D          	lfsr	2,13
  3575  0000EE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3576  0000F0  26D9               	addwf	fsr2l,f,c
  3577  0000F2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3578  0000F4  22DA               	addwfc	fsr2h,f,c
  3579  0000F6  C021  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3580                           
  3581                           ;FRAME.c: 606:         message->data[6] = (NeightAdress4>> 8);
  3582  0000FA  EE20 F00E          	lfsr	2,14
  3583  0000FE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3584  000100  26D9               	addwf	fsr2l,f,c
  3585  000102  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3586  000104  22DA               	addwfc	fsr2h,f,c
  3587  000106  5020               	movf	_NeightAdress4+1,w,c	;volatile
  3588  000108  6EDF               	movwf	indf2,c
  3589                           
  3590                           ;FRAME.c: 607:         message->data[7] = NeightAdress4 & 0b11111111;
  3591  00010A  EE20 F00F          	lfsr	2,15
  3592  00010E  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3593  000110  26D9               	addwf	fsr2l,f,c
  3594  000112  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3595  000114  22DA               	addwfc	fsr2h,f,c
  3596  000116  C01F  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3597                           
  3598                           ;FRAME.c: 608:         }
  3599  00011A  0012               	return	
  3600  00011C                     l4513:
  3601                           
  3602                           ;FRAME.c: 610:         {;FRAME.c: 611:         message->data[0] = (NeightAdress5>> 8);
  3603  00011C  EE20 F008          	lfsr	2,8
  3604  000120  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3605  000122  26D9               	addwf	fsr2l,f,c
  3606  000124  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3607  000126  22DA               	addwfc	fsr2h,f,c
  3608  000128  501E               	movf	_NeightAdress5+1,w,c	;volatile
  3609  00012A  6EDF               	movwf	indf2,c
  3610                           
  3611                           ;FRAME.c: 612:         message->data[1] = NeightAdress5 & 0b11111111;
  3612  00012C  EE20 F009          	lfsr	2,9
  3613  000130  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3614  000132  26D9               	addwf	fsr2l,f,c
  3615  000134  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3616  000136  22DA               	addwfc	fsr2h,f,c
  3617  000138  C01D  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3618                           
  3619                           ;FRAME.c: 613:         message->data[2] = (NeightAdress6>> 8);
  3620  00013C  EE20 F00A          	lfsr	2,10
  3621  000140  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3622  000142  26D9               	addwf	fsr2l,f,c
  3623  000144  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3624  000146  22DA               	addwfc	fsr2h,f,c
  3625  000148  501C               	movf	_NeightAdress6+1,w,c	;volatile
  3626  00014A  6EDF               	movwf	indf2,c
  3627                           
  3628                           ;FRAME.c: 614:         message->data[3] = NeightAdress6 & 0b11111111;
  3629  00014C  EE20 F00B          	lfsr	2,11
  3630  000150  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3631  000152  26D9               	addwf	fsr2l,f,c
  3632  000154  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3633  000156  22DA               	addwfc	fsr2h,f,c
  3634  000158  C01B  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3635                           
  3636                           ;FRAME.c: 615:         message->data[4] = (NeightAdress7>> 8);
  3637  00015C  EE20 F00C          	lfsr	2,12
  3638  000160  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3639  000162  26D9               	addwf	fsr2l,f,c
  3640  000164  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3641  000166  22DA               	addwfc	fsr2h,f,c
  3642  000168  501A               	movf	_NeightAdress7+1,w,c	;volatile
  3643  00016A  6EDF               	movwf	indf2,c
  3644                           
  3645                           ;FRAME.c: 616:         message->data[5] = NeightAdress7 & 0b11111111;
  3646  00016C  EE20 F00D          	lfsr	2,13
  3647  000170  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3648  000172  26D9               	addwf	fsr2l,f,c
  3649  000174  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3650  000176  22DA               	addwfc	fsr2h,f,c
  3651  000178  C019  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3652                           
  3653                           ;FRAME.c: 617:         message->data[6] = (NeightAdress8>> 8);
  3654  00017C  EE20 F00E          	lfsr	2,14
  3655  000180  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3656  000182  26D9               	addwf	fsr2l,f,c
  3657  000184  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3658  000186  22DA               	addwfc	fsr2h,f,c
  3659  000188  5018               	movf	_NeightAdress8+1,w,c	;volatile
  3660  00018A  6EDF               	movwf	indf2,c
  3661                           
  3662                           ;FRAME.c: 618:         message->data[7] = NeightAdress8 & 0b11111111;
  3663  00018C  EE20 F00F          	lfsr	2,15
  3664  000190  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3665  000192  26D9               	addwf	fsr2l,f,c
  3666  000194  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3667  000196  22DA               	addwfc	fsr2h,f,c
  3668  000198  C017  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3669  00019C  0012               	return	
  3670  00019E                     l4515:
  3671                           
  3672                           ;FRAME.c: 625:     {;FRAME.c: 628:         if(kier == 0)
  3673  00019E  5032               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3674  0001A0  1033               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3675  0001A2  A4D8               	btfss	status,2,c
  3676  0001A4  D063               	goto	l4521
  3677                           
  3678                           ;FRAME.c: 629:         {;FRAME.c: 630:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3679  0001A6  EE20 F008          	lfsr	2,8
  3680  0001AA  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3681  0001AC  26D9               	addwf	fsr2l,f,c
  3682  0001AE  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3683  0001B0  22DA               	addwfc	fsr2h,f,c
  3684  0001B2  50DF               	movf	indf2,w,c
  3685  0001B4  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3686  0001B6  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3687  0001B8  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3688  0001BA  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3689  0001BC  EE20 F009          	lfsr	2,9
  3690  0001C0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3691  0001C2  26D9               	addwf	fsr2l,f,c
  3692  0001C4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3693  0001C6  22DA               	addwfc	fsr2h,f,c
  3694  0001C8  50DF               	movf	indf2,w,c
  3695  0001CA  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3696  0001CC  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3697  0001CE  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3698  0001D0  6E23               	movwf	_NeightAdress1,c	;volatile
  3699  0001D2  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3700  0001D4  6E24               	movwf	_NeightAdress1+1,c	;volatile
  3701                           
  3702                           ;FRAME.c: 631:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3703  0001D6  EE20 F00A          	lfsr	2,10
  3704  0001DA  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3705  0001DC  26D9               	addwf	fsr2l,f,c
  3706  0001DE  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3707  0001E0  22DA               	addwfc	fsr2h,f,c
  3708  0001E2  50DF               	movf	indf2,w,c
  3709  0001E4  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3710  0001E6  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3711  0001E8  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3712  0001EA  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3713  0001EC  EE20 F00B          	lfsr	2,11
  3714  0001F0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3715  0001F2  26D9               	addwf	fsr2l,f,c
  3716  0001F4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3717  0001F6  22DA               	addwfc	fsr2h,f,c
  3718  0001F8  50DF               	movf	indf2,w,c
  3719  0001FA  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3720  0001FC  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3721  0001FE  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3722  000200  6E4A               	movwf	_NeightAdress2,c	;volatile
  3723  000202  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3724  000204  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  3725                           
  3726                           ;FRAME.c: 632:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3727  000206  EE20 F00C          	lfsr	2,12
  3728  00020A  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3729  00020C  26D9               	addwf	fsr2l,f,c
  3730  00020E  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3731  000210  22DA               	addwfc	fsr2h,f,c
  3732  000212  50DF               	movf	indf2,w,c
  3733  000214  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3734  000216  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3735  000218  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3736  00021A  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3737  00021C  EE20 F00D          	lfsr	2,13
  3738  000220  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3739  000222  26D9               	addwf	fsr2l,f,c
  3740  000224  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3741  000226  22DA               	addwfc	fsr2h,f,c
  3742  000228  50DF               	movf	indf2,w,c
  3743  00022A  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3744  00022C  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3745  00022E  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3746  000230  6E21               	movwf	_NeightAdress3,c	;volatile
  3747  000232  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3748  000234  6E22               	movwf	_NeightAdress3+1,c	;volatile
  3749                           
  3750                           ;FRAME.c: 633:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3751  000236  EE20 F00E          	lfsr	2,14
  3752  00023A  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3753  00023C  26D9               	addwf	fsr2l,f,c
  3754  00023E  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3755  000240  22DA               	addwfc	fsr2h,f,c
  3756  000242  50DF               	movf	indf2,w,c
  3757  000244  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3758  000246  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3759  000248  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3760  00024A  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3761  00024C  EE20 F00F          	lfsr	2,15
  3762  000250  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3763  000252  26D9               	addwf	fsr2l,f,c
  3764  000254  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3765  000256  22DA               	addwfc	fsr2h,f,c
  3766  000258  50DF               	movf	indf2,w,c
  3767  00025A  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3768  00025C  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3769  00025E  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3770  000260  6E1F               	movwf	_NeightAdress4,c	;volatile
  3771  000262  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3772  000264  6E20               	movwf	_NeightAdress4+1,c	;volatile
  3773  000266                     l4519:
  3774                           
  3775                           ;FRAME.c: 634:          CAN_SetupFilter_Ne();
  3776  000266  EC10  F009         	call	_CAN_SetupFilter_Ne	;wreg free
  3777                           
  3778                           ;FRAME.c: 637:         }
  3779  00026A  0012               	return	
  3780  00026C                     l4521:
  3781                           
  3782                           ;FRAME.c: 639:         {;FRAME.c: 640:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3783  00026C  EE20 F008          	lfsr	2,8
  3784  000270  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3785  000272  26D9               	addwf	fsr2l,f,c
  3786  000274  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3787  000276  22DA               	addwfc	fsr2h,f,c
  3788  000278  50DF               	movf	indf2,w,c
  3789  00027A  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3790  00027C  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3791  00027E  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3792  000280  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3793  000282  EE20 F009          	lfsr	2,9
  3794  000286  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3795  000288  26D9               	addwf	fsr2l,f,c
  3796  00028A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3797  00028C  22DA               	addwfc	fsr2h,f,c
  3798  00028E  50DF               	movf	indf2,w,c
  3799  000290  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3800  000292  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3801  000294  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3802  000296  6E1D               	movwf	_NeightAdress5,c	;volatile
  3803  000298  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3804  00029A  6E1E               	movwf	_NeightAdress5+1,c	;volatile
  3805                           
  3806                           ;FRAME.c: 641:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3807  00029C  EE20 F00A          	lfsr	2,10
  3808  0002A0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3809  0002A2  26D9               	addwf	fsr2l,f,c
  3810  0002A4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3811  0002A6  22DA               	addwfc	fsr2h,f,c
  3812  0002A8  50DF               	movf	indf2,w,c
  3813  0002AA  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3814  0002AC  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3815  0002AE  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3816  0002B0  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3817  0002B2  EE20 F00B          	lfsr	2,11
  3818  0002B6  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3819  0002B8  26D9               	addwf	fsr2l,f,c
  3820  0002BA  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3821  0002BC  22DA               	addwfc	fsr2h,f,c
  3822  0002BE  50DF               	movf	indf2,w,c
  3823  0002C0  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3824  0002C2  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3825  0002C4  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3826  0002C6  6E1B               	movwf	_NeightAdress6,c	;volatile
  3827  0002C8  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3828  0002CA  6E1C               	movwf	_NeightAdress6+1,c	;volatile
  3829                           
  3830                           ;FRAME.c: 642:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3831  0002CC  EE20 F00C          	lfsr	2,12
  3832  0002D0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3833  0002D2  26D9               	addwf	fsr2l,f,c
  3834  0002D4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3835  0002D6  22DA               	addwfc	fsr2h,f,c
  3836  0002D8  50DF               	movf	indf2,w,c
  3837  0002DA  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3838  0002DC  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3839  0002DE  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3840  0002E0  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3841  0002E2  EE20 F00D          	lfsr	2,13
  3842  0002E6  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3843  0002E8  26D9               	addwf	fsr2l,f,c
  3844  0002EA  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3845  0002EC  22DA               	addwfc	fsr2h,f,c
  3846  0002EE  50DF               	movf	indf2,w,c
  3847  0002F0  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3848  0002F2  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3849  0002F4  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3850  0002F6  6E19               	movwf	_NeightAdress7,c	;volatile
  3851  0002F8  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3852  0002FA  6E1A               	movwf	_NeightAdress7+1,c	;volatile
  3853                           
  3854                           ;FRAME.c: 643:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3855  0002FC  EE20 F00E          	lfsr	2,14
  3856  000300  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3857  000302  26D9               	addwf	fsr2l,f,c
  3858  000304  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3859  000306  22DA               	addwfc	fsr2h,f,c
  3860  000308  50DF               	movf	indf2,w,c
  3861  00030A  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3862  00030C  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3863  00030E  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3864  000310  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3865  000312  EE20 F00F          	lfsr	2,15
  3866  000316  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3867  000318  26D9               	addwf	fsr2l,f,c
  3868  00031A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3869  00031C  22DA               	addwfc	fsr2h,f,c
  3870  00031E  50DF               	movf	indf2,w,c
  3871  000320  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3872  000322  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3873  000324  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3874  000326  6E17               	movwf	_NeightAdress8,c	;volatile
  3875  000328  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3876  00032A  6E18               	movwf	_NeightAdress8+1,c	;volatile
  3877  00032C  D79C               	goto	l4519
  3878  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3879                           	opt callstack 0
  3880                           
  3881 ;; *************** function _FRAME_AccelerometerStatus *****************
  3882 ;; Defined at:
  3883 ;;		line 161 in file "FRAME.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  message         2    7[COMRAM] PTR struct .
  3886 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;Total ram usage:        3 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    4
  3905 ;; This function calls:
  3906 ;;		_MOCK_Klikniecie_Spadek
  3907 ;;		_MOCK_PrzyspieszenieX
  3908 ;;		_MOCK_PrzyspieszenieY
  3909 ;;		_MOCK_PrzyspieszenieZ
  3910 ;; This function is called by:
  3911 ;;		_FRAME_HandleCanFrame
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text27
  3916  0014A8                     __ptext27:
  3917                           	opt callstack 0
  3918  0014A8                     _FRAME_AccelerometerStatus:
  3919                           	opt callstack 24
  3920                           
  3921                           ;FRAME.c: 161: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 162: {;FRAME
      +                          .c: 163:     if(message->message_type == 0x02)
  3922                           
  3923                           ;incstack = 0
  3924  0014A8  EE20 F001          	lfsr	2,1
  3925  0014AC  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3926  0014AE  26D9               	addwf	fsr2l,f,c
  3927  0014B0  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3928  0014B2  22DA               	addwfc	fsr2h,f,c
  3929  0014B4  0E02               	movlw	2
  3930  0014B6  18DE               	xorwf	postinc2,w,c
  3931  0014B8  A4D8               	btfss	status,2,c
  3932  0014BA  0012               	return	
  3933                           
  3934                           ;FRAME.c: 164:     {;FRAME.c: 165:         message->data_length = 4;
  3935  0014BC  EE20 F010          	lfsr	2,16
  3936  0014C0  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3937  0014C2  26D9               	addwf	fsr2l,f,c
  3938  0014C4  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3939  0014C6  22DA               	addwfc	fsr2h,f,c
  3940  0014C8  0E04               	movlw	4
  3941  0014CA  6EDF               	movwf	indf2,c
  3942                           
  3943                           ;FRAME.c: 169:         message->data[0] = MOCK_PrzyspieszenieX();
  3944  0014CC  EE20 F008          	lfsr	2,8
  3945  0014D0  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3946  0014D2  26D9               	addwf	fsr2l,f,c
  3947  0014D4  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3948  0014D6  22DA               	addwfc	fsr2h,f,c
  3949  0014D8  EC11  F00E         	call	_MOCK_PrzyspieszenieX	;wreg free
  3950  0014DC  502A               	movf	?_MOCK_PrzyspieszenieX,w,c
  3951  0014DE  6EDF               	movwf	indf2,c
  3952                           
  3953                           ;FRAME.c: 170:         message->data[1] = MOCK_PrzyspieszenieY();
  3954  0014E0  EE20 F009          	lfsr	2,9
  3955  0014E4  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3956  0014E6  26D9               	addwf	fsr2l,f,c
  3957  0014E8  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3958  0014EA  22DA               	addwfc	fsr2h,f,c
  3959  0014EC  EC0C  F00E         	call	_MOCK_PrzyspieszenieY	;wreg free
  3960  0014F0  502A               	movf	?_MOCK_PrzyspieszenieY,w,c
  3961  0014F2  6EDF               	movwf	indf2,c
  3962                           
  3963                           ;FRAME.c: 171:         message->data[2] = MOCK_PrzyspieszenieZ();
  3964  0014F4  EE20 F00A          	lfsr	2,10
  3965  0014F8  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3966  0014FA  26D9               	addwf	fsr2l,f,c
  3967  0014FC  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3968  0014FE  22DA               	addwfc	fsr2h,f,c
  3969  001500  EC07  F00E         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3970  001504  502A               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3971  001506  6EDF               	movwf	indf2,c
  3972                           
  3973                           ;FRAME.c: 172:         message->data[3] = MOCK_Klikniecie_Spadek();
  3974  001508  EE20 F00B          	lfsr	2,11
  3975  00150C  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3976  00150E  26D9               	addwf	fsr2l,f,c
  3977  001510  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3978  001512  22DA               	addwfc	fsr2h,f,c
  3979  001514  EC16  F00E         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3980  001518  502A               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3981  00151A  6EDF               	movwf	indf2,c
  3982                           
  3983                           ;FRAME.c: 173:     }
  3984  00151C  0012               	return		;funcret
  3985  00151E                     __end_of_FRAME_AccelerometerStatus:
  3986                           	opt callstack 0
  3987                           
  3988 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3989 ;; Defined at:
  3990 ;;		line 72 in file "MOC_Funct.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  2    5[COMRAM] unsigned int 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;Total ram usage:        2 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    3
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_FRAME_AccelerometerStatus
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text28
  4019  001C0E                     __ptext28:
  4020                           	opt callstack 0
  4021  001C0E                     _MOCK_PrzyspieszenieZ:
  4022                           	opt callstack 24
  4023                           
  4024                           ;MOC_Funct.c: 74:     return 0xFE;
  4025                           
  4026                           ;incstack = 0
  4027  001C0E  0E00               	movlw	0
  4028  001C10  6E2B               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  4029  001C12  0EFE               	movlw	254
  4030  001C14  6E2A               	movwf	?_MOCK_PrzyspieszenieZ,c
  4031  001C16  0012               	return		;funcret
  4032  001C18                     __end_of_MOCK_PrzyspieszenieZ:
  4033                           	opt callstack 0
  4034                           
  4035 ;; *************** function _MOCK_PrzyspieszenieY *****************
  4036 ;; Defined at:
  4037 ;;		line 68 in file "MOC_Funct.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  2    5[COMRAM] unsigned int 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;Total ram usage:        2 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    3
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_FRAME_AccelerometerStatus
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text29
  4066  001C18                     __ptext29:
  4067                           	opt callstack 0
  4068  001C18                     _MOCK_PrzyspieszenieY:
  4069                           	opt callstack 24
  4070                           
  4071                           ;MOC_Funct.c: 70:     return 0xFE;
  4072                           
  4073                           ;incstack = 0
  4074  001C18  0E00               	movlw	0
  4075  001C1A  6E2B               	movwf	?_MOCK_PrzyspieszenieY+1,c
  4076  001C1C  0EFE               	movlw	254
  4077  001C1E  6E2A               	movwf	?_MOCK_PrzyspieszenieY,c
  4078  001C20  0012               	return		;funcret
  4079  001C22                     __end_of_MOCK_PrzyspieszenieY:
  4080                           	opt callstack 0
  4081                           
  4082 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4083 ;; Defined at:
  4084 ;;		line 63 in file "MOC_Funct.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  2    5[COMRAM] unsigned int 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    3
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_FRAME_AccelerometerStatus
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text30
  4113  001C22                     __ptext30:
  4114                           	opt callstack 0
  4115  001C22                     _MOCK_PrzyspieszenieX:
  4116                           	opt callstack 24
  4117                           
  4118                           ;MOC_Funct.c: 65:     return 0xFE;
  4119                           
  4120                           ;incstack = 0
  4121  001C22  0E00               	movlw	0
  4122  001C24  6E2B               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4123  001C26  0EFE               	movlw	254
  4124  001C28  6E2A               	movwf	?_MOCK_PrzyspieszenieX,c
  4125  001C2A  0012               	return		;funcret
  4126  001C2C                     __end_of_MOCK_PrzyspieszenieX:
  4127                           	opt callstack 0
  4128                           
  4129 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4130 ;; Defined at:
  4131 ;;		line 76 in file "MOC_Funct.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  2    5[COMRAM] unsigned int 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;Total ram usage:        2 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    3
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_FRAME_AccelerometerStatus
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text31
  4160  001C2C                     __ptext31:
  4161                           	opt callstack 0
  4162  001C2C                     _MOCK_Klikniecie_Spadek:
  4163                           	opt callstack 24
  4164                           
  4165                           ;MOC_Funct.c: 78:     return 0b00000000;
  4166                           
  4167                           ;incstack = 0
  4168  001C2C  0E00               	movlw	0
  4169  001C2E  6E2B               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4170  001C30  0E00               	movlw	0
  4171  001C32  6E2A               	movwf	?_MOCK_Klikniecie_Spadek,c
  4172  001C34  0012               	return		;funcret
  4173  001C36                     __end_of_MOCK_Klikniecie_Spadek:
  4174                           	opt callstack 0
  4175                           
  4176 ;; *************** function _CAN_SendFrame *****************
  4177 ;; Defined at:
  4178 ;;		line 246 in file "CAN.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  message         2   10[COMRAM] PTR struct .
  4181 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;Total ram usage:        5 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    4
  4200 ;; This function calls:
  4201 ;;		_CAN_MoveBuffIntoFrame
  4202 ;; This function is called by:
  4203 ;;		_FRAME_HandleCanFrame
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text32
  4208  0007B0                     __ptext32:
  4209                           	opt callstack 0
  4210  0007B0                     _CAN_SendFrame:
  4211                           	opt callstack 24
  4212                           
  4213                           ;CAN.c: 251:     {;CAN.c: 252:         ECANCON = 0x83;
  4214                           
  4215                           ;incstack = 0
  4216                           ;CAN.c: 246: void CAN_SendFrame(mID * message);CAN.c: 247: {;CAN.c: 250:     for(;;)
  4217  0007B0  0E83               	movlw	131
  4218  0007B2  6E77               	movwf	3959,c	;volatile
  4219                           
  4220                           ;CAN.c: 253:         if(!RXB0CONbits.FILHIT3)
  4221  0007B4  A660               	btfss	3936,3,c	;volatile
  4222  0007B6  D00A               	goto	l288
  4223                           
  4224                           ;CAN.c: 258:         ECANCON = 0x84;
  4225  0007B8  0E84               	movlw	132
  4226  0007BA  6E77               	movwf	3959,c	;volatile
  4227                           
  4228                           ;CAN.c: 259:         if(!RXB0CONbits.FILHIT3)
  4229  0007BC  A660               	btfss	3936,3,c	;volatile
  4230  0007BE  D006               	goto	l288
  4231                           
  4232                           ;CAN.c: 264:         ECANCON = 0x85;
  4233  0007C0  0E85               	movlw	133
  4234  0007C2  6E77               	movwf	3959,c	;volatile
  4235                           
  4236                           ;CAN.c: 265:         if(!RXB0CONbits.FILHIT3)
  4237  0007C4  A660               	btfss	3936,3,c	;volatile
  4238  0007C6  D002               	goto	l288
  4239  0007C8  D7F3               	goto	_CAN_SendFrame
  4240  0007CA                     l289:
  4241  0007CA  00FF               	reset		;# 
  4242  0007CC                     l288:
  4243                           
  4244                           ;CAN.c: 272:     while(COMSTATbits.TXWARN)
  4245  0007CC  B474               	btfsc	3956,2,c	;volatile
  4246  0007CE  D7FD               	goto	l289
  4247                           
  4248                           ;CAN.c: 276:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4249  0007D0  0E00               	movlw	0
  4250  0007D2  0100               	movlb	0	; () banked
  4251  0007D4  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;CAN.c: 277:     RXB0EIDL = message->id.v[0];
  4255  0007D6  EE20 F004          	lfsr	2,4
  4256  0007DA  502F               	movf	CAN_SendFrame@message,w,c
  4257  0007DC  26D9               	addwf	fsr2l,f,c
  4258  0007DE  5030               	movf	CAN_SendFrame@message+1,w,c
  4259  0007E0  22DA               	addwfc	fsr2h,f,c
  4260  0007E2  50DF               	movf	indf2,w,c
  4261  0007E4  6E64               	movwf	3940,c	;volatile
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;CAN.c: 278:     RXB0EIDH = message->id.v[1];
  4265  0007E6  EE20 F005          	lfsr	2,5
  4266  0007EA  502F               	movf	CAN_SendFrame@message,w,c
  4267  0007EC  26D9               	addwf	fsr2l,f,c
  4268  0007EE  5030               	movf	CAN_SendFrame@message+1,w,c
  4269  0007F0  22DA               	addwfc	fsr2h,f,c
  4270  0007F2  50DF               	movf	indf2,w,c
  4271  0007F4  6E63               	movwf	3939,c	;volatile
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;CAN.c: 279:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4275  0007F6  EE20 F006          	lfsr	2,6
  4276  0007FA  502F               	movf	CAN_SendFrame@message,w,c
  4277  0007FC  26D9               	addwf	fsr2l,f,c
  4278  0007FE  5030               	movf	CAN_SendFrame@message+1,w,c
  4279  000800  22DA               	addwfc	fsr2h,f,c
  4280  000802  50DF               	movf	indf2,w,c
  4281  000804  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4282  000806  0E03               	movlw	3
  4283  000808  1631               	andwf	??_CAN_SendFrame,f,c
  4284  00080A  EE20 F006          	lfsr	2,6
  4285  00080E  502F               	movf	CAN_SendFrame@message,w,c
  4286  000810  26D9               	addwf	fsr2l,f,c
  4287  000812  5030               	movf	CAN_SendFrame@message+1,w,c
  4288  000814  22DA               	addwfc	fsr2h,f,c
  4289  000816  50DF               	movf	indf2,w,c
  4290  000818  0BFC               	andlw	252
  4291  00081A  0D08               	mullw	8
  4292  00081C  50F3               	movf	prodl,w,c
  4293  00081E  1031               	iorwf	??_CAN_SendFrame,w,c
  4294  000820  6E62               	movwf	3938,c	;volatile
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;CAN.c: 280:     RXB0SIDLbits.EXID = 1;
  4298  000822  8662               	bsf	3938,3,c	;volatile
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;CAN.c: 281:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4302  000824  EE20 F006          	lfsr	2,6
  4303  000828  502F               	movf	CAN_SendFrame@message,w,c
  4304  00082A  26D9               	addwf	fsr2l,f,c
  4305  00082C  5030               	movf	CAN_SendFrame@message+1,w,c
  4306  00082E  22DA               	addwfc	fsr2h,f,c
  4307  000830  CFDE F031          	movff	postinc2,??_CAN_SendFrame
  4308  000834  CFDD F032          	movff	postdec2,??_CAN_SendFrame+1
  4309  000838  0E05               	movlw	5
  4310  00083A  6E33               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4311  00083C                     u2575:
  4312  00083C  90D8               	bcf	status,0,c
  4313  00083E  3232               	rrcf	??_CAN_SendFrame+1,f,c
  4314  000840  3231               	rrcf	??_CAN_SendFrame,f,c
  4315  000842  2E33               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4316  000844  D7FB               	goto	u2575
  4317  000846  5031               	movf	??_CAN_SendFrame,w,c
  4318  000848  6E61               	movwf	3937,c	;volatile
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;CAN.c: 283:     RXB0DLC = 0;
  4322  00084A  0E00               	movlw	0
  4323  00084C  6E65               	movwf	3941,c	;volatile
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;CAN.c: 285:     if(message->message_type==0x02)
  4327  00084E  EE20 F001          	lfsr	2,1
  4328  000852  502F               	movf	CAN_SendFrame@message,w,c
  4329  000854  26D9               	addwf	fsr2l,f,c
  4330  000856  5030               	movf	CAN_SendFrame@message+1,w,c
  4331  000858  22DA               	addwfc	fsr2h,f,c
  4332  00085A  0E02               	movlw	2
  4333  00085C  18DE               	xorwf	postinc2,w,c
  4334  00085E  A4D8               	btfss	status,2,c
  4335  000860  D002               	goto	l4377
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;CAN.c: 286:     {;CAN.c: 287:         RXB0DLCbits.RXRTR = 1;
  4339  000862  8C65               	bsf	3941,6,c	;volatile
  4340                           
  4341                           ;CAN.c: 288:     }
  4342  000864  D05A               	goto	l4381
  4343  000866                     l4377:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;CAN.c: 290:     {;CAN.c: 291:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  4347  000866  EE20 F010          	lfsr	2,16
  4348  00086A  502F               	movf	CAN_SendFrame@message,w,c
  4349  00086C  26D9               	addwf	fsr2l,f,c
  4350  00086E  5030               	movf	CAN_SendFrame@message+1,w,c
  4351  000870  22DA               	addwfc	fsr2h,f,c
  4352  000872  50DF               	movf	indf2,w,c
  4353  000874  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4354  000876  0E0F               	movlw	15
  4355  000878  1631               	andwf	??_CAN_SendFrame,f,c
  4356  00087A  5065               	movf	3941,w,c	;volatile
  4357  00087C  1831               	xorwf	??_CAN_SendFrame,w,c
  4358  00087E  0BFE               	andlw	-2
  4359  000880  1831               	xorwf	??_CAN_SendFrame,w,c
  4360  000882  6E65               	movwf	3941,c	;volatile
  4361                           
  4362                           ;CAN.c: 292:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4363  000884  EE20 F010          	lfsr	2,16
  4364  000888  502F               	movf	CAN_SendFrame@message,w,c
  4365  00088A  26D9               	addwf	fsr2l,f,c
  4366  00088C  5030               	movf	CAN_SendFrame@message+1,w,c
  4367  00088E  22DA               	addwfc	fsr2h,f,c
  4368  000890  50DF               	movf	indf2,w,c
  4369  000892  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4370  000894  90D8               	bcf	status,0,c
  4371  000896  3231               	rrcf	??_CAN_SendFrame,f,c
  4372  000898  0E07               	movlw	7
  4373  00089A  1631               	andwf	??_CAN_SendFrame,f,c
  4374  00089C  4631               	rlncf	??_CAN_SendFrame,f,c
  4375  00089E  5065               	movf	3941,w,c	;volatile
  4376  0008A0  1831               	xorwf	??_CAN_SendFrame,w,c
  4377  0008A2  0BFD               	andlw	-3
  4378  0008A4  1831               	xorwf	??_CAN_SendFrame,w,c
  4379  0008A6  6E65               	movwf	3941,c	;volatile
  4380                           
  4381                           ;CAN.c: 293:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4382  0008A8  EE20 F010          	lfsr	2,16
  4383  0008AC  502F               	movf	CAN_SendFrame@message,w,c
  4384  0008AE  26D9               	addwf	fsr2l,f,c
  4385  0008B0  5030               	movf	CAN_SendFrame@message+1,w,c
  4386  0008B2  22DA               	addwfc	fsr2h,f,c
  4387  0008B4  50DF               	movf	indf2,w,c
  4388  0008B6  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4389  0008B8  90D8               	bcf	status,0,c
  4390  0008BA  3231               	rrcf	??_CAN_SendFrame,f,c
  4391  0008BC  90D8               	bcf	status,0,c
  4392  0008BE  3231               	rrcf	??_CAN_SendFrame,f,c
  4393  0008C0  0E03               	movlw	3
  4394  0008C2  1631               	andwf	??_CAN_SendFrame,f,c
  4395  0008C4  4631               	rlncf	??_CAN_SendFrame,f,c
  4396  0008C6  4631               	rlncf	??_CAN_SendFrame,f,c
  4397  0008C8  5065               	movf	3941,w,c	;volatile
  4398  0008CA  1831               	xorwf	??_CAN_SendFrame,w,c
  4399  0008CC  0BFB               	andlw	-5
  4400  0008CE  1831               	xorwf	??_CAN_SendFrame,w,c
  4401  0008D0  6E65               	movwf	3941,c	;volatile
  4402                           
  4403                           ;CAN.c: 294:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4404  0008D2  EE20 F010          	lfsr	2,16
  4405  0008D6  502F               	movf	CAN_SendFrame@message,w,c
  4406  0008D8  26D9               	addwf	fsr2l,f,c
  4407  0008DA  5030               	movf	CAN_SendFrame@message+1,w,c
  4408  0008DC  22DA               	addwfc	fsr2h,f,c
  4409  0008DE  50DF               	movf	indf2,w,c
  4410  0008E0  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4411  0008E2  90D8               	bcf	status,0,c
  4412  0008E4  3231               	rrcf	??_CAN_SendFrame,f,c
  4413  0008E6  90D8               	bcf	status,0,c
  4414  0008E8  3231               	rrcf	??_CAN_SendFrame,f,c
  4415  0008EA  90D8               	bcf	status,0,c
  4416  0008EC  3231               	rrcf	??_CAN_SendFrame,f,c
  4417  0008EE  0E01               	movlw	1
  4418  0008F0  1631               	andwf	??_CAN_SendFrame,f,c
  4419  0008F2  4631               	rlncf	??_CAN_SendFrame,f,c
  4420  0008F4  4631               	rlncf	??_CAN_SendFrame,f,c
  4421  0008F6  4631               	rlncf	??_CAN_SendFrame,f,c
  4422  0008F8  5065               	movf	3941,w,c	;volatile
  4423  0008FA  1831               	xorwf	??_CAN_SendFrame,w,c
  4424  0008FC  0BF7               	andlw	-9
  4425  0008FE  1831               	xorwf	??_CAN_SendFrame,w,c
  4426  000900  6E65               	movwf	3941,c	;volatile
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;CAN.c: 296:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4430  000902  0E66               	movlw	102
  4431  000904  6E2A               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4432  000906  0E0F               	movlw	15
  4433  000908  6E2B               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4434  00090A  0E08               	movlw	8
  4435  00090C  242F               	addwf	CAN_SendFrame@message,w,c
  4436  00090E  6E2C               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4437  000910  0E00               	movlw	0
  4438  000912  2030               	addwfc	CAN_SendFrame@message+1,w,c
  4439  000914  6E2D               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4440  000916  EC5E  F00D         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4441  00091A                     l4381:
  4442                           
  4443                           ;CAN.c: 299:     RXB0CONbits.FILHIT3 = 1;
  4444  00091A  8660               	bsf	3936,3,c	;volatile
  4445                           
  4446                           ;CAN.c: 301:     DetectorLedRadar.Flags.ramkaTx = 1;
  4447  00091C  0100               	movlb	0	; () banked
  4448  00091E  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4449                           
  4450                           ; BSR set to: 0
  4451  000920  0012               	return		;funcret
  4452  000922                     __end_of_CAN_SendFrame:
  4453                           	opt callstack 0
  4454                           
  4455 ;; *************** function _CAN_GenID *****************
  4456 ;; Defined at:
  4457 ;;		line 445 in file "CAN.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  message         2    5[COMRAM] PTR struct .
  4460 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4461 ;;  frameID         1    7[COMRAM] unsigned char 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4473 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;Total ram usage:        5 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    3
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_FRAME_HandleCanFrame
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text33
  4488  001430                     __ptext33:
  4489                           	opt callstack 0
  4490  001430                     _CAN_GenID:
  4491                           	opt callstack 25
  4492                           
  4493                           ;CAN.c: 445: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 446: {;CAN.c: 448:     m
      +                          essage->frame_type = 0x03;
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;incstack = 0
  4497  001430  EE20 F002          	lfsr	2,2
  4498  001434  502A               	movf	CAN_GenID@message,w,c
  4499  001436  26D9               	addwf	fsr2l,f,c
  4500  001438  502B               	movf	CAN_GenID@message+1,w,c
  4501  00143A  22DA               	addwfc	fsr2h,f,c
  4502  00143C  0E03               	movlw	3
  4503  00143E  6EDF               	movwf	indf2,c
  4504                           
  4505                           ;CAN.c: 449:     message->message_type = 0x01;
  4506  001440  EE20 F001          	lfsr	2,1
  4507  001444  502A               	movf	CAN_GenID@message,w,c
  4508  001446  26D9               	addwf	fsr2l,f,c
  4509  001448  502B               	movf	CAN_GenID@message+1,w,c
  4510  00144A  22DA               	addwfc	fsr2h,f,c
  4511  00144C  0E01               	movlw	1
  4512  00144E  6EDF               	movwf	indf2,c
  4513                           
  4514                           ;CAN.c: 450:     message->id.w[1] = (WORD)frameID * (WORD)4;
  4515  001450  502C               	movf	CAN_GenID@frameID,w,c
  4516  001452  6E2D               	movwf	??_CAN_GenID& (0+255),c
  4517  001454  6A2E               	clrf	(??_CAN_GenID+1)& (0+255),c
  4518  001456  90D8               	bcf	status,0,c
  4519  001458  362D               	rlcf	??_CAN_GenID,f,c
  4520  00145A  362E               	rlcf	??_CAN_GenID+1,f,c
  4521  00145C  90D8               	bcf	status,0,c
  4522  00145E  362D               	rlcf	??_CAN_GenID,f,c
  4523  001460  362E               	rlcf	??_CAN_GenID+1,f,c
  4524  001462  EE20 F006          	lfsr	2,6
  4525  001466  502A               	movf	CAN_GenID@message,w,c
  4526  001468  26D9               	addwf	fsr2l,f,c
  4527  00146A  502B               	movf	CAN_GenID@message+1,w,c
  4528  00146C  22DA               	addwfc	fsr2h,f,c
  4529  00146E  C02D  FFDE         	movff	??_CAN_GenID,postinc2
  4530  001472  C02E  FFDD         	movff	??_CAN_GenID+1,postdec2
  4531                           
  4532                           ;CAN.c: 451:     message->id.w[0] = DaneCan.adresCAN;
  4533  001476  EE20 F004          	lfsr	2,4
  4534  00147A  502A               	movf	CAN_GenID@message,w,c
  4535  00147C  26D9               	addwf	fsr2l,f,c
  4536  00147E  502B               	movf	CAN_GenID@message+1,w,c
  4537  001480  22DA               	addwfc	fsr2h,f,c
  4538  001482  C003  FFDE         	movff	_DaneCan+2,postinc2
  4539  001486  C004  FFDD         	movff	_DaneCan+3,postdec2
  4540                           
  4541                           ;CAN.c: 454:     message ->id.bits.b16 = 0;
  4542  00148A  EE20 F006          	lfsr	2,6
  4543  00148E  502A               	movf	CAN_GenID@message,w,c
  4544  001490  26D9               	addwf	fsr2l,f,c
  4545  001492  502B               	movf	CAN_GenID@message+1,w,c
  4546  001494  22DA               	addwfc	fsr2h,f,c
  4547  001496  90DF               	bcf	indf2,0,c
  4548                           
  4549                           ;CAN.c: 455:     message ->id.bits.b17 = 0;
  4550  001498  EE20 F006          	lfsr	2,6
  4551  00149C  502A               	movf	CAN_GenID@message,w,c
  4552  00149E  26D9               	addwf	fsr2l,f,c
  4553  0014A0  502B               	movf	CAN_GenID@message+1,w,c
  4554  0014A2  22DA               	addwfc	fsr2h,f,c
  4555  0014A4  92DF               	bcf	indf2,1,c
  4556  0014A6  0012               	return		;funcret
  4557  0014A8                     __end_of_CAN_GenID:
  4558                           	opt callstack 0
  4559                           
  4560 ;; *************** function _CAN_TakeFrame *****************
  4561 ;; Defined at:
  4562 ;;		line 310 in file "CAN.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  message         2   13[COMRAM] PTR struct .
  4565 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  k               1   18[COMRAM] unsigned char 
  4568 ;;  tempCON         1   17[COMRAM] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      enum E10433
  4571 ;; Registers used:
  4572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;Total ram usage:        6 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    4
  4585 ;; This function calls:
  4586 ;;		_CAN_MoveBuffIntoFrame
  4587 ;;		___awdiv
  4588 ;; This function is called by:
  4589 ;;		_TRM_DataTransmition
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text34
  4594  00032E                     __ptext34:
  4595                           	opt callstack 0
  4596  00032E                     _CAN_TakeFrame:
  4597                           	opt callstack 25
  4598                           
  4599                           ;CAN.c: 310: BOOL CAN_TakeFrame(mID * message);CAN.c: 311: {;CAN.c: 312:     BYTE k, tem
      +                          pCON;;CAN.c: 314:     k = CANCON&0x0F;
  4600                           
  4601                           ;incstack = 0
  4602  00032E  506F               	movf	3951,w,c	;volatile
  4603  000330  0B0F               	andlw	15
  4604  000332  6E37               	movwf	CAN_TakeFrame@k,c
  4605                           
  4606                           ;CAN.c: 316:     ECANCON = 0x90 | k;
  4607  000334  5037               	movf	CAN_TakeFrame@k,w,c
  4608  000336  0990               	iorlw	144
  4609  000338  6E77               	movwf	3959,c	;volatile
  4610                           
  4611                           ;CAN.c: 319:     switch(k)
  4612  00033A  D018               	goto	l4589
  4613  00033C                     l297:
  4614                           
  4615                           ;CAN.c: 322:             tempCON = RXB0CON;
  4616  00033C  CF60 F036          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4617                           
  4618                           ;CAN.c: 323:             break;
  4619  000340  D035               	goto	l298
  4620  000342                     l299:
  4621                           
  4622                           ;CAN.c: 325:             tempCON = RXB1CON;
  4623  000342  CF50 F036          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4624                           
  4625                           ;CAN.c: 326:             break;
  4626  000346  D032               	goto	l298
  4627  000348                     l300:
  4628                           
  4629                           ;CAN.c: 328:             tempCON = B0CON;
  4630  000348  CE20 F036          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4631                           
  4632                           ;CAN.c: 329:             break;
  4633  00034C  D02F               	goto	l298
  4634  00034E                     l301:
  4635                           
  4636                           ;CAN.c: 331:             tempCON = B1CON;
  4637  00034E  CE30 F036          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4638                           
  4639                           ;CAN.c: 332:             break;
  4640  000352  D02C               	goto	l298
  4641  000354                     l302:
  4642                           
  4643                           ;CAN.c: 334:             tempCON = B2CON;
  4644  000354  CE40 F036          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4645                           
  4646                           ;CAN.c: 335:             break;
  4647  000358  D029               	goto	l298
  4648  00035A                     l303:
  4649                           
  4650                           ;CAN.c: 337:             tempCON = B3CON;
  4651  00035A  CE50 F036          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4652                           
  4653                           ;CAN.c: 338:             break;
  4654  00035E  D026               	goto	l298
  4655  000360                     l304:
  4656                           
  4657                           ;CAN.c: 340:             tempCON = B4CON;
  4658  000360  CE60 F036          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4659                           
  4660                           ;CAN.c: 341:             break;
  4661  000364  D023               	goto	l298
  4662  000366                     l305:
  4663                           
  4664                           ;CAN.c: 343:             tempCON = B5CON;
  4665  000366  CE70 F036          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4666                           
  4667                           ;CAN.c: 344:             break;
  4668  00036A  D020               	goto	l298
  4669  00036C                     l4589:
  4670  00036C  5037               	movf	CAN_TakeFrame@k,w,c
  4671  00036E  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4672  000370  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4673                           
  4674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4675                           ; Switch size 1, requested type "simple"
  4676                           ; Number of cases is 1, Range of values is 0 to 0
  4677                           ; switch strategies available:
  4678                           ; Name         Instructions Cycles
  4679                           ; simple_byte            4     3 (average)
  4680                           ;	Chosen strategy is simple_byte
  4681  000372  5035               	movf	??_CAN_TakeFrame+1,w,c
  4682  000374  0A00               	xorlw	0	; case 0
  4683  000376  A4D8               	btfss	status,2,c
  4684  000378  D019               	goto	l298
  4685                           
  4686                           ; Switch size 1, requested type "simple"
  4687                           ; Number of cases is 8, Range of values is 0 to 7
  4688                           ; switch strategies available:
  4689                           ; Name         Instructions Cycles
  4690                           ; simple_byte           25    13 (average)
  4691                           ;	Chosen strategy is simple_byte
  4692  00037A  5034               	movf	??_CAN_TakeFrame,w,c
  4693  00037C  0A00               	xorlw	0	; case 0
  4694  00037E  B4D8               	btfsc	status,2,c
  4695  000380  D7DD               	goto	l297
  4696  000382  0A01               	xorlw	1	; case 1
  4697  000384  B4D8               	btfsc	status,2,c
  4698  000386  D7DD               	goto	l299
  4699  000388  0A03               	xorlw	3	; case 2
  4700  00038A  B4D8               	btfsc	status,2,c
  4701  00038C  D7DD               	goto	l300
  4702  00038E  0A01               	xorlw	1	; case 3
  4703  000390  B4D8               	btfsc	status,2,c
  4704  000392  D7DD               	goto	l301
  4705  000394  0A07               	xorlw	7	; case 4
  4706  000396  B4D8               	btfsc	status,2,c
  4707  000398  D7DD               	goto	l302
  4708  00039A  0A01               	xorlw	1	; case 5
  4709  00039C  B4D8               	btfsc	status,2,c
  4710  00039E  D7DD               	goto	l303
  4711  0003A0  0A03               	xorlw	3	; case 6
  4712  0003A2  B4D8               	btfsc	status,2,c
  4713  0003A4  D7DD               	goto	l304
  4714  0003A6  0A01               	xorlw	1	; case 7
  4715  0003A8  B4D8               	btfsc	status,2,c
  4716  0003AA  D7DD               	goto	l305
  4717  0003AC                     l298:
  4718                           
  4719                           ;CAN.c: 348:     if((tempCON & 0x80) > 0)
  4720  0003AC  AE36               	btfss	CAN_TakeFrame@tempCON,7,c
  4721  0003AE  D0A5               	goto	l4625
  4722                           
  4723                           ;CAN.c: 349:     {;CAN.c: 350:         message->buffer = RXB0CON & 0x1F;
  4724  0003B0  EE20 F003          	lfsr	2,3
  4725  0003B4  5032               	movf	CAN_TakeFrame@message,w,c
  4726  0003B6  26D9               	addwf	fsr2l,f,c
  4727  0003B8  5033               	movf	CAN_TakeFrame@message+1,w,c
  4728  0003BA  22DA               	addwfc	fsr2h,f,c
  4729  0003BC  5060               	movf	3936,w,c	;volatile
  4730  0003BE  0B1F               	andlw	31
  4731  0003C0  6EDF               	movwf	indf2,c
  4732                           
  4733                           ;CAN.c: 351:         message->id.v[0] = RXB0EIDL;
  4734  0003C2  EE20 F004          	lfsr	2,4
  4735  0003C6  5032               	movf	CAN_TakeFrame@message,w,c
  4736  0003C8  26D9               	addwf	fsr2l,f,c
  4737  0003CA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4738  0003CC  22DA               	addwfc	fsr2h,f,c
  4739  0003CE  CF64 FFDF          	movff	3940,indf2	;volatile
  4740                           
  4741                           ;CAN.c: 352:         message->id.v[1] = RXB0EIDH;
  4742  0003D2  EE20 F005          	lfsr	2,5
  4743  0003D6  5032               	movf	CAN_TakeFrame@message,w,c
  4744  0003D8  26D9               	addwf	fsr2l,f,c
  4745  0003DA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4746  0003DC  22DA               	addwfc	fsr2h,f,c
  4747  0003DE  CF63 FFDF          	movff	3939,indf2	;volatile
  4748                           
  4749                           ;CAN.c: 353:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4750  0003E2  EE20 F006          	lfsr	2,6
  4751  0003E6  5032               	movf	CAN_TakeFrame@message,w,c
  4752  0003E8  26D9               	addwf	fsr2l,f,c
  4753  0003EA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4754  0003EC  22DA               	addwfc	fsr2h,f,c
  4755  0003EE  CF62 F034          	movff	3938,??_CAN_TakeFrame	;volatile
  4756  0003F2  0E03               	movlw	3
  4757  0003F4  1634               	andwf	??_CAN_TakeFrame,f,c
  4758  0003F6  CF62 F02A          	movff	3938,___awdiv@dividend	;volatile
  4759  0003FA  6A2B               	clrf	___awdiv@dividend+1,c
  4760  0003FC  0E00               	movlw	0
  4761  0003FE  6E2D               	movwf	___awdiv@divisor+1,c
  4762  000400  0E08               	movlw	8
  4763  000402  6E2C               	movwf	___awdiv@divisor,c
  4764  000404  EC5B  F009         	call	___awdiv	;wreg free
  4765  000408  502A               	movf	?___awdiv,w,c
  4766  00040A  1034               	iorwf	??_CAN_TakeFrame,w,c
  4767  00040C  6EDF               	movwf	indf2,c
  4768                           
  4769                           ;CAN.c: 354:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4770  00040E  5061               	movf	3937,w,c	;volatile
  4771  000410  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4772  000412  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4773  000414  0E05               	movlw	5
  4774  000416                     u2905:
  4775  000416  90D8               	bcf	status,0,c
  4776  000418  3634               	rlcf	??_CAN_TakeFrame,f,c
  4777  00041A  3635               	rlcf	??_CAN_TakeFrame+1,f,c
  4778  00041C  2EE8               	decfsz	wreg,f,c
  4779  00041E  D7FB               	goto	u2905
  4780  000420  EE20 F006          	lfsr	2,6
  4781  000424  5032               	movf	CAN_TakeFrame@message,w,c
  4782  000426  26D9               	addwf	fsr2l,f,c
  4783  000428  5033               	movf	CAN_TakeFrame@message+1,w,c
  4784  00042A  22DA               	addwfc	fsr2h,f,c
  4785  00042C  5034               	movf	??_CAN_TakeFrame,w,c
  4786  00042E  12DE               	iorwf	postinc2,f,c
  4787  000430  5035               	movf	??_CAN_TakeFrame+1,w,c
  4788  000432  12DD               	iorwf	postdec2,f,c
  4789                           
  4790                           ;CAN.c: 355:         message->frame_type=0x03;
  4791  000434  EE20 F002          	lfsr	2,2
  4792  000438  5032               	movf	CAN_TakeFrame@message,w,c
  4793  00043A  26D9               	addwf	fsr2l,f,c
  4794  00043C  5033               	movf	CAN_TakeFrame@message+1,w,c
  4795  00043E  22DA               	addwfc	fsr2h,f,c
  4796  000440  0E03               	movlw	3
  4797  000442  6EDF               	movwf	indf2,c
  4798                           
  4799                           ;CAN.c: 359:         if(RXB0DLCbits.RXRTR == 0)
  4800  000444  BC65               	btfsc	3941,6,c	;volatile
  4801  000446  D068               	goto	l4631
  4802                           
  4803                           ;CAN.c: 360:         {;CAN.c: 361:             message->message_type = 0x01;
  4804  000448  EE20 F001          	lfsr	2,1
  4805  00044C  5032               	movf	CAN_TakeFrame@message,w,c
  4806  00044E  26D9               	addwf	fsr2l,f,c
  4807  000450  5033               	movf	CAN_TakeFrame@message+1,w,c
  4808  000452  22DA               	addwfc	fsr2h,f,c
  4809  000454  0E01               	movlw	1
  4810  000456  6EDF               	movwf	indf2,c
  4811                           
  4812                           ;CAN.c: 362:             message->data_length= RXB0DLC & 0x0F;
  4813  000458  EE20 F010          	lfsr	2,16
  4814  00045C  5032               	movf	CAN_TakeFrame@message,w,c
  4815  00045E  26D9               	addwf	fsr2l,f,c
  4816  000460  5033               	movf	CAN_TakeFrame@message+1,w,c
  4817  000462  22DA               	addwfc	fsr2h,f,c
  4818  000464  5065               	movf	3941,w,c	;volatile
  4819  000466  0B0F               	andlw	15
  4820  000468  6EDF               	movwf	indf2,c
  4821                           
  4822                           ;CAN.c: 363:             if(message->data_length > 8)
  4823  00046A  EE20 F010          	lfsr	2,16
  4824  00046E  5032               	movf	CAN_TakeFrame@message,w,c
  4825  000470  26D9               	addwf	fsr2l,f,c
  4826  000472  5033               	movf	CAN_TakeFrame@message+1,w,c
  4827  000474  22DA               	addwfc	fsr2h,f,c
  4828  000476  0E08               	movlw	8
  4829  000478  64DF               	cpfsgt	indf2,c
  4830  00047A  D041               	goto	l4629
  4831  00047C  D01E               	goto	l4623
  4832  00047E                     l4605:
  4833                           
  4834                           ;CAN.c: 369:                         RXB0CON = 0;
  4835  00047E  0E00               	movlw	0
  4836  000480  6E60               	movwf	3936,c	;volatile
  4837                           
  4838                           ;CAN.c: 370:                         break;
  4839  000482  D03B               	goto	l4625
  4840  000484                     l4607:
  4841                           
  4842                           ;CAN.c: 372:                         RXB1CON = 0;
  4843  000484  0E00               	movlw	0
  4844  000486  010F               	movlb	15	; () banked
  4845  000488  D00E               	goto	L2
  4846  00048A                     l4609:
  4847                           
  4848                           ;CAN.c: 375:                         B0CON = 0;
  4849  00048A  0E00               	movlw	0
  4850  00048C  010E               	movlb	14	; () banked
  4851  00048E  6F20               	movwf	32,b	;volatile
  4852                           
  4853                           ;CAN.c: 376:                         break;
  4854  000490  D034               	goto	l4625
  4855  000492                     l4611:
  4856                           
  4857                           ;CAN.c: 378:                         B1CON = 0;
  4858  000492  0E00               	movlw	0
  4859  000494  010E               	movlb	14	; () banked
  4860  000496  6F30               	movwf	48,b	;volatile
  4861                           
  4862                           ;CAN.c: 379:                         break;
  4863  000498  D030               	goto	l4625
  4864  00049A                     l4613:
  4865                           
  4866                           ;CAN.c: 381:                         B2CON = 0;
  4867  00049A  0E00               	movlw	0
  4868  00049C  010E               	movlb	14	; () banked
  4869  00049E  6F40               	movwf	64,b	;volatile
  4870                           
  4871                           ;CAN.c: 382:                         break;
  4872  0004A0  D02C               	goto	l4625
  4873  0004A2                     l4615:
  4874                           
  4875                           ;CAN.c: 384:                         B3CON = 0;
  4876  0004A2  0E00               	movlw	0
  4877  0004A4  010E               	movlb	14	; () banked
  4878  0004A6                     L2:
  4879  0004A6  6F50               	movwf	80,b	;volatile
  4880                           
  4881                           ;CAN.c: 385:                         break;
  4882  0004A8  D028               	goto	l4625
  4883  0004AA                     l4617:
  4884                           
  4885                           ;CAN.c: 387:                         B4CON = 0;
  4886  0004AA  0E00               	movlw	0
  4887  0004AC  010E               	movlb	14	; () banked
  4888  0004AE  6F60               	movwf	96,b	;volatile
  4889                           
  4890                           ;CAN.c: 388:                         break;
  4891  0004B0  D024               	goto	l4625
  4892  0004B2                     l4619:
  4893                           
  4894                           ;CAN.c: 390:                         B5CON = 0;
  4895  0004B2  0E00               	movlw	0
  4896  0004B4  010E               	movlb	14	; () banked
  4897  0004B6  6F70               	movwf	112,b	;volatile
  4898                           
  4899                           ;CAN.c: 391:                         break;
  4900  0004B8  D020               	goto	l4625
  4901  0004BA                     l4623:
  4902  0004BA  5037               	movf	CAN_TakeFrame@k,w,c
  4903  0004BC  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4904  0004BE  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4905                           
  4906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4907                           ; Switch size 1, requested type "simple"
  4908                           ; Number of cases is 1, Range of values is 0 to 0
  4909                           ; switch strategies available:
  4910                           ; Name         Instructions Cycles
  4911                           ; simple_byte            4     3 (average)
  4912                           ;	Chosen strategy is simple_byte
  4913  0004C0  5035               	movf	??_CAN_TakeFrame+1,w,c
  4914  0004C2  0A00               	xorlw	0	; case 0
  4915  0004C4  A4D8               	btfss	status,2,c
  4916  0004C6  D019               	goto	l4625
  4917                           
  4918                           ; Switch size 1, requested type "simple"
  4919                           ; Number of cases is 8, Range of values is 0 to 7
  4920                           ; switch strategies available:
  4921                           ; Name         Instructions Cycles
  4922                           ; simple_byte           25    13 (average)
  4923                           ;	Chosen strategy is simple_byte
  4924  0004C8  5034               	movf	??_CAN_TakeFrame,w,c
  4925  0004CA  0A00               	xorlw	0	; case 0
  4926  0004CC  B4D8               	btfsc	status,2,c
  4927  0004CE  D7D7               	goto	l4605
  4928  0004D0  0A01               	xorlw	1	; case 1
  4929  0004D2  B4D8               	btfsc	status,2,c
  4930  0004D4  D7D7               	goto	l4607
  4931  0004D6  0A03               	xorlw	3	; case 2
  4932  0004D8  B4D8               	btfsc	status,2,c
  4933  0004DA  D7D7               	goto	l4609
  4934  0004DC  0A01               	xorlw	1	; case 3
  4935  0004DE  B4D8               	btfsc	status,2,c
  4936  0004E0  D7D8               	goto	l4611
  4937  0004E2  0A07               	xorlw	7	; case 4
  4938  0004E4  B4D8               	btfsc	status,2,c
  4939  0004E6  D7D9               	goto	l4613
  4940  0004E8  0A01               	xorlw	1	; case 5
  4941  0004EA  B4D8               	btfsc	status,2,c
  4942  0004EC  D7DA               	goto	l4615
  4943  0004EE  0A03               	xorlw	3	; case 6
  4944  0004F0  B4D8               	btfsc	status,2,c
  4945  0004F2  D7DB               	goto	l4617
  4946  0004F4  0A01               	xorlw	1	; case 7
  4947  0004F6  B4D8               	btfsc	status,2,c
  4948  0004F8  D7DC               	goto	l4619
  4949  0004FA                     l4625:
  4950                           
  4951                           ;CAN.c: 393:                 return FALSE;
  4952  0004FA  0E00               	movlw	0
  4953  0004FC  0012               	return	
  4954  0004FE                     l4629:
  4955                           
  4956                           ;CAN.c: 395:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4957  0004FE  0E08               	movlw	8
  4958  000500  2432               	addwf	CAN_TakeFrame@message,w,c
  4959  000502  6E2A               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4960  000504  0E00               	movlw	0
  4961  000506  2033               	addwfc	CAN_TakeFrame@message+1,w,c
  4962  000508  6E2B               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4963  00050A  0E66               	movlw	102
  4964  00050C  6E2C               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4965  00050E  0E0F               	movlw	15
  4966  000510  6E2D               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4967  000512  EC5E  F00D         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4968                           
  4969                           ;CAN.c: 396:         }
  4970  000516  D027               	goto	l4651
  4971  000518                     l4631:
  4972                           
  4973                           ;CAN.c: 399:         {;CAN.c: 400:             message->message_type=0x02;
  4974  000518  EE20 F001          	lfsr	2,1
  4975  00051C  5032               	movf	CAN_TakeFrame@message,w,c
  4976  00051E  26D9               	addwf	fsr2l,f,c
  4977  000520  5033               	movf	CAN_TakeFrame@message+1,w,c
  4978  000522  22DA               	addwfc	fsr2h,f,c
  4979  000524  0E02               	movlw	2
  4980  000526  6EDF               	movwf	indf2,c
  4981  000528  D01E               	goto	l4651
  4982  00052A                     l4633:
  4983                           
  4984                           ;CAN.c: 406:                 RXB0CON = 0;
  4985  00052A  0E00               	movlw	0
  4986  00052C  6E60               	movwf	3936,c	;volatile
  4987                           
  4988                           ;CAN.c: 407:                 break;
  4989  00052E  D03B               	goto	l4653
  4990  000530                     l4635:
  4991                           
  4992                           ;CAN.c: 409:                 RXB1CON = 0;
  4993  000530  0E00               	movlw	0
  4994  000532  010F               	movlb	15	; () banked
  4995  000534  D00E               	goto	L3
  4996  000536                     l4637:
  4997                           
  4998                           ;CAN.c: 412:                 B0CON = 0;
  4999  000536  0E00               	movlw	0
  5000  000538  010E               	movlb	14	; () banked
  5001  00053A  6F20               	movwf	32,b	;volatile
  5002                           
  5003                           ;CAN.c: 413:                 break;
  5004  00053C  D034               	goto	l4653
  5005  00053E                     l4639:
  5006                           
  5007                           ;CAN.c: 415:                 B1CON = 0;
  5008  00053E  0E00               	movlw	0
  5009  000540  010E               	movlb	14	; () banked
  5010  000542  6F30               	movwf	48,b	;volatile
  5011                           
  5012                           ;CAN.c: 416:                 break;
  5013  000544  D030               	goto	l4653
  5014  000546                     l4641:
  5015                           
  5016                           ;CAN.c: 418:                 B2CON = 0;
  5017  000546  0E00               	movlw	0
  5018  000548  010E               	movlb	14	; () banked
  5019  00054A  6F40               	movwf	64,b	;volatile
  5020                           
  5021                           ;CAN.c: 419:                 break;
  5022  00054C  D02C               	goto	l4653
  5023  00054E                     l4643:
  5024                           
  5025                           ;CAN.c: 421:                 B3CON = 0;
  5026  00054E  0E00               	movlw	0
  5027  000550  010E               	movlb	14	; () banked
  5028  000552                     L3:
  5029  000552  6F50               	movwf	80,b	;volatile
  5030                           
  5031                           ;CAN.c: 422:                 break;
  5032  000554  D028               	goto	l4653
  5033  000556                     l4645:
  5034                           
  5035                           ;CAN.c: 424:                 B4CON = 0;
  5036  000556  0E00               	movlw	0
  5037  000558  010E               	movlb	14	; () banked
  5038  00055A  6F60               	movwf	96,b	;volatile
  5039                           
  5040                           ;CAN.c: 425:                 break;
  5041  00055C  D024               	goto	l4653
  5042  00055E                     l4647:
  5043                           
  5044                           ;CAN.c: 427:                 B5CON = 0;
  5045  00055E  0E00               	movlw	0
  5046  000560  010E               	movlb	14	; () banked
  5047  000562  6F70               	movwf	112,b	;volatile
  5048                           
  5049                           ;CAN.c: 428:                 break;
  5050  000564  D020               	goto	l4653
  5051  000566                     l4651:
  5052  000566  5037               	movf	CAN_TakeFrame@k,w,c
  5053  000568  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  5054  00056A  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  5055                           
  5056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5057                           ; Switch size 1, requested type "simple"
  5058                           ; Number of cases is 1, Range of values is 0 to 0
  5059                           ; switch strategies available:
  5060                           ; Name         Instructions Cycles
  5061                           ; simple_byte            4     3 (average)
  5062                           ;	Chosen strategy is simple_byte
  5063  00056C  5035               	movf	??_CAN_TakeFrame+1,w,c
  5064  00056E  0A00               	xorlw	0	; case 0
  5065  000570  A4D8               	btfss	status,2,c
  5066  000572  D019               	goto	l4653
  5067                           
  5068                           ; Switch size 1, requested type "simple"
  5069                           ; Number of cases is 8, Range of values is 0 to 7
  5070                           ; switch strategies available:
  5071                           ; Name         Instructions Cycles
  5072                           ; simple_byte           25    13 (average)
  5073                           ;	Chosen strategy is simple_byte
  5074  000574  5034               	movf	??_CAN_TakeFrame,w,c
  5075  000576  0A00               	xorlw	0	; case 0
  5076  000578  B4D8               	btfsc	status,2,c
  5077  00057A  D7D7               	goto	l4633
  5078  00057C  0A01               	xorlw	1	; case 1
  5079  00057E  B4D8               	btfsc	status,2,c
  5080  000580  D7D7               	goto	l4635
  5081  000582  0A03               	xorlw	3	; case 2
  5082  000584  B4D8               	btfsc	status,2,c
  5083  000586  D7D7               	goto	l4637
  5084  000588  0A01               	xorlw	1	; case 3
  5085  00058A  B4D8               	btfsc	status,2,c
  5086  00058C  D7D8               	goto	l4639
  5087  00058E  0A07               	xorlw	7	; case 4
  5088  000590  B4D8               	btfsc	status,2,c
  5089  000592  D7D9               	goto	l4641
  5090  000594  0A01               	xorlw	1	; case 5
  5091  000596  B4D8               	btfsc	status,2,c
  5092  000598  D7DA               	goto	l4643
  5093  00059A  0A03               	xorlw	3	; case 6
  5094  00059C  B4D8               	btfsc	status,2,c
  5095  00059E  D7DB               	goto	l4645
  5096  0005A0  0A01               	xorlw	1	; case 7
  5097  0005A2  B4D8               	btfsc	status,2,c
  5098  0005A4  D7DC               	goto	l4647
  5099  0005A6                     l4653:
  5100                           
  5101                           ;CAN.c: 430:         return TRUE;
  5102  0005A6  0E01               	movlw	1
  5103  0005A8  0012               	return		;funcret
  5104  0005AA                     __end_of_CAN_TakeFrame:
  5105                           	opt callstack 0
  5106                           
  5107 ;; *************** function ___awdiv *****************
  5108 ;; Defined at:
  5109 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  dividend        2    5[COMRAM] int 
  5112 ;;  divisor         2    7[COMRAM] int 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  quotient        2   11[COMRAM] int 
  5115 ;;  sign            1   10[COMRAM] unsigned char 
  5116 ;;  counter         1    9[COMRAM] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  2    5[COMRAM] int 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5127 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;Total ram usage:        8 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    3
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_CAN_TakeFrame
  5137 ;;		_FRAME_HandleCanFrame
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text35
  5142  0012B6                     __ptext35:
  5143                           	opt callstack 0
  5144  0012B6                     ___awdiv:
  5145                           	opt callstack 25
  5146                           
  5147                           ;incstack = 0
  5148  0012B6  0E00               	movlw	0
  5149  0012B8  6E2F               	movwf	___awdiv@sign,c
  5150  0012BA  AE2D               	btfss	___awdiv@divisor+1,7,c
  5151  0012BC  D006               	goto	l4533
  5152  0012BE  6C2C               	negf	___awdiv@divisor,c
  5153  0012C0  1E2D               	comf	___awdiv@divisor+1,f,c
  5154  0012C2  B0D8               	btfsc	status,0,c
  5155  0012C4  2A2D               	incf	___awdiv@divisor+1,f,c
  5156  0012C6  0E01               	movlw	1
  5157  0012C8  6E2F               	movwf	___awdiv@sign,c
  5158  0012CA                     l4533:
  5159  0012CA  AE2B               	btfss	___awdiv@dividend+1,7,c
  5160  0012CC  D006               	goto	l4539
  5161  0012CE  6C2A               	negf	___awdiv@dividend,c
  5162  0012D0  1E2B               	comf	___awdiv@dividend+1,f,c
  5163  0012D2  B0D8               	btfsc	status,0,c
  5164  0012D4  2A2B               	incf	___awdiv@dividend+1,f,c
  5165  0012D6  0E01               	movlw	1
  5166  0012D8  1A2F               	xorwf	___awdiv@sign,f,c
  5167  0012DA                     l4539:
  5168  0012DA  0E00               	movlw	0
  5169  0012DC  6E31               	movwf	___awdiv@quotient+1,c
  5170  0012DE  0E00               	movlw	0
  5171  0012E0  6E30               	movwf	___awdiv@quotient,c
  5172  0012E2  502C               	movf	___awdiv@divisor,w,c
  5173  0012E4  102D               	iorwf	___awdiv@divisor+1,w,c
  5174  0012E6  B4D8               	btfsc	status,2,c
  5175  0012E8  D01C               	goto	l4561
  5176  0012EA  0E01               	movlw	1
  5177  0012EC  6E2E               	movwf	___awdiv@counter,c
  5178  0012EE  D004               	goto	l4547
  5179  0012F0                     l4545:
  5180  0012F0  90D8               	bcf	status,0,c
  5181  0012F2  362C               	rlcf	___awdiv@divisor,f,c
  5182  0012F4  362D               	rlcf	___awdiv@divisor+1,f,c
  5183  0012F6  2A2E               	incf	___awdiv@counter,f,c
  5184  0012F8                     l4547:
  5185  0012F8  AE2D               	btfss	___awdiv@divisor+1,7,c
  5186  0012FA  D7FA               	goto	l4545
  5187  0012FC                     u2840:
  5188  0012FC  90D8               	bcf	status,0,c
  5189  0012FE  3630               	rlcf	___awdiv@quotient,f,c
  5190  001300  3631               	rlcf	___awdiv@quotient+1,f,c
  5191  001302  502C               	movf	___awdiv@divisor,w,c
  5192  001304  5C2A               	subwf	___awdiv@dividend,w,c
  5193  001306  502D               	movf	___awdiv@divisor+1,w,c
  5194  001308  582B               	subwfb	___awdiv@dividend+1,w,c
  5195  00130A  A0D8               	btfss	status,0,c
  5196  00130C  D005               	goto	l4557
  5197  00130E  502C               	movf	___awdiv@divisor,w,c
  5198  001310  5E2A               	subwf	___awdiv@dividend,f,c
  5199  001312  502D               	movf	___awdiv@divisor+1,w,c
  5200  001314  5A2B               	subwfb	___awdiv@dividend+1,f,c
  5201  001316  8030               	bsf	___awdiv@quotient,0,c
  5202  001318                     l4557:
  5203  001318  90D8               	bcf	status,0,c
  5204  00131A  322D               	rrcf	___awdiv@divisor+1,f,c
  5205  00131C  322C               	rrcf	___awdiv@divisor,f,c
  5206  00131E  2E2E               	decfsz	___awdiv@counter,f,c
  5207  001320  D7ED               	goto	u2840
  5208  001322                     l4561:
  5209  001322  502F               	movf	___awdiv@sign,w,c
  5210  001324  B4D8               	btfsc	status,2,c
  5211  001326  D004               	goto	l4565
  5212  001328  6C30               	negf	___awdiv@quotient,c
  5213  00132A  1E31               	comf	___awdiv@quotient+1,f,c
  5214  00132C  B0D8               	btfsc	status,0,c
  5215  00132E  2A31               	incf	___awdiv@quotient+1,f,c
  5216  001330                     l4565:
  5217  001330  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  5218  001334  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  5219  001338  0012               	return		;funcret
  5220  00133A                     __end_of___awdiv:
  5221                           	opt callstack 0
  5222                           
  5223 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5224 ;; Defined at:
  5225 ;;		line 232 in file "CAN.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5228 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5229 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5230 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;  i               1    9[COMRAM] unsigned char 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      void 
  5235 ;; Registers used:
  5236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5245 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5246 ;;Total ram usage:        5 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    3
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_CAN_SendFrame
  5253 ;;		_CAN_TakeFrame
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text36
  5258  001ABC                     __ptext36:
  5259                           	opt callstack 0
  5260  001ABC                     _CAN_MoveBuffIntoFrame:
  5261                           	opt callstack 24
  5262                           
  5263                           ;CAN.c: 232: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 233: {;CAN.c
      +                          : 234:     BYTE i;;CAN.c: 235:     for(i=0; i<8; ++i)
  5264                           
  5265                           ;incstack = 0
  5266  001ABC  0E00               	movlw	0
  5267  001ABE  6E2E               	movwf	CAN_MoveBuffIntoFrame@i,c
  5268  001AC0                     l4057:
  5269                           
  5270                           ;CAN.c: 236:     {;CAN.c: 237:         Ram[i]=(*(Buf+i));
  5271  001AC0  502E               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5272  001AC2  242C               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5273  001AC4  6ED9               	movwf	fsr2l,c
  5274  001AC6  0E00               	movlw	0
  5275  001AC8  202D               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5276  001ACA  6EDA               	movwf	fsr2h,c
  5277  001ACC  502E               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5278  001ACE  242A               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5279  001AD0  6EE1               	movwf	fsr1l,c
  5280  001AD2  0E00               	movlw	0
  5281  001AD4  202B               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5282  001AD6  6EE2               	movwf	fsr1h,c
  5283  001AD8  CFDF FFE7          	movff	indf2,indf1
  5284                           
  5285                           ;CAN.c: 238:     }
  5286  001ADC  2A2E               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5287  001ADE  0E07               	movlw	7
  5288  001AE0  642E               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5289  001AE2  D7EE               	goto	l4057
  5290  001AE4  0012               	return	
  5291  001AE6                     __end_of_CAN_MoveBuffIntoFrame:
  5292                           	opt callstack 0
  5293                           
  5294 ;; *************** function _TMR1_Update_flag_Set *****************
  5295 ;; Defined at:
  5296 ;;		line 32 in file "TMR1.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  a               2    5[COMRAM] unsigned int 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		None
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5310 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;Total ram usage:        2 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    3
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text37
  5325  001C36                     __ptext37:
  5326                           	opt callstack 0
  5327  001C36                     _TMR1_Update_flag_Set:
  5328                           	opt callstack 27
  5329                           
  5330                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5331                           
  5332                           ;incstack = 0
  5333  001C36  C02A  F009         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5334  001C3A  C02B  F00A         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5335  001C3E  0012               	return		;funcret
  5336  001C40                     __end_of_TMR1_Update_flag_Set:
  5337                           	opt callstack 0
  5338                           
  5339 ;; *************** function _TMR1_Update_flag_Get *****************
  5340 ;; Defined at:
  5341 ;;		line 47 in file "TMR1.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  2    5[COMRAM] unsigned int 
  5348 ;; Registers used:
  5349 ;;		None
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;Total ram usage:        2 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    3
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_main
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text38
  5370  001C40                     __ptext38:
  5371                           	opt callstack 0
  5372  001C40                     _TMR1_Update_flag_Get:
  5373                           	opt callstack 27
  5374                           
  5375                           ;TMR1.c: 49:     return TMR1_Update_flag;
  5376                           
  5377                           ;incstack = 0
  5378  001C40  C009  F02A         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5379  001C44  C00A  F02B         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5380  001C48  0012               	return		;funcret
  5381  001C4A                     __end_of_TMR1_Update_flag_Get:
  5382                           	opt callstack 0
  5383                           
  5384 ;; *************** function _LED_Update *****************
  5385 ;; Defined at:
  5386 ;;		line 105 in file "LED.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      unsigned char 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;Total ram usage:        0 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    5
  5407 ;; This function calls:
  5408 ;;		_LED_Control
  5409 ;;		_LED_Left
  5410 ;;		_LED_Light_Pos
  5411 ;;		_LED_Right
  5412 ;; This function is called by:
  5413 ;;		_main
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text39
  5418  0013B6                     __ptext39:
  5419                           	opt callstack 0
  5420  0013B6                     _LED_Update:
  5421                           	opt callstack 25
  5422                           
  5423                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  5424                           
  5425                           ;incstack = 0
  5426  0013B6  5012               	movf	_LOCK,w,c
  5427  0013B8  A4D8               	btfss	status,2,c
  5428  0013BA  D013               	goto	l4785
  5429                           
  5430                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  5431  0013BC  0E00               	movlw	0
  5432  0013BE  6E2B               	movwf	LED_Control@diode+1,c
  5433  0013C0  0E00               	movlw	0
  5434  0013C2  6E2A               	movwf	LED_Control@diode,c
  5435  0013C4  0E00               	movlw	0
  5436  0013C6  EC4A  F005         	call	_LED_Control
  5437                           
  5438                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5439  0013CA  C043  F031         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5440  0013CE  C044  F032         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5441  0013D2  C047  F033         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5442  0013D6  C048  F034         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5443  0013DA  5049               	movf	LED_Update@Green,w,c
  5444  0013DC  EC69  F008         	call	_LED_Light_Pos
  5445                           
  5446                           ;LED.c: 117:     }
  5447  0013E0  D012               	goto	l392
  5448  0013E2                     l4785:
  5449                           
  5450                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  5451  0013E2  0E00               	movlw	0
  5452  0013E4  6E2B               	movwf	LED_Control@diode+1,c
  5453  0013E6  0E00               	movlw	0
  5454  0013E8  6E2A               	movwf	LED_Control@diode,c
  5455  0013EA  5049               	movf	LED_Update@Green,w,c
  5456  0013EC  EC4A  F005         	call	_LED_Control
  5457                           
  5458                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5459  0013F0  C045  F031         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5460  0013F4  C046  F032         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5461  0013F8  C047  F033         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5462  0013FC  C048  F034         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5463  001400  0E00               	movlw	0
  5464  001402  EC69  F008         	call	_LED_Light_Pos
  5465  001406                     l392:
  5466                           
  5467                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  5468  001406  C045  F02A         	movff	LED_Update@pos1,LED_Right@a
  5469  00140A  C046  F02B         	movff	LED_Update@pos1+1,LED_Right@a+1
  5470  00140E  EC25  F00C         	call	_LED_Right	;wreg free
  5471  001412  C02A  F045         	movff	?_LED_Right,LED_Update@pos1
  5472  001416  C02B  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  5473                           
  5474                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  5475  00141A  C043  F02A         	movff	LED_Update@pos2,LED_Left@a
  5476  00141E  C044  F02B         	movff	LED_Update@pos2+1,LED_Left@a+1
  5477  001422  EC4B  F00C         	call	_LED_Left	;wreg free
  5478  001426  C02A  F043         	movff	?_LED_Left,LED_Update@pos2
  5479  00142A  C02B  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  5480  00142E  0012               	return		;funcret
  5481  001430                     __end_of_LED_Update:
  5482                           	opt callstack 0
  5483                           
  5484 ;; *************** function _LED_Light_Pos *****************
  5485 ;; Defined at:
  5486 ;;		line 196 in file "LED.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  color           1    wreg     enum E10644
  5489 ;;  pos             2   12[COMRAM] unsigned int 
  5490 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  color           1   16[COMRAM] enum E10644
  5493 ;;  flage           2   21[COMRAM] unsigned int 
  5494 ;;  pos2            2   19[COMRAM] unsigned int 
  5495 ;;  LED_array       2   17[COMRAM] unsigned int 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  2   12[COMRAM] unsigned int 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5506 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;Total ram usage:       11 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    4
  5512 ;; This function calls:
  5513 ;;		_LED_Control
  5514 ;;		_LED_Left
  5515 ;;		_LED_Right
  5516 ;;		___lwdiv
  5517 ;; This function is called by:
  5518 ;;		_LED_Update
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text40
  5523  0010D2                     __ptext40:
  5524                           	opt callstack 0
  5525  0010D2                     _LED_Light_Pos:
  5526                           	opt callstack 25
  5527                           
  5528                           ;incstack = 0
  5529                           ;LED_Light_Pos@color stored from wreg
  5530  0010D2  6E35               	movwf	LED_Light_Pos@color,c
  5531                           
  5532                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  5533  0010D4  C031  F038         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5534  0010D8  C032  F039         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5535                           
  5536                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  5537  0010DC  0E00               	movlw	0
  5538  0010DE  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5539  0010E0  0E00               	movlw	0
  5540  0010E2  6E36               	movwf	LED_Light_Pos@LED_array,c
  5541                           
  5542                           ;LED.c: 200:     UINT flage = fulfillment/10;
  5543  0010E4  C033  F02A         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5544  0010E8  C034  F02B         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5545  0010EC  0E00               	movlw	0
  5546  0010EE  6E2D               	movwf	___lwdiv@divisor+1,c
  5547  0010F0  0E0A               	movlw	10
  5548  0010F2  6E2C               	movwf	___lwdiv@divisor,c
  5549  0010F4  ECAF  F00B         	call	___lwdiv	;wreg free
  5550  0010F8  C02A  F03A         	movff	?___lwdiv,LED_Light_Pos@flage
  5551  0010FC  C02B  F03B         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5552                           
  5553                           ;LED.c: 201:     if(color == RED)
  5554  001100  5035               	movf	LED_Light_Pos@color,w,c
  5555  001102  B4D8               	btfsc	status,2,c
  5556  001104  D017               	goto	l4691
  5557  001106  D031               	goto	l4699
  5558  001108                     l4685:
  5559                           
  5560                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5561  001108  5036               	movf	LED_Light_Pos@LED_array,w,c
  5562  00110A  1038               	iorwf	LED_Light_Pos@pos2,w,c
  5563  00110C  6E36               	movwf	LED_Light_Pos@LED_array,c
  5564  00110E  5037               	movf	LED_Light_Pos@LED_array+1,w,c
  5565  001110  1039               	iorwf	LED_Light_Pos@pos2+1,w,c
  5566  001112  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5567                           
  5568                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5569  001114  C038  F02A         	movff	LED_Light_Pos@pos2,LED_Left@a
  5570  001118  C039  F02B         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5571  00111C  EC4B  F00C         	call	_LED_Left	;wreg free
  5572  001120  C02A  F038         	movff	?_LED_Left,LED_Light_Pos@pos2
  5573  001124  C02B  F039         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5574                           
  5575                           ;LED.c: 207:             flage = flage - 1;
  5576  001128  0EFF               	movlw	255
  5577  00112A  243A               	addwf	LED_Light_Pos@flage,w,c
  5578  00112C  6E3A               	movwf	LED_Light_Pos@flage,c
  5579  00112E  0EFF               	movlw	255
  5580  001130  203B               	addwfc	LED_Light_Pos@flage+1,w,c
  5581  001132  6E3B               	movwf	LED_Light_Pos@flage+1,c
  5582  001134                     l4691:
  5583                           
  5584                           ;LED.c: 203:         while(flage>0)
  5585  001134  503A               	movf	LED_Light_Pos@flage,w,c
  5586  001136  103B               	iorwf	LED_Light_Pos@flage+1,w,c
  5587  001138  B4D8               	btfsc	status,2,c
  5588  00113A  D01B               	goto	u2950
  5589  00113C  D7E5               	goto	l4685
  5590  00113E                     l4693:
  5591                           
  5592                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5593  00113E  5036               	movf	LED_Light_Pos@LED_array,w,c
  5594  001140  1038               	iorwf	LED_Light_Pos@pos2,w,c
  5595  001142  6E36               	movwf	LED_Light_Pos@LED_array,c
  5596  001144  5037               	movf	LED_Light_Pos@LED_array+1,w,c
  5597  001146  1039               	iorwf	LED_Light_Pos@pos2+1,w,c
  5598  001148  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5599                           
  5600                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5601  00114A  C038  F02A         	movff	LED_Light_Pos@pos2,LED_Right@a
  5602  00114E  C039  F02B         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5603  001152  EC25  F00C         	call	_LED_Right	;wreg free
  5604  001156  C02A  F038         	movff	?_LED_Right,LED_Light_Pos@pos2
  5605  00115A  C02B  F039         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5606                           
  5607                           ;LED.c: 216:             flage = flage - 1;
  5608  00115E  0EFF               	movlw	255
  5609  001160  243A               	addwf	LED_Light_Pos@flage,w,c
  5610  001162  6E3A               	movwf	LED_Light_Pos@flage,c
  5611  001164  0EFF               	movlw	255
  5612  001166  203B               	addwfc	LED_Light_Pos@flage+1,w,c
  5613  001168  6E3B               	movwf	LED_Light_Pos@flage+1,c
  5614  00116A                     l4699:
  5615                           
  5616                           ;LED.c: 212:         while(flage>0)
  5617  00116A  503A               	movf	LED_Light_Pos@flage,w,c
  5618  00116C  103B               	iorwf	LED_Light_Pos@flage+1,w,c
  5619  00116E  A4D8               	btfss	status,2,c
  5620  001170  D7E6               	goto	l4693
  5621  001172                     u2950:
  5622                           
  5623                           ;LED.c: 219:     LED_Control(color, LED_array);
  5624  001172  C036  F02A         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5625  001176  C037  F02B         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5626  00117A  5035               	movf	LED_Light_Pos@color,w,c
  5627  00117C  EC4A  F005         	call	_LED_Control
  5628  001180  0012               	return		;funcret
  5629  001182                     __end_of_LED_Light_Pos:
  5630                           	opt callstack 0
  5631                           
  5632 ;; *************** function ___lwdiv *****************
  5633 ;; Defined at:
  5634 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  dividend        2    5[COMRAM] unsigned int 
  5637 ;;  divisor         2    7[COMRAM] unsigned int 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  quotient        2   10[COMRAM] unsigned int 
  5640 ;;  counter         1    9[COMRAM] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2    5[COMRAM] unsigned int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;Total ram usage:        7 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    3
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_LED_Light_Pos
  5661 ;;		_FRAME_Plot
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text41
  5666  00175E                     __ptext41:
  5667                           	opt callstack 0
  5668  00175E                     ___lwdiv:
  5669                           	opt callstack 24
  5670                           
  5671                           ;incstack = 0
  5672  00175E  0E00               	movlw	0
  5673  001760  6E30               	movwf	___lwdiv@quotient+1,c
  5674  001762  0E00               	movlw	0
  5675  001764  6E2F               	movwf	___lwdiv@quotient,c
  5676  001766  502C               	movf	___lwdiv@divisor,w,c
  5677  001768  102D               	iorwf	___lwdiv@divisor+1,w,c
  5678  00176A  B4D8               	btfsc	status,2,c
  5679  00176C  D01C               	goto	l1459
  5680  00176E  0E01               	movlw	1
  5681  001770  6E2E               	movwf	___lwdiv@counter,c
  5682  001772  D004               	goto	l4291
  5683  001774                     l4289:
  5684  001774  90D8               	bcf	status,0,c
  5685  001776  362C               	rlcf	___lwdiv@divisor,f,c
  5686  001778  362D               	rlcf	___lwdiv@divisor+1,f,c
  5687  00177A  2A2E               	incf	___lwdiv@counter,f,c
  5688  00177C                     l4291:
  5689  00177C  AE2D               	btfss	___lwdiv@divisor+1,7,c
  5690  00177E  D7FA               	goto	l4289
  5691  001780                     u2510:
  5692  001780  90D8               	bcf	status,0,c
  5693  001782  362F               	rlcf	___lwdiv@quotient,f,c
  5694  001784  3630               	rlcf	___lwdiv@quotient+1,f,c
  5695  001786  502C               	movf	___lwdiv@divisor,w,c
  5696  001788  5C2A               	subwf	___lwdiv@dividend,w,c
  5697  00178A  502D               	movf	___lwdiv@divisor+1,w,c
  5698  00178C  582B               	subwfb	___lwdiv@dividend+1,w,c
  5699  00178E  A0D8               	btfss	status,0,c
  5700  001790  D005               	goto	l4301
  5701  001792  502C               	movf	___lwdiv@divisor,w,c
  5702  001794  5E2A               	subwf	___lwdiv@dividend,f,c
  5703  001796  502D               	movf	___lwdiv@divisor+1,w,c
  5704  001798  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  5705  00179A  802F               	bsf	___lwdiv@quotient,0,c
  5706  00179C                     l4301:
  5707  00179C  90D8               	bcf	status,0,c
  5708  00179E  322D               	rrcf	___lwdiv@divisor+1,f,c
  5709  0017A0  322C               	rrcf	___lwdiv@divisor,f,c
  5710  0017A2  2E2E               	decfsz	___lwdiv@counter,f,c
  5711  0017A4  D7ED               	goto	u2510
  5712  0017A6                     l1459:
  5713  0017A6  C02F  F02A         	movff	___lwdiv@quotient,?___lwdiv
  5714  0017AA  C030  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5715  0017AE  0012               	return		;funcret
  5716  0017B0                     __end_of___lwdiv:
  5717                           	opt callstack 0
  5718                           
  5719 ;; *************** function _LED_Right *****************
  5720 ;; Defined at:
  5721 ;;		line 140 in file "LED.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  a               2    5[COMRAM] unsigned int 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  b               2    9[COMRAM] unsigned int 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  2    5[COMRAM] unsigned int 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;Total ram usage:        6 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    3
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_LED_Update
  5746 ;;		_LED_Light_Pos
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text42
  5751  00184A                     __ptext42:
  5752                           	opt callstack 0
  5753  00184A                     _LED_Right:
  5754                           	opt callstack 26
  5755                           
  5756                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5757                           
  5758                           ;incstack = 0
  5759  00184A  A02A               	btfss	LED_Right@a,0,c
  5760  00184C  D018               	goto	l3259
  5761                           
  5762                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5763  00184E  0EFE               	movlw	254
  5764  001850  142A               	andwf	LED_Right@a,w,c
  5765  001852  6E2E               	movwf	LED_Right@b,c
  5766  001854  0E03               	movlw	3
  5767  001856  142B               	andwf	LED_Right@a+1,w,c
  5768  001858  6E2F               	movwf	LED_Right@b+1,c
  5769                           
  5770                           ;LED.c: 145:         b = b >> 1;
  5771  00185A  90D8               	bcf	status,0,c
  5772  00185C  302F               	rrcf	LED_Right@b+1,w,c
  5773  00185E  6E2C               	movwf	??_LED_Right& (0+255),c
  5774  001860  302E               	rrcf	LED_Right@b,w,c
  5775  001862  6E2E               	movwf	LED_Right@b,c
  5776  001864  C02C  F02F         	movff	??_LED_Right,LED_Right@b+1
  5777                           
  5778                           ;LED.c: 146:         b = b | 0b1000000000;
  5779  001868  0E00               	movlw	0
  5780  00186A  102E               	iorwf	LED_Right@b,w,c
  5781  00186C  6E2E               	movwf	LED_Right@b,c
  5782  00186E  0E02               	movlw	2
  5783  001870  102F               	iorwf	LED_Right@b+1,w,c
  5784  001872  6E2F               	movwf	LED_Right@b+1,c
  5785                           
  5786                           ;LED.c: 147:         return b;
  5787  001874  C02E  F02A         	movff	LED_Right@b,?_LED_Right
  5788  001878  C02F  F02B         	movff	LED_Right@b+1,?_LED_Right+1
  5789  00187C  0012               	return	
  5790  00187E                     l3259:
  5791                           
  5792                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5793  00187E  90D8               	bcf	status,0,c
  5794  001880  302B               	rrcf	LED_Right@a+1,w,c
  5795  001882  6E2C               	movwf	??_LED_Right& (0+255),c
  5796  001884  302A               	rrcf	LED_Right@a,w,c
  5797  001886  6E2A               	movwf	LED_Right@a,c
  5798  001888  C02C  F02B         	movff	??_LED_Right,LED_Right@a+1
  5799                           
  5800                           ;LED.c: 152:         return a;
  5801  00188C  C02A  F02A         	movff	LED_Right@a,?_LED_Right
  5802  001890  C02B  F02B         	movff	LED_Right@a+1,?_LED_Right+1
  5803  001894  0012               	return		;funcret
  5804  001896                     __end_of_LED_Right:
  5805                           	opt callstack 0
  5806                           
  5807 ;; *************** function _LED_Left *****************
  5808 ;; Defined at:
  5809 ;;		line 167 in file "LED.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  a               2    5[COMRAM] unsigned int 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  b               2    7[COMRAM] unsigned int 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  2    5[COMRAM] unsigned int 
  5816 ;; Registers used:
  5817 ;;		wreg, status,2, status,0
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;Total ram usage:        4 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    3
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		_LED_Update
  5834 ;;		_LED_Light_Pos
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text43
  5839  001896                     __ptext43:
  5840                           	opt callstack 0
  5841  001896                     _LED_Left:
  5842                           	opt callstack 25
  5843                           
  5844                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5845                           
  5846                           ;incstack = 0
  5847  001896  A22B               	btfss	LED_Left@a+1,1,c
  5848  001898  D015               	goto	l3275
  5849                           
  5850                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5851  00189A  0EFF               	movlw	255
  5852  00189C  142A               	andwf	LED_Left@a,w,c
  5853  00189E  6E2C               	movwf	LED_Left@b,c
  5854  0018A0  0E01               	movlw	1
  5855  0018A2  142B               	andwf	LED_Left@a+1,w,c
  5856  0018A4  6E2D               	movwf	LED_Left@b+1,c
  5857                           
  5858                           ;LED.c: 172:         b = b << 1;
  5859  0018A6  90D8               	bcf	status,0,c
  5860  0018A8  342C               	rlcf	LED_Left@b,w,c
  5861  0018AA  6E2C               	movwf	LED_Left@b,c
  5862  0018AC  342D               	rlcf	LED_Left@b+1,w,c
  5863  0018AE  6E2D               	movwf	LED_Left@b+1,c
  5864                           
  5865                           ;LED.c: 173:         b = b | 0b0000000001;
  5866  0018B0  0E01               	movlw	1
  5867  0018B2  102C               	iorwf	LED_Left@b,w,c
  5868  0018B4  6E2C               	movwf	LED_Left@b,c
  5869  0018B6  502D               	movf	LED_Left@b+1,w,c
  5870  0018B8  6E2D               	movwf	LED_Left@b+1,c
  5871                           
  5872                           ;LED.c: 174:         return b;
  5873  0018BA  C02C  F02A         	movff	LED_Left@b,?_LED_Left
  5874  0018BE  C02D  F02B         	movff	LED_Left@b+1,?_LED_Left+1
  5875  0018C2  0012               	return	
  5876  0018C4                     l3275:
  5877                           
  5878                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5879  0018C4  90D8               	bcf	status,0,c
  5880  0018C6  342A               	rlcf	LED_Left@a,w,c
  5881  0018C8  6E2A               	movwf	LED_Left@a,c
  5882  0018CA  342B               	rlcf	LED_Left@a+1,w,c
  5883  0018CC  6E2B               	movwf	LED_Left@a+1,c
  5884                           
  5885                           ;LED.c: 179:         return a;
  5886  0018CE  C02A  F02A         	movff	LED_Left@a,?_LED_Left
  5887  0018D2  C02B  F02B         	movff	LED_Left@a+1,?_LED_Left+1
  5888  0018D6  0012               	return		;funcret
  5889  0018D8                     __end_of_LED_Left:
  5890                           	opt callstack 0
  5891                           
  5892 ;; *************** function _INI_All *****************
  5893 ;; Defined at:
  5894 ;;		line 54 in file "INI.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;		None
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;Total ram usage:        0 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    6
  5915 ;; This function calls:
  5916 ;;		_CAN_Setup
  5917 ;;		_INI_GlobalInterrupt
  5918 ;;		_INI_LED_Start
  5919 ;;		_INI_OUTPUT
  5920 ;;		_INI_Timer
  5921 ;;		_NVMInit
  5922 ;;		_ReadDataToEEPROM
  5923 ;; This function is called by:
  5924 ;;		_main
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text44
  5929  001B32                     __ptext44:
  5930                           	opt callstack 0
  5931  001B32                     _INI_All:
  5932                           	opt callstack 24
  5933                           
  5934                           ;INI.c: 57:     WDTCONbits.SWDTEN = 1;
  5935                           
  5936                           ;incstack = 0
  5937  001B32  80D1               	bsf	4049,0,c	;volatile
  5938                           
  5939                           ;INI.c: 60:     NVMInit();
  5940  001B34  EC6C  F00C         	call	_NVMInit	;wreg free
  5941                           
  5942                           ;INI.c: 62:     ReadDataToEEPROM();
  5943  001B38  EC91  F004         	call	_ReadDataToEEPROM	;wreg free
  5944  001B3C  0004               	clrwdt		;# 
  5945                           
  5946                           ;INI.c: 66:     INI_OUTPUT();
  5947  001B3E  ECAA  F00D         	call	_INI_OUTPUT	;wreg free
  5948                           
  5949                           ;INI.c: 68:     CAN_Setup();
  5950  001B42  ECFB  F00A         	call	_CAN_Setup	;wreg free
  5951                           
  5952                           ;INI.c: 69:     INI_GlobalInterrupt();
  5953  001B46  ECF0  F00D         	call	_INI_GlobalInterrupt	;wreg free
  5954                           
  5955                           ;INI.c: 71:     INI_Timer();
  5956  001B4A  ECC9  F00D         	call	_INI_Timer	;wreg free
  5957                           
  5958                           ;INI.c: 73:     INI_LED_Start();
  5959  001B4E  EC44  F00D         	call	_INI_LED_Start	;wreg free
  5960  001B52  0012               	return		;funcret
  5961  001B54                     __end_of_INI_All:
  5962                           	opt callstack 0
  5963                           
  5964 ;; *************** function _ReadDataToEEPROM *****************
  5965 ;; Defined at:
  5966 ;;		line 404 in file "FRAME.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;		None
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;		None
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      void 
  5973 ;; Registers used:
  5974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;Total ram usage:        0 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    5
  5987 ;; This function calls:
  5988 ;;		_NVMRead
  5989 ;; This function is called by:
  5990 ;;		_INI_All
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text45
  5995  000922                     __ptext45:
  5996                           	opt callstack 0
  5997  000922                     _ReadDataToEEPROM:
  5998                           	opt callstack 24
  5999                           
  6000                           ;FRAME.c: 406:     NVMRead(&NeightAdress1,10,2);
  6001                           
  6002                           ;incstack = 0
  6003  000922  0E23               	movlw	low _NeightAdress1
  6004  000924  6E2C               	movwf	NVMRead@dest,c
  6005  000926  0E00               	movlw	high _NeightAdress1
  6006  000928  6E2D               	movwf	NVMRead@dest+1,c
  6007  00092A  0E00               	movlw	0
  6008  00092C  6E2F               	movwf	NVMRead@addr+1,c
  6009  00092E  0E0A               	movlw	10
  6010  000930  6E2E               	movwf	NVMRead@addr,c
  6011  000932  0E00               	movlw	0
  6012  000934  6E31               	movwf	NVMRead@count+1,c
  6013  000936  0E02               	movlw	2
  6014  000938  6E30               	movwf	NVMRead@count,c
  6015  00093A  EC2A  F00D         	call	_NVMRead	;wreg free
  6016                           
  6017                           ;FRAME.c: 407:     if(NeightAdress1==0xFFFF)
  6018  00093E  2823               	incf	_NeightAdress1,w,c	;volatile
  6019  000940  E107               	bnz	l3645
  6020  000942  2824               	incf	_NeightAdress1+1,w,c	;volatile
  6021  000944  A4D8               	btfss	status,2,c
  6022  000946  D004               	goto	l3645
  6023                           
  6024                           ;FRAME.c: 408:     {;FRAME.c: 409:         NeightAdress1=0x0000;
  6025  000948  0E00               	movlw	0
  6026  00094A  6E24               	movwf	_NeightAdress1+1,c	;volatile
  6027  00094C  0E00               	movlw	0
  6028  00094E  6E23               	movwf	_NeightAdress1,c	;volatile
  6029  000950                     l3645:
  6030                           
  6031                           ;FRAME.c: 411:     NVMRead(&NeightAdress2,20,2);
  6032  000950  0E4A               	movlw	low _NeightAdress2
  6033  000952  6E2C               	movwf	NVMRead@dest,c
  6034  000954  0E00               	movlw	high _NeightAdress2
  6035  000956  6E2D               	movwf	NVMRead@dest+1,c
  6036  000958  0E00               	movlw	0
  6037  00095A  6E2F               	movwf	NVMRead@addr+1,c
  6038  00095C  0E14               	movlw	20
  6039  00095E  6E2E               	movwf	NVMRead@addr,c
  6040  000960  0E00               	movlw	0
  6041  000962  6E31               	movwf	NVMRead@count+1,c
  6042  000964  0E02               	movlw	2
  6043  000966  6E30               	movwf	NVMRead@count,c
  6044  000968  EC2A  F00D         	call	_NVMRead	;wreg free
  6045                           
  6046                           ;FRAME.c: 412:     if(NeightAdress2==0xFFFF)
  6047  00096C  284A               	incf	_NeightAdress2,w,c	;volatile
  6048  00096E  E107               	bnz	l3651
  6049  000970  284B               	incf	_NeightAdress2+1,w,c	;volatile
  6050  000972  A4D8               	btfss	status,2,c
  6051  000974  D004               	goto	l3651
  6052                           
  6053                           ;FRAME.c: 413:     {;FRAME.c: 414:         NeightAdress2=0x0000;
  6054  000976  0E00               	movlw	0
  6055  000978  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  6056  00097A  0E00               	movlw	0
  6057  00097C  6E4A               	movwf	_NeightAdress2,c	;volatile
  6058  00097E                     l3651:
  6059                           
  6060                           ;FRAME.c: 416:     NVMRead(&NeightAdress3,30,2);
  6061  00097E  0E21               	movlw	low _NeightAdress3
  6062  000980  6E2C               	movwf	NVMRead@dest,c
  6063  000982  0E00               	movlw	high _NeightAdress3
  6064  000984  6E2D               	movwf	NVMRead@dest+1,c
  6065  000986  0E00               	movlw	0
  6066  000988  6E2F               	movwf	NVMRead@addr+1,c
  6067  00098A  0E1E               	movlw	30
  6068  00098C  6E2E               	movwf	NVMRead@addr,c
  6069  00098E  0E00               	movlw	0
  6070  000990  6E31               	movwf	NVMRead@count+1,c
  6071  000992  0E02               	movlw	2
  6072  000994  6E30               	movwf	NVMRead@count,c
  6073  000996  EC2A  F00D         	call	_NVMRead	;wreg free
  6074                           
  6075                           ;FRAME.c: 417:     if(NeightAdress3==0xFFFF)
  6076  00099A  2821               	incf	_NeightAdress3,w,c	;volatile
  6077  00099C  E107               	bnz	l3657
  6078  00099E  2822               	incf	_NeightAdress3+1,w,c	;volatile
  6079  0009A0  A4D8               	btfss	status,2,c
  6080  0009A2  D004               	goto	l3657
  6081                           
  6082                           ;FRAME.c: 418:     {;FRAME.c: 419:         NeightAdress3=0x0000;
  6083  0009A4  0E00               	movlw	0
  6084  0009A6  6E22               	movwf	_NeightAdress3+1,c	;volatile
  6085  0009A8  0E00               	movlw	0
  6086  0009AA  6E21               	movwf	_NeightAdress3,c	;volatile
  6087  0009AC                     l3657:
  6088                           
  6089                           ;FRAME.c: 421:     NVMRead(&NeightAdress4,40,2);
  6090  0009AC  0E1F               	movlw	low _NeightAdress4
  6091  0009AE  6E2C               	movwf	NVMRead@dest,c
  6092  0009B0  0E00               	movlw	high _NeightAdress4
  6093  0009B2  6E2D               	movwf	NVMRead@dest+1,c
  6094  0009B4  0E00               	movlw	0
  6095  0009B6  6E2F               	movwf	NVMRead@addr+1,c
  6096  0009B8  0E28               	movlw	40
  6097  0009BA  6E2E               	movwf	NVMRead@addr,c
  6098  0009BC  0E00               	movlw	0
  6099  0009BE  6E31               	movwf	NVMRead@count+1,c
  6100  0009C0  0E02               	movlw	2
  6101  0009C2  6E30               	movwf	NVMRead@count,c
  6102  0009C4  EC2A  F00D         	call	_NVMRead	;wreg free
  6103                           
  6104                           ;FRAME.c: 422:     if(NeightAdress4==0xFFFF)
  6105  0009C8  281F               	incf	_NeightAdress4,w,c	;volatile
  6106  0009CA  E107               	bnz	l3663
  6107  0009CC  2820               	incf	_NeightAdress4+1,w,c	;volatile
  6108  0009CE  A4D8               	btfss	status,2,c
  6109  0009D0  D004               	goto	l3663
  6110                           
  6111                           ;FRAME.c: 423:     {;FRAME.c: 424:         NeightAdress4=0x0000;
  6112  0009D2  0E00               	movlw	0
  6113  0009D4  6E20               	movwf	_NeightAdress4+1,c	;volatile
  6114  0009D6  0E00               	movlw	0
  6115  0009D8  6E1F               	movwf	_NeightAdress4,c	;volatile
  6116  0009DA                     l3663:
  6117                           
  6118                           ;FRAME.c: 426:     NVMRead(&NeightAdress5,50,2);
  6119  0009DA  0E1D               	movlw	low _NeightAdress5
  6120  0009DC  6E2C               	movwf	NVMRead@dest,c
  6121  0009DE  0E00               	movlw	high _NeightAdress5
  6122  0009E0  6E2D               	movwf	NVMRead@dest+1,c
  6123  0009E2  0E00               	movlw	0
  6124  0009E4  6E2F               	movwf	NVMRead@addr+1,c
  6125  0009E6  0E32               	movlw	50
  6126  0009E8  6E2E               	movwf	NVMRead@addr,c
  6127  0009EA  0E00               	movlw	0
  6128  0009EC  6E31               	movwf	NVMRead@count+1,c
  6129  0009EE  0E02               	movlw	2
  6130  0009F0  6E30               	movwf	NVMRead@count,c
  6131  0009F2  EC2A  F00D         	call	_NVMRead	;wreg free
  6132                           
  6133                           ;FRAME.c: 427:     if(NeightAdress5==0xFFFF)
  6134  0009F6  281D               	incf	_NeightAdress5,w,c	;volatile
  6135  0009F8  E107               	bnz	l3669
  6136  0009FA  281E               	incf	_NeightAdress5+1,w,c	;volatile
  6137  0009FC  A4D8               	btfss	status,2,c
  6138  0009FE  D004               	goto	l3669
  6139                           
  6140                           ;FRAME.c: 428:     {;FRAME.c: 429:         NeightAdress5=0x0000;
  6141  000A00  0E00               	movlw	0
  6142  000A02  6E1E               	movwf	_NeightAdress5+1,c	;volatile
  6143  000A04  0E00               	movlw	0
  6144  000A06  6E1D               	movwf	_NeightAdress5,c	;volatile
  6145  000A08                     l3669:
  6146                           
  6147                           ;FRAME.c: 431:     NVMRead(&NeightAdress6,60,2);
  6148  000A08  0E1B               	movlw	low _NeightAdress6
  6149  000A0A  6E2C               	movwf	NVMRead@dest,c
  6150  000A0C  0E00               	movlw	high _NeightAdress6
  6151  000A0E  6E2D               	movwf	NVMRead@dest+1,c
  6152  000A10  0E00               	movlw	0
  6153  000A12  6E2F               	movwf	NVMRead@addr+1,c
  6154  000A14  0E3C               	movlw	60
  6155  000A16  6E2E               	movwf	NVMRead@addr,c
  6156  000A18  0E00               	movlw	0
  6157  000A1A  6E31               	movwf	NVMRead@count+1,c
  6158  000A1C  0E02               	movlw	2
  6159  000A1E  6E30               	movwf	NVMRead@count,c
  6160  000A20  EC2A  F00D         	call	_NVMRead	;wreg free
  6161                           
  6162                           ;FRAME.c: 432:     if(NeightAdress6==0xFFFF)
  6163  000A24  281B               	incf	_NeightAdress6,w,c	;volatile
  6164  000A26  E107               	bnz	l3675
  6165  000A28  281C               	incf	_NeightAdress6+1,w,c	;volatile
  6166  000A2A  A4D8               	btfss	status,2,c
  6167  000A2C  D004               	goto	l3675
  6168                           
  6169                           ;FRAME.c: 433:     {;FRAME.c: 434:         NeightAdress6=0x0000;
  6170  000A2E  0E00               	movlw	0
  6171  000A30  6E1C               	movwf	_NeightAdress6+1,c	;volatile
  6172  000A32  0E00               	movlw	0
  6173  000A34  6E1B               	movwf	_NeightAdress6,c	;volatile
  6174  000A36                     l3675:
  6175                           
  6176                           ;FRAME.c: 436:     NVMRead(&NeightAdress7,70,2);
  6177  000A36  0E19               	movlw	low _NeightAdress7
  6178  000A38  6E2C               	movwf	NVMRead@dest,c
  6179  000A3A  0E00               	movlw	high _NeightAdress7
  6180  000A3C  6E2D               	movwf	NVMRead@dest+1,c
  6181  000A3E  0E00               	movlw	0
  6182  000A40  6E2F               	movwf	NVMRead@addr+1,c
  6183  000A42  0E46               	movlw	70
  6184  000A44  6E2E               	movwf	NVMRead@addr,c
  6185  000A46  0E00               	movlw	0
  6186  000A48  6E31               	movwf	NVMRead@count+1,c
  6187  000A4A  0E02               	movlw	2
  6188  000A4C  6E30               	movwf	NVMRead@count,c
  6189  000A4E  EC2A  F00D         	call	_NVMRead	;wreg free
  6190                           
  6191                           ;FRAME.c: 437:     if(NeightAdress7==0xFFFF)
  6192  000A52  2819               	incf	_NeightAdress7,w,c	;volatile
  6193  000A54  E107               	bnz	l3681
  6194  000A56  281A               	incf	_NeightAdress7+1,w,c	;volatile
  6195  000A58  A4D8               	btfss	status,2,c
  6196  000A5A  D004               	goto	l3681
  6197                           
  6198                           ;FRAME.c: 438:     {;FRAME.c: 439:         NeightAdress7=0x0000;
  6199  000A5C  0E00               	movlw	0
  6200  000A5E  6E1A               	movwf	_NeightAdress7+1,c	;volatile
  6201  000A60  0E00               	movlw	0
  6202  000A62  6E19               	movwf	_NeightAdress7,c	;volatile
  6203  000A64                     l3681:
  6204                           
  6205                           ;FRAME.c: 441:     NVMRead(&NeightAdress8,80,2);
  6206  000A64  0E17               	movlw	low _NeightAdress8
  6207  000A66  6E2C               	movwf	NVMRead@dest,c
  6208  000A68  0E00               	movlw	high _NeightAdress8
  6209  000A6A  6E2D               	movwf	NVMRead@dest+1,c
  6210  000A6C  0E00               	movlw	0
  6211  000A6E  6E2F               	movwf	NVMRead@addr+1,c
  6212  000A70  0E50               	movlw	80
  6213  000A72  6E2E               	movwf	NVMRead@addr,c
  6214  000A74  0E00               	movlw	0
  6215  000A76  6E31               	movwf	NVMRead@count+1,c
  6216  000A78  0E02               	movlw	2
  6217  000A7A  6E30               	movwf	NVMRead@count,c
  6218  000A7C  EC2A  F00D         	call	_NVMRead	;wreg free
  6219                           
  6220                           ;FRAME.c: 442:     if(NeightAdress8==0xFFFF)
  6221  000A80  2817               	incf	_NeightAdress8,w,c	;volatile
  6222  000A82  E107               	bnz	l649
  6223  000A84  2818               	incf	_NeightAdress8+1,w,c	;volatile
  6224  000A86  A4D8               	btfss	status,2,c
  6225  000A88  0012               	return	
  6226                           
  6227                           ;FRAME.c: 443:     {;FRAME.c: 444:         NeightAdress8=0x0000;
  6228  000A8A  0E00               	movlw	0
  6229  000A8C  6E18               	movwf	_NeightAdress8+1,c	;volatile
  6230  000A8E  0E00               	movlw	0
  6231  000A90  6E17               	movwf	_NeightAdress8,c	;volatile
  6232  000A92                     l649:
  6233  000A92  0012               	return		;funcret
  6234  000A94                     __end_of_ReadDataToEEPROM:
  6235                           	opt callstack 0
  6236                           
  6237 ;; *************** function _NVMRead *****************
  6238 ;; Defined at:
  6239 ;;		line 79 in file "EEPROM.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6242 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  6243 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  6244 ;;  addr            2    9[COMRAM] unsigned short 
  6245 ;;  count           2   11[COMRAM] unsigned short 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;		None
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      void 
  6250 ;; Registers used:
  6251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6257 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;Total ram usage:        6 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    4
  6264 ;; This function calls:
  6265 ;;		_ReadfromEEPROM
  6266 ;; This function is called by:
  6267 ;;		_ReadDataToEEPROM
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text46
  6272  001A54                     __ptext46:
  6273                           	opt callstack 0
  6274  001A54                     _NVMRead:
  6275                           	opt callstack 24
  6276                           
  6277                           ;EEPROM.c: 79: void NVMRead(BYTE *dest, WORD addr, WORD count);EEPROM.c: 80: {;EEPROM.c:
      +                           81:     while( count > 0 )
  6278                           
  6279                           ;incstack = 0
  6280  001A54  D014               	goto	l3387
  6281  001A56                     l936:
  6282  001A56  B2A6               	btfsc	4006,1,c	;volsfr
  6283  001A58  D7FE               	goto	l936
  6284                           
  6285                           ;EEPROM.c: 84:         *dest++ = ReadfromEEPROM(addr++);
  6286  001A5A  C02E  F02A         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6287  001A5E  C02F  F02B         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6288  001A62  ECE0  F00D         	call	_ReadfromEEPROM	;wreg free
  6289  001A66  C02C  FFD9         	movff	NVMRead@dest,fsr2l
  6290  001A6A  C02D  FFDA         	movff	NVMRead@dest+1,fsr2h
  6291  001A6E  6EDF               	movwf	indf2,c
  6292  001A70  4A2E               	infsnz	NVMRead@addr,f,c
  6293  001A72  2A2F               	incf	NVMRead@addr+1,f,c
  6294  001A74  4A2C               	infsnz	NVMRead@dest,f,c
  6295  001A76  2A2D               	incf	NVMRead@dest+1,f,c
  6296                           
  6297                           ;EEPROM.c: 85:         count--;
  6298  001A78  0630               	decf	NVMRead@count,f,c
  6299  001A7A  A0D8               	btfss	status,0,c
  6300  001A7C  0631               	decf	NVMRead@count+1,f,c
  6301  001A7E                     l3387:
  6302                           
  6303                           ;EEPROM.c: 81:     while( count > 0 )
  6304  001A7E  5030               	movf	NVMRead@count,w,c
  6305  001A80  1031               	iorwf	NVMRead@count+1,w,c
  6306  001A82  B4D8               	btfsc	status,2,c
  6307  001A84  0012               	return	
  6308  001A86  D7E7               	goto	l936
  6309  001A88                     __end_of_NVMRead:
  6310                           	opt callstack 0
  6311                           
  6312 ;; *************** function _ReadfromEEPROM *****************
  6313 ;; Defined at:
  6314 ;;		line 45 in file "EEPROM.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  Address         2    5[COMRAM] unsigned short 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      unsigned char 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:        2 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    3
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_NVMRead
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text47
  6343  001BC0                     __ptext47:
  6344                           	opt callstack 0
  6345  001BC0                     _ReadfromEEPROM:
  6346                           	opt callstack 24
  6347                           
  6348                           ;EEPROM.c: 45: static BYTE ReadfromEEPROM(WORD Address);EEPROM.c: 46: {;EEPROM.c: 47:   
      +                            EEADRH = (BYTE)(Address>>8);
  6349                           
  6350                           ;incstack = 0
  6351  001BC0  502B               	movf	ReadfromEEPROM@Address+1,w,c
  6352  001BC2  6EAA               	movwf	4010,c	;volatile
  6353                           
  6354                           ;EEPROM.c: 48:     EEADR = (BYTE)Address;
  6355  001BC4  C02A  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6356                           
  6357                           ;EEPROM.c: 49:     EECON1bits.RD = 1;
  6358  001BC8  80A6               	bsf	4006,0,c	;volsfr
  6359                           
  6360                           ;EEPROM.c: 50:     EECON1bits.EEPGD = 0;
  6361  001BCA  9EA6               	bcf	4006,7,c	;volsfr
  6362                           
  6363                           ;EEPROM.c: 51:     EECON1bits.CFGS = 0;
  6364  001BCC  9CA6               	bcf	4006,6,c	;volsfr
  6365                           
  6366                           ;EEPROM.c: 52:     return EEDATA;
  6367  001BCE  50A8               	movf	4008,w,c	;volatile
  6368  001BD0  0012               	return		;funcret
  6369  001BD2                     __end_of_ReadfromEEPROM:
  6370                           	opt callstack 0
  6371                           
  6372 ;; *************** function _NVMInit *****************
  6373 ;; Defined at:
  6374 ;;		line 26 in file "EEPROM.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;		None
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  NeightAdress    2    0        unsigned int 
  6379 ;;  result          1   13[COMRAM] enum E10433
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      enum E10433
  6382 ;; Registers used:
  6383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;Total ram usage:        3 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    4
  6396 ;; This function calls:
  6397 ;;		_NVMalloc
  6398 ;; This function is called by:
  6399 ;;		_INI_All
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           	psect	text48
  6404  0018D8                     __ptext48:
  6405                           	opt callstack 0
  6406  0018D8                     _NVMInit:
  6407                           	opt callstack 25
  6408                           
  6409                           ;EEPROM.c: 28:     BOOL result = TRUE;
  6410                           
  6411                           ;incstack = 0
  6412  0018D8  0E01               	movlw	1
  6413  0018DA  6E32               	movwf	NVMInit@result,c
  6414                           
  6415                           ;EEPROM.c: 30:     nextEEPosition = 0;
  6416  0018DC  0E00               	movlw	0
  6417  0018DE  6E06               	movwf	_nextEEPosition+1,c
  6418  0018E0  0E00               	movlw	0
  6419  0018E2  6E05               	movwf	_nextEEPosition,c
  6420                           
  6421                           ;EEPROM.c: 32:     result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6422  0018E4  0E00               	movlw	0
  6423  0018E6  6E2B               	movwf	NVMalloc@size+1,c
  6424  0018E8  0E03               	movlw	3
  6425  0018EA  6E2A               	movwf	NVMalloc@size,c
  6426  0018EC  0E15               	movlw	low _ustawieniaKarty
  6427  0018EE  6E2C               	movwf	NVMalloc@location,c
  6428  0018F0  0E00               	movlw	high _ustawieniaKarty
  6429  0018F2  6E2D               	movwf	NVMalloc@location+1,c
  6430  0018F4  ECF5  F00C         	call	_NVMalloc	;wreg free
  6431  0018F8  1632               	andwf	NVMInit@result,f,c
  6432                           
  6433                           ;EEPROM.c: 33:     result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  6434  0018FA  0E00               	movlw	0
  6435  0018FC  6E2B               	movwf	NVMalloc@size+1,c
  6436  0018FE  0E10               	movlw	16
  6437  001900  6E2A               	movwf	NVMalloc@size,c
  6438  001902  0E13               	movlw	low _neighborsAdress
  6439  001904  6E2C               	movwf	NVMalloc@location,c
  6440  001906  0E00               	movlw	high _neighborsAdress
  6441  001908  6E2D               	movwf	NVMalloc@location+1,c
  6442  00190A  ECF5  F00C         	call	_NVMalloc	;wreg free
  6443  00190E  1632               	andwf	NVMInit@result,f,c
  6444  001910  0012               	return		;funcret
  6445  001912                     __end_of_NVMInit:
  6446                           	opt callstack 0
  6447                           
  6448 ;; *************** function _NVMalloc *****************
  6449 ;; Defined at:
  6450 ;;		line 11 in file "EEPROM.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  size            2    5[COMRAM] unsigned short 
  6453 ;;  location        2    7[COMRAM] PTR unsigned short 
  6454 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      enum E10433
  6459 ;; Registers used:
  6460 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;Total ram usage:        6 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    3
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_NVMInit
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text49
  6481  0019EA                     __ptext49:
  6482                           	opt callstack 0
  6483  0019EA                     _NVMalloc:
  6484                           	opt callstack 25
  6485                           
  6486                           ;EEPROM.c: 11: BOOL NVMalloc(WORD size, WORD *location);EEPROM.c: 12: {;EEPROM.c: 15:   
      +                            if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6487                           
  6488                           ;incstack = 0
  6489  0019EA  502A               	movf	NVMalloc@size,w,c
  6490  0019EC  2405               	addwf	_nextEEPosition,w,c
  6491  0019EE  6E2E               	movwf	??_NVMalloc& (0+255),c
  6492  0019F0  502B               	movf	NVMalloc@size+1,w,c
  6493  0019F2  2006               	addwfc	_nextEEPosition+1,w,c
  6494  0019F4  6E2F               	movwf	(??_NVMalloc+1)& (0+255),c
  6495  0019F6  042E               	decf	??_NVMalloc,w,c
  6496  0019F8  0E04               	movlw	4
  6497  0019FA  582F               	subwfb	??_NVMalloc+1,w,c
  6498  0019FC  A0D8               	btfss	status,0,c
  6499  0019FE  D002               	goto	l3433
  6500                           
  6501                           ;EEPROM.c: 16:     {;EEPROM.c: 17:         return FALSE;
  6502  001A00  0E00               	movlw	0
  6503  001A02  0012               	return	
  6504  001A04                     l3433:
  6505                           
  6506                           ;EEPROM.c: 20:     *location = nextEEPosition;
  6507  001A04  C02C  FFD9         	movff	NVMalloc@location,fsr2l
  6508  001A08  C02D  FFDA         	movff	NVMalloc@location+1,fsr2h
  6509  001A0C  C005  FFDE         	movff	_nextEEPosition,postinc2
  6510  001A10  C006  FFDD         	movff	_nextEEPosition+1,postdec2
  6511                           
  6512                           ;EEPROM.c: 21:     nextEEPosition += size;
  6513  001A14  502A               	movf	NVMalloc@size,w,c
  6514  001A16  2605               	addwf	_nextEEPosition,f,c
  6515  001A18  502B               	movf	NVMalloc@size+1,w,c
  6516  001A1A  2206               	addwfc	_nextEEPosition+1,f,c
  6517                           
  6518                           ;EEPROM.c: 22:     return TRUE;
  6519  001A1C  0E01               	movlw	1
  6520  001A1E  0012               	return		;funcret
  6521  001A20                     __end_of_NVMalloc:
  6522                           	opt callstack 0
  6523                           
  6524 ;; *************** function _INI_Timer *****************
  6525 ;; Defined at:
  6526 ;;		line 92 in file "TMR1.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      unsigned char 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    3
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_INI_All
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text50
  6555  001B92                     __ptext50:
  6556                           	opt callstack 0
  6557  001B92                     _INI_Timer:
  6558                           	opt callstack 26
  6559                           
  6560                           ;TMR1.c: 96:     IRCF2 = 1;
  6561                           
  6562                           ;incstack = 0
  6563  001B92  8CD3               	bsf	4051,6,c	;volatile
  6564                           
  6565                           ;TMR1.c: 97:     IRCF1 = 1;
  6566  001B94  8AD3               	bsf	4051,5,c	;volatile
  6567                           
  6568                           ;TMR1.c: 98:     IRCF0 = 1;
  6569  001B96  88D3               	bsf	4051,4,c	;volatile
  6570                           
  6571                           ;TMR1.c: 99:     T1CON = 0b00111101;
  6572  001B98  0E3D               	movlw	61
  6573  001B9A  6ECD               	movwf	4045,c	;volatile
  6574                           
  6575                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6576  001B9C  0E9E               	movlw	158
  6577  001B9E  6ECF               	movwf	4047,c	;volatile
  6578                           
  6579                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6580  001BA0  0E57               	movlw	87
  6581  001BA2  6ECE               	movwf	4046,c	;volatile
  6582                           
  6583                           ;TMR1.c: 102:     TMR1IE=1;
  6584  001BA4  809D               	bsf	3997,0,c	;volatile
  6585                           
  6586                           ;TMR1.c: 103:     TMR1ON = 1;
  6587  001BA6  80CD               	bsf	4045,0,c	;volatile
  6588  001BA8  0012               	return		;funcret
  6589  001BAA                     __end_of_INI_Timer:
  6590                           	opt callstack 0
  6591                           
  6592 ;; *************** function _INI_OUTPUT *****************
  6593 ;; Defined at:
  6594 ;;		line 29 in file "INI.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;		None
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      void 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;Total ram usage:        0 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; Hardware stack levels required when called:    3
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_INI_All
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text51
  6623  001B54                     __ptext51:
  6624                           	opt callstack 0
  6625  001B54                     _INI_OUTPUT:
  6626                           	opt callstack 26
  6627                           
  6628                           ;INI.c: 33:     LATA = 0;
  6629                           
  6630                           ;incstack = 0
  6631  001B54  0E00               	movlw	0
  6632  001B56  6E89               	movwf	3977,c	;volatile
  6633                           
  6634                           ;INI.c: 34:     LATB = 0;
  6635  001B58  0E00               	movlw	0
  6636  001B5A  6E8A               	movwf	3978,c	;volatile
  6637                           
  6638                           ;INI.c: 35:     LATC = 0;
  6639  001B5C  0E00               	movlw	0
  6640  001B5E  6E8B               	movwf	3979,c	;volatile
  6641                           
  6642                           ;INI.c: 36:     TRISA = 0x0C;
  6643  001B60  0E0C               	movlw	12
  6644  001B62  6E92               	movwf	3986,c	;volatile
  6645                           
  6646                           ;INI.c: 37:     TRISB = 0b10001000;
  6647  001B64  0E88               	movlw	136
  6648  001B66  6E93               	movwf	3987,c	;volatile
  6649                           
  6650                           ;INI.c: 38:     TRISC = 0xBF;
  6651  001B68  0EBF               	movlw	191
  6652  001B6A  6E94               	movwf	3988,c	;volatile
  6653                           
  6654                           ;INI.c: 39:     RCONbits.IPEN = 1;
  6655  001B6C  8ED0               	bsf	4048,7,c	;volatile
  6656                           
  6657                           ;INI.c: 42:     DetectorLedRadar.Flags.inicjalizacja = 1;
  6658  001B6E  0100               	movlb	0	; () banked
  6659  001B70  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6660                           
  6661                           ; BSR set to: 0
  6662  001B72  0012               	return		;funcret
  6663  001B74                     __end_of_INI_OUTPUT:
  6664                           	opt callstack 0
  6665                           
  6666 ;; *************** function _INI_LED_Start *****************
  6667 ;; Defined at:
  6668 ;;		line 231 in file "LED.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;		None
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;		None
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      void 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;Total ram usage:        0 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    4
  6689 ;; This function calls:
  6690 ;;		_LED_Control
  6691 ;; This function is called by:
  6692 ;;		_INI_All
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text52
  6697  001A88                     __ptext52:
  6698                           	opt callstack 0
  6699  001A88                     _INI_LED_Start:
  6700                           	opt callstack 25
  6701                           
  6702                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;incstack = 0
  6706  001A88  5092               	movf	3986,w,c	;volatile
  6707  001A8A  0B01               	andlw	1
  6708  001A8C  6E92               	movwf	3986,c	;volatile
  6709                           
  6710                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  6711  001A8E  5093               	movf	3987,w,c	;volatile
  6712  001A90  0BFC               	andlw	252
  6713  001A92  6E93               	movwf	3987,c	;volatile
  6714                           
  6715                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  6716  001A94  5096               	movf	3990,w,c	;volatile
  6717  001A96  0BF8               	andlw	248
  6718  001A98  6E96               	movwf	3990,c	;volatile
  6719                           
  6720                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  6721  001A9A  0E00               	movlw	0
  6722  001A9C  6E95               	movwf	3989,c	;volatile
  6723                           
  6724                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  6725  001A9E  0E00               	movlw	0
  6726  001AA0  6E2B               	movwf	LED_Control@diode+1,c
  6727  001AA2  0E00               	movlw	0
  6728  001AA4  6E2A               	movwf	LED_Control@diode,c
  6729  001AA6  0E00               	movlw	0
  6730  001AA8  EC4A  F005         	call	_LED_Control
  6731                           
  6732                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  6733  001AAC  0E00               	movlw	0
  6734  001AAE  6E2B               	movwf	LED_Control@diode+1,c
  6735  001AB0  0E00               	movlw	0
  6736  001AB2  6E2A               	movwf	LED_Control@diode,c
  6737  001AB4  0E01               	movlw	1
  6738  001AB6  EC4A  F005         	call	_LED_Control
  6739  001ABA  0012               	return		;funcret
  6740  001ABC                     __end_of_INI_LED_Start:
  6741                           	opt callstack 0
  6742                           
  6743 ;; *************** function _LED_Control *****************
  6744 ;; Defined at:
  6745 ;;		line 256 in file "LED.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  color           1    wreg     enum E10644
  6748 ;;  diode           2    5[COMRAM] unsigned int 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  color           1    9[COMRAM] enum E10644
  6751 ;;  cos             2    0        unsigned int 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  1    wreg      unsigned char 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;Total ram usage:        5 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    3
  6768 ;; This function calls:
  6769 ;;		Nothing
  6770 ;; This function is called by:
  6771 ;;		_LED_Error
  6772 ;;		_LED_Update
  6773 ;;		_LED_Light_Pos
  6774 ;;		_INI_LED_Start
  6775 ;;		_LED_Clear
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text53
  6780  000A94                     __ptext53:
  6781                           	opt callstack 0
  6782  000A94                     _LED_Control:
  6783                           	opt callstack 24
  6784                           
  6785                           ;incstack = 0
  6786                           ;LED_Control@color stored from wreg
  6787  000A94  6E2E               	movwf	LED_Control@color,c
  6788                           
  6789                           ;LED.c: 259:     if(color == RED)
  6790  000A96  502E               	movf	LED_Control@color,w,c
  6791  000A98  A4D8               	btfss	status,2,c
  6792  000A9A  D050               	goto	l420
  6793                           
  6794                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  6795  000A9C  A02A               	btfss	LED_Control@diode,0,c
  6796  000A9E  D003               	goto	l4071
  6797                           
  6798                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  6799  000AA0  508C               	movf	3980,w,c	;volatile
  6800  000AA2  0910               	iorlw	16
  6801  000AA4  D002               	goto	L4
  6802  000AA6                     l4071:
  6803                           
  6804                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  6805  000AA6  508C               	movf	3980,w,c	;volatile
  6806  000AA8  0BEF               	andlw	239
  6807  000AAA                     L4:
  6808  000AAA  6E8C               	movwf	3980,c	;volatile
  6809                           
  6810                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  6811  000AAC  A22A               	btfss	LED_Control@diode,1,c
  6812  000AAE  D003               	goto	l4077
  6813                           
  6814                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  6815  000AB0  508C               	movf	3980,w,c	;volatile
  6816  000AB2  0940               	iorlw	64
  6817  000AB4  D002               	goto	L5
  6818  000AB6                     l4077:
  6819                           
  6820                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  6821  000AB6  508C               	movf	3980,w,c	;volatile
  6822  000AB8  0BBF               	andlw	191
  6823  000ABA                     L5:
  6824  000ABA  6E8C               	movwf	3980,c	;volatile
  6825                           
  6826                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  6827  000ABC  A42A               	btfss	LED_Control@diode,2,c
  6828  000ABE  D003               	goto	l4083
  6829                           
  6830                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  6831  000AC0  508A               	movf	3978,w,c	;volatile
  6832  000AC2  0901               	iorlw	1
  6833  000AC4  D002               	goto	L6
  6834  000AC6                     l4083:
  6835                           
  6836                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  6837  000AC6  508A               	movf	3978,w,c	;volatile
  6838  000AC8  0BFE               	andlw	254
  6839  000ACA                     L6:
  6840  000ACA  6E8A               	movwf	3978,c	;volatile
  6841                           
  6842                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  6843  000ACC  A62A               	btfss	LED_Control@diode,3,c
  6844  000ACE  D003               	goto	l4089
  6845                           
  6846                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  6847  000AD0  5089               	movf	3977,w,c	;volatile
  6848  000AD2  0902               	iorlw	2
  6849  000AD4  D002               	goto	L7
  6850  000AD6                     l4089:
  6851                           
  6852                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  6853  000AD6  5089               	movf	3977,w,c	;volatile
  6854  000AD8  0BFD               	andlw	253
  6855  000ADA                     L7:
  6856  000ADA  6E89               	movwf	3977,c	;volatile
  6857                           
  6858                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  6859  000ADC  A82A               	btfss	LED_Control@diode,4,c
  6860  000ADE  D003               	goto	l4095
  6861                           
  6862                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  6863  000AE0  5089               	movf	3977,w,c	;volatile
  6864  000AE2  0908               	iorlw	8
  6865  000AE4  D002               	goto	L8
  6866  000AE6                     l4095:
  6867                           
  6868                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  6869  000AE6  5089               	movf	3977,w,c	;volatile
  6870  000AE8  0BF7               	andlw	247
  6871  000AEA                     L8:
  6872  000AEA  6E89               	movwf	3977,c	;volatile
  6873                           
  6874                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  6875  000AEC  AA2A               	btfss	LED_Control@diode,5,c
  6876  000AEE  D003               	goto	l4101
  6877                           
  6878                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  6879  000AF0  5089               	movf	3977,w,c	;volatile
  6880  000AF2  0920               	iorlw	32
  6881  000AF4  D002               	goto	L9
  6882  000AF6                     l4101:
  6883                           
  6884                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  6885  000AF6  5089               	movf	3977,w,c	;volatile
  6886  000AF8  0BDF               	andlw	223
  6887  000AFA                     L9:
  6888  000AFA  6E89               	movwf	3977,c	;volatile
  6889                           
  6890                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  6891  000AFC  AC2A               	btfss	LED_Control@diode,6,c
  6892  000AFE  D003               	goto	l4107
  6893                           
  6894                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  6895  000B00  508D               	movf	3981,w,c	;volatile
  6896  000B02  0902               	iorlw	2
  6897  000B04  D002               	goto	L10
  6898  000B06                     l4107:
  6899                           
  6900                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  6901  000B06  508D               	movf	3981,w,c	;volatile
  6902  000B08  0BFD               	andlw	253
  6903  000B0A                     L10:
  6904  000B0A  6E8D               	movwf	3981,c	;volatile
  6905                           
  6906                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  6907  000B0C  AE2A               	btfss	LED_Control@diode,7,c
  6908  000B0E  D003               	goto	l4113
  6909                           
  6910                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  6911  000B10  5089               	movf	3977,w,c	;volatile
  6912  000B12  0980               	iorlw	128
  6913  000B14  D002               	goto	L11
  6914  000B16                     l4113:
  6915                           
  6916                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  6917  000B16  5089               	movf	3977,w,c	;volatile
  6918  000B18  0B7F               	andlw	127
  6919  000B1A                     L11:
  6920  000B1A  6E89               	movwf	3977,c	;volatile
  6921                           
  6922                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  6923  000B1C  A02B               	btfss	LED_Control@diode+1,0,c
  6924  000B1E  D003               	goto	l4119
  6925                           
  6926                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  6927  000B20  508C               	movf	3980,w,c	;volatile
  6928  000B22  0901               	iorlw	1
  6929  000B24  D002               	goto	L12
  6930  000B26                     l4119:
  6931                           
  6932                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  6933  000B26  508C               	movf	3980,w,c	;volatile
  6934  000B28  0BFE               	andlw	254
  6935  000B2A                     L12:
  6936  000B2A  6E8C               	movwf	3980,c	;volatile
  6937                           
  6938                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  6939  000B2C  A22B               	btfss	LED_Control@diode+1,1,c
  6940  000B2E  D003               	goto	l4125
  6941                           
  6942                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  6943  000B30  508C               	movf	3980,w,c	;volatile
  6944  000B32  0904               	iorlw	4
  6945  000B34  D002               	goto	L13
  6946  000B36                     l4125:
  6947                           
  6948                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  6949  000B36  508C               	movf	3980,w,c	;volatile
  6950  000B38  0BFB               	andlw	251
  6951  000B3A                     L13:
  6952  000B3A  6E8C               	movwf	3980,c	;volatile
  6953  000B3C                     l420:
  6954                           
  6955                           ;LED.c: 358:     if(color == GREEN)
  6956  000B3C  042E               	decf	LED_Control@color,w,c
  6957  000B3E  A4D8               	btfss	status,2,c
  6958  000B40  0012               	return	
  6959                           
  6960                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  6961  000B42  A02A               	btfss	LED_Control@diode,0,c
  6962  000B44  D003               	goto	l4131
  6963                           
  6964                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  6965  000B46  508C               	movf	3980,w,c	;volatile
  6966  000B48  0920               	iorlw	32
  6967  000B4A  D002               	goto	L14
  6968  000B4C                     l4131:
  6969                           
  6970                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  6971  000B4C  508C               	movf	3980,w,c	;volatile
  6972  000B4E  0BDF               	andlw	223
  6973  000B50                     L14:
  6974  000B50  6E8C               	movwf	3980,c	;volatile
  6975                           
  6976                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  6977  000B52  A22A               	btfss	LED_Control@diode,1,c
  6978  000B54  D003               	goto	l4137
  6979                           
  6980                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  6981  000B56  508C               	movf	3980,w,c	;volatile
  6982  000B58  0980               	iorlw	128
  6983  000B5A  D002               	goto	L15
  6984  000B5C                     l4137:
  6985                           
  6986                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  6987  000B5C  508C               	movf	3980,w,c	;volatile
  6988  000B5E  0B7F               	andlw	127
  6989  000B60                     L15:
  6990  000B60  6E8C               	movwf	3980,c	;volatile
  6991                           
  6992                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  6993  000B62  A42A               	btfss	LED_Control@diode,2,c
  6994  000B64  D003               	goto	l4143
  6995                           
  6996                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  6997  000B66  508A               	movf	3978,w,c	;volatile
  6998  000B68  0902               	iorlw	2
  6999  000B6A  D002               	goto	L16
  7000  000B6C                     l4143:
  7001                           
  7002                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  7003  000B6C  508A               	movf	3978,w,c	;volatile
  7004  000B6E  0BFD               	andlw	253
  7005  000B70                     L16:
  7006  000B70  6E8A               	movwf	3978,c	;volatile
  7007                           
  7008                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  7009  000B72  A62A               	btfss	LED_Control@diode,3,c
  7010  000B74  D003               	goto	l4149
  7011                           
  7012                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  7013  000B76  5089               	movf	3977,w,c	;volatile
  7014  000B78  0904               	iorlw	4
  7015  000B7A  D002               	goto	L17
  7016  000B7C                     l4149:
  7017                           
  7018                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  7019  000B7C  5089               	movf	3977,w,c	;volatile
  7020  000B7E  0BFB               	andlw	251
  7021  000B80                     L17:
  7022  000B80  6E89               	movwf	3977,c	;volatile
  7023                           
  7024                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  7025  000B82  A82A               	btfss	LED_Control@diode,4,c
  7026  000B84  D003               	goto	l4155
  7027                           
  7028                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  7029  000B86  5089               	movf	3977,w,c	;volatile
  7030  000B88  0910               	iorlw	16
  7031  000B8A  D002               	goto	L18
  7032  000B8C                     l4155:
  7033                           
  7034                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  7035  000B8C  5089               	movf	3977,w,c	;volatile
  7036  000B8E  0BEF               	andlw	239
  7037  000B90                     L18:
  7038  000B90  6E89               	movwf	3977,c	;volatile
  7039                           
  7040                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  7041  000B92  AA2A               	btfss	LED_Control@diode,5,c
  7042  000B94  D003               	goto	l4161
  7043                           
  7044                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  7045  000B96  508D               	movf	3981,w,c	;volatile
  7046  000B98  0901               	iorlw	1
  7047  000B9A  D002               	goto	L19
  7048  000B9C                     l4161:
  7049                           
  7050                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  7051  000B9C  508D               	movf	3981,w,c	;volatile
  7052  000B9E  0BFE               	andlw	254
  7053  000BA0                     L19:
  7054  000BA0  6E8D               	movwf	3981,c	;volatile
  7055                           
  7056                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  7057  000BA2  AC2A               	btfss	LED_Control@diode,6,c
  7058  000BA4  D003               	goto	l4167
  7059                           
  7060                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  7061  000BA6  508D               	movf	3981,w,c	;volatile
  7062  000BA8  0904               	iorlw	4
  7063  000BAA  D002               	goto	L20
  7064  000BAC                     l4167:
  7065                           
  7066                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  7067  000BAC  508D               	movf	3981,w,c	;volatile
  7068  000BAE  0BFB               	andlw	251
  7069  000BB0                     L20:
  7070  000BB0  6E8D               	movwf	3981,c	;volatile
  7071                           
  7072                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  7073  000BB2  AE2A               	btfss	LED_Control@diode,7,c
  7074  000BB4  D003               	goto	l4173
  7075                           
  7076                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  7077  000BB6  5089               	movf	3977,w,c	;volatile
  7078  000BB8  0940               	iorlw	64
  7079  000BBA  D002               	goto	L21
  7080  000BBC                     l4173:
  7081                           
  7082                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  7083  000BBC  5089               	movf	3977,w,c	;volatile
  7084  000BBE  0BBF               	andlw	191
  7085  000BC0                     L21:
  7086  000BC0  6E89               	movwf	3977,c	;volatile
  7087                           
  7088                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  7089  000BC2  A02B               	btfss	LED_Control@diode+1,0,c
  7090  000BC4  D003               	goto	l4179
  7091                           
  7092                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  7093  000BC6  508C               	movf	3980,w,c	;volatile
  7094  000BC8  0902               	iorlw	2
  7095  000BCA  D002               	goto	L22
  7096  000BCC                     l4179:
  7097                           
  7098                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  7099  000BCC  508C               	movf	3980,w,c	;volatile
  7100  000BCE  0BFD               	andlw	253
  7101  000BD0                     L22:
  7102  000BD0  6E8C               	movwf	3980,c	;volatile
  7103                           
  7104                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  7105  000BD2  A22B               	btfss	LED_Control@diode+1,1,c
  7106  000BD4  D004               	goto	l4185
  7107                           
  7108                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  7109  000BD6  508C               	movf	3980,w,c	;volatile
  7110  000BD8  0908               	iorlw	8
  7111  000BDA  6E8C               	movwf	3980,c	;volatile
  7112                           
  7113                           ;LED.c: 450:         }
  7114  000BDC  0012               	return	
  7115  000BDE                     l4185:
  7116                           
  7117                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  7118  000BDE  508C               	movf	3980,w,c	;volatile
  7119  000BE0  0BF7               	andlw	247
  7120  000BE2  6E8C               	movwf	3980,c	;volatile
  7121  000BE4  0012               	return		;funcret
  7122  000BE6                     __end_of_LED_Control:
  7123                           	opt callstack 0
  7124                           
  7125 ;; *************** function _INI_GlobalInterrupt *****************
  7126 ;; Defined at:
  7127 ;;		line 78 in file "INI.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		None
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;Total ram usage:        0 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    3
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_INI_All
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	text54
  7156  001BE0                     __ptext54:
  7157                           	opt callstack 0
  7158  001BE0                     _INI_GlobalInterrupt:
  7159                           	opt callstack 26
  7160                           
  7161                           ;INI.c: 80: INTCONbits.GIEH=1;
  7162                           
  7163                           ;incstack = 0
  7164  001BE0  8EF2               	bsf	4082,7,c	;volatile
  7165                           
  7166                           ;INI.c: 81: INTCONbits.GIEL=1;
  7167  001BE2  8CF2               	bsf	4082,6,c	;volatile
  7168                           
  7169                           ;INI.c: 82: RCONbits.IPEN=1;
  7170  001BE4  8ED0               	bsf	4048,7,c	;volatile
  7171                           
  7172                           ;INI.c: 83: IPEN =1;
  7173  001BE6  8ED0               	bsf	4048,7,c	;volatile
  7174                           
  7175                           ;INI.c: 85: PEIE=1;
  7176  001BE8  8CF2               	bsf	4082,6,c	;volatile
  7177                           
  7178                           ;INI.c: 86: TMR1IP = 0;
  7179  001BEA  909F               	bcf	3999,0,c	;volatile
  7180  001BEC  0012               	return		;funcret
  7181  001BEE                     __end_of_INI_GlobalInterrupt:
  7182                           	opt callstack 0
  7183                           
  7184 ;; *************** function _CAN_Setup *****************
  7185 ;; Defined at:
  7186 ;;		line 24 in file "CAN.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;		None
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;		None
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1    wreg      void 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7204 ;;Total ram usage:        1 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    5
  7207 ;; This function calls:
  7208 ;;		_CAN_SetupClock
  7209 ;;		_CAN_SetupMask
  7210 ;; This function is called by:
  7211 ;;		_INI_All
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text55
  7216  0015F6                     __ptext55:
  7217                           	opt callstack 0
  7218  0015F6                     _CAN_Setup:
  7219                           	opt callstack 24
  7220                           
  7221                           ;CAN.c: 29:     CANCON = 0x80;
  7222                           
  7223                           ;incstack = 0
  7224  0015F6  0E80               	movlw	128
  7225  0015F8  6E6F               	movwf	3951,c	;volatile
  7226  0015FA                     l4571:
  7227                           
  7228                           ;CAN.c: 30:     while((CANSTAT & 0xE0)!=0x80)
  7229  0015FA  506E               	movf	3950,w,c	;volatile
  7230  0015FC  0BE0               	andlw	224
  7231  0015FE  0A80               	xorlw	128
  7232  001600  A4D8               	btfss	status,2,c
  7233  001602  D7FB               	goto	l4571
  7234                           
  7235                           ;CAN.c: 35:     BSEL0 = 0;
  7236  001604  0E00               	movlw	0
  7237  001606  010D               	movlb	13	; () banked
  7238  001608  6FF8               	movwf	248,b	;volatile
  7239                           
  7240                           ;CAN.c: 36:     TXB0CON = 0;
  7241  00160A  0E00               	movlw	0
  7242  00160C  010F               	movlb	15	; () banked
  7243  00160E  6F40               	movwf	64,b	;volatile
  7244                           
  7245                           ;CAN.c: 37:     RXB0CON = 0;
  7246  001610  0E00               	movlw	0
  7247  001612  6E60               	movwf	3936,c	;volatile
  7248                           
  7249                           ;CAN.c: 38:     RXB1CON = 0;
  7250  001614  0E00               	movlw	0
  7251  001616  6F50               	movwf	80,b	;volatile
  7252                           
  7253                           ;CAN.c: 39:     B0CON = 0;
  7254  001618  0E00               	movlw	0
  7255  00161A  010E               	movlb	14	; () banked
  7256  00161C  6F20               	movwf	32,b	;volatile
  7257                           
  7258                           ;CAN.c: 40:     B1CON = 0;
  7259  00161E  0E00               	movlw	0
  7260  001620  6F30               	movwf	48,b	;volatile
  7261                           
  7262                           ;CAN.c: 41:     PIE3 = 0;
  7263  001622  0E00               	movlw	0
  7264  001624  6EA3               	movwf	4003,c	;volatile
  7265                           
  7266                           ; BSR set to: 14
  7267                           ;CAN.c: 42:     IPR3 = 0xFF;
  7268  001626  68A5               	setf	4005,c	;volatile
  7269                           
  7270                           ;CAN.c: 43:     PIR3 = 0x00;
  7271  001628  0E00               	movlw	0
  7272  00162A  6EA4               	movwf	4004,c	;volatile
  7273                           
  7274                           ;CAN.c: 44:     BIE0 = 0;
  7275  00162C  0E00               	movlw	0
  7276  00162E  010D               	movlb	13	; () banked
  7277  001630  6FFA               	movwf	250,b	;volatile
  7278                           
  7279                           ;CAN.c: 48:     ECANCON = 0x90;
  7280  001632  0E90               	movlw	144
  7281  001634  6E77               	movwf	3959,c	;volatile
  7282                           
  7283                           ; BSR set to: 13
  7284                           ;CAN.c: 51:     CAN_SetupClock();
  7285  001636  EC73  F00D         	call	_CAN_SetupClock	;wreg free
  7286                           
  7287                           ;CAN.c: 54:     CAN_SetupMask();
  7288  00163A  EC8F  F00A         	call	_CAN_SetupMask	;wreg free
  7289                           
  7290                           ;CAN.c: 56:     CIOCON = 0xff;
  7291  00163E  6873               	setf	3955,c	;volatile
  7292                           
  7293                           ;CAN.c: 62:     CANCON = 0x00;
  7294  001640  0E00               	movlw	0
  7295  001642  6E6F               	movwf	3951,c	;volatile
  7296  001644                     l4583:
  7297                           
  7298                           ;CAN.c: 63:     while((CANSTAT & 0xE0) != 0x00)
  7299  001644  CF6E F02A          	movff	3950,??_CAN_Setup	;volatile
  7300  001648  0EE0               	movlw	224
  7301  00164A  162A               	andwf	??_CAN_Setup,f,c
  7302  00164C  B4D8               	btfsc	status,2,c
  7303  00164E  0012               	return	
  7304  001650  D7F9               	goto	l4583
  7305  001652                     __end_of_CAN_Setup:
  7306                           	opt callstack 0
  7307                           
  7308 ;; *************** function _CAN_SetupMask *****************
  7309 ;; Defined at:
  7310 ;;		line 84 in file "CAN.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    4
  7331 ;; This function calls:
  7332 ;;		_CAN_SetupFilter_Ne
  7333 ;; This function is called by:
  7334 ;;		_CAN_Setup
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text56
  7339  00151E                     __ptext56:
  7340                           	opt callstack 0
  7341  00151E                     _CAN_SetupMask:
  7342                           	opt callstack 24
  7343                           
  7344                           ;CAN.c: 86:     MSEL0 = 0x50;
  7345                           
  7346                           ;incstack = 0
  7347  00151E  0E50               	movlw	80
  7348  001520  010D               	movlb	13	; () banked
  7349  001522  6FF0               	movwf	240,b	;volatile
  7350                           
  7351                           ;CAN.c: 87:     MSEL1 = 0x55;
  7352  001524  0E55               	movlw	85
  7353  001526  6FF1               	movwf	241,b	;volatile
  7354                           
  7355                           ;CAN.c: 88:     MSEL2 = 0x55;
  7356  001528  0E55               	movlw	85
  7357  00152A  6FF2               	movwf	242,b	;volatile
  7358                           
  7359                           ;CAN.c: 89:     MSEL3 = 0x55;
  7360  00152C  0E55               	movlw	85
  7361  00152E  6FF3               	movwf	243,b	;volatile
  7362                           
  7363                           ;CAN.c: 92:     RXM0SIDH = 0b00000000;
  7364  001530  0E00               	movlw	0
  7365  001532  010F               	movlb	15	; () banked
  7366  001534  6F18               	movwf	24,b	;volatile
  7367                           
  7368                           ;CAN.c: 93:     RXM0SIDL = 0b00001011;
  7369  001536  0E0B               	movlw	11
  7370  001538  6F19               	movwf	25,b	;volatile
  7371                           
  7372                           ; BSR set to: 15
  7373                           ;CAN.c: 94:     RXM0EIDH = 0xFF;
  7374  00153A  691A               	setf	26,b	;volatile
  7375                           
  7376                           ; BSR set to: 15
  7377                           ;CAN.c: 95:     RXM0EIDL = 0xFF;
  7378  00153C  691B               	setf	27,b	;volatile
  7379                           
  7380                           ; BSR set to: 15
  7381                           ;CAN.c: 98:     RXM1SIDH = 0xFF;
  7382  00153E  691C               	setf	28,b	;volatile
  7383                           
  7384                           ; BSR set to: 15
  7385                           ;CAN.c: 99:     RXM1SIDL = 0xFF;
  7386  001540  691D               	setf	29,b	;volatile
  7387                           
  7388                           ; BSR set to: 15
  7389                           ;CAN.c: 100:     RXM1EIDH = 0xFF;
  7390  001542  691E               	setf	30,b	;volatile
  7391                           
  7392                           ; BSR set to: 15
  7393                           ;CAN.c: 101:     RXM1EIDL = 0xFF;
  7394  001544  691F               	setf	31,b	;volatile
  7395                           
  7396                           ;CAN.c: 104:     RXM0SIDH = 0x00;
  7397  001546  0E00               	movlw	0
  7398  001548  6F18               	movwf	24,b	;volatile
  7399                           
  7400                           ;CAN.c: 105:     RXM0SIDL = 0x00;
  7401  00154A  0E00               	movlw	0
  7402  00154C  6F19               	movwf	25,b	;volatile
  7403                           
  7404                           ;CAN.c: 110:     RXF0SIDH = 0x00;
  7405  00154E  0E00               	movlw	0
  7406  001550  6F00               	movwf	0,b	;volatile
  7407                           
  7408                           ;CAN.c: 111:     RXF0SIDL = 0x01;
  7409  001552  0E01               	movlw	1
  7410  001554  6F01               	movwf	1,b	;volatile
  7411                           
  7412                           ; BSR set to: 15
  7413                           ;CAN.c: 112:     RXF0SIDLbits.EXIDEN = 1;
  7414  001556  8701               	bsf	1,3,b	;volatile
  7415                           
  7416                           ;CAN.c: 113:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7417  001558  5004               	movf	_DaneCan+3,w,c
  7418  00155A  6F02               	movwf	2,b	;volatile
  7419                           
  7420                           ; BSR set to: 15
  7421                           ;CAN.c: 115:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7422  00155C  C003  FF03         	movff	_DaneCan+2,3843	;volatile
  7423                           
  7424                           ;CAN.c: 117:     RXF1SIDH = 0x00;
  7425  001560  0E00               	movlw	0
  7426  001562  6F04               	movwf	4,b	;volatile
  7427                           
  7428                           ;CAN.c: 118:     RXF1SIDL = 0x01;
  7429  001564  0E01               	movlw	1
  7430  001566  6F05               	movwf	5,b	;volatile
  7431                           
  7432                           ; BSR set to: 15
  7433                           ;CAN.c: 119:     RXF1SIDLbits.EXIDEN = 1;
  7434  001568  8705               	bsf	5,3,b	;volatile
  7435                           
  7436                           ;CAN.c: 120:     RXF1EIDH = 0x7F;
  7437  00156A  0E7F               	movlw	127
  7438  00156C  6F06               	movwf	6,b	;volatile
  7439                           
  7440                           ; BSR set to: 15
  7441                           ;CAN.c: 121:     RXF1EIDL = 0xFF;
  7442  00156E  6907               	setf	7,b	;volatile
  7443                           
  7444                           ; BSR set to: 15
  7445                           ;CAN.c: 123:     CAN_SetupFilter_Ne();
  7446  001570  EC10  F009         	call	_CAN_SetupFilter_Ne	;wreg free
  7447                           
  7448                           ;CAN.c: 126:     RXFBCON0 = 0b00000000;
  7449  001574  0E00               	movlw	0
  7450  001576  010D               	movlb	13	; () banked
  7451  001578  6FE0               	movwf	224,b	;volatile
  7452                           
  7453                           ; BSR set to: 13
  7454                           ;CAN.c: 128:     RXFBCON1 = 0b00010001;
  7455  00157A  0E11               	movlw	17
  7456  00157C  6FE1               	movwf	225,b	;volatile
  7457                           
  7458                           ; BSR set to: 13
  7459                           ;CAN.c: 130:     RXFBCON2 = 0b00010001;
  7460  00157E  0E11               	movlw	17
  7461  001580  6FE2               	movwf	226,b	;volatile
  7462                           
  7463                           ; BSR set to: 13
  7464                           ;CAN.c: 132:     RXFBCON3 = 0b00010001;
  7465  001582  0E11               	movlw	17
  7466  001584  6FE3               	movwf	227,b	;volatile
  7467                           
  7468                           ; BSR set to: 13
  7469                           ;CAN.c: 134:     RXFBCON4 = 0b00010001;
  7470  001586  0E11               	movlw	17
  7471  001588  6FE4               	movwf	228,b	;volatile
  7472                           
  7473                           ; BSR set to: 13
  7474                           ;CAN.c: 136:     RXFCON0 = 0b01111111;
  7475  00158A  0E7F               	movlw	127
  7476  00158C  6FD4               	movwf	212,b	;volatile
  7477                           
  7478                           ; BSR set to: 13
  7479  00158E  0012               	return		;funcret
  7480  001590                     __end_of_CAN_SetupMask:
  7481                           	opt callstack 0
  7482                           
  7483 ;; *************** function _CAN_SetupFilter_Ne *****************
  7484 ;; Defined at:
  7485 ;;		line 140 in file "CAN.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;		None
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;Total ram usage:        0 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    3
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_CAN_SetupMask
  7510 ;;		_FRAME_AdressOfNeighbors
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text57
  7515  001220                     __ptext57:
  7516                           	opt callstack 0
  7517  001220                     _CAN_SetupFilter_Ne:
  7518                           	opt callstack 24
  7519                           
  7520                           ;CAN.c: 144:     RXF2SIDH = 0;
  7521                           
  7522                           ; BSR set to: 13
  7523                           ;incstack = 0
  7524  001220  0E00               	movlw	0
  7525  001222  010F               	movlb	15	; () banked
  7526  001224  6F08               	movwf	8,b	;volatile
  7527                           
  7528                           ;CAN.c: 145:     RXF2SIDL = 0x20;
  7529  001226  0E20               	movlw	32
  7530  001228  6F09               	movwf	9,b	;volatile
  7531                           
  7532                           ; BSR set to: 15
  7533                           ;CAN.c: 146:     RXF2SIDLbits.EXIDEN = 1;
  7534  00122A  8709               	bsf	9,3,b	;volatile
  7535                           
  7536                           ;CAN.c: 147:     RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7537  00122C  5024               	movf	_NeightAdress1+1,w,c	;volatile
  7538  00122E  6F0A               	movwf	10,b	;volatile
  7539                           
  7540                           ; BSR set to: 15
  7541                           ;CAN.c: 148:     RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7542  001230  C023  FF0B         	movff	_NeightAdress1,3851	;volatile
  7543                           
  7544                           ;CAN.c: 151:     RXF3SIDH = 0;
  7545  001234  0E00               	movlw	0
  7546  001236  6F0C               	movwf	12,b	;volatile
  7547                           
  7548                           ;CAN.c: 152:     RXF3SIDL = 0x20;
  7549  001238  0E20               	movlw	32
  7550  00123A  6F0D               	movwf	13,b	;volatile
  7551                           
  7552                           ; BSR set to: 15
  7553                           ;CAN.c: 153:     RXF3SIDLbits.EXIDEN = 1;
  7554  00123C  870D               	bsf	13,3,b	;volatile
  7555                           
  7556                           ;CAN.c: 154:     RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7557  00123E  504B               	movf	_NeightAdress2+1,w,c	;volatile
  7558  001240  6F0E               	movwf	14,b	;volatile
  7559                           
  7560                           ; BSR set to: 15
  7561                           ;CAN.c: 155:     RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7562  001242  C04A  FF0F         	movff	_NeightAdress2,3855	;volatile
  7563                           
  7564                           ;CAN.c: 157:     RXF4SIDH = 0;
  7565  001246  0E00               	movlw	0
  7566  001248  6F10               	movwf	16,b	;volatile
  7567                           
  7568                           ;CAN.c: 158:     RXF4SIDL = 0x20;
  7569  00124A  0E20               	movlw	32
  7570  00124C  6F11               	movwf	17,b	;volatile
  7571                           
  7572                           ; BSR set to: 15
  7573                           ;CAN.c: 159:     RXF4SIDLbits.EXIDEN = 1;
  7574  00124E  8711               	bsf	17,3,b	;volatile
  7575                           
  7576                           ;CAN.c: 160:     RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7577  001250  5022               	movf	_NeightAdress3+1,w,c	;volatile
  7578  001252  6F12               	movwf	18,b	;volatile
  7579                           
  7580                           ; BSR set to: 15
  7581                           ;CAN.c: 161:     RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7582  001254  C021  FF13         	movff	_NeightAdress3,3859	;volatile
  7583                           
  7584                           ;CAN.c: 163:     RXF5SIDH = 0;
  7585  001258  0E00               	movlw	0
  7586  00125A  6F14               	movwf	20,b	;volatile
  7587                           
  7588                           ;CAN.c: 164:     RXF5SIDL = 0x20;
  7589  00125C  0E20               	movlw	32
  7590  00125E  6F15               	movwf	21,b	;volatile
  7591                           
  7592                           ; BSR set to: 15
  7593                           ;CAN.c: 165:     RXF5SIDLbits.EXIDEN = 1;
  7594  001260  8715               	bsf	21,3,b	;volatile
  7595                           
  7596                           ;CAN.c: 166:     RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7597  001262  5020               	movf	_NeightAdress4+1,w,c	;volatile
  7598  001264  6F16               	movwf	22,b	;volatile
  7599                           
  7600                           ; BSR set to: 15
  7601                           ;CAN.c: 167:     RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7602  001266  C01F  FF17         	movff	_NeightAdress4,3863	;volatile
  7603                           
  7604                           ;CAN.c: 169:     RXF6SIDH = 0;
  7605  00126A  0E00               	movlw	0
  7606  00126C  010D               	movlb	13	; () banked
  7607  00126E  6F60               	movwf	96,b	;volatile
  7608                           
  7609                           ;CAN.c: 170:     RXF6SIDL = 0x20;
  7610  001270  0E20               	movlw	32
  7611  001272  6F61               	movwf	97,b	;volatile
  7612                           
  7613                           ; BSR set to: 13
  7614                           ;CAN.c: 171:     RXF6SIDLbits.EXIDEN = 1;
  7615  001274  8761               	bsf	97,3,b	;volatile
  7616                           
  7617                           ;CAN.c: 172:     RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7618  001276  501E               	movf	_NeightAdress5+1,w,c	;volatile
  7619  001278  6F62               	movwf	98,b	;volatile
  7620                           
  7621                           ; BSR set to: 13
  7622                           ;CAN.c: 173:     RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7623  00127A  C01D  FD63         	movff	_NeightAdress5,3427	;volatile
  7624                           
  7625                           ;CAN.c: 175:     RXF7SIDH = 0;
  7626  00127E  0E00               	movlw	0
  7627  001280  6F64               	movwf	100,b	;volatile
  7628                           
  7629                           ;CAN.c: 176:     RXF7SIDL = 0x20;
  7630  001282  0E20               	movlw	32
  7631  001284  6F65               	movwf	101,b	;volatile
  7632                           
  7633                           ; BSR set to: 13
  7634                           ;CAN.c: 177:     RXF7SIDLbits.EXIDEN = 1;
  7635  001286  8765               	bsf	101,3,b	;volatile
  7636                           
  7637                           ;CAN.c: 178:     RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7638  001288  501C               	movf	_NeightAdress6+1,w,c	;volatile
  7639  00128A  6F66               	movwf	102,b	;volatile
  7640                           
  7641                           ; BSR set to: 13
  7642                           ;CAN.c: 179:     RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7643  00128C  C01B  FD67         	movff	_NeightAdress6,3431	;volatile
  7644                           
  7645                           ;CAN.c: 181:     RXF8SIDH = 0;
  7646  001290  0E00               	movlw	0
  7647  001292  6F68               	movwf	104,b	;volatile
  7648                           
  7649                           ;CAN.c: 182:     RXF8SIDL = 0x20;
  7650  001294  0E20               	movlw	32
  7651  001296  6F69               	movwf	105,b	;volatile
  7652                           
  7653                           ; BSR set to: 13
  7654                           ;CAN.c: 183:     RXF8SIDLbits.EXIDEN = 1;
  7655  001298  8769               	bsf	105,3,b	;volatile
  7656                           
  7657                           ;CAN.c: 184:     RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7658  00129A  501A               	movf	_NeightAdress7+1,w,c	;volatile
  7659  00129C  6F6A               	movwf	106,b	;volatile
  7660                           
  7661                           ; BSR set to: 13
  7662                           ;CAN.c: 185:     RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7663  00129E  C019  FD6B         	movff	_NeightAdress7,3435	;volatile
  7664                           
  7665                           ;CAN.c: 187:     RXF9SIDH = 0;
  7666  0012A2  0E00               	movlw	0
  7667  0012A4  6F70               	movwf	112,b	;volatile
  7668                           
  7669                           ;CAN.c: 188:     RXF9SIDL = 0x20;
  7670  0012A6  0E20               	movlw	32
  7671  0012A8  6F71               	movwf	113,b	;volatile
  7672                           
  7673                           ; BSR set to: 13
  7674                           ;CAN.c: 189:     RXF9SIDLbits.EXIDEN = 1;
  7675  0012AA  8771               	bsf	113,3,b	;volatile
  7676                           
  7677                           ;CAN.c: 190:     RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7678  0012AC  5018               	movf	_NeightAdress8+1,w,c	;volatile
  7679  0012AE  6F72               	movwf	114,b	;volatile
  7680                           
  7681                           ; BSR set to: 13
  7682                           ;CAN.c: 191:     RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7683  0012B0  C017  FD73         	movff	_NeightAdress8,3443	;volatile
  7684                           
  7685                           ; BSR set to: 13
  7686  0012B4  0012               	return		;funcret
  7687  0012B6                     __end_of_CAN_SetupFilter_Ne:
  7688                           	opt callstack 0
  7689                           
  7690 ;; *************** function _CAN_SetupClock *****************
  7691 ;; Defined at:
  7692 ;;		line 199 in file "CAN.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;		None
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;		None
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  1    wreg      void 
  7699 ;; Registers used:
  7700 ;;		None
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;Total ram usage:        0 bytes
  7711 ;; Hardware stack levels used:    1
  7712 ;; Hardware stack levels required when called:    3
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_CAN_Setup
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text58
  7721  001AE6                     __ptext58:
  7722                           	opt callstack 0
  7723  001AE6                     _CAN_SetupClock:
  7724                           	opt callstack 25
  7725                           
  7726                           ;CAN.c: 201:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7727                           
  7728                           ; BSR set to: 13
  7729                           ;incstack = 0
  7730  001AE6  8070               	bsf	3952,0,c	;volatile
  7731                           
  7732                           ;CAN.c: 202:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7733  001AE8  8270               	bsf	3952,1,c	;volatile
  7734                           
  7735                           ;CAN.c: 203:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7736  001AEA  9470               	bcf	3952,2,c	;volatile
  7737                           
  7738                           ;CAN.c: 204:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7739  001AEC  9670               	bcf	3952,3,c	;volatile
  7740                           
  7741                           ;CAN.c: 205:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7742  001AEE  9870               	bcf	3952,4,c	;volatile
  7743                           
  7744                           ;CAN.c: 206:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7745  001AF0  9A70               	bcf	3952,5,c	;volatile
  7746                           
  7747                           ;CAN.c: 208:     BRGCON1bits.SJW0 = 1;
  7748  001AF2  8C70               	bsf	3952,6,c	;volatile
  7749                           
  7750                           ;CAN.c: 209:     BRGCON1bits.SJW1 = 1;
  7751  001AF4  8E70               	bsf	3952,7,c	;volatile
  7752                           
  7753                           ;CAN.c: 211:     BRGCON2bits.SEG1PH0 = 1;
  7754  001AF6  8671               	bsf	3953,3,c	;volatile
  7755                           
  7756                           ;CAN.c: 212:     BRGCON2bits.SEG1PH1 = 1;
  7757  001AF8  8871               	bsf	3953,4,c	;volatile
  7758                           
  7759                           ;CAN.c: 213:     BRGCON2bits.SEG1PH2 = 1;
  7760  001AFA  8A71               	bsf	3953,5,c	;volatile
  7761                           
  7762                           ;CAN.c: 215:     BRGCON2bits.PRSEG2 = 1;
  7763  001AFC  8471               	bsf	3953,2,c	;volatile
  7764                           
  7765                           ;CAN.c: 216:     BRGCON2bits.PRSEG1 = 0;
  7766  001AFE  9271               	bcf	3953,1,c	;volatile
  7767                           
  7768                           ;CAN.c: 217:     BRGCON2bits.PRSEG0 = 0;
  7769  001B00  9071               	bcf	3953,0,c	;volatile
  7770                           
  7771                           ;CAN.c: 219:     BRGCON3bits.SEG2PH0 = 1;
  7772  001B02  8072               	bsf	3954,0,c	;volatile
  7773                           
  7774                           ;CAN.c: 220:     BRGCON3bits.SEG2PH1 = 0;
  7775  001B04  9272               	bcf	3954,1,c	;volatile
  7776                           
  7777                           ;CAN.c: 221:     BRGCON3bits.SEG2PH2 = 1;
  7778  001B06  8472               	bsf	3954,2,c	;volatile
  7779                           
  7780                           ;CAN.c: 223:     BRGCON2bits.SAM = 1;
  7781  001B08  8C71               	bsf	3953,6,c	;volatile
  7782                           
  7783                           ;CAN.c: 224:     BRGCON2bits.SEG2PHTS = 1;
  7784  001B0A  8E71               	bsf	3953,7,c	;volatile
  7785  001B0C  0012               	return		;funcret
  7786  001B0E                     __end_of_CAN_SetupClock:
  7787                           	opt callstack 0
  7788                           
  7789 ;; *************** function _FLASH_Write *****************
  7790 ;; Defined at:
  7791 ;;		line 23 in file "FLASH.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  addr            4    5[COMRAM] long 
  7794 ;;  val             2    9[COMRAM] unsigned int 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  flashWrBufPt    2   15[COMRAM] PTR unsigned int 
  7797 ;;		 -> FLASH_Write@val(2), 
  7798 ;;  GIEBitValue     2   13[COMRAM] unsigned int 
  7799 ;;  i               2    0        int 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      void 
  7802 ;; Registers used:
  7803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7809 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7810 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;Total ram usage:       12 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    3
  7816 ;; This function calls:
  7817 ;;		Nothing
  7818 ;; This function is called by:
  7819 ;;		_main
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text59
  7824  00133A                     __ptext59:
  7825                           	opt callstack 0
  7826  00133A                     _FLASH_Write:
  7827                           	opt callstack 27
  7828                           
  7829                           ;FLASH.c: 23: void FLASH_Write(long int addr,UINT val);FLASH.c: 24: {;FLASH.c: 25:     U
      +                          INT *flashWrBufPtr = &val;
  7830                           
  7831                           ;incstack = 0
  7832  00133A  0E2E               	movlw	low FLASH_Write@val
  7833  00133C  6E34               	movwf	FLASH_Write@flashWrBufPtr,c
  7834  00133E  0E00               	movlw	high FLASH_Write@val
  7835  001340  6E35               	movwf	FLASH_Write@flashWrBufPtr+1,c
  7836                           
  7837                           ;FLASH.c: 26:     int i;;FLASH.c: 27:    UINT GIEBitValue = INTCONbits.GIE;
  7838  001342  AEF2               	btfss	4082,7,c	;volatile
  7839  001344  D003               	goto	u2060
  7840  001346  6A30               	clrf	??_FLASH_Write& (0+255),c
  7841  001348  2A30               	incf	??_FLASH_Write& (0+255),f,c
  7842  00134A  D001               	goto	u2068
  7843  00134C                     u2060:
  7844  00134C  6A30               	clrf	??_FLASH_Write& (0+255),c
  7845  00134E                     u2068:
  7846  00134E  5030               	movf	??_FLASH_Write,w,c
  7847  001350  6E32               	movwf	FLASH_Write@GIEBitValue,c
  7848  001352  6A33               	clrf	FLASH_Write@GIEBitValue+1,c
  7849                           
  7850                           ;FLASH.c: 30:     TBLPTR = addr;
  7851  001354  C02A  FFF6         	movff	FLASH_Write@addr,tblptrl	;volatile
  7852  001358  C02B  FFF7         	movff	FLASH_Write@addr+1,tblptrh	;volatile
  7853  00135C  C02C  FFF8         	movff	FLASH_Write@addr+2,tblptru	;volatile
  7854                           
  7855                           ;FLASH.c: 34:     TABLAT = (flashWrBufPtr[0] >> 8);
  7856  001360  C034  FFD9         	movff	FLASH_Write@flashWrBufPtr,fsr2l
  7857  001364  C035  FFDA         	movff	FLASH_Write@flashWrBufPtr+1,fsr2h
  7858  001368  CFDE F030          	movff	postinc2,??_FLASH_Write
  7859  00136C  CFDD F031          	movff	postdec2,??_FLASH_Write+1
  7860  001370  C031  F030         	movff	??_FLASH_Write+1,??_FLASH_Write
  7861  001374  6A31               	clrf	??_FLASH_Write+1,c
  7862  001376  5030               	movf	??_FLASH_Write,w,c
  7863  001378  6EF5               	movwf	tablat,c	;volatile
  7864  00137A  000C               	tblwt		*	;# 
  7865                           
  7866                           ;FLASH.c: 36:     TABLAT = (flashWrBufPtr[0] & 0xff);
  7867  00137C  C034  FFD9         	movff	FLASH_Write@flashWrBufPtr,fsr2l
  7868  001380  C035  FFDA         	movff	FLASH_Write@flashWrBufPtr+1,fsr2h
  7869  001384  50DF               	movf	indf2,w,c
  7870  001386  6EF5               	movwf	tablat,c	;volatile
  7871  001388  000C               	tblwt		*	;# 
  7872                           
  7873                           ;FLASH.c: 40:     TBLPTR = addr;
  7874  00138A  C02A  FFF6         	movff	FLASH_Write@addr,tblptrl	;volatile
  7875  00138E  C02B  FFF7         	movff	FLASH_Write@addr+1,tblptrh	;volatile
  7876  001392  C02C  FFF8         	movff	FLASH_Write@addr+2,tblptru	;volatile
  7877                           
  7878                           ;FLASH.c: 42:     EECON1bits.EEPGD = 1;
  7879  001396  8EA6               	bsf	4006,7,c	;volsfr
  7880                           
  7881                           ;FLASH.c: 43:     EECON1bits.CFGS = 0;
  7882  001398  9CA6               	bcf	4006,6,c	;volsfr
  7883                           
  7884                           ;FLASH.c: 44:     EECON1bits.WREN = 1;
  7885  00139A  84A6               	bsf	4006,2,c	;volsfr
  7886                           
  7887                           ;FLASH.c: 46:     INTCONbits.GIE = 0;
  7888  00139C  9EF2               	bcf	4082,7,c	;volatile
  7889                           
  7890                           ;FLASH.c: 47:     EECON2 = 0x55;
  7891  00139E  0E55               	movlw	85
  7892  0013A0  6EA7               	movwf	4007,c	;volsfr
  7893                           
  7894                           ;FLASH.c: 48:     EECON2 = 0xAA;
  7895  0013A2  0EAA               	movlw	170
  7896  0013A4  6EA7               	movwf	4007,c	;volsfr
  7897                           
  7898                           ;FLASH.c: 49:     EECON1bits.WR = 1;
  7899  0013A6  82A6               	bsf	4006,1,c	;volsfr
  7900                           
  7901                           ;FLASH.c: 50:     INTCONbits.GIE = GIEBitValue;
  7902  0013A8  B032               	btfsc	FLASH_Write@GIEBitValue,0,c
  7903  0013AA  D002               	bra	u2075
  7904  0013AC  9EF2               	bcf	4082,7,c	;volatile
  7905  0013AE  D001               	bra	u2076
  7906  0013B0                     u2075:
  7907  0013B0  8EF2               	bsf	4082,7,c	;volatile
  7908  0013B2                     u2076:
  7909                           
  7910                           ;FLASH.c: 51:     EECON1bits.WREN = 0;
  7911  0013B2  94A6               	bcf	4006,2,c	;volsfr
  7912  0013B4  0012               	return		;funcret
  7913  0013B6                     __end_of_FLASH_Write:
  7914                           	opt callstack 0
  7915                           
  7916 ;; *************** function _FLASH_Read *****************
  7917 ;; Defined at:
  7918 ;;		line 16 in file "FLASH.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;  addr            4    5[COMRAM] long 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  2    5[COMRAM] unsigned int 
  7925 ;; Registers used:
  7926 ;;		None
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7936 ;;Total ram usage:        4 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    3
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_main
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text60
  7947  001BAA                     __ptext60:
  7948                           	opt callstack 0
  7949  001BAA                     _FLASH_Read:
  7950                           	opt callstack 27
  7951                           
  7952                           ;FLASH.c: 16: UINT FLASH_Read(long int addr);FLASH.c: 17: {;FLASH.c: 18:     TBLPTR = ad
      +                          dr;
  7953                           
  7954                           ;incstack = 0
  7955  001BAA  C02A  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  7956  001BAE  C02B  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  7957  001BB2  C02C  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  7958  001BB6  0008               	tblrd		*	; ;# 
  7959                           
  7960                           ;FLASH.c: 20:     return TABLAT;
  7961  001BB8  CFF5 F02A          	movff	tablat,?_FLASH_Read	;volatile
  7962  001BBC  6A2B               	clrf	?_FLASH_Read+1,c
  7963  001BBE  0012               	return		;funcret
  7964  001BC0                     __end_of_FLASH_Read:
  7965                           	opt callstack 0
  7966                           
  7967 ;; *************** function _ISR_low *****************
  7968 ;; Defined at:
  7969 ;;		line 16 in file "ISR.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;		None
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, status,2, status,0, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;Total ram usage:        3 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    2
  7990 ;; This function calls:
  7991 ;;		_TMR1_Timer_reset
  7992 ;;		i1_TMR1_Update_flag_Set
  7993 ;; This function is called by:
  7994 ;;		Interrupt level 1
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	intcodelo
  7999  000018                     __pintcodelo:
  8000                           	opt callstack 0
  8001  000018                     _ISR_low:
  8002                           	opt callstack 22
  8003                           
  8004                           ;incstack = 0
  8005  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8006  00001A  CFD8 F027          	movff	status,??_ISR_low
  8007  00001E  CFE8 F028          	movff	wreg,??_ISR_low+1
  8008  000022  CFE0 F029          	movff	bsr,??_ISR_low+2
  8009                           
  8010                           ;ISR.c: 21:     if(TMR1IF==1)
  8011  000026  A09E               	btfss	3998,0,c	;volatile
  8012  000028  D012               	goto	i1l791
  8013                           
  8014                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  8015  00002A  EC87  F00D         	call	_TMR1_Timer_reset	;wreg free
  8016                           
  8017                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  8018  00002E  0E00               	movlw	0
  8019  000030  6E26               	movwf	i1TMR1_Update_flag_Set@a+1,c
  8020  000032  0E01               	movlw	1
  8021  000034  6E25               	movwf	i1TMR1_Update_flag_Set@a,c
  8022  000036  EC25  F00E         	call	i1_TMR1_Update_flag_Set	;wreg free
  8023                           
  8024                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  8025  00003A  0100               	movlb	0	; () banked
  8026  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  8030  00003E  2A10               	incf	ISR_low@ramkaStanuU8,f,c
  8031  000040  0E14               	movlw	20
  8032  000042  6410               	cpfsgt	ISR_low@ramkaStanuU8,c
  8033  000044  D003               	goto	i1l3901
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  8037  000046  0E00               	movlw	0
  8038  000048  6E10               	movwf	ISR_low@ramkaStanuU8,c
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  8042  00004A  8001               	bsf	_DaneCan,0,c
  8043  00004C                     i1l3901:
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;ISR.c: 41:             TMR1IF=0;
  8047  00004C  909E               	bcf	3998,0,c	;volatile
  8048  00004E                     i1l791:
  8049  00004E  C029  FFE0         	movff	??_ISR_low+2,bsr
  8050  000052  C028  FFE8         	movff	??_ISR_low+1,wreg
  8051  000056  C027  FFD8         	movff	??_ISR_low,status
  8052  00005A  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8053  00005C  0010               	retfie	
  8054  00005E                     __end_of_ISR_low:
  8055                           	opt callstack 0
  8056                           
  8057 ;; *************** function i1_TMR1_Update_flag_Set *****************
  8058 ;; Defined at:
  8059 ;;		line 32 in file "TMR1.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  a               2    0[COMRAM] unsigned int 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;		None
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1    wreg      void 
  8066 ;; Registers used:
  8067 ;;		None
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;Total ram usage:        2 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_ISR_low
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text62
  8088  001C4A                     __ptext62:
  8089                           	opt callstack 0
  8090  001C4A                     i1_TMR1_Update_flag_Set:
  8091                           	opt callstack 22
  8092                           
  8093                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  8094                           
  8095                           ;incstack = 0
  8096  001C4A  C025  F009         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  8097  001C4E  C026  F00A         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  8098  001C52  0012               	return		;funcret
  8099  001C54                     __end_ofi1_TMR1_Update_flag_Set:
  8100                           	opt callstack 0
  8101                           
  8102 ;; *************** function _TMR1_Timer_reset *****************
  8103 ;; Defined at:
  8104 ;;		line 63 in file "TMR1.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;		None
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  8109 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      unsigned char 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;Total ram usage:        2 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:    1
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_ISR_low
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text63
  8134  001B0E                     __ptext63:
  8135                           	opt callstack 0
  8136  001B0E                     _TMR1_Timer_reset:
  8137                           	opt callstack 22
  8138                           
  8139                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  8140                           
  8141                           ;incstack = 0
  8142  001B0E  0E00               	movlw	0
  8143  001B10  6E25               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  8144  001B12  0E00               	movlw	0
  8145  001B14  6E26               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  8146                           
  8147                           ;TMR1.c: 70:     t1L = TMR1L;
  8148  001B16  CFCE F025          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  8149                           
  8150                           ;TMR1.c: 71:     t1H = TMR1H;
  8151  001B1A  CFCF F026          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  8152                           
  8153                           ;TMR1.c: 72:     __nop();
  8154  001B1E  F000               	nop	
  8155                           
  8156                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  8157  001B20  0E9E               	movlw	158
  8158  001B22  2626               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  8159                           
  8160                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  8161  001B24  0E57               	movlw	87
  8162  001B26  2625               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  8163                           
  8164                           ;TMR1.c: 75:     TMR1H = t1H;
  8165  001B28  C026  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  8166                           
  8167                           ;TMR1.c: 76:     TMR1L = 0x5B;
  8168  001B2C  0E5B               	movlw	91
  8169  001B2E  6ECE               	movwf	4046,c	;volatile
  8170  001B30  0012               	return		;funcret
  8171  001B32                     __end_of_TMR1_Timer_reset:
  8172                           	opt callstack 0
  8173                           
  8174 ;; *************** function _ISR_high *****************
  8175 ;; Defined at:
  8176 ;;		line 53 in file "ISR.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;		None
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  1    wreg      void 
  8183 ;; Registers used:
  8184 ;;		None
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8194 ;;Total ram usage:        0 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		Interrupt level 2
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	intcode
  8204  000008                     __pintcode:
  8205                           	opt callstack 0
  8206  000008                     _ISR_high:
  8207                           	opt callstack 22
  8208                           
  8209                           ;incstack = 0
  8210  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8211  00000A  ED32  F00E         	call	int_func,f	;refresh shadow registers
  8212                           
  8213                           	psect	intcode_body
  8214  001C64                     __pintcode_body:
  8215                           	opt callstack 22
  8216  001C64                     int_func:
  8217                           	opt callstack 22
  8218  001C64  0006               	pop		; remove dummy address from shadow register refresh
  8219  001C66  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8220  001C68  0011               	retfie		f
  8221  001C6A                     __end_of_ISR_high:
  8222                           	opt callstack 0
  8223  0000                     
  8224                           	psect	rparam
  8225  0000                     
  8226                           	psect	temp
  8227  00004C                     btemp:
  8228                           	opt callstack 0
  8229  00004C                     	ds	1
  8230  0000                     int$flags	set	btemp
  8231  0000                     wtemp8	set	btemp+1
  8232  0000                     ttemp5	set	btemp+1
  8233  0000                     ttemp6	set	btemp+4
  8234  0000                     ttemp7	set	btemp+8
  8235                           tosu	equ	0xFFF
  8236                           tosh	equ	0xFFE
  8237                           tosl	equ	0xFFD
  8238                           stkptr	equ	0xFFC
  8239                           pclatu	equ	0xFFB
  8240                           pclath	equ	0xFFA
  8241                           pcl	equ	0xFF9
  8242                           tblptru	equ	0xFF8
  8243                           tblptrh	equ	0xFF7
  8244                           tblptrl	equ	0xFF6
  8245                           tablat	equ	0xFF5
  8246                           prodh	equ	0xFF4
  8247                           prodl	equ	0xFF3
  8248                           indf0	equ	0xFEF
  8249                           postinc0	equ	0xFEE
  8250                           postdec0	equ	0xFED
  8251                           preinc0	equ	0xFEC
  8252                           plusw0	equ	0xFEB
  8253                           fsr0h	equ	0xFEA
  8254                           fsr0l	equ	0xFE9
  8255                           wreg	equ	0xFE8
  8256                           indf1	equ	0xFE7
  8257                           postinc1	equ	0xFE6
  8258                           postdec1	equ	0xFE5
  8259                           preinc1	equ	0xFE4
  8260                           plusw1	equ	0xFE3
  8261                           fsr1h	equ	0xFE2
  8262                           fsr1l	equ	0xFE1
  8263                           bsr	equ	0xFE0
  8264                           indf2	equ	0xFDF
  8265                           postinc2	equ	0xFDE
  8266                           postdec2	equ	0xFDD
  8267                           preinc2	equ	0xFDC
  8268                           plusw2	equ	0xFDB
  8269                           fsr2h	equ	0xFDA
  8270                           fsr2l	equ	0xFD9
  8271                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         692
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      75
    BANK0           160     17     129
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FLASH_Write@flashWrBufPtr	PTR unsigned int  size(2) Largest target is 2
		 -> FLASH_Write@val(COMRAM[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_All->_NVMInit
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31160
                                             26 COMRAM     2     2      0
                         _FLASH_Read
                        _FLASH_Write
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18341
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   15290
                                             17 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4178
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3289
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3289
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6660
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4176
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    4932
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    2688
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    2688
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     488
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     478
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Write                                         14     8      6     548
                                              5 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     434
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _FLASH_Write
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     11      81       6       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      4B       1       79.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC       3        0.0%
DATA                 0      0     2EC       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 29 15:39:25 2019

               __end_of_FRAME_DeviceReset 0D2E                     ?_FRAME_AveragingTimes 002A  
                            ___awdiv@sign 002F                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 002A  
                       _FRAME_MapPosition 1C6E                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 0030                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 002C                        __size_of_CAN_GenID 0078  
                                     l300 0348                                       l301 034E  
                                     l302 0354                                       l303 035A  
                                     l304 0360                                       l305 0366  
                                     l420 0B3C                                       l392 1406  
                                     l288 07CC                                       l704 07AA  
                             ?_LED_Update 0025                                       l297 033C  
                                     l289 07CA                                       l705 07A2  
                                     l298 03AC                                       l299 0342  
                                     l649 0A92                                       l936 1A56  
                                     l928 1A4E                                       l945 194A  
                            __CFG_CPB$OFF 000000                        ??_FRAME_AxisStatus 002C  
                            __CFG_CPD$OFF 000000                        ?_FRAME_MapPosition 002A  
                      __size_of_CAN_Setup 005C                              ?_LED_Control 002A  
                                     wreg 000FE8                     __end_of_CAN_TakeFrame 05AA  
                             ?_INI_OUTPUT 0025                    __size_of_INI_LED_Start 0034  
                           NVMInit@result 0032                  ??_MOCK_Klikniecie_Spadek 002C  
                   __end_of_CAN_SendFrame 0922                              __CFG_LVP$OFF 000000  
                         _neighborsAdress 0013                 TRM_DataTransmition@weWyU8 000F  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 002C  
                            __CFG_WDT$OFF 000000                                      l4101 0AF6  
                                    l4015 1974                                      l4113 0B16  
                                    l4131 0B4C                                      l4107 0B06  
                         __end_of_INI_All 1B54                                      l1459 17A6  
                                    l4125 0B36                                      l4301 179C  
                                    l4143 0B6C                                      l4119 0B26  
                                    l4071 0AA6                                      l4223 1038  
                                    l4161 0B9C                                      l4137 0B5C  
                                    l3433 1A04                                      l4057 1AC0  
                                    l4241 1080                                      l4217 1020  
                                    l4155 0B8C                                      l4083 0AC6  
                                    l3275 18C4                                      l3259 187E  
                                    l4235 1068                                      l4173 0BBC  
                                    l4149 0B7C                                      l4077 0AB6  
                                    l4501 11D8                                      l4253 10B0  
                                    l4229 1050                                      l4413 0E16  
                                    l4167 0BAC                                      l4095 0AE6  
                                    l4247 1098                                      l4407 0DD0  
                                    l4185 0BDE                                      l4089 0AD6  
                                    l4521 026C                                      l4513 011C  
                                    l4417 0E32                                      l4179 0BCC  
                                    l3387 1A7E                                      l3651 097E  
                                    l4291 177C                                      l4611 0492  
                                    l4515 019E                                      l4259 10C8  
                                    l3645 0950                                      l4533 12CA  
                                    l4613 049A                                      l4605 047E  
                                    l4381 091A                                      l4445 17DC  
                                    l3663 09DA                                      l4615 04A2  
                                    l4607 0484                                      l4623 04BA  
                                    l4631 0518                                      l4519 0266  
                                    l3681 0A64                                      l3657 09AC  
                                    l4289 1774                                      l4545 12F0  
                                    l4561 1322                                      l4641 0546  
                                    l4633 052A                                      l4617 04AA  
                                    l4609 048A                                      l4625 04FA  
                                    l4377 0866                                      l4481 0D0A  
                                    l4721 05EC                                      l4571 15FA  
                                    l3675 0A36                                      l4547 12F8  
                                    l4539 12DA                                      l4643 054E  
                                    l4635 0530                                      l4651 0566  
                                    l4619 04B2                                      l4467 0CA8  
                                    l4491 1740                                      l4731 0632  
                                    l4723 05FA                                      l3669 0A08  
                                    l4565 1330                                      l4557 1318  
                                    l4645 0556                                      l4637 0536  
                                    l4653 05A6                                      l4629 04FE  
                                    l4485 0D1C                                      l4477 0CE8  
                                    l4741 0684                                      l4733 0640  
                                    l4725 0608                                      l4583 1644  
                                    l4647 055E                                      l4639 053E  
                                    l4743 0692                                      l4735 064E  
                                    l4727 0616                                      l4751 0728  
                                    l4719 05DE                                      l4745 06A8  
                                    l4737 065C                                      l4729 0624  
                                    l4825 0EFC                                      l4691 1134  
                                    l4739 066A                                      l4835 0F1E  
                                    l4693 113E                                      l4685 1108  
                                    l4589 036C                                      l4749 06BE  
                                    _BIE0 000DFA                                      l4785 13E2  
                                    l4699 116A                                      l4799 182A  
                       _MOC_Frame_Counter 1BD2                                      u2060 134C  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u2075 13B0  
                                    u2155 1A4A                                      u2076 13B2  
                                    u2068 134E                                      u2156 1A4C  
                                    u2510 1780                                      u2700 0C4E  
                                    _IPR3 000FA5                                      _IPEN 007E87  
                                    _PIE3 000FA3                                      u2706 0C50  
                                    u2650 17EC                                      u2575 083C  
                                    u2840 12FC                                      u2905 0416  
                                    u2690 0C36                                      _PEIE 007F96  
                                    _LOCK 0012                                      u2950 1172  
                                    u2696 0C38                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 002E  
                                    _Dane 000B                           __end_of_ISR_low 005E  
                        LED_Control@diode 002A                      FRAME_AnalogValue@set 002C  
                      ?_MOC_Frame_Counter 002A                                      _main 0E3A  
                        LED_Control@color 002E                           __end_of_NVMInit 1912  
                         __end_of_NVMRead 1A88                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004C  
                          _CAN_SetupClock 1AE6                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 1590  
           __size_of_TMR1_Update_flag_Get 000A                                      start 005E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_LED_Error 001E  
                           __CFG_IESO$OFF 000000                        __size_of_LED_Right 004C  
           __size_of_FRAME_HandleCanFrame 0206                             _LED_Light_Pos 10D2  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                     ??_MOC_Frame_Counter 002C                ??_MOC_Aktualna_Temperatura 002C  
       FRAME_HandleCanFrame@identyfikator 003E                       __size_of_FLASH_Read 0016  
                      __size_of_INI_Timer 0018                 __end_of_FRAME_MapPosition 1C70  
                           _NeightAdress1 0023                             _NeightAdress2 004A  
                           _NeightAdress3 0021                             _NeightAdress4 001F  
                           _NeightAdress5 001D                             _NeightAdress6 001B  
                           _NeightAdress7 0019                             _NeightAdress8 0017  
                        __end_of_LED_Left 18D8             __size_of_MOCK_PrzyspieszenieX 000A  
           __size_of_MOCK_PrzyspieszenieY 000A             __size_of_MOCK_PrzyspieszenieZ 000A  
                   ReadfromEEPROM@Address 002A                                     _B0CON 000E20  
                                   _B1CON 000E30                                     _B2CON 000E40  
                                   _B3CON 000E50                                     _B4CON 000E60  
                                   _B5CON 000E70                          __end_of_LOCK_Get 1C6E  
                                   ?_main 0025                          __end_of_LOCK_Set 1C64  
                         __end_of___awdiv 133A                                     _EEADR 000FA9  
                                   _BSEL0 000DF8                           ___awdiv@divisor 002C  
                                   _T1CON 000FCD                                     _IRCF0 007E9C  
                                   _IRCF1 007E9D         FRAME_ExcitationMultiplier@message 002A  
                                   _IRCF2 007E9E                           __end_of___lwdiv 17B0  
                                   i1l791 004E                       __size_of_FRAME_Plot 0058  
                         ___awdiv@counter 002E                                     _MSEL0 000DF0  
                                   _MSEL1 000DF1                                     _MSEL2 000DF2  
                                   _MSEL3 000DF3                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_PWRT$OFF 000000                                     _Flagi 00C6  
                  ?_CAN_MoveBuffIntoFrame 002A                             __CFG_WRT0$OFF 000000  
              __size_of_FRAME_AnalogValue 0002                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_ISR_high 1C6A  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                 __end_of_MOC_Frame_Counter 1BE0  
                          __CFG_EBTRB$OFF 000000                   i1TMR1_Update_flag_Set@a 0025  
                            ?_MOC_NOTWORK 002A                 __size_of_ReadDataToEEPROM 0172  
                        __end_of_NVMWrite 197E                          __end_of_NVMalloc 1A20  
                                   tablat 000FF5                    __end_of_CAN_SetupClock 1B0E  
                                   ttemp5 004D                                     ttemp6 0050  
                                   ttemp7 0054                                     status 000FD8  
                                   wtemp8 004D                         __end_of_CAN_GenID 14A8  
                          __CFG_PBADEN$ON 000000                       __size_of_LED_Update 007A  
                          ?_LED_Light_Pos 0031                          _TMR1_Timer_reset 1B0E  
                       __end_of_CAN_Setup 1652                             _INI_LED_Start 1A88  
                FLASH_Write@flashWrBufPtr 0034                     _FRAME_ExcitationValue 1912  
        FRAME_AccelerometerStatus@message 002C                           __initialization 1652  
                     __size_of_INI_OUTPUT 0020                          CAN_GenID@frameID 002C  
                            __end_of_main 0F26                    ??_FRAME_AveragingTimes 002C  
              __size_of_FRAME_DeviceReset 0148                  ?_FRAME_AdressOfNeighbors 002A  
                  __size_of_WritetoEEPROM 0034                          CAN_GenID@message 002A  
               _FRAME_AccelerometerStatus 14A8                      __size_of_FLASH_Write 007C  
                                  ??_main 003F                    CAN_MoveBuffIntoFrame@i 002E  
                           __activetblptr 000002                              NVMWrite@addr 002F  
                        _TMR1_Update_flag 0009                   WritetoEEPROM@GIE_Status 000D  
                   __end_of_IsInNeighbors 10D2                           _wartosciSasiada 00E1  
                               ??_INI_All 0033                         __end_of_LED_Error 1B92  
                       __end_of_LED_Right 1896                      WritetoEEPROM@Address 002A  
         __size_of_MOCK_Klikniecie_Spadek 000A                                 ??_ISR_low 0027  
                               ??_NVMInit 0030                                 ??_NVMRead 0032  
                                  _CANCON 000F6F                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 002A               FRAME_ExcitationMultiplier@i 002D  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 1BAA                                    i1l3901 004C  
                                  _TABLAT 000FF5                           ?_CAN_SetupClock 0025  
                                  _TBLPTR 000FF6                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 002C                            ?_INI_LED_Start 0025  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 002E  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 0031  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 002E  
                                  clear_0 167A                                    clear_1 168C  
                                  clear_2 1698                          ___awdiv@quotient 0030  
                            NVMalloc@size 002A                ??_FRAME_PrzypisanieDokarty 002C  
                ??i1_TMR1_Update_flag_Set 0027                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 0041  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                              ??_FLASH_Read 002E  
     __size_of_FRAME_ExcitationMultiplier 004E                __size_of_MOC_Frame_Counter 000E  
                    __size_of_LED_Control 0152                             _WritetoEEPROM 1A20  
                FRAME_MapPosition@message 002A                            FLASH_Read@addr 002A  
                   TMR1_Update_flag_Set@a 002A                                __accesstop 0060  
                 __end_of__initialization 169E                              ??_FRAME_Plot 0033  
                     ISR_low@ramkaStanuU8 0010                                 ?_LED_Left 002A  
                         ??_LED_Light_Pos 0035                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 002A                                 ?_LOCK_Get 0025  
                               ?_LOCK_Set 0025           __end_of_FRAME_AdressOfNeighbors 032E  
                  _MOCK_Klikniecie_Spadek 1C2C                            __pcstackCOMRAM 0025  
                               LED_Left@a 002A                                 LED_Left@b 002C  
                     _INI_GlobalInterrupt 1BE0                                 ?_ISR_high 0025  
                      __end_of_FLASH_Read 1BC0                                 ?_NVMWrite 002D  
                               ?_NVMalloc 002A                              ??_LED_Update 003C  
             __end_of_TRM_DataTransmition 184A                     _FRAME_SoftwareVersion 1590  
                      __end_of_FRAME_Plot 175E                              ??_INI_OUTPUT 002A  
                               LOCK_Set@k 002A                   FRAME_AxisStatus@message 002A  
             IsInNeighbors@message_adress 002A                            ?_WritetoEEPROM 002A  
                    ?_INI_GlobalInterrupt 0025                          _ReadDataToEEPROM 0922  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                            FLASH_Write@val 002E  
                           NVMWrite@count 0031                      __size_of_MOC_NOTWORK 0008  
                         ??_INI_LED_Start 002F                                ??_LED_Left 002C  
                              ??_LOCK_Get 002A                                ??_LOCK_Set 002A  
                      __end_of_LED_Update 1430                        __end_of_INI_OUTPUT 1B74  
                              ??_ISR_high 0025                       TMR1_Timer_reset@t1H 0026  
                     TMR1_Timer_reset@t1L 0025                                   _ECANCON 000F77  
                                 _CANSTAT 000F6E                                ??_NVMWrite 0033  
                 ??_CAN_MoveBuffIntoFrame 002E                                ??_NVMalloc 002E  
            __end_of_TMR1_Update_flag_Get 1C4A              __end_of_TMR1_Update_flag_Set 1C40  
         __size_ofi1_TMR1_Update_flag_Set 000A              __end_of_FRAME_HandleCanFrame 07B0  
                                 _INI_All 1B32                  __end_of_TMR1_Timer_reset 1B32  
                                 _RXB0DLC 000F65                                   _RXB0CON 000F60  
                                 _RXB1CON 000F50                     ??_INI_GlobalInterrupt 002A  
                                 _TXB0CON 000F40                                   _ISR_low 0018  
                                 _RXFCON0 000DD4                                   _NVMInit 18D8  
                                 _NVMRead 1A54                                   _DaneCan 0001  
            __end_of_MOCK_PrzyspieszenieX 1C2C              __end_of_MOCK_PrzyspieszenieY 1C22  
            __end_of_MOCK_PrzyspieszenieZ 1C18        __end_of_FRAME_ExcitationMultiplier 17FE  
              _FRAME_ExcitationMultiplier 17B0               FRAME_HandleCanFrame@message 0036  
                                 __Hparam 0000          ??_MOC_Wynikowa_wartosc_roznicowa 002C  
         ?_MOC_Wynikowa_wartosc_roznicowa 002A                                   __Lparam 0000  
                  __size_of_CAN_TakeFrame 027C                                 _CAN_GenID 1430  
                                 ___awdiv 12B6                                 _CAN_Setup 15F6  
                  __size_of_CAN_SendFrame 0172                                   ___lwdiv 175E  
                       LED_Light_Pos@pos2 0038                                   __pcinit 1652  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 002A  
                                 __ptext0 0E3A                                   __ptext1 17FE  
                                 __ptext2 05AA                                   __ptext3 1B74  
                                 __ptext4 1590                                   __ptext5 0D2E  
                                 __ptext6 1BFA                                   __ptext7 1C54  
                                 __ptext8 1BD2                                   __ptext9 1C04  
                  ?_FRAME_SoftwareVersion 002A                            _ReadfromEEPROM 1BC0  
                         ??_WritetoEEPROM 002D                    __size_of_CAN_SetupMask 0072  
       __size_of_MOC_Aktualna_Temperatura 000A            FRAME_AdressOfNeighbors@nrRamki 002C  
               ?_MOC_Aktualna_Temperatura 002A          __size_of_FRAME_AdressOfNeighbors 02CC  
                        ??_CAN_SetupClock 002A            FRAME_AdressOfNeighbors@message 002A  
                                 main@adr 003F                                 _LED_Error 1B74  
                          __pintcode_body 1C64                                 _LED_Right 184A  
                    end_of_initialization 169E      FRAME_SensorExcitationStatus@statwect 0007  
                           __Lmediumconst 0000                                   int_func 1C64  
                               _INI_Timer 1B92                    i1_TMR1_Update_flag_Set 1C4A  
        TRM_DataTransmition@czujnikWeWyU8 000E                                ?_CAN_GenID 002A  
                           ??_FLASH_Write 0030                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ?_CAN_Setup 0025  
           __size_of_FRAME_AveragingTimes 0036                    __end_of_ReadfromEEPROM 1BD2  
                    CAN_SendFrame@message 002F                          NVMalloc@location 002C  
                           LED_Update@Red 0011                             _CAN_TakeFrame 032E  
                             NVMRead@addr 002E                             _CAN_SendFrame 07B0  
                              ?_LED_Error 0025                               NVMRead@dest 002C  
             FRAME_AdressOfNeighbors@kier 0032                                ?_LED_Right 002A  
                        _FRAME_AxisStatus 197E                   ??_FRAME_ExcitationValue 002C  
                              ?_INI_Timer 0025                   ?_MOCK_Klikniecie_Spadek 002A  
                         _ramkaCanRxKarty 0060                      _TMR1_Update_flag_Get 1C40  
                         _ramkaCanTxKarty 00B5                      _TMR1_Update_flag_Set 1C36  
                           _CAN_SetupMask 151E                         __size_of_LED_Left 0042  
                    _FRAME_HandleCanFrame 05AA                    __size_of_IsInNeighbors 00CA  
                       __size_of_LOCK_Get 0004                         __size_of_LOCK_Set 0008  
                       _WriteDataToEEPROM 0F26                  __end_of_ReadDataToEEPROM 0A94  
                          CAN_TakeFrame@k 0037                        ?_WriteDataToEEPROM 0025  
                         ?_ReadfromEEPROM 002A                             __pidataCOMRAM 1BEE  
                       __size_of_ISR_high 1C62                      _MOCK_PrzyspieszenieX 1C22  
                    _MOCK_PrzyspieszenieY 1C18                      _MOCK_PrzyspieszenieZ 1C0E  
                              LED_Right@a 002A                                LED_Right@b 002E  
                     __end_of_FLASH_Write 13B6                     MOC_Frame_Counter@zeta 0041  
                       __size_of_NVMWrite 0036                             ??_LED_Control 002C  
                     ??_WriteDataToEEPROM 0033                         __size_of_NVMalloc 0036  
                     start_initialization 1652                            ?_CAN_TakeFrame 0032  
                          ?_CAN_SendFrame 002F           FRAME_SensorExcitationStatus@tru 0030  
          __end_of_MOCK_Klikniecie_Spadek 1C36                          __CFG_OSC$IRCIO67 000000  
       __size_of_FRAME_PrzypisanieDokarty 009E                 ?_FRAME_PrzypisanieDokarty 002A  
                   ?_TMR1_Update_flag_Get 002A                     ?_TMR1_Update_flag_Set 002A  
                          ?_CAN_SetupMask 0025                     __end_of_LED_Light_Pos 1182  
                   ?_FRAME_HandleCanFrame 0036                 __end_of_WriteDataToEEPROM 1008  
                             ??_CAN_GenID 002D                               ??_CAN_Setup 002A  
                        __CFG_LPT1OSC$OFF 000000                     ?_MOCK_PrzyspieszenieX 002A  
                   ?_MOCK_PrzyspieszenieY 002A                     ?_MOCK_PrzyspieszenieZ 002A  
                CAN_MoveBuffIntoFrame@Buf 002C      __end_of_FRAME_SensorExcitationStatus 0E3A  
   __size_of_FRAME_SensorExcitationStatus 010C                  CAN_MoveBuffIntoFrame@Ram 002A  
            _FRAME_SensorExcitationStatus 0D2E            __size_of_CAN_MoveBuffIntoFrame 002A  
                             __pbssBIGRAM 00E1             __end_of_CAN_MoveBuffIntoFrame 1AE6  
                         _Fulfillment_Lvl 0047                               __pbssCOMRAM 0001  
                                ?_INI_All 0025                   _FRAME_AdressOfNeighbors 0062  
                         FLASH_Write@addr 002A                             __pcstackBANK0 00D0  
                           _IsInNeighbors 1008                         ?_TMR1_Timer_reset 0025  
                         _ustawieniaKarty 0015                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0025   __end_of_FRAME_DataUpdateAndChangeOption 1706  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 002C  
        ?_FRAME_DataUpdateAndChangeOption 002A           _FRAME_DataUpdateAndChangeOption 16AC  
                           ??_MOC_NOTWORK 002C                __end_of_CAN_SetupFilter_Ne 12B6  
                                ?_NVMInit 0025                                  ?_NVMRead 002C  
                      ??_TMR1_Timer_reset 0025                               ??_LED_Error 002F  
                          NVMWrite@source 002D                               ??_LED_Right 002C  
            __size_of_TRM_DataTransmition 004C                       __end_of_LED_Control 0BE6  
             ?_FRAME_ExcitationMultiplier 002A                               ??_INI_Timer 002A  
                   __end_of_INI_LED_Start 1ABC                          ___lwdiv@dividend 002A  
                               __pintcode 0008                                  ?___awdiv 002A  
                             _FLASH_Write 133A                   ??_FRAME_SoftwareVersion 002C  
        __end_of_MOC_Aktualna_Temperatura 1C0E                                  ?___lwdiv 002A  
                       FRAME_Plot@message 0031                               __pintcodelo 0018  
             __end_of_INI_GlobalInterrupt 1BEE                           ??_CAN_TakeFrame 0034  
           ?_FRAME_SensorExcitationStatus 002C    __end_of_MOC_Wynikowa_wartosc_roznicowa 1C04  
 __size_of_MOC_Wynikowa_wartosc_roznicowa 000A            _MOC_Wynikowa_wartosc_roznicowa 1BFA  
                             _COMSTATbits 000F74                            ?_IsInNeighbors 002A  
                         ??_CAN_SendFrame 0031                          ___lwdiv@quotient 002F  
                 ?i1_TMR1_Update_flag_Set 0025               FRAME_AveragingTimes@message 002A  
                  ??_TMR1_Update_flag_Get 002C                    ??_TMR1_Update_flag_Set 002C  
                         ??_CAN_SetupMask 002A                                  _LED_Left 1896  
                  ??_FRAME_HandleCanFrame 0038                      CAN_TakeFrame@message 0032  
                     __end_of_MOC_NOTWORK 1C5C                                  _LOCK_Get 1C6A  
                    CAN_TakeFrame@tempCON 0036                                  _LOCK_Set 1C5C  
              __size_of_WriteDataToEEPROM 00E2                                  _RXB0EIDH 000F63  
                                _RXB0EIDL 000F64                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXF0EIDH 000F02  
                                _RXF0EIDL 000F03                                  _RXF1EIDH 000F06  
                                _RXF1EIDL 000F07                                  _RXF2EIDH 000F0A  
                                _RXF2EIDL 000F0B                                  _RXF3EIDH 000F0E  
                                _RXF3EIDL 000F0F                                  _RXF4EIDH 000F12  
                                _RXF4EIDL 000F13                                  _RXF5EIDH 000F16  
                                _RXF5EIDL 000F17                                  _RXF6EIDH 000D62  
                                _RXF6EIDL 000D63                                  _RXF0SIDH 000F00  
                                _RXF7EIDH 000D66                                  _RXF0SIDL 000F01  
                                _RXF7EIDL 000D67                                  _RXF1SIDH 000F04  
                                _RXF8EIDH 000D6A                                  _RXF1SIDL 000F05  
                                _RXF8EIDL 000D6B                                  _RXF2SIDH 000F08  
                                _RXF9EIDH 000D72                                  _RXF2SIDL 000F09  
                                _RXF9EIDL 000D73                                  _RXF3SIDH 000F0C  
                                _RXF3SIDL 000F0D                                  _ISR_high 0008  
                                _RXF4SIDH 000F10                                  _RXF4SIDL 000F11  
                                _RXF5SIDH 000F14                                  _RXF5SIDL 000F15  
                                _RXF6SIDH 000D60                                  _RXF6SIDL 000D61  
                                _RXM0EIDH 000F1A                                  _RXF7SIDH 000D64  
                                _RXM0EIDL 000F1B                                  _RXF7SIDL 000D65  
                                _RXM1EIDH 000F1E                                  _RXF8SIDH 000D68  
                                _RXM1EIDL 000F1F                                  _RXF8SIDL 000D69  
                                _RXF9SIDH 000D70                    ??_MOCK_PrzyspieszenieX 002C  
                  ??_MOCK_PrzyspieszenieY 002C                                  _RXF9SIDL 000D71  
                  ??_MOCK_PrzyspieszenieZ 002C                                  _RXFBCON0 000DE0  
                                _RXFBCON1 000DE1                                  _RXFBCON2 000DE2  
                                _RXFBCON3 000DE3                                  _RXFBCON4 000DE4  
                                _RXM0SIDH 000F18                                  _RXM0SIDL 000F19  
                                _RXM1SIDH 000F1C                                  _RXM1SIDL 000F1D  
                __end_of_FRAME_AxisStatus 19B4                                  _NVMWrite 1948  
                  FLASH_Write@GIEBitValue 0032                                  _NVMalloc 19EA  
               ??_FRAME_AdressOfNeighbors 002E                          _DetectorLedRadar 00CB  
                             _LED_Control 0A94                          __size_of_INI_All 0022  
            FRAME_ExcitationValue@message 002A                     __end_of_WritetoEEPROM 1A54  
          __end_ofi1_TMR1_Update_flag_Set 1C54                            _nextEEPosition 0005  
                               copy_data0 1666                          __size_of_ISR_low 0046  
      __size_of_FRAME_AccelerometerStatus 0076              __end_of_FRAME_AveragingTimes 19EA  
                        __size_of_NVMInit 003A                          __size_of_NVMRead 0034  
              ?_FRAME_AccelerometerStatus 002C            __size_of_FRAME_ExcitationValue 0036  
           __end_of_FRAME_ExcitationValue 1948                                _EECON1bits 000FA6  
                                __Hrparam 0000                              _RXB0SIDLbits 000F62  
                        ??_ReadfromEEPROM 002C                                  __Lrparam 0000  
                       ?_ReadDataToEEPROM 0025                          __size_of___awdiv 0084  
                        __size_of___lwdiv 0052                        ??_ReadDataToEEPROM 0032  
                         ??_IsInNeighbors 002C                  _MOC_Aktualna_Temperatura 1C04  
         FRAME_PrzypisanieDokarty@message 002A                        LED_Light_Pos@flage 003A  
                      LED_Light_Pos@color 0035          __end_of_FRAME_PrzypisanieDokarty 1220  
                            _RXF0SIDLbits 000F01                  FRAME_AnalogValue@message 002A  
                         ___lwdiv@divisor 002C                              _RXF1SIDLbits 000F05  
                              _FLASH_Read 1BAA                           ___lwdiv@counter 002E  
                                __ptext10 1C5C                                  __ptext11 1C6A  
                                __ptext20 1948                                  __ptext12 1008  
                                __ptext21 1A20                                  __ptext13 1182  
                                __ptext30 1C22                                  __ptext22 16AC  
                                __ptext14 1706                                  __ptext31 1C2C  
                                __ptext23 197E                                  __ptext15 1C6E  
                                __ptext40 10D2                                  __ptext32 07B0  
                                __ptext24 19B4                                  __ptext16 1912  
                                __ptext41 175E                                  __ptext33 1430  
                                __ptext25 1C70                                  __ptext17 17B0  
                                __ptext50 1B92                                  __ptext42 184A  
                                __ptext34 032E                                  __ptext26 0062  
                                __ptext18 0BE6                                  __ptext51 1B54  
                                __ptext43 1896                                  __ptext35 12B6  
                                __ptext27 14A8                                  __ptext19 0F26  
                                __ptext60 1BAA                                  __ptext52 1A88  
                                __ptext44 1B32                                  __ptext36 1ABC  
                                __ptext28 1C0E            ??_FRAME_SensorExcitationStatus 002E  
                                __ptext53 0A94                                  __ptext45 0922  
                                __ptext37 1C36                                  __ptext29 1C18  
                                __ptext62 1C4A                                  __ptext54 1BE0  
                                __ptext46 1A54                                  __ptext38 1C40  
                                __ptext63 1B0E                                  __ptext55 15F6  
                                __ptext47 1BC0                                  __ptext39 13B6  
                                __ptext56 151E                                  __ptext48 18D8  
                                __ptext57 1220                                  __ptext49 19EA  
                                __ptext58 1AE6                                  __ptext59 133A  
           TRM_DataTransmition@canMessage 00D0                              _RXF2SIDLbits 000F09  
                             _MOC_NOTWORK 1C54                              _RXF3SIDLbits 000F0D  
               FRAME_HandleCanFrame@ident 003C                              _RXF4SIDLbits 000F11  
                FRAME_DeviceReset@message 0033         __end_of_FRAME_AccelerometerStatus 151E  
                            _RXF5SIDLbits 000F15                                _FRAME_Plot 1706  
                           __size_of_main 00EC                              _RXF6SIDLbits 000D61  
                            _RXF7SIDLbits 000D65                   __size_of_CAN_SetupClock 0028  
                            _RXF8SIDLbits 000D69                              _RXF9SIDLbits 000D71  
                                int$flags 004C                       _TRM_DataTransmition 17FE  
                             _RXB0DLCbits 000F65                                _LED_Update 13B6  
                             _RXB0CONbits 000F60                                _INTCONbits 000FF2  
                              _INI_OUTPUT 1B54                         _FRAME_AnalogValue 1C70  
                    ?_TRM_DataTransmition 0025              FRAME_SoftwareVersion@message 002A  
                                intlevel1 0000                                  intlevel2 0000  
                         _czujnikiNaMapie 00CE                        ?_FRAME_AnalogValue 002A  
     FRAME_SensorExcitationStatus@message 002C                               _TXB0CONbits 000F40  
                     ??_FRAME_AnalogValue 002E                 __size_of_TMR1_Timer_reset 0024  
                      _CAN_SetupFilter_Ne 1220                              ?_FLASH_Write 002A  
                LED_Light_Pos@fulfillment 0033                      _FRAME_AveragingTimes 19B4  
                     ?_CAN_SetupFilter_Ne 0025            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0BE6             __end_of_FRAME_SoftwareVersion 15F6  
                      ?_FRAME_DeviceReset 0033                           LED_Update@Green 0049  
               __end_of_FRAME_AnalogValue 1C72                    __size_of_LED_Light_Pos 00B0  
                             ?_FLASH_Read 002A                     _CAN_MoveBuffIntoFrame 1ABC  
                              _WDTCONbits 000FD1                       ??_FRAME_DeviceReset 0035  
                   ??_TRM_DataTransmition 003F                  _FRAME_PrzypisanieDokarty 1182  
                  LED_Light_Pos@LED_array 0036                      ??_CAN_SetupFilter_Ne 002A  
                          LED_Update@pos1 0045                            LED_Update@pos2 0043  
                             ?_FRAME_Plot 0031  
