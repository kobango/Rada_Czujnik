

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 19 13:37:04 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70  0000                     
    71                           ; Version 2.05
    72                           ; Generated 20/12/2018 GMT
    73                           ; 
    74                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F4680 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataCOMRAM
   107  00150C                     __pidataCOMRAM:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for MOC_Frame_Counter@zeta
   111  00150C  0011               	dw	17
   112                           
   113                           ;initializer for LED_Update@pos2
   114  00150E  0001               	dw	1
   115                           
   116                           ;initializer for LED_Update@pos1
   117  001510  0001               	dw	1
   118                           
   119                           ;initializer for _Fulfillment_Lvl
   120  001512  0014               	dw	20
   121                           
   122                           ;initializer for LED_Update@Green
   123  001514  01                 	db	1
   124  0000                     _RXFCON0	set	3540
   125  0000                     _MSEL3	set	3571
   126  0000                     _MSEL2	set	3570
   127  0000                     _MSEL1	set	3569
   128  0000                     _MSEL0	set	3568
   129  0000                     _BIE0	set	3578
   130  0000                     _BSEL0	set	3576
   131  0000                     _B5CON	set	3696
   132  0000                     _B4CON	set	3680
   133  0000                     _B3CON	set	3664
   134  0000                     _B2CON	set	3648
   135  0000                     _B1CON	set	3632
   136  0000                     _B0CON	set	3616
   137  0000                     _TXB0CONbits	set	3904
   138  0000                     _RXF5EIDL	set	3863
   139  0000                     _RXF5EIDH	set	3862
   140  0000                     _RXF5SIDLbits	set	3861
   141  0000                     _RXF4EIDL	set	3859
   142  0000                     _RXF4EIDH	set	3858
   143  0000                     _RXF4SIDLbits	set	3857
   144  0000                     _RXF5SIDL	set	3861
   145  0000                     _RXF5SIDH	set	3860
   146  0000                     _RXF3EIDL	set	3855
   147  0000                     _RXF3EIDH	set	3854
   148  0000                     _RXF3SIDLbits	set	3853
   149  0000                     _RXF3SIDL	set	3853
   150  0000                     _RXF3SIDH	set	3852
   151  0000                     _RXF2EIDL	set	3851
   152  0000                     _RXF2EIDH	set	3850
   153  0000                     _RXF2SIDLbits	set	3849
   154  0000                     _RXF2SIDL	set	3849
   155  0000                     _RXF2SIDH	set	3848
   156  0000                     _RXF1EIDL	set	3847
   157  0000                     _RXF1EIDH	set	3846
   158  0000                     _RXF1SIDLbits	set	3845
   159  0000                     _RXF1SIDL	set	3845
   160  0000                     _RXF1SIDH	set	3844
   161  0000                     _RXF0EIDL	set	3843
   162  0000                     _RXF0EIDH	set	3842
   163  0000                     _RXF0SIDLbits	set	3841
   164  0000                     _RXF0SIDL	set	3841
   165  0000                     _RXF0SIDH	set	3840
   166  0000                     _RXM1EIDL	set	3871
   167  0000                     _RXM1EIDH	set	3870
   168  0000                     _RXM1SIDL	set	3869
   169  0000                     _RXM1SIDH	set	3868
   170  0000                     _RXM0EIDL	set	3867
   171  0000                     _RXM0EIDH	set	3866
   172  0000                     _RXM0SIDL	set	3865
   173  0000                     _RXM0SIDH	set	3864
   174  0000                     _RXB1CON	set	3920
   175  0000                     _TXB0CON	set	3904
   176  0000                     _TRISC	set	3988
   177  0000                     _LATC	set	3979
   178  0000                     _LATE	set	3981
   179  0000                     _LATA	set	3977
   180  0000                     _LATB	set	3978
   181  0000                     _LATD	set	3980
   182  0000                     _TRISD	set	3989
   183  0000                     _TRISE	set	3990
   184  0000                     _TRISB	set	3987
   185  0000                     _TRISA	set	3986
   186  0000                     _RXB0DLCbits	set	3941
   187  0000                     _RXB0DLC	set	3941
   188  0000                     _RXB0SIDH	set	3937
   189  0000                     _RXB0SIDLbits	set	3938
   190  0000                     _RXB0SIDL	set	3938
   191  0000                     _RXB0EIDH	set	3939
   192  0000                     _RXB0EIDL	set	3940
   193  0000                     _COMSTATbits	set	3956
   194  0000                     _RXB0CONbits	set	3936
   195  0000                     _BRGCON3bits	set	3954
   196  0000                     _BRGCON2bits	set	3953
   197  0000                     _BRGCON1bits	set	3952
   198  0000                     _CIOCON	set	3955
   199  0000                     _ECANCON	set	3959
   200  0000                     _RXB0CON	set	3936
   201  0000                     _CANSTAT	set	3950
   202  0000                     _CANCON	set	3951
   203  0000                     _RXB0D0	set	3942
   204  0000                     _WDTCONbits	set	4049
   205  0000                     _RCONbits	set	4048
   206  0000                     _T1CON	set	4045
   207  0000                     _TMR1H	set	4047
   208  0000                     _TMR1L	set	4046
   209  0000                     _PIR3	set	4004
   210  0000                     _IPR3	set	4005
   211  0000                     _PIE3	set	4003
   212  0000                     _RCON	set	4048
   213  0000                     _TMR1IF	set	31984
   214  0000                     _TMR1IP	set	31992
   215  0000                     _IPEN	set	32391
   216  0000                     _TMR1ON	set	32360
   217  0000                     _TMR1IE	set	31976
   218  0000                     _IRCF0	set	32412
   219  0000                     _IRCF1	set	32413
   220  0000                     _IRCF2	set	32414
   221  0000                     _INTCONbits	set	4082
   222  0000                     _PEIE	set	32662
   223                           
   224                           ; #config settings
   225  0000                     
   226                           	psect	cinit
   227  000FDA                     __pcinit:
   228                           	opt callstack 0
   229  000FDA                     start_initialization:
   230                           	opt callstack 0
   231  000FDA                     __initialization:
   232                           	opt callstack 0
   233                           
   234                           ; Initialize objects allocated to COMRAM (9 bytes)
   235                           ; load TBLPTR registers with __pidataCOMRAM
   236  000FDA  0E0C               	movlw	low __pidataCOMRAM
   237  000FDC  6EF6               	movwf	tblptrl,c
   238  000FDE  0E15               	movlw	high __pidataCOMRAM
   239  000FE0  6EF7               	movwf	tblptrh,c
   240  000FE2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   241  000FE4  6EF8               	movwf	tblptru,c
   242  000FE6  EE00  F04B         	lfsr	0,__pdataCOMRAM
   243  000FEA  EE10 F009          	lfsr	1,9
   244  000FEE                     copy_data0:
   245  000FEE  0009               	tblrd		*+
   246  000FF0  CFF5 FFEE          	movff	tablat,postinc0
   247  000FF4  50E5               	movf	postdec1,w,c
   248  000FF6  50E1               	movf	fsr1l,w,c
   249  000FF8  E1FA               	bnz	copy_data0
   250                           
   251                           ; Clear objects allocated to BIGRAM (544 bytes)
   252  000FFA  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   253  000FFE  EE12 F020          	lfsr	1,544
   254  001002                     clear_0:
   255  001002  6AEE               	clrf	postinc0,c
   256  001004  50E5               	movf	postdec1,w,c
   257  001006  50E1               	movf	fsr1l,w,c
   258  001008  E1FC               	bnz	clear_0
   259  00100A  50E2               	movf	fsr1h,w,c
   260  00100C  E1FA               	bnz	clear_0
   261                           
   262                           ; Clear objects allocated to BANK0 (102 bytes)
   263  00100E  EE00  F060         	lfsr	0,__pbssBANK0
   264  001012  0E66               	movlw	102
   265  001014                     clear_1:
   266  001014  6AEE               	clrf	postinc0,c
   267  001016  06E8               	decf	wreg,f,c
   268  001018  E1FD               	bnz	clear_1
   269                           
   270                           ; Clear objects allocated to COMRAM (21 bytes)
   271  00101A  EE00  F036         	lfsr	0,__pbssCOMRAM
   272  00101E  0E15               	movlw	21
   273  001020                     clear_2:
   274  001020  6AEE               	clrf	postinc0,c
   275  001022  06E8               	decf	wreg,f,c
   276  001024  E1FD               	bnz	clear_2
   277  001026                     end_of_initialization:
   278                           	opt callstack 0
   279  001026                     __end_of__initialization:
   280                           	opt callstack 0
   281  001026  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282  001028  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283  00102A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   284  00102C  6EF8               	movwf	tblptru,c
   285  00102E  0100               	movlb	0
   286  001030  EFAF  F009         	goto	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMRAM
   289  000036                     __pbssCOMRAM:
   290                           	opt callstack 0
   291  000036                     _Flagi:
   292                           	opt callstack 0
   293  000036                     	ds	5
   294  00003B                     _DaneCan:
   295                           	opt callstack 0
   296  00003B                     	ds	4
   297  00003F                     _DetectorLedRadar:
   298                           	opt callstack 0
   299  00003F                     	ds	3
   300  000042                     _TMR1_Update_flag:
   301                           	opt callstack 0
   302  000042                     	ds	2
   303  000044                     _Dane:
   304                           	opt callstack 0
   305  000044                     	ds	2
   306  000046                     	ds	1
   307  000047                     	ds	1
   308  000048                     ISR_low@ramkaStanuU8:
   309                           	opt callstack 0
   310  000048                     	ds	1
   311  000049                     	ds	1
   312  00004A                     _LOCK:
   313                           	opt callstack 0
   314  00004A                     	ds	1
   315                           
   316                           	psect	dataCOMRAM
   317  00004B                     __pdataCOMRAM:
   318                           	opt callstack 0
   319  00004B                     MOC_Frame_Counter@zeta:
   320                           	opt callstack 0
   321  00004B                     	ds	2
   322  00004D                     LED_Update@pos2:
   323                           	opt callstack 0
   324  00004D                     	ds	2
   325  00004F                     LED_Update@pos1:
   326                           	opt callstack 0
   327  00004F                     	ds	2
   328  000051                     _Fulfillment_Lvl:
   329                           	opt callstack 0
   330  000051                     	ds	2
   331  000053                     LED_Update@Green:
   332                           	opt callstack 0
   333  000053                     	ds	1
   334                           
   335                           	psect	bssBANK0
   336  000060                     __pbssBANK0:
   337                           	opt callstack 0
   338  000060                     _ramkaCanRxKarty:
   339                           	opt callstack 0
   340  000060                     	ds	85
   341  0000B5                     _ramkaCanTxKarty:
   342                           	opt callstack 0
   343  0000B5                     	ds	17
   344                           
   345                           	psect	bssBIGRAM
   346  0000C6                     __pbssBIGRAM:
   347                           	opt callstack 0
   348  0000C6                     _wartosciSasiada:
   349                           	opt callstack 0
   350  0000C6                     	ds	544
   351                           
   352                           	psect	cstackCOMRAM
   353  000001                     __pcstackCOMRAM:
   354                           	opt callstack 0
   355  000001                     TMR1_Timer_reset@t1L:
   356                           	opt callstack 0
   357  000001                     i1TMR1_Update_flag_Set@a:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x0
   361  000001                     	ds	1
   362  000002                     TMR1_Timer_reset@t1H:
   363                           	opt callstack 0
   364                           
   365                           ; 1 bytes @ 0x1
   366  000002                     	ds	1
   367  000003                     ??_ISR_low:
   368  000003                     
   369                           ; 1 bytes @ 0x2
   370  000003                     	ds	3
   371  000006                     ??_CAN_Setup:
   372  000006                     ?_TMR1_Update_flag_Get:
   373                           	opt callstack 0
   374  000006                     ?_LED_Right:
   375                           	opt callstack 0
   376  000006                     ?_LED_Left:
   377                           	opt callstack 0
   378  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   379                           	opt callstack 0
   380  000006                     ?_MOC_Frame_Counter:
   381                           	opt callstack 0
   382  000006                     ?_MOC_Aktualna_Temperatura:
   383                           	opt callstack 0
   384  000006                     ?_MOC_NOTWORK:
   385                           	opt callstack 0
   386  000006                     ?_MOCK_PrzyspieszenieX:
   387                           	opt callstack 0
   388  000006                     ?_MOCK_PrzyspieszenieY:
   389                           	opt callstack 0
   390  000006                     ?_MOCK_PrzyspieszenieZ:
   391                           	opt callstack 0
   392  000006                     ?_MOCK_Klikniecie_Spadek:
   393                           	opt callstack 0
   394  000006                     ?___wmul:
   395                           	opt callstack 0
   396  000006                     ?___awdiv:
   397                           	opt callstack 0
   398  000006                     ?___lwdiv:
   399                           	opt callstack 0
   400  000006                     LOCK_Set@k:
   401                           	opt callstack 0
   402  000006                     CAN_MoveBuffIntoFrame@Ram:
   403                           	opt callstack 0
   404  000006                     CAN_GenID@message:
   405                           	opt callstack 0
   406  000006                     LED_Right@a:
   407                           	opt callstack 0
   408  000006                     LED_Left@a:
   409                           	opt callstack 0
   410  000006                     LED_Control@diode:
   411                           	opt callstack 0
   412  000006                     TMR1_Update_flag_Set@a:
   413                           	opt callstack 0
   414  000006                     IsInNeighbors@message_adress:
   415                           	opt callstack 0
   416  000006                     FRAME_ExcitationValue@message:
   417                           	opt callstack 0
   418  000006                     FRAME_ExcitationMultiplier@message:
   419                           	opt callstack 0
   420  000006                     FRAME_AveragingTimes@message:
   421                           	opt callstack 0
   422  000006                     FRAME_AxisStatus@message:
   423                           	opt callstack 0
   424  000006                     FRAME_DeviceReset@message:
   425                           	opt callstack 0
   426  000006                     FRAME_MapPosition@message:
   427                           	opt callstack 0
   428  000006                     FRAME_SoftwareVersion@message:
   429                           	opt callstack 0
   430  000006                     FRAME_AnalogValue@message:
   431                           	opt callstack 0
   432  000006                     FRAME_PrzypisanieDokarty@message:
   433                           	opt callstack 0
   434  000006                     ___wmul@multiplier:
   435                           	opt callstack 0
   436  000006                     ___awdiv@dividend:
   437                           	opt callstack 0
   438  000006                     ___lwdiv@dividend:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x5
   442  000006                     	ds	2
   443  000008                     ??_LED_Right:
   444  000008                     ??_IsInNeighbors:
   445  000008                     CAN_GenID@frameID:
   446                           	opt callstack 0
   447  000008                     CAN_MoveBuffIntoFrame@Buf:
   448                           	opt callstack 0
   449  000008                     LED_Left@b:
   450                           	opt callstack 0
   451  000008                     FRAME_AccelerometerStatus@message:
   452                           	opt callstack 0
   453  000008                     FRAME_AnalogValue@set:
   454                           	opt callstack 0
   455  000008                     ___wmul@multiplicand:
   456                           	opt callstack 0
   457  000008                     ___awdiv@divisor:
   458                           	opt callstack 0
   459  000008                     ___lwdiv@divisor:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x7
   463  000008                     	ds	1
   464  000009                     ??_CAN_GenID:
   465  000009                     FRAME_ExcitationMultiplier@i:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x8
   469  000009                     	ds	1
   470  00000A                     CAN_MoveBuffIntoFrame@i:
   471                           	opt callstack 0
   472  00000A                     LED_Control@color:
   473                           	opt callstack 0
   474  00000A                     ___awdiv@counter:
   475                           	opt callstack 0
   476  00000A                     LED_Right@b:
   477                           	opt callstack 0
   478  00000A                     ___wmul@product:
   479                           	opt callstack 0
   480  00000A                     ___lwdiv@quotient:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0x9
   484  00000A                     	ds	1
   485  00000B                     ___awdiv@sign:
   486                           	opt callstack 0
   487  00000B                     CAN_SendFrame@message:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0xA
   491  00000B                     	ds	1
   492  00000C                     ___lwdiv@counter:
   493                           	opt callstack 0
   494  00000C                     IsInNeighbors@i:
   495                           	opt callstack 0
   496  00000C                     FRAME_AdressOfNeighbors@message:
   497                           	opt callstack 0
   498  00000C                     ___awdiv@quotient:
   499                           	opt callstack 0
   500                           
   501                           ; 2 bytes @ 0xB
   502  00000C                     	ds	1
   503  00000D                     ??_CAN_SendFrame:
   504  00000D                     LED_Light_Pos@pos:
   505                           	opt callstack 0
   506  00000D                     FRAME_Plot@message:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0xC
   510  00000D                     	ds	1
   511  00000E                     CAN_TakeFrame@message:
   512                           	opt callstack 0
   513  00000E                     FRAME_SensorExcitationStatus@message:
   514                           	opt callstack 0
   515  00000E                     FRAME_AdressOfNeighbors@nrRamki:
   516                           	opt callstack 0
   517                           
   518                           ; 2 bytes @ 0xD
   519  00000E                     	ds	1
   520  00000F                     ??_FRAME_Plot:
   521  00000F                     LED_Light_Pos@fulfillment:
   522                           	opt callstack 0
   523                           
   524                           ; 2 bytes @ 0xE
   525  00000F                     	ds	1
   526  000010                     ??_CAN_TakeFrame:
   527  000010                     ??_FRAME_AdressOfNeighbors:
   528                           
   529                           ; 1 bytes @ 0xF
   530  000010                     	ds	1
   531  000011                     LED_Light_Pos@color:
   532                           	opt callstack 0
   533                           
   534                           ; 1 bytes @ 0x10
   535  000011                     	ds	1
   536  000012                     LED_Light_Pos@LED_array:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x11
   540  000012                     	ds	2
   541  000014                     CAN_TakeFrame@op_id:
   542                           	opt callstack 0
   543  000014                     LED_Light_Pos@pos2:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0x13
   547  000014                     	ds	2
   548  000016                     CAN_TakeFrame@tempCON:
   549                           	opt callstack 0
   550  000016                     LED_Light_Pos@flage:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x15
   554  000016                     	ds	1
   555  000017                     CAN_TakeFrame@k:
   556                           	opt callstack 0
   557                           
   558                           ; 1 bytes @ 0x16
   559  000017                     	ds	1
   560  000018                     
   561                           ; 1 bytes @ 0x17
   562  000018                     	ds	6
   563  00001E                     FRAME_AdressOfNeighbors@i:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x1D
   567  00001E                     	ds	2
   568  000020                     FRAME_HandleCanFrame@message:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x1F
   572  000020                     	ds	2
   573  000022                     ??_FRAME_HandleCanFrame:
   574                           
   575                           ; 1 bytes @ 0x21
   576  000022                     	ds	2
   577  000024                     FRAME_HandleCanFrame@identyfikator:
   578                           	opt callstack 0
   579                           
   580                           ; 1 bytes @ 0x23
   581  000024                     	ds	1
   582  000025                     TRM_DataTransmition@canMessage:
   583                           	opt callstack 0
   584                           
   585                           ; 17 bytes @ 0x24
   586  000025                     	ds	17
   587  000036                     
   588                           ; 1 bytes @ 0x35
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 94 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels required when called:    7
   614 ;; This function calls:
   615 ;;		_INI_All
   616 ;;		_LED_Update
   617 ;;		_TMR1_Update_flag_Get
   618 ;;		_TMR1_Update_flag_Set
   619 ;;		_TRM_DataTransmition
   620 ;; This function is called by:
   621 ;;		Startup code after reset
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text0
   626  00135E                     __ptext0:
   627                           	opt callstack 0
   628  00135E                     _main:
   629                           	opt callstack 24
   630                           
   631                           ;main.c: 96:     INI_All();
   632                           
   633                           ;incstack = 0
   634  00135E  EC32  F00A         	call	_INI_All	;wreg free
   635                           
   636                           ;main.c: 98:     RCON = 0xFF;
   637  001362  68D0               	setf	4048,c	;volatile
   638  001364                     l3128:
   639                           
   640                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   641  001364  B03F               	btfsc	_DetectorLedRadar,0,c
   642                           
   643                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   644  001366  903F               	bcf	_DetectorLedRadar,0,c
   645                           
   646                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   647  001368  EC7C  F00A         	call	_TMR1_Update_flag_Get	;wreg free
   648  00136C  0406               	decf	?_TMR1_Update_flag_Get,w,c
   649  00136E  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   650  001370  A4D8               	btfss	status,2,c
   651  001372  D008               	goto	l3138
   652                           
   653                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   654  001374  EC14  F007         	call	_LED_Update	;wreg free
   655                           
   656                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   657  001378  0E00               	movlw	0
   658  00137A  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   659  00137C  0E00               	movlw	0
   660  00137E  6E06               	movwf	TMR1_Update_flag_Set@a,c
   661  001380  EC77  F00A         	call	_TMR1_Update_flag_Set	;wreg free
   662  001384                     l3138:
   663                           
   664                           ;main.c: 115:         TRM_DataTransmition();
   665  001384  ECE3  F008         	call	_TRM_DataTransmition	;wreg free
   666  001388  0004               	clrwdt		;# 
   667                           
   668                           ;main.c: 117:     }
   669  00138A  D7EC               	goto	l3128
   670  00138C                     __end_of_main:
   671                           	opt callstack 0
   672                           
   673 ;; *************** function _TRM_DataTransmition *****************
   674 ;; Defined at:
   675 ;;		line 19 in file "TRM.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  canMessage     17   36[COMRAM] struct .
   680 ;;  i               1    0        unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   691 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   693 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   694 ;;Total ram usage:       17 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    6
   697 ;; This function calls:
   698 ;;		_CAN_TakeFrame
   699 ;;		_FRAME_HandleCanFrame
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text1
   706  0011C6                     __ptext1:
   707                           	opt callstack 0
   708  0011C6                     _TRM_DataTransmition:
   709                           	opt callstack 24
   710                           
   711                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   712                           
   713                           ;incstack = 0
   714  0011C6  A03B               	btfss	_DaneCan,0,c
   715  0011C8  D013               	goto	l3096
   716                           
   717                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   718  0011CA  0E02               	movlw	2
   719  0011CC  6E26               	movwf	TRM_DataTransmition@canMessage+1,c
   720                           
   721                           ;TRM.c: 30:         canMessage.id.Val = 0;
   722  0011CE  0E00               	movlw	0
   723  0011D0  6E29               	movwf	TRM_DataTransmition@canMessage+4,c
   724  0011D2  0E00               	movlw	0
   725  0011D4  6E2A               	movwf	TRM_DataTransmition@canMessage+5,c
   726  0011D6  0E00               	movlw	0
   727  0011D8  6E2B               	movwf	TRM_DataTransmition@canMessage+6,c
   728  0011DA  0E00               	movlw	0
   729  0011DC  6E2C               	movwf	TRM_DataTransmition@canMessage+7,c
   730                           
   731                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   732  0011DE  0E04               	movlw	4
   733  0011E0  6E2B               	movwf	TRM_DataTransmition@canMessage+6,c
   734                           
   735                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   736  0011E2  0E25               	movlw	low TRM_DataTransmition@canMessage
   737  0011E4  6E20               	movwf	FRAME_HandleCanFrame@message,c
   738  0011E6  0E00               	movlw	high TRM_DataTransmition@canMessage
   739  0011E8  6E21               	movwf	FRAME_HandleCanFrame@message+1,c
   740  0011EA  ECA8  F002         	call	_FRAME_HandleCanFrame	;wreg free
   741                           
   742                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   743  0011EE  903B               	bcf	_DaneCan,0,c
   744  0011F0                     l3096:
   745                           
   746                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   747  0011F0  0E25               	movlw	low TRM_DataTransmition@canMessage
   748  0011F2  6E0E               	movwf	CAN_TakeFrame@message,c
   749  0011F4  0E00               	movlw	high TRM_DataTransmition@canMessage
   750  0011F6  6E0F               	movwf	CAN_TakeFrame@message+1,c
   751  0011F8  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   752  0011FC  0900               	iorlw	0
   753  0011FE  B4D8               	btfsc	status,2,c
   754  001200  0012               	return	
   755                           
   756                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   757  001202  0E25               	movlw	low TRM_DataTransmition@canMessage
   758  001204  6E20               	movwf	FRAME_HandleCanFrame@message,c
   759  001206  0E00               	movlw	high TRM_DataTransmition@canMessage
   760  001208  6E21               	movwf	FRAME_HandleCanFrame@message+1,c
   761  00120A  ECA8  F002         	call	_FRAME_HandleCanFrame	;wreg free
   762                           
   763                           ;TRM.c: 67:         }
   764  00120E  0012               	return		;funcret
   765  001210                     __end_of_TRM_DataTransmition:
   766                           	opt callstack 0
   767                           
   768 ;; *************** function _FRAME_HandleCanFrame *****************
   769 ;; Defined at:
   770 ;;		line 487 in file "FRAME.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  message         2   31[COMRAM] PTR struct .
   773 ;;		 -> TRM_DataTransmition@canMessage(17), 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  identyfikato    1   35[COMRAM] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   788 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   789 ;;Total ram usage:        5 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    5
   792 ;; This function calls:
   793 ;;		_CAN_GenID
   794 ;;		_CAN_SendFrame
   795 ;;		_FRAME_AccelerometerStatus
   796 ;;		_FRAME_AdressOfNeighbors
   797 ;;		_FRAME_AnalogValue
   798 ;;		_FRAME_AveragingTimes
   799 ;;		_FRAME_AxisStatus
   800 ;;		_FRAME_DeviceReset
   801 ;;		_FRAME_ExcitationMultiplier
   802 ;;		_FRAME_ExcitationValue
   803 ;;		_FRAME_MapPosition
   804 ;;		_FRAME_Plot
   805 ;;		_FRAME_PrzypisanieDokarty
   806 ;;		_FRAME_SensorExcitationStatus
   807 ;;		_FRAME_SoftwareVersion
   808 ;;		_LED_Error
   809 ;;		___awdiv
   810 ;; This function is called by:
   811 ;;		_TRM_DataTransmition
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text2
   816  000550                     __ptext2:
   817                           	opt callstack 0
   818  000550                     _FRAME_HandleCanFrame:
   819                           	opt callstack 24
   820                           
   821                           ;FRAME.c: 487: void FRAME_HandleCanFrame(mID * message);FRAME.c: 488: {;FRAME.c: 489:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   822                           
   823                           ;incstack = 0
   824  000550  EE20 F006          	lfsr	2,6
   825  000554  5020               	movf	FRAME_HandleCanFrame@message,w,c
   826  000556  26D9               	addwf	fsr2l,f,c
   827  000558  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   828  00055A  22DA               	addwfc	fsr2h,f,c
   829  00055C  50DF               	movf	indf2,w,c
   830  00055E  6E22               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   831  000560  5022               	movf	??_FRAME_HandleCanFrame,w,c
   832  000562  6E06               	movwf	___awdiv@dividend,c
   833  000564  6A07               	clrf	___awdiv@dividend+1,c
   834  000566  0E00               	movlw	0
   835  000568  6E09               	movwf	___awdiv@divisor+1,c
   836  00056A  0E04               	movlw	4
   837  00056C  6E08               	movwf	___awdiv@divisor,c
   838  00056E  ECD2  F006         	call	___awdiv	;wreg free
   839  000572  5006               	movf	?___awdiv,w,c
   840  000574  6E24               	movwf	FRAME_HandleCanFrame@identyfikator,c
   841                           
   842                           ;FRAME.c: 492:     switch(identyfikator)
   843  000576  D067               	goto	l3044
   844  000578                     l3012:
   845                           
   846                           ;FRAME.c: 495:             FRAME_SensorExcitationStatus(message);
   847  000578  C020  F00E         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   848  00057C  C021  F00F         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   849  000580  EC6E  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   850                           
   851                           ;FRAME.c: 496:             break;
   852  000584  D096               	goto	l3046
   853  000586                     l3014:
   854                           
   855                           ;FRAME.c: 498:             FRAME_AccelerometerStatus(message);
   856  000586  C020  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   857  00058A  C021  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   858  00058E  EC51  F007         	call	_FRAME_AccelerometerStatus	;wreg free
   859                           
   860                           ;FRAME.c: 499:             break;
   861  000592  D08F               	goto	l3046
   862  000594                     l3016:
   863                           
   864                           ;FRAME.c: 501:             FRAME_ExcitationValue(message);
   865  000594  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   866  000598  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   867  00059C  EC44  F009         	call	_FRAME_ExcitationValue	;wreg free
   868                           
   869                           ;FRAME.c: 502:             break;
   870  0005A0  D088               	goto	l3046
   871  0005A2                     l3018:
   872                           
   873                           ;FRAME.c: 504:             FRAME_ExcitationMultiplier(message);
   874  0005A2  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   875  0005A6  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   876  0005AA  EC96  F008         	call	_FRAME_ExcitationMultiplier	;wreg free
   877                           
   878                           ;FRAME.c: 505:             break;
   879  0005AE  D081               	goto	l3046
   880  0005B0                     l3020:
   881                           
   882                           ;FRAME.c: 507:             FRAME_AveragingTimes(message);
   883  0005B0  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   884  0005B4  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   885  0005B8  EC7A  F009         	call	_FRAME_AveragingTimes	;wreg free
   886                           
   887                           ;FRAME.c: 508:             break;
   888  0005BC  D07A               	goto	l3046
   889  0005BE                     l3022:
   890                           
   891                           ;FRAME.c: 510:             FRAME_AxisStatus(message);
   892  0005BE  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   893  0005C2  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   894  0005C6  EC5F  F009         	call	_FRAME_AxisStatus	;wreg free
   895                           
   896                           ;FRAME.c: 511:             break;
   897  0005CA  D073               	goto	l3046
   898  0005CC                     l3024:
   899                           
   900                           ;FRAME.c: 513:             FRAME_DeviceReset(message);
   901  0005CC  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   902  0005D0  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   903  0005D4  ECFD  F004         	call	_FRAME_DeviceReset	;wreg free
   904                           
   905                           ;FRAME.c: 514:             break;
   906  0005D8  D06C               	goto	l3046
   907  0005DA                     l3026:
   908                           
   909                           ;FRAME.c: 516:             FRAME_Plot(message);
   910  0005DA  C020  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   911  0005DE  C021  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   912  0005E2  EC1A  F008         	call	_FRAME_Plot	;wreg free
   913                           
   914                           ;FRAME.c: 517:             break;
   915  0005E6  D065               	goto	l3046
   916  0005E8                     l3028:
   917                           
   918                           ;FRAME.c: 519:             FRAME_MapPosition(message);
   919  0005E8  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   920  0005EC  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   921  0005F0  EC98  F00A         	call	_FRAME_MapPosition	;wreg free
   922                           
   923                           ;FRAME.c: 520:             break;
   924  0005F4  D05E               	goto	l3046
   925  0005F6                     l3030:
   926                           
   927                           ;FRAME.c: 522:             FRAME_SoftwareVersion(message);
   928  0005F6  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   929  0005FA  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   930  0005FE  EC8C  F007         	call	_FRAME_SoftwareVersion	;wreg free
   931                           
   932                           ;FRAME.c: 523:             break;
   933  000602  D057               	goto	l3046
   934  000604                     l3032:
   935                           
   936                           ;FRAME.c: 526:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   937  000604  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   938  000608  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   939  00060C  0EF4               	movlw	244
   940  00060E  2424               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   941  000610  6E08               	movwf	FRAME_AnalogValue@set,c
   942  000612  6A09               	clrf	FRAME_AnalogValue@set+1,c
   943  000614  0EFF               	movlw	255
   944  000616  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   945  000618  EC99  F00A         	call	_FRAME_AnalogValue	;wreg free
   946                           
   947                           ;FRAME.c: 527:             break;
   948  00061C  D04A               	goto	l3046
   949  00061E                     l3034:
   950                           
   951                           ;FRAME.c: 529:             FRAME_PrzypisanieDokarty(message);
   952  00061E  C020  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   953  000622  C021  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   954  000626  EC29  F009         	call	_FRAME_PrzypisanieDokarty	;wreg free
   955                           
   956                           ;FRAME.c: 530:             break;
   957  00062A  D043               	goto	l3046
   958  00062C                     l3036:
   959                           
   960                           ;FRAME.c: 532:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   961  00062C  C020  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   962  000630  C021  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   963  000634  0EF0               	movlw	240
   964  000636  2424               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   965  000638  6E0E               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   966  00063A  6A0F               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   967  00063C  0EFF               	movlw	255
   968  00063E  220F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   969  000640  EC76  F001         	call	_FRAME_AdressOfNeighbors	;wreg free
   970                           
   971                           ;FRAME.c: 533:             break;
   972  000644  D036               	goto	l3046
   973  000646                     l3044:
   974  000646  5024               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   975  000648  6E22               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   976  00064A  6A23               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   977                           
   978                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   979                           ; Switch size 1, requested type "simple"
   980                           ; Number of cases is 1, Range of values is 0 to 0
   981                           ; switch strategies available:
   982                           ; Name         Instructions Cycles
   983                           ; simple_byte            4     3 (average)
   984                           ;	Chosen strategy is simple_byte
   985  00064C  5023               	movf	??_FRAME_HandleCanFrame+1,w,c
   986  00064E  0A00               	xorlw	0	; case 0
   987  000650  A4D8               	btfss	status,2,c
   988  000652  D792               	goto	l3012
   989                           
   990                           ; Switch size 1, requested type "simple"
   991                           ; Number of cases is 15, Range of values is 1 to 17
   992                           ; switch strategies available:
   993                           ; Name         Instructions Cycles
   994                           ; simple_byte           46    24 (average)
   995                           ;	Chosen strategy is simple_byte
   996  000654  5022               	movf	??_FRAME_HandleCanFrame,w,c
   997  000656  0A01               	xorlw	1	; case 1
   998  000658  B4D8               	btfsc	status,2,c
   999  00065A  D78E               	goto	l3012
  1000  00065C  0A03               	xorlw	3	; case 2
  1001  00065E  B4D8               	btfsc	status,2,c
  1002  000660  D792               	goto	l3014
  1003  000662  0A01               	xorlw	1	; case 3
  1004  000664  B4D8               	btfsc	status,2,c
  1005  000666  D796               	goto	l3016
  1006  000668  0A07               	xorlw	7	; case 4
  1007  00066A  B4D8               	btfsc	status,2,c
  1008  00066C  D79A               	goto	l3018
  1009  00066E  0A01               	xorlw	1	; case 5
  1010  000670  B4D8               	btfsc	status,2,c
  1011  000672  D79E               	goto	l3020
  1012  000674  0A03               	xorlw	3	; case 6
  1013  000676  B4D8               	btfsc	status,2,c
  1014  000678  D7A2               	goto	l3022
  1015  00067A  0A01               	xorlw	1	; case 7
  1016  00067C  B4D8               	btfsc	status,2,c
  1017  00067E  D7A6               	goto	l3024
  1018  000680  0A0E               	xorlw	14	; case 9
  1019  000682  B4D8               	btfsc	status,2,c
  1020  000684  D7AA               	goto	l3026
  1021  000686  0A03               	xorlw	3	; case 10
  1022  000688  B4D8               	btfsc	status,2,c
  1023  00068A  D7AE               	goto	l3028
  1024  00068C  0A01               	xorlw	1	; case 11
  1025  00068E  B4D8               	btfsc	status,2,c
  1026  000690  D7B2               	goto	l3030
  1027  000692  0A07               	xorlw	7	; case 12
  1028  000694  B4D8               	btfsc	status,2,c
  1029  000696  D7B6               	goto	l3032
  1030  000698  0A01               	xorlw	1	; case 13
  1031  00069A  B4D8               	btfsc	status,2,c
  1032  00069C  D7B3               	goto	l3032
  1033  00069E  0A02               	xorlw	2	; case 15
  1034  0006A0  B4D8               	btfsc	status,2,c
  1035  0006A2  D7BD               	goto	l3034
  1036  0006A4  0A1F               	xorlw	31	; case 16
  1037  0006A6  B4D8               	btfsc	status,2,c
  1038  0006A8  D7C1               	goto	l3036
  1039  0006AA  0A01               	xorlw	1	; case 17
  1040  0006AC  B4D8               	btfsc	status,2,c
  1041  0006AE  D7BE               	goto	l3036
  1042  0006B0  D763               	goto	l3012
  1043  0006B2                     l3046:
  1044                           
  1045                           ;FRAME.c: 543:     if(message->message_type == 0x02)
  1046  0006B2  EE20 F001          	lfsr	2,1
  1047  0006B6  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1048  0006B8  26D9               	addwf	fsr2l,f,c
  1049  0006BA  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1050  0006BC  22DA               	addwfc	fsr2h,f,c
  1051  0006BE  0E02               	movlw	2
  1052  0006C0  18DE               	xorwf	postinc2,w,c
  1053  0006C2  A4D8               	btfss	status,2,c
  1054  0006C4  0012               	return	
  1055                           
  1056                           ;FRAME.c: 544:     {;FRAME.c: 546:         message->frame_type = 0x03;
  1057  0006C6  EE20 F002          	lfsr	2,2
  1058  0006CA  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1059  0006CC  26D9               	addwf	fsr2l,f,c
  1060  0006CE  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1061  0006D0  22DA               	addwfc	fsr2h,f,c
  1062  0006D2  0E03               	movlw	3
  1063  0006D4  6EDF               	movwf	indf2,c
  1064                           
  1065                           ;FRAME.c: 547:         message->message_type = 0x01;
  1066  0006D6  EE20 F001          	lfsr	2,1
  1067  0006DA  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1068  0006DC  26D9               	addwf	fsr2l,f,c
  1069  0006DE  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1070  0006E0  22DA               	addwfc	fsr2h,f,c
  1071  0006E2  0E01               	movlw	1
  1072  0006E4  6EDF               	movwf	indf2,c
  1073                           
  1074                           ;FRAME.c: 548:         message->id.Val = 0;
  1075  0006E6  EE20 F004          	lfsr	2,4
  1076  0006EA  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1077  0006EC  26D9               	addwf	fsr2l,f,c
  1078  0006EE  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1079  0006F0  22DA               	addwfc	fsr2h,f,c
  1080  0006F2  6ADE               	clrf	postinc2,c
  1081  0006F4  6ADE               	clrf	postinc2,c
  1082  0006F6  6ADE               	clrf	postinc2,c
  1083  0006F8  6ADD               	clrf	postdec2,c
  1084                           
  1085                           ;FRAME.c: 550:         message->id.v[2] = identyfikator*4;
  1086  0006FA  5024               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1087  0006FC  0D04               	mullw	4
  1088  0006FE  EE20 F006          	lfsr	2,6
  1089  000702  5020               	movf	FRAME_HandleCanFrame@message,w,c
  1090  000704  26D9               	addwf	fsr2l,f,c
  1091  000706  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
  1092  000708  22DA               	addwfc	fsr2h,f,c
  1093  00070A  CFF3 FFDF          	movff	prodl,indf2
  1094                           
  1095                           ;FRAME.c: 551:         CAN_GenID(message,identyfikator);
  1096  00070E  C020  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1097  000712  C021  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1098  000716  C024  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1099  00071A  EC30  F006         	call	_CAN_GenID	;wreg free
  1100                           
  1101                           ;FRAME.c: 552:         CAN_SendFrame(message);
  1102  00071E  C020  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1103  000722  C021  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1104  000726  EC9D  F003         	call	_CAN_SendFrame	;wreg free
  1105                           
  1106                           ;FRAME.c: 563:        while(RXB0CONbits.FILHIT3)
  1107  00072A  D004               	goto	l557
  1108  00072C                     l558:
  1109                           
  1110                           ;FRAME.c: 564:        {;FRAME.c: 565:            if(TXB0CONbits.TXERR == 1){
  1111  00072C  010F               	movlb	15	; () banked
  1112  00072E  B940               	btfsc	64,4,b	;volatile
  1113                           
  1114                           ; BSR set to: 15
  1115                           ;FRAME.c: 566:                LED_Error();
  1116  000730  EC14  F00A         	call	_LED_Error	;wreg free
  1117  000734                     l557:
  1118                           
  1119                           ;FRAME.c: 563:        while(RXB0CONbits.FILHIT3)
  1120  000734  A660               	btfss	3936,3,c	;volatile
  1121  000736  0012               	return	
  1122  000738  D7F9               	goto	l558
  1123  00073A                     __end_of_FRAME_HandleCanFrame:
  1124                           	opt callstack 0
  1125                           
  1126 ;; *************** function _LED_Error *****************
  1127 ;; Defined at:
  1128 ;;		line 37 in file "LED.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  2  284[None  ] unsigned int 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1146 ;;Total ram usage:        0 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    4
  1149 ;; This function calls:
  1150 ;;		_LED_Control
  1151 ;; This function is called by:
  1152 ;;		_FRAME_HandleCanFrame
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text3
  1157  001428                     __ptext3:
  1158                           	opt callstack 0
  1159  001428                     _LED_Error:
  1160                           	opt callstack 24
  1161                           
  1162                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1163                           
  1164                           ;incstack = 0
  1165  001428  0E02               	movlw	2
  1166  00142A  6E07               	movwf	LED_Control@diode+1,c
  1167  00142C  0EAA               	movlw	170
  1168  00142E  6E06               	movwf	LED_Control@diode,c
  1169  001430  0E00               	movlw	0
  1170  001432  EC54  F004         	call	_LED_Control
  1171                           
  1172                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1173  001436  0E00               	movlw	0
  1174  001438  6E07               	movwf	LED_Control@diode+1,c
  1175  00143A  0E00               	movlw	0
  1176  00143C  6E06               	movwf	LED_Control@diode,c
  1177  00143E  0E01               	movlw	1
  1178  001440  EC54  F004         	call	_LED_Control
  1179  001444  0012               	return		;funcret
  1180  001446                     __end_of_LED_Error:
  1181                           	opt callstack 0
  1182                           
  1183 ;; *************** function _FRAME_SoftwareVersion *****************
  1184 ;; Defined at:
  1185 ;;		line 384 in file "FRAME.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  message         2    5[COMRAM] PTR struct .
  1188 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1203 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1204 ;;Total ram usage:        3 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    3
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_FRAME_HandleCanFrame
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text4
  1215  000F18                     __ptext4:
  1216                           	opt callstack 0
  1217  000F18                     _FRAME_SoftwareVersion:
  1218                           	opt callstack 25
  1219                           
  1220                           ;FRAME.c: 384: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 385: {;FRAME.c: 
      +                          387:     if(message->message_type == 0x02)
  1221                           
  1222                           ;incstack = 0
  1223  000F18  EE20 F001          	lfsr	2,1
  1224  000F1C  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1225  000F1E  26D9               	addwf	fsr2l,f,c
  1226  000F20  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1227  000F22  22DA               	addwfc	fsr2h,f,c
  1228  000F24  0E02               	movlw	2
  1229  000F26  18DE               	xorwf	postinc2,w,c
  1230  000F28  A4D8               	btfss	status,2,c
  1231  000F2A  0012               	return	
  1232                           
  1233                           ;FRAME.c: 388:     {;FRAME.c: 389:         message->data_length = 4;
  1234  000F2C  EE20 F010          	lfsr	2,16
  1235  000F30  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1236  000F32  26D9               	addwf	fsr2l,f,c
  1237  000F34  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1238  000F36  22DA               	addwfc	fsr2h,f,c
  1239  000F38  0E04               	movlw	4
  1240  000F3A  6EDF               	movwf	indf2,c
  1241                           
  1242                           ;FRAME.c: 390:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1243  000F3C  EE20 F008          	lfsr	2,8
  1244  000F40  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1245  000F42  26D9               	addwf	fsr2l,f,c
  1246  000F44  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1247  000F46  22DA               	addwfc	fsr2h,f,c
  1248  000F48  5005               	movf	5,w,c
  1249  000F4A  6EDF               	movwf	indf2,c
  1250                           
  1251                           ;FRAME.c: 391:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1252  000F4C  EE20 F009          	lfsr	2,9
  1253  000F50  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1254  000F52  26D9               	addwf	fsr2l,f,c
  1255  000F54  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1256  000F56  22DA               	addwfc	fsr2h,f,c
  1257  000F58  C004 FFDF          	movff	4,indf2
  1258                           
  1259                           ;FRAME.c: 392:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1260  000F5C  EE20 F00A          	lfsr	2,10
  1261  000F60  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1262  000F62  26D9               	addwf	fsr2l,f,c
  1263  000F64  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1264  000F66  22DA               	addwfc	fsr2h,f,c
  1265  000F68  500B               	movf	11,w,c
  1266  000F6A  6EDF               	movwf	indf2,c
  1267                           
  1268                           ;FRAME.c: 393:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1269  000F6C  EE20 F00B          	lfsr	2,11
  1270  000F70  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1271  000F72  26D9               	addwf	fsr2l,f,c
  1272  000F74  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1273  000F76  22DA               	addwfc	fsr2h,f,c
  1274  000F78  C00A FFDF          	movff	10,indf2
  1275                           
  1276                           ;FRAME.c: 394:     }
  1277  000F7C  0012               	return		;funcret
  1278  000F7E                     __end_of_FRAME_SoftwareVersion:
  1279                           	opt callstack 0
  1280                           
  1281 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1282 ;; Defined at:
  1283 ;;		line 33 in file "FRAME.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  message         2   13[COMRAM] PTR struct .
  1286 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  theta           2    0        int 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1301 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1302 ;;Total ram usage:        5 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    4
  1305 ;; This function calls:
  1306 ;;		_IsInNeighbors
  1307 ;;		_LOCK_Get
  1308 ;;		_LOCK_Set
  1309 ;;		_MOC_Aktualna_Temperatura
  1310 ;;		_MOC_Frame_Counter
  1311 ;;		_MOC_NOTWORK
  1312 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1313 ;; This function is called by:
  1314 ;;		_FRAME_HandleCanFrame
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text5
  1319  000ADC                     __ptext5:
  1320                           	opt callstack 0
  1321  000ADC                     _FRAME_SensorExcitationStatus:
  1322                           	opt callstack 24
  1323                           
  1324                           ;FRAME.c: 33: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 34: {;FRAM
      +                          E.c: 35:     if(message->message_type == 0x02)
  1325                           
  1326                           ;incstack = 0
  1327  000ADC  EE20 F001          	lfsr	2,1
  1328  000AE0  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1329  000AE2  26D9               	addwf	fsr2l,f,c
  1330  000AE4  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1331  000AE6  22DA               	addwfc	fsr2h,f,c
  1332  000AE8  0E02               	movlw	2
  1333  000AEA  18DE               	xorwf	postinc2,w,c
  1334  000AEC  A4D8               	btfss	status,2,c
  1335  000AEE  D047               	goto	l2714
  1336                           
  1337                           ;FRAME.c: 36:     {;FRAME.c: 37:         message->data_length = 6;
  1338  000AF0  EE20 F010          	lfsr	2,16
  1339  000AF4  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1340  000AF6  26D9               	addwf	fsr2l,f,c
  1341  000AF8  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1342  000AFA  22DA               	addwfc	fsr2h,f,c
  1343  000AFC  0E06               	movlw	6
  1344  000AFE  6EDF               	movwf	indf2,c
  1345                           
  1346                           ;FRAME.c: 43:         message->data[0] = LOCK_Get();
  1347  000B00  EE20 F008          	lfsr	2,8
  1348  000B04  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1349  000B06  26D9               	addwf	fsr2l,f,c
  1350  000B08  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1351  000B0A  22DA               	addwfc	fsr2h,f,c
  1352  000B0C  EC96  F00A         	call	_LOCK_Get	;wreg free
  1353  000B10  6EDF               	movwf	indf2,c
  1354                           
  1355                           ;FRAME.c: 44:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1356  000B12  EE20 F009          	lfsr	2,9
  1357  000B16  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1358  000B18  26D9               	addwf	fsr2l,f,c
  1359  000B1A  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1360  000B1C  22DA               	addwfc	fsr2h,f,c
  1361  000B1E  EC59  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1362  000B22  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1363  000B26  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1364  000B28  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1365  000B2A  6EDF               	movwf	indf2,c
  1366                           
  1367                           ;FRAME.c: 45:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1368  000B2C  EE20 F00A          	lfsr	2,10
  1369  000B30  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1370  000B32  26D9               	addwf	fsr2l,f,c
  1371  000B34  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1372  000B36  22DA               	addwfc	fsr2h,f,c
  1373  000B38  EC59  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1374  000B3C  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1375  000B3E  6EDF               	movwf	indf2,c
  1376                           
  1377                           ;FRAME.c: 46:         message->data[3] = MOC_Frame_Counter();
  1378  000B40  EE20 F00B          	lfsr	2,11
  1379  000B44  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1380  000B46  26D9               	addwf	fsr2l,f,c
  1381  000B48  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1382  000B4A  22DA               	addwfc	fsr2h,f,c
  1383  000B4C  EC4B  F00A         	call	_MOC_Frame_Counter	;wreg free
  1384  000B50  5006               	movf	?_MOC_Frame_Counter,w,c
  1385  000B52  6EDF               	movwf	indf2,c
  1386                           
  1387                           ;FRAME.c: 47:         message->data[4] = MOC_Aktualna_Temperatura();
  1388  000B54  EE20 F00C          	lfsr	2,12
  1389  000B58  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1390  000B5A  26D9               	addwf	fsr2l,f,c
  1391  000B5C  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1392  000B5E  22DA               	addwfc	fsr2h,f,c
  1393  000B60  EC5E  F00A         	call	_MOC_Aktualna_Temperatura	;wreg free
  1394  000B64  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1395  000B66  6EDF               	movwf	indf2,c
  1396                           
  1397                           ;FRAME.c: 48:         message->data[5] = MOC_NOTWORK();
  1398  000B68  EE20 F00D          	lfsr	2,13
  1399  000B6C  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1400  000B6E  26D9               	addwf	fsr2l,f,c
  1401  000B70  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1402  000B72  22DA               	addwfc	fsr2h,f,c
  1403  000B74  EC8B  F00A         	call	_MOC_NOTWORK	;wreg free
  1404  000B78  5006               	movf	?_MOC_NOTWORK,w,c
  1405  000B7A  6EDF               	movwf	indf2,c
  1406                           
  1407                           ;FRAME.c: 58:     }
  1408  000B7C  0012               	return	
  1409  000B7E                     l2714:
  1410                           
  1411                           ;FRAME.c: 62:         if(IsInNeighbors(message->id.w[0]))
  1412  000B7E  EE20 F004          	lfsr	2,4
  1413  000B82  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1414  000B84  26D9               	addwf	fsr2l,f,c
  1415  000B86  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1416  000B88  22DA               	addwfc	fsr2h,f,c
  1417  000B8A  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1418  000B8E  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1419  000B92  EC6F  F008         	call	_IsInNeighbors	;wreg free
  1420  000B96  0900               	iorlw	0
  1421  000B98  B4D8               	btfsc	status,2,c
  1422  000B9A  0012               	return	
  1423                           
  1424                           ;FRAME.c: 63:         {;FRAME.c: 64:         LOCK_Set(message->data[0]);
  1425  000B9C  EE20 F008          	lfsr	2,8
  1426  000BA0  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1427  000BA2  26D9               	addwf	fsr2l,f,c
  1428  000BA4  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1429  000BA6  22DA               	addwfc	fsr2h,f,c
  1430  000BA8  50DF               	movf	indf2,w,c
  1431  000BAA  EC8F  F00A         	call	_LOCK_Set
  1432  000BAE  0012               	return		;funcret
  1433  000BB0                     __end_of_FRAME_SensorExcitationStatus:
  1434                           	opt callstack 0
  1435                           
  1436 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1437 ;; Defined at:
  1438 ;;		line 33 in file "MOC_Funct.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  2    5[COMRAM] unsigned int 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;Total ram usage:        2 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    3
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_FRAME_SensorExcitationStatus
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text6
  1467  0014B2                     __ptext6:
  1468                           	opt callstack 0
  1469  0014B2                     _MOC_Wynikowa_wartosc_roznicowa:
  1470                           	opt callstack 24
  1471                           
  1472                           ;MOC_Funct.c: 35:     return 0x0220;
  1473                           
  1474                           ;incstack = 0
  1475  0014B2  0E02               	movlw	2
  1476  0014B4  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1477  0014B6  0E20               	movlw	32
  1478  0014B8  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1479  0014BA  0012               	return		;funcret
  1480  0014BC                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1481                           	opt callstack 0
  1482                           
  1483 ;; *************** function _MOC_NOTWORK *****************
  1484 ;; Defined at:
  1485 ;;		line 47 in file "MOC_Funct.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  2    5[COMRAM] unsigned int 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;Total ram usage:        2 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    3
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_FRAME_SensorExcitationStatus
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text7
  1514  001516                     __ptext7:
  1515                           	opt callstack 0
  1516  001516                     _MOC_NOTWORK:
  1517                           	opt callstack 24
  1518                           
  1519                           ;MOC_Funct.c: 49:     return 0xFF;
  1520                           
  1521                           ;incstack = 0
  1522  001516  0E00               	movlw	0
  1523  001518  6E07               	movwf	?_MOC_NOTWORK+1,c
  1524  00151A  6806               	setf	?_MOC_NOTWORK,c
  1525  00151C  0012               	return		;funcret
  1526  00151E                     __end_of_MOC_NOTWORK:
  1527                           	opt callstack 0
  1528                           
  1529 ;; *************** function _MOC_Frame_Counter *****************
  1530 ;; Defined at:
  1531 ;;		line 38 in file "MOC_Funct.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  2    5[COMRAM] unsigned int 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;Total ram usage:        2 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    3
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_FRAME_SensorExcitationStatus
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text8
  1560  001496                     __ptext8:
  1561                           	opt callstack 0
  1562  001496                     _MOC_Frame_Counter:
  1563                           	opt callstack 24
  1564                           
  1565                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1566                           
  1567                           ;incstack = 0
  1568  001496  504B               	movf	MOC_Frame_Counter@zeta,w,c
  1569  001498  6E06               	movwf	?_MOC_Frame_Counter,c
  1570  00149A  504C               	movf	MOC_Frame_Counter@zeta+1,w,c
  1571  00149C  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1572  00149E  4A4B               	infsnz	MOC_Frame_Counter@zeta,f,c
  1573  0014A0  2A4C               	incf	MOC_Frame_Counter@zeta+1,f,c
  1574  0014A2  0012               	return		;funcret
  1575  0014A4                     __end_of_MOC_Frame_Counter:
  1576                           	opt callstack 0
  1577                           
  1578 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1579 ;; Defined at:
  1580 ;;		line 43 in file "MOC_Funct.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2    5[COMRAM] unsigned int 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1598 ;;Total ram usage:        2 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    3
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_FRAME_SensorExcitationStatus
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text9
  1609  0014BC                     __ptext9:
  1610                           	opt callstack 0
  1611  0014BC                     _MOC_Aktualna_Temperatura:
  1612                           	opt callstack 24
  1613                           
  1614                           ;MOC_Funct.c: 45:     return 0x1B;
  1615                           
  1616                           ;incstack = 0
  1617  0014BC  0E00               	movlw	0
  1618  0014BE  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1619  0014C0  0E1B               	movlw	27
  1620  0014C2  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1621  0014C4  0012               	return		;funcret
  1622  0014C6                     __end_of_MOC_Aktualna_Temperatura:
  1623                           	opt callstack 0
  1624                           
  1625 ;; *************** function _LOCK_Set *****************
  1626 ;; Defined at:
  1627 ;;		line 52 in file "LED.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  k               1    wreg     unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  k               1    5[COMRAM] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1645 ;;Total ram usage:        1 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    3
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_FRAME_SensorExcitationStatus
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text10
  1656  00151E                     __ptext10:
  1657                           	opt callstack 0
  1658  00151E                     _LOCK_Set:
  1659                           	opt callstack 24
  1660                           
  1661                           ;incstack = 0
  1662                           ;LOCK_Set@k stored from wreg
  1663  00151E  6E06               	movwf	LOCK_Set@k,c
  1664                           
  1665                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1666  001520  C006  F04A         	movff	LOCK_Set@k,_LOCK
  1667  001524  0012               	return		;funcret
  1668  001526                     __end_of_LOCK_Set:
  1669                           	opt callstack 0
  1670                           
  1671 ;; *************** function _LOCK_Get *****************
  1672 ;; Defined at:
  1673 ;;		line 57 in file "LED.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      unsigned char 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    3
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_FRAME_SensorExcitationStatus
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text11
  1702  00152C                     __ptext11:
  1703                           	opt callstack 0
  1704  00152C                     _LOCK_Get:
  1705                           	opt callstack 24
  1706                           
  1707                           ;LED.c: 59:     return LOCK;
  1708                           
  1709                           ;incstack = 0
  1710  00152C  504A               	movf	_LOCK,w,c
  1711  00152E  0012               	return		;funcret
  1712  001530                     __end_of_LOCK_Get:
  1713                           	opt callstack 0
  1714                           
  1715 ;; *************** function _IsInNeighbors *****************
  1716 ;; Defined at:
  1717 ;;		line 69 in file "FRAME.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  message_adre    2    5[COMRAM] unsigned int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  i               2   11[COMRAM] unsigned short 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      unsigned char 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1733 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1734 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1735 ;;Total ram usage:        8 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    3
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_FRAME_SensorExcitationStatus
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text12
  1746  0010DE                     __ptext12:
  1747                           	opt callstack 0
  1748  0010DE                     _IsInNeighbors:
  1749                           	opt callstack 24
  1750                           
  1751                           ;FRAME.c: 69: static BYTE IsInNeighbors(UINT message_adress);FRAME.c: 70: {;FRAME.c: 71:
      +                               WORD i;;FRAME.c: 73:     for(i=0; i<4; i++)
  1752                           
  1753                           ;incstack = 0
  1754  0010DE  0E00               	movlw	0
  1755  0010E0  6E0D               	movwf	IsInNeighbors@i+1,c
  1756  0010E2  0E00               	movlw	0
  1757  0010E4  6E0C               	movwf	IsInNeighbors@i,c
  1758  0010E6                     l2490:
  1759                           
  1760                           ;FRAME.c: 74:         {;FRAME.c: 75:             if(message_adress == Dane->sasiedzi[i+(
      +                          4*0x10)].adres )
  1761  0010E6  0E0E               	movlw	14
  1762  0010E8  6E08               	movwf	??_IsInNeighbors& (0+255),c
  1763  0010EA  0E01               	movlw	1
  1764  0010EC  6E09               	movwf	(??_IsInNeighbors+1)& (0+255),c
  1765  0010EE  90D8               	bcf	status,0,c
  1766  0010F0  340C               	rlcf	IsInNeighbors@i,w,c
  1767  0010F2  6ED9               	movwf	fsr2l,c
  1768  0010F4  340D               	rlcf	IsInNeighbors@i+1,w,c
  1769  0010F6  6EDA               	movwf	fsr2h,c
  1770  0010F8  90D8               	bcf	status,0,c
  1771  0010FA  36D9               	rlcf	fsr2l,f,c
  1772  0010FC  36DA               	rlcf	fsr2h,f,c
  1773  0010FE  5008               	movf	??_IsInNeighbors,w,c
  1774  001100  26D9               	addwf	fsr2l,f,c
  1775  001102  5009               	movf	??_IsInNeighbors+1,w,c
  1776  001104  22DA               	addwfc	fsr2h,f,c
  1777  001106  5006               	movf	IsInNeighbors@message_adress,w,c
  1778  001108  18DE               	xorwf	postinc2,w,c
  1779  00110A  E106               	bnz	l2496
  1780  00110C  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1781  00110E  18DE               	xorwf	postinc2,w,c
  1782  001110  A4D8               	btfss	status,2,c
  1783  001112  D002               	goto	l2496
  1784                           
  1785                           ;FRAME.c: 76:             {;FRAME.c: 77:                 return 1;
  1786  001114  0E01               	movlw	1
  1787  001116  0012               	return	
  1788  001118                     l2496:
  1789                           
  1790                           ;FRAME.c: 81:         }
  1791  001118  4A0C               	infsnz	IsInNeighbors@i,f,c
  1792  00111A  2A0D               	incf	IsInNeighbors@i+1,f,c
  1793  00111C  500D               	movf	IsInNeighbors@i+1,w,c
  1794  00111E  E104               	bnz	u1040
  1795  001120  0E04               	movlw	4
  1796  001122  5C0C               	subwf	IsInNeighbors@i,w,c
  1797  001124  A0D8               	btfss	status,0,c
  1798  001126  D7DF               	goto	l2490
  1799  001128                     u1040:
  1800                           
  1801                           ;FRAME.c: 82:     return 0;
  1802  001128  0E00               	movlw	0
  1803  00112A  0012               	return		;funcret
  1804  00112C                     __end_of_IsInNeighbors:
  1805                           	opt callstack 0
  1806                           
  1807 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1808 ;; Defined at:
  1809 ;;		line 433 in file "FRAME.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  message         2    5[COMRAM] PTR struct .
  1812 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1827 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1828 ;;Total ram usage:        3 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    3
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_FRAME_HandleCanFrame
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text13
  1839  001252                     __ptext13:
  1840                           	opt callstack 0
  1841  001252                     _FRAME_PrzypisanieDokarty:
  1842                           	opt callstack 25
  1843                           
  1844                           ;FRAME.c: 433: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 434: {;FRAME.
      +                          c: 435:     if(message->message_type == 0x02)
  1845                           
  1846                           ;incstack = 0
  1847  001252  EE20 F001          	lfsr	2,1
  1848  001256  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1849  001258  26D9               	addwf	fsr2l,f,c
  1850  00125A  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1851  00125C  22DA               	addwfc	fsr2h,f,c
  1852  00125E  0E02               	movlw	2
  1853  001260  18DE               	xorwf	postinc2,w,c
  1854  001262  A4D8               	btfss	status,2,c
  1855  001264  0012               	return	
  1856                           
  1857                           ;FRAME.c: 436:     {;FRAME.c: 437:         message->data_length = 1;
  1858  001266  EE20 F010          	lfsr	2,16
  1859  00126A  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1860  00126C  26D9               	addwf	fsr2l,f,c
  1861  00126E  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1862  001270  22DA               	addwfc	fsr2h,f,c
  1863  001272  0E01               	movlw	1
  1864  001274  6EDF               	movwf	indf2,c
  1865                           
  1866                           ;FRAME.c: 438:         message->data[0] = 0xFF;
  1867  001276  EE20 F008          	lfsr	2,8
  1868  00127A  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1869  00127C  26D9               	addwf	fsr2l,f,c
  1870  00127E  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1871  001280  22DA               	addwfc	fsr2h,f,c
  1872  001282  0EFF               	movlw	255
  1873  001284  6EDF               	movwf	indf2,c
  1874                           
  1875                           ;FRAME.c: 439:     }
  1876  001286  0012               	return		;funcret
  1877  001288                     __end_of_FRAME_PrzypisanieDokarty:
  1878                           	opt callstack 0
  1879                           
  1880 ;; *************** function _FRAME_Plot *****************
  1881 ;; Defined at:
  1882 ;;		line 338 in file "FRAME.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  message         2   12[COMRAM] PTR struct .
  1885 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;Total ram usage:        3 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    4
  1904 ;; This function calls:
  1905 ;;		___lwdiv
  1906 ;; This function is called by:
  1907 ;;		_FRAME_HandleCanFrame
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text14
  1912  001034                     __ptext14:
  1913                           	opt callstack 0
  1914  001034                     _FRAME_Plot:
  1915                           	opt callstack 24
  1916                           
  1917                           ;FRAME.c: 338: static void FRAME_Plot(mID *message);FRAME.c: 339: {;FRAME.c: 341:     if
      +                          (message->message_type == 0x02)
  1918                           
  1919                           ;incstack = 0
  1920  001034  EE20 F001          	lfsr	2,1
  1921  001038  500D               	movf	FRAME_Plot@message,w,c
  1922  00103A  26D9               	addwf	fsr2l,f,c
  1923  00103C  500E               	movf	FRAME_Plot@message+1,w,c
  1924  00103E  22DA               	addwfc	fsr2h,f,c
  1925  001040  0E02               	movlw	2
  1926  001042  18DE               	xorwf	postinc2,w,c
  1927  001044  A4D8               	btfss	status,2,c
  1928  001046  D013               	goto	l2774
  1929                           
  1930                           ;FRAME.c: 342:     {;FRAME.c: 343:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  1931  001048  EE20 F008          	lfsr	2,8
  1932  00104C  500D               	movf	FRAME_Plot@message,w,c
  1933  00104E  26D9               	addwf	fsr2l,f,c
  1934  001050  500E               	movf	FRAME_Plot@message+1,w,c
  1935  001052  22DA               	addwfc	fsr2h,f,c
  1936  001054  C00C F006          	movff	12,___lwdiv@dividend
  1937  001058  C00D F007          	movff	13,___lwdiv@dividend+1
  1938  00105C  0E00               	movlw	0
  1939  00105E  6E09               	movwf	___lwdiv@divisor+1,c
  1940  001060  0E0A               	movlw	10
  1941  001062  6E08               	movwf	___lwdiv@divisor,c
  1942  001064  EC46  F008         	call	___lwdiv	;wreg free
  1943  001068  5006               	movf	?___lwdiv,w,c
  1944  00106A  6EDF               	movwf	indf2,c
  1945                           
  1946                           ;FRAME.c: 344:     }
  1947  00106C  0012               	return	
  1948  00106E                     l2774:
  1949                           
  1950                           ;FRAME.c: 346:     {;FRAME.c: 347:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  1951  00106E  EE20 F008          	lfsr	2,8
  1952  001072  500D               	movf	FRAME_Plot@message,w,c
  1953  001074  26D9               	addwf	fsr2l,f,c
  1954  001076  500E               	movf	FRAME_Plot@message+1,w,c
  1955  001078  22DA               	addwfc	fsr2h,f,c
  1956  00107A  50DF               	movf	indf2,w,c
  1957  00107C  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  1958  00107E  500F               	movf	??_FRAME_Plot,w,c
  1959  001080  0D0A               	mullw	10
  1960  001082  CFF3 F00C          	movff	prodl,12
  1961  001086  CFF4 F00D          	movff	prodh,13
  1962  00108A  0012               	return		;funcret
  1963  00108C                     __end_of_FRAME_Plot:
  1964                           	opt callstack 0
  1965                           
  1966 ;; *************** function _FRAME_MapPosition *****************
  1967 ;; Defined at:
  1968 ;;		line 359 in file "FRAME.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  message         2    5[COMRAM] PTR struct .
  1971 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		None
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;Total ram usage:        2 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    3
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_FRAME_HandleCanFrame
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text15
  1998  001530                     __ptext15:
  1999                           	opt callstack 0
  2000  001530                     _FRAME_MapPosition:
  2001                           	opt callstack 25
  2002                           
  2003                           ;incstack = 0
  2004  001530  0012               	return		;funcret
  2005  001532                     __end_of_FRAME_MapPosition:
  2006                           	opt callstack 0
  2007                           
  2008 ;; *************** function _FRAME_ExcitationValue *****************
  2009 ;; Defined at:
  2010 ;;		line 116 in file "FRAME.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  message         2    5[COMRAM] PTR struct .
  2013 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;Total ram usage:        3 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    3
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_FRAME_HandleCanFrame
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text16
  2040  001288                     __ptext16:
  2041                           	opt callstack 0
  2042  001288                     _FRAME_ExcitationValue:
  2043                           	opt callstack 25
  2044                           
  2045                           ;FRAME.c: 116: static void FRAME_ExcitationValue(mID *message);FRAME.c: 117: {;FRAME.c: 
      +                          118:     if(message->message_type == 0x02)
  2046                           
  2047                           ;incstack = 0
  2048  001288  EE20 F001          	lfsr	2,1
  2049  00128C  5006               	movf	FRAME_ExcitationValue@message,w,c
  2050  00128E  26D9               	addwf	fsr2l,f,c
  2051  001290  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2052  001292  22DA               	addwfc	fsr2h,f,c
  2053  001294  0E02               	movlw	2
  2054  001296  18DE               	xorwf	postinc2,w,c
  2055  001298  A4D8               	btfss	status,2,c
  2056  00129A  0012               	return	
  2057                           
  2058                           ;FRAME.c: 119:     {;FRAME.c: 120:         message->data_length = 1;
  2059  00129C  EE20 F010          	lfsr	2,16
  2060  0012A0  5006               	movf	FRAME_ExcitationValue@message,w,c
  2061  0012A2  26D9               	addwf	fsr2l,f,c
  2062  0012A4  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2063  0012A6  22DA               	addwfc	fsr2h,f,c
  2064  0012A8  0E01               	movlw	1
  2065  0012AA  6EDF               	movwf	indf2,c
  2066                           
  2067                           ;FRAME.c: 125:         message->data[0] = 0xFF;
  2068  0012AC  EE20 F008          	lfsr	2,8
  2069  0012B0  5006               	movf	FRAME_ExcitationValue@message,w,c
  2070  0012B2  26D9               	addwf	fsr2l,f,c
  2071  0012B4  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2072  0012B6  22DA               	addwfc	fsr2h,f,c
  2073  0012B8  0EFF               	movlw	255
  2074  0012BA  6EDF               	movwf	indf2,c
  2075                           
  2076                           ;FRAME.c: 126:     }
  2077  0012BC  0012               	return		;funcret
  2078  0012BE                     __end_of_FRAME_ExcitationValue:
  2079                           	opt callstack 0
  2080                           
  2081 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2082 ;; Defined at:
  2083 ;;		line 140 in file "FRAME.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  message         2    5[COMRAM] PTR struct .
  2086 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  i               2    8[COMRAM] unsigned short 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2101 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2102 ;;Total ram usage:        5 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    3
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_FRAME_HandleCanFrame
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text17
  2113  00112C                     __ptext17:
  2114                           	opt callstack 0
  2115  00112C                     _FRAME_ExcitationMultiplier:
  2116                           	opt callstack 25
  2117                           
  2118                           ;FRAME.c: 140: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 141: {;FRAM
      +                          E.c: 142:     WORD i;;FRAME.c: 144:     if(message->message_type == 0x02)
  2119                           
  2120                           ;incstack = 0
  2121  00112C  EE20 F001          	lfsr	2,1
  2122  001130  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2123  001132  26D9               	addwf	fsr2l,f,c
  2124  001134  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2125  001136  22DA               	addwfc	fsr2h,f,c
  2126  001138  0E02               	movlw	2
  2127  00113A  18DE               	xorwf	postinc2,w,c
  2128  00113C  A4D8               	btfss	status,2,c
  2129  00113E  0012               	return	
  2130                           
  2131                           ;FRAME.c: 145:     {;FRAME.c: 146:         message->data_length = 1;
  2132  001140  EE20 F010          	lfsr	2,16
  2133  001144  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2134  001146  26D9               	addwf	fsr2l,f,c
  2135  001148  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2136  00114A  22DA               	addwfc	fsr2h,f,c
  2137  00114C  0E01               	movlw	1
  2138  00114E  6EDF               	movwf	indf2,c
  2139                           
  2140                           ;FRAME.c: 147:         for(i=0; i<3; i++)
  2141  001150  0E00               	movlw	0
  2142  001152  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2143  001154  0E00               	movlw	0
  2144  001156  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2145  001158                     l2746:
  2146                           
  2147                           ;FRAME.c: 148:         {;FRAME.c: 151:         }
  2148  001158  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2149  00115A  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2150  00115C  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2151  00115E  E104               	bnz	u1210
  2152  001160  0E03               	movlw	3
  2153  001162  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2154  001164  A0D8               	btfss	status,0,c
  2155  001166  D7F8               	goto	l2746
  2156  001168                     u1210:
  2157                           
  2158                           ;FRAME.c: 152:         message->data[0] = 0xFF;
  2159  001168  EE20 F008          	lfsr	2,8
  2160  00116C  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2161  00116E  26D9               	addwf	fsr2l,f,c
  2162  001170  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2163  001172  22DA               	addwfc	fsr2h,f,c
  2164  001174  0EFF               	movlw	255
  2165  001176  6EDF               	movwf	indf2,c
  2166                           
  2167                           ;FRAME.c: 153:     }
  2168  001178  0012               	return		;funcret
  2169  00117A                     __end_of_FRAME_ExcitationMultiplier:
  2170                           	opt callstack 0
  2171                           
  2172 ;; *************** function _FRAME_DeviceReset *****************
  2173 ;; Defined at:
  2174 ;;		line 274 in file "FRAME.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  message         2    5[COMRAM] PTR struct .
  2177 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2193 ;;Total ram usage:        3 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    3
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_FRAME_HandleCanFrame
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text18
  2204  0009FA                     __ptext18:
  2205                           	opt callstack 0
  2206  0009FA                     _FRAME_DeviceReset:
  2207                           	opt callstack 25
  2208                           
  2209                           ;FRAME.c: 274: static void FRAME_DeviceReset(mID *message);FRAME.c: 275: {;FRAME.c: 276:
      +                               if(message->message_type == 0x02)
  2210                           
  2211                           ;incstack = 0
  2212  0009FA  EE20 F001          	lfsr	2,1
  2213  0009FE  5006               	movf	FRAME_DeviceReset@message,w,c
  2214  000A00  26D9               	addwf	fsr2l,f,c
  2215  000A02  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2216  000A04  22DA               	addwfc	fsr2h,f,c
  2217  000A06  0E02               	movlw	2
  2218  000A08  18DE               	xorwf	postinc2,w,c
  2219  000A0A  A4D8               	btfss	status,2,c
  2220  000A0C  D056               	goto	l2768
  2221                           
  2222                           ;FRAME.c: 277:     {;FRAME.c: 278:         message->data_length = 1;
  2223  000A0E  EE20 F010          	lfsr	2,16
  2224  000A12  5006               	movf	FRAME_DeviceReset@message,w,c
  2225  000A14  26D9               	addwf	fsr2l,f,c
  2226  000A16  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2227  000A18  22DA               	addwfc	fsr2h,f,c
  2228  000A1A  0E01               	movlw	1
  2229  000A1C  6EDF               	movwf	indf2,c
  2230                           
  2231                           ;FRAME.c: 280:         message->data[0] = (RCON>>6) & 0x01;
  2232  000A1E  EE20 F008          	lfsr	2,8
  2233  000A22  5006               	movf	FRAME_DeviceReset@message,w,c
  2234  000A24  26D9               	addwf	fsr2l,f,c
  2235  000A26  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2236  000A28  22DA               	addwfc	fsr2h,f,c
  2237  000A2A  44D0               	rlncf	4048,w,c	;volatile
  2238  000A2C  46E8               	rlncf	wreg,f,c
  2239  000A2E  0B03               	andlw	3
  2240  000A30  0B01               	andlw	1
  2241  000A32  6EDF               	movwf	indf2,c
  2242                           
  2243                           ;FRAME.c: 281:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2244  000A34  EE20 F009          	lfsr	2,9
  2245  000A38  5006               	movf	FRAME_DeviceReset@message,w,c
  2246  000A3A  26D9               	addwf	fsr2l,f,c
  2247  000A3C  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2248  000A3E  22DA               	addwfc	fsr2h,f,c
  2249  000A40  A836               	btfss	_Flagi,4,c
  2250  000A42  D002               	goto	u1250
  2251  000A44  0E01               	movlw	1
  2252  000A46  D001               	goto	u1256
  2253  000A48                     u1250:
  2254  000A48  0E00               	movlw	0
  2255  000A4A                     u1256:
  2256  000A4A  6EDF               	movwf	indf2,c
  2257                           
  2258                           ;FRAME.c: 282:         message->data[2] = Flagi.pomiarTla;
  2259  000A4C  EE20 F00A          	lfsr	2,10
  2260  000A50  5006               	movf	FRAME_DeviceReset@message,w,c
  2261  000A52  26D9               	addwf	fsr2l,f,c
  2262  000A54  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2263  000A56  22DA               	addwfc	fsr2h,f,c
  2264  000A58  A036               	btfss	_Flagi,0,c
  2265  000A5A  D002               	goto	u1260
  2266  000A5C  0E01               	movlw	1
  2267  000A5E  D001               	goto	u1266
  2268  000A60                     u1260:
  2269  000A60  0E00               	movlw	0
  2270  000A62                     u1266:
  2271  000A62  6EDF               	movwf	indf2,c
  2272                           
  2273                           ;FRAME.c: 283:         message->data[3] = 0;
  2274  000A64  EE20 F00B          	lfsr	2,11
  2275  000A68  5006               	movf	FRAME_DeviceReset@message,w,c
  2276  000A6A  26D9               	addwf	fsr2l,f,c
  2277  000A6C  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2278  000A6E  22DA               	addwfc	fsr2h,f,c
  2279  000A70  0E00               	movlw	0
  2280  000A72  6EDF               	movwf	indf2,c
  2281                           
  2282                           ;FRAME.c: 284:         message->data[4] = Dane->rokU16;
  2283  000A74  EE20 F00C          	lfsr	2,12
  2284  000A78  5006               	movf	FRAME_DeviceReset@message,w,c
  2285  000A7A  26D9               	addwf	fsr2l,f,c
  2286  000A7C  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2287  000A7E  22DA               	addwfc	fsr2h,f,c
  2288  000A80  C02E FFDF          	movff	46,indf2
  2289                           
  2290                           ;FRAME.c: 285:         message->data[5] = Dane->miesiacU16;
  2291  000A84  EE20 F00D          	lfsr	2,13
  2292  000A88  5006               	movf	FRAME_DeviceReset@message,w,c
  2293  000A8A  26D9               	addwf	fsr2l,f,c
  2294  000A8C  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2295  000A8E  22DA               	addwfc	fsr2h,f,c
  2296  000A90  C030 FFDF          	movff	48,indf2
  2297                           
  2298                           ;FRAME.c: 286:         message->data[6] = Dane->dzienU16;
  2299  000A94  EE20 F00E          	lfsr	2,14
  2300  000A98  5006               	movf	FRAME_DeviceReset@message,w,c
  2301  000A9A  26D9               	addwf	fsr2l,f,c
  2302  000A9C  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2303  000A9E  22DA               	addwfc	fsr2h,f,c
  2304  000AA0  C032 FFDF          	movff	50,indf2
  2305                           
  2306                           ;FRAME.c: 287:         message->data[7] = Dane->godzinaU16;
  2307  000AA4  EE20 F00F          	lfsr	2,15
  2308  000AA8  5006               	movf	FRAME_DeviceReset@message,w,c
  2309  000AAA  26D9               	addwf	fsr2l,f,c
  2310  000AAC  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2311  000AAE  22DA               	addwfc	fsr2h,f,c
  2312  000AB0  C034 FFDF          	movff	52,indf2
  2313                           
  2314                           ;FRAME.c: 288:         RCON &= ~(1<<6);
  2315  000AB4  9CD0               	bcf	4048,6,c	;volatile
  2316                           
  2317                           ;FRAME.c: 289:         Flagi.wykonanoZapisDoFlash = 0;
  2318  000AB6  9836               	bcf	_Flagi,4,c
  2319                           
  2320                           ;FRAME.c: 303:     }
  2321  000AB8  0012               	return	
  2322  000ABA                     l2768:
  2323                           
  2324                           ;FRAME.c: 305:     {;FRAME.c: 306:         message->data_length = 1;
  2325  000ABA  EE20 F010          	lfsr	2,16
  2326  000ABE  5006               	movf	FRAME_DeviceReset@message,w,c
  2327  000AC0  26D9               	addwf	fsr2l,f,c
  2328  000AC2  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2329  000AC4  22DA               	addwfc	fsr2h,f,c
  2330  000AC6  0E01               	movlw	1
  2331  000AC8  6EDF               	movwf	indf2,c
  2332                           
  2333                           ;FRAME.c: 328:         message->data[0] = 0xFF;
  2334  000ACA  EE20 F008          	lfsr	2,8
  2335  000ACE  5006               	movf	FRAME_DeviceReset@message,w,c
  2336  000AD0  26D9               	addwf	fsr2l,f,c
  2337  000AD2  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2338  000AD4  22DA               	addwfc	fsr2h,f,c
  2339  000AD6  0EFF               	movlw	255
  2340  000AD8  6EDF               	movwf	indf2,c
  2341  000ADA  0012               	return		;funcret
  2342  000ADC                     __end_of_FRAME_DeviceReset:
  2343                           	opt callstack 0
  2344                           
  2345 ;; *************** function _FRAME_AxisStatus *****************
  2346 ;; Defined at:
  2347 ;;		line 227 in file "FRAME.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  message         2    5[COMRAM] PTR struct .
  2350 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  i               2    0        unsigned short 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;Total ram usage:        3 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    3
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_FRAME_HandleCanFrame
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text19
  2377  0012BE                     __ptext19:
  2378                           	opt callstack 0
  2379  0012BE                     _FRAME_AxisStatus:
  2380                           	opt callstack 25
  2381                           
  2382                           ;FRAME.c: 227: static void FRAME_AxisStatus(mID *message);FRAME.c: 228: {;FRAME.c: 229: 
      +                              WORD i;;FRAME.c: 231:     if(message->message_type == 0x02)
  2383                           
  2384                           ;incstack = 0
  2385  0012BE  EE20 F001          	lfsr	2,1
  2386  0012C2  5006               	movf	FRAME_AxisStatus@message,w,c
  2387  0012C4  26D9               	addwf	fsr2l,f,c
  2388  0012C6  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2389  0012C8  22DA               	addwfc	fsr2h,f,c
  2390  0012CA  0E02               	movlw	2
  2391  0012CC  18DE               	xorwf	postinc2,w,c
  2392  0012CE  A4D8               	btfss	status,2,c
  2393  0012D0  0012               	return	
  2394                           
  2395                           ;FRAME.c: 232:     {;FRAME.c: 233:         message->data_length = 1;
  2396  0012D2  EE20 F010          	lfsr	2,16
  2397  0012D6  5006               	movf	FRAME_AxisStatus@message,w,c
  2398  0012D8  26D9               	addwf	fsr2l,f,c
  2399  0012DA  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2400  0012DC  22DA               	addwfc	fsr2h,f,c
  2401  0012DE  0E01               	movlw	1
  2402  0012E0  6EDF               	movwf	indf2,c
  2403                           
  2404                           ;FRAME.c: 244:         message->data[0] = 0xFF;
  2405  0012E2  EE20 F008          	lfsr	2,8
  2406  0012E6  5006               	movf	FRAME_AxisStatus@message,w,c
  2407  0012E8  26D9               	addwf	fsr2l,f,c
  2408  0012EA  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2409  0012EC  22DA               	addwfc	fsr2h,f,c
  2410  0012EE  0EFF               	movlw	255
  2411  0012F0  6EDF               	movwf	indf2,c
  2412                           
  2413                           ;FRAME.c: 245:     }
  2414  0012F2  0012               	return		;funcret
  2415  0012F4                     __end_of_FRAME_AxisStatus:
  2416                           	opt callstack 0
  2417                           
  2418 ;; *************** function _FRAME_AveragingTimes *****************
  2419 ;; Defined at:
  2420 ;;		line 168 in file "FRAME.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  message         2    5[COMRAM] PTR struct .
  2423 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2438 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2439 ;;Total ram usage:        3 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    3
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_FRAME_HandleCanFrame
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text20
  2450  0012F4                     __ptext20:
  2451                           	opt callstack 0
  2452  0012F4                     _FRAME_AveragingTimes:
  2453                           	opt callstack 25
  2454                           
  2455                           ;FRAME.c: 168: static void FRAME_AveragingTimes(mID *message);FRAME.c: 169: {;FRAME.c: 1
      +                          70:     if(message->message_type == 0x02)
  2456                           
  2457                           ;incstack = 0
  2458  0012F4  EE20 F001          	lfsr	2,1
  2459  0012F8  5006               	movf	FRAME_AveragingTimes@message,w,c
  2460  0012FA  26D9               	addwf	fsr2l,f,c
  2461  0012FC  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2462  0012FE  22DA               	addwfc	fsr2h,f,c
  2463  001300  0E02               	movlw	2
  2464  001302  18DE               	xorwf	postinc2,w,c
  2465  001304  A4D8               	btfss	status,2,c
  2466  001306  0012               	return	
  2467                           
  2468                           ;FRAME.c: 171:     {;FRAME.c: 172:         message->data_length = 1;
  2469  001308  EE20 F010          	lfsr	2,16
  2470  00130C  5006               	movf	FRAME_AveragingTimes@message,w,c
  2471  00130E  26D9               	addwf	fsr2l,f,c
  2472  001310  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2473  001312  22DA               	addwfc	fsr2h,f,c
  2474  001314  0E01               	movlw	1
  2475  001316  6EDF               	movwf	indf2,c
  2476                           
  2477                           ;FRAME.c: 180:         message->data[0] = 0xFF;
  2478  001318  EE20 F008          	lfsr	2,8
  2479  00131C  5006               	movf	FRAME_AveragingTimes@message,w,c
  2480  00131E  26D9               	addwf	fsr2l,f,c
  2481  001320  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2482  001322  22DA               	addwfc	fsr2h,f,c
  2483  001324  0EFF               	movlw	255
  2484  001326  6EDF               	movwf	indf2,c
  2485                           
  2486                           ;FRAME.c: 181:     }
  2487  001328  0012               	return		;funcret
  2488  00132A                     __end_of_FRAME_AveragingTimes:
  2489                           	opt callstack 0
  2490                           
  2491 ;; *************** function _FRAME_AnalogValue *****************
  2492 ;; Defined at:
  2493 ;;		line 407 in file "FRAME.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  message         2    5[COMRAM] PTR struct .
  2496 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2497 ;;  set             2    7[COMRAM] unsigned short 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  i               2    0        unsigned short 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;Total ram usage:        4 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    3
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_FRAME_HandleCanFrame
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text21
  2524  001532                     __ptext21:
  2525                           	opt callstack 0
  2526  001532                     _FRAME_AnalogValue:
  2527                           	opt callstack 25
  2528                           
  2529                           ;incstack = 0
  2530  001532  0012               	return		;funcret
  2531  001534                     __end_of_FRAME_AnalogValue:
  2532                           	opt callstack 0
  2533                           
  2534 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2535 ;; Defined at:
  2536 ;;		line 451 in file "FRAME.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  message         2   11[COMRAM] PTR struct .
  2539 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2540 ;;  nrRamki         2   13[COMRAM] unsigned short 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  i               2   29[COMRAM] unsigned short 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;Total ram usage:       20 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    4
  2559 ;; This function calls:
  2560 ;;		___wmul
  2561 ;; This function is called by:
  2562 ;;		_FRAME_HandleCanFrame
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text22
  2567  0002EC                     __ptext22:
  2568                           	opt callstack 0
  2569  0002EC                     _FRAME_AdressOfNeighbors:
  2570                           	opt callstack 24
  2571                           
  2572                           ;FRAME.c: 451: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          452: {;FRAME.c: 453:     WORD i;;FRAME.c: 457:     if(message->message_type == 0x02)
  2573                           
  2574                           ;incstack = 0
  2575  0002EC  EE20 F001          	lfsr	2,1
  2576  0002F0  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  2577  0002F2  26D9               	addwf	fsr2l,f,c
  2578  0002F4  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2579  0002F6  22DA               	addwfc	fsr2h,f,c
  2580  0002F8  0E02               	movlw	2
  2581  0002FA  18DE               	xorwf	postinc2,w,c
  2582  0002FC  A4D8               	btfss	status,2,c
  2583  0002FE  D07F               	goto	l2800
  2584                           
  2585                           ;FRAME.c: 458:     {;FRAME.c: 460:         message->data_length = 8;
  2586  000300  EE20 F010          	lfsr	2,16
  2587  000304  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  2588  000306  26D9               	addwf	fsr2l,f,c
  2589  000308  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2590  00030A  22DA               	addwfc	fsr2h,f,c
  2591  00030C  0E08               	movlw	8
  2592  00030E  6EDF               	movwf	indf2,c
  2593                           
  2594                           ;FRAME.c: 461:         for(i=0; i<4; i++)
  2595  000310  0E00               	movlw	0
  2596  000312  6E1F               	movwf	FRAME_AdressOfNeighbors@i+1,c
  2597  000314  0E00               	movlw	0
  2598  000316  6E1E               	movwf	FRAME_AdressOfNeighbors@i,c
  2599  000318                     l2794:
  2600                           
  2601                           ;FRAME.c: 462:         {;FRAME.c: 463:             message->data[2*i] = (BYTE)(Dane->sas
      +                          iedzi[i+(4*nrRamki)].adres >> 8);
  2602  000318  C01E  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  2603  00031C  C01F  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  2604  000320  90D8               	bcf	status,0,c
  2605  000322  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2606  000324  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2607  000326  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2608  00032A  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2609  00032E  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  2610  000330  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2611  000332  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2612  000334  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2613  000336  0E08               	movlw	8
  2614  000338  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2615  00033A  6ED9               	movwf	fsr2l,c
  2616  00033C  0E00               	movlw	0
  2617  00033E  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2618  000340  6EDA               	movwf	fsr2h,c
  2619  000342  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  2620  000346  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  2621  00034A  90D8               	bcf	status,0,c
  2622  00034C  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2623  00034E  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2624  000350  90D8               	bcf	status,0,c
  2625  000352  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2626  000354  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2627  000356  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  2628  000358  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2629  00035A  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2630  00035C  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2631  00035E  90D8               	bcf	status,0,c
  2632  000360  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2633  000362  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2634  000364  90D8               	bcf	status,0,c
  2635  000366  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2636  000368  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2637  00036A  0E0E               	movlw	14
  2638  00036C  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2639  00036E  6EE1               	movwf	fsr1l,c
  2640  000370  0E00               	movlw	0
  2641  000372  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2642  000374  6EE2               	movwf	fsr1h,c
  2643  000376  CFE6 F016          	movff	postinc1,??_FRAME_AdressOfNeighbors+6
  2644  00037A  CFE5 F017          	movff	postdec1,??_FRAME_AdressOfNeighbors+7
  2645  00037E  C017  F016         	movff	??_FRAME_AdressOfNeighbors+7,??_FRAME_AdressOfNeighbors+6
  2646  000382  6A17               	clrf	??_FRAME_AdressOfNeighbors+7,c
  2647  000384  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  2648  000386  6EDF               	movwf	indf2,c
  2649                           
  2650                           ;FRAME.c: 464:             message->data[(2*i)+1] = (BYTE)Dane->sasiedzi[i+(4*nrRamki)].
      +                          adres;
  2651  000388  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2652  00038C  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2653  000390  90D8               	bcf	status,0,c
  2654  000392  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2655  000394  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2656  000396  90D8               	bcf	status,0,c
  2657  000398  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2658  00039A  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2659  00039C  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  2660  00039E  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  2661  0003A0  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2662  0003A2  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  2663  0003A4  90D8               	bcf	status,0,c
  2664  0003A6  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2665  0003A8  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2666  0003AA  90D8               	bcf	status,0,c
  2667  0003AC  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2668  0003AE  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2669  0003B0  0E0E               	movlw	14
  2670  0003B2  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  2671  0003B4  6ED9               	movwf	fsr2l,c
  2672  0003B6  0E00               	movlw	0
  2673  0003B8  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  2674  0003BA  6EDA               	movwf	fsr2h,c
  2675  0003BC  C01E  F012         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+2
  2676  0003C0  C01F  F013         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+3
  2677  0003C4  90D8               	bcf	status,0,c
  2678  0003C6  3612               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  2679  0003C8  3613               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  2680  0003CA  C00C  F014         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  2681  0003CE  C00D  F015         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  2682  0003D2  5012               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2683  0003D4  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2684  0003D6  5013               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2685  0003D8  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2686  0003DA  0E09               	movlw	9
  2687  0003DC  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2688  0003DE  6EE1               	movwf	fsr1l,c
  2689  0003E0  0E00               	movlw	0
  2690  0003E2  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2691  0003E4  6EE2               	movwf	fsr1h,c
  2692  0003E6  CFDF FFE7          	movff	indf2,indf1
  2693                           
  2694                           ;FRAME.c: 465:         }
  2695  0003EA  4A1E               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  2696  0003EC  2A1F               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  2697  0003EE  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2698  0003F0  E105               	bnz	u1310
  2699  0003F2  0E04               	movlw	4
  2700  0003F4  5C1E               	subwf	FRAME_AdressOfNeighbors@i,w,c
  2701  0003F6  B0D8               	btfsc	status,0,c
  2702  0003F8  0012               	return	
  2703  0003FA  D78E               	goto	l2794
  2704  0003FC                     u1310:
  2705  0003FC  0012               	return	
  2706  0003FE                     l2800:
  2707                           
  2708                           ;FRAME.c: 469:     {;FRAME.c: 471:         for(i=0; i<4; i++)
  2709  0003FE  0E00               	movlw	0
  2710  000400  6E1F               	movwf	FRAME_AdressOfNeighbors@i+1,c
  2711  000402  0E00               	movlw	0
  2712  000404  6E1E               	movwf	FRAME_AdressOfNeighbors@i,c
  2713  000406                     l2806:
  2714                           
  2715                           ;FRAME.c: 472:         {;FRAME.c: 473:             Dane->sasiedzi[i+(4*nrRamki)].adres =
      +                           ((WORD)message->data[2*i] << 8) |
  2716  000406  C01E  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  2717  00040A  C01F  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  2718  00040E  90D8               	bcf	status,0,c
  2719  000410  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2720  000412  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2721  000414  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2722  000418  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2723  00041C  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  2724  00041E  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2725  000420  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2726  000422  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2727  000424  0E08               	movlw	8
  2728  000426  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2729  000428  6ED9               	movwf	fsr2l,c
  2730  00042A  0E00               	movlw	0
  2731  00042C  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2732  00042E  6EDA               	movwf	fsr2h,c
  2733  000430  50DF               	movf	indf2,w,c
  2734  000432  6E14               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  2735  000434  5014               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  2736  000436  6E16               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  2737  000438  6A15               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  2738  00043A  C01E  F017         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+7
  2739  00043E  C01F  F018         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+8
  2740  000442  90D8               	bcf	status,0,c
  2741  000444  3617               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  2742  000446  3618               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  2743  000448  C00C  F019         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  2744  00044C  C00D  F01A         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  2745  000450  5017               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  2746  000452  2619               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  2747  000454  5018               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  2748  000456  221A               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  2749  000458  0E09               	movlw	9
  2750  00045A  2419               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  2751  00045C  6ED9               	movwf	fsr2l,c
  2752  00045E  0E00               	movlw	0
  2753  000460  201A               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  2754  000462  6EDA               	movwf	fsr2h,c
  2755  000464  50DF               	movf	indf2,w,c
  2756  000466  6E1B               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  2757  000468  501B               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  2758  00046A  1215               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  2759  00046C  0E00               	movlw	0
  2760  00046E  1216               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  2761  000470  C00E  F01C         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+12
  2762  000474  C00F  F01D         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+13
  2763  000478  90D8               	bcf	status,0,c
  2764  00047A  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2765  00047C  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2766  00047E  90D8               	bcf	status,0,c
  2767  000480  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2768  000482  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2769  000484  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  2770  000486  261C               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  2771  000488  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2772  00048A  221D               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  2773  00048C  90D8               	bcf	status,0,c
  2774  00048E  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2775  000490  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2776  000492  90D8               	bcf	status,0,c
  2777  000494  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2778  000496  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2779  000498  0E0E               	movlw	14
  2780  00049A  241C               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  2781  00049C  6ED9               	movwf	fsr2l,c
  2782  00049E  0E00               	movlw	0
  2783  0004A0  201D               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  2784  0004A2  6EDA               	movwf	fsr2h,c
  2785  0004A4  C015  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  2786  0004A8  C016  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  2787                           
  2788                           ;FRAME.c: 476:             Dane->sasiedzi[i+(4*nrRamki)].pointerNaSasiada = &wartosciSas
      +                          iada[i+(4*nrRamki)];
  2789  0004AC  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2790  0004B0  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2791  0004B4  90D8               	bcf	status,0,c
  2792  0004B6  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2793  0004B8  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2794  0004BA  90D8               	bcf	status,0,c
  2795  0004BC  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2796  0004BE  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2797  0004C0  C010  F006         	movff	??_FRAME_AdressOfNeighbors,___wmul@multiplier
  2798  0004C4  C011  F007         	movff	??_FRAME_AdressOfNeighbors+1,___wmul@multiplier+1
  2799  0004C8  0E00               	movlw	0
  2800  0004CA  6E09               	movwf	___wmul@multiplicand+1,c
  2801  0004CC  0E44               	movlw	68
  2802  0004CE  6E08               	movwf	___wmul@multiplicand,c
  2803  0004D0  ECEF  F009         	call	___wmul	;wreg free
  2804  0004D4  0EC6               	movlw	low _wartosciSasiada
  2805  0004D6  6E12               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  2806  0004D8  0E00               	movlw	high _wartosciSasiada
  2807  0004DA  6E13               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  2808  0004DC  5006               	movf	?___wmul,w,c
  2809  0004DE  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2810  0004E0  5007               	movf	?___wmul+1,w,c
  2811  0004E2  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2812  0004E4  C01E  F006         	movff	FRAME_AdressOfNeighbors@i,___wmul@multiplier
  2813  0004E8  C01F  F007         	movff	FRAME_AdressOfNeighbors@i+1,___wmul@multiplier+1
  2814  0004EC  0E00               	movlw	0
  2815  0004EE  6E09               	movwf	___wmul@multiplicand+1,c
  2816  0004F0  0E44               	movlw	68
  2817  0004F2  6E08               	movwf	___wmul@multiplicand,c
  2818  0004F4  ECEF  F009         	call	___wmul	;wreg free
  2819  0004F8  5006               	movf	?___wmul,w,c
  2820  0004FA  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2821  0004FC  5007               	movf	?___wmul+1,w,c
  2822  0004FE  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2823  000500  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  2824  000504  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  2825  000508  90D8               	bcf	status,0,c
  2826  00050A  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2827  00050C  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2828  00050E  90D8               	bcf	status,0,c
  2829  000510  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2830  000512  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2831  000514  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  2832  000516  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2833  000518  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2834  00051A  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2835  00051C  90D8               	bcf	status,0,c
  2836  00051E  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2837  000520  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2838  000522  90D8               	bcf	status,0,c
  2839  000524  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2840  000526  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2841  000528  0E10               	movlw	16
  2842  00052A  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2843  00052C  6ED9               	movwf	fsr2l,c
  2844  00052E  0E00               	movlw	0
  2845  000530  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2846  000532  6EDA               	movwf	fsr2h,c
  2847  000534  C012  FFDE         	movff	??_FRAME_AdressOfNeighbors+2,postinc2
  2848  000538  C013  FFDD         	movff	??_FRAME_AdressOfNeighbors+3,postdec2
  2849                           
  2850                           ;FRAME.c: 477:         }
  2851  00053C  4A1E               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  2852  00053E  2A1F               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  2853  000540  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2854  000542  E105               	bnz	u1320
  2855  000544  0E04               	movlw	4
  2856  000546  5C1E               	subwf	FRAME_AdressOfNeighbors@i,w,c
  2857  000548  B0D8               	btfsc	status,0,c
  2858  00054A  0012               	return	
  2859  00054C  D75C               	goto	l2806
  2860  00054E                     u1320:
  2861  00054E  0012               	return		;funcret
  2862  000550                     __end_of_FRAME_AdressOfNeighbors:
  2863                           	opt callstack 0
  2864                           
  2865 ;; *************** function ___wmul *****************
  2866 ;; Defined at:
  2867 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  multiplier      2    5[COMRAM] unsigned int 
  2870 ;;  multiplicand    2    7[COMRAM] unsigned int 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  product         2    9[COMRAM] unsigned int 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2    5[COMRAM] unsigned int 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, prodl, prodh
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;Total ram usage:        6 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    3
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_IsInNeighbors
  2893 ;;		_FRAME_AdressOfNeighbors
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text23
  2898  0013DE                     __ptext23:
  2899                           	opt callstack 0
  2900  0013DE                     ___wmul:
  2901                           	opt callstack 24
  2902                           
  2903                           ;incstack = 0
  2904  0013DE  5006               	movf	___wmul@multiplier,w,c
  2905  0013E0  0208               	mulwf	___wmul@multiplicand,c
  2906  0013E2  CFF3 F00A          	movff	prodl,___wmul@product
  2907  0013E6  CFF4 F00B          	movff	prodh,___wmul@product+1
  2908  0013EA  5006               	movf	___wmul@multiplier,w,c
  2909  0013EC  0209               	mulwf	___wmul@multiplicand+1,c
  2910  0013EE  50F3               	movf	prodl,w,c
  2911  0013F0  260B               	addwf	___wmul@product+1,f,c
  2912  0013F2  5007               	movf	___wmul@multiplier+1,w,c
  2913  0013F4  0208               	mulwf	___wmul@multiplicand,c
  2914  0013F6  50F3               	movf	prodl,w,c
  2915  0013F8  260B               	addwf	___wmul@product+1,f,c
  2916  0013FA  C00A  F006         	movff	___wmul@product,?___wmul
  2917  0013FE  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  2918  001402  0012               	return		;funcret
  2919  001404                     __end_of___wmul:
  2920                           	opt callstack 0
  2921                           
  2922 ;; *************** function _FRAME_AccelerometerStatus *****************
  2923 ;; Defined at:
  2924 ;;		line 91 in file "FRAME.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  message         2    7[COMRAM] PTR struct .
  2927 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;Total ram usage:        3 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    4
  2946 ;; This function calls:
  2947 ;;		_MOCK_Klikniecie_Spadek
  2948 ;;		_MOCK_PrzyspieszenieX
  2949 ;;		_MOCK_PrzyspieszenieY
  2950 ;;		_MOCK_PrzyspieszenieZ
  2951 ;; This function is called by:
  2952 ;;		_FRAME_HandleCanFrame
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text24
  2957  000EA2                     __ptext24:
  2958                           	opt callstack 0
  2959  000EA2                     _FRAME_AccelerometerStatus:
  2960                           	opt callstack 24
  2961                           
  2962                           ;FRAME.c: 91: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 92: {;FRAME.c
      +                          : 93:     if(message->message_type == 0x02)
  2963                           
  2964                           ;incstack = 0
  2965  000EA2  EE20 F001          	lfsr	2,1
  2966  000EA6  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2967  000EA8  26D9               	addwf	fsr2l,f,c
  2968  000EAA  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2969  000EAC  22DA               	addwfc	fsr2h,f,c
  2970  000EAE  0E02               	movlw	2
  2971  000EB0  18DE               	xorwf	postinc2,w,c
  2972  000EB2  A4D8               	btfss	status,2,c
  2973  000EB4  0012               	return	
  2974                           
  2975                           ;FRAME.c: 94:     {;FRAME.c: 95:         message->data_length = 4;
  2976  000EB6  EE20 F010          	lfsr	2,16
  2977  000EBA  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2978  000EBC  26D9               	addwf	fsr2l,f,c
  2979  000EBE  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2980  000EC0  22DA               	addwfc	fsr2h,f,c
  2981  000EC2  0E04               	movlw	4
  2982  000EC4  6EDF               	movwf	indf2,c
  2983                           
  2984                           ;FRAME.c: 99:         message->data[0] = MOCK_PrzyspieszenieX();
  2985  000EC6  EE20 F008          	lfsr	2,8
  2986  000ECA  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2987  000ECC  26D9               	addwf	fsr2l,f,c
  2988  000ECE  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2989  000ED0  22DA               	addwfc	fsr2h,f,c
  2990  000ED2  EC6D  F00A         	call	_MOCK_PrzyspieszenieX	;wreg free
  2991  000ED6  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  2992  000ED8  6EDF               	movwf	indf2,c
  2993                           
  2994                           ;FRAME.c: 100:         message->data[1] = MOCK_PrzyspieszenieY();
  2995  000EDA  EE20 F009          	lfsr	2,9
  2996  000EDE  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  2997  000EE0  26D9               	addwf	fsr2l,f,c
  2998  000EE2  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2999  000EE4  22DA               	addwfc	fsr2h,f,c
  3000  000EE6  EC68  F00A         	call	_MOCK_PrzyspieszenieY	;wreg free
  3001  000EEA  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3002  000EEC  6EDF               	movwf	indf2,c
  3003                           
  3004                           ;FRAME.c: 101:         message->data[2] = MOCK_PrzyspieszenieZ();
  3005  000EEE  EE20 F00A          	lfsr	2,10
  3006  000EF2  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3007  000EF4  26D9               	addwf	fsr2l,f,c
  3008  000EF6  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3009  000EF8  22DA               	addwfc	fsr2h,f,c
  3010  000EFA  EC63  F00A         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3011  000EFE  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3012  000F00  6EDF               	movwf	indf2,c
  3013                           
  3014                           ;FRAME.c: 102:         message->data[3] = MOCK_Klikniecie_Spadek();
  3015  000F02  EE20 F00B          	lfsr	2,11
  3016  000F06  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3017  000F08  26D9               	addwf	fsr2l,f,c
  3018  000F0A  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3019  000F0C  22DA               	addwfc	fsr2h,f,c
  3020  000F0E  EC72  F00A         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3021  000F12  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3022  000F14  6EDF               	movwf	indf2,c
  3023                           
  3024                           ;FRAME.c: 103:     }
  3025  000F16  0012               	return		;funcret
  3026  000F18                     __end_of_FRAME_AccelerometerStatus:
  3027                           	opt callstack 0
  3028                           
  3029 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3030 ;; Defined at:
  3031 ;;		line 72 in file "MOC_Funct.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  2    5[COMRAM] unsigned int 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;Total ram usage:        2 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    3
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_FRAME_AccelerometerStatus
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text25
  3060  0014C6                     __ptext25:
  3061                           	opt callstack 0
  3062  0014C6                     _MOCK_PrzyspieszenieZ:
  3063                           	opt callstack 24
  3064                           
  3065                           ;MOC_Funct.c: 74:     return 0xFE;
  3066                           
  3067                           ;incstack = 0
  3068  0014C6  0E00               	movlw	0
  3069  0014C8  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3070  0014CA  0EFE               	movlw	254
  3071  0014CC  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3072  0014CE  0012               	return		;funcret
  3073  0014D0                     __end_of_MOCK_PrzyspieszenieZ:
  3074                           	opt callstack 0
  3075                           
  3076 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3077 ;; Defined at:
  3078 ;;		line 68 in file "MOC_Funct.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  2    5[COMRAM] unsigned int 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;Total ram usage:        2 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    3
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_FRAME_AccelerometerStatus
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text26
  3107  0014D0                     __ptext26:
  3108                           	opt callstack 0
  3109  0014D0                     _MOCK_PrzyspieszenieY:
  3110                           	opt callstack 24
  3111                           
  3112                           ;MOC_Funct.c: 70:     return 0xFE;
  3113                           
  3114                           ;incstack = 0
  3115  0014D0  0E00               	movlw	0
  3116  0014D2  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3117  0014D4  0EFE               	movlw	254
  3118  0014D6  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3119  0014D8  0012               	return		;funcret
  3120  0014DA                     __end_of_MOCK_PrzyspieszenieY:
  3121                           	opt callstack 0
  3122                           
  3123 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3124 ;; Defined at:
  3125 ;;		line 63 in file "MOC_Funct.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  2    5[COMRAM] unsigned int 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;Total ram usage:        2 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    3
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_FRAME_AccelerometerStatus
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text27
  3154  0014DA                     __ptext27:
  3155                           	opt callstack 0
  3156  0014DA                     _MOCK_PrzyspieszenieX:
  3157                           	opt callstack 24
  3158                           
  3159                           ;MOC_Funct.c: 65:     return 0xFE;
  3160                           
  3161                           ;incstack = 0
  3162  0014DA  0E00               	movlw	0
  3163  0014DC  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3164  0014DE  0EFE               	movlw	254
  3165  0014E0  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  3166  0014E2  0012               	return		;funcret
  3167  0014E4                     __end_of_MOCK_PrzyspieszenieX:
  3168                           	opt callstack 0
  3169                           
  3170 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3171 ;; Defined at:
  3172 ;;		line 76 in file "MOC_Funct.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  2    5[COMRAM] unsigned int 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;Total ram usage:        2 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    3
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_FRAME_AccelerometerStatus
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text28
  3201  0014E4                     __ptext28:
  3202                           	opt callstack 0
  3203  0014E4                     _MOCK_Klikniecie_Spadek:
  3204                           	opt callstack 24
  3205                           
  3206                           ;MOC_Funct.c: 78:     return 0b00000000;
  3207                           
  3208                           ;incstack = 0
  3209  0014E4  0E00               	movlw	0
  3210  0014E6  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3211  0014E8  0E00               	movlw	0
  3212  0014EA  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  3213  0014EC  0012               	return		;funcret
  3214  0014EE                     __end_of_MOCK_Klikniecie_Spadek:
  3215                           	opt callstack 0
  3216                           
  3217 ;; *************** function _CAN_SendFrame *****************
  3218 ;; Defined at:
  3219 ;;		line 205 in file "CAN.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  message         2   10[COMRAM] PTR struct .
  3222 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;Total ram usage:        5 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    4
  3241 ;; This function calls:
  3242 ;;		_CAN_MoveBuffIntoFrame
  3243 ;; This function is called by:
  3244 ;;		_FRAME_HandleCanFrame
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text29
  3249  00073A                     __ptext29:
  3250                           	opt callstack 0
  3251  00073A                     _CAN_SendFrame:
  3252                           	opt callstack 24
  3253                           
  3254                           ;CAN.c: 210:     {;CAN.c: 211:         ECANCON = 0x83;
  3255                           
  3256                           ;incstack = 0
  3257                           ;CAN.c: 205: void CAN_SendFrame(mID * message);CAN.c: 206: {;CAN.c: 209:     for(;;)
  3258  00073A  0E83               	movlw	131
  3259  00073C  6E77               	movwf	3959,c	;volatile
  3260                           
  3261                           ;CAN.c: 212:         if(!RXB0CONbits.FILHIT3)
  3262  00073E  A660               	btfss	3936,3,c	;volatile
  3263  000740  D00A               	goto	l207
  3264                           
  3265                           ;CAN.c: 217:         ECANCON = 0x84;
  3266  000742  0E84               	movlw	132
  3267  000744  6E77               	movwf	3959,c	;volatile
  3268                           
  3269                           ;CAN.c: 218:         if(!RXB0CONbits.FILHIT3)
  3270  000746  A660               	btfss	3936,3,c	;volatile
  3271  000748  D006               	goto	l207
  3272                           
  3273                           ;CAN.c: 223:         ECANCON = 0x85;
  3274  00074A  0E85               	movlw	133
  3275  00074C  6E77               	movwf	3959,c	;volatile
  3276                           
  3277                           ;CAN.c: 224:         if(!RXB0CONbits.FILHIT3)
  3278  00074E  A660               	btfss	3936,3,c	;volatile
  3279  000750  D002               	goto	l207
  3280  000752  D7F3               	goto	_CAN_SendFrame
  3281  000754                     l208:
  3282  000754  00FF               	reset		;# 
  3283  000756                     l207:
  3284                           
  3285                           ;CAN.c: 231:     while(COMSTATbits.TXWARN)
  3286  000756  B474               	btfsc	3956,2,c	;volatile
  3287  000758  D7FD               	goto	l208
  3288                           
  3289                           ;CAN.c: 235:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3290  00075A  0E00               	movlw	0
  3291  00075C  6E41               	movwf	_DetectorLedRadar+2,c
  3292                           
  3293                           ;CAN.c: 236:     RXB0EIDL = message->id.v[0];
  3294  00075E  EE20 F004          	lfsr	2,4
  3295  000762  500B               	movf	CAN_SendFrame@message,w,c
  3296  000764  26D9               	addwf	fsr2l,f,c
  3297  000766  500C               	movf	CAN_SendFrame@message+1,w,c
  3298  000768  22DA               	addwfc	fsr2h,f,c
  3299  00076A  50DF               	movf	indf2,w,c
  3300  00076C  6E64               	movwf	3940,c	;volatile
  3301                           
  3302                           ;CAN.c: 237:     RXB0EIDH = message->id.v[1];
  3303  00076E  EE20 F005          	lfsr	2,5
  3304  000772  500B               	movf	CAN_SendFrame@message,w,c
  3305  000774  26D9               	addwf	fsr2l,f,c
  3306  000776  500C               	movf	CAN_SendFrame@message+1,w,c
  3307  000778  22DA               	addwfc	fsr2h,f,c
  3308  00077A  50DF               	movf	indf2,w,c
  3309  00077C  6E63               	movwf	3939,c	;volatile
  3310                           
  3311                           ;CAN.c: 238:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3312  00077E  EE20 F006          	lfsr	2,6
  3313  000782  500B               	movf	CAN_SendFrame@message,w,c
  3314  000784  26D9               	addwf	fsr2l,f,c
  3315  000786  500C               	movf	CAN_SendFrame@message+1,w,c
  3316  000788  22DA               	addwfc	fsr2h,f,c
  3317  00078A  50DF               	movf	indf2,w,c
  3318  00078C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3319  00078E  0E03               	movlw	3
  3320  000790  160D               	andwf	??_CAN_SendFrame,f,c
  3321  000792  EE20 F006          	lfsr	2,6
  3322  000796  500B               	movf	CAN_SendFrame@message,w,c
  3323  000798  26D9               	addwf	fsr2l,f,c
  3324  00079A  500C               	movf	CAN_SendFrame@message+1,w,c
  3325  00079C  22DA               	addwfc	fsr2h,f,c
  3326  00079E  50DF               	movf	indf2,w,c
  3327  0007A0  0BFC               	andlw	252
  3328  0007A2  0D08               	mullw	8
  3329  0007A4  50F3               	movf	prodl,w,c
  3330  0007A6  100D               	iorwf	??_CAN_SendFrame,w,c
  3331  0007A8  6E62               	movwf	3938,c	;volatile
  3332                           
  3333                           ;CAN.c: 239:     RXB0SIDLbits.EXID = 1;
  3334  0007AA  8662               	bsf	3938,3,c	;volatile
  3335                           
  3336                           ;CAN.c: 240:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3337  0007AC  EE20 F006          	lfsr	2,6
  3338  0007B0  500B               	movf	CAN_SendFrame@message,w,c
  3339  0007B2  26D9               	addwf	fsr2l,f,c
  3340  0007B4  500C               	movf	CAN_SendFrame@message+1,w,c
  3341  0007B6  22DA               	addwfc	fsr2h,f,c
  3342  0007B8  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  3343  0007BC  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  3344  0007C0  0E05               	movlw	5
  3345  0007C2  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3346  0007C4                     u1125:
  3347  0007C4  90D8               	bcf	status,0,c
  3348  0007C6  320E               	rrcf	??_CAN_SendFrame+1,f,c
  3349  0007C8  320D               	rrcf	??_CAN_SendFrame,f,c
  3350  0007CA  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3351  0007CC  D7FB               	goto	u1125
  3352  0007CE  500D               	movf	??_CAN_SendFrame,w,c
  3353  0007D0  6E61               	movwf	3937,c	;volatile
  3354                           
  3355                           ;CAN.c: 242:     RXB0DLC = 0;
  3356  0007D2  0E00               	movlw	0
  3357  0007D4  6E65               	movwf	3941,c	;volatile
  3358                           
  3359                           ;CAN.c: 244:     if(message->message_type==0x02)
  3360  0007D6  EE20 F001          	lfsr	2,1
  3361  0007DA  500B               	movf	CAN_SendFrame@message,w,c
  3362  0007DC  26D9               	addwf	fsr2l,f,c
  3363  0007DE  500C               	movf	CAN_SendFrame@message+1,w,c
  3364  0007E0  22DA               	addwfc	fsr2h,f,c
  3365  0007E2  0E02               	movlw	2
  3366  0007E4  18DE               	xorwf	postinc2,w,c
  3367  0007E6  A4D8               	btfss	status,2,c
  3368  0007E8  D002               	goto	l2652
  3369                           
  3370                           ;CAN.c: 245:     {;CAN.c: 246:         RXB0DLCbits.RXRTR = 1;
  3371  0007EA  8C65               	bsf	3941,6,c	;volatile
  3372                           
  3373                           ;CAN.c: 247:     }
  3374  0007EC  D05A               	goto	l2656
  3375  0007EE                     l2652:
  3376                           
  3377                           ;CAN.c: 249:     {;CAN.c: 250:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  3378  0007EE  EE20 F010          	lfsr	2,16
  3379  0007F2  500B               	movf	CAN_SendFrame@message,w,c
  3380  0007F4  26D9               	addwf	fsr2l,f,c
  3381  0007F6  500C               	movf	CAN_SendFrame@message+1,w,c
  3382  0007F8  22DA               	addwfc	fsr2h,f,c
  3383  0007FA  50DF               	movf	indf2,w,c
  3384  0007FC  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3385  0007FE  0E0F               	movlw	15
  3386  000800  160D               	andwf	??_CAN_SendFrame,f,c
  3387  000802  5065               	movf	3941,w,c	;volatile
  3388  000804  180D               	xorwf	??_CAN_SendFrame,w,c
  3389  000806  0BFE               	andlw	-2
  3390  000808  180D               	xorwf	??_CAN_SendFrame,w,c
  3391  00080A  6E65               	movwf	3941,c	;volatile
  3392                           
  3393                           ;CAN.c: 251:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  3394  00080C  EE20 F010          	lfsr	2,16
  3395  000810  500B               	movf	CAN_SendFrame@message,w,c
  3396  000812  26D9               	addwf	fsr2l,f,c
  3397  000814  500C               	movf	CAN_SendFrame@message+1,w,c
  3398  000816  22DA               	addwfc	fsr2h,f,c
  3399  000818  50DF               	movf	indf2,w,c
  3400  00081A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3401  00081C  90D8               	bcf	status,0,c
  3402  00081E  320D               	rrcf	??_CAN_SendFrame,f,c
  3403  000820  0E07               	movlw	7
  3404  000822  160D               	andwf	??_CAN_SendFrame,f,c
  3405  000824  460D               	rlncf	??_CAN_SendFrame,f,c
  3406  000826  5065               	movf	3941,w,c	;volatile
  3407  000828  180D               	xorwf	??_CAN_SendFrame,w,c
  3408  00082A  0BFD               	andlw	-3
  3409  00082C  180D               	xorwf	??_CAN_SendFrame,w,c
  3410  00082E  6E65               	movwf	3941,c	;volatile
  3411                           
  3412                           ;CAN.c: 252:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  3413  000830  EE20 F010          	lfsr	2,16
  3414  000834  500B               	movf	CAN_SendFrame@message,w,c
  3415  000836  26D9               	addwf	fsr2l,f,c
  3416  000838  500C               	movf	CAN_SendFrame@message+1,w,c
  3417  00083A  22DA               	addwfc	fsr2h,f,c
  3418  00083C  50DF               	movf	indf2,w,c
  3419  00083E  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3420  000840  90D8               	bcf	status,0,c
  3421  000842  320D               	rrcf	??_CAN_SendFrame,f,c
  3422  000844  90D8               	bcf	status,0,c
  3423  000846  320D               	rrcf	??_CAN_SendFrame,f,c
  3424  000848  0E03               	movlw	3
  3425  00084A  160D               	andwf	??_CAN_SendFrame,f,c
  3426  00084C  460D               	rlncf	??_CAN_SendFrame,f,c
  3427  00084E  460D               	rlncf	??_CAN_SendFrame,f,c
  3428  000850  5065               	movf	3941,w,c	;volatile
  3429  000852  180D               	xorwf	??_CAN_SendFrame,w,c
  3430  000854  0BFB               	andlw	-5
  3431  000856  180D               	xorwf	??_CAN_SendFrame,w,c
  3432  000858  6E65               	movwf	3941,c	;volatile
  3433                           
  3434                           ;CAN.c: 253:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  3435  00085A  EE20 F010          	lfsr	2,16
  3436  00085E  500B               	movf	CAN_SendFrame@message,w,c
  3437  000860  26D9               	addwf	fsr2l,f,c
  3438  000862  500C               	movf	CAN_SendFrame@message+1,w,c
  3439  000864  22DA               	addwfc	fsr2h,f,c
  3440  000866  50DF               	movf	indf2,w,c
  3441  000868  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3442  00086A  90D8               	bcf	status,0,c
  3443  00086C  320D               	rrcf	??_CAN_SendFrame,f,c
  3444  00086E  90D8               	bcf	status,0,c
  3445  000870  320D               	rrcf	??_CAN_SendFrame,f,c
  3446  000872  90D8               	bcf	status,0,c
  3447  000874  320D               	rrcf	??_CAN_SendFrame,f,c
  3448  000876  0E01               	movlw	1
  3449  000878  160D               	andwf	??_CAN_SendFrame,f,c
  3450  00087A  460D               	rlncf	??_CAN_SendFrame,f,c
  3451  00087C  460D               	rlncf	??_CAN_SendFrame,f,c
  3452  00087E  460D               	rlncf	??_CAN_SendFrame,f,c
  3453  000880  5065               	movf	3941,w,c	;volatile
  3454  000882  180D               	xorwf	??_CAN_SendFrame,w,c
  3455  000884  0BF7               	andlw	-9
  3456  000886  180D               	xorwf	??_CAN_SendFrame,w,c
  3457  000888  6E65               	movwf	3941,c	;volatile
  3458                           
  3459                           ;CAN.c: 255:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  3460  00088A  0E66               	movlw	102
  3461  00088C  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3462  00088E  0E0F               	movlw	15
  3463  000890  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3464  000892  0E08               	movlw	8
  3465  000894  240B               	addwf	CAN_SendFrame@message,w,c
  3466  000896  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3467  000898  0E00               	movlw	0
  3468  00089A  200C               	addwfc	CAN_SendFrame@message+1,w,c
  3469  00089C  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3470  00089E  ECC6  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3471  0008A2                     l2656:
  3472                           
  3473                           ;CAN.c: 258:     RXB0CONbits.FILHIT3 = 1;
  3474  0008A2  8660               	bsf	3936,3,c	;volatile
  3475                           
  3476                           ;CAN.c: 260:     DetectorLedRadar.Flags.ramkaTx = 1;
  3477  0008A4  883F               	bsf	_DetectorLedRadar,4,c
  3478  0008A6  0012               	return		;funcret
  3479  0008A8                     __end_of_CAN_SendFrame:
  3480                           	opt callstack 0
  3481                           
  3482 ;; *************** function _CAN_GenID *****************
  3483 ;; Defined at:
  3484 ;;		line 408 in file "CAN.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  message         2    5[COMRAM] PTR struct .
  3487 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3488 ;;  frameID         1    7[COMRAM] unsigned char 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3500 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;Total ram usage:        7 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    3
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_FRAME_HandleCanFrame
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text30
  3515  000C60                     __ptext30:
  3516                           	opt callstack 0
  3517  000C60                     _CAN_GenID:
  3518                           	opt callstack 25
  3519                           
  3520                           ;CAN.c: 408: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 409: {;CAN.c: 411:     m
      +                          essage->frame_type = 0x03;
  3521                           
  3522                           ;incstack = 0
  3523  000C60  EE20 F002          	lfsr	2,2
  3524  000C64  5006               	movf	CAN_GenID@message,w,c
  3525  000C66  26D9               	addwf	fsr2l,f,c
  3526  000C68  5007               	movf	CAN_GenID@message+1,w,c
  3527  000C6A  22DA               	addwfc	fsr2h,f,c
  3528  000C6C  0E03               	movlw	3
  3529  000C6E  6EDF               	movwf	indf2,c
  3530                           
  3531                           ;CAN.c: 412:     message->message_type = 0x01;
  3532  000C70  EE20 F001          	lfsr	2,1
  3533  000C74  5006               	movf	CAN_GenID@message,w,c
  3534  000C76  26D9               	addwf	fsr2l,f,c
  3535  000C78  5007               	movf	CAN_GenID@message+1,w,c
  3536  000C7A  22DA               	addwfc	fsr2h,f,c
  3537  000C7C  0E01               	movlw	1
  3538  000C7E  6EDF               	movwf	indf2,c
  3539                           
  3540                           ;CAN.c: 413:     message->id.w[1] = (WORD)frameID * (WORD)4;
  3541  000C80  5008               	movf	CAN_GenID@frameID,w,c
  3542  000C82  6E09               	movwf	??_CAN_GenID& (0+255),c
  3543  000C84  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  3544  000C86  90D8               	bcf	status,0,c
  3545  000C88  3609               	rlcf	??_CAN_GenID,f,c
  3546  000C8A  360A               	rlcf	??_CAN_GenID+1,f,c
  3547  000C8C  90D8               	bcf	status,0,c
  3548  000C8E  3609               	rlcf	??_CAN_GenID,f,c
  3549  000C90  360A               	rlcf	??_CAN_GenID+1,f,c
  3550  000C92  EE20 F006          	lfsr	2,6
  3551  000C96  5006               	movf	CAN_GenID@message,w,c
  3552  000C98  26D9               	addwf	fsr2l,f,c
  3553  000C9A  5007               	movf	CAN_GenID@message+1,w,c
  3554  000C9C  22DA               	addwfc	fsr2h,f,c
  3555  000C9E  C009  FFDE         	movff	??_CAN_GenID,postinc2
  3556  000CA2  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  3557                           
  3558                           ;CAN.c: 414:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  3559  000CA6  0E2C               	movlw	44
  3560  000CA8  6E09               	movwf	??_CAN_GenID& (0+255),c
  3561  000CAA  0E01               	movlw	1
  3562  000CAC  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  3563  000CAE  EE20  F03D         	lfsr	2,_DaneCan+2
  3564  000CB2  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  3565  000CB6  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  3566  000CBA  5009               	movf	??_CAN_GenID,w,c
  3567  000CBC  260B               	addwf	??_CAN_GenID+2,f,c
  3568  000CBE  500A               	movf	??_CAN_GenID+1,w,c
  3569  000CC0  220C               	addwfc	??_CAN_GenID+3,f,c
  3570  000CC2  EE20 F004          	lfsr	2,4
  3571  000CC6  5006               	movf	CAN_GenID@message,w,c
  3572  000CC8  26D9               	addwf	fsr2l,f,c
  3573  000CCA  5007               	movf	CAN_GenID@message+1,w,c
  3574  000CCC  22DA               	addwfc	fsr2h,f,c
  3575  000CCE  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  3576  000CD2  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  3577                           
  3578                           ;CAN.c: 415:     message->id.v[2] |= 0x01;
  3579  000CD6  EE20 F006          	lfsr	2,6
  3580  000CDA  5006               	movf	CAN_GenID@message,w,c
  3581  000CDC  26D9               	addwf	fsr2l,f,c
  3582  000CDE  5007               	movf	CAN_GenID@message+1,w,c
  3583  000CE0  22DA               	addwfc	fsr2h,f,c
  3584  000CE2  0E00               	movlw	0
  3585  000CE4  80DB               	bsf	plusw2,0,c
  3586                           
  3587                           ;CAN.c: 417:     message ->id.bits.b16 = 0;
  3588  000CE6  EE20 F006          	lfsr	2,6
  3589  000CEA  5006               	movf	CAN_GenID@message,w,c
  3590  000CEC  26D9               	addwf	fsr2l,f,c
  3591  000CEE  5007               	movf	CAN_GenID@message+1,w,c
  3592  000CF0  22DA               	addwfc	fsr2h,f,c
  3593  000CF2  90DF               	bcf	indf2,0,c
  3594                           
  3595                           ;CAN.c: 418:     message ->id.bits.b17 = 0;
  3596  000CF4  EE20 F006          	lfsr	2,6
  3597  000CF8  5006               	movf	CAN_GenID@message,w,c
  3598  000CFA  26D9               	addwf	fsr2l,f,c
  3599  000CFC  5007               	movf	CAN_GenID@message+1,w,c
  3600  000CFE  22DA               	addwfc	fsr2h,f,c
  3601  000D00  92DF               	bcf	indf2,1,c
  3602  000D02  0012               	return		;funcret
  3603  000D04                     __end_of_CAN_GenID:
  3604                           	opt callstack 0
  3605                           
  3606 ;; *************** function _CAN_TakeFrame *****************
  3607 ;; Defined at:
  3608 ;;		line 269 in file "CAN.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  message         2   13[COMRAM] PTR struct .
  3611 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  a               2    0        int 
  3614 ;;  op_id           2   19[COMRAM] unsigned int 
  3615 ;;  k               1   22[COMRAM] unsigned char 
  3616 ;;  tempCON         1   21[COMRAM] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      enum E10433
  3619 ;; Registers used:
  3620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;Total ram usage:       10 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    4
  3633 ;; This function calls:
  3634 ;;		_CAN_MoveBuffIntoFrame
  3635 ;;		___awdiv
  3636 ;; This function is called by:
  3637 ;;		_TRM_DataTransmition
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text31
  3642  000060                     __ptext31:
  3643                           	opt callstack 0
  3644  000060                     _CAN_TakeFrame:
  3645                           	opt callstack 25
  3646                           
  3647                           ;CAN.c: 269: BOOL CAN_TakeFrame(mID * message);CAN.c: 270: {;CAN.c: 271:     BYTE k, tem
      +                          pCON;;CAN.c: 273:     k = CANCON&0x0F;
  3648                           
  3649                           ;incstack = 0
  3650  000060  506F               	movf	3951,w,c	;volatile
  3651  000062  0B0F               	andlw	15
  3652  000064  6E17               	movwf	CAN_TakeFrame@k,c
  3653                           
  3654                           ;CAN.c: 275:     ECANCON = 0x90 | k;
  3655  000066  5017               	movf	CAN_TakeFrame@k,w,c
  3656  000068  0990               	iorlw	144
  3657  00006A  6E77               	movwf	3959,c	;volatile
  3658                           
  3659                           ;CAN.c: 278:     switch(k)
  3660  00006C  D018               	goto	l2880
  3661  00006E                     l216:
  3662                           
  3663                           ;CAN.c: 281:             tempCON = RXB0CON;
  3664  00006E  CF60 F016          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  3665                           
  3666                           ;CAN.c: 282:             break;
  3667  000072  D035               	goto	l217
  3668  000074                     l218:
  3669                           
  3670                           ;CAN.c: 284:             tempCON = RXB1CON;
  3671  000074  CF50 F016          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  3672                           
  3673                           ;CAN.c: 285:             break;
  3674  000078  D032               	goto	l217
  3675  00007A                     l219:
  3676                           
  3677                           ;CAN.c: 287:             tempCON = B0CON;
  3678  00007A  CE20 F016          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  3679                           
  3680                           ;CAN.c: 288:             break;
  3681  00007E  D02F               	goto	l217
  3682  000080                     l220:
  3683                           
  3684                           ;CAN.c: 290:             tempCON = B1CON;
  3685  000080  CE30 F016          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  3686                           
  3687                           ;CAN.c: 291:             break;
  3688  000084  D02C               	goto	l217
  3689  000086                     l221:
  3690                           
  3691                           ;CAN.c: 293:             tempCON = B2CON;
  3692  000086  CE40 F016          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  3693                           
  3694                           ;CAN.c: 294:             break;
  3695  00008A  D029               	goto	l217
  3696  00008C                     l222:
  3697                           
  3698                           ;CAN.c: 296:             tempCON = B3CON;
  3699  00008C  CE50 F016          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  3700                           
  3701                           ;CAN.c: 297:             break;
  3702  000090  D026               	goto	l217
  3703  000092                     l223:
  3704                           
  3705                           ;CAN.c: 299:             tempCON = B4CON;
  3706  000092  CE60 F016          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  3707                           
  3708                           ;CAN.c: 300:             break;
  3709  000096  D023               	goto	l217
  3710  000098                     l224:
  3711                           
  3712                           ;CAN.c: 302:             tempCON = B5CON;
  3713  000098  CE70 F016          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  3714                           
  3715                           ;CAN.c: 303:             break;
  3716  00009C  D020               	goto	l217
  3717  00009E                     l2880:
  3718  00009E  5017               	movf	CAN_TakeFrame@k,w,c
  3719  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3720  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3721                           
  3722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3723                           ; Switch size 1, requested type "simple"
  3724                           ; Number of cases is 1, Range of values is 0 to 0
  3725                           ; switch strategies available:
  3726                           ; Name         Instructions Cycles
  3727                           ; simple_byte            4     3 (average)
  3728                           ;	Chosen strategy is simple_byte
  3729  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  3730  0000A6  0A00               	xorlw	0	; case 0
  3731  0000A8  A4D8               	btfss	status,2,c
  3732  0000AA  D019               	goto	l217
  3733                           
  3734                           ; Switch size 1, requested type "simple"
  3735                           ; Number of cases is 8, Range of values is 0 to 7
  3736                           ; switch strategies available:
  3737                           ; Name         Instructions Cycles
  3738                           ; simple_byte           25    13 (average)
  3739                           ;	Chosen strategy is simple_byte
  3740  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  3741  0000AE  0A00               	xorlw	0	; case 0
  3742  0000B0  B4D8               	btfsc	status,2,c
  3743  0000B2  D7DD               	goto	l216
  3744  0000B4  0A01               	xorlw	1	; case 1
  3745  0000B6  B4D8               	btfsc	status,2,c
  3746  0000B8  D7DD               	goto	l218
  3747  0000BA  0A03               	xorlw	3	; case 2
  3748  0000BC  B4D8               	btfsc	status,2,c
  3749  0000BE  D7DD               	goto	l219
  3750  0000C0  0A01               	xorlw	1	; case 3
  3751  0000C2  B4D8               	btfsc	status,2,c
  3752  0000C4  D7DD               	goto	l220
  3753  0000C6  0A07               	xorlw	7	; case 4
  3754  0000C8  B4D8               	btfsc	status,2,c
  3755  0000CA  D7DD               	goto	l221
  3756  0000CC  0A01               	xorlw	1	; case 5
  3757  0000CE  B4D8               	btfsc	status,2,c
  3758  0000D0  D7DD               	goto	l222
  3759  0000D2  0A03               	xorlw	3	; case 6
  3760  0000D4  B4D8               	btfsc	status,2,c
  3761  0000D6  D7DD               	goto	l223
  3762  0000D8  0A01               	xorlw	1	; case 7
  3763  0000DA  B4D8               	btfsc	status,2,c
  3764  0000DC  D7DD               	goto	l224
  3765  0000DE                     l217:
  3766                           
  3767                           ;CAN.c: 307:     if((tempCON & 0x80) > 0)
  3768  0000DE  AE16               	btfss	CAN_TakeFrame@tempCON,7,c
  3769  0000E0  D0AD               	goto	l2922
  3770                           
  3771                           ;CAN.c: 308:     {;CAN.c: 309:         message->buffer = RXB0CON & 0x1F;
  3772  0000E2  EE20 F003          	lfsr	2,3
  3773  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  3774  0000E8  26D9               	addwf	fsr2l,f,c
  3775  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  3776  0000EC  22DA               	addwfc	fsr2h,f,c
  3777  0000EE  5060               	movf	3936,w,c	;volatile
  3778  0000F0  0B1F               	andlw	31
  3779  0000F2  6EDF               	movwf	indf2,c
  3780                           
  3781                           ;CAN.c: 310:         message->id.v[0] = RXB0EIDL;
  3782  0000F4  EE20 F004          	lfsr	2,4
  3783  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  3784  0000FA  26D9               	addwf	fsr2l,f,c
  3785  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  3786  0000FE  22DA               	addwfc	fsr2h,f,c
  3787  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  3788                           
  3789                           ;CAN.c: 311:         message->id.v[1] = RXB0EIDH;
  3790  000104  EE20 F005          	lfsr	2,5
  3791  000108  500E               	movf	CAN_TakeFrame@message,w,c
  3792  00010A  26D9               	addwf	fsr2l,f,c
  3793  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  3794  00010E  22DA               	addwfc	fsr2h,f,c
  3795  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  3796                           
  3797                           ;CAN.c: 312:         UINT op_id = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  3798  000114  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  3799  000118  6A07               	clrf	___awdiv@dividend+1,c
  3800  00011A  0E00               	movlw	0
  3801  00011C  6E09               	movwf	___awdiv@divisor+1,c
  3802  00011E  0E08               	movlw	8
  3803  000120  6E08               	movwf	___awdiv@divisor,c
  3804  000122  ECD2  F006         	call	___awdiv	;wreg free
  3805  000126  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  3806  00012A  0E03               	movlw	3
  3807  00012C  1610               	andwf	??_CAN_TakeFrame,f,c
  3808  00012E  5010               	movf	??_CAN_TakeFrame,w,c
  3809  000130  1006               	iorwf	?___awdiv,w,c
  3810  000132  6E14               	movwf	CAN_TakeFrame@op_id,c
  3811  000134  5007               	movf	?___awdiv+1,w,c
  3812  000136  6E15               	movwf	CAN_TakeFrame@op_id+1,c
  3813                           
  3814                           ;CAN.c: 313:         message->id.v[2] = op_id;
  3815  000138  EE20 F006          	lfsr	2,6
  3816  00013C  500E               	movf	CAN_TakeFrame@message,w,c
  3817  00013E  26D9               	addwf	fsr2l,f,c
  3818  000140  500F               	movf	CAN_TakeFrame@message+1,w,c
  3819  000142  22DA               	addwfc	fsr2h,f,c
  3820  000144  C014  FFDF         	movff	CAN_TakeFrame@op_id,indf2
  3821                           
  3822                           ;CAN.c: 314:         if(op_id>0x0008){
  3823  000148  5015               	movf	CAN_TakeFrame@op_id+1,w,c
  3824  00014A  E102               	bnz	u1420
  3825  00014C  0E09               	movlw	9
  3826  00014E  5C14               	subwf	CAN_TakeFrame@op_id,w,c
  3827  000150                     u1420:
  3828                           
  3829                           ;CAN.c: 317:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  3830  000150  5061               	movf	3937,w,c	;volatile
  3831  000152  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3832  000154  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3833  000156  0E05               	movlw	5
  3834  000158                     u1435:
  3835  000158  90D8               	bcf	status,0,c
  3836  00015A  3610               	rlcf	??_CAN_TakeFrame,f,c
  3837  00015C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  3838  00015E  2EE8               	decfsz	wreg,f,c
  3839  000160  D7FB               	goto	u1435
  3840  000162  EE20 F006          	lfsr	2,6
  3841  000166  500E               	movf	CAN_TakeFrame@message,w,c
  3842  000168  26D9               	addwf	fsr2l,f,c
  3843  00016A  500F               	movf	CAN_TakeFrame@message+1,w,c
  3844  00016C  22DA               	addwfc	fsr2h,f,c
  3845  00016E  5010               	movf	??_CAN_TakeFrame,w,c
  3846  000170  12DE               	iorwf	postinc2,f,c
  3847  000172  5011               	movf	??_CAN_TakeFrame+1,w,c
  3848  000174  12DD               	iorwf	postdec2,f,c
  3849                           
  3850                           ;CAN.c: 318:         message->frame_type=0x03;
  3851  000176  EE20 F002          	lfsr	2,2
  3852  00017A  500E               	movf	CAN_TakeFrame@message,w,c
  3853  00017C  26D9               	addwf	fsr2l,f,c
  3854  00017E  500F               	movf	CAN_TakeFrame@message+1,w,c
  3855  000180  22DA               	addwfc	fsr2h,f,c
  3856  000182  0E03               	movlw	3
  3857  000184  6EDF               	movwf	indf2,c
  3858                           
  3859                           ;CAN.c: 322:         if(RXB0DLCbits.RXRTR == 0)
  3860  000186  BC65               	btfsc	3941,6,c	;volatile
  3861  000188  D068               	goto	l2928
  3862                           
  3863                           ;CAN.c: 323:         {;CAN.c: 324:             message->message_type = 0x01;
  3864  00018A  EE20 F001          	lfsr	2,1
  3865  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  3866  000190  26D9               	addwf	fsr2l,f,c
  3867  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  3868  000194  22DA               	addwfc	fsr2h,f,c
  3869  000196  0E01               	movlw	1
  3870  000198  6EDF               	movwf	indf2,c
  3871                           
  3872                           ;CAN.c: 325:             message->data_length= RXB0DLC & 0x0F;
  3873  00019A  EE20 F010          	lfsr	2,16
  3874  00019E  500E               	movf	CAN_TakeFrame@message,w,c
  3875  0001A0  26D9               	addwf	fsr2l,f,c
  3876  0001A2  500F               	movf	CAN_TakeFrame@message+1,w,c
  3877  0001A4  22DA               	addwfc	fsr2h,f,c
  3878  0001A6  5065               	movf	3941,w,c	;volatile
  3879  0001A8  0B0F               	andlw	15
  3880  0001AA  6EDF               	movwf	indf2,c
  3881                           
  3882                           ;CAN.c: 326:             if(message->data_length > 8)
  3883  0001AC  EE20 F010          	lfsr	2,16
  3884  0001B0  500E               	movf	CAN_TakeFrame@message,w,c
  3885  0001B2  26D9               	addwf	fsr2l,f,c
  3886  0001B4  500F               	movf	CAN_TakeFrame@message+1,w,c
  3887  0001B6  22DA               	addwfc	fsr2h,f,c
  3888  0001B8  0E08               	movlw	8
  3889  0001BA  64DF               	cpfsgt	indf2,c
  3890  0001BC  D041               	goto	l2926
  3891  0001BE  D01E               	goto	l2920
  3892  0001C0                     l2902:
  3893                           
  3894                           ;CAN.c: 332:                         RXB0CON = 0;
  3895  0001C0  0E00               	movlw	0
  3896  0001C2  6E60               	movwf	3936,c	;volatile
  3897                           
  3898                           ;CAN.c: 333:                         break;
  3899  0001C4  D03B               	goto	l2922
  3900  0001C6                     l2904:
  3901                           
  3902                           ;CAN.c: 335:                         RXB1CON = 0;
  3903  0001C6  0E00               	movlw	0
  3904  0001C8  010F               	movlb	15	; () banked
  3905  0001CA  D00E               	goto	L1
  3906  0001CC                     l2906:
  3907                           
  3908                           ;CAN.c: 338:                         B0CON = 0;
  3909  0001CC  0E00               	movlw	0
  3910  0001CE  010E               	movlb	14	; () banked
  3911  0001D0  6F20               	movwf	32,b	;volatile
  3912                           
  3913                           ;CAN.c: 339:                         break;
  3914  0001D2  D034               	goto	l2922
  3915  0001D4                     l2908:
  3916                           
  3917                           ;CAN.c: 341:                         B1CON = 0;
  3918  0001D4  0E00               	movlw	0
  3919  0001D6  010E               	movlb	14	; () banked
  3920  0001D8  6F30               	movwf	48,b	;volatile
  3921                           
  3922                           ;CAN.c: 342:                         break;
  3923  0001DA  D030               	goto	l2922
  3924  0001DC                     l2910:
  3925                           
  3926                           ;CAN.c: 344:                         B2CON = 0;
  3927  0001DC  0E00               	movlw	0
  3928  0001DE  010E               	movlb	14	; () banked
  3929  0001E0  6F40               	movwf	64,b	;volatile
  3930                           
  3931                           ;CAN.c: 345:                         break;
  3932  0001E2  D02C               	goto	l2922
  3933  0001E4                     l2912:
  3934                           
  3935                           ;CAN.c: 347:                         B3CON = 0;
  3936  0001E4  0E00               	movlw	0
  3937  0001E6  010E               	movlb	14	; () banked
  3938  0001E8                     L1:
  3939  0001E8  6F50               	movwf	80,b	;volatile
  3940                           
  3941                           ;CAN.c: 348:                         break;
  3942  0001EA  D028               	goto	l2922
  3943  0001EC                     l2914:
  3944                           
  3945                           ;CAN.c: 350:                         B4CON = 0;
  3946  0001EC  0E00               	movlw	0
  3947  0001EE  010E               	movlb	14	; () banked
  3948  0001F0  6F60               	movwf	96,b	;volatile
  3949                           
  3950                           ;CAN.c: 351:                         break;
  3951  0001F2  D024               	goto	l2922
  3952  0001F4                     l2916:
  3953                           
  3954                           ;CAN.c: 353:                         B5CON = 0;
  3955  0001F4  0E00               	movlw	0
  3956  0001F6  010E               	movlb	14	; () banked
  3957  0001F8  6F70               	movwf	112,b	;volatile
  3958                           
  3959                           ;CAN.c: 354:                         break;
  3960  0001FA  D020               	goto	l2922
  3961  0001FC                     l2920:
  3962  0001FC  5017               	movf	CAN_TakeFrame@k,w,c
  3963  0001FE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3964  000200  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3965                           
  3966                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3967                           ; Switch size 1, requested type "simple"
  3968                           ; Number of cases is 1, Range of values is 0 to 0
  3969                           ; switch strategies available:
  3970                           ; Name         Instructions Cycles
  3971                           ; simple_byte            4     3 (average)
  3972                           ;	Chosen strategy is simple_byte
  3973  000202  5011               	movf	??_CAN_TakeFrame+1,w,c
  3974  000204  0A00               	xorlw	0	; case 0
  3975  000206  A4D8               	btfss	status,2,c
  3976  000208  D019               	goto	l2922
  3977                           
  3978                           ; Switch size 1, requested type "simple"
  3979                           ; Number of cases is 8, Range of values is 0 to 7
  3980                           ; switch strategies available:
  3981                           ; Name         Instructions Cycles
  3982                           ; simple_byte           25    13 (average)
  3983                           ;	Chosen strategy is simple_byte
  3984  00020A  5010               	movf	??_CAN_TakeFrame,w,c
  3985  00020C  0A00               	xorlw	0	; case 0
  3986  00020E  B4D8               	btfsc	status,2,c
  3987  000210  D7D7               	goto	l2902
  3988  000212  0A01               	xorlw	1	; case 1
  3989  000214  B4D8               	btfsc	status,2,c
  3990  000216  D7D7               	goto	l2904
  3991  000218  0A03               	xorlw	3	; case 2
  3992  00021A  B4D8               	btfsc	status,2,c
  3993  00021C  D7D7               	goto	l2906
  3994  00021E  0A01               	xorlw	1	; case 3
  3995  000220  B4D8               	btfsc	status,2,c
  3996  000222  D7D8               	goto	l2908
  3997  000224  0A07               	xorlw	7	; case 4
  3998  000226  B4D8               	btfsc	status,2,c
  3999  000228  D7D9               	goto	l2910
  4000  00022A  0A01               	xorlw	1	; case 5
  4001  00022C  B4D8               	btfsc	status,2,c
  4002  00022E  D7DA               	goto	l2912
  4003  000230  0A03               	xorlw	3	; case 6
  4004  000232  B4D8               	btfsc	status,2,c
  4005  000234  D7DB               	goto	l2914
  4006  000236  0A01               	xorlw	1	; case 7
  4007  000238  B4D8               	btfsc	status,2,c
  4008  00023A  D7DC               	goto	l2916
  4009  00023C                     l2922:
  4010                           
  4011                           ;CAN.c: 356:                 return FALSE;
  4012  00023C  0E00               	movlw	0
  4013  00023E  0012               	return	
  4014  000240                     l2926:
  4015                           
  4016                           ;CAN.c: 358:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4017  000240  0E08               	movlw	8
  4018  000242  240E               	addwf	CAN_TakeFrame@message,w,c
  4019  000244  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4020  000246  0E00               	movlw	0
  4021  000248  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4022  00024A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4023  00024C  0E66               	movlw	102
  4024  00024E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4025  000250  0E0F               	movlw	15
  4026  000252  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4027  000254  ECC6  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4028                           
  4029                           ;CAN.c: 359:         }
  4030  000258  D027               	goto	l2948
  4031  00025A                     l2928:
  4032                           
  4033                           ;CAN.c: 362:         {;CAN.c: 363:             message->message_type=0x02;
  4034  00025A  EE20 F001          	lfsr	2,1
  4035  00025E  500E               	movf	CAN_TakeFrame@message,w,c
  4036  000260  26D9               	addwf	fsr2l,f,c
  4037  000262  500F               	movf	CAN_TakeFrame@message+1,w,c
  4038  000264  22DA               	addwfc	fsr2h,f,c
  4039  000266  0E02               	movlw	2
  4040  000268  6EDF               	movwf	indf2,c
  4041  00026A  D01E               	goto	l2948
  4042  00026C                     l2930:
  4043                           
  4044                           ;CAN.c: 369:                 RXB0CON = 0;
  4045  00026C  0E00               	movlw	0
  4046  00026E  6E60               	movwf	3936,c	;volatile
  4047                           
  4048                           ;CAN.c: 370:                 break;
  4049  000270  D03B               	goto	l2950
  4050  000272                     l2932:
  4051                           
  4052                           ;CAN.c: 372:                 RXB1CON = 0;
  4053  000272  0E00               	movlw	0
  4054  000274  010F               	movlb	15	; () banked
  4055  000276  D00E               	goto	L2
  4056  000278                     l2934:
  4057                           
  4058                           ;CAN.c: 375:                 B0CON = 0;
  4059  000278  0E00               	movlw	0
  4060  00027A  010E               	movlb	14	; () banked
  4061  00027C  6F20               	movwf	32,b	;volatile
  4062                           
  4063                           ;CAN.c: 376:                 break;
  4064  00027E  D034               	goto	l2950
  4065  000280                     l2936:
  4066                           
  4067                           ;CAN.c: 378:                 B1CON = 0;
  4068  000280  0E00               	movlw	0
  4069  000282  010E               	movlb	14	; () banked
  4070  000284  6F30               	movwf	48,b	;volatile
  4071                           
  4072                           ;CAN.c: 379:                 break;
  4073  000286  D030               	goto	l2950
  4074  000288                     l2938:
  4075                           
  4076                           ;CAN.c: 381:                 B2CON = 0;
  4077  000288  0E00               	movlw	0
  4078  00028A  010E               	movlb	14	; () banked
  4079  00028C  6F40               	movwf	64,b	;volatile
  4080                           
  4081                           ;CAN.c: 382:                 break;
  4082  00028E  D02C               	goto	l2950
  4083  000290                     l2940:
  4084                           
  4085                           ;CAN.c: 384:                 B3CON = 0;
  4086  000290  0E00               	movlw	0
  4087  000292  010E               	movlb	14	; () banked
  4088  000294                     L2:
  4089  000294  6F50               	movwf	80,b	;volatile
  4090                           
  4091                           ;CAN.c: 385:                 break;
  4092  000296  D028               	goto	l2950
  4093  000298                     l2942:
  4094                           
  4095                           ;CAN.c: 387:                 B4CON = 0;
  4096  000298  0E00               	movlw	0
  4097  00029A  010E               	movlb	14	; () banked
  4098  00029C  6F60               	movwf	96,b	;volatile
  4099                           
  4100                           ;CAN.c: 388:                 break;
  4101  00029E  D024               	goto	l2950
  4102  0002A0                     l2944:
  4103                           
  4104                           ;CAN.c: 390:                 B5CON = 0;
  4105  0002A0  0E00               	movlw	0
  4106  0002A2  010E               	movlb	14	; () banked
  4107  0002A4  6F70               	movwf	112,b	;volatile
  4108                           
  4109                           ;CAN.c: 391:                 break;
  4110  0002A6  D020               	goto	l2950
  4111  0002A8                     l2948:
  4112  0002A8  5017               	movf	CAN_TakeFrame@k,w,c
  4113  0002AA  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4114  0002AC  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4115                           
  4116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4117                           ; Switch size 1, requested type "simple"
  4118                           ; Number of cases is 1, Range of values is 0 to 0
  4119                           ; switch strategies available:
  4120                           ; Name         Instructions Cycles
  4121                           ; simple_byte            4     3 (average)
  4122                           ;	Chosen strategy is simple_byte
  4123  0002AE  5011               	movf	??_CAN_TakeFrame+1,w,c
  4124  0002B0  0A00               	xorlw	0	; case 0
  4125  0002B2  A4D8               	btfss	status,2,c
  4126  0002B4  D019               	goto	l2950
  4127                           
  4128                           ; Switch size 1, requested type "simple"
  4129                           ; Number of cases is 8, Range of values is 0 to 7
  4130                           ; switch strategies available:
  4131                           ; Name         Instructions Cycles
  4132                           ; simple_byte           25    13 (average)
  4133                           ;	Chosen strategy is simple_byte
  4134  0002B6  5010               	movf	??_CAN_TakeFrame,w,c
  4135  0002B8  0A00               	xorlw	0	; case 0
  4136  0002BA  B4D8               	btfsc	status,2,c
  4137  0002BC  D7D7               	goto	l2930
  4138  0002BE  0A01               	xorlw	1	; case 1
  4139  0002C0  B4D8               	btfsc	status,2,c
  4140  0002C2  D7D7               	goto	l2932
  4141  0002C4  0A03               	xorlw	3	; case 2
  4142  0002C6  B4D8               	btfsc	status,2,c
  4143  0002C8  D7D7               	goto	l2934
  4144  0002CA  0A01               	xorlw	1	; case 3
  4145  0002CC  B4D8               	btfsc	status,2,c
  4146  0002CE  D7D8               	goto	l2936
  4147  0002D0  0A07               	xorlw	7	; case 4
  4148  0002D2  B4D8               	btfsc	status,2,c
  4149  0002D4  D7D9               	goto	l2938
  4150  0002D6  0A01               	xorlw	1	; case 5
  4151  0002D8  B4D8               	btfsc	status,2,c
  4152  0002DA  D7DA               	goto	l2940
  4153  0002DC  0A03               	xorlw	3	; case 6
  4154  0002DE  B4D8               	btfsc	status,2,c
  4155  0002E0  D7DB               	goto	l2942
  4156  0002E2  0A01               	xorlw	1	; case 7
  4157  0002E4  B4D8               	btfsc	status,2,c
  4158  0002E6  D7DC               	goto	l2944
  4159  0002E8                     l2950:
  4160                           
  4161                           ;CAN.c: 393:         return TRUE;
  4162  0002E8  0E01               	movlw	1
  4163  0002EA  0012               	return		;funcret
  4164  0002EC                     __end_of_CAN_TakeFrame:
  4165                           	opt callstack 0
  4166                           
  4167 ;; *************** function ___awdiv *****************
  4168 ;; Defined at:
  4169 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  dividend        2    5[COMRAM] int 
  4172 ;;  divisor         2    7[COMRAM] int 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  quotient        2   11[COMRAM] int 
  4175 ;;  sign            1   10[COMRAM] unsigned char 
  4176 ;;  counter         1    9[COMRAM] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  2    5[COMRAM] int 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;Total ram usage:        8 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    3
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_CAN_TakeFrame
  4197 ;;		_FRAME_HandleCanFrame
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text32
  4202  000DA4                     __ptext32:
  4203                           	opt callstack 0
  4204  000DA4                     ___awdiv:
  4205                           	opt callstack 25
  4206                           
  4207                           ;incstack = 0
  4208  000DA4  0E00               	movlw	0
  4209  000DA6  6E0B               	movwf	___awdiv@sign,c
  4210  000DA8  AE09               	btfss	___awdiv@divisor+1,7,c
  4211  000DAA  D006               	goto	l2822
  4212  000DAC  6C08               	negf	___awdiv@divisor,c
  4213  000DAE  1E09               	comf	___awdiv@divisor+1,f,c
  4214  000DB0  B0D8               	btfsc	status,0,c
  4215  000DB2  2A09               	incf	___awdiv@divisor+1,f,c
  4216  000DB4  0E01               	movlw	1
  4217  000DB6  6E0B               	movwf	___awdiv@sign,c
  4218  000DB8                     l2822:
  4219  000DB8  AE07               	btfss	___awdiv@dividend+1,7,c
  4220  000DBA  D006               	goto	l2828
  4221  000DBC  6C06               	negf	___awdiv@dividend,c
  4222  000DBE  1E07               	comf	___awdiv@dividend+1,f,c
  4223  000DC0  B0D8               	btfsc	status,0,c
  4224  000DC2  2A07               	incf	___awdiv@dividend+1,f,c
  4225  000DC4  0E01               	movlw	1
  4226  000DC6  1A0B               	xorwf	___awdiv@sign,f,c
  4227  000DC8                     l2828:
  4228  000DC8  0E00               	movlw	0
  4229  000DCA  6E0D               	movwf	___awdiv@quotient+1,c
  4230  000DCC  0E00               	movlw	0
  4231  000DCE  6E0C               	movwf	___awdiv@quotient,c
  4232  000DD0  5008               	movf	___awdiv@divisor,w,c
  4233  000DD2  1009               	iorwf	___awdiv@divisor+1,w,c
  4234  000DD4  B4D8               	btfsc	status,2,c
  4235  000DD6  D01C               	goto	l2850
  4236  000DD8  0E01               	movlw	1
  4237  000DDA  6E0A               	movwf	___awdiv@counter,c
  4238  000DDC  D004               	goto	l2836
  4239  000DDE                     l2834:
  4240  000DDE  90D8               	bcf	status,0,c
  4241  000DE0  3608               	rlcf	___awdiv@divisor,f,c
  4242  000DE2  3609               	rlcf	___awdiv@divisor+1,f,c
  4243  000DE4  2A0A               	incf	___awdiv@counter,f,c
  4244  000DE6                     l2836:
  4245  000DE6  AE09               	btfss	___awdiv@divisor+1,7,c
  4246  000DE8  D7FA               	goto	l2834
  4247  000DEA                     u1360:
  4248  000DEA  90D8               	bcf	status,0,c
  4249  000DEC  360C               	rlcf	___awdiv@quotient,f,c
  4250  000DEE  360D               	rlcf	___awdiv@quotient+1,f,c
  4251  000DF0  5008               	movf	___awdiv@divisor,w,c
  4252  000DF2  5C06               	subwf	___awdiv@dividend,w,c
  4253  000DF4  5009               	movf	___awdiv@divisor+1,w,c
  4254  000DF6  5807               	subwfb	___awdiv@dividend+1,w,c
  4255  000DF8  A0D8               	btfss	status,0,c
  4256  000DFA  D005               	goto	l2846
  4257  000DFC  5008               	movf	___awdiv@divisor,w,c
  4258  000DFE  5E06               	subwf	___awdiv@dividend,f,c
  4259  000E00  5009               	movf	___awdiv@divisor+1,w,c
  4260  000E02  5A07               	subwfb	___awdiv@dividend+1,f,c
  4261  000E04  800C               	bsf	___awdiv@quotient,0,c
  4262  000E06                     l2846:
  4263  000E06  90D8               	bcf	status,0,c
  4264  000E08  3209               	rrcf	___awdiv@divisor+1,f,c
  4265  000E0A  3208               	rrcf	___awdiv@divisor,f,c
  4266  000E0C  2E0A               	decfsz	___awdiv@counter,f,c
  4267  000E0E  D7ED               	goto	u1360
  4268  000E10                     l2850:
  4269  000E10  500B               	movf	___awdiv@sign,w,c
  4270  000E12  B4D8               	btfsc	status,2,c
  4271  000E14  D004               	goto	l2854
  4272  000E16  6C0C               	negf	___awdiv@quotient,c
  4273  000E18  1E0D               	comf	___awdiv@quotient+1,f,c
  4274  000E1A  B0D8               	btfsc	status,0,c
  4275  000E1C  2A0D               	incf	___awdiv@quotient+1,f,c
  4276  000E1E                     l2854:
  4277  000E1E  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4278  000E22  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4279  000E26  0012               	return		;funcret
  4280  000E28                     __end_of___awdiv:
  4281                           	opt callstack 0
  4282                           
  4283 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4284 ;; Defined at:
  4285 ;;		line 191 in file "CAN.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4288 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4289 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4290 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  i               1    9[COMRAM] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;Total ram usage:        5 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    3
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_CAN_SendFrame
  4313 ;;		_CAN_TakeFrame
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text33
  4318  00138C                     __ptext33:
  4319                           	opt callstack 0
  4320  00138C                     _CAN_MoveBuffIntoFrame:
  4321                           	opt callstack 24
  4322                           
  4323                           ;CAN.c: 191: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 192: {;CAN.c
      +                          : 193:     BYTE i;;CAN.c: 194:     for(i=0; i<8; ++i)
  4324                           
  4325                           ;incstack = 0
  4326  00138C  0E00               	movlw	0
  4327  00138E  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4328  001390                     l2330:
  4329                           
  4330                           ;CAN.c: 195:     {;CAN.c: 196:         Ram[i]=(*(Buf+i));
  4331  001390  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4332  001392  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4333  001394  6ED9               	movwf	fsr2l,c
  4334  001396  0E00               	movlw	0
  4335  001398  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4336  00139A  6EDA               	movwf	fsr2h,c
  4337  00139C  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4338  00139E  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4339  0013A0  6EE1               	movwf	fsr1l,c
  4340  0013A2  0E00               	movlw	0
  4341  0013A4  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4342  0013A6  6EE2               	movwf	fsr1h,c
  4343  0013A8  CFDF FFE7          	movff	indf2,indf1
  4344                           
  4345                           ;CAN.c: 197:     }
  4346  0013AC  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4347  0013AE  0E07               	movlw	7
  4348  0013B0  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4349  0013B2  D7EE               	goto	l2330
  4350  0013B4  0012               	return	
  4351  0013B6                     __end_of_CAN_MoveBuffIntoFrame:
  4352                           	opt callstack 0
  4353                           
  4354 ;; *************** function _TMR1_Update_flag_Set *****************
  4355 ;; Defined at:
  4356 ;;		line 32 in file "TMR1.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  a               2    5[COMRAM] unsigned int 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		None
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;Total ram usage:        2 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    3
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text34
  4385  0014EE                     __ptext34:
  4386                           	opt callstack 0
  4387  0014EE                     _TMR1_Update_flag_Set:
  4388                           	opt callstack 27
  4389                           
  4390                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4391                           
  4392                           ;incstack = 0
  4393  0014EE  C006  F042         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4394  0014F2  C007  F043         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4395  0014F6  0012               	return		;funcret
  4396  0014F8                     __end_of_TMR1_Update_flag_Set:
  4397                           	opt callstack 0
  4398                           
  4399 ;; *************** function _TMR1_Update_flag_Get *****************
  4400 ;; Defined at:
  4401 ;;		line 47 in file "TMR1.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  2    5[COMRAM] unsigned int 
  4408 ;; Registers used:
  4409 ;;		None
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;Total ram usage:        2 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    3
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text35
  4430  0014F8                     __ptext35:
  4431                           	opt callstack 0
  4432  0014F8                     _TMR1_Update_flag_Get:
  4433                           	opt callstack 27
  4434                           
  4435                           ;TMR1.c: 49:     return TMR1_Update_flag;
  4436                           
  4437                           ;incstack = 0
  4438  0014F8  C042  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  4439  0014FC  C043  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  4440  001500  0012               	return		;funcret
  4441  001502                     __end_of_TMR1_Update_flag_Get:
  4442                           	opt callstack 0
  4443                           
  4444 ;; *************** function _LED_Update *****************
  4445 ;; Defined at:
  4446 ;;		line 105 in file "LED.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      unsigned char 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    5
  4467 ;; This function calls:
  4468 ;;		_LED_Control
  4469 ;;		_LED_Left
  4470 ;;		_LED_Light_Pos
  4471 ;;		_LED_Right
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text36
  4478  000E28                     __ptext36:
  4479                           	opt callstack 0
  4480  000E28                     _LED_Update:
  4481                           	opt callstack 25
  4482                           
  4483                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  4484                           
  4485                           ;incstack = 0
  4486  000E28  504A               	movf	_LOCK,w,c
  4487  000E2A  A4D8               	btfss	status,2,c
  4488  000E2C  D013               	goto	l3080
  4489                           
  4490                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  4491  000E2E  0E00               	movlw	0
  4492  000E30  6E07               	movwf	LED_Control@diode+1,c
  4493  000E32  0E00               	movlw	0
  4494  000E34  6E06               	movwf	LED_Control@diode,c
  4495  000E36  0E00               	movlw	0
  4496  000E38  EC54  F004         	call	_LED_Control
  4497                           
  4498                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  4499  000E3C  C04D  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  4500  000E40  C04E  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  4501  000E44  C051  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4502  000E48  C052  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4503  000E4C  5053               	movf	LED_Update@Green,w,c
  4504  000E4E  ECD8  F005         	call	_LED_Light_Pos
  4505                           
  4506                           ;LED.c: 117:     }
  4507  000E52  D012               	goto	l312
  4508  000E54                     l3080:
  4509                           
  4510                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  4511  000E54  0E00               	movlw	0
  4512  000E56  6E07               	movwf	LED_Control@diode+1,c
  4513  000E58  0E00               	movlw	0
  4514  000E5A  6E06               	movwf	LED_Control@diode,c
  4515  000E5C  5053               	movf	LED_Update@Green,w,c
  4516  000E5E  EC54  F004         	call	_LED_Control
  4517                           
  4518                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  4519  000E62  C04F  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  4520  000E66  C050  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  4521  000E6A  C051  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4522  000E6E  C052  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4523  000E72  0E00               	movlw	0
  4524  000E74  ECD8  F005         	call	_LED_Light_Pos
  4525  000E78                     l312:
  4526                           
  4527                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  4528  000E78  C04F  F006         	movff	LED_Update@pos1,LED_Right@a
  4529  000E7C  C050  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  4530  000E80  ECBD  F008         	call	_LED_Right	;wreg free
  4531  000E84  C006  F04F         	movff	?_LED_Right,LED_Update@pos1
  4532  000E88  C007  F050         	movff	?_LED_Right+1,LED_Update@pos1+1
  4533                           
  4534                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  4535  000E8C  C04D  F006         	movff	LED_Update@pos2,LED_Left@a
  4536  000E90  C04E  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  4537  000E94  EC08  F009         	call	_LED_Left	;wreg free
  4538  000E98  C006  F04D         	movff	?_LED_Left,LED_Update@pos2
  4539  000E9C  C007  F04E         	movff	?_LED_Left+1,LED_Update@pos2+1
  4540  000EA0  0012               	return		;funcret
  4541  000EA2                     __end_of_LED_Update:
  4542                           	opt callstack 0
  4543                           
  4544 ;; *************** function _LED_Light_Pos *****************
  4545 ;; Defined at:
  4546 ;;		line 196 in file "LED.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  color           1    wreg     enum E10644
  4549 ;;  pos             2   12[COMRAM] unsigned int 
  4550 ;;  fulfillment     2   14[COMRAM] unsigned int 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  color           1   16[COMRAM] enum E10644
  4553 ;;  flage           2   21[COMRAM] unsigned int 
  4554 ;;  pos2            2   19[COMRAM] unsigned int 
  4555 ;;  LED_array       2   17[COMRAM] unsigned int 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2   12[COMRAM] unsigned int 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;Total ram usage:       11 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    4
  4572 ;; This function calls:
  4573 ;;		_LED_Control
  4574 ;;		_LED_Left
  4575 ;;		_LED_Right
  4576 ;;		___lwdiv
  4577 ;; This function is called by:
  4578 ;;		_LED_Update
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text37
  4583  000BB0                     __ptext37:
  4584                           	opt callstack 0
  4585  000BB0                     _LED_Light_Pos:
  4586                           	opt callstack 25
  4587                           
  4588                           ;incstack = 0
  4589                           ;LED_Light_Pos@color stored from wreg
  4590  000BB0  6E11               	movwf	LED_Light_Pos@color,c
  4591                           
  4592                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  4593  000BB2  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  4594  000BB6  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  4595                           
  4596                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  4597  000BBA  0E00               	movlw	0
  4598  000BBC  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4599  000BBE  0E00               	movlw	0
  4600  000BC0  6E12               	movwf	LED_Light_Pos@LED_array,c
  4601                           
  4602                           ;LED.c: 200:     UINT flage = fulfillment/10;
  4603  000BC2  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  4604  000BC6  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  4605  000BCA  0E00               	movlw	0
  4606  000BCC  6E09               	movwf	___lwdiv@divisor+1,c
  4607  000BCE  0E0A               	movlw	10
  4608  000BD0  6E08               	movwf	___lwdiv@divisor,c
  4609  000BD2  EC46  F008         	call	___lwdiv	;wreg free
  4610  000BD6  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  4611  000BDA  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  4612                           
  4613                           ;LED.c: 201:     if(color == RED)
  4614  000BDE  5011               	movf	LED_Light_Pos@color,w,c
  4615  000BE0  B4D8               	btfsc	status,2,c
  4616  000BE2  D017               	goto	l2988
  4617  000BE4  D031               	goto	l2996
  4618  000BE6                     l2982:
  4619                           
  4620                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  4621  000BE6  5012               	movf	LED_Light_Pos@LED_array,w,c
  4622  000BE8  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4623  000BEA  6E12               	movwf	LED_Light_Pos@LED_array,c
  4624  000BEC  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4625  000BEE  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4626  000BF0  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4627                           
  4628                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  4629  000BF2  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  4630  000BF6  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  4631  000BFA  EC08  F009         	call	_LED_Left	;wreg free
  4632  000BFE  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  4633  000C02  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  4634                           
  4635                           ;LED.c: 207:             flage = flage - 1;
  4636  000C06  0EFF               	movlw	255
  4637  000C08  2416               	addwf	LED_Light_Pos@flage,w,c
  4638  000C0A  6E16               	movwf	LED_Light_Pos@flage,c
  4639  000C0C  0EFF               	movlw	255
  4640  000C0E  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4641  000C10  6E17               	movwf	LED_Light_Pos@flage+1,c
  4642  000C12                     l2988:
  4643                           
  4644                           ;LED.c: 203:         while(flage>0)
  4645  000C12  5016               	movf	LED_Light_Pos@flage,w,c
  4646  000C14  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4647  000C16  B4D8               	btfsc	status,2,c
  4648  000C18  D01B               	goto	u1480
  4649  000C1A  D7E5               	goto	l2982
  4650  000C1C                     l2990:
  4651                           
  4652                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  4653  000C1C  5012               	movf	LED_Light_Pos@LED_array,w,c
  4654  000C1E  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4655  000C20  6E12               	movwf	LED_Light_Pos@LED_array,c
  4656  000C22  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4657  000C24  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4658  000C26  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4659                           
  4660                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  4661  000C28  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  4662  000C2C  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  4663  000C30  ECBD  F008         	call	_LED_Right	;wreg free
  4664  000C34  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  4665  000C38  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  4666                           
  4667                           ;LED.c: 216:             flage = flage - 1;
  4668  000C3C  0EFF               	movlw	255
  4669  000C3E  2416               	addwf	LED_Light_Pos@flage,w,c
  4670  000C40  6E16               	movwf	LED_Light_Pos@flage,c
  4671  000C42  0EFF               	movlw	255
  4672  000C44  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4673  000C46  6E17               	movwf	LED_Light_Pos@flage+1,c
  4674  000C48                     l2996:
  4675                           
  4676                           ;LED.c: 212:         while(flage>0)
  4677  000C48  5016               	movf	LED_Light_Pos@flage,w,c
  4678  000C4A  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4679  000C4C  A4D8               	btfss	status,2,c
  4680  000C4E  D7E6               	goto	l2990
  4681  000C50                     u1480:
  4682                           
  4683                           ;LED.c: 219:     LED_Control(color, LED_array);
  4684  000C50  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  4685  000C54  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  4686  000C58  5011               	movf	LED_Light_Pos@color,w,c
  4687  000C5A  EC54  F004         	call	_LED_Control
  4688  000C5E  0012               	return		;funcret
  4689  000C60                     __end_of_LED_Light_Pos:
  4690                           	opt callstack 0
  4691                           
  4692 ;; *************** function ___lwdiv *****************
  4693 ;; Defined at:
  4694 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  dividend        2    5[COMRAM] unsigned int 
  4697 ;;  divisor         2    7[COMRAM] unsigned int 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  quotient        2    9[COMRAM] unsigned int 
  4700 ;;  counter         1   11[COMRAM] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  2    5[COMRAM] unsigned int 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;Total ram usage:        7 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    3
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_LED_Light_Pos
  4721 ;;		_FRAME_Plot
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text38
  4726  00108C                     __ptext38:
  4727                           	opt callstack 0
  4728  00108C                     ___lwdiv:
  4729                           	opt callstack 24
  4730                           
  4731                           ;incstack = 0
  4732  00108C  0E00               	movlw	0
  4733  00108E  6E0B               	movwf	___lwdiv@quotient+1,c
  4734  001090  0E00               	movlw	0
  4735  001092  6E0A               	movwf	___lwdiv@quotient,c
  4736  001094  5008               	movf	___lwdiv@divisor,w,c
  4737  001096  1009               	iorwf	___lwdiv@divisor+1,w,c
  4738  001098  B4D8               	btfsc	status,2,c
  4739  00109A  D01C               	goto	l1188
  4740  00109C  0E01               	movlw	1
  4741  00109E  6E0C               	movwf	___lwdiv@counter,c
  4742  0010A0  D004               	goto	l2534
  4743  0010A2                     l2532:
  4744  0010A2  90D8               	bcf	status,0,c
  4745  0010A4  3608               	rlcf	___lwdiv@divisor,f,c
  4746  0010A6  3609               	rlcf	___lwdiv@divisor+1,f,c
  4747  0010A8  2A0C               	incf	___lwdiv@counter,f,c
  4748  0010AA                     l2534:
  4749  0010AA  AE09               	btfss	___lwdiv@divisor+1,7,c
  4750  0010AC  D7FA               	goto	l2532
  4751  0010AE                     u1060:
  4752  0010AE  90D8               	bcf	status,0,c
  4753  0010B0  360A               	rlcf	___lwdiv@quotient,f,c
  4754  0010B2  360B               	rlcf	___lwdiv@quotient+1,f,c
  4755  0010B4  5008               	movf	___lwdiv@divisor,w,c
  4756  0010B6  5C06               	subwf	___lwdiv@dividend,w,c
  4757  0010B8  5009               	movf	___lwdiv@divisor+1,w,c
  4758  0010BA  5807               	subwfb	___lwdiv@dividend+1,w,c
  4759  0010BC  A0D8               	btfss	status,0,c
  4760  0010BE  D005               	goto	l2544
  4761  0010C0  5008               	movf	___lwdiv@divisor,w,c
  4762  0010C2  5E06               	subwf	___lwdiv@dividend,f,c
  4763  0010C4  5009               	movf	___lwdiv@divisor+1,w,c
  4764  0010C6  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4765  0010C8  800A               	bsf	___lwdiv@quotient,0,c
  4766  0010CA                     l2544:
  4767  0010CA  90D8               	bcf	status,0,c
  4768  0010CC  3209               	rrcf	___lwdiv@divisor+1,f,c
  4769  0010CE  3208               	rrcf	___lwdiv@divisor,f,c
  4770  0010D0  2E0C               	decfsz	___lwdiv@counter,f,c
  4771  0010D2  D7ED               	goto	u1060
  4772  0010D4                     l1188:
  4773  0010D4  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4774  0010D8  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4775  0010DC  0012               	return		;funcret
  4776  0010DE                     __end_of___lwdiv:
  4777                           	opt callstack 0
  4778                           
  4779 ;; *************** function _LED_Right *****************
  4780 ;; Defined at:
  4781 ;;		line 140 in file "LED.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  a               2    5[COMRAM] unsigned int 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  b               2    9[COMRAM] unsigned int 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  2    5[COMRAM] unsigned int 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;Total ram usage:        6 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    3
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_LED_Update
  4806 ;;		_LED_Light_Pos
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text39
  4811  00117A                     __ptext39:
  4812                           	opt callstack 0
  4813  00117A                     _LED_Right:
  4814                           	opt callstack 26
  4815                           
  4816                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  4817                           
  4818                           ;incstack = 0
  4819  00117A  A006               	btfss	LED_Right@a,0,c
  4820  00117C  D018               	goto	l2676
  4821                           
  4822                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  4823  00117E  0EFE               	movlw	254
  4824  001180  1406               	andwf	LED_Right@a,w,c
  4825  001182  6E0A               	movwf	LED_Right@b,c
  4826  001184  0E03               	movlw	3
  4827  001186  1407               	andwf	LED_Right@a+1,w,c
  4828  001188  6E0B               	movwf	LED_Right@b+1,c
  4829                           
  4830                           ;LED.c: 145:         b = b >> 1;
  4831  00118A  90D8               	bcf	status,0,c
  4832  00118C  300B               	rrcf	LED_Right@b+1,w,c
  4833  00118E  6E08               	movwf	??_LED_Right& (0+255),c
  4834  001190  300A               	rrcf	LED_Right@b,w,c
  4835  001192  6E0A               	movwf	LED_Right@b,c
  4836  001194  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  4837                           
  4838                           ;LED.c: 146:         b = b | 0b1000000000;
  4839  001198  0E00               	movlw	0
  4840  00119A  100A               	iorwf	LED_Right@b,w,c
  4841  00119C  6E0A               	movwf	LED_Right@b,c
  4842  00119E  0E02               	movlw	2
  4843  0011A0  100B               	iorwf	LED_Right@b+1,w,c
  4844  0011A2  6E0B               	movwf	LED_Right@b+1,c
  4845                           
  4846                           ;LED.c: 147:         return b;
  4847  0011A4  C00A  F006         	movff	LED_Right@b,?_LED_Right
  4848  0011A8  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  4849  0011AC  0012               	return	
  4850  0011AE                     l2676:
  4851                           
  4852                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  4853  0011AE  90D8               	bcf	status,0,c
  4854  0011B0  3007               	rrcf	LED_Right@a+1,w,c
  4855  0011B2  6E08               	movwf	??_LED_Right& (0+255),c
  4856  0011B4  3006               	rrcf	LED_Right@a,w,c
  4857  0011B6  6E06               	movwf	LED_Right@a,c
  4858  0011B8  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  4859                           
  4860                           ;LED.c: 152:         return a;
  4861  0011BC  C006  F006         	movff	LED_Right@a,?_LED_Right
  4862  0011C0  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  4863  0011C4  0012               	return		;funcret
  4864  0011C6                     __end_of_LED_Right:
  4865                           	opt callstack 0
  4866                           
  4867 ;; *************** function _LED_Left *****************
  4868 ;; Defined at:
  4869 ;;		line 167 in file "LED.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  a               2    5[COMRAM] unsigned int 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  b               2    7[COMRAM] unsigned int 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  2    5[COMRAM] unsigned int 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;Total ram usage:        4 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    3
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_LED_Update
  4894 ;;		_LED_Light_Pos
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text40
  4899  001210                     __ptext40:
  4900                           	opt callstack 0
  4901  001210                     _LED_Left:
  4902                           	opt callstack 25
  4903                           
  4904                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  4905                           
  4906                           ;incstack = 0
  4907  001210  A207               	btfss	LED_Left@a+1,1,c
  4908  001212  D015               	goto	l2692
  4909                           
  4910                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  4911  001214  0EFF               	movlw	255
  4912  001216  1406               	andwf	LED_Left@a,w,c
  4913  001218  6E08               	movwf	LED_Left@b,c
  4914  00121A  0E01               	movlw	1
  4915  00121C  1407               	andwf	LED_Left@a+1,w,c
  4916  00121E  6E09               	movwf	LED_Left@b+1,c
  4917                           
  4918                           ;LED.c: 172:         b = b << 1;
  4919  001220  90D8               	bcf	status,0,c
  4920  001222  3408               	rlcf	LED_Left@b,w,c
  4921  001224  6E08               	movwf	LED_Left@b,c
  4922  001226  3409               	rlcf	LED_Left@b+1,w,c
  4923  001228  6E09               	movwf	LED_Left@b+1,c
  4924                           
  4925                           ;LED.c: 173:         b = b | 0b0000000001;
  4926  00122A  0E01               	movlw	1
  4927  00122C  1008               	iorwf	LED_Left@b,w,c
  4928  00122E  6E08               	movwf	LED_Left@b,c
  4929  001230  5009               	movf	LED_Left@b+1,w,c
  4930  001232  6E09               	movwf	LED_Left@b+1,c
  4931                           
  4932                           ;LED.c: 174:         return b;
  4933  001234  C008  F006         	movff	LED_Left@b,?_LED_Left
  4934  001238  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  4935  00123C  0012               	return	
  4936  00123E                     l2692:
  4937                           
  4938                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  4939  00123E  90D8               	bcf	status,0,c
  4940  001240  3406               	rlcf	LED_Left@a,w,c
  4941  001242  6E06               	movwf	LED_Left@a,c
  4942  001244  3407               	rlcf	LED_Left@a+1,w,c
  4943  001246  6E07               	movwf	LED_Left@a+1,c
  4944                           
  4945                           ;LED.c: 179:         return a;
  4946  001248  C006  F006         	movff	LED_Left@a,?_LED_Left
  4947  00124C  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  4948  001250  0012               	return		;funcret
  4949  001252                     __end_of_LED_Left:
  4950                           	opt callstack 0
  4951                           
  4952 ;; *************** function _INI_All *****************
  4953 ;; Defined at:
  4954 ;;		line 52 in file "INI.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;		None
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4972 ;;Total ram usage:        0 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    5
  4975 ;; This function calls:
  4976 ;;		_CAN_Setup
  4977 ;;		_INI_GlobalInterrupt
  4978 ;;		_INI_LED_Start
  4979 ;;		_INI_OUTPUT
  4980 ;;		_INI_Timer
  4981 ;; This function is called by:
  4982 ;;		_main
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text41
  4987  001464                     __ptext41:
  4988                           	opt callstack 0
  4989  001464                     _INI_All:
  4990                           	opt callstack 25
  4991                           
  4992                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  4993                           
  4994                           ;incstack = 0
  4995  001464  80D1               	bsf	4049,0,c	;volatile
  4996  001466  0004               	clrwdt		;# 
  4997                           
  4998                           ;INI.c: 64:     INI_OUTPUT();
  4999  001468  EC23  F00A         	call	_INI_OUTPUT	;wreg free
  5000                           
  5001                           ;INI.c: 66:     CAN_Setup();
  5002  00146C  ECBF  F007         	call	_CAN_Setup	;wreg free
  5003                           
  5004                           ;INI.c: 67:     INI_GlobalInterrupt();
  5005  001470  EC52  F00A         	call	_INI_GlobalInterrupt	;wreg free
  5006                           
  5007                           ;INI.c: 69:     INI_Timer();
  5008  001474  EC3F  F00A         	call	_INI_Timer	;wreg free
  5009                           
  5010                           ;INI.c: 71:     INI_LED_Start();
  5011  001478  EC95  F009         	call	_INI_LED_Start	;wreg free
  5012  00147C  0012               	return		;funcret
  5013  00147E                     __end_of_INI_All:
  5014                           	opt callstack 0
  5015                           
  5016 ;; *************** function _INI_Timer *****************
  5017 ;; Defined at:
  5018 ;;		line 92 in file "TMR1.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      unsigned char 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    3
  5039 ;; This function calls:
  5040 ;;		Nothing
  5041 ;; This function is called by:
  5042 ;;		_INI_All
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text42
  5047  00147E                     __ptext42:
  5048                           	opt callstack 0
  5049  00147E                     _INI_Timer:
  5050                           	opt callstack 26
  5051                           
  5052                           ;TMR1.c: 96:     IRCF2 = 1;
  5053                           
  5054                           ;incstack = 0
  5055  00147E  8CD3               	bsf	4051,6,c	;volatile
  5056                           
  5057                           ;TMR1.c: 97:     IRCF1 = 1;
  5058  001480  8AD3               	bsf	4051,5,c	;volatile
  5059                           
  5060                           ;TMR1.c: 98:     IRCF0 = 1;
  5061  001482  88D3               	bsf	4051,4,c	;volatile
  5062                           
  5063                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5064  001484  0E3D               	movlw	61
  5065  001486  6ECD               	movwf	4045,c	;volatile
  5066                           
  5067                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5068  001488  0E9E               	movlw	158
  5069  00148A  6ECF               	movwf	4047,c	;volatile
  5070                           
  5071                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5072  00148C  0E57               	movlw	87
  5073  00148E  6ECE               	movwf	4046,c	;volatile
  5074                           
  5075                           ;TMR1.c: 102:     TMR1IE=1;
  5076  001490  809D               	bsf	3997,0,c	;volatile
  5077                           
  5078                           ;TMR1.c: 103:     TMR1ON = 1;
  5079  001492  80CD               	bsf	4045,0,c	;volatile
  5080  001494  0012               	return		;funcret
  5081  001496                     __end_of_INI_Timer:
  5082                           	opt callstack 0
  5083                           
  5084 ;; *************** function _INI_OUTPUT *****************
  5085 ;; Defined at:
  5086 ;;		line 27 in file "INI.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    3
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_INI_All
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text43
  5115  001446                     __ptext43:
  5116                           	opt callstack 0
  5117  001446                     _INI_OUTPUT:
  5118                           	opt callstack 26
  5119                           
  5120                           ;INI.c: 31:     LATA = 0;
  5121                           
  5122                           ;incstack = 0
  5123  001446  0E00               	movlw	0
  5124  001448  6E89               	movwf	3977,c	;volatile
  5125                           
  5126                           ;INI.c: 32:     LATB = 0;
  5127  00144A  0E00               	movlw	0
  5128  00144C  6E8A               	movwf	3978,c	;volatile
  5129                           
  5130                           ;INI.c: 33:     LATC = 0;
  5131  00144E  0E00               	movlw	0
  5132  001450  6E8B               	movwf	3979,c	;volatile
  5133                           
  5134                           ;INI.c: 34:     TRISA = 0x0C;
  5135  001452  0E0C               	movlw	12
  5136  001454  6E92               	movwf	3986,c	;volatile
  5137                           
  5138                           ;INI.c: 35:     TRISB = 0b10001000;
  5139  001456  0E88               	movlw	136
  5140  001458  6E93               	movwf	3987,c	;volatile
  5141                           
  5142                           ;INI.c: 36:     TRISC = 0xBF;
  5143  00145A  0EBF               	movlw	191
  5144  00145C  6E94               	movwf	3988,c	;volatile
  5145                           
  5146                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5147  00145E  8ED0               	bsf	4048,7,c	;volatile
  5148                           
  5149                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5150  001460  863F               	bsf	_DetectorLedRadar,3,c
  5151  001462  0012               	return		;funcret
  5152  001464                     __end_of_INI_OUTPUT:
  5153                           	opt callstack 0
  5154                           
  5155 ;; *************** function _INI_LED_Start *****************
  5156 ;; Defined at:
  5157 ;;		line 231 in file "LED.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;		None
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;Total ram usage:        0 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    4
  5178 ;; This function calls:
  5179 ;;		_LED_Control
  5180 ;; This function is called by:
  5181 ;;		_INI_All
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text44
  5186  00132A                     __ptext44:
  5187                           	opt callstack 0
  5188  00132A                     _INI_LED_Start:
  5189                           	opt callstack 25
  5190                           
  5191                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5192                           
  5193                           ;incstack = 0
  5194  00132A  5092               	movf	3986,w,c	;volatile
  5195  00132C  0B01               	andlw	1
  5196  00132E  6E92               	movwf	3986,c	;volatile
  5197                           
  5198                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5199  001330  5093               	movf	3987,w,c	;volatile
  5200  001332  0BFC               	andlw	252
  5201  001334  6E93               	movwf	3987,c	;volatile
  5202                           
  5203                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5204  001336  5096               	movf	3990,w,c	;volatile
  5205  001338  0BF8               	andlw	248
  5206  00133A  6E96               	movwf	3990,c	;volatile
  5207                           
  5208                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5209  00133C  0E00               	movlw	0
  5210  00133E  6E95               	movwf	3989,c	;volatile
  5211                           
  5212                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5213  001340  0E00               	movlw	0
  5214  001342  6E07               	movwf	LED_Control@diode+1,c
  5215  001344  0E00               	movlw	0
  5216  001346  6E06               	movwf	LED_Control@diode,c
  5217  001348  0E00               	movlw	0
  5218  00134A  EC54  F004         	call	_LED_Control
  5219                           
  5220                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5221  00134E  0E00               	movlw	0
  5222  001350  6E07               	movwf	LED_Control@diode+1,c
  5223  001352  0E00               	movlw	0
  5224  001354  6E06               	movwf	LED_Control@diode,c
  5225  001356  0E01               	movlw	1
  5226  001358  EC54  F004         	call	_LED_Control
  5227  00135C  0012               	return		;funcret
  5228  00135E                     __end_of_INI_LED_Start:
  5229                           	opt callstack 0
  5230                           
  5231 ;; *************** function _LED_Control *****************
  5232 ;; Defined at:
  5233 ;;		line 256 in file "LED.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  color           1    wreg     enum E10644
  5236 ;;  diode           2    5[COMRAM] unsigned int 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  color           1    9[COMRAM] enum E10644
  5239 ;;  cos             2    0        unsigned int 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      unsigned char 
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5250 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;Total ram usage:        5 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    3
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_LED_Error
  5260 ;;		_LED_Update
  5261 ;;		_LED_Light_Pos
  5262 ;;		_INI_LED_Start
  5263 ;;		_LED_Clear
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text45
  5268  0008A8                     __ptext45:
  5269                           	opt callstack 0
  5270  0008A8                     _LED_Control:
  5271                           	opt callstack 24
  5272                           
  5273                           ;incstack = 0
  5274                           ;LED_Control@color stored from wreg
  5275  0008A8  6E0A               	movwf	LED_Control@color,c
  5276                           
  5277                           ;LED.c: 259:     if(color == RED)
  5278  0008AA  500A               	movf	LED_Control@color,w,c
  5279  0008AC  A4D8               	btfss	status,2,c
  5280  0008AE  D050               	goto	l340
  5281                           
  5282                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5283  0008B0  A006               	btfss	LED_Control@diode,0,c
  5284  0008B2  D003               	goto	l2344
  5285                           
  5286                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5287  0008B4  508C               	movf	3980,w,c	;volatile
  5288  0008B6  0910               	iorlw	16
  5289  0008B8  D002               	goto	L3
  5290  0008BA                     l2344:
  5291                           
  5292                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5293  0008BA  508C               	movf	3980,w,c	;volatile
  5294  0008BC  0BEF               	andlw	239
  5295  0008BE                     L3:
  5296  0008BE  6E8C               	movwf	3980,c	;volatile
  5297                           
  5298                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5299  0008C0  A206               	btfss	LED_Control@diode,1,c
  5300  0008C2  D003               	goto	l2350
  5301                           
  5302                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5303  0008C4  508C               	movf	3980,w,c	;volatile
  5304  0008C6  0940               	iorlw	64
  5305  0008C8  D002               	goto	L4
  5306  0008CA                     l2350:
  5307                           
  5308                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5309  0008CA  508C               	movf	3980,w,c	;volatile
  5310  0008CC  0BBF               	andlw	191
  5311  0008CE                     L4:
  5312  0008CE  6E8C               	movwf	3980,c	;volatile
  5313                           
  5314                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5315  0008D0  A406               	btfss	LED_Control@diode,2,c
  5316  0008D2  D003               	goto	l2356
  5317                           
  5318                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5319  0008D4  508A               	movf	3978,w,c	;volatile
  5320  0008D6  0901               	iorlw	1
  5321  0008D8  D002               	goto	L5
  5322  0008DA                     l2356:
  5323                           
  5324                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5325  0008DA  508A               	movf	3978,w,c	;volatile
  5326  0008DC  0BFE               	andlw	254
  5327  0008DE                     L5:
  5328  0008DE  6E8A               	movwf	3978,c	;volatile
  5329                           
  5330                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5331  0008E0  A606               	btfss	LED_Control@diode,3,c
  5332  0008E2  D003               	goto	l2362
  5333                           
  5334                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5335  0008E4  5089               	movf	3977,w,c	;volatile
  5336  0008E6  0902               	iorlw	2
  5337  0008E8  D002               	goto	L6
  5338  0008EA                     l2362:
  5339                           
  5340                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5341  0008EA  5089               	movf	3977,w,c	;volatile
  5342  0008EC  0BFD               	andlw	253
  5343  0008EE                     L6:
  5344  0008EE  6E89               	movwf	3977,c	;volatile
  5345                           
  5346                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5347  0008F0  A806               	btfss	LED_Control@diode,4,c
  5348  0008F2  D003               	goto	l2368
  5349                           
  5350                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5351  0008F4  5089               	movf	3977,w,c	;volatile
  5352  0008F6  0908               	iorlw	8
  5353  0008F8  D002               	goto	L7
  5354  0008FA                     l2368:
  5355                           
  5356                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5357  0008FA  5089               	movf	3977,w,c	;volatile
  5358  0008FC  0BF7               	andlw	247
  5359  0008FE                     L7:
  5360  0008FE  6E89               	movwf	3977,c	;volatile
  5361                           
  5362                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5363  000900  AA06               	btfss	LED_Control@diode,5,c
  5364  000902  D003               	goto	l2374
  5365                           
  5366                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5367  000904  5089               	movf	3977,w,c	;volatile
  5368  000906  0920               	iorlw	32
  5369  000908  D002               	goto	L8
  5370  00090A                     l2374:
  5371                           
  5372                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5373  00090A  5089               	movf	3977,w,c	;volatile
  5374  00090C  0BDF               	andlw	223
  5375  00090E                     L8:
  5376  00090E  6E89               	movwf	3977,c	;volatile
  5377                           
  5378                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5379  000910  AC06               	btfss	LED_Control@diode,6,c
  5380  000912  D003               	goto	l2380
  5381                           
  5382                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5383  000914  508D               	movf	3981,w,c	;volatile
  5384  000916  0902               	iorlw	2
  5385  000918  D002               	goto	L9
  5386  00091A                     l2380:
  5387                           
  5388                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  5389  00091A  508D               	movf	3981,w,c	;volatile
  5390  00091C  0BFD               	andlw	253
  5391  00091E                     L9:
  5392  00091E  6E8D               	movwf	3981,c	;volatile
  5393                           
  5394                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  5395  000920  AE06               	btfss	LED_Control@diode,7,c
  5396  000922  D003               	goto	l2386
  5397                           
  5398                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  5399  000924  5089               	movf	3977,w,c	;volatile
  5400  000926  0980               	iorlw	128
  5401  000928  D002               	goto	L10
  5402  00092A                     l2386:
  5403                           
  5404                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  5405  00092A  5089               	movf	3977,w,c	;volatile
  5406  00092C  0B7F               	andlw	127
  5407  00092E                     L10:
  5408  00092E  6E89               	movwf	3977,c	;volatile
  5409                           
  5410                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  5411  000930  A007               	btfss	LED_Control@diode+1,0,c
  5412  000932  D003               	goto	l2392
  5413                           
  5414                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  5415  000934  508C               	movf	3980,w,c	;volatile
  5416  000936  0901               	iorlw	1
  5417  000938  D002               	goto	L11
  5418  00093A                     l2392:
  5419                           
  5420                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  5421  00093A  508C               	movf	3980,w,c	;volatile
  5422  00093C  0BFE               	andlw	254
  5423  00093E                     L11:
  5424  00093E  6E8C               	movwf	3980,c	;volatile
  5425                           
  5426                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  5427  000940  A207               	btfss	LED_Control@diode+1,1,c
  5428  000942  D003               	goto	l2398
  5429                           
  5430                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  5431  000944  508C               	movf	3980,w,c	;volatile
  5432  000946  0904               	iorlw	4
  5433  000948  D002               	goto	L12
  5434  00094A                     l2398:
  5435                           
  5436                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  5437  00094A  508C               	movf	3980,w,c	;volatile
  5438  00094C  0BFB               	andlw	251
  5439  00094E                     L12:
  5440  00094E  6E8C               	movwf	3980,c	;volatile
  5441  000950                     l340:
  5442                           
  5443                           ;LED.c: 358:     if(color == GREEN)
  5444  000950  040A               	decf	LED_Control@color,w,c
  5445  000952  A4D8               	btfss	status,2,c
  5446  000954  0012               	return	
  5447                           
  5448                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  5449  000956  A006               	btfss	LED_Control@diode,0,c
  5450  000958  D003               	goto	l2404
  5451                           
  5452                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  5453  00095A  508C               	movf	3980,w,c	;volatile
  5454  00095C  0920               	iorlw	32
  5455  00095E  D002               	goto	L13
  5456  000960                     l2404:
  5457                           
  5458                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  5459  000960  508C               	movf	3980,w,c	;volatile
  5460  000962  0BDF               	andlw	223
  5461  000964                     L13:
  5462  000964  6E8C               	movwf	3980,c	;volatile
  5463                           
  5464                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  5465  000966  A206               	btfss	LED_Control@diode,1,c
  5466  000968  D003               	goto	l2410
  5467                           
  5468                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  5469  00096A  508C               	movf	3980,w,c	;volatile
  5470  00096C  0980               	iorlw	128
  5471  00096E  D002               	goto	L14
  5472  000970                     l2410:
  5473                           
  5474                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  5475  000970  508C               	movf	3980,w,c	;volatile
  5476  000972  0B7F               	andlw	127
  5477  000974                     L14:
  5478  000974  6E8C               	movwf	3980,c	;volatile
  5479                           
  5480                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  5481  000976  A406               	btfss	LED_Control@diode,2,c
  5482  000978  D003               	goto	l2416
  5483                           
  5484                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  5485  00097A  508A               	movf	3978,w,c	;volatile
  5486  00097C  0902               	iorlw	2
  5487  00097E  D002               	goto	L15
  5488  000980                     l2416:
  5489                           
  5490                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  5491  000980  508A               	movf	3978,w,c	;volatile
  5492  000982  0BFD               	andlw	253
  5493  000984                     L15:
  5494  000984  6E8A               	movwf	3978,c	;volatile
  5495                           
  5496                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  5497  000986  A606               	btfss	LED_Control@diode,3,c
  5498  000988  D003               	goto	l2422
  5499                           
  5500                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  5501  00098A  5089               	movf	3977,w,c	;volatile
  5502  00098C  0904               	iorlw	4
  5503  00098E  D002               	goto	L16
  5504  000990                     l2422:
  5505                           
  5506                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  5507  000990  5089               	movf	3977,w,c	;volatile
  5508  000992  0BFB               	andlw	251
  5509  000994                     L16:
  5510  000994  6E89               	movwf	3977,c	;volatile
  5511                           
  5512                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  5513  000996  A806               	btfss	LED_Control@diode,4,c
  5514  000998  D003               	goto	l2428
  5515                           
  5516                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  5517  00099A  5089               	movf	3977,w,c	;volatile
  5518  00099C  0910               	iorlw	16
  5519  00099E  D002               	goto	L17
  5520  0009A0                     l2428:
  5521                           
  5522                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  5523  0009A0  5089               	movf	3977,w,c	;volatile
  5524  0009A2  0BEF               	andlw	239
  5525  0009A4                     L17:
  5526  0009A4  6E89               	movwf	3977,c	;volatile
  5527                           
  5528                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  5529  0009A6  AA06               	btfss	LED_Control@diode,5,c
  5530  0009A8  D003               	goto	l2434
  5531                           
  5532                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  5533  0009AA  508D               	movf	3981,w,c	;volatile
  5534  0009AC  0901               	iorlw	1
  5535  0009AE  D002               	goto	L18
  5536  0009B0                     l2434:
  5537                           
  5538                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  5539  0009B0  508D               	movf	3981,w,c	;volatile
  5540  0009B2  0BFE               	andlw	254
  5541  0009B4                     L18:
  5542  0009B4  6E8D               	movwf	3981,c	;volatile
  5543                           
  5544                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  5545  0009B6  AC06               	btfss	LED_Control@diode,6,c
  5546  0009B8  D003               	goto	l2440
  5547                           
  5548                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  5549  0009BA  508D               	movf	3981,w,c	;volatile
  5550  0009BC  0904               	iorlw	4
  5551  0009BE  D002               	goto	L19
  5552  0009C0                     l2440:
  5553                           
  5554                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  5555  0009C0  508D               	movf	3981,w,c	;volatile
  5556  0009C2  0BFB               	andlw	251
  5557  0009C4                     L19:
  5558  0009C4  6E8D               	movwf	3981,c	;volatile
  5559                           
  5560                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  5561  0009C6  AE06               	btfss	LED_Control@diode,7,c
  5562  0009C8  D003               	goto	l2446
  5563                           
  5564                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  5565  0009CA  5089               	movf	3977,w,c	;volatile
  5566  0009CC  0940               	iorlw	64
  5567  0009CE  D002               	goto	L20
  5568  0009D0                     l2446:
  5569                           
  5570                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  5571  0009D0  5089               	movf	3977,w,c	;volatile
  5572  0009D2  0BBF               	andlw	191
  5573  0009D4                     L20:
  5574  0009D4  6E89               	movwf	3977,c	;volatile
  5575                           
  5576                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  5577  0009D6  A007               	btfss	LED_Control@diode+1,0,c
  5578  0009D8  D003               	goto	l2452
  5579                           
  5580                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  5581  0009DA  508C               	movf	3980,w,c	;volatile
  5582  0009DC  0902               	iorlw	2
  5583  0009DE  D002               	goto	L21
  5584  0009E0                     l2452:
  5585                           
  5586                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  5587  0009E0  508C               	movf	3980,w,c	;volatile
  5588  0009E2  0BFD               	andlw	253
  5589  0009E4                     L21:
  5590  0009E4  6E8C               	movwf	3980,c	;volatile
  5591                           
  5592                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  5593  0009E6  A207               	btfss	LED_Control@diode+1,1,c
  5594  0009E8  D004               	goto	l2458
  5595                           
  5596                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  5597  0009EA  508C               	movf	3980,w,c	;volatile
  5598  0009EC  0908               	iorlw	8
  5599  0009EE  6E8C               	movwf	3980,c	;volatile
  5600                           
  5601                           ;LED.c: 450:         }
  5602  0009F0  0012               	return	
  5603  0009F2                     l2458:
  5604                           
  5605                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  5606  0009F2  508C               	movf	3980,w,c	;volatile
  5607  0009F4  0BF7               	andlw	247
  5608  0009F6  6E8C               	movwf	3980,c	;volatile
  5609  0009F8  0012               	return		;funcret
  5610  0009FA                     __end_of_LED_Control:
  5611                           	opt callstack 0
  5612                           
  5613 ;; *************** function _INI_GlobalInterrupt *****************
  5614 ;; Defined at:
  5615 ;;		line 74 in file "INI.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		None
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;Total ram usage:        0 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    3
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_INI_All
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text46
  5644  0014A4                     __ptext46:
  5645                           	opt callstack 0
  5646  0014A4                     _INI_GlobalInterrupt:
  5647                           	opt callstack 26
  5648                           
  5649                           ;INI.c: 76: INTCONbits.GIEH=1;
  5650                           
  5651                           ;incstack = 0
  5652  0014A4  8EF2               	bsf	4082,7,c	;volatile
  5653                           
  5654                           ;INI.c: 77: INTCONbits.GIEL=1;
  5655  0014A6  8CF2               	bsf	4082,6,c	;volatile
  5656                           
  5657                           ;INI.c: 78: RCONbits.IPEN=1;
  5658  0014A8  8ED0               	bsf	4048,7,c	;volatile
  5659                           
  5660                           ;INI.c: 79: IPEN =1;
  5661  0014AA  8ED0               	bsf	4048,7,c	;volatile
  5662                           
  5663                           ;INI.c: 81: PEIE=1;
  5664  0014AC  8CF2               	bsf	4082,6,c	;volatile
  5665                           
  5666                           ;INI.c: 82: TMR1IP = 0;
  5667  0014AE  909F               	bcf	3999,0,c	;volatile
  5668  0014B0  0012               	return		;funcret
  5669  0014B2                     __end_of_INI_GlobalInterrupt:
  5670                           	opt callstack 0
  5671                           
  5672 ;; *************** function _CAN_Setup *****************
  5673 ;; Defined at:
  5674 ;;		line 22 in file "CAN.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;		None
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5692 ;;Total ram usage:        1 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    4
  5695 ;; This function calls:
  5696 ;;		_CAN_SetupClock
  5697 ;;		_CAN_SetupMask
  5698 ;; This function is called by:
  5699 ;;		_INI_All
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text47
  5704  000F7E                     __ptext47:
  5705                           	opt callstack 0
  5706  000F7E                     _CAN_Setup:
  5707                           	opt callstack 25
  5708                           
  5709                           ;CAN.c: 27:     CANCON = 0x80;
  5710                           
  5711                           ;incstack = 0
  5712  000F7E  0E80               	movlw	128
  5713  000F80  6E6F               	movwf	3951,c	;volatile
  5714  000F82                     l2860:
  5715                           
  5716                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  5717  000F82  506E               	movf	3950,w,c	;volatile
  5718  000F84  0BE0               	andlw	224
  5719  000F86  0A80               	xorlw	128
  5720  000F88  A4D8               	btfss	status,2,c
  5721  000F8A  D7FB               	goto	l2860
  5722                           
  5723                           ;CAN.c: 33:     BSEL0 = 0;
  5724  000F8C  0E00               	movlw	0
  5725  000F8E  010D               	movlb	13	; () banked
  5726  000F90  6FF8               	movwf	248,b	;volatile
  5727                           
  5728                           ;CAN.c: 34:     TXB0CON = 0;
  5729  000F92  0E00               	movlw	0
  5730  000F94  010F               	movlb	15	; () banked
  5731  000F96  6F40               	movwf	64,b	;volatile
  5732                           
  5733                           ;CAN.c: 35:     RXB0CON = 0;
  5734  000F98  0E00               	movlw	0
  5735  000F9A  6E60               	movwf	3936,c	;volatile
  5736                           
  5737                           ;CAN.c: 36:     RXB1CON = 0;
  5738  000F9C  0E00               	movlw	0
  5739  000F9E  6F50               	movwf	80,b	;volatile
  5740                           
  5741                           ;CAN.c: 37:     B0CON = 0;
  5742  000FA0  0E00               	movlw	0
  5743  000FA2  010E               	movlb	14	; () banked
  5744  000FA4  6F20               	movwf	32,b	;volatile
  5745                           
  5746                           ;CAN.c: 38:     B1CON = 0;
  5747  000FA6  0E00               	movlw	0
  5748  000FA8  6F30               	movwf	48,b	;volatile
  5749                           
  5750                           ;CAN.c: 39:     PIE3 = 0;
  5751  000FAA  0E00               	movlw	0
  5752  000FAC  6EA3               	movwf	4003,c	;volatile
  5753                           
  5754                           ; BSR set to: 14
  5755                           ;CAN.c: 40:     IPR3 = 0xFF;
  5756  000FAE  68A5               	setf	4005,c	;volatile
  5757                           
  5758                           ;CAN.c: 41:     PIR3 = 0x00;
  5759  000FB0  0E00               	movlw	0
  5760  000FB2  6EA4               	movwf	4004,c	;volatile
  5761                           
  5762                           ;CAN.c: 42:     BIE0 = 0;
  5763  000FB4  0E00               	movlw	0
  5764  000FB6  010D               	movlb	13	; () banked
  5765  000FB8  6FFA               	movwf	250,b	;volatile
  5766                           
  5767                           ;CAN.c: 45:     ECANCON = 0x90;
  5768  000FBA  0E90               	movlw	144
  5769  000FBC  6E77               	movwf	3959,c	;volatile
  5770                           
  5771                           ; BSR set to: 13
  5772                           ;CAN.c: 48:     CAN_SetupClock();
  5773  000FBE  ECDB  F009         	call	_CAN_SetupClock	;wreg free
  5774                           
  5775                           ;CAN.c: 51:     CAN_SetupMask();
  5776  000FC2  EC82  F006         	call	_CAN_SetupMask	;wreg free
  5777                           
  5778                           ;CAN.c: 53:     CIOCON = 0xff;
  5779  000FC6  6873               	setf	3955,c	;volatile
  5780                           
  5781                           ;CAN.c: 59:     CANCON = 0x00;
  5782  000FC8  0E00               	movlw	0
  5783  000FCA  6E6F               	movwf	3951,c	;volatile
  5784  000FCC                     l2874:
  5785                           
  5786                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  5787  000FCC  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  5788  000FD0  0EE0               	movlw	224
  5789  000FD2  1606               	andwf	??_CAN_Setup,f,c
  5790  000FD4  B4D8               	btfsc	status,2,c
  5791  000FD6  0012               	return	
  5792  000FD8  D7F9               	goto	l2874
  5793  000FDA                     __end_of_CAN_Setup:
  5794                           	opt callstack 0
  5795                           
  5796 ;; *************** function _CAN_SetupMask *****************
  5797 ;; Defined at:
  5798 ;;		line 81 in file "CAN.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;		None
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;Total ram usage:        0 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    3
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_CAN_Setup
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text48
  5827  000D04                     __ptext48:
  5828                           	opt callstack 0
  5829  000D04                     _CAN_SetupMask:
  5830                           	opt callstack 25
  5831                           
  5832                           ;CAN.c: 83:     MSEL0 = 0x50;
  5833                           
  5834                           ;incstack = 0
  5835  000D04  0E50               	movlw	80
  5836  000D06  010D               	movlb	13	; () banked
  5837  000D08  6FF0               	movwf	240,b	;volatile
  5838                           
  5839                           ;CAN.c: 84:     MSEL1 = 0x55;
  5840  000D0A  0E55               	movlw	85
  5841  000D0C  6FF1               	movwf	241,b	;volatile
  5842                           
  5843                           ;CAN.c: 85:     MSEL2 = 0x55;
  5844  000D0E  0E55               	movlw	85
  5845  000D10  6FF2               	movwf	242,b	;volatile
  5846                           
  5847                           ;CAN.c: 86:     MSEL3 = 0x55;
  5848  000D12  0E55               	movlw	85
  5849  000D14  6FF3               	movwf	243,b	;volatile
  5850                           
  5851                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  5852  000D16  0E00               	movlw	0
  5853  000D18  010F               	movlb	15	; () banked
  5854  000D1A  6F18               	movwf	24,b	;volatile
  5855                           
  5856                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  5857  000D1C  0E0B               	movlw	11
  5858  000D1E  6F19               	movwf	25,b	;volatile
  5859                           
  5860                           ; BSR set to: 15
  5861                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  5862  000D20  691A               	setf	26,b	;volatile
  5863                           
  5864                           ; BSR set to: 15
  5865                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  5866  000D22  691B               	setf	27,b	;volatile
  5867                           
  5868                           ; BSR set to: 15
  5869                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  5870  000D24  691C               	setf	28,b	;volatile
  5871                           
  5872                           ; BSR set to: 15
  5873                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  5874  000D26  691D               	setf	29,b	;volatile
  5875                           
  5876                           ;CAN.c: 97:     RXM1EIDH = 0;
  5877  000D28  0E00               	movlw	0
  5878  000D2A  6F1E               	movwf	30,b	;volatile
  5879                           
  5880                           ;CAN.c: 98:     RXM1EIDL = 0;
  5881  000D2C  0E00               	movlw	0
  5882  000D2E  6F1F               	movwf	31,b	;volatile
  5883                           
  5884                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  5885  000D30  0E00               	movlw	0
  5886  000D32  6F00               	movwf	0,b	;volatile
  5887                           
  5888                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  5889  000D34  0E01               	movlw	1
  5890  000D36  6F01               	movwf	1,b	;volatile
  5891                           
  5892                           ; BSR set to: 15
  5893                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  5894  000D38  8701               	bsf	1,3,b	;volatile
  5895                           
  5896                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  5897  000D3A  503E               	movf	_DaneCan+3,w,c
  5898  000D3C  6F02               	movwf	2,b	;volatile
  5899                           
  5900                           ; BSR set to: 15
  5901                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  5902  000D3E  8D02               	bsf	2,6,b	;volatile
  5903                           
  5904                           ; BSR set to: 15
  5905                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  5906  000D40  C03D  FF03         	movff	_DaneCan+2,3843	;volatile
  5907                           
  5908                           ; BSR set to: 15
  5909                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  5910  000D44  0E00               	movlw	0
  5911  000D46  6F04               	movwf	4,b	;volatile
  5912                           
  5913                           ; BSR set to: 15
  5914                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  5915  000D48  0E01               	movlw	1
  5916  000D4A  6F05               	movwf	5,b	;volatile
  5917                           
  5918                           ; BSR set to: 15
  5919                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  5920  000D4C  8705               	bsf	5,3,b	;volatile
  5921                           
  5922                           ; BSR set to: 15
  5923                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  5924  000D4E  0E7F               	movlw	127
  5925  000D50  6F06               	movwf	6,b	;volatile
  5926                           
  5927                           ; BSR set to: 15
  5928                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  5929  000D52  6907               	setf	7,b	;volatile
  5930                           
  5931                           ; BSR set to: 15
  5932                           ;CAN.c: 115:     RXF2SIDH = 0x00;
  5933  000D54  0E00               	movlw	0
  5934  000D56  6F08               	movwf	8,b	;volatile
  5935                           
  5936                           ; BSR set to: 15
  5937                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  5938  000D58  0E20               	movlw	32
  5939  000D5A  6F09               	movwf	9,b	;volatile
  5940                           
  5941                           ; BSR set to: 15
  5942                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  5943  000D5C  8709               	bsf	9,3,b	;volatile
  5944                           
  5945                           ; BSR set to: 15
  5946                           ;CAN.c: 118:     RXF2EIDH = 0;
  5947  000D5E  0E00               	movlw	0
  5948  000D60  6F0A               	movwf	10,b	;volatile
  5949                           
  5950                           ; BSR set to: 15
  5951                           ;CAN.c: 119:     RXF2EIDL = 0;
  5952  000D62  0E00               	movlw	0
  5953  000D64  6F0B               	movwf	11,b	;volatile
  5954                           
  5955                           ; BSR set to: 15
  5956                           ;CAN.c: 122:     RXF3SIDH = 0x00;
  5957  000D66  0E00               	movlw	0
  5958  000D68  6F0C               	movwf	12,b	;volatile
  5959                           
  5960                           ; BSR set to: 15
  5961                           ;CAN.c: 123:     RXF3SIDL = 0x40;
  5962  000D6A  0E40               	movlw	64
  5963  000D6C  6F0D               	movwf	13,b	;volatile
  5964                           
  5965                           ; BSR set to: 15
  5966                           ;CAN.c: 124:     RXF3SIDLbits.EXIDEN = 1;
  5967  000D6E  870D               	bsf	13,3,b	;volatile
  5968                           
  5969                           ; BSR set to: 15
  5970                           ;CAN.c: 125:     RXF3EIDH = 0;
  5971  000D70  0E00               	movlw	0
  5972  000D72  6F0E               	movwf	14,b	;volatile
  5973                           
  5974                           ; BSR set to: 15
  5975                           ;CAN.c: 126:     RXF3EIDL = 0;
  5976  000D74  0E00               	movlw	0
  5977  000D76  6F0F               	movwf	15,b	;volatile
  5978                           
  5979                           ; BSR set to: 15
  5980                           ;CAN.c: 129:     RXF5SIDH = 0b00000010;
  5981  000D78  0E02               	movlw	2
  5982  000D7A  6F14               	movwf	20,b	;volatile
  5983                           
  5984                           ; BSR set to: 15
  5985                           ;CAN.c: 130:     RXF5SIDL = 0b00000000;
  5986  000D7C  0E00               	movlw	0
  5987  000D7E  6F15               	movwf	21,b	;volatile
  5988                           
  5989                           ; BSR set to: 15
  5990                           ;CAN.c: 131:     RXF4SIDLbits.EXIDEN = 1;
  5991  000D80  8711               	bsf	17,3,b	;volatile
  5992                           
  5993                           ; BSR set to: 15
  5994                           ;CAN.c: 132:     RXF4EIDH = 0;
  5995  000D82  0E00               	movlw	0
  5996  000D84  6F12               	movwf	18,b	;volatile
  5997                           
  5998                           ; BSR set to: 15
  5999                           ;CAN.c: 133:     RXF4EIDL = 0;
  6000  000D86  0E00               	movlw	0
  6001  000D88  6F13               	movwf	19,b	;volatile
  6002                           
  6003                           ; BSR set to: 15
  6004                           ;CAN.c: 136:     RXF5SIDH = 0b00000010;
  6005  000D8A  0E02               	movlw	2
  6006  000D8C  6F14               	movwf	20,b	;volatile
  6007                           
  6008                           ; BSR set to: 15
  6009                           ;CAN.c: 137:     RXF5SIDL = 0b00100000;
  6010  000D8E  0E20               	movlw	32
  6011  000D90  6F15               	movwf	21,b	;volatile
  6012                           
  6013                           ; BSR set to: 15
  6014                           ;CAN.c: 138:     RXF5SIDLbits.EXIDEN = 1;
  6015  000D92  8715               	bsf	21,3,b	;volatile
  6016                           
  6017                           ; BSR set to: 15
  6018                           ;CAN.c: 139:     RXF5EIDH = 0;
  6019  000D94  0E00               	movlw	0
  6020  000D96  6F16               	movwf	22,b	;volatile
  6021                           
  6022                           ; BSR set to: 15
  6023                           ;CAN.c: 140:     RXF5EIDL = 0;
  6024  000D98  0E00               	movlw	0
  6025  000D9A  6F17               	movwf	23,b	;volatile
  6026                           
  6027                           ; BSR set to: 15
  6028                           ;CAN.c: 148:     RXFCON0 = 0b00111111;
  6029  000D9C  0E3F               	movlw	63
  6030  000D9E  010D               	movlb	13	; () banked
  6031  000DA0  6FD4               	movwf	212,b	;volatile
  6032                           
  6033                           ; BSR set to: 13
  6034  000DA2  0012               	return		;funcret
  6035  000DA4                     __end_of_CAN_SetupMask:
  6036                           	opt callstack 0
  6037                           
  6038 ;; *************** function _CAN_SetupClock *****************
  6039 ;; Defined at:
  6040 ;;		line 158 in file "CAN.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		None
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    3
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_CAN_Setup
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text49
  6069  0013B6                     __ptext49:
  6070                           	opt callstack 0
  6071  0013B6                     _CAN_SetupClock:
  6072                           	opt callstack 25
  6073                           
  6074                           ;CAN.c: 160:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6075                           
  6076                           ; BSR set to: 13
  6077                           ;incstack = 0
  6078  0013B6  8070               	bsf	3952,0,c	;volatile
  6079                           
  6080                           ;CAN.c: 161:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6081  0013B8  8270               	bsf	3952,1,c	;volatile
  6082                           
  6083                           ;CAN.c: 162:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6084  0013BA  9470               	bcf	3952,2,c	;volatile
  6085                           
  6086                           ;CAN.c: 163:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6087  0013BC  9670               	bcf	3952,3,c	;volatile
  6088                           
  6089                           ;CAN.c: 164:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6090  0013BE  9870               	bcf	3952,4,c	;volatile
  6091                           
  6092                           ;CAN.c: 165:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6093  0013C0  9A70               	bcf	3952,5,c	;volatile
  6094                           
  6095                           ;CAN.c: 167:     BRGCON1bits.SJW0 = 1;
  6096  0013C2  8C70               	bsf	3952,6,c	;volatile
  6097                           
  6098                           ;CAN.c: 168:     BRGCON1bits.SJW1 = 1;
  6099  0013C4  8E70               	bsf	3952,7,c	;volatile
  6100                           
  6101                           ;CAN.c: 170:     BRGCON2bits.SEG1PH0 = 1;
  6102  0013C6  8671               	bsf	3953,3,c	;volatile
  6103                           
  6104                           ;CAN.c: 171:     BRGCON2bits.SEG1PH1 = 1;
  6105  0013C8  8871               	bsf	3953,4,c	;volatile
  6106                           
  6107                           ;CAN.c: 172:     BRGCON2bits.SEG1PH2 = 1;
  6108  0013CA  8A71               	bsf	3953,5,c	;volatile
  6109                           
  6110                           ;CAN.c: 174:     BRGCON2bits.PRSEG2 = 1;
  6111  0013CC  8471               	bsf	3953,2,c	;volatile
  6112                           
  6113                           ;CAN.c: 175:     BRGCON2bits.PRSEG1 = 0;
  6114  0013CE  9271               	bcf	3953,1,c	;volatile
  6115                           
  6116                           ;CAN.c: 176:     BRGCON2bits.PRSEG0 = 0;
  6117  0013D0  9071               	bcf	3953,0,c	;volatile
  6118                           
  6119                           ;CAN.c: 178:     BRGCON3bits.SEG2PH0 = 1;
  6120  0013D2  8072               	bsf	3954,0,c	;volatile
  6121                           
  6122                           ;CAN.c: 179:     BRGCON3bits.SEG2PH1 = 0;
  6123  0013D4  9272               	bcf	3954,1,c	;volatile
  6124                           
  6125                           ;CAN.c: 180:     BRGCON3bits.SEG2PH2 = 1;
  6126  0013D6  8472               	bsf	3954,2,c	;volatile
  6127                           
  6128                           ;CAN.c: 182:     BRGCON2bits.SAM = 1;
  6129  0013D8  8C71               	bsf	3953,6,c	;volatile
  6130                           
  6131                           ;CAN.c: 183:     BRGCON2bits.SEG2PHTS = 1;
  6132  0013DA  8E71               	bsf	3953,7,c	;volatile
  6133  0013DC  0012               	return		;funcret
  6134  0013DE                     __end_of_CAN_SetupClock:
  6135                           	opt callstack 0
  6136                           
  6137 ;; *************** function _ISR_low *****************
  6138 ;; Defined at:
  6139 ;;		line 16 in file "ISR.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;Total ram usage:        3 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    2
  6160 ;; This function calls:
  6161 ;;		_TMR1_Timer_reset
  6162 ;;		i1_TMR1_Update_flag_Set
  6163 ;; This function is called by:
  6164 ;;		Interrupt level 1
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	intcodelo
  6169  000018                     __pintcodelo:
  6170                           	opt callstack 0
  6171  000018                     _ISR_low:
  6172                           	opt callstack 24
  6173                           
  6174                           ;incstack = 0
  6175  000018  8054               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6176  00001A  CFD8 F003          	movff	status,??_ISR_low
  6177  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  6178  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  6179                           
  6180                           ;ISR.c: 21:     if(TMR1IF==1)
  6181  000026  A09E               	btfss	3998,0,c	;volatile
  6182  000028  D011               	goto	i1l624
  6183                           
  6184                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6185  00002A  EC02  F00A         	call	_TMR1_Timer_reset	;wreg free
  6186                           
  6187                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6188  00002E  0E00               	movlw	0
  6189  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6190  000032  0E01               	movlw	1
  6191  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  6192  000036  EC81  F00A         	call	i1_TMR1_Update_flag_Set	;wreg free
  6193                           
  6194                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6195  00003A  803F               	bsf	_DetectorLedRadar,0,c
  6196                           
  6197                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6198  00003C  2A48               	incf	ISR_low@ramkaStanuU8,f,c
  6199  00003E  0E14               	movlw	20
  6200  000040  6448               	cpfsgt	ISR_low@ramkaStanuU8,c
  6201  000042  D003               	goto	i1l3158
  6202                           
  6203                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6204  000044  0E00               	movlw	0
  6205  000046  6E48               	movwf	ISR_low@ramkaStanuU8,c
  6206                           
  6207                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6208  000048  803B               	bsf	_DaneCan,0,c
  6209  00004A                     i1l3158:
  6210                           
  6211                           ;ISR.c: 41:             TMR1IF=0;
  6212  00004A  909E               	bcf	3998,0,c	;volatile
  6213  00004C                     i1l624:
  6214  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  6215  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  6216  000054  C003  FFD8         	movff	??_ISR_low,status
  6217  000058  9054               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6218  00005A  0010               	retfie	
  6219  00005C                     __end_of_ISR_low:
  6220                           	opt callstack 0
  6221                           
  6222 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6223 ;; Defined at:
  6224 ;;		line 32 in file "TMR1.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  a               2    0[COMRAM] unsigned int 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		None
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;Total ram usage:        2 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    1
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_ISR_low
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text51
  6253  001502                     __ptext51:
  6254                           	opt callstack 0
  6255  001502                     i1_TMR1_Update_flag_Set:
  6256                           	opt callstack 24
  6257                           
  6258                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6259                           
  6260                           ;incstack = 0
  6261  001502  C001  F042         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6262  001506  C002  F043         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6263  00150A  0012               	return		;funcret
  6264  00150C                     __end_ofi1_TMR1_Update_flag_Set:
  6265                           	opt callstack 0
  6266                           
  6267 ;; *************** function _TMR1_Timer_reset *****************
  6268 ;; Defined at:
  6269 ;;		line 63 in file "TMR1.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6274 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      unsigned char 
  6277 ;; Registers used:
  6278 ;;		wreg, status,2, status,0
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;Total ram usage:        2 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    1
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_ISR_low
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text52
  6299  001404                     __ptext52:
  6300                           	opt callstack 0
  6301  001404                     _TMR1_Timer_reset:
  6302                           	opt callstack 24
  6303                           
  6304                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6305                           
  6306                           ;incstack = 0
  6307  001404  0E00               	movlw	0
  6308  001406  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6309  001408  0E00               	movlw	0
  6310  00140A  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6311                           
  6312                           ;TMR1.c: 70:     t1L = TMR1L;
  6313  00140C  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6314                           
  6315                           ;TMR1.c: 71:     t1H = TMR1H;
  6316  001410  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6317                           
  6318                           ;TMR1.c: 72:     __nop();
  6319  001414  F000               	nop	
  6320                           
  6321                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6322  001416  0E9E               	movlw	158
  6323  001418  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6324                           
  6325                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6326  00141A  0E57               	movlw	87
  6327  00141C  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6328                           
  6329                           ;TMR1.c: 75:     TMR1H = t1H;
  6330  00141E  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6331                           
  6332                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6333  001422  0E5B               	movlw	91
  6334  001424  6ECE               	movwf	4046,c	;volatile
  6335  001426  0012               	return		;funcret
  6336  001428                     __end_of_TMR1_Timer_reset:
  6337                           	opt callstack 0
  6338                           
  6339 ;; *************** function _ISR_high *****************
  6340 ;; Defined at:
  6341 ;;		line 53 in file "ISR.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		None
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;Total ram usage:        0 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		Interrupt level 2
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	intcode
  6369  000008                     __pintcode:
  6370                           	opt callstack 0
  6371  000008                     _ISR_high:
  6372                           	opt callstack 24
  6373                           
  6374                           ;incstack = 0
  6375  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6376  00000A  ED93  F00A         	call	int_func,f	;refresh shadow registers
  6377                           
  6378                           	psect	intcode_body
  6379  001526                     __pintcode_body:
  6380                           	opt callstack 24
  6381  001526                     int_func:
  6382                           	opt callstack 24
  6383  001526  0006               	pop		; remove dummy address from shadow register refresh
  6384  001528  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6385  00152A  0011               	retfie		f
  6386  00152C                     __end_of_ISR_high:
  6387                           	opt callstack 0
  6388  0000                     
  6389                           	psect	rparam
  6390  0000                     
  6391                           	psect	temp
  6392  000054                     btemp:
  6393                           	opt callstack 0
  6394  000054                     	ds	1
  6395  0000                     int$flags	set	btemp
  6396  0000                     wtemp8	set	btemp+1
  6397  0000                     ttemp5	set	btemp+1
  6398  0000                     ttemp6	set	btemp+4
  6399  0000                     ttemp7	set	btemp+8
  6400                           tosu	equ	0xFFF
  6401                           tosh	equ	0xFFE
  6402                           tosl	equ	0xFFD
  6403                           stkptr	equ	0xFFC
  6404                           pclatu	equ	0xFFB
  6405                           pclath	equ	0xFFA
  6406                           pcl	equ	0xFF9
  6407                           tblptru	equ	0xFF8
  6408                           tblptrh	equ	0xFF7
  6409                           tblptrl	equ	0xFF6
  6410                           tablat	equ	0xFF5
  6411                           prodh	equ	0xFF4
  6412                           prodl	equ	0xFF3
  6413                           indf0	equ	0xFEF
  6414                           postinc0	equ	0xFEE
  6415                           postdec0	equ	0xFED
  6416                           preinc0	equ	0xFEC
  6417                           plusw0	equ	0xFEB
  6418                           fsr0h	equ	0xFEA
  6419                           fsr0l	equ	0xFE9
  6420                           wreg	equ	0xFE8
  6421                           indf1	equ	0xFE7
  6422                           postinc1	equ	0xFE6
  6423                           postdec1	equ	0xFE5
  6424                           preinc1	equ	0xFE4
  6425                           plusw1	equ	0xFE3
  6426                           fsr1h	equ	0xFE2
  6427                           fsr1l	equ	0xFE1
  6428                           bsr	equ	0xFE0
  6429                           indf2	equ	0xFDF
  6430                           postinc2	equ	0xFDE
  6431                           postdec2	equ	0xFDD
  6432                           preinc2	equ	0xFDC
  6433                           plusw2	equ	0xFDB
  6434                           fsr2h	equ	0xFDA
  6435                           fsr2l	equ	0xFD9
  6436                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      83
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_Plot->___lwdiv
    _FRAME_AdressOfNeighbors->___wmul
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20086
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   12861
                                             36 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2   10832
                                             31 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     235
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         5     3      2     664
                                             13 COMRAM     5     3      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        8     6      2     193
                                              5 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     743
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     367
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             20    16      4    3143
                                             11 COMRAM    20    16      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2199
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     382
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                       10     8      2    1668
                                             13 COMRAM    10     8      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         ___wmul
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0      66       6       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      53       1       88.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B9       3        0.0%
DATA                 0      0     2D9       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 19 13:37:04 2019

              __end_of_FRAME_DeviceReset 0ADC                    ?_FRAME_AveragingTimes 0006  
                           ___awdiv@sign 000B                                       bsr 000FE0  
                    ___wmul@multiplicand 0008                              __CFG_BORV$3 000000  
                      ?_FRAME_AxisStatus 0006                        _FRAME_MapPosition 1530  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                     __size_of_CAN_GenID 00A4                                      l220 0080  
                                    l221 0086                                      l222 008C  
                                    l223 0092                                      l207 0756  
                                    l312 0E78                                      l224 0098  
                                    l216 006E                                      l208 0754  
                                    l217 00DE                                      l218 0074  
                                    l219 007A                                      l340 0950  
                            ?_LED_Update 0001                                      l557 0734  
                                    l558 072C                             __CFG_CPB$OFF 000000  
                     ??_FRAME_AxisStatus 0008                             __CFG_CPD$OFF 000000  
                     ?_FRAME_MapPosition 0006                       __size_of_CAN_Setup 005C  
                           ?_LED_Control 0006                                      wreg 000FE8  
                  __end_of_CAN_TakeFrame 02EC                              ?_INI_OUTPUT 0001  
                 __size_of_INI_LED_Start 0034                 ??_MOCK_Klikniecie_Spadek 0008  
                  __end_of_CAN_SendFrame 08A8                             __CFG_LVP$OFF 000000  
              TRM_DataTransmition@weWyU8 0047             __size_of_INI_GlobalInterrupt 000E  
                    ??_FRAME_MapPosition 0008                             __CFG_WDT$OFF 000000  
                                   l3020 05B0                                     l3012 0578  
                                   l3030 05F6                                     l3022 05BE  
                                   l3014 0586                                     l3032 0604  
                                   l3024 05CC                                     l3016 0594  
                                   l2410 0970                                     l2330 1390  
                                   l3034 061E                                     l3026 05DA  
                                   l3018 05A2                                     l2404 0960  
                                   l1188 10D4                                     l3036 062C  
                                   l3028 05E8                                     l3044 0646  
                                   l2422 0990                                     l2350 08CA  
                                   l3046 06B2                                     l2440 09C0  
                                   l2416 0980                                     l2344 08BA  
                                   l3080 0E54                                     l3128 1364  
                                   l2434 09B0                                     l2362 08EA  
                                   l3138 1384                          __end_of_INI_All 147E  
                                   l2452 09E0                                     l2428 09A0  
                                   l2380 091A                                     l2356 08DA  
                                   l2532 10A2                                     l2446 09D0  
                                   l2374 090A                                     l2534 10AA  
                                   l2392 093A                                     l2368 08FA  
                                   l2544 10CA                                     l2800 03FE  
                                   l3096 11F0                                     l2458 09F2  
                                   l2386 092A                                     l2490 10E6  
                                   l2714 0B7E                                     l2652 07EE  
                                   l2398 094A                                     l2822 0DB8  
                                   l2910 01DC                                     l2902 01C0  
                                   l2806 0406                                     l2912 01E4  
                                   l2904 01C6                                     l2920 01FC  
                                   l2656 08A2                                     l2496 1118  
                                   l2834 0DDE                                     l2850 0E10  
                                   l2930 026C                                     l2914 01EC  
                                   l2906 01CC                                     l2922 023C  
                                   l2746 1158                                     l2860 0F82  
                                   l2692 123E                                     l2676 11AE  
                                   l2836 0DE6                                     l2828 0DC8  
                                   l2940 0290                                     l2932 0272  
                                   l2916 01F4                                     l2908 01D4  
                                   l2854 0E1E                                     l2846 0E06  
                                   l2942 0298                                     l2934 0278  
                                   l2950 02E8                                     l2926 0240  
                                   l2774 106E                                     l2944 02A0  
                                   l2936 0280                                     l2928 025A  
                                   l2880 009E                                     l2768 0ABA  
                                   l2874 0FCC                                     l2938 0288  
                                   l2794 0318                                     l2948 02A8  
                                   l2990 0C1C                                     l2982 0BE6  
                                   l2988 0C12                                     l2996 0C48  
                                   _BIE0 000DFA                        _MOC_Frame_Counter 1496  
                                   u1040 1128                                     u1210 1168  
                                   u1060 10AE                                     u1125 07C4  
                                   u1310 03FC                                     u1320 054E  
                                   u1250 0A48                                     u1420 0150  
                                   u1260 0A60                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   u1360 0DEA                                     u1256 0A4A  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u1266 0A62                                     u1435 0158  
                                   u1480 0C50                                     _IPR3 000FA5  
                                   _IPEN 007E87                                     _PIE3 000FA3  
                                   _PEIE 007F96                                     _LOCK 004A  
                                   _PIR3 000FA4                                     _RCON 000FD0  
            ??_FRAME_AccelerometerStatus 000A                                     _Dane 0044  
                        __end_of_ISR_low 005C                         LED_Control@diode 0006  
                   FRAME_AnalogValue@set 0008                       ?_MOC_Frame_Counter 0006  
                                   _main 135E                         LED_Control@color 000A  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   indf1 000FE7                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 0054                           _CAN_SetupClock 13B6  
                                   prodh 000FF4                                     prodl 000FF3  
                  __end_of_CAN_SetupMask 0DA4            __size_of_TMR1_Update_flag_Get 000A  
                                   start 005C            __size_of_TMR1_Update_flag_Set 000A  
                     __size_of_LED_Error 001E                            __CFG_IESO$OFF 000000  
                     __size_of_LED_Right 004C            __size_of_FRAME_HandleCanFrame 01EA  
                          _LED_Light_Pos 0BB0                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000                      ??_MOC_Frame_Counter 0008  
                         IsInNeighbors@i 000C               ??_MOC_Aktualna_Temperatura 0008  
      FRAME_HandleCanFrame@identyfikator 0024                       __size_of_INI_Timer 0018  
              __end_of_FRAME_MapPosition 1532                         __end_of_LED_Left 1252  
          __size_of_MOCK_PrzyspieszenieX 000A            __size_of_MOCK_PrzyspieszenieY 000A  
          __size_of_MOCK_PrzyspieszenieZ 000A                                    _B0CON 000E20  
                                  _B1CON 000E30                                    _B2CON 000E40  
                                  _B3CON 000E50                                    _B4CON 000E60  
                                  _B5CON 000E70                         __end_of_LOCK_Get 1530  
                                  ?_main 0001                         __end_of_LOCK_Set 1526  
                        __end_of___awdiv 0E28                                    _BSEL0 000DF8  
                        ___awdiv@divisor 0008                                    _T1CON 000FCD  
                                  _IRCF0 007E9C                                    _IRCF1 007E9D  
      FRAME_ExcitationMultiplier@message 0006                                    _IRCF2 007E9E  
                        __end_of___lwdiv 10DE                                    i1l624 004C  
                    __size_of_FRAME_Plot 0058                          ___awdiv@counter 000A  
                                  _MSEL0 000DF0                                    _MSEL1 000DF1  
                                  _MSEL2 000DF2                                    _MSEL3 000DF3  
                                  _TMR1H 000FCF                                    _TMR1L 000FCE  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                            __CFG_PWRT$OFF 000000  
                                  _Flagi 0036                   ?_CAN_MoveBuffIntoFrame 0006  
                          __CFG_WRT0$OFF 000000               __size_of_FRAME_AnalogValue 0002  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                       __end_of_ISR_high 152C                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
              __end_of_MOC_Frame_Counter 14A4                           __CFG_EBTRB$OFF 000000  
                i1TMR1_Update_flag_Set@a 0001                             ?_MOC_NOTWORK 0006  
                                  tablat 000FF5                   __end_of_CAN_SetupClock 13DE  
                                  plusw2 000FDB                                    ttemp5 0055  
                                  ttemp6 0058                                    ttemp7 005C  
                                  status 000FD8                                    wtemp8 0055  
                      __end_of_CAN_GenID 0D04                           __CFG_PBADEN$ON 000000  
                    __size_of_LED_Update 007A                           ?_LED_Light_Pos 000D  
                       _TMR1_Timer_reset 1404                        __end_of_CAN_Setup 0FDA  
                          _INI_LED_Start 132A                    _FRAME_ExcitationValue 1288  
       FRAME_AccelerometerStatus@message 0008                          __initialization 0FDA  
                    __size_of_INI_OUTPUT 001E                         CAN_GenID@frameID 0008  
                           __end_of_main 138C                   ??_FRAME_AveragingTimes 0008  
             __size_of_FRAME_DeviceReset 00E2                 ?_FRAME_AdressOfNeighbors 000C  
                       CAN_GenID@message 0006                _FRAME_AccelerometerStatus 0EA2  
                                 ??_main 0036                   CAN_MoveBuffIntoFrame@i 000A  
                          __activetblptr 000002                         _TMR1_Update_flag 0042  
                  __end_of_IsInNeighbors 112C                          _wartosciSasiada 00C6  
                              ??_INI_All 000B                        __end_of_LED_Error 1446  
                      __end_of_LED_Right 11C6          __size_of_MOCK_Klikniecie_Spadek 000A  
                              ??_ISR_low 0003                                   _CANCON 000F6F  
                       ___awdiv@dividend 0006              FRAME_ExcitationMultiplier@i 0009  
                                 _CIOCON 000F73                          __CFG_BBSIZ$1024 000000  
                      __end_of_INI_Timer 1496                                   i1l3158 004A  
                        ?_CAN_SetupClock 0001                                   _RXB0D0 000F66  
                                 _TMR1IE 007CE8                                   _TMR1IF 007CF0  
                                 _TMR1IP 007CF8                                   _TMR1ON 007E68  
           ??_FRAME_ExcitationMultiplier 0008                           ?_INI_LED_Start 0001  
                         __CFG_XINST$OFF 000000                                   ___wmul 13DE  
                              ??___awdiv 000A                           __CFG_STVREN$ON 000000  
                       LED_Light_Pos@pos 000D               __size_of_FRAME_MapPosition 0002  
                              ??___lwdiv 000A                                   clear_0 1002  
                                 clear_1 1014                                   clear_2 1020  
                       ___awdiv@quotient 000C               ??_FRAME_PrzypisanieDokarty 0008  
               ??i1_TMR1_Update_flag_Set 0003                          __CFG_BOREN$BOHW 000000  
                           __pdataCOMRAM 004B                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
    __size_of_FRAME_ExcitationMultiplier 004E               __size_of_MOC_Frame_Counter 000E  
                   __size_of_LED_Control 0152                 FRAME_MapPosition@message 0006  
                  TMR1_Update_flag_Set@a 0006                               __accesstop 0060  
                __end_of__initialization 1026                             ??_FRAME_Plot 000F  
                    ISR_low@ramkaStanuU8 0048                                ?_LED_Left 0006  
                        ??_LED_Light_Pos 0011                            ___rparam_used 000001  
                 ?_FRAME_ExcitationValue 0006                                ?_LOCK_Get 0001  
                              ?_LOCK_Set 0001          __end_of_FRAME_AdressOfNeighbors 0550  
                 _MOCK_Klikniecie_Spadek 14E4                           __pcstackCOMRAM 0001  
                              LED_Left@a 0006                                LED_Left@b 0008  
                    _INI_GlobalInterrupt 14A4                                ?_ISR_high 0001  
                           ??_LED_Update 0018              __end_of_TRM_DataTransmition 1210  
                  _FRAME_SoftwareVersion 0F18                       __end_of_FRAME_Plot 108C  
                           ??_INI_OUTPUT 0006                                LOCK_Set@k 0006  
                FRAME_AxisStatus@message 0006              IsInNeighbors@message_adress 0006  
                   ?_INI_GlobalInterrupt 0001                __size_of_FRAME_AxisStatus 0036  
                             __pbssBANK0 0060                     __size_of_MOC_NOTWORK 0008  
                        ??_INI_LED_Start 000B                               ??_LED_Left 0008  
                             ??_LOCK_Get 0006                               ??_LOCK_Set 0006  
                     __end_of_LED_Update 0EA2                       __end_of_INI_OUTPUT 1464  
                                ?___wmul 0006                               ??_ISR_high 0001  
                    TMR1_Timer_reset@t1H 0002                      TMR1_Timer_reset@t1L 0001  
                                _ECANCON 000F77                                  _CANSTAT 000F6E  
                ??_CAN_MoveBuffIntoFrame 000A             __end_of_TMR1_Update_flag_Get 1502  
           __end_of_TMR1_Update_flag_Set 14F8          __size_ofi1_TMR1_Update_flag_Set 000A  
           __end_of_FRAME_HandleCanFrame 073A                                  _INI_All 1464  
               __end_of_TMR1_Timer_reset 1428                                  _RXB0DLC 000F65  
                                _RXB0CON 000F60                                  _RXB1CON 000F50  
                  ??_INI_GlobalInterrupt 0006                                  _TXB0CON 000F40  
                                _ISR_low 0018                                  _RXFCON0 000DD4  
                                _DaneCan 003B             __end_of_MOCK_PrzyspieszenieX 14E4  
           __end_of_MOCK_PrzyspieszenieY 14DA             __end_of_MOCK_PrzyspieszenieZ 14D0  
     __end_of_FRAME_ExcitationMultiplier 117A               _FRAME_ExcitationMultiplier 112C  
            FRAME_HandleCanFrame@message 0020                                  __Hparam 0000  
       ??_MOC_Wynikowa_wartosc_roznicowa 0008          ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                __Lparam 0000                   __size_of_CAN_TakeFrame 028C  
                              _CAN_GenID 0C60                                  ___awdiv 0DA4  
                              _CAN_Setup 0F7E                          __size_of___wmul 0026  
                 __size_of_CAN_SendFrame 016E                                  ___lwdiv 108C  
                      LED_Light_Pos@pos2 0014                                  __pcinit 0FDA  
                                __ramtop 0D00                                  __ptext0 135E  
                                __ptext1 11C6                                  __ptext2 0550  
                                __ptext3 1428                                  __ptext4 0F18  
                                __ptext5 0ADC                                  __ptext6 14B2  
                                __ptext7 1516                                  __ptext8 1496  
                                __ptext9 14BC                   ?_FRAME_SoftwareVersion 0006  
                 __size_of_CAN_SetupMask 00A0        __size_of_MOC_Aktualna_Temperatura 000A  
         FRAME_AdressOfNeighbors@nrRamki 000E                ?_MOC_Aktualna_Temperatura 0006  
       __size_of_FRAME_AdressOfNeighbors 0264                         ??_CAN_SetupClock 0006  
         FRAME_AdressOfNeighbors@message 000C                                _LED_Error 1428  
                         __pintcode_body 1526                                _LED_Right 117A  
                   end_of_initialization 1026                            __Lmediumconst 0000  
                                int_func 1526                                _INI_Timer 147E  
                 i1_TMR1_Update_flag_Set 1502         TRM_DataTransmition@czujnikWeWyU8 0046  
                             ?_CAN_GenID 0006                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                             ?_CAN_Setup 0001            __size_of_FRAME_AveragingTimes 0036  
                   CAN_SendFrame@message 000B                            LED_Update@Red 0049  
                          _CAN_TakeFrame 0060                            _CAN_SendFrame 073A  
                             ?_LED_Error 0001                               ?_LED_Right 0006  
                       _FRAME_AxisStatus 12BE                  ??_FRAME_ExcitationValue 0008  
                             ?_INI_Timer 0001                  ?_MOCK_Klikniecie_Spadek 0006  
                        _ramkaCanRxKarty 0060                     _TMR1_Update_flag_Get 14F8  
                        _ramkaCanTxKarty 00B5                     _TMR1_Update_flag_Set 14EE  
                          _CAN_SetupMask 0D04                        __size_of_LED_Left 0042  
                   _FRAME_HandleCanFrame 0550                   __size_of_IsInNeighbors 004E  
                      __size_of_LOCK_Get 0004                        __size_of_LOCK_Set 0008  
                         CAN_TakeFrame@k 0017                           __end_of___wmul 1404  
                          __pidataCOMRAM 150C                        __size_of_ISR_high 1524  
                   _MOCK_PrzyspieszenieX 14DA                     _MOCK_PrzyspieszenieY 14D0  
                   _MOCK_PrzyspieszenieZ 14C6                               LED_Right@a 0006  
                             LED_Right@b 000A                    MOC_Frame_Counter@zeta 004B  
                          ??_LED_Control 0008                      start_initialization 0FDA  
                         ?_CAN_TakeFrame 000E                           ?_CAN_SendFrame 000B  
         __end_of_MOCK_Klikniecie_Spadek 14EE                         __CFG_OSC$IRCIO67 000000  
      __size_of_FRAME_PrzypisanieDokarty 0036                ?_FRAME_PrzypisanieDokarty 0006  
                  ?_TMR1_Update_flag_Get 0006                    ?_TMR1_Update_flag_Set 0006  
                         ?_CAN_SetupMask 0001                    __end_of_LED_Light_Pos 0C60  
                  ?_FRAME_HandleCanFrame 0020                              ??_CAN_GenID 0009  
                               ??___wmul 000A                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                    ?_MOCK_PrzyspieszenieX 0006  
                  ?_MOCK_PrzyspieszenieY 0006                    ?_MOCK_PrzyspieszenieZ 0006  
               CAN_MoveBuffIntoFrame@Buf 0008     __end_of_FRAME_SensorExcitationStatus 0BB0  
  __size_of_FRAME_SensorExcitationStatus 00D4                 CAN_MoveBuffIntoFrame@Ram 0006  
           _FRAME_SensorExcitationStatus 0ADC           __size_of_CAN_MoveBuffIntoFrame 002A  
                            __pbssBIGRAM 00C6            __end_of_CAN_MoveBuffIntoFrame 13B6  
                        _Fulfillment_Lvl 0051                              __pbssCOMRAM 0036  
                               ?_INI_All 0001                  _FRAME_AdressOfNeighbors 02EC  
                          _IsInNeighbors 10DE                        ?_TMR1_Timer_reset 0001  
                            _BRGCON1bits 000F70                              _BRGCON2bits 000F71  
                            _BRGCON3bits 000F72                                 ?_ISR_low 0001  
                          ??_MOC_NOTWORK 0008                       ??_TMR1_Timer_reset 0001  
                            ??_LED_Error 000B                              ??_LED_Right 0008  
           __size_of_TRM_DataTransmition 004A                 FRAME_AdressOfNeighbors@i 001E  
                    __end_of_LED_Control 09FA              ?_FRAME_ExcitationMultiplier 0006  
                            ??_INI_Timer 0006                    __end_of_INI_LED_Start 135E  
                       ___lwdiv@dividend 0006                                __pintcode 0008  
                               ?___awdiv 0006                  ??_FRAME_SoftwareVersion 0008  
       __end_of_MOC_Aktualna_Temperatura 14C6                                 ?___lwdiv 0006  
                      FRAME_Plot@message 000D                              __pintcodelo 0018  
                     CAN_TakeFrame@op_id 0014              __end_of_INI_GlobalInterrupt 14B2  
                        ??_CAN_TakeFrame 0010            ?_FRAME_SensorExcitationStatus 000E  
 __end_of_MOC_Wynikowa_wartosc_roznicowa 14BC  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
         _MOC_Wynikowa_wartosc_roznicowa 14B2                              _COMSTATbits 000F74  
                         ?_IsInNeighbors 0006                          ??_CAN_SendFrame 000D  
                       ___lwdiv@quotient 000A                  ?i1_TMR1_Update_flag_Set 0001  
            FRAME_AveragingTimes@message 0006                   ??_TMR1_Update_flag_Get 0008  
                 ??_TMR1_Update_flag_Set 0008                          ??_CAN_SetupMask 0006  
                         ___wmul@product 000A                                 _LED_Left 1210  
                 ??_FRAME_HandleCanFrame 0022                     CAN_TakeFrame@message 000E  
                    __end_of_MOC_NOTWORK 151E                                 _LOCK_Get 152C  
                   CAN_TakeFrame@tempCON 0016                                 _LOCK_Set 151E  
                               _RXB0EIDH 000F63                                 _RXB0EIDL 000F64  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                               _RXB0SIDH 000F61                                 _RXB0SIDL 000F62  
                               _RXF0EIDH 000F02                                 _RXF0EIDL 000F03  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXF2EIDH 000F0A                                 _RXF2EIDL 000F0B  
                               _RXF3EIDH 000F0E                                 _RXF3EIDL 000F0F  
                               _RXF4EIDH 000F12                                 _RXF4EIDL 000F13  
                               _RXF5EIDH 000F16                                 _RXF5EIDL 000F17  
                               _RXF0SIDH 000F00                                 _RXF0SIDL 000F01  
                               _RXF1SIDH 000F04                                 _RXF1SIDL 000F05  
                               _RXF2SIDH 000F08                                 _RXF2SIDL 000F09  
                               _RXF3SIDH 000F0C                                 _RXF3SIDL 000F0D  
                               _ISR_high 0008                                 _RXF5SIDH 000F14  
                               _RXF5SIDL 000F15                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                                 _RXM1EIDH 000F1E  
                               _RXM1EIDL 000F1F                   ??_MOCK_PrzyspieszenieX 0008  
                 ??_MOCK_PrzyspieszenieY 0008                   ??_MOCK_PrzyspieszenieZ 0008  
                               _RXM0SIDH 000F18                                 _RXM0SIDL 000F19  
                               _RXM1SIDH 000F1C                                 _RXM1SIDL 000F1D  
               __end_of_FRAME_AxisStatus 12F4                ??_FRAME_AdressOfNeighbors 0010  
                      ___wmul@multiplier 0006                         _DetectorLedRadar 003F  
                            _LED_Control 08A8                         __size_of_INI_All 001A  
           FRAME_ExcitationValue@message 0006           __end_ofi1_TMR1_Update_flag_Set 150C  
                              copy_data0 0FEE                         __size_of_ISR_low 0044  
     __size_of_FRAME_AccelerometerStatus 0076             __end_of_FRAME_AveragingTimes 132A  
             ?_FRAME_AccelerometerStatus 0008           __size_of_FRAME_ExcitationValue 0036  
          __end_of_FRAME_ExcitationValue 12BE                                 __Hrparam 0000  
                           _RXB0SIDLbits 000F62                                 __Lrparam 0000  
                       __size_of___awdiv 0084                         __size_of___lwdiv 0052  
                        ??_IsInNeighbors 0008                 _MOC_Aktualna_Temperatura 14BC  
        FRAME_PrzypisanieDokarty@message 0006                       LED_Light_Pos@flage 0016  
                     LED_Light_Pos@color 0011         __end_of_FRAME_PrzypisanieDokarty 1288  
                           _RXF0SIDLbits 000F01                 FRAME_AnalogValue@message 0006  
                        ___lwdiv@divisor 0008                             _RXF1SIDLbits 000F05  
                        ___lwdiv@counter 000C                                 __ptext10 151E  
                               __ptext11 152C                                 __ptext20 12F4  
                               __ptext12 10DE                                 __ptext21 1532  
                               __ptext13 1252                                 __ptext30 0C60  
                               __ptext22 02EC                                 __ptext14 1034  
                               __ptext31 0060                                 __ptext23 13DE  
                               __ptext15 1530                                 __ptext40 1210  
                               __ptext32 0DA4                                 __ptext24 0EA2  
                               __ptext16 1288                                 __ptext41 1464  
                               __ptext33 138C                                 __ptext25 14C6  
                               __ptext17 112C                                 __ptext42 147E  
                               __ptext34 14EE                                 __ptext26 14D0  
                               __ptext18 09FA                                 __ptext51 1502  
                               __ptext43 1446                                 __ptext35 14F8  
                               __ptext27 14DA                                 __ptext19 12BE  
                               __ptext52 1404                                 __ptext44 132A  
                               __ptext36 0E28                                 __ptext28 14E4  
         ??_FRAME_SensorExcitationStatus 0010                                 __ptext45 08A8  
                               __ptext37 0BB0                                 __ptext29 073A  
                               __ptext46 14A4                                 __ptext38 108C  
                               __ptext47 0F7E                                 __ptext39 117A  
                               __ptext48 0D04                                 __ptext49 13B6  
          TRM_DataTransmition@canMessage 0025                             _RXF2SIDLbits 000F09  
                            _MOC_NOTWORK 1516                             _RXF3SIDLbits 000F0D  
                           _RXF4SIDLbits 000F11                 FRAME_DeviceReset@message 0006  
      __end_of_FRAME_AccelerometerStatus 0F18                             _RXF5SIDLbits 000F15  
                             _FRAME_Plot 1034                            __size_of_main 002E  
                __size_of_CAN_SetupClock 0028                                 int$flags 0054  
                    _TRM_DataTransmition 11C6                              _RXB0DLCbits 000F65  
                             _LED_Update 0E28                              _RXB0CONbits 000F60  
                             _INTCONbits 000FF2                               _INI_OUTPUT 1446  
                      _FRAME_AnalogValue 1532                     ?_TRM_DataTransmition 0001  
           FRAME_SoftwareVersion@message 0006                                 intlevel1 0000  
                               intlevel2 0000                       ?_FRAME_AnalogValue 0006  
    FRAME_SensorExcitationStatus@message 000E                              _TXB0CONbits 000F40  
                    ??_FRAME_AnalogValue 000A                __size_of_TMR1_Timer_reset 0024  
               LED_Light_Pos@fulfillment 000F                     _FRAME_AveragingTimes 12F4  
         __size_of_FRAME_SoftwareVersion 0066                        _FRAME_DeviceReset 09FA  
          __end_of_FRAME_SoftwareVersion 0F7E                       ?_FRAME_DeviceReset 0006  
                        LED_Update@Green 0053                __end_of_FRAME_AnalogValue 1534  
                 __size_of_LED_Light_Pos 00B0                    _CAN_MoveBuffIntoFrame 138C  
                             _WDTCONbits 000FD1                      ??_FRAME_DeviceReset 0008  
                  ??_TRM_DataTransmition 0025                 _FRAME_PrzypisanieDokarty 1252  
                 LED_Light_Pos@LED_array 0012                           LED_Update@pos1 004F  
                         LED_Update@pos2 004D                              ?_FRAME_Plot 000D  
