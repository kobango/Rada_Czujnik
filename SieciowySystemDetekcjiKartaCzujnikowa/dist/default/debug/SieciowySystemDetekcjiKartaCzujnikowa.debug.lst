

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 22 09:52:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4680 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  000FFE                     __pidataCOMRAM:
    92                           	opt callstack 0
    93                           
    94                           ;initializer for MOC_Frame_Counter@zeta
    95  000FFE  0011               	dw	17
    96                           
    97                           ;initializer for LED_Update@pos2
    98  001000  0001               	dw	1
    99                           
   100                           ;initializer for LED_Update@pos1
   101  001002  0001               	dw	1
   102                           
   103                           ;initializer for _Fulfillment_Lvl
   104  001004  0014               	dw	20
   105                           
   106                           ;initializer for LED_Update@Green
   107  001006  01                 	db	1
   108  0000                     _MSEL3	set	3571
   109  0000                     _MSEL2	set	3570
   110  0000                     _MSEL1	set	3569
   111  0000                     _MSEL0	set	3568
   112  0000                     _BIE0	set	3578
   113  0000                     _BSEL0	set	3576
   114  0000                     _B5CON	set	3696
   115  0000                     _B4CON	set	3680
   116  0000                     _B3CON	set	3664
   117  0000                     _B2CON	set	3648
   118  0000                     _B1CON	set	3632
   119  0000                     _B0CON	set	3616
   120  0000                     _TXB0CONbits	set	3904
   121  0000                     _RXF2EIDL	set	3851
   122  0000                     _RXF2EIDH	set	3850
   123  0000                     _RXF2SIDLbits	set	3849
   124  0000                     _RXF2SIDL	set	3849
   125  0000                     _RXF2SIDH	set	3848
   126  0000                     _RXF1EIDL	set	3847
   127  0000                     _RXF1EIDH	set	3846
   128  0000                     _RXF1SIDLbits	set	3845
   129  0000                     _RXF1SIDL	set	3845
   130  0000                     _RXF1SIDH	set	3844
   131  0000                     _RXF0EIDL	set	3843
   132  0000                     _RXF0EIDH	set	3842
   133  0000                     _RXF0SIDLbits	set	3841
   134  0000                     _RXF0SIDL	set	3841
   135  0000                     _RXF0SIDH	set	3840
   136  0000                     _RXM1EIDL	set	3871
   137  0000                     _RXM1EIDH	set	3870
   138  0000                     _RXM1SIDL	set	3869
   139  0000                     _RXM1SIDH	set	3868
   140  0000                     _RXM0EIDL	set	3867
   141  0000                     _RXM0EIDH	set	3866
   142  0000                     _RXM0SIDL	set	3865
   143  0000                     _RXM0SIDH	set	3864
   144  0000                     _RXB1CON	set	3920
   145  0000                     _TXB0CON	set	3904
   146  0000                     _TRISC	set	3988
   147  0000                     _LATC	set	3979
   148  0000                     _LATE	set	3981
   149  0000                     _LATA	set	3977
   150  0000                     _LATB	set	3978
   151  0000                     _LATD	set	3980
   152  0000                     _TRISD	set	3989
   153  0000                     _TRISE	set	3990
   154  0000                     _TRISB	set	3987
   155  0000                     _TRISA	set	3986
   156  0000                     _RXB0DLCbits	set	3941
   157  0000                     _RXB0DLC	set	3941
   158  0000                     _RXB0SIDH	set	3937
   159  0000                     _RXB0SIDLbits	set	3938
   160  0000                     _RXB0SIDL	set	3938
   161  0000                     _RXB0EIDH	set	3939
   162  0000                     _RXB0EIDL	set	3940
   163  0000                     _COMSTATbits	set	3956
   164  0000                     _RXB0CONbits	set	3936
   165  0000                     _BRGCON3bits	set	3954
   166  0000                     _BRGCON2bits	set	3953
   167  0000                     _BRGCON1bits	set	3952
   168  0000                     _CIOCON	set	3955
   169  0000                     _ECANCON	set	3959
   170  0000                     _RXB0CON	set	3936
   171  0000                     _CANSTAT	set	3950
   172  0000                     _CANCON	set	3951
   173  0000                     _RXB0D0	set	3942
   174  0000                     _WDTCONbits	set	4049
   175  0000                     _RCONbits	set	4048
   176  0000                     _T1CON	set	4045
   177  0000                     _TMR1H	set	4047
   178  0000                     _TMR1L	set	4046
   179  0000                     _PIR3	set	4004
   180  0000                     _IPR3	set	4005
   181  0000                     _PIE3	set	4003
   182  0000                     _RCON	set	4048
   183  0000                     _TMR1IF	set	31984
   184  0000                     _TMR1IP	set	31992
   185  0000                     _IPEN	set	32391
   186  0000                     _TMR1ON	set	32360
   187  0000                     _TMR1IE	set	31976
   188  0000                     _IRCF0	set	32412
   189  0000                     _IRCF1	set	32413
   190  0000                     _IRCF2	set	32414
   191  0000                     _INTCONbits	set	4082
   192  0000                     _PEIE	set	32662
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  000CC0                     __pcinit:
   198                           	opt callstack 0
   199  000CC0                     start_initialization:
   200                           	opt callstack 0
   201  000CC0                     __initialization:
   202                           	opt callstack 0
   203                           
   204                           ; Initialize objects allocated to COMRAM (9 bytes)
   205                           ; load TBLPTR registers with __pidataCOMRAM
   206  000CC0  0EFE               	movlw	low __pidataCOMRAM
   207  000CC2  6EF6               	movwf	tblptrl,c
   208  000CC4  0E0F               	movlw	high __pidataCOMRAM
   209  000CC6  6EF7               	movwf	tblptrh,c
   210  000CC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   211  000CCA  6EF8               	movwf	tblptru,c
   212  000CCC  EE00  F04B         	lfsr	0,__pdataCOMRAM
   213  000CD0  EE10 F009          	lfsr	1,9
   214  000CD4                     copy_data0:
   215  000CD4  0009               	tblrd		*+
   216  000CD6  CFF5 FFEE          	movff	tablat,postinc0
   217  000CDA  50E5               	movf	postdec1,w,c
   218  000CDC  50E1               	movf	fsr1l,w,c
   219  000CDE  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to BIGRAM (544 bytes)
   222  000CE0  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   223  000CE4  EE12 F020          	lfsr	1,544
   224  000CE8                     clear_0:
   225  000CE8  6AEE               	clrf	postinc0,c
   226  000CEA  50E5               	movf	postdec1,w,c
   227  000CEC  50E1               	movf	fsr1l,w,c
   228  000CEE  E1FC               	bnz	clear_0
   229  000CF0  50E2               	movf	fsr1h,w,c
   230  000CF2  E1FA               	bnz	clear_0
   231                           
   232                           ; Clear objects allocated to BANK0 (102 bytes)
   233  000CF4  EE00  F060         	lfsr	0,__pbssBANK0
   234  000CF8  0E66               	movlw	102
   235  000CFA                     clear_1:
   236  000CFA  6AEE               	clrf	postinc0,c
   237  000CFC  06E8               	decf	wreg,f,c
   238  000CFE  E1FD               	bnz	clear_1
   239                           
   240                           ; Clear objects allocated to COMRAM (21 bytes)
   241  000D00  EE00  F036         	lfsr	0,__pbssCOMRAM
   242  000D04  0E15               	movlw	21
   243  000D06                     clear_2:
   244  000D06  6AEE               	clrf	postinc0,c
   245  000D08  06E8               	decf	wreg,f,c
   246  000D0A  E1FD               	bnz	clear_2
   247  000D0C                     end_of_initialization:
   248                           	opt callstack 0
   249  000D0C                     __end_of__initialization:
   250                           	opt callstack 0
   251  000D0C  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   252  000D0E  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   253  000D10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   254  000D12  6EF8               	movwf	tblptru,c
   255  000D14  0100               	movlb	0
   256  000D16  EF3C  F007         	goto	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMRAM
   259  000036                     __pbssCOMRAM:
   260                           	opt callstack 0
   261  000036                     _Flagi:
   262                           	opt callstack 0
   263  000036                     	ds	5
   264  00003B                     _DaneCan:
   265                           	opt callstack 0
   266  00003B                     	ds	4
   267  00003F                     _DetectorLedRadar:
   268                           	opt callstack 0
   269  00003F                     	ds	3
   270  000042                     _TMR1_Update_flag:
   271                           	opt callstack 0
   272  000042                     	ds	2
   273  000044                     _Dane:
   274                           	opt callstack 0
   275  000044                     	ds	2
   276  000046                     	ds	1
   277  000047                     	ds	1
   278  000048                     ISR_low@ramkaStanuU8:
   279                           	opt callstack 0
   280  000048                     	ds	1
   281  000049                     	ds	1
   282  00004A                     _LOCK:
   283                           	opt callstack 0
   284  00004A                     	ds	1
   285                           
   286                           	psect	dataCOMRAM
   287  00004B                     __pdataCOMRAM:
   288                           	opt callstack 0
   289  00004B                     MOC_Frame_Counter@zeta:
   290                           	opt callstack 0
   291  00004B                     	ds	2
   292  00004D                     LED_Update@pos2:
   293                           	opt callstack 0
   294  00004D                     	ds	2
   295  00004F                     LED_Update@pos1:
   296                           	opt callstack 0
   297  00004F                     	ds	2
   298  000051                     _Fulfillment_Lvl:
   299                           	opt callstack 0
   300  000051                     	ds	2
   301  000053                     LED_Update@Green:
   302                           	opt callstack 0
   303  000053                     	ds	1
   304                           
   305                           	psect	bssBANK0
   306  000060                     __pbssBANK0:
   307                           	opt callstack 0
   308  000060                     _ramkaCanRxKarty:
   309                           	opt callstack 0
   310  000060                     	ds	85
   311  0000B5                     _ramkaCanTxKarty:
   312                           	opt callstack 0
   313  0000B5                     	ds	17
   314                           
   315                           	psect	bssBIGRAM
   316  0000C6                     __pbssBIGRAM:
   317                           	opt callstack 0
   318  0000C6                     _wartosciSasiada:
   319                           	opt callstack 0
   320  0000C6                     	ds	544
   321                           
   322                           	psect	cstackCOMRAM
   323  000001                     __pcstackCOMRAM:
   324                           	opt callstack 0
   325  000001                     TMR1_Timer_reset@t1L:
   326                           	opt callstack 0
   327  000001                     i1TMR1_Update_flag_Set@a:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0x0
   331  000001                     	ds	1
   332  000002                     TMR1_Timer_reset@t1H:
   333                           	opt callstack 0
   334                           
   335                           ; 1 bytes @ 0x1
   336  000002                     	ds	1
   337  000003                     ??_ISR_low:
   338  000003                     
   339                           ; 1 bytes @ 0x2
   340  000003                     	ds	3
   341  000006                     ??_CAN_Setup:
   342  000006                     ?_TMR1_Update_flag_Get:
   343                           	opt callstack 0
   344  000006                     ?_LED_Right:
   345                           	opt callstack 0
   346  000006                     ?_LED_Left:
   347                           	opt callstack 0
   348  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   349                           	opt callstack 0
   350  000006                     ?_MOC_Frame_Counter:
   351                           	opt callstack 0
   352  000006                     ?_MOC_Aktualna_Temperatura:
   353                           	opt callstack 0
   354  000006                     ?_MOC_NOTWORK:
   355                           	opt callstack 0
   356  000006                     ?___wmul:
   357                           	opt callstack 0
   358  000006                     ?___awdiv:
   359                           	opt callstack 0
   360  000006                     ?___lwdiv:
   361                           	opt callstack 0
   362  000006                     LOCK_Set@k:
   363                           	opt callstack 0
   364  000006                     CAN_MoveBuffIntoFrame@Ram:
   365                           	opt callstack 0
   366  000006                     CAN_GenID@message:
   367                           	opt callstack 0
   368  000006                     LED_Right@a:
   369                           	opt callstack 0
   370  000006                     LED_Left@a:
   371                           	opt callstack 0
   372  000006                     LED_Control@diode:
   373                           	opt callstack 0
   374  000006                     TMR1_Update_flag_Set@a:
   375                           	opt callstack 0
   376  000006                     ___wmul@multiplier:
   377                           	opt callstack 0
   378  000006                     ___awdiv@dividend:
   379                           	opt callstack 0
   380  000006                     ___lwdiv@dividend:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x5
   384  000006                     	ds	2
   385  000008                     ??_LED_Right:
   386  000008                     CAN_GenID@frameID:
   387                           	opt callstack 0
   388  000008                     CAN_MoveBuffIntoFrame@Buf:
   389                           	opt callstack 0
   390  000008                     LED_Left@b:
   391                           	opt callstack 0
   392  000008                     FRAME_SensorExcitationStatus@message:
   393                           	opt callstack 0
   394  000008                     ___wmul@multiplicand:
   395                           	opt callstack 0
   396  000008                     ___awdiv@divisor:
   397                           	opt callstack 0
   398  000008                     ___lwdiv@divisor:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0x7
   402  000008                     	ds	1
   403  000009                     ??_CAN_GenID:
   404                           
   405                           ; 1 bytes @ 0x8
   406  000009                     	ds	1
   407  00000A                     CAN_MoveBuffIntoFrame@i:
   408                           	opt callstack 0
   409  00000A                     LED_Control@color:
   410                           	opt callstack 0
   411  00000A                     ___awdiv@counter:
   412                           	opt callstack 0
   413  00000A                     LED_Right@b:
   414                           	opt callstack 0
   415  00000A                     ___wmul@product:
   416                           	opt callstack 0
   417  00000A                     ___lwdiv@quotient:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x9
   421  00000A                     	ds	1
   422  00000B                     ___awdiv@sign:
   423                           	opt callstack 0
   424  00000B                     CAN_SendFrame@message:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0xA
   428  00000B                     	ds	1
   429  00000C                     ___lwdiv@counter:
   430                           	opt callstack 0
   431  00000C                     FRAME_AdressOfNeighbors@message:
   432                           	opt callstack 0
   433  00000C                     ___awdiv@quotient:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0xB
   437  00000C                     	ds	1
   438  00000D                     ??_CAN_SendFrame:
   439  00000D                     LED_Light_Pos@pos:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0xC
   443  00000D                     	ds	1
   444  00000E                     CAN_TakeFrame@message:
   445                           	opt callstack 0
   446  00000E                     FRAME_AdressOfNeighbors@nrRamki:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0xD
   450  00000E                     	ds	1
   451  00000F                     LED_Light_Pos@fulfillment:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0xE
   455  00000F                     	ds	1
   456  000010                     ??_CAN_TakeFrame:
   457  000010                     ??_FRAME_AdressOfNeighbors:
   458                           
   459                           ; 1 bytes @ 0xF
   460  000010                     	ds	1
   461  000011                     LED_Light_Pos@color:
   462                           	opt callstack 0
   463                           
   464                           ; 1 bytes @ 0x10
   465  000011                     	ds	1
   466  000012                     CAN_TakeFrame@tempCON:
   467                           	opt callstack 0
   468  000012                     LED_Light_Pos@LED_array:
   469                           	opt callstack 0
   470                           
   471                           ; 2 bytes @ 0x11
   472  000012                     	ds	1
   473  000013                     CAN_TakeFrame@k:
   474                           	opt callstack 0
   475                           
   476                           ; 1 bytes @ 0x12
   477  000013                     	ds	1
   478  000014                     LED_Light_Pos@pos2:
   479                           	opt callstack 0
   480                           
   481                           ; 2 bytes @ 0x13
   482  000014                     	ds	2
   483  000016                     LED_Light_Pos@flage:
   484                           	opt callstack 0
   485                           
   486                           ; 2 bytes @ 0x15
   487  000016                     	ds	2
   488  000018                     
   489                           ; 1 bytes @ 0x17
   490  000018                     	ds	6
   491  00001E                     FRAME_AdressOfNeighbors@i:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x1D
   495  00001E                     	ds	2
   496  000020                     FRAME_HandleCanFrame@message:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x1F
   500  000020                     	ds	2
   501  000022                     ??_FRAME_HandleCanFrame:
   502                           
   503                           ; 1 bytes @ 0x21
   504  000022                     	ds	2
   505  000024                     FRAME_HandleCanFrame@identyfikator:
   506                           	opt callstack 0
   507                           
   508                           ; 1 bytes @ 0x23
   509  000024                     	ds	1
   510  000025                     TRM_DataTransmition@canMessage:
   511                           	opt callstack 0
   512                           
   513                           ; 17 bytes @ 0x24
   514  000025                     	ds	17
   515  000036                     
   516                           ; 1 bytes @ 0x35
   517 ;;
   518 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   519 ;;
   520 ;; *************** function _main *****************
   521 ;; Defined at:
   522 ;;		line 94 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels required when called:    7
   542 ;; This function calls:
   543 ;;		_INI_All
   544 ;;		_LED_Update
   545 ;;		_TMR1_Update_flag_Get
   546 ;;		_TMR1_Update_flag_Set
   547 ;;		_TRM_DataTransmition
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text0
   554  000E78                     __ptext0:
   555                           	opt callstack 0
   556  000E78                     _main:
   557                           	opt callstack 24
   558                           
   559                           ;main.c: 96:     INI_All();
   560                           
   561                           ;incstack = 0
   562  000E78  ECBF  F007         	call	_INI_All	;wreg free
   563                           
   564                           ;main.c: 98:     RCON = 0xFF;
   565  000E7C  68D0               	setf	4048,c	;volatile
   566  000E7E                     l2831:
   567                           
   568                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   569  000E7E  B03F               	btfsc	_DetectorLedRadar,0,c
   570                           
   571                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   572  000E80  903F               	bcf	_DetectorLedRadar,0,c
   573                           
   574                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   575  000E82  ECF5  F007         	call	_TMR1_Update_flag_Get	;wreg free
   576  000E86  0406               	decf	?_TMR1_Update_flag_Get,w,c
   577  000E88  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   578  000E8A  A4D8               	btfss	status,2,c
   579  000E8C  D008               	goto	l2841
   580                           
   581                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   582  000E8E  ECC3  F005         	call	_LED_Update	;wreg free
   583                           
   584                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   585  000E92  0E00               	movlw	0
   586  000E94  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   587  000E96  0E00               	movlw	0
   588  000E98  6E06               	movwf	TMR1_Update_flag_Set@a,c
   589  000E9A  ECF0  F007         	call	_TMR1_Update_flag_Set	;wreg free
   590  000E9E                     l2841:
   591                           
   592                           ;main.c: 115:         TRM_DataTransmition();
   593  000E9E  ECDC  F006         	call	_TRM_DataTransmition	;wreg free
   594  000EA2  0004               	clrwdt		;# 
   595                           
   596                           ;main.c: 117:     }
   597  000EA4  D7EC               	goto	l2831
   598  000EA6                     __end_of_main:
   599                           	opt callstack 0
   600                           
   601 ;; *************** function _TRM_DataTransmition *****************
   602 ;; Defined at:
   603 ;;		line 19 in file "TRM.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  canMessage     17   36[COMRAM] struct .
   608 ;;  i               1    0        unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   619 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   621 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   622 ;;Total ram usage:       17 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    6
   625 ;; This function calls:
   626 ;;		_CAN_TakeFrame
   627 ;;		_FRAME_HandleCanFrame
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text1
   634  000DB8                     __ptext1:
   635                           	opt callstack 0
   636  000DB8                     _TRM_DataTransmition:
   637                           	opt callstack 24
   638                           
   639                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   640                           
   641                           ;incstack = 0
   642  000DB8  A03B               	btfss	_DaneCan,0,c
   643  000DBA  D013               	goto	l2799
   644                           
   645                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   646  000DBC  0E02               	movlw	2
   647  000DBE  6E26               	movwf	TRM_DataTransmition@canMessage+1,c
   648                           
   649                           ;TRM.c: 30:         canMessage.id.Val = 0;
   650  000DC0  0E00               	movlw	0
   651  000DC2  6E29               	movwf	TRM_DataTransmition@canMessage+4,c
   652  000DC4  0E00               	movlw	0
   653  000DC6  6E2A               	movwf	TRM_DataTransmition@canMessage+5,c
   654  000DC8  0E00               	movlw	0
   655  000DCA  6E2B               	movwf	TRM_DataTransmition@canMessage+6,c
   656  000DCC  0E00               	movlw	0
   657  000DCE  6E2C               	movwf	TRM_DataTransmition@canMessage+7,c
   658                           
   659                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   660  000DD0  0E04               	movlw	4
   661  000DD2  6E2B               	movwf	TRM_DataTransmition@canMessage+6,c
   662                           
   663                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   664  000DD4  0E25               	movlw	low TRM_DataTransmition@canMessage
   665  000DD6  6E20               	movwf	FRAME_HandleCanFrame@message,c
   666  000DD8  0E00               	movlw	high TRM_DataTransmition@canMessage
   667  000DDA  6E21               	movwf	FRAME_HandleCanFrame@message+1,c
   668  000DDC  EC00  F004         	call	_FRAME_HandleCanFrame	;wreg free
   669                           
   670                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   671  000DE0  903B               	bcf	_DaneCan,0,c
   672  000DE2                     l2799:
   673                           
   674                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   675  000DE2  0E25               	movlw	low TRM_DataTransmition@canMessage
   676  000DE4  6E0E               	movwf	CAN_TakeFrame@message,c
   677  000DE6  0E00               	movlw	high TRM_DataTransmition@canMessage
   678  000DE8  6E0F               	movwf	CAN_TakeFrame@message+1,c
   679  000DEA  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   680  000DEE  0900               	iorlw	0
   681  000DF0  B4D8               	btfsc	status,2,c
   682  000DF2  0012               	return	
   683                           
   684                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   685  000DF4  0E25               	movlw	low TRM_DataTransmition@canMessage
   686  000DF6  6E20               	movwf	FRAME_HandleCanFrame@message,c
   687  000DF8  0E00               	movlw	high TRM_DataTransmition@canMessage
   688  000DFA  6E21               	movwf	FRAME_HandleCanFrame@message+1,c
   689  000DFC  EC00  F004         	call	_FRAME_HandleCanFrame	;wreg free
   690                           
   691                           ;TRM.c: 67:         }
   692  000E00  0012               	return		;funcret
   693  000E02                     __end_of_TRM_DataTransmition:
   694                           	opt callstack 0
   695                           
   696 ;; *************** function _FRAME_HandleCanFrame *****************
   697 ;; Defined at:
   698 ;;		line 486 in file "FRAME.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  message         2   31[COMRAM] PTR struct .
   701 ;;		 -> TRM_DataTransmition@canMessage(17), 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  identyfikato    1   35[COMRAM] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;Total ram usage:        5 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    5
   720 ;; This function calls:
   721 ;;		_CAN_GenID
   722 ;;		_CAN_SendFrame
   723 ;;		_FRAME_AdressOfNeighbors
   724 ;;		_FRAME_SensorExcitationStatus
   725 ;;		_LED_Error
   726 ;;		___awdiv
   727 ;; This function is called by:
   728 ;;		_TRM_DataTransmition
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text2
   733  000800                     __ptext2:
   734                           	opt callstack 0
   735  000800                     _FRAME_HandleCanFrame:
   736                           	opt callstack 24
   737                           
   738                           ;FRAME.c: 486: void FRAME_HandleCanFrame(mID * message);FRAME.c: 487: {;FRAME.c: 488:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   739                           
   740                           ;incstack = 0
   741  000800  EE20 F006          	lfsr	2,6
   742  000804  5020               	movf	FRAME_HandleCanFrame@message,w,c
   743  000806  26D9               	addwf	fsr2l,f,c
   744  000808  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   745  00080A  22DA               	addwfc	fsr2h,f,c
   746  00080C  50DF               	movf	indf2,w,c
   747  00080E  6E22               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   748  000810  5022               	movf	??_FRAME_HandleCanFrame,w,c
   749  000812  6E06               	movwf	___awdiv@dividend,c
   750  000814  6A07               	clrf	___awdiv@dividend+1,c
   751  000816  0E00               	movlw	0
   752  000818  6E09               	movwf	___awdiv@divisor+1,c
   753  00081A  0E04               	movlw	4
   754  00081C  6E08               	movwf	___awdiv@divisor,c
   755  00081E  EC81  F005         	call	___awdiv	;wreg free
   756  000822  5006               	movf	?___awdiv,w,c
   757  000824  6E24               	movwf	FRAME_HandleCanFrame@identyfikator,c
   758                           
   759                           ;FRAME.c: 491:     switch(identyfikator)
   760  000826  D014               	goto	l2747
   761  000828                     l2741:
   762                           
   763                           ;FRAME.c: 494:             FRAME_SensorExcitationStatus(message);
   764  000828  C020  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   765  00082C  C021  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   766  000830  EC78  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   767                           
   768                           ;FRAME.c: 495:             break;
   769  000834  D019               	goto	l2749
   770  000836                     l2743:
   771                           
   772                           ;FRAME.c: 538:           FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   773  000836  C020  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   774  00083A  C021  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   775  00083E  0EF0               	movlw	240
   776  000840  2424               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   777  000842  6E0E               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   778  000844  6A0F               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   779  000846  0EFF               	movlw	255
   780  000848  220F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   781  00084A  EC6E  F001         	call	_FRAME_AdressOfNeighbors	;wreg free
   782                           
   783                           ;FRAME.c: 540:             break;
   784  00084E  D00C               	goto	l2749
   785  000850                     l2747:
   786  000850  5024               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   787  000852  6E22               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   788  000854  6A23               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   789                           
   790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   791                           ; Switch size 1, requested type "simple"
   792                           ; Number of cases is 1, Range of values is 0 to 0
   793                           ; switch strategies available:
   794                           ; Name         Instructions Cycles
   795                           ; simple_byte            4     3 (average)
   796                           ;	Chosen strategy is simple_byte
   797  000856  5023               	movf	??_FRAME_HandleCanFrame+1,w,c
   798  000858  0A00               	xorlw	0	; case 0
   799  00085A  A4D8               	btfss	status,2,c
   800  00085C  D7EC               	goto	l2743
   801                           
   802                           ; Switch size 1, requested type "simple"
   803                           ; Number of cases is 1, Range of values is 1 to 1
   804                           ; switch strategies available:
   805                           ; Name         Instructions Cycles
   806                           ; simple_byte            4     3 (average)
   807                           ;	Chosen strategy is simple_byte
   808  00085E  5022               	movf	??_FRAME_HandleCanFrame,w,c
   809  000860  0A01               	xorlw	1	; case 1
   810  000862  B4D8               	btfsc	status,2,c
   811  000864  D7E1               	goto	l2741
   812  000866  D7E7               	goto	l2743
   813  000868                     l2749:
   814                           
   815                           ;FRAME.c: 542:     if(message->message_type == 0x02)
   816  000868  EE20 F001          	lfsr	2,1
   817  00086C  5020               	movf	FRAME_HandleCanFrame@message,w,c
   818  00086E  26D9               	addwf	fsr2l,f,c
   819  000870  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   820  000872  22DA               	addwfc	fsr2h,f,c
   821  000874  0E02               	movlw	2
   822  000876  18DE               	xorwf	postinc2,w,c
   823  000878  A4D8               	btfss	status,2,c
   824  00087A  0012               	return	
   825                           
   826                           ;FRAME.c: 543:     {;FRAME.c: 545:         message->frame_type = 0x03;
   827  00087C  EE20 F002          	lfsr	2,2
   828  000880  5020               	movf	FRAME_HandleCanFrame@message,w,c
   829  000882  26D9               	addwf	fsr2l,f,c
   830  000884  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   831  000886  22DA               	addwfc	fsr2h,f,c
   832  000888  0E03               	movlw	3
   833  00088A  6EDF               	movwf	indf2,c
   834                           
   835                           ;FRAME.c: 546:         message->message_type = 0x01;
   836  00088C  EE20 F001          	lfsr	2,1
   837  000890  5020               	movf	FRAME_HandleCanFrame@message,w,c
   838  000892  26D9               	addwf	fsr2l,f,c
   839  000894  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   840  000896  22DA               	addwfc	fsr2h,f,c
   841  000898  0E01               	movlw	1
   842  00089A  6EDF               	movwf	indf2,c
   843                           
   844                           ;FRAME.c: 547:         message->id.Val = 0;
   845  00089C  EE20 F004          	lfsr	2,4
   846  0008A0  5020               	movf	FRAME_HandleCanFrame@message,w,c
   847  0008A2  26D9               	addwf	fsr2l,f,c
   848  0008A4  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   849  0008A6  22DA               	addwfc	fsr2h,f,c
   850  0008A8  6ADE               	clrf	postinc2,c
   851  0008AA  6ADE               	clrf	postinc2,c
   852  0008AC  6ADE               	clrf	postinc2,c
   853  0008AE  6ADD               	clrf	postdec2,c
   854                           
   855                           ;FRAME.c: 549:         message->id.v[2] = identyfikator*4;
   856  0008B0  5024               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   857  0008B2  0D04               	mullw	4
   858  0008B4  EE20 F006          	lfsr	2,6
   859  0008B8  5020               	movf	FRAME_HandleCanFrame@message,w,c
   860  0008BA  26D9               	addwf	fsr2l,f,c
   861  0008BC  5021               	movf	FRAME_HandleCanFrame@message+1,w,c
   862  0008BE  22DA               	addwfc	fsr2h,f,c
   863  0008C0  CFF3 FFDF          	movff	prodl,indf2
   864                           
   865                           ;FRAME.c: 550:         CAN_GenID(message,identyfikator);
   866  0008C4  C020  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   867  0008C8  C021  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   868  0008CC  C024  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
   869  0008D0  EC37  F005         	call	_CAN_GenID	;wreg free
   870                           
   871                           ;FRAME.c: 551:         CAN_SendFrame(message);
   872  0008D4  C020  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
   873  0008D8  C021  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
   874  0008DC  ECA0  F002         	call	_CAN_SendFrame	;wreg free
   875                           
   876                           ;FRAME.c: 562:        while(RXB0CONbits.FILHIT3)
   877  0008E0  D004               	goto	l512
   878  0008E2                     l513:
   879                           
   880                           ;FRAME.c: 563:        {;FRAME.c: 564:            if(TXB0CONbits.TXERR == 1){
   881  0008E2  010F               	movlb	15	; () banked
   882  0008E4  B940               	btfsc	64,4,b	;volatile
   883                           
   884                           ; BSR set to: 15
   885                           ;FRAME.c: 565:                LED_Error();
   886  0008E6  ECA1  F007         	call	_LED_Error	;wreg free
   887  0008EA                     l512:
   888                           
   889                           ;FRAME.c: 562:        while(RXB0CONbits.FILHIT3)
   890  0008EA  A660               	btfss	3936,3,c	;volatile
   891  0008EC  0012               	return	
   892  0008EE  D7F9               	goto	l513
   893  0008F0                     __end_of_FRAME_HandleCanFrame:
   894                           	opt callstack 0
   895                           
   896 ;; *************** function _LED_Error *****************
   897 ;; Defined at:
   898 ;;		line 37 in file "LED.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  2  255[None  ] unsigned int 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    4
   919 ;; This function calls:
   920 ;;		_LED_Control
   921 ;; This function is called by:
   922 ;;		_FRAME_HandleCanFrame
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text3
   927  000F42                     __ptext3:
   928                           	opt callstack 0
   929  000F42                     _LED_Error:
   930                           	opt callstack 24
   931                           
   932                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
   933                           
   934                           ;incstack = 0
   935  000F42  0E02               	movlw	2
   936  000F44  6E07               	movwf	LED_Control@diode+1,c
   937  000F46  0EAA               	movlw	170
   938  000F48  6E06               	movwf	LED_Control@diode,c
   939  000F4A  0E00               	movlw	0
   940  000F4C  EC57  F003         	call	_LED_Control
   941                           
   942                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
   943  000F50  0E00               	movlw	0
   944  000F52  6E07               	movwf	LED_Control@diode+1,c
   945  000F54  0E00               	movlw	0
   946  000F56  6E06               	movwf	LED_Control@diode,c
   947  000F58  0E01               	movlw	1
   948  000F5A  EC57  F003         	call	_LED_Control
   949  000F5E  0012               	return		;funcret
   950  000F60                     __end_of_LED_Error:
   951                           	opt callstack 0
   952                           
   953 ;; *************** function _FRAME_SensorExcitationStatus *****************
   954 ;; Defined at:
   955 ;;		line 33 in file "FRAME.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  message         2    7[COMRAM] PTR struct .
   958 ;;		 -> TRM_DataTransmition@canMessage(17), 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;Total ram usage:        4 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    4
   977 ;; This function calls:
   978 ;;		_LOCK_Get
   979 ;;		_LOCK_Set
   980 ;;		_MOC_Aktualna_Temperatura
   981 ;;		_MOC_Frame_Counter
   982 ;;		_MOC_NOTWORK
   983 ;;		_MOC_Wynikowa_wartosc_roznicowa
   984 ;; This function is called by:
   985 ;;		_FRAME_HandleCanFrame
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text4
   990  0008F0                     __ptext4:
   991                           	opt callstack 0
   992  0008F0                     _FRAME_SensorExcitationStatus:
   993                           	opt callstack 24
   994                           
   995                           ;FRAME.c: 33: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 34: {;FRAM
      +                          E.c: 35:     if(message->message_type == 0x02)
   996                           
   997                           ;incstack = 0
   998  0008F0  EE20 F001          	lfsr	2,1
   999  0008F4  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1000  0008F6  26D9               	addwf	fsr2l,f,c
  1001  0008F8  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1002  0008FA  22DA               	addwfc	fsr2h,f,c
  1003  0008FC  0E02               	movlw	2
  1004  0008FE  18DE               	xorwf	postinc2,w,c
  1005  000900  A4D8               	btfss	status,2,c
  1006  000902  D047               	goto	l2493
  1007                           
  1008                           ;FRAME.c: 36:     {;FRAME.c: 37:         message->data_length = 6;
  1009  000904  EE20 F010          	lfsr	2,16
  1010  000908  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1011  00090A  26D9               	addwf	fsr2l,f,c
  1012  00090C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1013  00090E  22DA               	addwfc	fsr2h,f,c
  1014  000910  0E06               	movlw	6
  1015  000912  6EDF               	movwf	indf2,c
  1016                           
  1017                           ;FRAME.c: 43:         message->data[0] = LOCK_Get();
  1018  000914  EE20 F008          	lfsr	2,8
  1019  000918  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1020  00091A  26D9               	addwf	fsr2l,f,c
  1021  00091C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1022  00091E  22DA               	addwfc	fsr2h,f,c
  1023  000920  EC0F  F008         	call	_LOCK_Get	;wreg free
  1024  000924  6EDF               	movwf	indf2,c
  1025                           
  1026                           ;FRAME.c: 44:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1027  000926  EE20 F009          	lfsr	2,9
  1028  00092A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1029  00092C  26D9               	addwf	fsr2l,f,c
  1030  00092E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1031  000930  22DA               	addwfc	fsr2h,f,c
  1032  000932  ECE6  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1033  000936  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1034  00093A  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1035  00093C  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1036  00093E  6EDF               	movwf	indf2,c
  1037                           
  1038                           ;FRAME.c: 45:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1039  000940  EE20 F00A          	lfsr	2,10
  1040  000944  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1041  000946  26D9               	addwf	fsr2l,f,c
  1042  000948  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1043  00094A  22DA               	addwfc	fsr2h,f,c
  1044  00094C  ECE6  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1045  000950  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1046  000952  6EDF               	movwf	indf2,c
  1047                           
  1048                           ;FRAME.c: 46:         message->data[3] = MOC_Frame_Counter();
  1049  000954  EE20 F00B          	lfsr	2,11
  1050  000958  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1051  00095A  26D9               	addwf	fsr2l,f,c
  1052  00095C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1053  00095E  22DA               	addwfc	fsr2h,f,c
  1054  000960  ECD8  F007         	call	_MOC_Frame_Counter	;wreg free
  1055  000964  5006               	movf	?_MOC_Frame_Counter,w,c
  1056  000966  6EDF               	movwf	indf2,c
  1057                           
  1058                           ;FRAME.c: 47:         message->data[4] = MOC_Aktualna_Temperatura();
  1059  000968  EE20 F00C          	lfsr	2,12
  1060  00096C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1061  00096E  26D9               	addwf	fsr2l,f,c
  1062  000970  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1063  000972  22DA               	addwfc	fsr2h,f,c
  1064  000974  ECEB  F007         	call	_MOC_Aktualna_Temperatura	;wreg free
  1065  000978  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1066  00097A  6EDF               	movwf	indf2,c
  1067                           
  1068                           ;FRAME.c: 48:         message->data[5] = MOC_NOTWORK();
  1069  00097C  EE20 F00D          	lfsr	2,13
  1070  000980  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1071  000982  26D9               	addwf	fsr2l,f,c
  1072  000984  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1073  000986  22DA               	addwfc	fsr2h,f,c
  1074  000988  EC04  F008         	call	_MOC_NOTWORK	;wreg free
  1075  00098C  5006               	movf	?_MOC_NOTWORK,w,c
  1076  00098E  6EDF               	movwf	indf2,c
  1077                           
  1078                           ;FRAME.c: 58:     }
  1079  000990  0012               	return	
  1080  000992                     l2493:
  1081                           
  1082                           ;FRAME.c: 60:     {;FRAME.c: 61:         if(0x12b==message->id.w[0])
  1083  000992  EE20 F004          	lfsr	2,4
  1084  000996  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1085  000998  26D9               	addwf	fsr2l,f,c
  1086  00099A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1087  00099C  22DA               	addwfc	fsr2h,f,c
  1088  00099E  0E2B               	movlw	43
  1089  0009A0  18DE               	xorwf	postinc2,w,c
  1090  0009A2  E10C               	bnz	l433
  1091  0009A4  04DE               	decf	postinc2,w,c
  1092  0009A6  A4D8               	btfss	status,2,c
  1093  0009A8  0012               	return	
  1094                           
  1095                           ;FRAME.c: 62:         {;FRAME.c: 63:         LOCK_Set(message->data[0]);
  1096  0009AA  EE20 F008          	lfsr	2,8
  1097  0009AE  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1098  0009B0  26D9               	addwf	fsr2l,f,c
  1099  0009B2  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1100  0009B4  22DA               	addwfc	fsr2h,f,c
  1101  0009B6  50DF               	movf	indf2,w,c
  1102  0009B8  EC08  F008         	call	_LOCK_Set
  1103  0009BC                     l433:
  1104  0009BC  0012               	return		;funcret
  1105  0009BE                     __end_of_FRAME_SensorExcitationStatus:
  1106                           	opt callstack 0
  1107                           
  1108 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1109 ;; Defined at:
  1110 ;;		line 33 in file "MOC_Funct.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  2    5[COMRAM] unsigned int 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    3
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_FRAME_SensorExcitationStatus
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text5
  1139  000FCC                     __ptext5:
  1140                           	opt callstack 0
  1141  000FCC                     _MOC_Wynikowa_wartosc_roznicowa:
  1142                           	opt callstack 24
  1143                           
  1144                           ;MOC_Funct.c: 35:     return 0x0220;
  1145                           
  1146                           ;incstack = 0
  1147  000FCC  0E02               	movlw	2
  1148  000FCE  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1149  000FD0  0E20               	movlw	32
  1150  000FD2  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1151  000FD4  0012               	return		;funcret
  1152  000FD6                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1153                           	opt callstack 0
  1154                           
  1155 ;; *************** function _MOC_NOTWORK *****************
  1156 ;; Defined at:
  1157 ;;		line 47 in file "MOC_Funct.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  2    5[COMRAM] unsigned int 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1175 ;;Total ram usage:        2 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    3
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_FRAME_SensorExcitationStatus
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text6
  1186  001008                     __ptext6:
  1187                           	opt callstack 0
  1188  001008                     _MOC_NOTWORK:
  1189                           	opt callstack 24
  1190                           
  1191                           ;MOC_Funct.c: 49:     return 0xFF;
  1192                           
  1193                           ;incstack = 0
  1194  001008  0E00               	movlw	0
  1195  00100A  6E07               	movwf	?_MOC_NOTWORK+1,c
  1196  00100C  6806               	setf	?_MOC_NOTWORK,c
  1197  00100E  0012               	return		;funcret
  1198  001010                     __end_of_MOC_NOTWORK:
  1199                           	opt callstack 0
  1200                           
  1201 ;; *************** function _MOC_Frame_Counter *****************
  1202 ;; Defined at:
  1203 ;;		line 38 in file "MOC_Funct.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  2    5[COMRAM] unsigned int 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1221 ;;Total ram usage:        2 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    3
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_FRAME_SensorExcitationStatus
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text7
  1232  000FB0                     __ptext7:
  1233                           	opt callstack 0
  1234  000FB0                     _MOC_Frame_Counter:
  1235                           	opt callstack 24
  1236                           
  1237                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1238                           
  1239                           ;incstack = 0
  1240  000FB0  504B               	movf	MOC_Frame_Counter@zeta,w,c
  1241  000FB2  6E06               	movwf	?_MOC_Frame_Counter,c
  1242  000FB4  504C               	movf	MOC_Frame_Counter@zeta+1,w,c
  1243  000FB6  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1244  000FB8  4A4B               	infsnz	MOC_Frame_Counter@zeta,f,c
  1245  000FBA  2A4C               	incf	MOC_Frame_Counter@zeta+1,f,c
  1246  000FBC  0012               	return		;funcret
  1247  000FBE                     __end_of_MOC_Frame_Counter:
  1248                           	opt callstack 0
  1249                           
  1250 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1251 ;; Defined at:
  1252 ;;		line 43 in file "MOC_Funct.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  2    5[COMRAM] unsigned int 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;Total ram usage:        2 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    3
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_FRAME_SensorExcitationStatus
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text8
  1281  000FD6                     __ptext8:
  1282                           	opt callstack 0
  1283  000FD6                     _MOC_Aktualna_Temperatura:
  1284                           	opt callstack 24
  1285                           
  1286                           ;MOC_Funct.c: 45:     return 0x1B;
  1287                           
  1288                           ;incstack = 0
  1289  000FD6  0E00               	movlw	0
  1290  000FD8  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1291  000FDA  0E1B               	movlw	27
  1292  000FDC  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1293  000FDE  0012               	return		;funcret
  1294  000FE0                     __end_of_MOC_Aktualna_Temperatura:
  1295                           	opt callstack 0
  1296                           
  1297 ;; *************** function _LOCK_Set *****************
  1298 ;; Defined at:
  1299 ;;		line 52 in file "LED.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  k               1    wreg     unsigned char 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  k               1    5[COMRAM] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1317 ;;Total ram usage:        1 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    3
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_FRAME_SensorExcitationStatus
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text9
  1328  001010                     __ptext9:
  1329                           	opt callstack 0
  1330  001010                     _LOCK_Set:
  1331                           	opt callstack 24
  1332                           
  1333                           ;incstack = 0
  1334                           ;LOCK_Set@k stored from wreg
  1335  001010  6E06               	movwf	LOCK_Set@k,c
  1336                           
  1337                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1338  001012  C006  F04A         	movff	LOCK_Set@k,_LOCK
  1339  001016  0012               	return		;funcret
  1340  001018                     __end_of_LOCK_Set:
  1341                           	opt callstack 0
  1342                           
  1343 ;; *************** function _LOCK_Get *****************
  1344 ;; Defined at:
  1345 ;;		line 57 in file "LED.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      unsigned char 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    3
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_FRAME_SensorExcitationStatus
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text10
  1374  00101E                     __ptext10:
  1375                           	opt callstack 0
  1376  00101E                     _LOCK_Get:
  1377                           	opt callstack 24
  1378                           
  1379                           ;LED.c: 59:     return LOCK;
  1380                           
  1381                           ;incstack = 0
  1382  00101E  504A               	movf	_LOCK,w,c
  1383  001020  0012               	return		;funcret
  1384  001022                     __end_of_LOCK_Get:
  1385                           	opt callstack 0
  1386                           
  1387 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1388 ;; Defined at:
  1389 ;;		line 450 in file "FRAME.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  message         2   11[COMRAM] PTR struct .
  1392 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1393 ;;  nrRamki         2   13[COMRAM] unsigned short 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  i               2   29[COMRAM] unsigned short 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1407 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1408 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1409 ;;Total ram usage:       20 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    4
  1412 ;; This function calls:
  1413 ;;		___wmul
  1414 ;; This function is called by:
  1415 ;;		_FRAME_HandleCanFrame
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text11
  1420  0002DC                     __ptext11:
  1421                           	opt callstack 0
  1422  0002DC                     _FRAME_AdressOfNeighbors:
  1423                           	opt callstack 24
  1424                           
  1425                           ;FRAME.c: 450: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          451: {;FRAME.c: 452:     WORD i;;FRAME.c: 456:     if(message->message_type == 0x02)
  1426                           
  1427                           ;incstack = 0
  1428  0002DC  EE20 F001          	lfsr	2,1
  1429  0002E0  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1430  0002E2  26D9               	addwf	fsr2l,f,c
  1431  0002E4  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1432  0002E6  22DA               	addwfc	fsr2h,f,c
  1433  0002E8  0E02               	movlw	2
  1434  0002EA  18DE               	xorwf	postinc2,w,c
  1435  0002EC  A4D8               	btfss	status,2,c
  1436  0002EE  D07F               	goto	l2513
  1437                           
  1438                           ;FRAME.c: 457:     {;FRAME.c: 459:         message->data_length = 8;
  1439  0002F0  EE20 F010          	lfsr	2,16
  1440  0002F4  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1441  0002F6  26D9               	addwf	fsr2l,f,c
  1442  0002F8  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1443  0002FA  22DA               	addwfc	fsr2h,f,c
  1444  0002FC  0E08               	movlw	8
  1445  0002FE  6EDF               	movwf	indf2,c
  1446                           
  1447                           ;FRAME.c: 460:         for(i=0; i<4; i++)
  1448  000300  0E00               	movlw	0
  1449  000302  6E1F               	movwf	FRAME_AdressOfNeighbors@i+1,c
  1450  000304  0E00               	movlw	0
  1451  000306  6E1E               	movwf	FRAME_AdressOfNeighbors@i,c
  1452  000308                     l2507:
  1453                           
  1454                           ;FRAME.c: 461:         {;FRAME.c: 462:             message->data[2*i] = (BYTE)(Dane->sas
      +                          iedzi[i+(4*nrRamki)].adres >> 8);
  1455  000308  C01E  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  1456  00030C  C01F  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  1457  000310  90D8               	bcf	status,0,c
  1458  000312  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1459  000314  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1460  000316  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  1461  00031A  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  1462  00031E  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  1463  000320  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1464  000322  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1465  000324  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1466  000326  0E08               	movlw	8
  1467  000328  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  1468  00032A  6ED9               	movwf	fsr2l,c
  1469  00032C  0E00               	movlw	0
  1470  00032E  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  1471  000330  6EDA               	movwf	fsr2h,c
  1472  000332  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  1473  000336  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  1474  00033A  90D8               	bcf	status,0,c
  1475  00033C  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1476  00033E  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1477  000340  90D8               	bcf	status,0,c
  1478  000342  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1479  000344  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1480  000346  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  1481  000348  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1482  00034A  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1483  00034C  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1484  00034E  90D8               	bcf	status,0,c
  1485  000350  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1486  000352  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1487  000354  90D8               	bcf	status,0,c
  1488  000356  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1489  000358  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1490  00035A  0E0E               	movlw	14
  1491  00035C  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1492  00035E  6EE1               	movwf	fsr1l,c
  1493  000360  0E00               	movlw	0
  1494  000362  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1495  000364  6EE2               	movwf	fsr1h,c
  1496  000366  CFE6 F016          	movff	postinc1,??_FRAME_AdressOfNeighbors+6
  1497  00036A  CFE5 F017          	movff	postdec1,??_FRAME_AdressOfNeighbors+7
  1498  00036E  C017  F016         	movff	??_FRAME_AdressOfNeighbors+7,??_FRAME_AdressOfNeighbors+6
  1499  000372  6A17               	clrf	??_FRAME_AdressOfNeighbors+7,c
  1500  000374  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  1501  000376  6EDF               	movwf	indf2,c
  1502                           
  1503                           ;FRAME.c: 463:             message->data[(2*i)+1] = (BYTE)Dane->sasiedzi[i+(4*nrRamki)].
      +                          adres;
  1504  000378  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  1505  00037C  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  1506  000380  90D8               	bcf	status,0,c
  1507  000382  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1508  000384  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1509  000386  90D8               	bcf	status,0,c
  1510  000388  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1511  00038A  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1512  00038C  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  1513  00038E  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  1514  000390  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1515  000392  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  1516  000394  90D8               	bcf	status,0,c
  1517  000396  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1518  000398  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1519  00039A  90D8               	bcf	status,0,c
  1520  00039C  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1521  00039E  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1522  0003A0  0E0E               	movlw	14
  1523  0003A2  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  1524  0003A4  6ED9               	movwf	fsr2l,c
  1525  0003A6  0E00               	movlw	0
  1526  0003A8  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  1527  0003AA  6EDA               	movwf	fsr2h,c
  1528  0003AC  C01E  F012         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+2
  1529  0003B0  C01F  F013         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+3
  1530  0003B4  90D8               	bcf	status,0,c
  1531  0003B6  3612               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  1532  0003B8  3613               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  1533  0003BA  C00C  F014         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  1534  0003BE  C00D  F015         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  1535  0003C2  5012               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  1536  0003C4  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1537  0003C6  5013               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  1538  0003C8  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1539  0003CA  0E09               	movlw	9
  1540  0003CC  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1541  0003CE  6EE1               	movwf	fsr1l,c
  1542  0003D0  0E00               	movlw	0
  1543  0003D2  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1544  0003D4  6EE2               	movwf	fsr1h,c
  1545  0003D6  CFDF FFE7          	movff	indf2,indf1
  1546                           
  1547                           ;FRAME.c: 464:         }
  1548  0003DA  4A1E               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  1549  0003DC  2A1F               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  1550  0003DE  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1551  0003E0  E105               	bnz	u1070
  1552  0003E2  0E04               	movlw	4
  1553  0003E4  5C1E               	subwf	FRAME_AdressOfNeighbors@i,w,c
  1554  0003E6  B0D8               	btfsc	status,0,c
  1555  0003E8  0012               	return	
  1556  0003EA  D78E               	goto	l2507
  1557  0003EC                     u1070:
  1558  0003EC  0012               	return	
  1559  0003EE                     l2513:
  1560                           
  1561                           ;FRAME.c: 468:     {;FRAME.c: 470:         for(i=0; i<4; i++)
  1562  0003EE  0E00               	movlw	0
  1563  0003F0  6E1F               	movwf	FRAME_AdressOfNeighbors@i+1,c
  1564  0003F2  0E00               	movlw	0
  1565  0003F4  6E1E               	movwf	FRAME_AdressOfNeighbors@i,c
  1566  0003F6                     l2519:
  1567                           
  1568                           ;FRAME.c: 471:         {;FRAME.c: 472:             Dane->sasiedzi[i+(4*nrRamki)].adres =
      +                           ((WORD)message->data[2*i] << 8) |
  1569  0003F6  C01E  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  1570  0003FA  C01F  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  1571  0003FE  90D8               	bcf	status,0,c
  1572  000400  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1573  000402  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1574  000404  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  1575  000408  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  1576  00040C  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  1577  00040E  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1578  000410  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1579  000412  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1580  000414  0E08               	movlw	8
  1581  000416  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  1582  000418  6ED9               	movwf	fsr2l,c
  1583  00041A  0E00               	movlw	0
  1584  00041C  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  1585  00041E  6EDA               	movwf	fsr2h,c
  1586  000420  50DF               	movf	indf2,w,c
  1587  000422  6E14               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  1588  000424  5014               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  1589  000426  6E16               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  1590  000428  6A15               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  1591  00042A  C01E  F017         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+7
  1592  00042E  C01F  F018         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+8
  1593  000432  90D8               	bcf	status,0,c
  1594  000434  3617               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  1595  000436  3618               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  1596  000438  C00C  F019         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  1597  00043C  C00D  F01A         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  1598  000440  5017               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  1599  000442  2619               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  1600  000444  5018               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  1601  000446  221A               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  1602  000448  0E09               	movlw	9
  1603  00044A  2419               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  1604  00044C  6ED9               	movwf	fsr2l,c
  1605  00044E  0E00               	movlw	0
  1606  000450  201A               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  1607  000452  6EDA               	movwf	fsr2h,c
  1608  000454  50DF               	movf	indf2,w,c
  1609  000456  6E1B               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  1610  000458  501B               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  1611  00045A  1215               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  1612  00045C  0E00               	movlw	0
  1613  00045E  1216               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  1614  000460  C00E  F01C         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+12
  1615  000464  C00F  F01D         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+13
  1616  000468  90D8               	bcf	status,0,c
  1617  00046A  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1618  00046C  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  1619  00046E  90D8               	bcf	status,0,c
  1620  000470  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1621  000472  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  1622  000474  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  1623  000476  261C               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  1624  000478  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1625  00047A  221D               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  1626  00047C  90D8               	bcf	status,0,c
  1627  00047E  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1628  000480  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  1629  000482  90D8               	bcf	status,0,c
  1630  000484  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1631  000486  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  1632  000488  0E0E               	movlw	14
  1633  00048A  241C               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  1634  00048C  6ED9               	movwf	fsr2l,c
  1635  00048E  0E00               	movlw	0
  1636  000490  201D               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  1637  000492  6EDA               	movwf	fsr2h,c
  1638  000494  C015  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  1639  000498  C016  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  1640                           
  1641                           ;FRAME.c: 475:             Dane->sasiedzi[i+(4*nrRamki)].pointerNaSasiada = &wartosciSas
      +                          iada[i+(4*nrRamki)];
  1642  00049C  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  1643  0004A0  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  1644  0004A4  90D8               	bcf	status,0,c
  1645  0004A6  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1646  0004A8  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1647  0004AA  90D8               	bcf	status,0,c
  1648  0004AC  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1649  0004AE  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1650  0004B0  C010  F006         	movff	??_FRAME_AdressOfNeighbors,___wmul@multiplier
  1651  0004B4  C011  F007         	movff	??_FRAME_AdressOfNeighbors+1,___wmul@multiplier+1
  1652  0004B8  0E00               	movlw	0
  1653  0004BA  6E09               	movwf	___wmul@multiplicand+1,c
  1654  0004BC  0E44               	movlw	68
  1655  0004BE  6E08               	movwf	___wmul@multiplicand,c
  1656  0004C0  EC7C  F007         	call	___wmul	;wreg free
  1657  0004C4  0EC6               	movlw	low _wartosciSasiada
  1658  0004C6  6E12               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  1659  0004C8  0E00               	movlw	high _wartosciSasiada
  1660  0004CA  6E13               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  1661  0004CC  5006               	movf	?___wmul,w,c
  1662  0004CE  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1663  0004D0  5007               	movf	?___wmul+1,w,c
  1664  0004D2  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1665  0004D4  C01E  F006         	movff	FRAME_AdressOfNeighbors@i,___wmul@multiplier
  1666  0004D8  C01F  F007         	movff	FRAME_AdressOfNeighbors@i+1,___wmul@multiplier+1
  1667  0004DC  0E00               	movlw	0
  1668  0004DE  6E09               	movwf	___wmul@multiplicand+1,c
  1669  0004E0  0E44               	movlw	68
  1670  0004E2  6E08               	movwf	___wmul@multiplicand,c
  1671  0004E4  EC7C  F007         	call	___wmul	;wreg free
  1672  0004E8  5006               	movf	?___wmul,w,c
  1673  0004EA  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1674  0004EC  5007               	movf	?___wmul+1,w,c
  1675  0004EE  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1676  0004F0  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  1677  0004F4  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  1678  0004F8  90D8               	bcf	status,0,c
  1679  0004FA  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1680  0004FC  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1681  0004FE  90D8               	bcf	status,0,c
  1682  000500  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1683  000502  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1684  000504  501E               	movf	FRAME_AdressOfNeighbors@i,w,c
  1685  000506  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1686  000508  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1687  00050A  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1688  00050C  90D8               	bcf	status,0,c
  1689  00050E  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1690  000510  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1691  000512  90D8               	bcf	status,0,c
  1692  000514  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1693  000516  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1694  000518  0E10               	movlw	16
  1695  00051A  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1696  00051C  6ED9               	movwf	fsr2l,c
  1697  00051E  0E00               	movlw	0
  1698  000520  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1699  000522  6EDA               	movwf	fsr2h,c
  1700  000524  C012  FFDE         	movff	??_FRAME_AdressOfNeighbors+2,postinc2
  1701  000528  C013  FFDD         	movff	??_FRAME_AdressOfNeighbors+3,postdec2
  1702                           
  1703                           ;FRAME.c: 476:         }
  1704  00052C  4A1E               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  1705  00052E  2A1F               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  1706  000530  501F               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1707  000532  E105               	bnz	u1080
  1708  000534  0E04               	movlw	4
  1709  000536  5C1E               	subwf	FRAME_AdressOfNeighbors@i,w,c
  1710  000538  B0D8               	btfsc	status,0,c
  1711  00053A  0012               	return	
  1712  00053C  D75C               	goto	l2519
  1713  00053E                     u1080:
  1714  00053E  0012               	return		;funcret
  1715  000540                     __end_of_FRAME_AdressOfNeighbors:
  1716                           	opt callstack 0
  1717                           
  1718 ;; *************** function ___wmul *****************
  1719 ;; Defined at:
  1720 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  multiplier      2    5[COMRAM] unsigned int 
  1723 ;;  multiplicand    2    7[COMRAM] unsigned int 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  product         2    9[COMRAM] unsigned int 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  2    5[COMRAM] unsigned int 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0, prodl, prodh
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;Total ram usage:        6 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    3
  1742 ;; This function calls:
  1743 ;;		Nothing
  1744 ;; This function is called by:
  1745 ;;		_FRAME_AdressOfNeighbors
  1746 ;;		_IsInNeighbors
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text12
  1751  000EF8                     __ptext12:
  1752                           	opt callstack 0
  1753  000EF8                     ___wmul:
  1754                           	opt callstack 24
  1755                           
  1756                           ;incstack = 0
  1757  000EF8  5006               	movf	___wmul@multiplier,w,c
  1758  000EFA  0208               	mulwf	___wmul@multiplicand,c
  1759  000EFC  CFF3 F00A          	movff	prodl,___wmul@product
  1760  000F00  CFF4 F00B          	movff	prodh,___wmul@product+1
  1761  000F04  5006               	movf	___wmul@multiplier,w,c
  1762  000F06  0209               	mulwf	___wmul@multiplicand+1,c
  1763  000F08  50F3               	movf	prodl,w,c
  1764  000F0A  260B               	addwf	___wmul@product+1,f,c
  1765  000F0C  5007               	movf	___wmul@multiplier+1,w,c
  1766  000F0E  0208               	mulwf	___wmul@multiplicand,c
  1767  000F10  50F3               	movf	prodl,w,c
  1768  000F12  260B               	addwf	___wmul@product+1,f,c
  1769  000F14  C00A  F006         	movff	___wmul@product,?___wmul
  1770  000F18  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  1771  000F1C  0012               	return		;funcret
  1772  000F1E                     __end_of___wmul:
  1773                           	opt callstack 0
  1774                           
  1775 ;; *************** function _CAN_SendFrame *****************
  1776 ;; Defined at:
  1777 ;;		line 183 in file "CAN.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  message         2   10[COMRAM] PTR struct .
  1780 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1794 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1795 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;Total ram usage:        5 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    4
  1799 ;; This function calls:
  1800 ;;		_CAN_MoveBuffIntoFrame
  1801 ;; This function is called by:
  1802 ;;		_FRAME_HandleCanFrame
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text13
  1807  000540                     __ptext13:
  1808                           	opt callstack 0
  1809  000540                     _CAN_SendFrame:
  1810                           	opt callstack 24
  1811                           
  1812                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  1813                           
  1814                           ;incstack = 0
  1815                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  1816  000540  0E83               	movlw	131
  1817  000542  6E77               	movwf	3959,c	;volatile
  1818                           
  1819                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  1820  000544  A660               	btfss	3936,3,c	;volatile
  1821  000546  D00A               	goto	l179
  1822                           
  1823                           ;CAN.c: 195:         ECANCON = 0x84;
  1824  000548  0E84               	movlw	132
  1825  00054A  6E77               	movwf	3959,c	;volatile
  1826                           
  1827                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  1828  00054C  A660               	btfss	3936,3,c	;volatile
  1829  00054E  D006               	goto	l179
  1830                           
  1831                           ;CAN.c: 201:         ECANCON = 0x85;
  1832  000550  0E85               	movlw	133
  1833  000552  6E77               	movwf	3959,c	;volatile
  1834                           
  1835                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  1836  000554  A660               	btfss	3936,3,c	;volatile
  1837  000556  D002               	goto	l179
  1838  000558  D7F3               	goto	_CAN_SendFrame
  1839  00055A                     l180:
  1840  00055A  00FF               	reset		;# 
  1841  00055C                     l179:
  1842                           
  1843                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  1844  00055C  B474               	btfsc	3956,2,c	;volatile
  1845  00055E  D7FD               	goto	l180
  1846                           
  1847                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  1848  000560  0E00               	movlw	0
  1849  000562  6E41               	movwf	_DetectorLedRadar+2,c
  1850                           
  1851                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  1852  000564  EE20 F004          	lfsr	2,4
  1853  000568  500B               	movf	CAN_SendFrame@message,w,c
  1854  00056A  26D9               	addwf	fsr2l,f,c
  1855  00056C  500C               	movf	CAN_SendFrame@message+1,w,c
  1856  00056E  22DA               	addwfc	fsr2h,f,c
  1857  000570  50DF               	movf	indf2,w,c
  1858  000572  6E64               	movwf	3940,c	;volatile
  1859                           
  1860                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  1861  000574  EE20 F005          	lfsr	2,5
  1862  000578  500B               	movf	CAN_SendFrame@message,w,c
  1863  00057A  26D9               	addwf	fsr2l,f,c
  1864  00057C  500C               	movf	CAN_SendFrame@message+1,w,c
  1865  00057E  22DA               	addwfc	fsr2h,f,c
  1866  000580  50DF               	movf	indf2,w,c
  1867  000582  6E63               	movwf	3939,c	;volatile
  1868                           
  1869                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  1870  000584  EE20 F006          	lfsr	2,6
  1871  000588  500B               	movf	CAN_SendFrame@message,w,c
  1872  00058A  26D9               	addwf	fsr2l,f,c
  1873  00058C  500C               	movf	CAN_SendFrame@message+1,w,c
  1874  00058E  22DA               	addwfc	fsr2h,f,c
  1875  000590  50DF               	movf	indf2,w,c
  1876  000592  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  1877  000594  0E03               	movlw	3
  1878  000596  160D               	andwf	??_CAN_SendFrame,f,c
  1879  000598  EE20 F006          	lfsr	2,6
  1880  00059C  500B               	movf	CAN_SendFrame@message,w,c
  1881  00059E  26D9               	addwf	fsr2l,f,c
  1882  0005A0  500C               	movf	CAN_SendFrame@message+1,w,c
  1883  0005A2  22DA               	addwfc	fsr2h,f,c
  1884  0005A4  50DF               	movf	indf2,w,c
  1885  0005A6  0BFC               	andlw	252
  1886  0005A8  0D08               	mullw	8
  1887  0005AA  50F3               	movf	prodl,w,c
  1888  0005AC  100D               	iorwf	??_CAN_SendFrame,w,c
  1889  0005AE  6E62               	movwf	3938,c	;volatile
  1890                           
  1891                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  1892  0005B0  8662               	bsf	3938,3,c	;volatile
  1893                           
  1894                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  1895  0005B2  EE20 F006          	lfsr	2,6
  1896  0005B6  500B               	movf	CAN_SendFrame@message,w,c
  1897  0005B8  26D9               	addwf	fsr2l,f,c
  1898  0005BA  500C               	movf	CAN_SendFrame@message+1,w,c
  1899  0005BC  22DA               	addwfc	fsr2h,f,c
  1900  0005BE  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  1901  0005C2  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  1902  0005C6  0E05               	movlw	5
  1903  0005C8  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  1904  0005CA                     u1005:
  1905  0005CA  90D8               	bcf	status,0,c
  1906  0005CC  320E               	rrcf	??_CAN_SendFrame+1,f,c
  1907  0005CE  320D               	rrcf	??_CAN_SendFrame,f,c
  1908  0005D0  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  1909  0005D2  D7FB               	goto	u1005
  1910  0005D4  500D               	movf	??_CAN_SendFrame,w,c
  1911  0005D6  6E61               	movwf	3937,c	;volatile
  1912                           
  1913                           ;CAN.c: 220:     RXB0DLC = 0;
  1914  0005D8  0E00               	movlw	0
  1915  0005DA  6E65               	movwf	3941,c	;volatile
  1916                           
  1917                           ;CAN.c: 222:     if(message->message_type==0x02)
  1918  0005DC  EE20 F001          	lfsr	2,1
  1919  0005E0  500B               	movf	CAN_SendFrame@message,w,c
  1920  0005E2  26D9               	addwf	fsr2l,f,c
  1921  0005E4  500C               	movf	CAN_SendFrame@message+1,w,c
  1922  0005E6  22DA               	addwfc	fsr2h,f,c
  1923  0005E8  0E02               	movlw	2
  1924  0005EA  18DE               	xorwf	postinc2,w,c
  1925  0005EC  A4D8               	btfss	status,2,c
  1926  0005EE  D002               	goto	l2431
  1927                           
  1928                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  1929  0005F0  8C65               	bsf	3941,6,c	;volatile
  1930                           
  1931                           ;CAN.c: 225:     }
  1932  0005F2  D05A               	goto	l2435
  1933  0005F4                     l2431:
  1934                           
  1935                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  1936  0005F4  EE20 F010          	lfsr	2,16
  1937  0005F8  500B               	movf	CAN_SendFrame@message,w,c
  1938  0005FA  26D9               	addwf	fsr2l,f,c
  1939  0005FC  500C               	movf	CAN_SendFrame@message+1,w,c
  1940  0005FE  22DA               	addwfc	fsr2h,f,c
  1941  000600  50DF               	movf	indf2,w,c
  1942  000602  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  1943  000604  0E0F               	movlw	15
  1944  000606  160D               	andwf	??_CAN_SendFrame,f,c
  1945  000608  5065               	movf	3941,w,c	;volatile
  1946  00060A  180D               	xorwf	??_CAN_SendFrame,w,c
  1947  00060C  0BFE               	andlw	-2
  1948  00060E  180D               	xorwf	??_CAN_SendFrame,w,c
  1949  000610  6E65               	movwf	3941,c	;volatile
  1950                           
  1951                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  1952  000612  EE20 F010          	lfsr	2,16
  1953  000616  500B               	movf	CAN_SendFrame@message,w,c
  1954  000618  26D9               	addwf	fsr2l,f,c
  1955  00061A  500C               	movf	CAN_SendFrame@message+1,w,c
  1956  00061C  22DA               	addwfc	fsr2h,f,c
  1957  00061E  50DF               	movf	indf2,w,c
  1958  000620  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  1959  000622  90D8               	bcf	status,0,c
  1960  000624  320D               	rrcf	??_CAN_SendFrame,f,c
  1961  000626  0E07               	movlw	7
  1962  000628  160D               	andwf	??_CAN_SendFrame,f,c
  1963  00062A  460D               	rlncf	??_CAN_SendFrame,f,c
  1964  00062C  5065               	movf	3941,w,c	;volatile
  1965  00062E  180D               	xorwf	??_CAN_SendFrame,w,c
  1966  000630  0BFD               	andlw	-3
  1967  000632  180D               	xorwf	??_CAN_SendFrame,w,c
  1968  000634  6E65               	movwf	3941,c	;volatile
  1969                           
  1970                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  1971  000636  EE20 F010          	lfsr	2,16
  1972  00063A  500B               	movf	CAN_SendFrame@message,w,c
  1973  00063C  26D9               	addwf	fsr2l,f,c
  1974  00063E  500C               	movf	CAN_SendFrame@message+1,w,c
  1975  000640  22DA               	addwfc	fsr2h,f,c
  1976  000642  50DF               	movf	indf2,w,c
  1977  000644  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  1978  000646  90D8               	bcf	status,0,c
  1979  000648  320D               	rrcf	??_CAN_SendFrame,f,c
  1980  00064A  90D8               	bcf	status,0,c
  1981  00064C  320D               	rrcf	??_CAN_SendFrame,f,c
  1982  00064E  0E03               	movlw	3
  1983  000650  160D               	andwf	??_CAN_SendFrame,f,c
  1984  000652  460D               	rlncf	??_CAN_SendFrame,f,c
  1985  000654  460D               	rlncf	??_CAN_SendFrame,f,c
  1986  000656  5065               	movf	3941,w,c	;volatile
  1987  000658  180D               	xorwf	??_CAN_SendFrame,w,c
  1988  00065A  0BFB               	andlw	-5
  1989  00065C  180D               	xorwf	??_CAN_SendFrame,w,c
  1990  00065E  6E65               	movwf	3941,c	;volatile
  1991                           
  1992                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  1993  000660  EE20 F010          	lfsr	2,16
  1994  000664  500B               	movf	CAN_SendFrame@message,w,c
  1995  000666  26D9               	addwf	fsr2l,f,c
  1996  000668  500C               	movf	CAN_SendFrame@message+1,w,c
  1997  00066A  22DA               	addwfc	fsr2h,f,c
  1998  00066C  50DF               	movf	indf2,w,c
  1999  00066E  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2000  000670  90D8               	bcf	status,0,c
  2001  000672  320D               	rrcf	??_CAN_SendFrame,f,c
  2002  000674  90D8               	bcf	status,0,c
  2003  000676  320D               	rrcf	??_CAN_SendFrame,f,c
  2004  000678  90D8               	bcf	status,0,c
  2005  00067A  320D               	rrcf	??_CAN_SendFrame,f,c
  2006  00067C  0E01               	movlw	1
  2007  00067E  160D               	andwf	??_CAN_SendFrame,f,c
  2008  000680  460D               	rlncf	??_CAN_SendFrame,f,c
  2009  000682  460D               	rlncf	??_CAN_SendFrame,f,c
  2010  000684  460D               	rlncf	??_CAN_SendFrame,f,c
  2011  000686  5065               	movf	3941,w,c	;volatile
  2012  000688  180D               	xorwf	??_CAN_SendFrame,w,c
  2013  00068A  0BF7               	andlw	-9
  2014  00068C  180D               	xorwf	??_CAN_SendFrame,w,c
  2015  00068E  6E65               	movwf	3941,c	;volatile
  2016                           
  2017                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2018  000690  0E66               	movlw	102
  2019  000692  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2020  000694  0E0F               	movlw	15
  2021  000696  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2022  000698  0E08               	movlw	8
  2023  00069A  240B               	addwf	CAN_SendFrame@message,w,c
  2024  00069C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2025  00069E  0E00               	movlw	0
  2026  0006A0  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2027  0006A2  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2028  0006A4  EC53  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2029  0006A8                     l2435:
  2030                           
  2031                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2032  0006A8  8660               	bsf	3936,3,c	;volatile
  2033                           
  2034                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2035  0006AA  883F               	bsf	_DetectorLedRadar,4,c
  2036  0006AC  0012               	return		;funcret
  2037  0006AE                     __end_of_CAN_SendFrame:
  2038                           	opt callstack 0
  2039                           
  2040 ;; *************** function _CAN_GenID *****************
  2041 ;; Defined at:
  2042 ;;		line 382 in file "CAN.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  message         2    5[COMRAM] PTR struct .
  2045 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2046 ;;  frameID         1    7[COMRAM] unsigned char 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2058 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2061 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2062 ;;Total ram usage:        7 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    3
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_FRAME_HandleCanFrame
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text14
  2073  000A6E                     __ptext14:
  2074                           	opt callstack 0
  2075  000A6E                     _CAN_GenID:
  2076                           	opt callstack 25
  2077                           
  2078                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2079                           
  2080                           ;incstack = 0
  2081  000A6E  EE20 F002          	lfsr	2,2
  2082  000A72  5006               	movf	CAN_GenID@message,w,c
  2083  000A74  26D9               	addwf	fsr2l,f,c
  2084  000A76  5007               	movf	CAN_GenID@message+1,w,c
  2085  000A78  22DA               	addwfc	fsr2h,f,c
  2086  000A7A  0E03               	movlw	3
  2087  000A7C  6EDF               	movwf	indf2,c
  2088                           
  2089                           ;CAN.c: 386:     message->message_type = 0x01;
  2090  000A7E  EE20 F001          	lfsr	2,1
  2091  000A82  5006               	movf	CAN_GenID@message,w,c
  2092  000A84  26D9               	addwf	fsr2l,f,c
  2093  000A86  5007               	movf	CAN_GenID@message+1,w,c
  2094  000A88  22DA               	addwfc	fsr2h,f,c
  2095  000A8A  0E01               	movlw	1
  2096  000A8C  6EDF               	movwf	indf2,c
  2097                           
  2098                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2099  000A8E  5008               	movf	CAN_GenID@frameID,w,c
  2100  000A90  6E09               	movwf	??_CAN_GenID& (0+255),c
  2101  000A92  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2102  000A94  90D8               	bcf	status,0,c
  2103  000A96  3609               	rlcf	??_CAN_GenID,f,c
  2104  000A98  360A               	rlcf	??_CAN_GenID+1,f,c
  2105  000A9A  90D8               	bcf	status,0,c
  2106  000A9C  3609               	rlcf	??_CAN_GenID,f,c
  2107  000A9E  360A               	rlcf	??_CAN_GenID+1,f,c
  2108  000AA0  EE20 F006          	lfsr	2,6
  2109  000AA4  5006               	movf	CAN_GenID@message,w,c
  2110  000AA6  26D9               	addwf	fsr2l,f,c
  2111  000AA8  5007               	movf	CAN_GenID@message+1,w,c
  2112  000AAA  22DA               	addwfc	fsr2h,f,c
  2113  000AAC  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2114  000AB0  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2115                           
  2116                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  2117  000AB4  0E2C               	movlw	44
  2118  000AB6  6E09               	movwf	??_CAN_GenID& (0+255),c
  2119  000AB8  0E01               	movlw	1
  2120  000ABA  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  2121  000ABC  EE20  F03D         	lfsr	2,_DaneCan+2
  2122  000AC0  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  2123  000AC4  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  2124  000AC8  5009               	movf	??_CAN_GenID,w,c
  2125  000ACA  260B               	addwf	??_CAN_GenID+2,f,c
  2126  000ACC  500A               	movf	??_CAN_GenID+1,w,c
  2127  000ACE  220C               	addwfc	??_CAN_GenID+3,f,c
  2128  000AD0  EE20 F004          	lfsr	2,4
  2129  000AD4  5006               	movf	CAN_GenID@message,w,c
  2130  000AD6  26D9               	addwf	fsr2l,f,c
  2131  000AD8  5007               	movf	CAN_GenID@message+1,w,c
  2132  000ADA  22DA               	addwfc	fsr2h,f,c
  2133  000ADC  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  2134  000AE0  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  2135                           
  2136                           ;CAN.c: 391:     message ->id.bits.b16 = 0;
  2137  000AE4  EE20 F006          	lfsr	2,6
  2138  000AE8  5006               	movf	CAN_GenID@message,w,c
  2139  000AEA  26D9               	addwf	fsr2l,f,c
  2140  000AEC  5007               	movf	CAN_GenID@message+1,w,c
  2141  000AEE  22DA               	addwfc	fsr2h,f,c
  2142  000AF0  90DF               	bcf	indf2,0,c
  2143                           
  2144                           ;CAN.c: 392:     message ->id.bits.b17 = 0;
  2145  000AF2  EE20 F006          	lfsr	2,6
  2146  000AF6  5006               	movf	CAN_GenID@message,w,c
  2147  000AF8  26D9               	addwf	fsr2l,f,c
  2148  000AFA  5007               	movf	CAN_GenID@message+1,w,c
  2149  000AFC  22DA               	addwfc	fsr2h,f,c
  2150  000AFE  92DF               	bcf	indf2,1,c
  2151  000B00  0012               	return		;funcret
  2152  000B02                     __end_of_CAN_GenID:
  2153                           	opt callstack 0
  2154                           
  2155 ;; *************** function _CAN_TakeFrame *****************
  2156 ;; Defined at:
  2157 ;;		line 247 in file "CAN.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  message         2   13[COMRAM] PTR struct .
  2160 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  k               1   18[COMRAM] unsigned char 
  2163 ;;  tempCON         1   17[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      enum E10433
  2166 ;; Registers used:
  2167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;Total ram usage:        6 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    4
  2180 ;; This function calls:
  2181 ;;		_CAN_MoveBuffIntoFrame
  2182 ;;		___awdiv
  2183 ;; This function is called by:
  2184 ;;		_TRM_DataTransmition
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text15
  2189  000060                     __ptext15:
  2190                           	opt callstack 0
  2191  000060                     _CAN_TakeFrame:
  2192                           	opt callstack 25
  2193                           
  2194                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2195                           
  2196                           ;incstack = 0
  2197  000060  506F               	movf	3951,w,c	;volatile
  2198  000062  0B0F               	andlw	15
  2199  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2200                           
  2201                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2202  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2203  000068  0990               	iorlw	144
  2204  00006A  6E77               	movwf	3959,c	;volatile
  2205                           
  2206                           ;CAN.c: 256:     switch(k)
  2207  00006C  D018               	goto	l2615
  2208  00006E                     l188:
  2209                           
  2210                           ;CAN.c: 259:             tempCON = RXB0CON;
  2211  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2212                           
  2213                           ;CAN.c: 260:             break;
  2214  000072  D035               	goto	l189
  2215  000074                     l190:
  2216                           
  2217                           ;CAN.c: 262:             tempCON = RXB1CON;
  2218  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2219                           
  2220                           ;CAN.c: 263:             break;
  2221  000078  D032               	goto	l189
  2222  00007A                     l191:
  2223                           
  2224                           ;CAN.c: 265:             tempCON = B0CON;
  2225  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2226                           
  2227                           ;CAN.c: 266:             break;
  2228  00007E  D02F               	goto	l189
  2229  000080                     l192:
  2230                           
  2231                           ;CAN.c: 268:             tempCON = B1CON;
  2232  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2233                           
  2234                           ;CAN.c: 269:             break;
  2235  000084  D02C               	goto	l189
  2236  000086                     l193:
  2237                           
  2238                           ;CAN.c: 271:             tempCON = B2CON;
  2239  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2240                           
  2241                           ;CAN.c: 272:             break;
  2242  00008A  D029               	goto	l189
  2243  00008C                     l194:
  2244                           
  2245                           ;CAN.c: 274:             tempCON = B3CON;
  2246  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2247                           
  2248                           ;CAN.c: 275:             break;
  2249  000090  D026               	goto	l189
  2250  000092                     l195:
  2251                           
  2252                           ;CAN.c: 277:             tempCON = B4CON;
  2253  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2254                           
  2255                           ;CAN.c: 278:             break;
  2256  000096  D023               	goto	l189
  2257  000098                     l196:
  2258                           
  2259                           ;CAN.c: 280:             tempCON = B5CON;
  2260  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2261                           
  2262                           ;CAN.c: 281:             break;
  2263  00009C  D020               	goto	l189
  2264  00009E                     l2615:
  2265  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2266  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2267  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2268                           
  2269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 1, Range of values is 0 to 0
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte            4     3 (average)
  2275                           ;	Chosen strategy is simple_byte
  2276  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2277  0000A6  0A00               	xorlw	0	; case 0
  2278  0000A8  A4D8               	btfss	status,2,c
  2279  0000AA  D019               	goto	l189
  2280                           
  2281                           ; Switch size 1, requested type "simple"
  2282                           ; Number of cases is 8, Range of values is 0 to 7
  2283                           ; switch strategies available:
  2284                           ; Name         Instructions Cycles
  2285                           ; simple_byte           25    13 (average)
  2286                           ;	Chosen strategy is simple_byte
  2287  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2288  0000AE  0A00               	xorlw	0	; case 0
  2289  0000B0  B4D8               	btfsc	status,2,c
  2290  0000B2  D7DD               	goto	l188
  2291  0000B4  0A01               	xorlw	1	; case 1
  2292  0000B6  B4D8               	btfsc	status,2,c
  2293  0000B8  D7DD               	goto	l190
  2294  0000BA  0A03               	xorlw	3	; case 2
  2295  0000BC  B4D8               	btfsc	status,2,c
  2296  0000BE  D7DD               	goto	l191
  2297  0000C0  0A01               	xorlw	1	; case 3
  2298  0000C2  B4D8               	btfsc	status,2,c
  2299  0000C4  D7DD               	goto	l192
  2300  0000C6  0A07               	xorlw	7	; case 4
  2301  0000C8  B4D8               	btfsc	status,2,c
  2302  0000CA  D7DD               	goto	l193
  2303  0000CC  0A01               	xorlw	1	; case 5
  2304  0000CE  B4D8               	btfsc	status,2,c
  2305  0000D0  D7DD               	goto	l194
  2306  0000D2  0A03               	xorlw	3	; case 6
  2307  0000D4  B4D8               	btfsc	status,2,c
  2308  0000D6  D7DD               	goto	l195
  2309  0000D8  0A01               	xorlw	1	; case 7
  2310  0000DA  B4D8               	btfsc	status,2,c
  2311  0000DC  D7DD               	goto	l196
  2312  0000DE                     l189:
  2313                           
  2314                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2315  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2316  0000E0  D0A5               	goto	l2651
  2317                           
  2318                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2319  0000E2  EE20 F003          	lfsr	2,3
  2320  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2321  0000E8  26D9               	addwf	fsr2l,f,c
  2322  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2323  0000EC  22DA               	addwfc	fsr2h,f,c
  2324  0000EE  5060               	movf	3936,w,c	;volatile
  2325  0000F0  0B1F               	andlw	31
  2326  0000F2  6EDF               	movwf	indf2,c
  2327                           
  2328                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2329  0000F4  EE20 F004          	lfsr	2,4
  2330  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2331  0000FA  26D9               	addwf	fsr2l,f,c
  2332  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2333  0000FE  22DA               	addwfc	fsr2h,f,c
  2334  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2335                           
  2336                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2337  000104  EE20 F005          	lfsr	2,5
  2338  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2339  00010A  26D9               	addwf	fsr2l,f,c
  2340  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2341  00010E  22DA               	addwfc	fsr2h,f,c
  2342  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2343                           
  2344                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2345  000114  EE20 F006          	lfsr	2,6
  2346  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2347  00011A  26D9               	addwf	fsr2l,f,c
  2348  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2349  00011E  22DA               	addwfc	fsr2h,f,c
  2350  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2351  000124  0E03               	movlw	3
  2352  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2353  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2354  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2355  00012E  0E00               	movlw	0
  2356  000130  6E09               	movwf	___awdiv@divisor+1,c
  2357  000132  0E08               	movlw	8
  2358  000134  6E08               	movwf	___awdiv@divisor,c
  2359  000136  EC81  F005         	call	___awdiv	;wreg free
  2360  00013A  5006               	movf	?___awdiv,w,c
  2361  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2362  00013E  6EDF               	movwf	indf2,c
  2363                           
  2364                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2365  000140  5061               	movf	3937,w,c	;volatile
  2366  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2367  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2368  000146  0E05               	movlw	5
  2369  000148                     u1215:
  2370  000148  90D8               	bcf	status,0,c
  2371  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2372  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2373  00014E  2EE8               	decfsz	wreg,f,c
  2374  000150  D7FB               	goto	u1215
  2375  000152  EE20 F006          	lfsr	2,6
  2376  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2377  000158  26D9               	addwf	fsr2l,f,c
  2378  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2379  00015C  22DA               	addwfc	fsr2h,f,c
  2380  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2381  000160  12DE               	iorwf	postinc2,f,c
  2382  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2383  000164  12DD               	iorwf	postdec2,f,c
  2384                           
  2385                           ;CAN.c: 292:         message->frame_type=0x03;
  2386  000166  EE20 F002          	lfsr	2,2
  2387  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2388  00016C  26D9               	addwf	fsr2l,f,c
  2389  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2390  000170  22DA               	addwfc	fsr2h,f,c
  2391  000172  0E03               	movlw	3
  2392  000174  6EDF               	movwf	indf2,c
  2393                           
  2394                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2395  000176  BC65               	btfsc	3941,6,c	;volatile
  2396  000178  D068               	goto	l2657
  2397                           
  2398                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2399  00017A  EE20 F001          	lfsr	2,1
  2400  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2401  000180  26D9               	addwf	fsr2l,f,c
  2402  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2403  000184  22DA               	addwfc	fsr2h,f,c
  2404  000186  0E01               	movlw	1
  2405  000188  6EDF               	movwf	indf2,c
  2406                           
  2407                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2408  00018A  EE20 F010          	lfsr	2,16
  2409  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2410  000190  26D9               	addwf	fsr2l,f,c
  2411  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2412  000194  22DA               	addwfc	fsr2h,f,c
  2413  000196  5065               	movf	3941,w,c	;volatile
  2414  000198  0B0F               	andlw	15
  2415  00019A  6EDF               	movwf	indf2,c
  2416                           
  2417                           ;CAN.c: 300:             if(message->data_length > 8)
  2418  00019C  EE20 F010          	lfsr	2,16
  2419  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2420  0001A2  26D9               	addwf	fsr2l,f,c
  2421  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2422  0001A6  22DA               	addwfc	fsr2h,f,c
  2423  0001A8  0E08               	movlw	8
  2424  0001AA  64DF               	cpfsgt	indf2,c
  2425  0001AC  D041               	goto	l2655
  2426  0001AE  D01E               	goto	l2649
  2427  0001B0                     l2631:
  2428                           
  2429                           ;CAN.c: 306:                         RXB0CON = 0;
  2430  0001B0  0E00               	movlw	0
  2431  0001B2  6E60               	movwf	3936,c	;volatile
  2432                           
  2433                           ;CAN.c: 307:                         break;
  2434  0001B4  D03B               	goto	l2651
  2435  0001B6                     l2633:
  2436                           
  2437                           ;CAN.c: 309:                         RXB1CON = 0;
  2438  0001B6  0E00               	movlw	0
  2439  0001B8  010F               	movlb	15	; () banked
  2440  0001BA  D00E               	goto	L1
  2441  0001BC                     l2635:
  2442                           
  2443                           ;CAN.c: 312:                         B0CON = 0;
  2444  0001BC  0E00               	movlw	0
  2445  0001BE  010E               	movlb	14	; () banked
  2446  0001C0  6F20               	movwf	32,b	;volatile
  2447                           
  2448                           ;CAN.c: 313:                         break;
  2449  0001C2  D034               	goto	l2651
  2450  0001C4                     l2637:
  2451                           
  2452                           ;CAN.c: 315:                         B1CON = 0;
  2453  0001C4  0E00               	movlw	0
  2454  0001C6  010E               	movlb	14	; () banked
  2455  0001C8  6F30               	movwf	48,b	;volatile
  2456                           
  2457                           ;CAN.c: 316:                         break;
  2458  0001CA  D030               	goto	l2651
  2459  0001CC                     l2639:
  2460                           
  2461                           ;CAN.c: 318:                         B2CON = 0;
  2462  0001CC  0E00               	movlw	0
  2463  0001CE  010E               	movlb	14	; () banked
  2464  0001D0  6F40               	movwf	64,b	;volatile
  2465                           
  2466                           ;CAN.c: 319:                         break;
  2467  0001D2  D02C               	goto	l2651
  2468  0001D4                     l2641:
  2469                           
  2470                           ;CAN.c: 321:                         B3CON = 0;
  2471  0001D4  0E00               	movlw	0
  2472  0001D6  010E               	movlb	14	; () banked
  2473  0001D8                     L1:
  2474  0001D8  6F50               	movwf	80,b	;volatile
  2475                           
  2476                           ;CAN.c: 322:                         break;
  2477  0001DA  D028               	goto	l2651
  2478  0001DC                     l2643:
  2479                           
  2480                           ;CAN.c: 324:                         B4CON = 0;
  2481  0001DC  0E00               	movlw	0
  2482  0001DE  010E               	movlb	14	; () banked
  2483  0001E0  6F60               	movwf	96,b	;volatile
  2484                           
  2485                           ;CAN.c: 325:                         break;
  2486  0001E2  D024               	goto	l2651
  2487  0001E4                     l2645:
  2488                           
  2489                           ;CAN.c: 327:                         B5CON = 0;
  2490  0001E4  0E00               	movlw	0
  2491  0001E6  010E               	movlb	14	; () banked
  2492  0001E8  6F70               	movwf	112,b	;volatile
  2493                           
  2494                           ;CAN.c: 328:                         break;
  2495  0001EA  D020               	goto	l2651
  2496  0001EC                     l2649:
  2497  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2498  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2499  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2500                           
  2501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2502                           ; Switch size 1, requested type "simple"
  2503                           ; Number of cases is 1, Range of values is 0 to 0
  2504                           ; switch strategies available:
  2505                           ; Name         Instructions Cycles
  2506                           ; simple_byte            4     3 (average)
  2507                           ;	Chosen strategy is simple_byte
  2508  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2509  0001F4  0A00               	xorlw	0	; case 0
  2510  0001F6  A4D8               	btfss	status,2,c
  2511  0001F8  D019               	goto	l2651
  2512                           
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 8, Range of values is 0 to 7
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte           25    13 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2520  0001FC  0A00               	xorlw	0	; case 0
  2521  0001FE  B4D8               	btfsc	status,2,c
  2522  000200  D7D7               	goto	l2631
  2523  000202  0A01               	xorlw	1	; case 1
  2524  000204  B4D8               	btfsc	status,2,c
  2525  000206  D7D7               	goto	l2633
  2526  000208  0A03               	xorlw	3	; case 2
  2527  00020A  B4D8               	btfsc	status,2,c
  2528  00020C  D7D7               	goto	l2635
  2529  00020E  0A01               	xorlw	1	; case 3
  2530  000210  B4D8               	btfsc	status,2,c
  2531  000212  D7D8               	goto	l2637
  2532  000214  0A07               	xorlw	7	; case 4
  2533  000216  B4D8               	btfsc	status,2,c
  2534  000218  D7D9               	goto	l2639
  2535  00021A  0A01               	xorlw	1	; case 5
  2536  00021C  B4D8               	btfsc	status,2,c
  2537  00021E  D7DA               	goto	l2641
  2538  000220  0A03               	xorlw	3	; case 6
  2539  000222  B4D8               	btfsc	status,2,c
  2540  000224  D7DB               	goto	l2643
  2541  000226  0A01               	xorlw	1	; case 7
  2542  000228  B4D8               	btfsc	status,2,c
  2543  00022A  D7DC               	goto	l2645
  2544  00022C                     l2651:
  2545                           
  2546                           ;CAN.c: 330:                 return FALSE;
  2547  00022C  0E00               	movlw	0
  2548  00022E  0012               	return	
  2549  000230                     l2655:
  2550                           
  2551                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2552  000230  0E08               	movlw	8
  2553  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  2554  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2555  000236  0E00               	movlw	0
  2556  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2557  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2558  00023C  0E66               	movlw	102
  2559  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2560  000240  0E0F               	movlw	15
  2561  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2562  000244  EC53  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2563                           
  2564                           ;CAN.c: 333:         }
  2565  000248  D027               	goto	l2677
  2566  00024A                     l2657:
  2567                           
  2568                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  2569  00024A  EE20 F001          	lfsr	2,1
  2570  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  2571  000250  26D9               	addwf	fsr2l,f,c
  2572  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  2573  000254  22DA               	addwfc	fsr2h,f,c
  2574  000256  0E02               	movlw	2
  2575  000258  6EDF               	movwf	indf2,c
  2576  00025A  D01E               	goto	l2677
  2577  00025C                     l2659:
  2578                           
  2579                           ;CAN.c: 343:                 RXB0CON = 0;
  2580  00025C  0E00               	movlw	0
  2581  00025E  6E60               	movwf	3936,c	;volatile
  2582                           
  2583                           ;CAN.c: 344:                 break;
  2584  000260  D03B               	goto	l2679
  2585  000262                     l2661:
  2586                           
  2587                           ;CAN.c: 346:                 RXB1CON = 0;
  2588  000262  0E00               	movlw	0
  2589  000264  010F               	movlb	15	; () banked
  2590  000266  D00E               	goto	L2
  2591  000268                     l2663:
  2592                           
  2593                           ;CAN.c: 349:                 B0CON = 0;
  2594  000268  0E00               	movlw	0
  2595  00026A  010E               	movlb	14	; () banked
  2596  00026C  6F20               	movwf	32,b	;volatile
  2597                           
  2598                           ;CAN.c: 350:                 break;
  2599  00026E  D034               	goto	l2679
  2600  000270                     l2665:
  2601                           
  2602                           ;CAN.c: 352:                 B1CON = 0;
  2603  000270  0E00               	movlw	0
  2604  000272  010E               	movlb	14	; () banked
  2605  000274  6F30               	movwf	48,b	;volatile
  2606                           
  2607                           ;CAN.c: 353:                 break;
  2608  000276  D030               	goto	l2679
  2609  000278                     l2667:
  2610                           
  2611                           ;CAN.c: 355:                 B2CON = 0;
  2612  000278  0E00               	movlw	0
  2613  00027A  010E               	movlb	14	; () banked
  2614  00027C  6F40               	movwf	64,b	;volatile
  2615                           
  2616                           ;CAN.c: 356:                 break;
  2617  00027E  D02C               	goto	l2679
  2618  000280                     l2669:
  2619                           
  2620                           ;CAN.c: 358:                 B3CON = 0;
  2621  000280  0E00               	movlw	0
  2622  000282  010E               	movlb	14	; () banked
  2623  000284                     L2:
  2624  000284  6F50               	movwf	80,b	;volatile
  2625                           
  2626                           ;CAN.c: 359:                 break;
  2627  000286  D028               	goto	l2679
  2628  000288                     l2671:
  2629                           
  2630                           ;CAN.c: 361:                 B4CON = 0;
  2631  000288  0E00               	movlw	0
  2632  00028A  010E               	movlb	14	; () banked
  2633  00028C  6F60               	movwf	96,b	;volatile
  2634                           
  2635                           ;CAN.c: 362:                 break;
  2636  00028E  D024               	goto	l2679
  2637  000290                     l2673:
  2638                           
  2639                           ;CAN.c: 364:                 B5CON = 0;
  2640  000290  0E00               	movlw	0
  2641  000292  010E               	movlb	14	; () banked
  2642  000294  6F70               	movwf	112,b	;volatile
  2643                           
  2644                           ;CAN.c: 365:                 break;
  2645  000296  D020               	goto	l2679
  2646  000298                     l2677:
  2647  000298  5013               	movf	CAN_TakeFrame@k,w,c
  2648  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2649  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2650                           
  2651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2652                           ; Switch size 1, requested type "simple"
  2653                           ; Number of cases is 1, Range of values is 0 to 0
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte            4     3 (average)
  2657                           ;	Chosen strategy is simple_byte
  2658  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  2659  0002A0  0A00               	xorlw	0	; case 0
  2660  0002A2  A4D8               	btfss	status,2,c
  2661  0002A4  D019               	goto	l2679
  2662                           
  2663                           ; Switch size 1, requested type "simple"
  2664                           ; Number of cases is 8, Range of values is 0 to 7
  2665                           ; switch strategies available:
  2666                           ; Name         Instructions Cycles
  2667                           ; simple_byte           25    13 (average)
  2668                           ;	Chosen strategy is simple_byte
  2669  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  2670  0002A8  0A00               	xorlw	0	; case 0
  2671  0002AA  B4D8               	btfsc	status,2,c
  2672  0002AC  D7D7               	goto	l2659
  2673  0002AE  0A01               	xorlw	1	; case 1
  2674  0002B0  B4D8               	btfsc	status,2,c
  2675  0002B2  D7D7               	goto	l2661
  2676  0002B4  0A03               	xorlw	3	; case 2
  2677  0002B6  B4D8               	btfsc	status,2,c
  2678  0002B8  D7D7               	goto	l2663
  2679  0002BA  0A01               	xorlw	1	; case 3
  2680  0002BC  B4D8               	btfsc	status,2,c
  2681  0002BE  D7D8               	goto	l2665
  2682  0002C0  0A07               	xorlw	7	; case 4
  2683  0002C2  B4D8               	btfsc	status,2,c
  2684  0002C4  D7D9               	goto	l2667
  2685  0002C6  0A01               	xorlw	1	; case 5
  2686  0002C8  B4D8               	btfsc	status,2,c
  2687  0002CA  D7DA               	goto	l2669
  2688  0002CC  0A03               	xorlw	3	; case 6
  2689  0002CE  B4D8               	btfsc	status,2,c
  2690  0002D0  D7DB               	goto	l2671
  2691  0002D2  0A01               	xorlw	1	; case 7
  2692  0002D4  B4D8               	btfsc	status,2,c
  2693  0002D6  D7DC               	goto	l2673
  2694  0002D8                     l2679:
  2695                           
  2696                           ;CAN.c: 367:         return TRUE;
  2697  0002D8  0E01               	movlw	1
  2698  0002DA  0012               	return		;funcret
  2699  0002DC                     __end_of_CAN_TakeFrame:
  2700                           	opt callstack 0
  2701                           
  2702 ;; *************** function ___awdiv *****************
  2703 ;; Defined at:
  2704 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  dividend        2    5[COMRAM] int 
  2707 ;;  divisor         2    7[COMRAM] int 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  quotient        2   11[COMRAM] int 
  2710 ;;  sign            1   10[COMRAM] unsigned char 
  2711 ;;  counter         1    9[COMRAM] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2    5[COMRAM] int 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2722 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;Total ram usage:        8 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    3
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_CAN_TakeFrame
  2732 ;;		_FRAME_HandleCanFrame
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text16
  2737  000B02                     __ptext16:
  2738                           	opt callstack 0
  2739  000B02                     ___awdiv:
  2740                           	opt callstack 25
  2741                           
  2742                           ;incstack = 0
  2743  000B02  0E00               	movlw	0
  2744  000B04  6E0B               	movwf	___awdiv@sign,c
  2745  000B06  AE09               	btfss	___awdiv@divisor+1,7,c
  2746  000B08  D006               	goto	l2535
  2747  000B0A  6C08               	negf	___awdiv@divisor,c
  2748  000B0C  1E09               	comf	___awdiv@divisor+1,f,c
  2749  000B0E  B0D8               	btfsc	status,0,c
  2750  000B10  2A09               	incf	___awdiv@divisor+1,f,c
  2751  000B12  0E01               	movlw	1
  2752  000B14  6E0B               	movwf	___awdiv@sign,c
  2753  000B16                     l2535:
  2754  000B16  AE07               	btfss	___awdiv@dividend+1,7,c
  2755  000B18  D006               	goto	l2541
  2756  000B1A  6C06               	negf	___awdiv@dividend,c
  2757  000B1C  1E07               	comf	___awdiv@dividend+1,f,c
  2758  000B1E  B0D8               	btfsc	status,0,c
  2759  000B20  2A07               	incf	___awdiv@dividend+1,f,c
  2760  000B22  0E01               	movlw	1
  2761  000B24  1A0B               	xorwf	___awdiv@sign,f,c
  2762  000B26                     l2541:
  2763  000B26  0E00               	movlw	0
  2764  000B28  6E0D               	movwf	___awdiv@quotient+1,c
  2765  000B2A  0E00               	movlw	0
  2766  000B2C  6E0C               	movwf	___awdiv@quotient,c
  2767  000B2E  5008               	movf	___awdiv@divisor,w,c
  2768  000B30  1009               	iorwf	___awdiv@divisor+1,w,c
  2769  000B32  B4D8               	btfsc	status,2,c
  2770  000B34  D01C               	goto	l2563
  2771  000B36  0E01               	movlw	1
  2772  000B38  6E0A               	movwf	___awdiv@counter,c
  2773  000B3A  D004               	goto	l2549
  2774  000B3C                     l2547:
  2775  000B3C  90D8               	bcf	status,0,c
  2776  000B3E  3608               	rlcf	___awdiv@divisor,f,c
  2777  000B40  3609               	rlcf	___awdiv@divisor+1,f,c
  2778  000B42  2A0A               	incf	___awdiv@counter,f,c
  2779  000B44                     l2549:
  2780  000B44  AE09               	btfss	___awdiv@divisor+1,7,c
  2781  000B46  D7FA               	goto	l2547
  2782  000B48                     u1120:
  2783  000B48  90D8               	bcf	status,0,c
  2784  000B4A  360C               	rlcf	___awdiv@quotient,f,c
  2785  000B4C  360D               	rlcf	___awdiv@quotient+1,f,c
  2786  000B4E  5008               	movf	___awdiv@divisor,w,c
  2787  000B50  5C06               	subwf	___awdiv@dividend,w,c
  2788  000B52  5009               	movf	___awdiv@divisor+1,w,c
  2789  000B54  5807               	subwfb	___awdiv@dividend+1,w,c
  2790  000B56  A0D8               	btfss	status,0,c
  2791  000B58  D005               	goto	l2559
  2792  000B5A  5008               	movf	___awdiv@divisor,w,c
  2793  000B5C  5E06               	subwf	___awdiv@dividend,f,c
  2794  000B5E  5009               	movf	___awdiv@divisor+1,w,c
  2795  000B60  5A07               	subwfb	___awdiv@dividend+1,f,c
  2796  000B62  800C               	bsf	___awdiv@quotient,0,c
  2797  000B64                     l2559:
  2798  000B64  90D8               	bcf	status,0,c
  2799  000B66  3209               	rrcf	___awdiv@divisor+1,f,c
  2800  000B68  3208               	rrcf	___awdiv@divisor,f,c
  2801  000B6A  2E0A               	decfsz	___awdiv@counter,f,c
  2802  000B6C  D7ED               	goto	u1120
  2803  000B6E                     l2563:
  2804  000B6E  500B               	movf	___awdiv@sign,w,c
  2805  000B70  B4D8               	btfsc	status,2,c
  2806  000B72  D004               	goto	l2567
  2807  000B74  6C0C               	negf	___awdiv@quotient,c
  2808  000B76  1E0D               	comf	___awdiv@quotient+1,f,c
  2809  000B78  B0D8               	btfsc	status,0,c
  2810  000B7A  2A0D               	incf	___awdiv@quotient+1,f,c
  2811  000B7C                     l2567:
  2812  000B7C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  2813  000B80  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  2814  000B84  0012               	return		;funcret
  2815  000B86                     __end_of___awdiv:
  2816                           	opt callstack 0
  2817                           
  2818 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  2819 ;; Defined at:
  2820 ;;		line 169 in file "CAN.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  2823 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2824 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  2825 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  i               1    9[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2841 ;;Total ram usage:        5 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    3
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_CAN_SendFrame
  2848 ;;		_CAN_TakeFrame
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text17
  2853  000EA6                     __ptext17:
  2854                           	opt callstack 0
  2855  000EA6                     _CAN_MoveBuffIntoFrame:
  2856                           	opt callstack 24
  2857                           
  2858                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  2859                           
  2860                           ;incstack = 0
  2861  000EA6  0E00               	movlw	0
  2862  000EA8  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  2863  000EAA                     l2199:
  2864                           
  2865                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  2866  000EAA  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2867  000EAC  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  2868  000EAE  6ED9               	movwf	fsr2l,c
  2869  000EB0  0E00               	movlw	0
  2870  000EB2  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  2871  000EB4  6EDA               	movwf	fsr2h,c
  2872  000EB6  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2873  000EB8  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  2874  000EBA  6EE1               	movwf	fsr1l,c
  2875  000EBC  0E00               	movlw	0
  2876  000EBE  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  2877  000EC0  6EE2               	movwf	fsr1h,c
  2878  000EC2  CFDF FFE7          	movff	indf2,indf1
  2879                           
  2880                           ;CAN.c: 175:     }
  2881  000EC6  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  2882  000EC8  0E07               	movlw	7
  2883  000ECA  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  2884  000ECC  D7EE               	goto	l2199
  2885  000ECE  0012               	return	
  2886  000ED0                     __end_of_CAN_MoveBuffIntoFrame:
  2887                           	opt callstack 0
  2888                           
  2889 ;; *************** function _TMR1_Update_flag_Set *****************
  2890 ;; Defined at:
  2891 ;;		line 32 in file "TMR1.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  a               2    5[COMRAM] unsigned int 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		None
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;Total ram usage:        2 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    3
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text18
  2920  000FE0                     __ptext18:
  2921                           	opt callstack 0
  2922  000FE0                     _TMR1_Update_flag_Set:
  2923                           	opt callstack 27
  2924                           
  2925                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  2926                           
  2927                           ;incstack = 0
  2928  000FE0  C006  F042         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  2929  000FE4  C007  F043         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  2930  000FE8  0012               	return		;funcret
  2931  000FEA                     __end_of_TMR1_Update_flag_Set:
  2932                           	opt callstack 0
  2933                           
  2934 ;; *************** function _TMR1_Update_flag_Get *****************
  2935 ;; Defined at:
  2936 ;;		line 47 in file "TMR1.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  2    5[COMRAM] unsigned int 
  2943 ;; Registers used:
  2944 ;;		None
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;Total ram usage:        2 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    3
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text19
  2965  000FEA                     __ptext19:
  2966                           	opt callstack 0
  2967  000FEA                     _TMR1_Update_flag_Get:
  2968                           	opt callstack 27
  2969                           
  2970                           ;TMR1.c: 49:     return TMR1_Update_flag;
  2971                           
  2972                           ;incstack = 0
  2973  000FEA  C042  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  2974  000FEE  C043  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  2975  000FF2  0012               	return		;funcret
  2976  000FF4                     __end_of_TMR1_Update_flag_Get:
  2977                           	opt callstack 0
  2978                           
  2979 ;; *************** function _LED_Update *****************
  2980 ;; Defined at:
  2981 ;;		line 105 in file "LED.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      unsigned char 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    5
  3002 ;; This function calls:
  3003 ;;		_LED_Control
  3004 ;;		_LED_Left
  3005 ;;		_LED_Light_Pos
  3006 ;;		_LED_Right
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text20
  3013  000B86                     __ptext20:
  3014                           	opt callstack 0
  3015  000B86                     _LED_Update:
  3016                           	opt callstack 25
  3017                           
  3018                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  3019                           
  3020                           ;incstack = 0
  3021  000B86  504A               	movf	_LOCK,w,c
  3022  000B88  A4D8               	btfss	status,2,c
  3023  000B8A  D013               	goto	l2783
  3024                           
  3025                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  3026  000B8C  0E00               	movlw	0
  3027  000B8E  6E07               	movwf	LED_Control@diode+1,c
  3028  000B90  0E00               	movlw	0
  3029  000B92  6E06               	movwf	LED_Control@diode,c
  3030  000B94  0E00               	movlw	0
  3031  000B96  EC57  F003         	call	_LED_Control
  3032                           
  3033                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3034  000B9A  C04D  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3035  000B9E  C04E  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3036  000BA2  C051  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3037  000BA6  C052  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3038  000BAA  5053               	movf	LED_Update@Green,w,c
  3039  000BAC  ECDF  F004         	call	_LED_Light_Pos
  3040                           
  3041                           ;LED.c: 117:     }
  3042  000BB0  D012               	goto	l283
  3043  000BB2                     l2783:
  3044                           
  3045                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  3046  000BB2  0E00               	movlw	0
  3047  000BB4  6E07               	movwf	LED_Control@diode+1,c
  3048  000BB6  0E00               	movlw	0
  3049  000BB8  6E06               	movwf	LED_Control@diode,c
  3050  000BBA  5053               	movf	LED_Update@Green,w,c
  3051  000BBC  EC57  F003         	call	_LED_Control
  3052                           
  3053                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3054  000BC0  C04F  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3055  000BC4  C050  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3056  000BC8  C051  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3057  000BCC  C052  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3058  000BD0  0E00               	movlw	0
  3059  000BD2  ECDF  F004         	call	_LED_Light_Pos
  3060  000BD6                     l283:
  3061                           
  3062                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  3063  000BD6  C04F  F006         	movff	LED_Update@pos1,LED_Right@a
  3064  000BDA  C050  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3065  000BDE  ECB6  F006         	call	_LED_Right	;wreg free
  3066  000BE2  C006  F04F         	movff	?_LED_Right,LED_Update@pos1
  3067  000BE6  C007  F050         	movff	?_LED_Right+1,LED_Update@pos1+1
  3068                           
  3069                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  3070  000BEA  C04D  F006         	movff	LED_Update@pos2,LED_Left@a
  3071  000BEE  C04E  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3072  000BF2  EC01  F007         	call	_LED_Left	;wreg free
  3073  000BF6  C006  F04D         	movff	?_LED_Left,LED_Update@pos2
  3074  000BFA  C007  F04E         	movff	?_LED_Left+1,LED_Update@pos2+1
  3075  000BFE  0012               	return		;funcret
  3076  000C00                     __end_of_LED_Update:
  3077                           	opt callstack 0
  3078                           
  3079 ;; *************** function _LED_Light_Pos *****************
  3080 ;; Defined at:
  3081 ;;		line 196 in file "LED.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  color           1    wreg     enum E10644
  3084 ;;  pos             2   12[COMRAM] unsigned int 
  3085 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  color           1   16[COMRAM] enum E10644
  3088 ;;  flage           2   21[COMRAM] unsigned int 
  3089 ;;  pos2            2   19[COMRAM] unsigned int 
  3090 ;;  LED_array       2   17[COMRAM] unsigned int 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  2   12[COMRAM] unsigned int 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;Total ram usage:       11 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    4
  3107 ;; This function calls:
  3108 ;;		_LED_Control
  3109 ;;		_LED_Left
  3110 ;;		_LED_Right
  3111 ;;		___lwdiv
  3112 ;; This function is called by:
  3113 ;;		_LED_Update
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text21
  3118  0009BE                     __ptext21:
  3119                           	opt callstack 0
  3120  0009BE                     _LED_Light_Pos:
  3121                           	opt callstack 25
  3122                           
  3123                           ;incstack = 0
  3124                           ;LED_Light_Pos@color stored from wreg
  3125  0009BE  6E11               	movwf	LED_Light_Pos@color,c
  3126                           
  3127                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  3128  0009C0  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3129  0009C4  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3130                           
  3131                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  3132  0009C8  0E00               	movlw	0
  3133  0009CA  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3134  0009CC  0E00               	movlw	0
  3135  0009CE  6E12               	movwf	LED_Light_Pos@LED_array,c
  3136                           
  3137                           ;LED.c: 200:     UINT flage = fulfillment/10;
  3138  0009D0  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3139  0009D4  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3140  0009D8  0E00               	movlw	0
  3141  0009DA  6E09               	movwf	___lwdiv@divisor+1,c
  3142  0009DC  0E0A               	movlw	10
  3143  0009DE  6E08               	movwf	___lwdiv@divisor,c
  3144  0009E0  EC8D  F006         	call	___lwdiv	;wreg free
  3145  0009E4  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3146  0009E8  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3147                           
  3148                           ;LED.c: 201:     if(color == RED)
  3149  0009EC  5011               	movf	LED_Light_Pos@color,w,c
  3150  0009EE  B4D8               	btfsc	status,2,c
  3151  0009F0  D017               	goto	l2717
  3152  0009F2  D031               	goto	l2725
  3153  0009F4                     l2711:
  3154                           
  3155                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  3156  0009F4  5012               	movf	LED_Light_Pos@LED_array,w,c
  3157  0009F6  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3158  0009F8  6E12               	movwf	LED_Light_Pos@LED_array,c
  3159  0009FA  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3160  0009FC  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3161  0009FE  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3162                           
  3163                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  3164  000A00  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3165  000A04  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3166  000A08  EC01  F007         	call	_LED_Left	;wreg free
  3167  000A0C  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3168  000A10  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3169                           
  3170                           ;LED.c: 207:             flage = flage - 1;
  3171  000A14  0EFF               	movlw	255
  3172  000A16  2416               	addwf	LED_Light_Pos@flage,w,c
  3173  000A18  6E16               	movwf	LED_Light_Pos@flage,c
  3174  000A1A  0EFF               	movlw	255
  3175  000A1C  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3176  000A1E  6E17               	movwf	LED_Light_Pos@flage+1,c
  3177  000A20                     l2717:
  3178                           
  3179                           ;LED.c: 203:         while(flage>0)
  3180  000A20  5016               	movf	LED_Light_Pos@flage,w,c
  3181  000A22  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3182  000A24  B4D8               	btfsc	status,2,c
  3183  000A26  D01B               	goto	u1260
  3184  000A28  D7E5               	goto	l2711
  3185  000A2A                     l2719:
  3186                           
  3187                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  3188  000A2A  5012               	movf	LED_Light_Pos@LED_array,w,c
  3189  000A2C  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3190  000A2E  6E12               	movwf	LED_Light_Pos@LED_array,c
  3191  000A30  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3192  000A32  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3193  000A34  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3194                           
  3195                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  3196  000A36  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3197  000A3A  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3198  000A3E  ECB6  F006         	call	_LED_Right	;wreg free
  3199  000A42  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3200  000A46  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3201                           
  3202                           ;LED.c: 216:             flage = flage - 1;
  3203  000A4A  0EFF               	movlw	255
  3204  000A4C  2416               	addwf	LED_Light_Pos@flage,w,c
  3205  000A4E  6E16               	movwf	LED_Light_Pos@flage,c
  3206  000A50  0EFF               	movlw	255
  3207  000A52  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3208  000A54  6E17               	movwf	LED_Light_Pos@flage+1,c
  3209  000A56                     l2725:
  3210                           
  3211                           ;LED.c: 212:         while(flage>0)
  3212  000A56  5016               	movf	LED_Light_Pos@flage,w,c
  3213  000A58  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3214  000A5A  A4D8               	btfss	status,2,c
  3215  000A5C  D7E6               	goto	l2719
  3216  000A5E                     u1260:
  3217                           
  3218                           ;LED.c: 219:     LED_Control(color, LED_array);
  3219  000A5E  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3220  000A62  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3221  000A66  5011               	movf	LED_Light_Pos@color,w,c
  3222  000A68  EC57  F003         	call	_LED_Control
  3223  000A6C  0012               	return		;funcret
  3224  000A6E                     __end_of_LED_Light_Pos:
  3225                           	opt callstack 0
  3226                           
  3227 ;; *************** function ___lwdiv *****************
  3228 ;; Defined at:
  3229 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  dividend        2    5[COMRAM] unsigned int 
  3232 ;;  divisor         2    7[COMRAM] unsigned int 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  quotient        2    9[COMRAM] unsigned int 
  3235 ;;  counter         1   11[COMRAM] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  2    5[COMRAM] unsigned int 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3248 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3249 ;;Total ram usage:        7 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    3
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_LED_Light_Pos
  3256 ;;		_FRAME_Plot
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text22
  3261  000D1A                     __ptext22:
  3262                           	opt callstack 0
  3263  000D1A                     ___lwdiv:
  3264                           	opt callstack 25
  3265                           
  3266                           ;incstack = 0
  3267  000D1A  0E00               	movlw	0
  3268  000D1C  6E0B               	movwf	___lwdiv@quotient+1,c
  3269  000D1E  0E00               	movlw	0
  3270  000D20  6E0A               	movwf	___lwdiv@quotient,c
  3271  000D22  5008               	movf	___lwdiv@divisor,w,c
  3272  000D24  1009               	iorwf	___lwdiv@divisor+1,w,c
  3273  000D26  B4D8               	btfsc	status,2,c
  3274  000D28  D01C               	goto	l1143
  3275  000D2A  0E01               	movlw	1
  3276  000D2C  6E0C               	movwf	___lwdiv@counter,c
  3277  000D2E  D004               	goto	l2579
  3278  000D30                     l2577:
  3279  000D30  90D8               	bcf	status,0,c
  3280  000D32  3608               	rlcf	___lwdiv@divisor,f,c
  3281  000D34  3609               	rlcf	___lwdiv@divisor+1,f,c
  3282  000D36  2A0C               	incf	___lwdiv@counter,f,c
  3283  000D38                     l2579:
  3284  000D38  AE09               	btfss	___lwdiv@divisor+1,7,c
  3285  000D3A  D7FA               	goto	l2577
  3286  000D3C                     u1160:
  3287  000D3C  90D8               	bcf	status,0,c
  3288  000D3E  360A               	rlcf	___lwdiv@quotient,f,c
  3289  000D40  360B               	rlcf	___lwdiv@quotient+1,f,c
  3290  000D42  5008               	movf	___lwdiv@divisor,w,c
  3291  000D44  5C06               	subwf	___lwdiv@dividend,w,c
  3292  000D46  5009               	movf	___lwdiv@divisor+1,w,c
  3293  000D48  5807               	subwfb	___lwdiv@dividend+1,w,c
  3294  000D4A  A0D8               	btfss	status,0,c
  3295  000D4C  D005               	goto	l2589
  3296  000D4E  5008               	movf	___lwdiv@divisor,w,c
  3297  000D50  5E06               	subwf	___lwdiv@dividend,f,c
  3298  000D52  5009               	movf	___lwdiv@divisor+1,w,c
  3299  000D54  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3300  000D56  800A               	bsf	___lwdiv@quotient,0,c
  3301  000D58                     l2589:
  3302  000D58  90D8               	bcf	status,0,c
  3303  000D5A  3209               	rrcf	___lwdiv@divisor+1,f,c
  3304  000D5C  3208               	rrcf	___lwdiv@divisor,f,c
  3305  000D5E  2E0C               	decfsz	___lwdiv@counter,f,c
  3306  000D60  D7ED               	goto	u1160
  3307  000D62                     l1143:
  3308  000D62  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3309  000D66  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3310  000D6A  0012               	return		;funcret
  3311  000D6C                     __end_of___lwdiv:
  3312                           	opt callstack 0
  3313                           
  3314 ;; *************** function _LED_Right *****************
  3315 ;; Defined at:
  3316 ;;		line 140 in file "LED.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  a               2    5[COMRAM] unsigned int 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  b               2    9[COMRAM] unsigned int 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  2    5[COMRAM] unsigned int 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;Total ram usage:        6 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    3
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_LED_Update
  3341 ;;		_LED_Light_Pos
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text23
  3346  000D6C                     __ptext23:
  3347                           	opt callstack 0
  3348  000D6C                     _LED_Right:
  3349                           	opt callstack 26
  3350                           
  3351                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3352                           
  3353                           ;incstack = 0
  3354  000D6C  A006               	btfss	LED_Right@a,0,c
  3355  000D6E  D018               	goto	l2455
  3356                           
  3357                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  3358  000D70  0EFE               	movlw	254
  3359  000D72  1406               	andwf	LED_Right@a,w,c
  3360  000D74  6E0A               	movwf	LED_Right@b,c
  3361  000D76  0E03               	movlw	3
  3362  000D78  1407               	andwf	LED_Right@a+1,w,c
  3363  000D7A  6E0B               	movwf	LED_Right@b+1,c
  3364                           
  3365                           ;LED.c: 145:         b = b >> 1;
  3366  000D7C  90D8               	bcf	status,0,c
  3367  000D7E  300B               	rrcf	LED_Right@b+1,w,c
  3368  000D80  6E08               	movwf	??_LED_Right& (0+255),c
  3369  000D82  300A               	rrcf	LED_Right@b,w,c
  3370  000D84  6E0A               	movwf	LED_Right@b,c
  3371  000D86  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3372                           
  3373                           ;LED.c: 146:         b = b | 0b1000000000;
  3374  000D8A  0E00               	movlw	0
  3375  000D8C  100A               	iorwf	LED_Right@b,w,c
  3376  000D8E  6E0A               	movwf	LED_Right@b,c
  3377  000D90  0E02               	movlw	2
  3378  000D92  100B               	iorwf	LED_Right@b+1,w,c
  3379  000D94  6E0B               	movwf	LED_Right@b+1,c
  3380                           
  3381                           ;LED.c: 147:         return b;
  3382  000D96  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3383  000D9A  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3384  000D9E  0012               	return	
  3385  000DA0                     l2455:
  3386                           
  3387                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  3388  000DA0  90D8               	bcf	status,0,c
  3389  000DA2  3007               	rrcf	LED_Right@a+1,w,c
  3390  000DA4  6E08               	movwf	??_LED_Right& (0+255),c
  3391  000DA6  3006               	rrcf	LED_Right@a,w,c
  3392  000DA8  6E06               	movwf	LED_Right@a,c
  3393  000DAA  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3394                           
  3395                           ;LED.c: 152:         return a;
  3396  000DAE  C006  F006         	movff	LED_Right@a,?_LED_Right
  3397  000DB2  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3398  000DB6  0012               	return		;funcret
  3399  000DB8                     __end_of_LED_Right:
  3400                           	opt callstack 0
  3401                           
  3402 ;; *************** function _LED_Left *****************
  3403 ;; Defined at:
  3404 ;;		line 167 in file "LED.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  a               2    5[COMRAM] unsigned int 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  b               2    7[COMRAM] unsigned int 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  2    5[COMRAM] unsigned int 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3422 ;;Total ram usage:        4 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    3
  3425 ;; This function calls:
  3426 ;;		Nothing
  3427 ;; This function is called by:
  3428 ;;		_LED_Update
  3429 ;;		_LED_Light_Pos
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text24
  3434  000E02                     __ptext24:
  3435                           	opt callstack 0
  3436  000E02                     _LED_Left:
  3437                           	opt callstack 25
  3438                           
  3439                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3440                           
  3441                           ;incstack = 0
  3442  000E02  A207               	btfss	LED_Left@a+1,1,c
  3443  000E04  D015               	goto	l2471
  3444                           
  3445                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  3446  000E06  0EFF               	movlw	255
  3447  000E08  1406               	andwf	LED_Left@a,w,c
  3448  000E0A  6E08               	movwf	LED_Left@b,c
  3449  000E0C  0E01               	movlw	1
  3450  000E0E  1407               	andwf	LED_Left@a+1,w,c
  3451  000E10  6E09               	movwf	LED_Left@b+1,c
  3452                           
  3453                           ;LED.c: 172:         b = b << 1;
  3454  000E12  90D8               	bcf	status,0,c
  3455  000E14  3408               	rlcf	LED_Left@b,w,c
  3456  000E16  6E08               	movwf	LED_Left@b,c
  3457  000E18  3409               	rlcf	LED_Left@b+1,w,c
  3458  000E1A  6E09               	movwf	LED_Left@b+1,c
  3459                           
  3460                           ;LED.c: 173:         b = b | 0b0000000001;
  3461  000E1C  0E01               	movlw	1
  3462  000E1E  1008               	iorwf	LED_Left@b,w,c
  3463  000E20  6E08               	movwf	LED_Left@b,c
  3464  000E22  5009               	movf	LED_Left@b+1,w,c
  3465  000E24  6E09               	movwf	LED_Left@b+1,c
  3466                           
  3467                           ;LED.c: 174:         return b;
  3468  000E26  C008  F006         	movff	LED_Left@b,?_LED_Left
  3469  000E2A  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3470  000E2E  0012               	return	
  3471  000E30                     l2471:
  3472                           
  3473                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  3474  000E30  90D8               	bcf	status,0,c
  3475  000E32  3406               	rlcf	LED_Left@a,w,c
  3476  000E34  6E06               	movwf	LED_Left@a,c
  3477  000E36  3407               	rlcf	LED_Left@a+1,w,c
  3478  000E38  6E07               	movwf	LED_Left@a+1,c
  3479                           
  3480                           ;LED.c: 179:         return a;
  3481  000E3A  C006  F006         	movff	LED_Left@a,?_LED_Left
  3482  000E3E  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3483  000E42  0012               	return		;funcret
  3484  000E44                     __end_of_LED_Left:
  3485                           	opt callstack 0
  3486                           
  3487 ;; *************** function _INI_All *****************
  3488 ;; Defined at:
  3489 ;;		line 52 in file "INI.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;Total ram usage:        0 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    5
  3510 ;; This function calls:
  3511 ;;		_CAN_Setup
  3512 ;;		_INI_GlobalInterrupt
  3513 ;;		_INI_LED_Start
  3514 ;;		_INI_OUTPUT
  3515 ;;		_INI_Timer
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text25
  3522  000F7E                     __ptext25:
  3523                           	opt callstack 0
  3524  000F7E                     _INI_All:
  3525                           	opt callstack 25
  3526                           
  3527                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3528                           
  3529                           ;incstack = 0
  3530  000F7E  80D1               	bsf	4049,0,c	;volatile
  3531  000F80  0004               	clrwdt		;# 
  3532                           
  3533                           ;INI.c: 64:     INI_OUTPUT();
  3534  000F82  ECB0  F007         	call	_INI_OUTPUT	;wreg free
  3535                           
  3536                           ;INI.c: 66:     CAN_Setup();
  3537  000F86  EC32  F006         	call	_CAN_Setup	;wreg free
  3538                           
  3539                           ;INI.c: 67:     INI_GlobalInterrupt();
  3540  000F8A  ECDF  F007         	call	_INI_GlobalInterrupt	;wreg free
  3541                           
  3542                           ;INI.c: 69:     INI_Timer();
  3543  000F8E  ECCC  F007         	call	_INI_Timer	;wreg free
  3544                           
  3545                           ;INI.c: 71:     INI_LED_Start();
  3546  000F92  EC22  F007         	call	_INI_LED_Start	;wreg free
  3547  000F96  0012               	return		;funcret
  3548  000F98                     __end_of_INI_All:
  3549                           	opt callstack 0
  3550                           
  3551 ;; *************** function _INI_Timer *****************
  3552 ;; Defined at:
  3553 ;;		line 92 in file "TMR1.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      unsigned char 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    3
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_INI_All
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text26
  3582  000F98                     __ptext26:
  3583                           	opt callstack 0
  3584  000F98                     _INI_Timer:
  3585                           	opt callstack 26
  3586                           
  3587                           ;TMR1.c: 96:     IRCF2 = 1;
  3588                           
  3589                           ;incstack = 0
  3590  000F98  8CD3               	bsf	4051,6,c	;volatile
  3591                           
  3592                           ;TMR1.c: 97:     IRCF1 = 1;
  3593  000F9A  8AD3               	bsf	4051,5,c	;volatile
  3594                           
  3595                           ;TMR1.c: 98:     IRCF0 = 1;
  3596  000F9C  88D3               	bsf	4051,4,c	;volatile
  3597                           
  3598                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3599  000F9E  0E3D               	movlw	61
  3600  000FA0  6ECD               	movwf	4045,c	;volatile
  3601                           
  3602                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3603  000FA2  0E9E               	movlw	158
  3604  000FA4  6ECF               	movwf	4047,c	;volatile
  3605                           
  3606                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  3607  000FA6  0E57               	movlw	87
  3608  000FA8  6ECE               	movwf	4046,c	;volatile
  3609                           
  3610                           ;TMR1.c: 102:     TMR1IE=1;
  3611  000FAA  809D               	bsf	3997,0,c	;volatile
  3612                           
  3613                           ;TMR1.c: 103:     TMR1ON = 1;
  3614  000FAC  80CD               	bsf	4045,0,c	;volatile
  3615  000FAE  0012               	return		;funcret
  3616  000FB0                     __end_of_INI_Timer:
  3617                           	opt callstack 0
  3618                           
  3619 ;; *************** function _INI_OUTPUT *****************
  3620 ;; Defined at:
  3621 ;;		line 27 in file "INI.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    3
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_INI_All
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text27
  3650  000F60                     __ptext27:
  3651                           	opt callstack 0
  3652  000F60                     _INI_OUTPUT:
  3653                           	opt callstack 26
  3654                           
  3655                           ;INI.c: 31:     LATA = 0;
  3656                           
  3657                           ;incstack = 0
  3658  000F60  0E00               	movlw	0
  3659  000F62  6E89               	movwf	3977,c	;volatile
  3660                           
  3661                           ;INI.c: 32:     LATB = 0;
  3662  000F64  0E00               	movlw	0
  3663  000F66  6E8A               	movwf	3978,c	;volatile
  3664                           
  3665                           ;INI.c: 33:     LATC = 0;
  3666  000F68  0E00               	movlw	0
  3667  000F6A  6E8B               	movwf	3979,c	;volatile
  3668                           
  3669                           ;INI.c: 34:     TRISA = 0x0C;
  3670  000F6C  0E0C               	movlw	12
  3671  000F6E  6E92               	movwf	3986,c	;volatile
  3672                           
  3673                           ;INI.c: 35:     TRISB = 0b10001000;
  3674  000F70  0E88               	movlw	136
  3675  000F72  6E93               	movwf	3987,c	;volatile
  3676                           
  3677                           ;INI.c: 36:     TRISC = 0xBF;
  3678  000F74  0EBF               	movlw	191
  3679  000F76  6E94               	movwf	3988,c	;volatile
  3680                           
  3681                           ;INI.c: 37:     RCONbits.IPEN = 1;
  3682  000F78  8ED0               	bsf	4048,7,c	;volatile
  3683                           
  3684                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  3685  000F7A  863F               	bsf	_DetectorLedRadar,3,c
  3686  000F7C  0012               	return		;funcret
  3687  000F7E                     __end_of_INI_OUTPUT:
  3688                           	opt callstack 0
  3689                           
  3690 ;; *************** function _INI_LED_Start *****************
  3691 ;; Defined at:
  3692 ;;		line 231 in file "LED.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;Total ram usage:        0 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    4
  3713 ;; This function calls:
  3714 ;;		_LED_Control
  3715 ;; This function is called by:
  3716 ;;		_INI_All
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text28
  3721  000E44                     __ptext28:
  3722                           	opt callstack 0
  3723  000E44                     _INI_LED_Start:
  3724                           	opt callstack 25
  3725                           
  3726                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  3727                           
  3728                           ;incstack = 0
  3729  000E44  5092               	movf	3986,w,c	;volatile
  3730  000E46  0B01               	andlw	1
  3731  000E48  6E92               	movwf	3986,c	;volatile
  3732                           
  3733                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  3734  000E4A  5093               	movf	3987,w,c	;volatile
  3735  000E4C  0BFC               	andlw	252
  3736  000E4E  6E93               	movwf	3987,c	;volatile
  3737                           
  3738                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  3739  000E50  5096               	movf	3990,w,c	;volatile
  3740  000E52  0BF8               	andlw	248
  3741  000E54  6E96               	movwf	3990,c	;volatile
  3742                           
  3743                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  3744  000E56  0E00               	movlw	0
  3745  000E58  6E95               	movwf	3989,c	;volatile
  3746                           
  3747                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  3748  000E5A  0E00               	movlw	0
  3749  000E5C  6E07               	movwf	LED_Control@diode+1,c
  3750  000E5E  0E00               	movlw	0
  3751  000E60  6E06               	movwf	LED_Control@diode,c
  3752  000E62  0E00               	movlw	0
  3753  000E64  EC57  F003         	call	_LED_Control
  3754                           
  3755                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  3756  000E68  0E00               	movlw	0
  3757  000E6A  6E07               	movwf	LED_Control@diode+1,c
  3758  000E6C  0E00               	movlw	0
  3759  000E6E  6E06               	movwf	LED_Control@diode,c
  3760  000E70  0E01               	movlw	1
  3761  000E72  EC57  F003         	call	_LED_Control
  3762  000E76  0012               	return		;funcret
  3763  000E78                     __end_of_INI_LED_Start:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _LED_Control *****************
  3767 ;; Defined at:
  3768 ;;		line 256 in file "LED.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  color           1    wreg     enum E10644
  3771 ;;  diode           2    5[COMRAM] unsigned int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  color           1    9[COMRAM] enum E10644
  3774 ;;  cos             2    0        unsigned int 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      unsigned char 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;Total ram usage:        5 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    3
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_LED_Error
  3795 ;;		_LED_Update
  3796 ;;		_LED_Light_Pos
  3797 ;;		_INI_LED_Start
  3798 ;;		_LED_Clear
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text29
  3803  0006AE                     __ptext29:
  3804                           	opt callstack 0
  3805  0006AE                     _LED_Control:
  3806                           	opt callstack 24
  3807                           
  3808                           ;incstack = 0
  3809                           ;LED_Control@color stored from wreg
  3810  0006AE  6E0A               	movwf	LED_Control@color,c
  3811                           
  3812                           ;LED.c: 259:     if(color == RED)
  3813  0006B0  500A               	movf	LED_Control@color,w,c
  3814  0006B2  A4D8               	btfss	status,2,c
  3815  0006B4  D050               	goto	l311
  3816                           
  3817                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  3818  0006B6  A006               	btfss	LED_Control@diode,0,c
  3819  0006B8  D003               	goto	l2213
  3820                           
  3821                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  3822  0006BA  508C               	movf	3980,w,c	;volatile
  3823  0006BC  0910               	iorlw	16
  3824  0006BE  D002               	goto	L3
  3825  0006C0                     l2213:
  3826                           
  3827                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  3828  0006C0  508C               	movf	3980,w,c	;volatile
  3829  0006C2  0BEF               	andlw	239
  3830  0006C4                     L3:
  3831  0006C4  6E8C               	movwf	3980,c	;volatile
  3832                           
  3833                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  3834  0006C6  A206               	btfss	LED_Control@diode,1,c
  3835  0006C8  D003               	goto	l2219
  3836                           
  3837                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  3838  0006CA  508C               	movf	3980,w,c	;volatile
  3839  0006CC  0940               	iorlw	64
  3840  0006CE  D002               	goto	L4
  3841  0006D0                     l2219:
  3842                           
  3843                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  3844  0006D0  508C               	movf	3980,w,c	;volatile
  3845  0006D2  0BBF               	andlw	191
  3846  0006D4                     L4:
  3847  0006D4  6E8C               	movwf	3980,c	;volatile
  3848                           
  3849                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  3850  0006D6  A406               	btfss	LED_Control@diode,2,c
  3851  0006D8  D003               	goto	l2225
  3852                           
  3853                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  3854  0006DA  508A               	movf	3978,w,c	;volatile
  3855  0006DC  0901               	iorlw	1
  3856  0006DE  D002               	goto	L5
  3857  0006E0                     l2225:
  3858                           
  3859                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  3860  0006E0  508A               	movf	3978,w,c	;volatile
  3861  0006E2  0BFE               	andlw	254
  3862  0006E4                     L5:
  3863  0006E4  6E8A               	movwf	3978,c	;volatile
  3864                           
  3865                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  3866  0006E6  A606               	btfss	LED_Control@diode,3,c
  3867  0006E8  D003               	goto	l2231
  3868                           
  3869                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  3870  0006EA  5089               	movf	3977,w,c	;volatile
  3871  0006EC  0902               	iorlw	2
  3872  0006EE  D002               	goto	L6
  3873  0006F0                     l2231:
  3874                           
  3875                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  3876  0006F0  5089               	movf	3977,w,c	;volatile
  3877  0006F2  0BFD               	andlw	253
  3878  0006F4                     L6:
  3879  0006F4  6E89               	movwf	3977,c	;volatile
  3880                           
  3881                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  3882  0006F6  A806               	btfss	LED_Control@diode,4,c
  3883  0006F8  D003               	goto	l2237
  3884                           
  3885                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  3886  0006FA  5089               	movf	3977,w,c	;volatile
  3887  0006FC  0908               	iorlw	8
  3888  0006FE  D002               	goto	L7
  3889  000700                     l2237:
  3890                           
  3891                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  3892  000700  5089               	movf	3977,w,c	;volatile
  3893  000702  0BF7               	andlw	247
  3894  000704                     L7:
  3895  000704  6E89               	movwf	3977,c	;volatile
  3896                           
  3897                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  3898  000706  AA06               	btfss	LED_Control@diode,5,c
  3899  000708  D003               	goto	l2243
  3900                           
  3901                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  3902  00070A  5089               	movf	3977,w,c	;volatile
  3903  00070C  0920               	iorlw	32
  3904  00070E  D002               	goto	L8
  3905  000710                     l2243:
  3906                           
  3907                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  3908  000710  5089               	movf	3977,w,c	;volatile
  3909  000712  0BDF               	andlw	223
  3910  000714                     L8:
  3911  000714  6E89               	movwf	3977,c	;volatile
  3912                           
  3913                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  3914  000716  AC06               	btfss	LED_Control@diode,6,c
  3915  000718  D003               	goto	l2249
  3916                           
  3917                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  3918  00071A  508D               	movf	3981,w,c	;volatile
  3919  00071C  0902               	iorlw	2
  3920  00071E  D002               	goto	L9
  3921  000720                     l2249:
  3922                           
  3923                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  3924  000720  508D               	movf	3981,w,c	;volatile
  3925  000722  0BFD               	andlw	253
  3926  000724                     L9:
  3927  000724  6E8D               	movwf	3981,c	;volatile
  3928                           
  3929                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  3930  000726  AE06               	btfss	LED_Control@diode,7,c
  3931  000728  D003               	goto	l2255
  3932                           
  3933                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  3934  00072A  5089               	movf	3977,w,c	;volatile
  3935  00072C  0980               	iorlw	128
  3936  00072E  D002               	goto	L10
  3937  000730                     l2255:
  3938                           
  3939                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  3940  000730  5089               	movf	3977,w,c	;volatile
  3941  000732  0B7F               	andlw	127
  3942  000734                     L10:
  3943  000734  6E89               	movwf	3977,c	;volatile
  3944                           
  3945                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  3946  000736  A007               	btfss	LED_Control@diode+1,0,c
  3947  000738  D003               	goto	l2261
  3948                           
  3949                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  3950  00073A  508C               	movf	3980,w,c	;volatile
  3951  00073C  0901               	iorlw	1
  3952  00073E  D002               	goto	L11
  3953  000740                     l2261:
  3954                           
  3955                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  3956  000740  508C               	movf	3980,w,c	;volatile
  3957  000742  0BFE               	andlw	254
  3958  000744                     L11:
  3959  000744  6E8C               	movwf	3980,c	;volatile
  3960                           
  3961                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  3962  000746  A207               	btfss	LED_Control@diode+1,1,c
  3963  000748  D003               	goto	l2267
  3964                           
  3965                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  3966  00074A  508C               	movf	3980,w,c	;volatile
  3967  00074C  0904               	iorlw	4
  3968  00074E  D002               	goto	L12
  3969  000750                     l2267:
  3970                           
  3971                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  3972  000750  508C               	movf	3980,w,c	;volatile
  3973  000752  0BFB               	andlw	251
  3974  000754                     L12:
  3975  000754  6E8C               	movwf	3980,c	;volatile
  3976  000756                     l311:
  3977                           
  3978                           ;LED.c: 358:     if(color == GREEN)
  3979  000756  040A               	decf	LED_Control@color,w,c
  3980  000758  A4D8               	btfss	status,2,c
  3981  00075A  0012               	return	
  3982                           
  3983                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  3984  00075C  A006               	btfss	LED_Control@diode,0,c
  3985  00075E  D003               	goto	l2273
  3986                           
  3987                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  3988  000760  508C               	movf	3980,w,c	;volatile
  3989  000762  0920               	iorlw	32
  3990  000764  D002               	goto	L13
  3991  000766                     l2273:
  3992                           
  3993                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  3994  000766  508C               	movf	3980,w,c	;volatile
  3995  000768  0BDF               	andlw	223
  3996  00076A                     L13:
  3997  00076A  6E8C               	movwf	3980,c	;volatile
  3998                           
  3999                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  4000  00076C  A206               	btfss	LED_Control@diode,1,c
  4001  00076E  D003               	goto	l2279
  4002                           
  4003                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  4004  000770  508C               	movf	3980,w,c	;volatile
  4005  000772  0980               	iorlw	128
  4006  000774  D002               	goto	L14
  4007  000776                     l2279:
  4008                           
  4009                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  4010  000776  508C               	movf	3980,w,c	;volatile
  4011  000778  0B7F               	andlw	127
  4012  00077A                     L14:
  4013  00077A  6E8C               	movwf	3980,c	;volatile
  4014                           
  4015                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  4016  00077C  A406               	btfss	LED_Control@diode,2,c
  4017  00077E  D003               	goto	l2285
  4018                           
  4019                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  4020  000780  508A               	movf	3978,w,c	;volatile
  4021  000782  0902               	iorlw	2
  4022  000784  D002               	goto	L15
  4023  000786                     l2285:
  4024                           
  4025                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  4026  000786  508A               	movf	3978,w,c	;volatile
  4027  000788  0BFD               	andlw	253
  4028  00078A                     L15:
  4029  00078A  6E8A               	movwf	3978,c	;volatile
  4030                           
  4031                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  4032  00078C  A606               	btfss	LED_Control@diode,3,c
  4033  00078E  D003               	goto	l2291
  4034                           
  4035                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  4036  000790  5089               	movf	3977,w,c	;volatile
  4037  000792  0904               	iorlw	4
  4038  000794  D002               	goto	L16
  4039  000796                     l2291:
  4040                           
  4041                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  4042  000796  5089               	movf	3977,w,c	;volatile
  4043  000798  0BFB               	andlw	251
  4044  00079A                     L16:
  4045  00079A  6E89               	movwf	3977,c	;volatile
  4046                           
  4047                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  4048  00079C  A806               	btfss	LED_Control@diode,4,c
  4049  00079E  D003               	goto	l2297
  4050                           
  4051                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  4052  0007A0  5089               	movf	3977,w,c	;volatile
  4053  0007A2  0910               	iorlw	16
  4054  0007A4  D002               	goto	L17
  4055  0007A6                     l2297:
  4056                           
  4057                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  4058  0007A6  5089               	movf	3977,w,c	;volatile
  4059  0007A8  0BEF               	andlw	239
  4060  0007AA                     L17:
  4061  0007AA  6E89               	movwf	3977,c	;volatile
  4062                           
  4063                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  4064  0007AC  AA06               	btfss	LED_Control@diode,5,c
  4065  0007AE  D003               	goto	l2303
  4066                           
  4067                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  4068  0007B0  508D               	movf	3981,w,c	;volatile
  4069  0007B2  0901               	iorlw	1
  4070  0007B4  D002               	goto	L18
  4071  0007B6                     l2303:
  4072                           
  4073                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  4074  0007B6  508D               	movf	3981,w,c	;volatile
  4075  0007B8  0BFE               	andlw	254
  4076  0007BA                     L18:
  4077  0007BA  6E8D               	movwf	3981,c	;volatile
  4078                           
  4079                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  4080  0007BC  AC06               	btfss	LED_Control@diode,6,c
  4081  0007BE  D003               	goto	l2309
  4082                           
  4083                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  4084  0007C0  508D               	movf	3981,w,c	;volatile
  4085  0007C2  0904               	iorlw	4
  4086  0007C4  D002               	goto	L19
  4087  0007C6                     l2309:
  4088                           
  4089                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  4090  0007C6  508D               	movf	3981,w,c	;volatile
  4091  0007C8  0BFB               	andlw	251
  4092  0007CA                     L19:
  4093  0007CA  6E8D               	movwf	3981,c	;volatile
  4094                           
  4095                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  4096  0007CC  AE06               	btfss	LED_Control@diode,7,c
  4097  0007CE  D003               	goto	l2315
  4098                           
  4099                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  4100  0007D0  5089               	movf	3977,w,c	;volatile
  4101  0007D2  0940               	iorlw	64
  4102  0007D4  D002               	goto	L20
  4103  0007D6                     l2315:
  4104                           
  4105                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  4106  0007D6  5089               	movf	3977,w,c	;volatile
  4107  0007D8  0BBF               	andlw	191
  4108  0007DA                     L20:
  4109  0007DA  6E89               	movwf	3977,c	;volatile
  4110                           
  4111                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  4112  0007DC  A007               	btfss	LED_Control@diode+1,0,c
  4113  0007DE  D003               	goto	l2321
  4114                           
  4115                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  4116  0007E0  508C               	movf	3980,w,c	;volatile
  4117  0007E2  0902               	iorlw	2
  4118  0007E4  D002               	goto	L21
  4119  0007E6                     l2321:
  4120                           
  4121                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  4122  0007E6  508C               	movf	3980,w,c	;volatile
  4123  0007E8  0BFD               	andlw	253
  4124  0007EA                     L21:
  4125  0007EA  6E8C               	movwf	3980,c	;volatile
  4126                           
  4127                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  4128  0007EC  A207               	btfss	LED_Control@diode+1,1,c
  4129  0007EE  D004               	goto	l2327
  4130                           
  4131                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  4132  0007F0  508C               	movf	3980,w,c	;volatile
  4133  0007F2  0908               	iorlw	8
  4134  0007F4  6E8C               	movwf	3980,c	;volatile
  4135                           
  4136                           ;LED.c: 450:         }
  4137  0007F6  0012               	return	
  4138  0007F8                     l2327:
  4139                           
  4140                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  4141  0007F8  508C               	movf	3980,w,c	;volatile
  4142  0007FA  0BF7               	andlw	247
  4143  0007FC  6E8C               	movwf	3980,c	;volatile
  4144  0007FE  0012               	return		;funcret
  4145  000800                     __end_of_LED_Control:
  4146                           	opt callstack 0
  4147                           
  4148 ;; *************** function _INI_GlobalInterrupt *****************
  4149 ;; Defined at:
  4150 ;;		line 74 in file "INI.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		None
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;Total ram usage:        0 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    3
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_INI_All
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text30
  4179  000FBE                     __ptext30:
  4180                           	opt callstack 0
  4181  000FBE                     _INI_GlobalInterrupt:
  4182                           	opt callstack 26
  4183                           
  4184                           ;INI.c: 76: INTCONbits.GIEH=1;
  4185                           
  4186                           ;incstack = 0
  4187  000FBE  8EF2               	bsf	4082,7,c	;volatile
  4188                           
  4189                           ;INI.c: 77: INTCONbits.GIEL=1;
  4190  000FC0  8CF2               	bsf	4082,6,c	;volatile
  4191                           
  4192                           ;INI.c: 78: RCONbits.IPEN=1;
  4193  000FC2  8ED0               	bsf	4048,7,c	;volatile
  4194                           
  4195                           ;INI.c: 79: IPEN =1;
  4196  000FC4  8ED0               	bsf	4048,7,c	;volatile
  4197                           
  4198                           ;INI.c: 81: PEIE=1;
  4199  000FC6  8CF2               	bsf	4082,6,c	;volatile
  4200                           
  4201                           ;INI.c: 82: TMR1IP = 0;
  4202  000FC8  909F               	bcf	3999,0,c	;volatile
  4203  000FCA  0012               	return		;funcret
  4204  000FCC                     __end_of_INI_GlobalInterrupt:
  4205                           	opt callstack 0
  4206                           
  4207 ;; *************** function _CAN_Setup *****************
  4208 ;; Defined at:
  4209 ;;		line 22 in file "CAN.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;Total ram usage:        1 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    4
  4230 ;; This function calls:
  4231 ;;		_CAN_SetupClock
  4232 ;;		_CAN_SetupMask
  4233 ;; This function is called by:
  4234 ;;		_INI_All
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text31
  4239  000C64                     __ptext31:
  4240                           	opt callstack 0
  4241  000C64                     _CAN_Setup:
  4242                           	opt callstack 25
  4243                           
  4244                           ;CAN.c: 27:     CANCON = 0x80;
  4245                           
  4246                           ;incstack = 0
  4247  000C64  0E80               	movlw	128
  4248  000C66  6E6F               	movwf	3951,c	;volatile
  4249  000C68                     l2595:
  4250                           
  4251                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4252  000C68  506E               	movf	3950,w,c	;volatile
  4253  000C6A  0BE0               	andlw	224
  4254  000C6C  0A80               	xorlw	128
  4255  000C6E  A4D8               	btfss	status,2,c
  4256  000C70  D7FB               	goto	l2595
  4257                           
  4258                           ;CAN.c: 33:     BSEL0 = 0;
  4259  000C72  0E00               	movlw	0
  4260  000C74  010D               	movlb	13	; () banked
  4261  000C76  6FF8               	movwf	248,b	;volatile
  4262                           
  4263                           ;CAN.c: 34:     TXB0CON = 0;
  4264  000C78  0E00               	movlw	0
  4265  000C7A  010F               	movlb	15	; () banked
  4266  000C7C  6F40               	movwf	64,b	;volatile
  4267                           
  4268                           ;CAN.c: 35:     RXB0CON = 0;
  4269  000C7E  0E00               	movlw	0
  4270  000C80  6E60               	movwf	3936,c	;volatile
  4271                           
  4272                           ;CAN.c: 36:     RXB1CON = 0;
  4273  000C82  0E00               	movlw	0
  4274  000C84  6F50               	movwf	80,b	;volatile
  4275                           
  4276                           ;CAN.c: 37:     B0CON = 0;
  4277  000C86  0E00               	movlw	0
  4278  000C88  010E               	movlb	14	; () banked
  4279  000C8A  6F20               	movwf	32,b	;volatile
  4280                           
  4281                           ;CAN.c: 38:     B1CON = 0;
  4282  000C8C  0E00               	movlw	0
  4283  000C8E  6F30               	movwf	48,b	;volatile
  4284                           
  4285                           ;CAN.c: 39:     PIE3 = 0;
  4286  000C90  0E00               	movlw	0
  4287  000C92  6EA3               	movwf	4003,c	;volatile
  4288                           
  4289                           ; BSR set to: 14
  4290                           ;CAN.c: 40:     IPR3 = 0xFF;
  4291  000C94  68A5               	setf	4005,c	;volatile
  4292                           
  4293                           ;CAN.c: 41:     PIR3 = 0x00;
  4294  000C96  0E00               	movlw	0
  4295  000C98  6EA4               	movwf	4004,c	;volatile
  4296                           
  4297                           ;CAN.c: 42:     BIE0 = 0;
  4298  000C9A  0E00               	movlw	0
  4299  000C9C  010D               	movlb	13	; () banked
  4300  000C9E  6FFA               	movwf	250,b	;volatile
  4301                           
  4302                           ;CAN.c: 45:     ECANCON = 0x90;
  4303  000CA0  0E90               	movlw	144
  4304  000CA2  6E77               	movwf	3959,c	;volatile
  4305                           
  4306                           ; BSR set to: 13
  4307                           ;CAN.c: 48:     CAN_SetupClock();
  4308  000CA4  EC68  F007         	call	_CAN_SetupClock	;wreg free
  4309                           
  4310                           ;CAN.c: 51:     CAN_SetupMask();
  4311  000CA8  EC00  F006         	call	_CAN_SetupMask	;wreg free
  4312                           
  4313                           ;CAN.c: 53:     CIOCON = 0xff;
  4314  000CAC  6873               	setf	3955,c	;volatile
  4315                           
  4316                           ;CAN.c: 59:     CANCON = 0x00;
  4317  000CAE  0E00               	movlw	0
  4318  000CB0  6E6F               	movwf	3951,c	;volatile
  4319  000CB2                     l2609:
  4320                           
  4321                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4322  000CB2  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4323  000CB6  0EE0               	movlw	224
  4324  000CB8  1606               	andwf	??_CAN_Setup,f,c
  4325  000CBA  B4D8               	btfsc	status,2,c
  4326  000CBC  0012               	return	
  4327  000CBE  D7F9               	goto	l2609
  4328  000CC0                     __end_of_CAN_Setup:
  4329                           	opt callstack 0
  4330                           
  4331 ;; *************** function _CAN_SetupMask *****************
  4332 ;; Defined at:
  4333 ;;		line 81 in file "CAN.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;		None
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      void 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;Total ram usage:        0 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    3
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_CAN_Setup
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text32
  4362  000C00                     __ptext32:
  4363                           	opt callstack 0
  4364  000C00                     _CAN_SetupMask:
  4365                           	opt callstack 25
  4366                           
  4367                           ;CAN.c: 83:     MSEL0 = 0x50;
  4368                           
  4369                           ;incstack = 0
  4370  000C00  0E50               	movlw	80
  4371  000C02  010D               	movlb	13	; () banked
  4372  000C04  6FF0               	movwf	240,b	;volatile
  4373                           
  4374                           ;CAN.c: 84:     MSEL1 = 0x55;
  4375  000C06  0E55               	movlw	85
  4376  000C08  6FF1               	movwf	241,b	;volatile
  4377                           
  4378                           ;CAN.c: 85:     MSEL2 = 0x55;
  4379  000C0A  0E55               	movlw	85
  4380  000C0C  6FF2               	movwf	242,b	;volatile
  4381                           
  4382                           ;CAN.c: 86:     MSEL3 = 0x55;
  4383  000C0E  0E55               	movlw	85
  4384  000C10  6FF3               	movwf	243,b	;volatile
  4385                           
  4386                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4387  000C12  0E00               	movlw	0
  4388  000C14  010F               	movlb	15	; () banked
  4389  000C16  6F18               	movwf	24,b	;volatile
  4390                           
  4391                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4392  000C18  0E0B               	movlw	11
  4393  000C1A  6F19               	movwf	25,b	;volatile
  4394                           
  4395                           ; BSR set to: 15
  4396                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4397  000C1C  691A               	setf	26,b	;volatile
  4398                           
  4399                           ; BSR set to: 15
  4400                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4401  000C1E  691B               	setf	27,b	;volatile
  4402                           
  4403                           ; BSR set to: 15
  4404                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4405  000C20  691C               	setf	28,b	;volatile
  4406                           
  4407                           ; BSR set to: 15
  4408                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4409  000C22  691D               	setf	29,b	;volatile
  4410                           
  4411                           ;CAN.c: 97:     RXM1EIDH = 0;
  4412  000C24  0E00               	movlw	0
  4413  000C26  6F1E               	movwf	30,b	;volatile
  4414                           
  4415                           ;CAN.c: 98:     RXM1EIDL = 0;
  4416  000C28  0E00               	movlw	0
  4417  000C2A  6F1F               	movwf	31,b	;volatile
  4418                           
  4419                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4420  000C2C  0E00               	movlw	0
  4421  000C2E  6F00               	movwf	0,b	;volatile
  4422                           
  4423                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4424  000C30  0E01               	movlw	1
  4425  000C32  6F01               	movwf	1,b	;volatile
  4426                           
  4427                           ; BSR set to: 15
  4428                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4429  000C34  8701               	bsf	1,3,b	;volatile
  4430                           
  4431                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4432  000C36  503E               	movf	_DaneCan+3,w,c
  4433  000C38  6F02               	movwf	2,b	;volatile
  4434                           
  4435                           ; BSR set to: 15
  4436                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4437  000C3A  8D02               	bsf	2,6,b	;volatile
  4438                           
  4439                           ; BSR set to: 15
  4440                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4441  000C3C  C03D  FF03         	movff	_DaneCan+2,3843	;volatile
  4442                           
  4443                           ; BSR set to: 15
  4444                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4445  000C40  0E00               	movlw	0
  4446  000C42  6F04               	movwf	4,b	;volatile
  4447                           
  4448                           ; BSR set to: 15
  4449                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4450  000C44  0E01               	movlw	1
  4451  000C46  6F05               	movwf	5,b	;volatile
  4452                           
  4453                           ; BSR set to: 15
  4454                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4455  000C48  8705               	bsf	5,3,b	;volatile
  4456                           
  4457                           ; BSR set to: 15
  4458                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4459  000C4A  0E7F               	movlw	127
  4460  000C4C  6F06               	movwf	6,b	;volatile
  4461                           
  4462                           ; BSR set to: 15
  4463                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4464  000C4E  6907               	setf	7,b	;volatile
  4465                           
  4466                           ; BSR set to: 15
  4467                           ;CAN.c: 115:     RXF2SIDH = 0;
  4468  000C50  0E00               	movlw	0
  4469  000C52  6F08               	movwf	8,b	;volatile
  4470                           
  4471                           ; BSR set to: 15
  4472                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4473  000C54  0E20               	movlw	32
  4474  000C56  6F09               	movwf	9,b	;volatile
  4475                           
  4476                           ; BSR set to: 15
  4477                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4478  000C58  8709               	bsf	9,3,b	;volatile
  4479                           
  4480                           ; BSR set to: 15
  4481                           ;CAN.c: 118:     RXF2EIDH = 0;
  4482  000C5A  0E00               	movlw	0
  4483  000C5C  6F0A               	movwf	10,b	;volatile
  4484                           
  4485                           ; BSR set to: 15
  4486                           ;CAN.c: 119:     RXF2EIDL = 0;
  4487  000C5E  0E00               	movlw	0
  4488  000C60  6F0B               	movwf	11,b	;volatile
  4489                           
  4490                           ; BSR set to: 15
  4491  000C62  0012               	return		;funcret
  4492  000C64                     __end_of_CAN_SetupMask:
  4493                           	opt callstack 0
  4494                           
  4495 ;; *************** function _CAN_SetupClock *****************
  4496 ;; Defined at:
  4497 ;;		line 136 in file "CAN.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		None
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    3
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_CAN_Setup
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text33
  4526  000ED0                     __ptext33:
  4527                           	opt callstack 0
  4528  000ED0                     _CAN_SetupClock:
  4529                           	opt callstack 25
  4530                           
  4531                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4532                           
  4533                           ; BSR set to: 15
  4534                           ;incstack = 0
  4535  000ED0  8070               	bsf	3952,0,c	;volatile
  4536                           
  4537                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4538  000ED2  8270               	bsf	3952,1,c	;volatile
  4539                           
  4540                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4541  000ED4  9470               	bcf	3952,2,c	;volatile
  4542                           
  4543                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4544  000ED6  9670               	bcf	3952,3,c	;volatile
  4545                           
  4546                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4547  000ED8  9870               	bcf	3952,4,c	;volatile
  4548                           
  4549                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4550  000EDA  9A70               	bcf	3952,5,c	;volatile
  4551                           
  4552                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4553  000EDC  8C70               	bsf	3952,6,c	;volatile
  4554                           
  4555                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4556  000EDE  8E70               	bsf	3952,7,c	;volatile
  4557                           
  4558                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4559  000EE0  8671               	bsf	3953,3,c	;volatile
  4560                           
  4561                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4562  000EE2  8871               	bsf	3953,4,c	;volatile
  4563                           
  4564                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4565  000EE4  8A71               	bsf	3953,5,c	;volatile
  4566                           
  4567                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4568  000EE6  8471               	bsf	3953,2,c	;volatile
  4569                           
  4570                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4571  000EE8  9271               	bcf	3953,1,c	;volatile
  4572                           
  4573                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4574  000EEA  9071               	bcf	3953,0,c	;volatile
  4575                           
  4576                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4577  000EEC  8072               	bsf	3954,0,c	;volatile
  4578                           
  4579                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4580  000EEE  9272               	bcf	3954,1,c	;volatile
  4581                           
  4582                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  4583  000EF0  8472               	bsf	3954,2,c	;volatile
  4584                           
  4585                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  4586  000EF2  8C71               	bsf	3953,6,c	;volatile
  4587                           
  4588                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  4589  000EF4  8E71               	bsf	3953,7,c	;volatile
  4590  000EF6  0012               	return		;funcret
  4591  000EF8                     __end_of_CAN_SetupClock:
  4592                           	opt callstack 0
  4593                           
  4594 ;; *************** function _ISR_low *****************
  4595 ;; Defined at:
  4596 ;;		line 16 in file "ISR.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0, cstack
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;Total ram usage:        3 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    2
  4617 ;; This function calls:
  4618 ;;		_TMR1_Timer_reset
  4619 ;;		i1_TMR1_Update_flag_Set
  4620 ;; This function is called by:
  4621 ;;		Interrupt level 1
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	intcodelo
  4626  000018                     __pintcodelo:
  4627                           	opt callstack 0
  4628  000018                     _ISR_low:
  4629                           	opt callstack 24
  4630                           
  4631                           ;incstack = 0
  4632  000018  8054               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4633  00001A  CFD8 F003          	movff	status,??_ISR_low
  4634  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  4635  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  4636                           
  4637                           ;ISR.c: 21:     if(TMR1IF==1)
  4638  000026  A09E               	btfss	3998,0,c	;volatile
  4639  000028  D011               	goto	i1l579
  4640                           
  4641                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  4642  00002A  EC8F  F007         	call	_TMR1_Timer_reset	;wreg free
  4643                           
  4644                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  4645  00002E  0E00               	movlw	0
  4646  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  4647  000032  0E01               	movlw	1
  4648  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  4649  000036  ECFA  F007         	call	i1_TMR1_Update_flag_Set	;wreg free
  4650                           
  4651                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  4652  00003A  803F               	bsf	_DetectorLedRadar,0,c
  4653                           
  4654                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  4655  00003C  2A48               	incf	ISR_low@ramkaStanuU8,f,c
  4656  00003E  0E14               	movlw	20
  4657  000040  6448               	cpfsgt	ISR_low@ramkaStanuU8,c
  4658  000042  D003               	goto	i1l2881
  4659                           
  4660                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  4661  000044  0E00               	movlw	0
  4662  000046  6E48               	movwf	ISR_low@ramkaStanuU8,c
  4663                           
  4664                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  4665  000048  803B               	bsf	_DaneCan,0,c
  4666  00004A                     i1l2881:
  4667                           
  4668                           ;ISR.c: 41:             TMR1IF=0;
  4669  00004A  909E               	bcf	3998,0,c	;volatile
  4670  00004C                     i1l579:
  4671  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  4672  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  4673  000054  C003  FFD8         	movff	??_ISR_low,status
  4674  000058  9054               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4675  00005A  0010               	retfie	
  4676  00005C                     __end_of_ISR_low:
  4677                           	opt callstack 0
  4678                           
  4679 ;; *************** function i1_TMR1_Update_flag_Set *****************
  4680 ;; Defined at:
  4681 ;;		line 32 in file "TMR1.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  a               2    0[COMRAM] unsigned int 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		None
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;Total ram usage:        2 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    1
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_ISR_low
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text35
  4710  000FF4                     __ptext35:
  4711                           	opt callstack 0
  4712  000FF4                     i1_TMR1_Update_flag_Set:
  4713                           	opt callstack 24
  4714                           
  4715                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4716                           
  4717                           ;incstack = 0
  4718  000FF4  C001  F042         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4719  000FF8  C002  F043         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4720  000FFC  0012               	return		;funcret
  4721  000FFE                     __end_ofi1_TMR1_Update_flag_Set:
  4722                           	opt callstack 0
  4723                           
  4724 ;; *************** function _TMR1_Timer_reset *****************
  4725 ;; Defined at:
  4726 ;;		line 63 in file "TMR1.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  4731 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      unsigned char 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;Total ram usage:        2 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_ISR_low
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text36
  4756  000F1E                     __ptext36:
  4757                           	opt callstack 0
  4758  000F1E                     _TMR1_Timer_reset:
  4759                           	opt callstack 24
  4760                           
  4761                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  4762                           
  4763                           ;incstack = 0
  4764  000F1E  0E00               	movlw	0
  4765  000F20  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  4766  000F22  0E00               	movlw	0
  4767  000F24  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  4768                           
  4769                           ;TMR1.c: 70:     t1L = TMR1L;
  4770  000F26  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  4771                           
  4772                           ;TMR1.c: 71:     t1H = TMR1H;
  4773  000F2A  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  4774                           
  4775                           ;TMR1.c: 72:     __nop();
  4776  000F2E  F000               	nop	
  4777                           
  4778                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4779  000F30  0E9E               	movlw	158
  4780  000F32  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  4781                           
  4782                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4783  000F34  0E57               	movlw	87
  4784  000F36  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  4785                           
  4786                           ;TMR1.c: 75:     TMR1H = t1H;
  4787  000F38  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  4788                           
  4789                           ;TMR1.c: 76:     TMR1L = 0x5B;
  4790  000F3C  0E5B               	movlw	91
  4791  000F3E  6ECE               	movwf	4046,c	;volatile
  4792  000F40  0012               	return		;funcret
  4793  000F42                     __end_of_TMR1_Timer_reset:
  4794                           	opt callstack 0
  4795                           
  4796 ;; *************** function _ISR_high *****************
  4797 ;; Defined at:
  4798 ;;		line 53 in file "ISR.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		None
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		Interrupt level 2
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	intcode
  4826  000008                     __pintcode:
  4827                           	opt callstack 0
  4828  000008                     _ISR_high:
  4829                           	opt callstack 24
  4830                           
  4831                           ;incstack = 0
  4832  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4833  00000A  ED0C  F008         	call	int_func,f	;refresh shadow registers
  4834                           
  4835                           	psect	intcode_body
  4836  001018                     __pintcode_body:
  4837                           	opt callstack 24
  4838  001018                     int_func:
  4839                           	opt callstack 24
  4840  001018  0006               	pop		; remove dummy address from shadow register refresh
  4841  00101A  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4842  00101C  0011               	retfie		f
  4843  00101E                     __end_of_ISR_high:
  4844                           	opt callstack 0
  4845  0000                     
  4846                           	psect	rparam
  4847  0000                     
  4848                           	psect	temp
  4849  000054                     btemp:
  4850                           	opt callstack 0
  4851  000054                     	ds	1
  4852  0000                     int$flags	set	btemp
  4853  0000                     wtemp8	set	btemp+1
  4854  0000                     ttemp5	set	btemp+1
  4855  0000                     ttemp6	set	btemp+4
  4856  0000                     ttemp7	set	btemp+8
  4857                           tosu	equ	0xFFF
  4858                           tosh	equ	0xFFE
  4859                           tosl	equ	0xFFD
  4860                           stkptr	equ	0xFFC
  4861                           pclatu	equ	0xFFB
  4862                           pclath	equ	0xFFA
  4863                           pcl	equ	0xFF9
  4864                           tblptru	equ	0xFF8
  4865                           tblptrh	equ	0xFF7
  4866                           tblptrl	equ	0xFF6
  4867                           tablat	equ	0xFF5
  4868                           prodh	equ	0xFF4
  4869                           prodl	equ	0xFF3
  4870                           indf0	equ	0xFEF
  4871                           postinc0	equ	0xFEE
  4872                           postdec0	equ	0xFED
  4873                           preinc0	equ	0xFEC
  4874                           plusw0	equ	0xFEB
  4875                           fsr0h	equ	0xFEA
  4876                           fsr0l	equ	0xFE9
  4877                           wreg	equ	0xFE8
  4878                           indf1	equ	0xFE7
  4879                           postinc1	equ	0xFE6
  4880                           postdec1	equ	0xFE5
  4881                           preinc1	equ	0xFE4
  4882                           plusw1	equ	0xFE3
  4883                           fsr1h	equ	0xFE2
  4884                           fsr1l	equ	0xFE1
  4885                           bsr	equ	0xFE0
  4886                           indf2	equ	0xFDF
  4887                           postinc2	equ	0xFDE
  4888                           postdec2	equ	0xFDD
  4889                           preinc2	equ	0xFDC
  4890                           plusw2	equ	0xFDB
  4891                           fsr2h	equ	0xFDA
  4892                           fsr2l	equ	0xFD9
  4893                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      83
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_AdressOfNeighbors->___wmul
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16306
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    9081
                                             36 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    7175
                                             31 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
            _FRAME_AdressOfNeighbors
       _FRAME_SensorExcitationStatus
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         4     2      2     345
                                              7 COMRAM     4     2      2
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             20    16      4    2937
                                             11 COMRAM    20    16      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2199
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     360
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    5611
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3471
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1412
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1412
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AdressOfNeighbors
         ___wmul
       _FRAME_SensorExcitationStatus
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0      66       6       63.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      53       1       88.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B9       3        0.0%
DATA                 0      0     2D9       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 22 09:52:37 2019

                           ___awdiv@sign 000B                                       bsr 000FE0  
                    ___wmul@multiplicand 0008                              __CFG_BORV$3 000000  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                     __size_of_CAN_GenID 0094                                      l311 0756  
                                    l180 055A                                      l190 0074  
                                    l191 007A                                      l192 0080  
                                    l512 08EA                                      l193 0086  
                                    l433 09BC                                      l513 08E2  
                                    l194 008C                                      l283 0BD6  
                                    l195 0092                                      l179 055C  
                                    l196 0098                                      l188 006E  
                                    l189 00DE                              ?_LED_Update 0001  
                           __CFG_CPB$OFF 000000                             __CFG_CPD$OFF 000000  
                     __size_of_CAN_Setup 005C                             ?_LED_Control 0006  
                                    wreg 000FE8                    __end_of_CAN_TakeFrame 02DC  
                            ?_INI_OUTPUT 0001                   __size_of_INI_LED_Start 0034  
                  __end_of_CAN_SendFrame 06AE                             __CFG_LVP$OFF 000000  
              TRM_DataTransmition@weWyU8 0047             __size_of_INI_GlobalInterrupt 000E  
                           __CFG_WDT$OFF 000000                                     l1143 0D62  
                                   l2213 06C0                                     l2303 07B6  
                                   l2231 06F0                                     l2321 07E6  
                                   l2225 06E0                                     l2315 07D6  
                                   l2243 0710                                     l2219 06D0  
                                   l2309 07C6                                     l2261 0740  
                                   l2237 0700                                     l2327 07F8  
                                   l2255 0730                                     l2431 05F4  
                                   l2273 0766                                     l2249 0720  
                                   l2513 03EE                                     l2291 0796  
                                   l2267 0750                          __end_of_INI_All 0F98  
                                   l2435 06A8                                     l2507 0308  
                                   l2285 0786                                     l2541 0B26  
                                   l2279 0776                                     l2471 0E30  
                                   l2455 0DA0                                     l2711 09F4  
                                   l2199 0EAA                                     l2535 0B16  
                                   l2631 01B0                                     l2615 009E  
                                   l2519 03F6                                     l2609 0CB2  
                                   l2297 07A6                                     l2641 01D4  
                                   l2633 01B6                                     l2547 0B3C  
                                   l2563 0B6E                                     l2643 01DC  
                                   l2635 01BC                                     l2651 022C  
                                   l2717 0A20                                     l2725 0A56  
                                   l2549 0B44                                     l2661 0262  
                                   l2645 01E4                                     l2637 01C4  
                                   l2493 0992                                     l2741 0828  
                                   l2719 0A2A                                     l2567 0B7C  
                                   l2559 0B64                                     l2671 0288  
                                   l2663 0268                                     l2639 01CC  
                                   l2655 0230                                     l2743 0836  
                                   l2831 0E7E                                     l2577 0D30  
                                   l2673 0290                                     l2665 0270  
                                   l2649 01EC                                     l2657 024A  
                                   l2841 0E9E                                     l2595 0C68  
                                   l2579 0D38                                     l2667 0278  
                                   l2659 025C                                     l2747 0850  
                                   l2589 0D58                                     l2669 0280  
                                   l2677 0298                                     l2749 0868  
                                   l2783 0BB2                                     l2679 02D8  
                                   l2799 0DE2                                     _BIE0 000DFA  
                      _MOC_Frame_Counter 0FB0                                     u1005 05CA  
                                   u1120 0B48                                     u1070 03EC  
                                   u1215 0148                                     u1160 0D3C  
                                   u1080 053E                                     u1260 0A5E  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     _IPR3 000FA5  
                                   _IPEN 007E87                                     _PIE3 000FA3  
                                   _PEIE 007F96                                     _LOCK 004A  
                                   _PIR3 000FA4                                     _RCON 000FD0  
                                   _Dane 0044                          __end_of_ISR_low 005C  
                       LED_Control@diode 0006                       ?_MOC_Frame_Counter 0006  
                                   _main 0E78                         LED_Control@color 000A  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   indf1 000FE7                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 0054                           _CAN_SetupClock 0ED0  
                                   prodh 000FF4                                     prodl 000FF3  
                  __end_of_CAN_SetupMask 0C64            __size_of_TMR1_Update_flag_Get 000A  
                                   start 005C            __size_of_TMR1_Update_flag_Set 000A  
                     __size_of_LED_Error 001E                            __CFG_IESO$OFF 000000  
                     __size_of_LED_Right 004C            __size_of_FRAME_HandleCanFrame 00F0  
                          _LED_Light_Pos 09BE                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000                      ??_MOC_Frame_Counter 0008  
             ??_MOC_Aktualna_Temperatura 0008        FRAME_HandleCanFrame@identyfikator 0024  
                     __size_of_INI_Timer 0018                         __end_of_LED_Left 0E44  
                                  _B0CON 000E20                                    _B1CON 000E30  
                                  _B2CON 000E40                                    _B3CON 000E50  
                                  _B4CON 000E60                                    _B5CON 000E70  
                       __end_of_LOCK_Get 1022                                    ?_main 0001  
                       __end_of_LOCK_Set 1018                          __end_of___awdiv 0B86  
                                  _BSEL0 000DF8                          ___awdiv@divisor 0008  
                                  _T1CON 000FCD                                    _IRCF0 007E9C  
                                  _IRCF1 007E9D                                    _IRCF2 007E9E  
                        __end_of___lwdiv 0D6C                                    i1l579 004C  
                        ___awdiv@counter 000A                                    _MSEL0 000DF0  
                                  _MSEL1 000DF1                                    _MSEL2 000DF2  
                                  _MSEL3 000DF3                                    _TMR1H 000FCF  
                                  _TMR1L 000FCE                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                          __CFG_PWRT$OFF 000000                                    _Flagi 0036  
                 ?_CAN_MoveBuffIntoFrame 0006                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                       __end_of_ISR_high 101E                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
              __end_of_MOC_Frame_Counter 0FBE                           __CFG_EBTRB$OFF 000000  
                i1TMR1_Update_flag_Set@a 0001                             ?_MOC_NOTWORK 0006  
                                  tablat 000FF5                   __end_of_CAN_SetupClock 0EF8  
                                  ttemp5 0055                                    ttemp6 0058  
                                  ttemp7 005C                                    status 000FD8  
                                  wtemp8 0055                        __end_of_CAN_GenID 0B02  
                         __CFG_PBADEN$ON 000000                      __size_of_LED_Update 007A  
                         ?_LED_Light_Pos 000D                         _TMR1_Timer_reset 0F1E  
                      __end_of_CAN_Setup 0CC0                            _INI_LED_Start 0E44  
                        __initialization 0CC0                      __size_of_INI_OUTPUT 001E  
                       CAN_GenID@frameID 0008                             __end_of_main 0EA6  
               ?_FRAME_AdressOfNeighbors 000C                         CAN_GenID@message 0006  
                                 ??_main 0036                   CAN_MoveBuffIntoFrame@i 000A  
                          __activetblptr 000002                         _TMR1_Update_flag 0042  
                        _wartosciSasiada 00C6                                ??_INI_All 000B  
                      __end_of_LED_Error 0F60                        __end_of_LED_Right 0DB8  
                              ??_ISR_low 0003                                   _CANCON 000F6F  
                       ___awdiv@dividend 0006                                   _CIOCON 000F73  
                        __CFG_BBSIZ$1024 000000                        __end_of_INI_Timer 0FB0  
                                 i1l2881 004A                          ?_CAN_SetupClock 0001  
                                 _RXB0D0 000F66                                   _TMR1IE 007CE8  
                                 _TMR1IF 007CF0                                   _TMR1IP 007CF8  
                                 _TMR1ON 007E68                           ?_INI_LED_Start 0001  
                         __CFG_XINST$OFF 000000                                   ___wmul 0EF8  
                              ??___awdiv 000A                           __CFG_STVREN$ON 000000  
                       LED_Light_Pos@pos 000D                                ??___lwdiv 000A  
                                 clear_0 0CE8                                   clear_1 0CFA  
                                 clear_2 0D06                         ___awdiv@quotient 000C  
               ??i1_TMR1_Update_flag_Set 0003                          __CFG_BOREN$BOHW 000000  
                           __pdataCOMRAM 004B                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
             __size_of_MOC_Frame_Counter 000E                     __size_of_LED_Control 0152  
                  TMR1_Update_flag_Set@a 0006                               __accesstop 0060  
                __end_of__initialization 0D0C                      ISR_low@ramkaStanuU8 0048  
                              ?_LED_Left 0006                          ??_LED_Light_Pos 0011  
                          ___rparam_used 000001                                ?_LOCK_Get 0001  
                              ?_LOCK_Set 0001          __end_of_FRAME_AdressOfNeighbors 0540  
                         __pcstackCOMRAM 0001                                LED_Left@a 0006  
                              LED_Left@b 0008                      _INI_GlobalInterrupt 0FBE  
                              ?_ISR_high 0001                             ??_LED_Update 0018  
            __end_of_TRM_DataTransmition 0E02                             ??_INI_OUTPUT 0006  
                              LOCK_Set@k 0006                     ?_INI_GlobalInterrupt 0001  
                             __pbssBANK0 0060                     __size_of_MOC_NOTWORK 0008  
                        ??_INI_LED_Start 000B                               ??_LED_Left 0008  
                             ??_LOCK_Get 0006                               ??_LOCK_Set 0006  
                     __end_of_LED_Update 0C00                       __end_of_INI_OUTPUT 0F7E  
                                ?___wmul 0006                               ??_ISR_high 0001  
                    TMR1_Timer_reset@t1H 0002                      TMR1_Timer_reset@t1L 0001  
                                _ECANCON 000F77                                  _CANSTAT 000F6E  
                ??_CAN_MoveBuffIntoFrame 000A             __end_of_TMR1_Update_flag_Get 0FF4  
           __end_of_TMR1_Update_flag_Set 0FEA          __size_ofi1_TMR1_Update_flag_Set 000A  
           __end_of_FRAME_HandleCanFrame 08F0                                  _INI_All 0F7E  
               __end_of_TMR1_Timer_reset 0F42                                  _RXB0DLC 000F65  
                                _RXB0CON 000F60                                  _RXB1CON 000F50  
                  ??_INI_GlobalInterrupt 0006                                  _TXB0CON 000F40  
                                _ISR_low 0018                                  _DaneCan 003B  
            FRAME_HandleCanFrame@message 0020                                  __Hparam 0000  
       ??_MOC_Wynikowa_wartosc_roznicowa 0008          ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                __Lparam 0000                   __size_of_CAN_TakeFrame 027C  
                              _CAN_GenID 0A6E                                  ___awdiv 0B02  
                              _CAN_Setup 0C64                          __size_of___wmul 0026  
                 __size_of_CAN_SendFrame 016E                                  ___lwdiv 0D1A  
                      LED_Light_Pos@pos2 0014                                  __pcinit 0CC0  
                                __ramtop 0D00                                  __ptext0 0E78  
                                __ptext1 0DB8                                  __ptext2 0800  
                                __ptext3 0F42                                  __ptext4 08F0  
                                __ptext5 0FCC                                  __ptext6 1008  
                                __ptext7 0FB0                                  __ptext8 0FD6  
                                __ptext9 1010                   __size_of_CAN_SetupMask 0064  
      __size_of_MOC_Aktualna_Temperatura 000A           FRAME_AdressOfNeighbors@nrRamki 000E  
              ?_MOC_Aktualna_Temperatura 0006         __size_of_FRAME_AdressOfNeighbors 0264  
                       ??_CAN_SetupClock 0006           FRAME_AdressOfNeighbors@message 000C  
                              _LED_Error 0F42                           __pintcode_body 1018  
                              _LED_Right 0D6C                     end_of_initialization 0D0C  
                          __Lmediumconst 0000                                  int_func 1018  
                              _INI_Timer 0F98                   i1_TMR1_Update_flag_Set 0FF4  
       TRM_DataTransmition@czujnikWeWyU8 0046                               ?_CAN_GenID 0006  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc1 000FE6  
                                postinc2 000FDE                               ?_CAN_Setup 0001  
                   CAN_SendFrame@message 000B                            LED_Update@Red 0049  
                          _CAN_TakeFrame 0060                            _CAN_SendFrame 0540  
                             ?_LED_Error 0001                               ?_LED_Right 0006  
                             ?_INI_Timer 0001                          _ramkaCanRxKarty 0060  
                   _TMR1_Update_flag_Get 0FEA                          _ramkaCanTxKarty 00B5  
                   _TMR1_Update_flag_Set 0FE0                            _CAN_SetupMask 0C00  
                      __size_of_LED_Left 0042                     _FRAME_HandleCanFrame 0800  
                      __size_of_LOCK_Get 0004                        __size_of_LOCK_Set 0008  
                         CAN_TakeFrame@k 0013                           __end_of___wmul 0F1E  
                          __pidataCOMRAM 0FFE                        __size_of_ISR_high 1016  
                             LED_Right@a 0006                               LED_Right@b 000A  
                  MOC_Frame_Counter@zeta 004B                            ??_LED_Control 0008  
                    start_initialization 0CC0                           ?_CAN_TakeFrame 000E  
                         ?_CAN_SendFrame 000B                         __CFG_OSC$IRCIO67 000000  
                  ?_TMR1_Update_flag_Get 0006                    ?_TMR1_Update_flag_Set 0006  
                         ?_CAN_SetupMask 0001                    __end_of_LED_Light_Pos 0A6E  
                  ?_FRAME_HandleCanFrame 0020                              ??_CAN_GenID 0009  
                               ??___wmul 000A                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                 CAN_MoveBuffIntoFrame@Buf 0008  
   __end_of_FRAME_SensorExcitationStatus 09BE    __size_of_FRAME_SensorExcitationStatus 00CE  
               CAN_MoveBuffIntoFrame@Ram 0006             _FRAME_SensorExcitationStatus 08F0  
         __size_of_CAN_MoveBuffIntoFrame 002A                              __pbssBIGRAM 00C6  
          __end_of_CAN_MoveBuffIntoFrame 0ED0                          _Fulfillment_Lvl 0051  
                            __pbssCOMRAM 0036                                 ?_INI_All 0001  
                _FRAME_AdressOfNeighbors 02DC                        ?_TMR1_Timer_reset 0001  
                            _BRGCON1bits 000F70                              _BRGCON2bits 000F71  
                            _BRGCON3bits 000F72                                 ?_ISR_low 0001  
                          ??_MOC_NOTWORK 0008                       ??_TMR1_Timer_reset 0001  
                            ??_LED_Error 000B                              ??_LED_Right 0008  
           __size_of_TRM_DataTransmition 004A                 FRAME_AdressOfNeighbors@i 001E  
                    __end_of_LED_Control 0800                              ??_INI_Timer 0006  
                  __end_of_INI_LED_Start 0E78                         ___lwdiv@dividend 0006  
                              __pintcode 0008                                 ?___awdiv 0006  
       __end_of_MOC_Aktualna_Temperatura 0FE0                                 ?___lwdiv 0006  
                            __pintcodelo 0018              __end_of_INI_GlobalInterrupt 0FCC  
                        ??_CAN_TakeFrame 0010            ?_FRAME_SensorExcitationStatus 0008  
 __end_of_MOC_Wynikowa_wartosc_roznicowa 0FD6  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
         _MOC_Wynikowa_wartosc_roznicowa 0FCC                              _COMSTATbits 000F74  
                        ??_CAN_SendFrame 000D                         ___lwdiv@quotient 000A  
                ?i1_TMR1_Update_flag_Set 0001                   ??_TMR1_Update_flag_Get 0008  
                 ??_TMR1_Update_flag_Set 0008                          ??_CAN_SetupMask 0006  
                         ___wmul@product 000A                                 _LED_Left 0E02  
                 ??_FRAME_HandleCanFrame 0022                     CAN_TakeFrame@message 000E  
                    __end_of_MOC_NOTWORK 1010                                 _LOCK_Get 101E  
                   CAN_TakeFrame@tempCON 0012                                 _LOCK_Set 1010  
                               _RXB0EIDH 000F63                                 _RXB0EIDL 000F64  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                               _RXB0SIDH 000F61                                 _RXB0SIDL 000F62  
                               _RXF0EIDH 000F02                                 _RXF0EIDL 000F03  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXF2EIDH 000F0A                                 _RXF2EIDL 000F0B  
                               _RXF0SIDH 000F00                                 _RXF0SIDL 000F01  
                               _RXF1SIDH 000F04                                 _RXF1SIDL 000F05  
                               _RXF2SIDH 000F08                                 _RXF2SIDL 000F09  
                               _ISR_high 0008                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                                 _RXM1EIDH 000F1E  
                               _RXM1EIDL 000F1F                                 _RXM0SIDH 000F18  
                               _RXM0SIDL 000F19                                 _RXM1SIDH 000F1C  
                               _RXM1SIDL 000F1D                ??_FRAME_AdressOfNeighbors 0010  
                      ___wmul@multiplier 0006                         _DetectorLedRadar 003F  
                            _LED_Control 06AE                         __size_of_INI_All 001A  
         __end_ofi1_TMR1_Update_flag_Set 0FFE                                copy_data0 0CD4  
                       __size_of_ISR_low 0044                                 __Hrparam 0000  
                           _RXB0SIDLbits 000F62                                 __Lrparam 0000  
                       __size_of___awdiv 0084                         __size_of___lwdiv 0052  
               _MOC_Aktualna_Temperatura 0FD6                       LED_Light_Pos@flage 0016  
                     LED_Light_Pos@color 0011                             _RXF0SIDLbits 000F01  
                        ___lwdiv@divisor 0008                             _RXF1SIDLbits 000F05  
                        ___lwdiv@counter 000C                                 __ptext10 101E  
                               __ptext11 02DC                                 __ptext20 0B86  
                               __ptext12 0EF8                                 __ptext21 09BE  
                               __ptext13 0540                                 __ptext30 0FBE  
                               __ptext22 0D1A                                 __ptext14 0A6E  
                               __ptext31 0C64                                 __ptext23 0D6C  
                               __ptext15 0060                                 __ptext32 0C00  
                               __ptext24 0E02                                 __ptext16 0B02  
                               __ptext33 0ED0                                 __ptext25 0F7E  
                               __ptext17 0EA6                                 __ptext26 0F98  
                               __ptext18 0FE0                                 __ptext35 0FF4  
                               __ptext27 0F60                                 __ptext19 0FEA  
                               __ptext36 0F1E                                 __ptext28 0E44  
         ??_FRAME_SensorExcitationStatus 000A                                 __ptext29 06AE  
          TRM_DataTransmition@canMessage 0025                             _RXF2SIDLbits 000F09  
                            _MOC_NOTWORK 1008                            __size_of_main 002E  
                __size_of_CAN_SetupClock 0028                                 int$flags 0054  
                    _TRM_DataTransmition 0DB8                              _RXB0DLCbits 000F65  
                             _LED_Update 0B86                              _RXB0CONbits 000F60  
                             _INTCONbits 000FF2                               _INI_OUTPUT 0F60  
                   ?_TRM_DataTransmition 0001                                 intlevel1 0000  
                               intlevel2 0000      FRAME_SensorExcitationStatus@message 0008  
                            _TXB0CONbits 000F40                __size_of_TMR1_Timer_reset 0024  
               LED_Light_Pos@fulfillment 000F                          LED_Update@Green 0053  
                 __size_of_LED_Light_Pos 00B0                    _CAN_MoveBuffIntoFrame 0EA6  
                             _WDTCONbits 000FD1                    ??_TRM_DataTransmition 0025  
                 LED_Light_Pos@LED_array 0012                           LED_Update@pos1 004F  
                         LED_Update@pos2 004D  
