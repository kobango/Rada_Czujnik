

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 22 11:37:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4680 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  0010CC                     __pidataCOMRAM:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for MOC_Frame_Counter@zeta
    97  0010CC  0011               	dw	17
    98                           
    99                           ;initializer for LED_Update@pos2
   100  0010CE  0001               	dw	1
   101                           
   102                           ;initializer for LED_Update@pos1
   103  0010D0  0001               	dw	1
   104                           
   105                           ;initializer for _Fulfillment_Lvl
   106  0010D2  0014               	dw	20
   107                           
   108                           ;initializer for LED_Update@Green
   109  0010D4  01                 	db	1
   110  0000                     _MSEL3	set	3571
   111  0000                     _MSEL2	set	3570
   112  0000                     _MSEL1	set	3569
   113  0000                     _MSEL0	set	3568
   114  0000                     _BIE0	set	3578
   115  0000                     _BSEL0	set	3576
   116  0000                     _B5CON	set	3696
   117  0000                     _B4CON	set	3680
   118  0000                     _B3CON	set	3664
   119  0000                     _B2CON	set	3648
   120  0000                     _B1CON	set	3632
   121  0000                     _B0CON	set	3616
   122  0000                     _TXB0CONbits	set	3904
   123  0000                     _RXF2EIDL	set	3851
   124  0000                     _RXF2EIDH	set	3850
   125  0000                     _RXF2SIDLbits	set	3849
   126  0000                     _RXF2SIDL	set	3849
   127  0000                     _RXF2SIDH	set	3848
   128  0000                     _RXF1EIDL	set	3847
   129  0000                     _RXF1EIDH	set	3846
   130  0000                     _RXF1SIDLbits	set	3845
   131  0000                     _RXF1SIDL	set	3845
   132  0000                     _RXF1SIDH	set	3844
   133  0000                     _RXF0EIDL	set	3843
   134  0000                     _RXF0EIDH	set	3842
   135  0000                     _RXF0SIDLbits	set	3841
   136  0000                     _RXF0SIDL	set	3841
   137  0000                     _RXF0SIDH	set	3840
   138  0000                     _RXM1EIDL	set	3871
   139  0000                     _RXM1EIDH	set	3870
   140  0000                     _RXM1SIDL	set	3869
   141  0000                     _RXM1SIDH	set	3868
   142  0000                     _RXM0EIDL	set	3867
   143  0000                     _RXM0EIDH	set	3866
   144  0000                     _RXM0SIDL	set	3865
   145  0000                     _RXM0SIDH	set	3864
   146  0000                     _RXB1CON	set	3920
   147  0000                     _TXB0CON	set	3904
   148  0000                     _TRISC	set	3988
   149  0000                     _LATC	set	3979
   150  0000                     _LATE	set	3981
   151  0000                     _LATA	set	3977
   152  0000                     _LATB	set	3978
   153  0000                     _LATD	set	3980
   154  0000                     _TRISD	set	3989
   155  0000                     _TRISE	set	3990
   156  0000                     _TRISB	set	3987
   157  0000                     _TRISA	set	3986
   158  0000                     _RXB0DLCbits	set	3941
   159  0000                     _RXB0DLC	set	3941
   160  0000                     _RXB0SIDH	set	3937
   161  0000                     _RXB0SIDLbits	set	3938
   162  0000                     _RXB0SIDL	set	3938
   163  0000                     _RXB0EIDH	set	3939
   164  0000                     _RXB0EIDL	set	3940
   165  0000                     _COMSTATbits	set	3956
   166  0000                     _RXB0CONbits	set	3936
   167  0000                     _BRGCON3bits	set	3954
   168  0000                     _BRGCON2bits	set	3953
   169  0000                     _BRGCON1bits	set	3952
   170  0000                     _CIOCON	set	3955
   171  0000                     _ECANCON	set	3959
   172  0000                     _RXB0CON	set	3936
   173  0000                     _CANSTAT	set	3950
   174  0000                     _CANCON	set	3951
   175  0000                     _RXB0D0	set	3942
   176  0000                     _WDTCONbits	set	4049
   177  0000                     _RCONbits	set	4048
   178  0000                     _T1CON	set	4045
   179  0000                     _TMR1H	set	4047
   180  0000                     _TMR1L	set	4046
   181  0000                     _PIR3	set	4004
   182  0000                     _IPR3	set	4005
   183  0000                     _PIE3	set	4003
   184  0000                     _RCON	set	4048
   185  0000                     _TMR1IF	set	31984
   186  0000                     _TMR1IP	set	31992
   187  0000                     _IPEN	set	32391
   188  0000                     _TMR1ON	set	32360
   189  0000                     _TMR1IE	set	31976
   190  0000                     _IRCF0	set	32412
   191  0000                     _IRCF1	set	32413
   192  0000                     _IRCF2	set	32414
   193  0000                     _INTCONbits	set	4082
   194  0000                     _PEIE	set	32662
   195                           
   196                           ; #config settings
   197  0000                     
   198                           	psect	cinit
   199  000D6E                     __pcinit:
   200                           	opt callstack 0
   201  000D6E                     start_initialization:
   202                           	opt callstack 0
   203  000D6E                     __initialization:
   204                           	opt callstack 0
   205                           
   206                           ; Initialize objects allocated to COMRAM (9 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208  000D6E  0ECC               	movlw	low __pidataCOMRAM
   209  000D70  6EF6               	movwf	tblptrl,c
   210  000D72  0E10               	movlw	high __pidataCOMRAM
   211  000D74  6EF7               	movwf	tblptrh,c
   212  000D76  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213  000D78  6EF8               	movwf	tblptru,c
   214  000D7A  EE00  F041         	lfsr	0,__pdataCOMRAM
   215  000D7E  EE10 F009          	lfsr	1,9
   216  000D82                     copy_data0:
   217  000D82  0009               	tblrd		*+
   218  000D84  CFF5 FFEE          	movff	tablat,postinc0
   219  000D88  50E5               	movf	postdec1,w,c
   220  000D8A  50E1               	movf	fsr1l,w,c
   221  000D8C  E1FA               	bnz	copy_data0
   222                           
   223                           ; Clear objects allocated to BIGRAM (544 bytes)
   224  000D8E  EE00  F0D7         	lfsr	0,__pbssBIGRAM
   225  000D92  EE12 F020          	lfsr	1,544
   226  000D96                     clear_0:
   227  000D96  6AEE               	clrf	postinc0,c
   228  000D98  50E5               	movf	postdec1,w,c
   229  000D9A  50E1               	movf	fsr1l,w,c
   230  000D9C  E1FC               	bnz	clear_0
   231  000D9E  50E2               	movf	fsr1h,w,c
   232  000DA0  E1FA               	bnz	clear_0
   233                           
   234                           ; Clear objects allocated to BANK0 (102 bytes)
   235  000DA2  EE00  F060         	lfsr	0,__pbssBANK0
   236  000DA6  0E66               	movlw	102
   237  000DA8                     clear_1:
   238  000DA8  6AEE               	clrf	postinc0,c
   239  000DAA  06E8               	decf	wreg,f,c
   240  000DAC  E1FD               	bnz	clear_1
   241                           
   242                           ; Clear objects allocated to COMRAM (21 bytes)
   243  000DAE  EE00  F02C         	lfsr	0,__pbssCOMRAM
   244  000DB2  0E15               	movlw	21
   245  000DB4                     clear_2:
   246  000DB4  6AEE               	clrf	postinc0,c
   247  000DB6  06E8               	decf	wreg,f,c
   248  000DB8  E1FD               	bnz	clear_2
   249  000DBA                     end_of_initialization:
   250                           	opt callstack 0
   251  000DBA                     __end_of__initialization:
   252                           	opt callstack 0
   253  000DBA  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254  000DBC  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255  000DBE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  000DC0  6EF8               	movwf	tblptru,c
   257  000DC2  0100               	movlb	0
   258  000DC4  EF94  F007         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261  00002C                     __pbssCOMRAM:
   262                           	opt callstack 0
   263  00002C                     _Flagi:
   264                           	opt callstack 0
   265  00002C                     	ds	5
   266  000031                     _DaneCan:
   267                           	opt callstack 0
   268  000031                     	ds	4
   269  000035                     _DetectorLedRadar:
   270                           	opt callstack 0
   271  000035                     	ds	3
   272  000038                     _TMR1_Update_flag:
   273                           	opt callstack 0
   274  000038                     	ds	2
   275  00003A                     _Dane:
   276                           	opt callstack 0
   277  00003A                     	ds	2
   278  00003C                     	ds	1
   279  00003D                     	ds	1
   280  00003E                     ISR_low@ramkaStanuU8:
   281                           	opt callstack 0
   282  00003E                     	ds	1
   283  00003F                     	ds	1
   284  000040                     _LOCK:
   285                           	opt callstack 0
   286  000040                     	ds	1
   287                           
   288                           	psect	dataCOMRAM
   289  000041                     __pdataCOMRAM:
   290                           	opt callstack 0
   291  000041                     MOC_Frame_Counter@zeta:
   292                           	opt callstack 0
   293  000041                     	ds	2
   294  000043                     LED_Update@pos2:
   295                           	opt callstack 0
   296  000043                     	ds	2
   297  000045                     LED_Update@pos1:
   298                           	opt callstack 0
   299  000045                     	ds	2
   300  000047                     _Fulfillment_Lvl:
   301                           	opt callstack 0
   302  000047                     	ds	2
   303  000049                     LED_Update@Green:
   304                           	opt callstack 0
   305  000049                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308  000060                     __pbssBANK0:
   309                           	opt callstack 0
   310  000060                     _ramkaCanRxKarty:
   311                           	opt callstack 0
   312  000060                     	ds	85
   313  0000B5                     _ramkaCanTxKarty:
   314                           	opt callstack 0
   315  0000B5                     	ds	17
   316                           
   317                           	psect	bssBIGRAM
   318  0000D7                     __pbssBIGRAM:
   319                           	opt callstack 0
   320  0000D7                     _wartosciSasiada:
   321                           	opt callstack 0
   322  0000D7                     	ds	544
   323                           
   324                           	psect	cstackBANK0
   325  0000C6                     __pcstackBANK0:
   326                           	opt callstack 0
   327  0000C6                     TRM_DataTransmition@canMessage:
   328                           	opt callstack 0
   329                           
   330                           ; 17 bytes @ 0x0
   331  0000C6                     	ds	17
   332                           
   333                           	psect	cstackCOMRAM
   334  000001                     __pcstackCOMRAM:
   335                           	opt callstack 0
   336  000001                     TMR1_Timer_reset@t1L:
   337                           	opt callstack 0
   338  000001                     i1TMR1_Update_flag_Set@a:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x0
   342  000001                     	ds	1
   343  000002                     TMR1_Timer_reset@t1H:
   344                           	opt callstack 0
   345                           
   346                           ; 1 bytes @ 0x1
   347  000002                     	ds	1
   348  000003                     ??_ISR_low:
   349  000003                     
   350                           ; 1 bytes @ 0x2
   351  000003                     	ds	3
   352  000006                     ??_CAN_Setup:
   353  000006                     ?_TMR1_Update_flag_Get:
   354                           	opt callstack 0
   355  000006                     ?_LED_Right:
   356                           	opt callstack 0
   357  000006                     ?_LED_Left:
   358                           	opt callstack 0
   359  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   360                           	opt callstack 0
   361  000006                     ?_MOC_Frame_Counter:
   362                           	opt callstack 0
   363  000006                     ?_MOC_Aktualna_Temperatura:
   364                           	opt callstack 0
   365  000006                     ?_MOC_NOTWORK:
   366                           	opt callstack 0
   367  000006                     ?___wmul:
   368                           	opt callstack 0
   369  000006                     ?___awdiv:
   370                           	opt callstack 0
   371  000006                     ?___lwdiv:
   372                           	opt callstack 0
   373  000006                     LOCK_Set@k:
   374                           	opt callstack 0
   375  000006                     CAN_MoveBuffIntoFrame@Ram:
   376                           	opt callstack 0
   377  000006                     CAN_GenID@message:
   378                           	opt callstack 0
   379  000006                     LED_Right@a:
   380                           	opt callstack 0
   381  000006                     LED_Left@a:
   382                           	opt callstack 0
   383  000006                     LED_Control@diode:
   384                           	opt callstack 0
   385  000006                     TMR1_Update_flag_Set@a:
   386                           	opt callstack 0
   387  000006                     ___wmul@multiplier:
   388                           	opt callstack 0
   389  000006                     ___awdiv@dividend:
   390                           	opt callstack 0
   391  000006                     ___lwdiv@dividend:
   392                           	opt callstack 0
   393                           
   394                           ; 2 bytes @ 0x5
   395  000006                     	ds	2
   396  000008                     ??_LED_Right:
   397  000008                     CAN_GenID@frameID:
   398                           	opt callstack 0
   399  000008                     CAN_MoveBuffIntoFrame@Buf:
   400                           	opt callstack 0
   401  000008                     LED_Left@b:
   402                           	opt callstack 0
   403  000008                     ___wmul@multiplicand:
   404                           	opt callstack 0
   405  000008                     ___awdiv@divisor:
   406                           	opt callstack 0
   407  000008                     ___lwdiv@divisor:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x7
   411  000008                     	ds	1
   412  000009                     ??_CAN_GenID:
   413                           
   414                           ; 1 bytes @ 0x8
   415  000009                     	ds	1
   416  00000A                     CAN_MoveBuffIntoFrame@i:
   417                           	opt callstack 0
   418  00000A                     LED_Control@color:
   419                           	opt callstack 0
   420  00000A                     ___awdiv@counter:
   421                           	opt callstack 0
   422  00000A                     LED_Right@b:
   423                           	opt callstack 0
   424  00000A                     ___wmul@product:
   425                           	opt callstack 0
   426  00000A                     ___lwdiv@quotient:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x9
   430  00000A                     	ds	1
   431  00000B                     ___awdiv@sign:
   432                           	opt callstack 0
   433  00000B                     CAN_SendFrame@message:
   434                           	opt callstack 0
   435  00000B                     FRAME_SensorExcitationStatus@message:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0xA
   439  00000B                     	ds	1
   440  00000C                     ___lwdiv@counter:
   441                           	opt callstack 0
   442  00000C                     FRAME_AdressOfNeighbors@message:
   443                           	opt callstack 0
   444  00000C                     ___awdiv@quotient:
   445                           	opt callstack 0
   446                           
   447                           ; 2 bytes @ 0xB
   448  00000C                     	ds	1
   449  00000D                     ??_CAN_SendFrame:
   450  00000D                     LED_Light_Pos@pos:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0xC
   454  00000D                     	ds	1
   455  00000E                     CAN_TakeFrame@message:
   456                           	opt callstack 0
   457  00000E                     FRAME_AdressOfNeighbors@nrRamki:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0xD
   461  00000E                     	ds	1
   462  00000F                     LED_Light_Pos@fulfillment:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0xE
   466  00000F                     	ds	1
   467  000010                     ??_CAN_TakeFrame:
   468  000010                     ??_FRAME_AdressOfNeighbors:
   469                           
   470                           ; 1 bytes @ 0xF
   471  000010                     	ds	1
   472  000011                     LED_Light_Pos@color:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0x10
   476  000011                     	ds	1
   477  000012                     CAN_TakeFrame@tempCON:
   478                           	opt callstack 0
   479  000012                     LED_Light_Pos@LED_array:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x11
   483  000012                     	ds	1
   484  000013                     CAN_TakeFrame@k:
   485                           	opt callstack 0
   486  000013                     FRAME_SensorExcitationStatus@Satrun_prime:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x12
   490  000013                     	ds	1
   491  000014                     LED_Light_Pos@pos2:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x13
   495  000014                     	ds	1
   496  000015                     FRAME_SensorExcitationStatus@Satrun_prime_2166:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x14
   500  000015                     	ds	1
   501  000016                     LED_Light_Pos@flage:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x15
   505  000016                     	ds	1
   506  000017                     FRAME_SensorExcitationStatus@Saturn:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x16
   510  000017                     	ds	1
   511  000018                     
   512                           ; 1 bytes @ 0x17
   513  000018                     	ds	1
   514  000019                     FRAME_SensorExcitationStatus@k:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x18
   518  000019                     	ds	6
   519  00001F                     FRAME_AdressOfNeighbors@gaja:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x1E
   523  00001F                     	ds	2
   524  000021                     FRAME_AdressOfNeighbors@uranos:
   525                           	opt callstack 0
   526                           
   527                           ; 2 bytes @ 0x20
   528  000021                     	ds	2
   529  000023                     FRAME_AdressOfNeighbors@kier:
   530                           	opt callstack 0
   531                           
   532                           ; 2 bytes @ 0x22
   533  000023                     	ds	2
   534  000025                     FRAME_AdressOfNeighbors@i:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x24
   538  000025                     	ds	2
   539  000027                     FRAME_HandleCanFrame@message:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x26
   543  000027                     	ds	2
   544  000029                     ??_FRAME_HandleCanFrame:
   545                           
   546                           ; 1 bytes @ 0x28
   547  000029                     	ds	2
   548  00002B                     FRAME_HandleCanFrame@identyfikator:
   549                           	opt callstack 0
   550                           
   551                           ; 1 bytes @ 0x2A
   552  00002B                     	ds	1
   553  00002C                     
   554                           ; 1 bytes @ 0x2B
   555 ;;
   556 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   557 ;;
   558 ;; *************** function _main *****************
   559 ;; Defined at:
   560 ;;		line 94 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels required when called:    8
   580 ;; This function calls:
   581 ;;		_INI_All
   582 ;;		_LED_Update
   583 ;;		_TMR1_Update_flag_Get
   584 ;;		_TMR1_Update_flag_Set
   585 ;;		_TRM_DataTransmition
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text0
   592  000F28                     __ptext0:
   593                           	opt callstack 0
   594  000F28                     _main:
   595                           	opt callstack 23
   596                           
   597                           ;main.c: 96:     INI_All();
   598                           
   599                           ;incstack = 0
   600  000F28  EC26  F008         	call	_INI_All	;wreg free
   601                           
   602                           ;main.c: 98:     RCON = 0xFF;
   603  000F2C  68D0               	setf	4048,c	;volatile
   604  000F2E                     l3585:
   605                           
   606                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   607  000F2E  B035               	btfsc	_DetectorLedRadar,0,c
   608                           
   609                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   610  000F30  9035               	bcf	_DetectorLedRadar,0,c
   611                           
   612                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   613  000F32  EC5C  F008         	call	_TMR1_Update_flag_Get	;wreg free
   614  000F36  0406               	decf	?_TMR1_Update_flag_Get,w,c
   615  000F38  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   616  000F3A  A4D8               	btfss	status,2,c
   617  000F3C  D008               	goto	l3595
   618                           
   619                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   620  000F3E  EC1A  F006         	call	_LED_Update	;wreg free
   621                           
   622                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   623  000F42  0E00               	movlw	0
   624  000F44  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   625  000F46  0E00               	movlw	0
   626  000F48  6E06               	movwf	TMR1_Update_flag_Set@a,c
   627  000F4A  EC57  F008         	call	_TMR1_Update_flag_Set	;wreg free
   628  000F4E                     l3595:
   629                           
   630                           ;main.c: 115:         TRM_DataTransmition();
   631  000F4E  EC0D  F007         	call	_TRM_DataTransmition	;wreg free
   632  000F52  0004               	clrwdt		;# 
   633                           
   634                           ;main.c: 117:     }
   635  000F54  D7EC               	goto	l3585
   636  000F56                     __end_of_main:
   637                           	opt callstack 0
   638                           
   639 ;; *************** function _TRM_DataTransmition *****************
   640 ;; Defined at:
   641 ;;		line 19 in file "TRM.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  canMessage     17    0[BANK0 ] struct .
   646 ;;  i               1    0        unsigned char 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   657 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   659 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   660 ;;Total ram usage:       17 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; Hardware stack levels required when called:    7
   663 ;; This function calls:
   664 ;;		_CAN_TakeFrame
   665 ;;		_FRAME_HandleCanFrame
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text1
   672  000E1A                     __ptext1:
   673                           	opt callstack 0
   674  000E1A                     _TRM_DataTransmition:
   675                           	opt callstack 23
   676                           
   677                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   678                           
   679                           ;incstack = 0
   680  000E1A  A031               	btfss	_DaneCan,0,c
   681  000E1C  D014               	goto	l3571
   682                           
   683                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   684  000E1E  0E02               	movlw	2
   685  000E20  0100               	movlb	0	; () banked
   686  000E22  6FC7               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   687                           
   688                           ;TRM.c: 30:         canMessage.id.Val = 0;
   689  000E24  0E00               	movlw	0
   690  000E26  6FCA               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   691  000E28  0E00               	movlw	0
   692  000E2A  6FCB               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   693  000E2C  0E00               	movlw	0
   694  000E2E  6FCC               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   695  000E30  0E00               	movlw	0
   696  000E32  6FCD               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
   697                           
   698                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   699  000E34  0E04               	movlw	4
   700  000E36  6FCC               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   701                           
   702                           ; BSR set to: 0
   703                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   704  000E38  0EC6               	movlw	low TRM_DataTransmition@canMessage
   705  000E3A  6E27               	movwf	FRAME_HandleCanFrame@message,c
   706  000E3C  0E00               	movlw	high TRM_DataTransmition@canMessage
   707  000E3E  6E28               	movwf	FRAME_HandleCanFrame@message+1,c
   708  000E40  ECBE  F004         	call	_FRAME_HandleCanFrame	;wreg free
   709                           
   710                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   711  000E44  9031               	bcf	_DaneCan,0,c
   712  000E46                     l3571:
   713                           
   714                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   715  000E46  0EC6               	movlw	low TRM_DataTransmition@canMessage
   716  000E48  6E0E               	movwf	CAN_TakeFrame@message,c
   717  000E4A  0E00               	movlw	high TRM_DataTransmition@canMessage
   718  000E4C  6E0F               	movwf	CAN_TakeFrame@message+1,c
   719  000E4E  EC8B  F001         	call	_CAN_TakeFrame	;wreg free
   720  000E52  0900               	iorlw	0
   721  000E54  B4D8               	btfsc	status,2,c
   722  000E56  0012               	return	
   723                           
   724                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   725  000E58  0EC6               	movlw	low TRM_DataTransmition@canMessage
   726  000E5A  6E27               	movwf	FRAME_HandleCanFrame@message,c
   727  000E5C  0E00               	movlw	high TRM_DataTransmition@canMessage
   728  000E5E  6E28               	movwf	FRAME_HandleCanFrame@message+1,c
   729  000E60  ECBE  F004         	call	_FRAME_HandleCanFrame	;wreg free
   730                           
   731                           ;TRM.c: 67:         }
   732  000E64  0012               	return		;funcret
   733  000E66                     __end_of_TRM_DataTransmition:
   734                           	opt callstack 0
   735                           
   736 ;; *************** function _FRAME_HandleCanFrame *****************
   737 ;; Defined at:
   738 ;;		line 512 in file "FRAME.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  message         2   38[COMRAM] PTR struct .
   741 ;;		 -> TRM_DataTransmition@canMessage(17), 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  identyfikato    1   42[COMRAM] unsigned char 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   756 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   757 ;;Total ram usage:        5 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    6
   760 ;; This function calls:
   761 ;;		_CAN_GenID
   762 ;;		_CAN_SendFrame
   763 ;;		_FRAME_AdressOfNeighbors
   764 ;;		_FRAME_SensorExcitationStatus
   765 ;;		_LED_Error
   766 ;;		___awdiv
   767 ;; This function is called by:
   768 ;;		_TRM_DataTransmition
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text2
   773  00097C                     __ptext2:
   774                           	opt callstack 0
   775  00097C                     _FRAME_HandleCanFrame:
   776                           	opt callstack 23
   777                           
   778                           ;FRAME.c: 512: void FRAME_HandleCanFrame(mID * message);FRAME.c: 513: {;FRAME.c: 514:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   779                           
   780                           ;incstack = 0
   781  00097C  EE20 F006          	lfsr	2,6
   782  000980  5027               	movf	FRAME_HandleCanFrame@message,w,c
   783  000982  26D9               	addwf	fsr2l,f,c
   784  000984  5028               	movf	FRAME_HandleCanFrame@message+1,w,c
   785  000986  22DA               	addwfc	fsr2h,f,c
   786  000988  50DF               	movf	indf2,w,c
   787  00098A  6E29               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   788  00098C  5029               	movf	??_FRAME_HandleCanFrame,w,c
   789  00098E  6E06               	movwf	___awdiv@dividend,c
   790  000990  6A07               	clrf	___awdiv@dividend+1,c
   791  000992  0E00               	movlw	0
   792  000994  6E09               	movwf	___awdiv@divisor+1,c
   793  000996  0E04               	movlw	4
   794  000998  6E08               	movwf	___awdiv@divisor,c
   795  00099A  ECD8  F005         	call	___awdiv	;wreg free
   796  00099E  5006               	movf	?___awdiv,w,c
   797  0009A0  6E2B               	movwf	FRAME_HandleCanFrame@identyfikator,c
   798                           
   799                           ;FRAME.c: 517:     switch(identyfikator)
   800  0009A2  D014               	goto	l3523
   801  0009A4                     l3517:
   802                           
   803                           ;FRAME.c: 520:             FRAME_SensorExcitationStatus(message);
   804  0009A4  C027  F00B         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   805  0009A8  C028  F00C         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   806  0009AC  EC29  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   807                           
   808                           ;FRAME.c: 521:             break;
   809  0009B0  D019               	goto	l3525
   810  0009B2                     l3519:
   811                           
   812                           ;FRAME.c: 564:           FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   813  0009B2  C027  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   814  0009B6  C028  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   815  0009BA  0EF0               	movlw	240
   816  0009BC  242B               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   817  0009BE  6E0E               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   818  0009C0  6A0F               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   819  0009C2  0EFF               	movlw	255
   820  0009C4  220F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   821  0009C6  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   822                           
   823                           ;FRAME.c: 566:             break;
   824  0009CA  D00C               	goto	l3525
   825  0009CC                     l3523:
   826  0009CC  502B               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   827  0009CE  6E29               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   828  0009D0  6A2A               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   829                           
   830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   831                           ; Switch size 1, requested type "simple"
   832                           ; Number of cases is 1, Range of values is 0 to 0
   833                           ; switch strategies available:
   834                           ; Name         Instructions Cycles
   835                           ; simple_byte            4     3 (average)
   836                           ;	Chosen strategy is simple_byte
   837  0009D2  502A               	movf	??_FRAME_HandleCanFrame+1,w,c
   838  0009D4  0A00               	xorlw	0	; case 0
   839  0009D6  A4D8               	btfss	status,2,c
   840  0009D8  D7EC               	goto	l3519
   841                           
   842                           ; Switch size 1, requested type "simple"
   843                           ; Number of cases is 1, Range of values is 1 to 1
   844                           ; switch strategies available:
   845                           ; Name         Instructions Cycles
   846                           ; simple_byte            4     3 (average)
   847                           ;	Chosen strategy is simple_byte
   848  0009DA  5029               	movf	??_FRAME_HandleCanFrame,w,c
   849  0009DC  0A01               	xorlw	1	; case 1
   850  0009DE  B4D8               	btfsc	status,2,c
   851  0009E0  D7E1               	goto	l3517
   852  0009E2  D7E7               	goto	l3519
   853  0009E4                     l3525:
   854                           
   855                           ;FRAME.c: 568:     if(message->message_type == 0x02)
   856  0009E4  EE20 F001          	lfsr	2,1
   857  0009E8  5027               	movf	FRAME_HandleCanFrame@message,w,c
   858  0009EA  26D9               	addwf	fsr2l,f,c
   859  0009EC  5028               	movf	FRAME_HandleCanFrame@message+1,w,c
   860  0009EE  22DA               	addwfc	fsr2h,f,c
   861  0009F0  0E02               	movlw	2
   862  0009F2  18DE               	xorwf	postinc2,w,c
   863  0009F4  A4D8               	btfss	status,2,c
   864  0009F6  0012               	return	
   865                           
   866                           ;FRAME.c: 569:     {;FRAME.c: 571:         message->frame_type = 0x03;
   867  0009F8  EE20 F002          	lfsr	2,2
   868  0009FC  5027               	movf	FRAME_HandleCanFrame@message,w,c
   869  0009FE  26D9               	addwf	fsr2l,f,c
   870  000A00  5028               	movf	FRAME_HandleCanFrame@message+1,w,c
   871  000A02  22DA               	addwfc	fsr2h,f,c
   872  000A04  0E03               	movlw	3
   873  000A06  6EDF               	movwf	indf2,c
   874                           
   875                           ;FRAME.c: 572:         message->message_type = 0x01;
   876  000A08  EE20 F001          	lfsr	2,1
   877  000A0C  5027               	movf	FRAME_HandleCanFrame@message,w,c
   878  000A0E  26D9               	addwf	fsr2l,f,c
   879  000A10  5028               	movf	FRAME_HandleCanFrame@message+1,w,c
   880  000A12  22DA               	addwfc	fsr2h,f,c
   881  000A14  0E01               	movlw	1
   882  000A16  6EDF               	movwf	indf2,c
   883                           
   884                           ;FRAME.c: 573:         message->id.Val = 0;
   885  000A18  EE20 F004          	lfsr	2,4
   886  000A1C  5027               	movf	FRAME_HandleCanFrame@message,w,c
   887  000A1E  26D9               	addwf	fsr2l,f,c
   888  000A20  5028               	movf	FRAME_HandleCanFrame@message+1,w,c
   889  000A22  22DA               	addwfc	fsr2h,f,c
   890  000A24  6ADE               	clrf	postinc2,c
   891  000A26  6ADE               	clrf	postinc2,c
   892  000A28  6ADE               	clrf	postinc2,c
   893  000A2A  6ADD               	clrf	postdec2,c
   894                           
   895                           ;FRAME.c: 575:         message->id.v[2] = identyfikator*4;
   896  000A2C  502B               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   897  000A2E  0D04               	mullw	4
   898  000A30  EE20 F006          	lfsr	2,6
   899  000A34  5027               	movf	FRAME_HandleCanFrame@message,w,c
   900  000A36  26D9               	addwf	fsr2l,f,c
   901  000A38  5028               	movf	FRAME_HandleCanFrame@message+1,w,c
   902  000A3A  22DA               	addwfc	fsr2h,f,c
   903  000A3C  CFF3 FFDF          	movff	prodl,indf2
   904                           
   905                           ;FRAME.c: 576:         CAN_GenID(message,identyfikator);
   906  000A40  C027  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   907  000A44  C028  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   908  000A48  C02B  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
   909  000A4C  EC8E  F005         	call	_CAN_GenID	;wreg free
   910                           
   911                           ;FRAME.c: 577:         CAN_SendFrame(message);
   912  000A50  C027  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
   913  000A54  C028  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
   914  000A58  ECC9  F002         	call	_CAN_SendFrame	;wreg free
   915                           
   916                           ;FRAME.c: 588:        while(RXB0CONbits.FILHIT3)
   917  000A5C  D004               	goto	l520
   918  000A5E                     l521:
   919                           
   920                           ;FRAME.c: 589:        {;FRAME.c: 590:            if(TXB0CONbits.TXERR == 1){
   921  000A5E  010F               	movlb	15	; () banked
   922  000A60  B940               	btfsc	64,4,b	;volatile
   923                           
   924                           ; BSR set to: 15
   925                           ;FRAME.c: 591:                LED_Error();
   926  000A62  ECF9  F007         	call	_LED_Error	;wreg free
   927  000A66                     l520:
   928                           
   929                           ;FRAME.c: 588:        while(RXB0CONbits.FILHIT3)
   930  000A66  A660               	btfss	3936,3,c	;volatile
   931  000A68  0012               	return	
   932  000A6A  D7F9               	goto	l521
   933  000A6C                     __end_of_FRAME_HandleCanFrame:
   934                           	opt callstack 0
   935                           
   936 ;; *************** function _FRAME_SensorExcitationStatus *****************
   937 ;; Defined at:
   938 ;;		line 33 in file "FRAME.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  message         2   10[COMRAM] PTR struct .
   941 ;;		 -> TRM_DataTransmition@canMessage(17), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  Satrun_prime    2   20[COMRAM] int 
   944 ;;  terra           2    0        int 
   945 ;;  Satrun_prime    2   18[COMRAM] int 
   946 ;;  terra           2    0        int 
   947 ;;  k               2   24[COMRAM] unsigned short 
   948 ;;  Saturn          2   22[COMRAM] unsigned short 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   959 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   961 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   962 ;;Total ram usage:       16 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    5
   965 ;; This function calls:
   966 ;;		_LED_Clear
   967 ;;		_LED_Error
   968 ;;		_LOCK_Get
   969 ;;		_LOCK_Set
   970 ;;		_MOC_Aktualna_Temperatura
   971 ;;		_MOC_Frame_Counter
   972 ;;		_MOC_NOTWORK
   973 ;;		_MOC_Wynikowa_wartosc_roznicowa
   974 ;; This function is called by:
   975 ;;		_FRAME_HandleCanFrame
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text3
   980  000852                     __ptext3:
   981                           	opt callstack 0
   982  000852                     _FRAME_SensorExcitationStatus:
   983                           	opt callstack 23
   984                           
   985                           ;FRAME.c: 33: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 34: {;FRAM
      +                          E.c: 35:     if(message->message_type == 0x02)
   986                           
   987                           ;incstack = 0
   988  000852  EE20 F001          	lfsr	2,1
   989  000856  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
   990  000858  26D9               	addwf	fsr2l,f,c
   991  00085A  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
   992  00085C  22DA               	addwfc	fsr2h,f,c
   993  00085E  0E02               	movlw	2
   994  000860  18DE               	xorwf	postinc2,w,c
   995  000862  A4D8               	btfss	status,2,c
   996  000864  D047               	goto	l432
   997                           
   998                           ;FRAME.c: 36:     {;FRAME.c: 37:         message->data_length = 6;
   999  000866  EE20 F010          	lfsr	2,16
  1000  00086A  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1001  00086C  26D9               	addwf	fsr2l,f,c
  1002  00086E  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1003  000870  22DA               	addwfc	fsr2h,f,c
  1004  000872  0E06               	movlw	6
  1005  000874  6EDF               	movwf	indf2,c
  1006                           
  1007                           ;FRAME.c: 43:         message->data[0] = LOCK_Get();
  1008  000876  EE20 F008          	lfsr	2,8
  1009  00087A  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1010  00087C  26D9               	addwf	fsr2l,f,c
  1011  00087E  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1012  000880  22DA               	addwfc	fsr2h,f,c
  1013  000882  EC76  F008         	call	_LOCK_Get	;wreg free
  1014  000886  6EDF               	movwf	indf2,c
  1015                           
  1016                           ;FRAME.c: 44:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1017  000888  EE20 F009          	lfsr	2,9
  1018  00088C  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1019  00088E  26D9               	addwf	fsr2l,f,c
  1020  000890  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1021  000892  22DA               	addwfc	fsr2h,f,c
  1022  000894  EC4D  F008         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1023  000898  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1024  00089C  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1025  00089E  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1026  0008A0  6EDF               	movwf	indf2,c
  1027                           
  1028                           ;FRAME.c: 45:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1029  0008A2  EE20 F00A          	lfsr	2,10
  1030  0008A6  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1031  0008A8  26D9               	addwf	fsr2l,f,c
  1032  0008AA  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1033  0008AC  22DA               	addwfc	fsr2h,f,c
  1034  0008AE  EC4D  F008         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1035  0008B2  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1036  0008B4  6EDF               	movwf	indf2,c
  1037                           
  1038                           ;FRAME.c: 46:         message->data[3] = MOC_Frame_Counter();
  1039  0008B6  EE20 F00B          	lfsr	2,11
  1040  0008BA  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1041  0008BC  26D9               	addwf	fsr2l,f,c
  1042  0008BE  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1043  0008C0  22DA               	addwfc	fsr2h,f,c
  1044  0008C2  EC3F  F008         	call	_MOC_Frame_Counter	;wreg free
  1045  0008C6  5006               	movf	?_MOC_Frame_Counter,w,c
  1046  0008C8  6EDF               	movwf	indf2,c
  1047                           
  1048                           ;FRAME.c: 47:         message->data[4] = MOC_Aktualna_Temperatura();
  1049  0008CA  EE20 F00C          	lfsr	2,12
  1050  0008CE  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1051  0008D0  26D9               	addwf	fsr2l,f,c
  1052  0008D2  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1053  0008D4  22DA               	addwfc	fsr2h,f,c
  1054  0008D6  EC52  F008         	call	_MOC_Aktualna_Temperatura	;wreg free
  1055  0008DA  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1056  0008DC  6EDF               	movwf	indf2,c
  1057                           
  1058                           ;FRAME.c: 48:         message->data[5] = MOC_NOTWORK();
  1059  0008DE  EE20 F00D          	lfsr	2,13
  1060  0008E2  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1061  0008E4  26D9               	addwf	fsr2l,f,c
  1062  0008E6  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1063  0008E8  22DA               	addwfc	fsr2h,f,c
  1064  0008EA  EC6B  F008         	call	_MOC_NOTWORK	;wreg free
  1065  0008EE  5006               	movf	?_MOC_NOTWORK,w,c
  1066  0008F0  6EDF               	movwf	indf2,c
  1067                           
  1068                           ;FRAME.c: 58:     }
  1069  0008F2  0012               	return	
  1070  0008F4                     l432:
  1071                           
  1072                           ;FRAME.c: 60:     {;FRAME.c: 61:         WORD k;;FRAME.c: 62:         WORD Saturn = Dane
      +                          ->sasiedzi[0+(4*0)].adres;
  1073  0008F4  C00E F017          	movff	14,FRAME_SensorExcitationStatus@Saturn
  1074  0008F8  C00F F018          	movff	15,FRAME_SensorExcitationStatus@Saturn+1
  1075                           
  1076                           ;FRAME.c: 63:         if(Saturn == 11)
  1077  0008FC  0E0B               	movlw	11
  1078  0008FE  1817               	xorwf	FRAME_SensorExcitationStatus@Saturn,w,c
  1079  000900  1018               	iorwf	FRAME_SensorExcitationStatus@Saturn+1,w,c
  1080  000902  A4D8               	btfss	status,2,c
  1081  000904  D013               	goto	l434
  1082                           
  1083                           ;FRAME.c: 64:         {;FRAME.c: 65:             int Satrun_prime = Saturn;
  1084  000906  C017  F013         	movff	FRAME_SensorExcitationStatus@Saturn,FRAME_SensorExcitationStatus@Satrun_prime
  1085  00090A  C018  F014         	movff	FRAME_SensorExcitationStatus@Saturn+1,FRAME_SensorExcitationStatus@Satrun_prime+1
  1086                           
  1087                           ;FRAME.c: 67:             for(k=0;k<400;k++)
  1088  00090E  0E00               	movlw	0
  1089  000910  6E1A               	movwf	FRAME_SensorExcitationStatus@k+1,c
  1090  000912  0E00               	movlw	0
  1091  000914  6E19               	movwf	FRAME_SensorExcitationStatus@k,c
  1092  000916                     l3285:
  1093                           
  1094                           ;FRAME.c: 68:             {;FRAME.c: 69:             LED_Clear();
  1095  000916  EC08  F008         	call	_LED_Clear	;wreg free
  1096                           
  1097                           ;FRAME.c: 70:             }
  1098  00091A  4A19               	infsnz	FRAME_SensorExcitationStatus@k,f,c
  1099  00091C  2A1A               	incf	FRAME_SensorExcitationStatus@k+1,f,c
  1100  00091E  0E90               	movlw	144
  1101  000920  5C19               	subwf	FRAME_SensorExcitationStatus@k,w,c
  1102  000922  0E01               	movlw	1
  1103  000924  581A               	subwfb	FRAME_SensorExcitationStatus@k+1,w,c
  1104  000926  B0D8               	btfsc	status,0,c
  1105  000928  D013               	goto	u1780
  1106  00092A  D7F5               	goto	l3285
  1107  00092C                     l434:
  1108                           
  1109                           ;FRAME.c: 75:         {;FRAME.c: 76:             int Satrun_prime = Saturn;
  1110  00092C  C017  F015         	movff	FRAME_SensorExcitationStatus@Saturn,FRAME_SensorExcitationStatus@Satrun_prime_216
      +                          6
  1111  000930  C018  F016         	movff	FRAME_SensorExcitationStatus@Saturn+1,FRAME_SensorExcitationStatus@Satrun_prime_2
      +                          166+1
  1112                           
  1113                           ;FRAME.c: 77:             for(k=0;k<400;k++)
  1114  000934  0E00               	movlw	0
  1115  000936  6E1A               	movwf	FRAME_SensorExcitationStatus@k+1,c
  1116  000938  0E00               	movlw	0
  1117  00093A  6E19               	movwf	FRAME_SensorExcitationStatus@k,c
  1118  00093C                     l3297:
  1119                           
  1120                           ;FRAME.c: 78:             {;FRAME.c: 79:             LED_Error();
  1121  00093C  ECF9  F007         	call	_LED_Error	;wreg free
  1122                           
  1123                           ;FRAME.c: 80:             }
  1124  000940  4A19               	infsnz	FRAME_SensorExcitationStatus@k,f,c
  1125  000942  2A1A               	incf	FRAME_SensorExcitationStatus@k+1,f,c
  1126  000944  0E90               	movlw	144
  1127  000946  5C19               	subwf	FRAME_SensorExcitationStatus@k,w,c
  1128  000948  0E01               	movlw	1
  1129  00094A  581A               	subwfb	FRAME_SensorExcitationStatus@k+1,w,c
  1130  00094C  A0D8               	btfss	status,0,c
  1131  00094E  D7F6               	goto	l3297
  1132  000950                     u1780:
  1133                           
  1134                           ;FRAME.c: 84:         if(0x12b==message->id.w[0])
  1135  000950  EE20 F004          	lfsr	2,4
  1136  000954  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1137  000956  26D9               	addwf	fsr2l,f,c
  1138  000958  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1139  00095A  22DA               	addwfc	fsr2h,f,c
  1140  00095C  0E2B               	movlw	43
  1141  00095E  18DE               	xorwf	postinc2,w,c
  1142  000960  E10C               	bnz	l441
  1143  000962  04DE               	decf	postinc2,w,c
  1144  000964  A4D8               	btfss	status,2,c
  1145  000966  0012               	return	
  1146                           
  1147                           ;FRAME.c: 85:         {;FRAME.c: 86:         LOCK_Set(message->data[0]);
  1148  000968  EE20 F008          	lfsr	2,8
  1149  00096C  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1150  00096E  26D9               	addwf	fsr2l,f,c
  1151  000970  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1152  000972  22DA               	addwfc	fsr2h,f,c
  1153  000974  50DF               	movf	indf2,w,c
  1154  000976  EC6F  F008         	call	_LOCK_Set
  1155  00097A                     l441:
  1156  00097A  0012               	return		;funcret
  1157  00097C                     __end_of_FRAME_SensorExcitationStatus:
  1158                           	opt callstack 0
  1159                           
  1160 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1161 ;; Defined at:
  1162 ;;		line 33 in file "MOC_Funct.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2    5[COMRAM] unsigned int 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1180 ;;Total ram usage:        2 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    3
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_FRAME_SensorExcitationStatus
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text4
  1191  00109A                     __ptext4:
  1192                           	opt callstack 0
  1193  00109A                     _MOC_Wynikowa_wartosc_roznicowa:
  1194                           	opt callstack 24
  1195                           
  1196                           ;MOC_Funct.c: 35:     return 0x0220;
  1197                           
  1198                           ;incstack = 0
  1199  00109A  0E02               	movlw	2
  1200  00109C  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1201  00109E  0E20               	movlw	32
  1202  0010A0  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1203  0010A2  0012               	return		;funcret
  1204  0010A4                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1205                           	opt callstack 0
  1206                           
  1207 ;; *************** function _MOC_NOTWORK *****************
  1208 ;; Defined at:
  1209 ;;		line 47 in file "MOC_Funct.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  2    5[COMRAM] unsigned int 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1227 ;;Total ram usage:        2 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    3
  1230 ;; This function calls:
  1231 ;;		Nothing
  1232 ;; This function is called by:
  1233 ;;		_FRAME_SensorExcitationStatus
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text5
  1238  0010D6                     __ptext5:
  1239                           	opt callstack 0
  1240  0010D6                     _MOC_NOTWORK:
  1241                           	opt callstack 24
  1242                           
  1243                           ;MOC_Funct.c: 49:     return 0xFF;
  1244                           
  1245                           ;incstack = 0
  1246  0010D6  0E00               	movlw	0
  1247  0010D8  6E07               	movwf	?_MOC_NOTWORK+1,c
  1248  0010DA  6806               	setf	?_MOC_NOTWORK,c
  1249  0010DC  0012               	return		;funcret
  1250  0010DE                     __end_of_MOC_NOTWORK:
  1251                           	opt callstack 0
  1252                           
  1253 ;; *************** function _MOC_Frame_Counter *****************
  1254 ;; Defined at:
  1255 ;;		line 38 in file "MOC_Funct.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2    5[COMRAM] unsigned int 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;Total ram usage:        2 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    3
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_FRAME_SensorExcitationStatus
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text6
  1284  00107E                     __ptext6:
  1285                           	opt callstack 0
  1286  00107E                     _MOC_Frame_Counter:
  1287                           	opt callstack 24
  1288                           
  1289                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1290                           
  1291                           ;incstack = 0
  1292  00107E  5041               	movf	MOC_Frame_Counter@zeta,w,c
  1293  001080  6E06               	movwf	?_MOC_Frame_Counter,c
  1294  001082  5042               	movf	MOC_Frame_Counter@zeta+1,w,c
  1295  001084  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1296  001086  4A41               	infsnz	MOC_Frame_Counter@zeta,f,c
  1297  001088  2A42               	incf	MOC_Frame_Counter@zeta+1,f,c
  1298  00108A  0012               	return		;funcret
  1299  00108C                     __end_of_MOC_Frame_Counter:
  1300                           	opt callstack 0
  1301                           
  1302 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1303 ;; Defined at:
  1304 ;;		line 43 in file "MOC_Funct.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  2    5[COMRAM] unsigned int 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1322 ;;Total ram usage:        2 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    3
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_FRAME_SensorExcitationStatus
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text7
  1333  0010A4                     __ptext7:
  1334                           	opt callstack 0
  1335  0010A4                     _MOC_Aktualna_Temperatura:
  1336                           	opt callstack 24
  1337                           
  1338                           ;MOC_Funct.c: 45:     return 0x1B;
  1339                           
  1340                           ;incstack = 0
  1341  0010A4  0E00               	movlw	0
  1342  0010A6  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1343  0010A8  0E1B               	movlw	27
  1344  0010AA  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1345  0010AC  0012               	return		;funcret
  1346  0010AE                     __end_of_MOC_Aktualna_Temperatura:
  1347                           	opt callstack 0
  1348                           
  1349 ;; *************** function _LOCK_Set *****************
  1350 ;; Defined at:
  1351 ;;		line 52 in file "LED.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  k               1    wreg     unsigned char 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  k               1    5[COMRAM] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		wreg
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1369 ;;Total ram usage:        1 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    3
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_FRAME_SensorExcitationStatus
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text8
  1380  0010DE                     __ptext8:
  1381                           	opt callstack 0
  1382  0010DE                     _LOCK_Set:
  1383                           	opt callstack 24
  1384                           
  1385                           ;incstack = 0
  1386                           ;LOCK_Set@k stored from wreg
  1387  0010DE  6E06               	movwf	LOCK_Set@k,c
  1388                           
  1389                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1390  0010E0  C006  F040         	movff	LOCK_Set@k,_LOCK
  1391  0010E4  0012               	return		;funcret
  1392  0010E6                     __end_of_LOCK_Set:
  1393                           	opt callstack 0
  1394                           
  1395 ;; *************** function _LOCK_Get *****************
  1396 ;; Defined at:
  1397 ;;		line 57 in file "LED.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      unsigned char 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    3
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_FRAME_SensorExcitationStatus
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text9
  1426  0010EC                     __ptext9:
  1427                           	opt callstack 0
  1428  0010EC                     _LOCK_Get:
  1429                           	opt callstack 24
  1430                           
  1431                           ;LED.c: 59:     return LOCK;
  1432                           
  1433                           ;incstack = 0
  1434  0010EC  5040               	movf	_LOCK,w,c
  1435  0010EE  0012               	return		;funcret
  1436  0010F0                     __end_of_LOCK_Get:
  1437                           	opt callstack 0
  1438                           
  1439 ;; *************** function _LED_Error *****************
  1440 ;; Defined at:
  1441 ;;		line 37 in file "LED.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  2  255[None  ] unsigned int 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1459 ;;Total ram usage:        0 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    4
  1462 ;; This function calls:
  1463 ;;		_LED_Control
  1464 ;; This function is called by:
  1465 ;;		_FRAME_SensorExcitationStatus
  1466 ;;		_FRAME_HandleCanFrame
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text10
  1471  000FF2                     __ptext10:
  1472                           	opt callstack 0
  1473  000FF2                     _LED_Error:
  1474                           	opt callstack 24
  1475                           
  1476                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1477                           
  1478                           ;incstack = 0
  1479  000FF2  0E02               	movlw	2
  1480  000FF4  6E07               	movwf	LED_Control@diode+1,c
  1481  000FF6  0EAA               	movlw	170
  1482  000FF8  6E06               	movwf	LED_Control@diode,c
  1483  000FFA  0E00               	movlw	0
  1484  000FFC  EC80  F003         	call	_LED_Control
  1485                           
  1486                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1487  001000  0E00               	movlw	0
  1488  001002  6E07               	movwf	LED_Control@diode+1,c
  1489  001004  0E00               	movlw	0
  1490  001006  6E06               	movwf	LED_Control@diode,c
  1491  001008  0E01               	movlw	1
  1492  00100A  EC80  F003         	call	_LED_Control
  1493  00100E  0012               	return		;funcret
  1494  001010                     __end_of_LED_Error:
  1495                           	opt callstack 0
  1496                           
  1497 ;; *************** function _LED_Clear *****************
  1498 ;; Defined at:
  1499 ;;		line 45 in file "LED.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2  258[None  ] unsigned int 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    4
  1520 ;; This function calls:
  1521 ;;		_LED_Control
  1522 ;; This function is called by:
  1523 ;;		_FRAME_SensorExcitationStatus
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text11
  1528  001010                     __ptext11:
  1529                           	opt callstack 0
  1530  001010                     _LED_Clear:
  1531                           	opt callstack 23
  1532                           
  1533                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  1534                           
  1535                           ;incstack = 0
  1536  001010  0E00               	movlw	0
  1537  001012  6E07               	movwf	LED_Control@diode+1,c
  1538  001014  0E00               	movlw	0
  1539  001016  6E06               	movwf	LED_Control@diode,c
  1540  001018  0E00               	movlw	0
  1541  00101A  EC80  F003         	call	_LED_Control
  1542                           
  1543                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  1544  00101E  0E02               	movlw	2
  1545  001020  6E07               	movwf	LED_Control@diode+1,c
  1546  001022  0EAA               	movlw	170
  1547  001024  6E06               	movwf	LED_Control@diode,c
  1548  001026  0E01               	movlw	1
  1549  001028  EC80  F003         	call	_LED_Control
  1550  00102C  0012               	return		;funcret
  1551  00102E                     __end_of_LED_Clear:
  1552                           	opt callstack 0
  1553                           
  1554 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1555 ;; Defined at:
  1556 ;;		line 473 in file "FRAME.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  message         2   11[COMRAM] PTR struct .
  1559 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1560 ;;  nrRamki         2   13[COMRAM] unsigned short 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  uranos          2   32[COMRAM] unsigned short 
  1563 ;;  gaja            2   30[COMRAM] unsigned short 
  1564 ;;  zeta            2    0        unsigned short 
  1565 ;;  i               2   36[COMRAM] unsigned short 
  1566 ;;  kier            2   34[COMRAM] unsigned short 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1577 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1578 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1579 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1580 ;;Total ram usage:       27 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    4
  1583 ;; This function calls:
  1584 ;;		___wmul
  1585 ;; This function is called by:
  1586 ;;		_FRAME_HandleCanFrame
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text12
  1591  000060                     __ptext12:
  1592                           	opt callstack 0
  1593  000060                     _FRAME_AdressOfNeighbors:
  1594                           	opt callstack 24
  1595                           
  1596                           ;FRAME.c: 473: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          474: {;FRAME.c: 475:     WORD i;;FRAME.c: 478:     WORD kier = (nrRamki-0x10);
  1597                           
  1598                           ;incstack = 0
  1599  000060  0EF0               	movlw	240
  1600  000062  240E               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  1601  000064  6E23               	movwf	FRAME_AdressOfNeighbors@kier,c
  1602  000066  0EFF               	movlw	255
  1603  000068  200F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  1604  00006A  6E24               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  1605                           
  1606                           ;FRAME.c: 479:     if(message->message_type == 0x02)
  1607  00006C  EE20 F001          	lfsr	2,1
  1608  000070  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1609  000072  26D9               	addwf	fsr2l,f,c
  1610  000074  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1611  000076  22DA               	addwfc	fsr2h,f,c
  1612  000078  0E02               	movlw	2
  1613  00007A  18DE               	xorwf	postinc2,w,c
  1614  00007C  A4D8               	btfss	status,2,c
  1615  00007E  D07F               	goto	l3325
  1616                           
  1617                           ;FRAME.c: 480:     {;FRAME.c: 482:         message->data_length = 8;
  1618  000080  EE20 F010          	lfsr	2,16
  1619  000084  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1620  000086  26D9               	addwf	fsr2l,f,c
  1621  000088  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1622  00008A  22DA               	addwfc	fsr2h,f,c
  1623  00008C  0E08               	movlw	8
  1624  00008E  6EDF               	movwf	indf2,c
  1625                           
  1626                           ;FRAME.c: 483:         for(i=0; i<4; i++)
  1627  000090  0E00               	movlw	0
  1628  000092  6E26               	movwf	FRAME_AdressOfNeighbors@i+1,c
  1629  000094  0E00               	movlw	0
  1630  000096  6E25               	movwf	FRAME_AdressOfNeighbors@i,c
  1631  000098                     l3319:
  1632                           
  1633                           ;FRAME.c: 484:         {;FRAME.c: 485:             message->data[2*i] = (BYTE)(Dane->sas
      +                          iedzi[i+(4*kier)].adres >> 8);
  1634  000098  C025  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  1635  00009C  C026  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  1636  0000A0  90D8               	bcf	status,0,c
  1637  0000A2  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1638  0000A4  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1639  0000A6  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  1640  0000AA  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  1641  0000AE  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  1642  0000B0  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1643  0000B2  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1644  0000B4  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1645  0000B6  0E08               	movlw	8
  1646  0000B8  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  1647  0000BA  6ED9               	movwf	fsr2l,c
  1648  0000BC  0E00               	movlw	0
  1649  0000BE  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  1650  0000C0  6EDA               	movwf	fsr2h,c
  1651  0000C2  C023  F014         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors+4
  1652  0000C6  C024  F015         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+5
  1653  0000CA  90D8               	bcf	status,0,c
  1654  0000CC  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1655  0000CE  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1656  0000D0  90D8               	bcf	status,0,c
  1657  0000D2  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1658  0000D4  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1659  0000D6  5025               	movf	FRAME_AdressOfNeighbors@i,w,c
  1660  0000D8  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1661  0000DA  5026               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1662  0000DC  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1663  0000DE  90D8               	bcf	status,0,c
  1664  0000E0  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1665  0000E2  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1666  0000E4  90D8               	bcf	status,0,c
  1667  0000E6  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1668  0000E8  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1669  0000EA  0E0E               	movlw	14
  1670  0000EC  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1671  0000EE  6EE1               	movwf	fsr1l,c
  1672  0000F0  0E00               	movlw	0
  1673  0000F2  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1674  0000F4  6EE2               	movwf	fsr1h,c
  1675  0000F6  CFE6 F016          	movff	postinc1,??_FRAME_AdressOfNeighbors+6
  1676  0000FA  CFE5 F017          	movff	postdec1,??_FRAME_AdressOfNeighbors+7
  1677  0000FE  C017  F016         	movff	??_FRAME_AdressOfNeighbors+7,??_FRAME_AdressOfNeighbors+6
  1678  000102  6A17               	clrf	??_FRAME_AdressOfNeighbors+7,c
  1679  000104  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  1680  000106  6EDF               	movwf	indf2,c
  1681                           
  1682                           ;FRAME.c: 486:             message->data[(2*i)+1] = (BYTE)Dane->sasiedzi[i+(4*kier)].adr
      +                          es;
  1683  000108  C023  F010         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors
  1684  00010C  C024  F011         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+1
  1685  000110  90D8               	bcf	status,0,c
  1686  000112  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1687  000114  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1688  000116  90D8               	bcf	status,0,c
  1689  000118  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1690  00011A  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1691  00011C  5025               	movf	FRAME_AdressOfNeighbors@i,w,c
  1692  00011E  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  1693  000120  5026               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1694  000122  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  1695  000124  90D8               	bcf	status,0,c
  1696  000126  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1697  000128  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1698  00012A  90D8               	bcf	status,0,c
  1699  00012C  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1700  00012E  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1701  000130  0E0E               	movlw	14
  1702  000132  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  1703  000134  6ED9               	movwf	fsr2l,c
  1704  000136  0E00               	movlw	0
  1705  000138  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  1706  00013A  6EDA               	movwf	fsr2h,c
  1707  00013C  C025  F012         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+2
  1708  000140  C026  F013         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+3
  1709  000144  90D8               	bcf	status,0,c
  1710  000146  3612               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  1711  000148  3613               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  1712  00014A  C00C  F014         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  1713  00014E  C00D  F015         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  1714  000152  5012               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  1715  000154  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1716  000156  5013               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  1717  000158  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1718  00015A  0E09               	movlw	9
  1719  00015C  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1720  00015E  6EE1               	movwf	fsr1l,c
  1721  000160  0E00               	movlw	0
  1722  000162  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1723  000164  6EE2               	movwf	fsr1h,c
  1724  000166  CFDF FFE7          	movff	indf2,indf1
  1725                           
  1726                           ;FRAME.c: 487:         }
  1727  00016A  4A25               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  1728  00016C  2A26               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  1729  00016E  5026               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1730  000170  E105               	bnz	u1810
  1731  000172  0E04               	movlw	4
  1732  000174  5C25               	subwf	FRAME_AdressOfNeighbors@i,w,c
  1733  000176  B0D8               	btfsc	status,0,c
  1734  000178  0012               	return	
  1735  00017A  D78E               	goto	l3319
  1736  00017C                     u1810:
  1737  00017C  0012               	return	
  1738  00017E                     l3325:
  1739                           
  1740                           ;FRAME.c: 491:     {;FRAME.c: 492:         WORD uranos = message->data[2] | message->dat
      +                          a[3];
  1741  00017E  EE20 F00B          	lfsr	2,11
  1742  000182  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1743  000184  26D9               	addwf	fsr2l,f,c
  1744  000186  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1745  000188  22DA               	addwfc	fsr2h,f,c
  1746  00018A  50DF               	movf	indf2,w,c
  1747  00018C  6E10               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  1748  00018E  EE20 F00A          	lfsr	2,10
  1749  000192  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1750  000194  26D9               	addwf	fsr2l,f,c
  1751  000196  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1752  000198  22DA               	addwfc	fsr2h,f,c
  1753  00019A  50DF               	movf	indf2,w,c
  1754  00019C  1010               	iorwf	??_FRAME_AdressOfNeighbors,w,c
  1755  00019E  6E11               	movwf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  1756  0001A0  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1757  0001A2  6E21               	movwf	FRAME_AdressOfNeighbors@uranos,c
  1758  0001A4  6A22               	clrf	FRAME_AdressOfNeighbors@uranos+1,c
  1759                           
  1760                           ;FRAME.c: 495:          WORD gaja = message->data[0] | message->data[1];
  1761  0001A6  EE20 F009          	lfsr	2,9
  1762  0001AA  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1763  0001AC  26D9               	addwf	fsr2l,f,c
  1764  0001AE  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1765  0001B0  22DA               	addwfc	fsr2h,f,c
  1766  0001B2  50DF               	movf	indf2,w,c
  1767  0001B4  6E10               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  1768  0001B6  EE20 F008          	lfsr	2,8
  1769  0001BA  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  1770  0001BC  26D9               	addwf	fsr2l,f,c
  1771  0001BE  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  1772  0001C0  22DA               	addwfc	fsr2h,f,c
  1773  0001C2  50DF               	movf	indf2,w,c
  1774  0001C4  1010               	iorwf	??_FRAME_AdressOfNeighbors,w,c
  1775  0001C6  6E11               	movwf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  1776  0001C8  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1777  0001CA  6E1F               	movwf	FRAME_AdressOfNeighbors@gaja,c
  1778  0001CC  6A20               	clrf	FRAME_AdressOfNeighbors@gaja+1,c
  1779                           
  1780                           ;FRAME.c: 496:         for(i=0; i<4; i++)
  1781  0001CE  0E00               	movlw	0
  1782  0001D0  6E26               	movwf	FRAME_AdressOfNeighbors@i+1,c
  1783  0001D2  0E00               	movlw	0
  1784  0001D4  6E25               	movwf	FRAME_AdressOfNeighbors@i,c
  1785  0001D6                     l3335:
  1786                           
  1787                           ;FRAME.c: 497:         {;FRAME.c: 498:             Dane->sasiedzi[i+(4*kier)].adres = ((
      +                          WORD)message->data[2*i]) |
  1788  0001D6  C025  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  1789  0001DA  C026  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  1790  0001DE  90D8               	bcf	status,0,c
  1791  0001E0  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1792  0001E2  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1793  0001E4  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  1794  0001E8  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  1795  0001EC  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  1796  0001EE  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1797  0001F0  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  1798  0001F2  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1799  0001F4  0E09               	movlw	9
  1800  0001F6  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  1801  0001F8  6ED9               	movwf	fsr2l,c
  1802  0001FA  0E00               	movlw	0
  1803  0001FC  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  1804  0001FE  6EDA               	movwf	fsr2h,c
  1805  000200  50DF               	movf	indf2,w,c
  1806  000202  6E14               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  1807  000204  C025  F015         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+5
  1808  000208  C026  F016         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+6
  1809  00020C  90D8               	bcf	status,0,c
  1810  00020E  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1811  000210  3616               	rlcf	??_FRAME_AdressOfNeighbors+6,f,c
  1812  000212  C00C  F017         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+7
  1813  000216  C00D  F018         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+8
  1814  00021A  5015               	movf	??_FRAME_AdressOfNeighbors+5,w,c
  1815  00021C  2617               	addwf	??_FRAME_AdressOfNeighbors+7,f,c
  1816  00021E  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  1817  000220  2218               	addwfc	??_FRAME_AdressOfNeighbors+8,f,c
  1818  000222  0E08               	movlw	8
  1819  000224  2417               	addwf	??_FRAME_AdressOfNeighbors+7,w,c
  1820  000226  6ED9               	movwf	fsr2l,c
  1821  000228  0E00               	movlw	0
  1822  00022A  2018               	addwfc	??_FRAME_AdressOfNeighbors+8,w,c
  1823  00022C  6EDA               	movwf	fsr2h,c
  1824  00022E  50DF               	movf	indf2,w,c
  1825  000230  1014               	iorwf	??_FRAME_AdressOfNeighbors+4,w,c
  1826  000232  6E19               	movwf	(??_FRAME_AdressOfNeighbors+9)& (0+255),c
  1827  000234  6A1A               	clrf	(??_FRAME_AdressOfNeighbors+10)& (0+255),c
  1828  000236  C023  F01B         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors+11
  1829  00023A  C024  F01C         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+12
  1830  00023E  90D8               	bcf	status,0,c
  1831  000240  361B               	rlcf	??_FRAME_AdressOfNeighbors+11,f,c
  1832  000242  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1833  000244  90D8               	bcf	status,0,c
  1834  000246  361B               	rlcf	??_FRAME_AdressOfNeighbors+11,f,c
  1835  000248  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1836  00024A  5025               	movf	FRAME_AdressOfNeighbors@i,w,c
  1837  00024C  261B               	addwf	??_FRAME_AdressOfNeighbors+11,f,c
  1838  00024E  5026               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1839  000250  221C               	addwfc	??_FRAME_AdressOfNeighbors+12,f,c
  1840  000252  90D8               	bcf	status,0,c
  1841  000254  361B               	rlcf	??_FRAME_AdressOfNeighbors+11,f,c
  1842  000256  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1843  000258  90D8               	bcf	status,0,c
  1844  00025A  361B               	rlcf	??_FRAME_AdressOfNeighbors+11,f,c
  1845  00025C  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  1846  00025E  0E0E               	movlw	14
  1847  000260  241B               	addwf	??_FRAME_AdressOfNeighbors+11,w,c
  1848  000262  6ED9               	movwf	fsr2l,c
  1849  000264  0E00               	movlw	0
  1850  000266  201C               	addwfc	??_FRAME_AdressOfNeighbors+12,w,c
  1851  000268  6EDA               	movwf	fsr2h,c
  1852  00026A  C019  FFDE         	movff	??_FRAME_AdressOfNeighbors+9,postinc2
  1853  00026E  C01A  FFDD         	movff	??_FRAME_AdressOfNeighbors+10,postdec2
  1854                           
  1855                           ;FRAME.c: 501:             Dane->sasiedzi[i+(4*kier)].pointerNaSasiada = &wartosciSasiad
      +                          a[i+(4*kier)];
  1856  000272  C023  F010         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors
  1857  000276  C024  F011         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+1
  1858  00027A  90D8               	bcf	status,0,c
  1859  00027C  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1860  00027E  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1861  000280  90D8               	bcf	status,0,c
  1862  000282  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  1863  000284  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  1864  000286  C010  F006         	movff	??_FRAME_AdressOfNeighbors,___wmul@multiplier
  1865  00028A  C011  F007         	movff	??_FRAME_AdressOfNeighbors+1,___wmul@multiplier+1
  1866  00028E  0E00               	movlw	0
  1867  000290  6E09               	movwf	___wmul@multiplicand+1,c
  1868  000292  0E44               	movlw	68
  1869  000294  6E08               	movwf	___wmul@multiplicand,c
  1870  000296  ECD4  F007         	call	___wmul	;wreg free
  1871  00029A  0ED7               	movlw	low _wartosciSasiada
  1872  00029C  6E12               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  1873  00029E  0E00               	movlw	high _wartosciSasiada
  1874  0002A0  6E13               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  1875  0002A2  5006               	movf	?___wmul,w,c
  1876  0002A4  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1877  0002A6  5007               	movf	?___wmul+1,w,c
  1878  0002A8  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1879  0002AA  C025  F006         	movff	FRAME_AdressOfNeighbors@i,___wmul@multiplier
  1880  0002AE  C026  F007         	movff	FRAME_AdressOfNeighbors@i+1,___wmul@multiplier+1
  1881  0002B2  0E00               	movlw	0
  1882  0002B4  6E09               	movwf	___wmul@multiplicand+1,c
  1883  0002B6  0E44               	movlw	68
  1884  0002B8  6E08               	movwf	___wmul@multiplicand,c
  1885  0002BA  ECD4  F007         	call	___wmul	;wreg free
  1886  0002BE  5006               	movf	?___wmul,w,c
  1887  0002C0  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  1888  0002C2  5007               	movf	?___wmul+1,w,c
  1889  0002C4  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  1890  0002C6  C023  F014         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors+4
  1891  0002CA  C024  F015         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+5
  1892  0002CE  90D8               	bcf	status,0,c
  1893  0002D0  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1894  0002D2  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1895  0002D4  90D8               	bcf	status,0,c
  1896  0002D6  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1897  0002D8  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1898  0002DA  5025               	movf	FRAME_AdressOfNeighbors@i,w,c
  1899  0002DC  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  1900  0002DE  5026               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1901  0002E0  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  1902  0002E2  90D8               	bcf	status,0,c
  1903  0002E4  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1904  0002E6  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1905  0002E8  90D8               	bcf	status,0,c
  1906  0002EA  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  1907  0002EC  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  1908  0002EE  0E10               	movlw	16
  1909  0002F0  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  1910  0002F2  6ED9               	movwf	fsr2l,c
  1911  0002F4  0E00               	movlw	0
  1912  0002F6  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  1913  0002F8  6EDA               	movwf	fsr2h,c
  1914  0002FA  C012  FFDE         	movff	??_FRAME_AdressOfNeighbors+2,postinc2
  1915  0002FE  C013  FFDD         	movff	??_FRAME_AdressOfNeighbors+3,postdec2
  1916                           
  1917                           ;FRAME.c: 502:         }
  1918  000302  4A25               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  1919  000304  2A26               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  1920  000306  5026               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  1921  000308  E105               	bnz	u1820
  1922  00030A  0E04               	movlw	4
  1923  00030C  5C25               	subwf	FRAME_AdressOfNeighbors@i,w,c
  1924  00030E  B0D8               	btfsc	status,0,c
  1925  000310  0012               	return	
  1926  000312  D761               	goto	l3335
  1927  000314                     u1820:
  1928  000314  0012               	return		;funcret
  1929  000316                     __end_of_FRAME_AdressOfNeighbors:
  1930                           	opt callstack 0
  1931                           
  1932 ;; *************** function ___wmul *****************
  1933 ;; Defined at:
  1934 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  multiplier      2    5[COMRAM] unsigned int 
  1937 ;;  multiplicand    2    7[COMRAM] unsigned int 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  product         2    9[COMRAM] unsigned int 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2    5[COMRAM] unsigned int 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, prodl, prodh
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;Total ram usage:        6 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    3
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_FRAME_AdressOfNeighbors
  1960 ;;		_IsInNeighbors
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text13
  1965  000FA8                     __ptext13:
  1966                           	opt callstack 0
  1967  000FA8                     ___wmul:
  1968                           	opt callstack 24
  1969                           
  1970                           ;incstack = 0
  1971  000FA8  5006               	movf	___wmul@multiplier,w,c
  1972  000FAA  0208               	mulwf	___wmul@multiplicand,c
  1973  000FAC  CFF3 F00A          	movff	prodl,___wmul@product
  1974  000FB0  CFF4 F00B          	movff	prodh,___wmul@product+1
  1975  000FB4  5006               	movf	___wmul@multiplier,w,c
  1976  000FB6  0209               	mulwf	___wmul@multiplicand+1,c
  1977  000FB8  50F3               	movf	prodl,w,c
  1978  000FBA  260B               	addwf	___wmul@product+1,f,c
  1979  000FBC  5007               	movf	___wmul@multiplier+1,w,c
  1980  000FBE  0208               	mulwf	___wmul@multiplicand,c
  1981  000FC0  50F3               	movf	prodl,w,c
  1982  000FC2  260B               	addwf	___wmul@product+1,f,c
  1983  000FC4  C00A  F006         	movff	___wmul@product,?___wmul
  1984  000FC8  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  1985  000FCC  0012               	return		;funcret
  1986  000FCE                     __end_of___wmul:
  1987                           	opt callstack 0
  1988                           
  1989 ;; *************** function _CAN_SendFrame *****************
  1990 ;; Defined at:
  1991 ;;		line 183 in file "CAN.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  message         2   10[COMRAM] PTR struct .
  1994 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;Total ram usage:        5 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    4
  2013 ;; This function calls:
  2014 ;;		_CAN_MoveBuffIntoFrame
  2015 ;; This function is called by:
  2016 ;;		_FRAME_HandleCanFrame
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text14
  2021  000592                     __ptext14:
  2022                           	opt callstack 0
  2023  000592                     _CAN_SendFrame:
  2024                           	opt callstack 24
  2025                           
  2026                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  2027                           
  2028                           ;incstack = 0
  2029                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  2030  000592  0E83               	movlw	131
  2031  000594  6E77               	movwf	3959,c	;volatile
  2032                           
  2033                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  2034  000596  A660               	btfss	3936,3,c	;volatile
  2035  000598  D00A               	goto	l179
  2036                           
  2037                           ;CAN.c: 195:         ECANCON = 0x84;
  2038  00059A  0E84               	movlw	132
  2039  00059C  6E77               	movwf	3959,c	;volatile
  2040                           
  2041                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  2042  00059E  A660               	btfss	3936,3,c	;volatile
  2043  0005A0  D006               	goto	l179
  2044                           
  2045                           ;CAN.c: 201:         ECANCON = 0x85;
  2046  0005A2  0E85               	movlw	133
  2047  0005A4  6E77               	movwf	3959,c	;volatile
  2048                           
  2049                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  2050  0005A6  A660               	btfss	3936,3,c	;volatile
  2051  0005A8  D002               	goto	l179
  2052  0005AA  D7F3               	goto	_CAN_SendFrame
  2053  0005AC                     l180:
  2054  0005AC  00FF               	reset		;# 
  2055  0005AE                     l179:
  2056                           
  2057                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  2058  0005AE  B474               	btfsc	3956,2,c	;volatile
  2059  0005B0  D7FD               	goto	l180
  2060                           
  2061                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  2062  0005B2  0E00               	movlw	0
  2063  0005B4  6E37               	movwf	_DetectorLedRadar+2,c
  2064                           
  2065                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  2066  0005B6  EE20 F004          	lfsr	2,4
  2067  0005BA  500B               	movf	CAN_SendFrame@message,w,c
  2068  0005BC  26D9               	addwf	fsr2l,f,c
  2069  0005BE  500C               	movf	CAN_SendFrame@message+1,w,c
  2070  0005C0  22DA               	addwfc	fsr2h,f,c
  2071  0005C2  50DF               	movf	indf2,w,c
  2072  0005C4  6E64               	movwf	3940,c	;volatile
  2073                           
  2074                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  2075  0005C6  EE20 F005          	lfsr	2,5
  2076  0005CA  500B               	movf	CAN_SendFrame@message,w,c
  2077  0005CC  26D9               	addwf	fsr2l,f,c
  2078  0005CE  500C               	movf	CAN_SendFrame@message+1,w,c
  2079  0005D0  22DA               	addwfc	fsr2h,f,c
  2080  0005D2  50DF               	movf	indf2,w,c
  2081  0005D4  6E63               	movwf	3939,c	;volatile
  2082                           
  2083                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2084  0005D6  EE20 F006          	lfsr	2,6
  2085  0005DA  500B               	movf	CAN_SendFrame@message,w,c
  2086  0005DC  26D9               	addwf	fsr2l,f,c
  2087  0005DE  500C               	movf	CAN_SendFrame@message+1,w,c
  2088  0005E0  22DA               	addwfc	fsr2h,f,c
  2089  0005E2  50DF               	movf	indf2,w,c
  2090  0005E4  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2091  0005E6  0E03               	movlw	3
  2092  0005E8  160D               	andwf	??_CAN_SendFrame,f,c
  2093  0005EA  EE20 F006          	lfsr	2,6
  2094  0005EE  500B               	movf	CAN_SendFrame@message,w,c
  2095  0005F0  26D9               	addwf	fsr2l,f,c
  2096  0005F2  500C               	movf	CAN_SendFrame@message+1,w,c
  2097  0005F4  22DA               	addwfc	fsr2h,f,c
  2098  0005F6  50DF               	movf	indf2,w,c
  2099  0005F8  0BFC               	andlw	252
  2100  0005FA  0D08               	mullw	8
  2101  0005FC  50F3               	movf	prodl,w,c
  2102  0005FE  100D               	iorwf	??_CAN_SendFrame,w,c
  2103  000600  6E62               	movwf	3938,c	;volatile
  2104                           
  2105                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2106  000602  8662               	bsf	3938,3,c	;volatile
  2107                           
  2108                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2109  000604  EE20 F006          	lfsr	2,6
  2110  000608  500B               	movf	CAN_SendFrame@message,w,c
  2111  00060A  26D9               	addwf	fsr2l,f,c
  2112  00060C  500C               	movf	CAN_SendFrame@message+1,w,c
  2113  00060E  22DA               	addwfc	fsr2h,f,c
  2114  000610  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2115  000614  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2116  000618  0E05               	movlw	5
  2117  00061A  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2118  00061C                     u1735:
  2119  00061C  90D8               	bcf	status,0,c
  2120  00061E  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2121  000620  320D               	rrcf	??_CAN_SendFrame,f,c
  2122  000622  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2123  000624  D7FB               	goto	u1735
  2124  000626  500D               	movf	??_CAN_SendFrame,w,c
  2125  000628  6E61               	movwf	3937,c	;volatile
  2126                           
  2127                           ;CAN.c: 220:     RXB0DLC = 0;
  2128  00062A  0E00               	movlw	0
  2129  00062C  6E65               	movwf	3941,c	;volatile
  2130                           
  2131                           ;CAN.c: 222:     if(message->message_type==0x02)
  2132  00062E  EE20 F001          	lfsr	2,1
  2133  000632  500B               	movf	CAN_SendFrame@message,w,c
  2134  000634  26D9               	addwf	fsr2l,f,c
  2135  000636  500C               	movf	CAN_SendFrame@message+1,w,c
  2136  000638  22DA               	addwfc	fsr2h,f,c
  2137  00063A  0E02               	movlw	2
  2138  00063C  18DE               	xorwf	postinc2,w,c
  2139  00063E  A4D8               	btfss	status,2,c
  2140  000640  D002               	goto	l3249
  2141                           
  2142                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2143  000642  8C65               	bsf	3941,6,c	;volatile
  2144                           
  2145                           ;CAN.c: 225:     }
  2146  000644  D05A               	goto	l3253
  2147  000646                     l3249:
  2148                           
  2149                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2150  000646  EE20 F010          	lfsr	2,16
  2151  00064A  500B               	movf	CAN_SendFrame@message,w,c
  2152  00064C  26D9               	addwf	fsr2l,f,c
  2153  00064E  500C               	movf	CAN_SendFrame@message+1,w,c
  2154  000650  22DA               	addwfc	fsr2h,f,c
  2155  000652  50DF               	movf	indf2,w,c
  2156  000654  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2157  000656  0E0F               	movlw	15
  2158  000658  160D               	andwf	??_CAN_SendFrame,f,c
  2159  00065A  5065               	movf	3941,w,c	;volatile
  2160  00065C  180D               	xorwf	??_CAN_SendFrame,w,c
  2161  00065E  0BFE               	andlw	-2
  2162  000660  180D               	xorwf	??_CAN_SendFrame,w,c
  2163  000662  6E65               	movwf	3941,c	;volatile
  2164                           
  2165                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2166  000664  EE20 F010          	lfsr	2,16
  2167  000668  500B               	movf	CAN_SendFrame@message,w,c
  2168  00066A  26D9               	addwf	fsr2l,f,c
  2169  00066C  500C               	movf	CAN_SendFrame@message+1,w,c
  2170  00066E  22DA               	addwfc	fsr2h,f,c
  2171  000670  50DF               	movf	indf2,w,c
  2172  000672  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2173  000674  90D8               	bcf	status,0,c
  2174  000676  320D               	rrcf	??_CAN_SendFrame,f,c
  2175  000678  0E07               	movlw	7
  2176  00067A  160D               	andwf	??_CAN_SendFrame,f,c
  2177  00067C  460D               	rlncf	??_CAN_SendFrame,f,c
  2178  00067E  5065               	movf	3941,w,c	;volatile
  2179  000680  180D               	xorwf	??_CAN_SendFrame,w,c
  2180  000682  0BFD               	andlw	-3
  2181  000684  180D               	xorwf	??_CAN_SendFrame,w,c
  2182  000686  6E65               	movwf	3941,c	;volatile
  2183                           
  2184                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2185  000688  EE20 F010          	lfsr	2,16
  2186  00068C  500B               	movf	CAN_SendFrame@message,w,c
  2187  00068E  26D9               	addwf	fsr2l,f,c
  2188  000690  500C               	movf	CAN_SendFrame@message+1,w,c
  2189  000692  22DA               	addwfc	fsr2h,f,c
  2190  000694  50DF               	movf	indf2,w,c
  2191  000696  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2192  000698  90D8               	bcf	status,0,c
  2193  00069A  320D               	rrcf	??_CAN_SendFrame,f,c
  2194  00069C  90D8               	bcf	status,0,c
  2195  00069E  320D               	rrcf	??_CAN_SendFrame,f,c
  2196  0006A0  0E03               	movlw	3
  2197  0006A2  160D               	andwf	??_CAN_SendFrame,f,c
  2198  0006A4  460D               	rlncf	??_CAN_SendFrame,f,c
  2199  0006A6  460D               	rlncf	??_CAN_SendFrame,f,c
  2200  0006A8  5065               	movf	3941,w,c	;volatile
  2201  0006AA  180D               	xorwf	??_CAN_SendFrame,w,c
  2202  0006AC  0BFB               	andlw	-5
  2203  0006AE  180D               	xorwf	??_CAN_SendFrame,w,c
  2204  0006B0  6E65               	movwf	3941,c	;volatile
  2205                           
  2206                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2207  0006B2  EE20 F010          	lfsr	2,16
  2208  0006B6  500B               	movf	CAN_SendFrame@message,w,c
  2209  0006B8  26D9               	addwf	fsr2l,f,c
  2210  0006BA  500C               	movf	CAN_SendFrame@message+1,w,c
  2211  0006BC  22DA               	addwfc	fsr2h,f,c
  2212  0006BE  50DF               	movf	indf2,w,c
  2213  0006C0  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2214  0006C2  90D8               	bcf	status,0,c
  2215  0006C4  320D               	rrcf	??_CAN_SendFrame,f,c
  2216  0006C6  90D8               	bcf	status,0,c
  2217  0006C8  320D               	rrcf	??_CAN_SendFrame,f,c
  2218  0006CA  90D8               	bcf	status,0,c
  2219  0006CC  320D               	rrcf	??_CAN_SendFrame,f,c
  2220  0006CE  0E01               	movlw	1
  2221  0006D0  160D               	andwf	??_CAN_SendFrame,f,c
  2222  0006D2  460D               	rlncf	??_CAN_SendFrame,f,c
  2223  0006D4  460D               	rlncf	??_CAN_SendFrame,f,c
  2224  0006D6  460D               	rlncf	??_CAN_SendFrame,f,c
  2225  0006D8  5065               	movf	3941,w,c	;volatile
  2226  0006DA  180D               	xorwf	??_CAN_SendFrame,w,c
  2227  0006DC  0BF7               	andlw	-9
  2228  0006DE  180D               	xorwf	??_CAN_SendFrame,w,c
  2229  0006E0  6E65               	movwf	3941,c	;volatile
  2230                           
  2231                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2232  0006E2  0E66               	movlw	102
  2233  0006E4  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2234  0006E6  0E0F               	movlw	15
  2235  0006E8  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2236  0006EA  0E08               	movlw	8
  2237  0006EC  240B               	addwf	CAN_SendFrame@message,w,c
  2238  0006EE  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2239  0006F0  0E00               	movlw	0
  2240  0006F2  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2241  0006F4  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2242  0006F6  ECAB  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2243  0006FA                     l3253:
  2244                           
  2245                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2246  0006FA  8660               	bsf	3936,3,c	;volatile
  2247                           
  2248                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2249  0006FC  8835               	bsf	_DetectorLedRadar,4,c
  2250  0006FE  0012               	return		;funcret
  2251  000700                     __end_of_CAN_SendFrame:
  2252                           	opt callstack 0
  2253                           
  2254 ;; *************** function _CAN_GenID *****************
  2255 ;; Defined at:
  2256 ;;		line 382 in file "CAN.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  message         2    5[COMRAM] PTR struct .
  2259 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2260 ;;  frameID         1    7[COMRAM] unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2272 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;Total ram usage:        7 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    3
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_FRAME_HandleCanFrame
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text15
  2287  000B1C                     __ptext15:
  2288                           	opt callstack 0
  2289  000B1C                     _CAN_GenID:
  2290                           	opt callstack 25
  2291                           
  2292                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2293                           
  2294                           ;incstack = 0
  2295  000B1C  EE20 F002          	lfsr	2,2
  2296  000B20  5006               	movf	CAN_GenID@message,w,c
  2297  000B22  26D9               	addwf	fsr2l,f,c
  2298  000B24  5007               	movf	CAN_GenID@message+1,w,c
  2299  000B26  22DA               	addwfc	fsr2h,f,c
  2300  000B28  0E03               	movlw	3
  2301  000B2A  6EDF               	movwf	indf2,c
  2302                           
  2303                           ;CAN.c: 386:     message->message_type = 0x01;
  2304  000B2C  EE20 F001          	lfsr	2,1
  2305  000B30  5006               	movf	CAN_GenID@message,w,c
  2306  000B32  26D9               	addwf	fsr2l,f,c
  2307  000B34  5007               	movf	CAN_GenID@message+1,w,c
  2308  000B36  22DA               	addwfc	fsr2h,f,c
  2309  000B38  0E01               	movlw	1
  2310  000B3A  6EDF               	movwf	indf2,c
  2311                           
  2312                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2313  000B3C  5008               	movf	CAN_GenID@frameID,w,c
  2314  000B3E  6E09               	movwf	??_CAN_GenID& (0+255),c
  2315  000B40  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2316  000B42  90D8               	bcf	status,0,c
  2317  000B44  3609               	rlcf	??_CAN_GenID,f,c
  2318  000B46  360A               	rlcf	??_CAN_GenID+1,f,c
  2319  000B48  90D8               	bcf	status,0,c
  2320  000B4A  3609               	rlcf	??_CAN_GenID,f,c
  2321  000B4C  360A               	rlcf	??_CAN_GenID+1,f,c
  2322  000B4E  EE20 F006          	lfsr	2,6
  2323  000B52  5006               	movf	CAN_GenID@message,w,c
  2324  000B54  26D9               	addwf	fsr2l,f,c
  2325  000B56  5007               	movf	CAN_GenID@message+1,w,c
  2326  000B58  22DA               	addwfc	fsr2h,f,c
  2327  000B5A  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2328  000B5E  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2329                           
  2330                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  2331  000B62  0E2C               	movlw	44
  2332  000B64  6E09               	movwf	??_CAN_GenID& (0+255),c
  2333  000B66  0E01               	movlw	1
  2334  000B68  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  2335  000B6A  EE20  F033         	lfsr	2,_DaneCan+2
  2336  000B6E  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  2337  000B72  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  2338  000B76  5009               	movf	??_CAN_GenID,w,c
  2339  000B78  260B               	addwf	??_CAN_GenID+2,f,c
  2340  000B7A  500A               	movf	??_CAN_GenID+1,w,c
  2341  000B7C  220C               	addwfc	??_CAN_GenID+3,f,c
  2342  000B7E  EE20 F004          	lfsr	2,4
  2343  000B82  5006               	movf	CAN_GenID@message,w,c
  2344  000B84  26D9               	addwf	fsr2l,f,c
  2345  000B86  5007               	movf	CAN_GenID@message+1,w,c
  2346  000B88  22DA               	addwfc	fsr2h,f,c
  2347  000B8A  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  2348  000B8E  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  2349                           
  2350                           ;CAN.c: 391:     message ->id.bits.b16 = 0;
  2351  000B92  EE20 F006          	lfsr	2,6
  2352  000B96  5006               	movf	CAN_GenID@message,w,c
  2353  000B98  26D9               	addwf	fsr2l,f,c
  2354  000B9A  5007               	movf	CAN_GenID@message+1,w,c
  2355  000B9C  22DA               	addwfc	fsr2h,f,c
  2356  000B9E  90DF               	bcf	indf2,0,c
  2357                           
  2358                           ;CAN.c: 392:     message ->id.bits.b17 = 0;
  2359  000BA0  EE20 F006          	lfsr	2,6
  2360  000BA4  5006               	movf	CAN_GenID@message,w,c
  2361  000BA6  26D9               	addwf	fsr2l,f,c
  2362  000BA8  5007               	movf	CAN_GenID@message+1,w,c
  2363  000BAA  22DA               	addwfc	fsr2h,f,c
  2364  000BAC  92DF               	bcf	indf2,1,c
  2365  000BAE  0012               	return		;funcret
  2366  000BB0                     __end_of_CAN_GenID:
  2367                           	opt callstack 0
  2368                           
  2369 ;; *************** function _CAN_TakeFrame *****************
  2370 ;; Defined at:
  2371 ;;		line 247 in file "CAN.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  message         2   13[COMRAM] PTR struct .
  2374 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  k               1   18[COMRAM] unsigned char 
  2377 ;;  tempCON         1   17[COMRAM] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      enum E10433
  2380 ;; Registers used:
  2381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;Total ram usage:        6 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    4
  2394 ;; This function calls:
  2395 ;;		_CAN_MoveBuffIntoFrame
  2396 ;;		___awdiv
  2397 ;; This function is called by:
  2398 ;;		_TRM_DataTransmition
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text16
  2403  000316                     __ptext16:
  2404                           	opt callstack 0
  2405  000316                     _CAN_TakeFrame:
  2406                           	opt callstack 25
  2407                           
  2408                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2409                           
  2410                           ;incstack = 0
  2411  000316  506F               	movf	3951,w,c	;volatile
  2412  000318  0B0F               	andlw	15
  2413  00031A  6E13               	movwf	CAN_TakeFrame@k,c
  2414                           
  2415                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2416  00031C  5013               	movf	CAN_TakeFrame@k,w,c
  2417  00031E  0990               	iorlw	144
  2418  000320  6E77               	movwf	3959,c	;volatile
  2419                           
  2420                           ;CAN.c: 256:     switch(k)
  2421  000322  D018               	goto	l3391
  2422  000324                     l188:
  2423                           
  2424                           ;CAN.c: 259:             tempCON = RXB0CON;
  2425  000324  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2426                           
  2427                           ;CAN.c: 260:             break;
  2428  000328  D035               	goto	l189
  2429  00032A                     l190:
  2430                           
  2431                           ;CAN.c: 262:             tempCON = RXB1CON;
  2432  00032A  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2433                           
  2434                           ;CAN.c: 263:             break;
  2435  00032E  D032               	goto	l189
  2436  000330                     l191:
  2437                           
  2438                           ;CAN.c: 265:             tempCON = B0CON;
  2439  000330  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2440                           
  2441                           ;CAN.c: 266:             break;
  2442  000334  D02F               	goto	l189
  2443  000336                     l192:
  2444                           
  2445                           ;CAN.c: 268:             tempCON = B1CON;
  2446  000336  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2447                           
  2448                           ;CAN.c: 269:             break;
  2449  00033A  D02C               	goto	l189
  2450  00033C                     l193:
  2451                           
  2452                           ;CAN.c: 271:             tempCON = B2CON;
  2453  00033C  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2454                           
  2455                           ;CAN.c: 272:             break;
  2456  000340  D029               	goto	l189
  2457  000342                     l194:
  2458                           
  2459                           ;CAN.c: 274:             tempCON = B3CON;
  2460  000342  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2461                           
  2462                           ;CAN.c: 275:             break;
  2463  000346  D026               	goto	l189
  2464  000348                     l195:
  2465                           
  2466                           ;CAN.c: 277:             tempCON = B4CON;
  2467  000348  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2468                           
  2469                           ;CAN.c: 278:             break;
  2470  00034C  D023               	goto	l189
  2471  00034E                     l196:
  2472                           
  2473                           ;CAN.c: 280:             tempCON = B5CON;
  2474  00034E  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2475                           
  2476                           ;CAN.c: 281:             break;
  2477  000352  D020               	goto	l189
  2478  000354                     l3391:
  2479  000354  5013               	movf	CAN_TakeFrame@k,w,c
  2480  000356  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2481  000358  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2482                           
  2483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2484                           ; Switch size 1, requested type "simple"
  2485                           ; Number of cases is 1, Range of values is 0 to 0
  2486                           ; switch strategies available:
  2487                           ; Name         Instructions Cycles
  2488                           ; simple_byte            4     3 (average)
  2489                           ;	Chosen strategy is simple_byte
  2490  00035A  5011               	movf	??_CAN_TakeFrame+1,w,c
  2491  00035C  0A00               	xorlw	0	; case 0
  2492  00035E  A4D8               	btfss	status,2,c
  2493  000360  D019               	goto	l189
  2494                           
  2495                           ; Switch size 1, requested type "simple"
  2496                           ; Number of cases is 8, Range of values is 0 to 7
  2497                           ; switch strategies available:
  2498                           ; Name         Instructions Cycles
  2499                           ; simple_byte           25    13 (average)
  2500                           ;	Chosen strategy is simple_byte
  2501  000362  5010               	movf	??_CAN_TakeFrame,w,c
  2502  000364  0A00               	xorlw	0	; case 0
  2503  000366  B4D8               	btfsc	status,2,c
  2504  000368  D7DD               	goto	l188
  2505  00036A  0A01               	xorlw	1	; case 1
  2506  00036C  B4D8               	btfsc	status,2,c
  2507  00036E  D7DD               	goto	l190
  2508  000370  0A03               	xorlw	3	; case 2
  2509  000372  B4D8               	btfsc	status,2,c
  2510  000374  D7DD               	goto	l191
  2511  000376  0A01               	xorlw	1	; case 3
  2512  000378  B4D8               	btfsc	status,2,c
  2513  00037A  D7DD               	goto	l192
  2514  00037C  0A07               	xorlw	7	; case 4
  2515  00037E  B4D8               	btfsc	status,2,c
  2516  000380  D7DD               	goto	l193
  2517  000382  0A01               	xorlw	1	; case 5
  2518  000384  B4D8               	btfsc	status,2,c
  2519  000386  D7DD               	goto	l194
  2520  000388  0A03               	xorlw	3	; case 6
  2521  00038A  B4D8               	btfsc	status,2,c
  2522  00038C  D7DD               	goto	l195
  2523  00038E  0A01               	xorlw	1	; case 7
  2524  000390  B4D8               	btfsc	status,2,c
  2525  000392  D7DD               	goto	l196
  2526  000394                     l189:
  2527                           
  2528                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2529  000394  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2530  000396  D0A5               	goto	l3427
  2531                           
  2532                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2533  000398  EE20 F003          	lfsr	2,3
  2534  00039C  500E               	movf	CAN_TakeFrame@message,w,c
  2535  00039E  26D9               	addwf	fsr2l,f,c
  2536  0003A0  500F               	movf	CAN_TakeFrame@message+1,w,c
  2537  0003A2  22DA               	addwfc	fsr2h,f,c
  2538  0003A4  5060               	movf	3936,w,c	;volatile
  2539  0003A6  0B1F               	andlw	31
  2540  0003A8  6EDF               	movwf	indf2,c
  2541                           
  2542                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2543  0003AA  EE20 F004          	lfsr	2,4
  2544  0003AE  500E               	movf	CAN_TakeFrame@message,w,c
  2545  0003B0  26D9               	addwf	fsr2l,f,c
  2546  0003B2  500F               	movf	CAN_TakeFrame@message+1,w,c
  2547  0003B4  22DA               	addwfc	fsr2h,f,c
  2548  0003B6  CF64 FFDF          	movff	3940,indf2	;volatile
  2549                           
  2550                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2551  0003BA  EE20 F005          	lfsr	2,5
  2552  0003BE  500E               	movf	CAN_TakeFrame@message,w,c
  2553  0003C0  26D9               	addwf	fsr2l,f,c
  2554  0003C2  500F               	movf	CAN_TakeFrame@message+1,w,c
  2555  0003C4  22DA               	addwfc	fsr2h,f,c
  2556  0003C6  CF63 FFDF          	movff	3939,indf2	;volatile
  2557                           
  2558                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2559  0003CA  EE20 F006          	lfsr	2,6
  2560  0003CE  500E               	movf	CAN_TakeFrame@message,w,c
  2561  0003D0  26D9               	addwf	fsr2l,f,c
  2562  0003D2  500F               	movf	CAN_TakeFrame@message+1,w,c
  2563  0003D4  22DA               	addwfc	fsr2h,f,c
  2564  0003D6  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2565  0003DA  0E03               	movlw	3
  2566  0003DC  1610               	andwf	??_CAN_TakeFrame,f,c
  2567  0003DE  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2568  0003E2  6A07               	clrf	___awdiv@dividend+1,c
  2569  0003E4  0E00               	movlw	0
  2570  0003E6  6E09               	movwf	___awdiv@divisor+1,c
  2571  0003E8  0E08               	movlw	8
  2572  0003EA  6E08               	movwf	___awdiv@divisor,c
  2573  0003EC  ECD8  F005         	call	___awdiv	;wreg free
  2574  0003F0  5006               	movf	?___awdiv,w,c
  2575  0003F2  1010               	iorwf	??_CAN_TakeFrame,w,c
  2576  0003F4  6EDF               	movwf	indf2,c
  2577                           
  2578                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2579  0003F6  5061               	movf	3937,w,c	;volatile
  2580  0003F8  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2581  0003FA  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2582  0003FC  0E05               	movlw	5
  2583  0003FE                     u1905:
  2584  0003FE  90D8               	bcf	status,0,c
  2585  000400  3610               	rlcf	??_CAN_TakeFrame,f,c
  2586  000402  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2587  000404  2EE8               	decfsz	wreg,f,c
  2588  000406  D7FB               	goto	u1905
  2589  000408  EE20 F006          	lfsr	2,6
  2590  00040C  500E               	movf	CAN_TakeFrame@message,w,c
  2591  00040E  26D9               	addwf	fsr2l,f,c
  2592  000410  500F               	movf	CAN_TakeFrame@message+1,w,c
  2593  000412  22DA               	addwfc	fsr2h,f,c
  2594  000414  5010               	movf	??_CAN_TakeFrame,w,c
  2595  000416  12DE               	iorwf	postinc2,f,c
  2596  000418  5011               	movf	??_CAN_TakeFrame+1,w,c
  2597  00041A  12DD               	iorwf	postdec2,f,c
  2598                           
  2599                           ;CAN.c: 292:         message->frame_type=0x03;
  2600  00041C  EE20 F002          	lfsr	2,2
  2601  000420  500E               	movf	CAN_TakeFrame@message,w,c
  2602  000422  26D9               	addwf	fsr2l,f,c
  2603  000424  500F               	movf	CAN_TakeFrame@message+1,w,c
  2604  000426  22DA               	addwfc	fsr2h,f,c
  2605  000428  0E03               	movlw	3
  2606  00042A  6EDF               	movwf	indf2,c
  2607                           
  2608                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2609  00042C  BC65               	btfsc	3941,6,c	;volatile
  2610  00042E  D068               	goto	l3433
  2611                           
  2612                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2613  000430  EE20 F001          	lfsr	2,1
  2614  000434  500E               	movf	CAN_TakeFrame@message,w,c
  2615  000436  26D9               	addwf	fsr2l,f,c
  2616  000438  500F               	movf	CAN_TakeFrame@message+1,w,c
  2617  00043A  22DA               	addwfc	fsr2h,f,c
  2618  00043C  0E01               	movlw	1
  2619  00043E  6EDF               	movwf	indf2,c
  2620                           
  2621                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2622  000440  EE20 F010          	lfsr	2,16
  2623  000444  500E               	movf	CAN_TakeFrame@message,w,c
  2624  000446  26D9               	addwf	fsr2l,f,c
  2625  000448  500F               	movf	CAN_TakeFrame@message+1,w,c
  2626  00044A  22DA               	addwfc	fsr2h,f,c
  2627  00044C  5065               	movf	3941,w,c	;volatile
  2628  00044E  0B0F               	andlw	15
  2629  000450  6EDF               	movwf	indf2,c
  2630                           
  2631                           ;CAN.c: 300:             if(message->data_length > 8)
  2632  000452  EE20 F010          	lfsr	2,16
  2633  000456  500E               	movf	CAN_TakeFrame@message,w,c
  2634  000458  26D9               	addwf	fsr2l,f,c
  2635  00045A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2636  00045C  22DA               	addwfc	fsr2h,f,c
  2637  00045E  0E08               	movlw	8
  2638  000460  64DF               	cpfsgt	indf2,c
  2639  000462  D041               	goto	l3431
  2640  000464  D01E               	goto	l3425
  2641  000466                     l3407:
  2642                           
  2643                           ;CAN.c: 306:                         RXB0CON = 0;
  2644  000466  0E00               	movlw	0
  2645  000468  6E60               	movwf	3936,c	;volatile
  2646                           
  2647                           ;CAN.c: 307:                         break;
  2648  00046A  D03B               	goto	l3427
  2649  00046C                     l3409:
  2650                           
  2651                           ;CAN.c: 309:                         RXB1CON = 0;
  2652  00046C  0E00               	movlw	0
  2653  00046E  010F               	movlb	15	; () banked
  2654  000470  D00E               	goto	L1
  2655  000472                     l3411:
  2656                           
  2657                           ;CAN.c: 312:                         B0CON = 0;
  2658  000472  0E00               	movlw	0
  2659  000474  010E               	movlb	14	; () banked
  2660  000476  6F20               	movwf	32,b	;volatile
  2661                           
  2662                           ;CAN.c: 313:                         break;
  2663  000478  D034               	goto	l3427
  2664  00047A                     l3413:
  2665                           
  2666                           ;CAN.c: 315:                         B1CON = 0;
  2667  00047A  0E00               	movlw	0
  2668  00047C  010E               	movlb	14	; () banked
  2669  00047E  6F30               	movwf	48,b	;volatile
  2670                           
  2671                           ;CAN.c: 316:                         break;
  2672  000480  D030               	goto	l3427
  2673  000482                     l3415:
  2674                           
  2675                           ;CAN.c: 318:                         B2CON = 0;
  2676  000482  0E00               	movlw	0
  2677  000484  010E               	movlb	14	; () banked
  2678  000486  6F40               	movwf	64,b	;volatile
  2679                           
  2680                           ;CAN.c: 319:                         break;
  2681  000488  D02C               	goto	l3427
  2682  00048A                     l3417:
  2683                           
  2684                           ;CAN.c: 321:                         B3CON = 0;
  2685  00048A  0E00               	movlw	0
  2686  00048C  010E               	movlb	14	; () banked
  2687  00048E                     L1:
  2688  00048E  6F50               	movwf	80,b	;volatile
  2689                           
  2690                           ;CAN.c: 322:                         break;
  2691  000490  D028               	goto	l3427
  2692  000492                     l3419:
  2693                           
  2694                           ;CAN.c: 324:                         B4CON = 0;
  2695  000492  0E00               	movlw	0
  2696  000494  010E               	movlb	14	; () banked
  2697  000496  6F60               	movwf	96,b	;volatile
  2698                           
  2699                           ;CAN.c: 325:                         break;
  2700  000498  D024               	goto	l3427
  2701  00049A                     l3421:
  2702                           
  2703                           ;CAN.c: 327:                         B5CON = 0;
  2704  00049A  0E00               	movlw	0
  2705  00049C  010E               	movlb	14	; () banked
  2706  00049E  6F70               	movwf	112,b	;volatile
  2707                           
  2708                           ;CAN.c: 328:                         break;
  2709  0004A0  D020               	goto	l3427
  2710  0004A2                     l3425:
  2711  0004A2  5013               	movf	CAN_TakeFrame@k,w,c
  2712  0004A4  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2713  0004A6  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2714                           
  2715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2716                           ; Switch size 1, requested type "simple"
  2717                           ; Number of cases is 1, Range of values is 0 to 0
  2718                           ; switch strategies available:
  2719                           ; Name         Instructions Cycles
  2720                           ; simple_byte            4     3 (average)
  2721                           ;	Chosen strategy is simple_byte
  2722  0004A8  5011               	movf	??_CAN_TakeFrame+1,w,c
  2723  0004AA  0A00               	xorlw	0	; case 0
  2724  0004AC  A4D8               	btfss	status,2,c
  2725  0004AE  D019               	goto	l3427
  2726                           
  2727                           ; Switch size 1, requested type "simple"
  2728                           ; Number of cases is 8, Range of values is 0 to 7
  2729                           ; switch strategies available:
  2730                           ; Name         Instructions Cycles
  2731                           ; simple_byte           25    13 (average)
  2732                           ;	Chosen strategy is simple_byte
  2733  0004B0  5010               	movf	??_CAN_TakeFrame,w,c
  2734  0004B2  0A00               	xorlw	0	; case 0
  2735  0004B4  B4D8               	btfsc	status,2,c
  2736  0004B6  D7D7               	goto	l3407
  2737  0004B8  0A01               	xorlw	1	; case 1
  2738  0004BA  B4D8               	btfsc	status,2,c
  2739  0004BC  D7D7               	goto	l3409
  2740  0004BE  0A03               	xorlw	3	; case 2
  2741  0004C0  B4D8               	btfsc	status,2,c
  2742  0004C2  D7D7               	goto	l3411
  2743  0004C4  0A01               	xorlw	1	; case 3
  2744  0004C6  B4D8               	btfsc	status,2,c
  2745  0004C8  D7D8               	goto	l3413
  2746  0004CA  0A07               	xorlw	7	; case 4
  2747  0004CC  B4D8               	btfsc	status,2,c
  2748  0004CE  D7D9               	goto	l3415
  2749  0004D0  0A01               	xorlw	1	; case 5
  2750  0004D2  B4D8               	btfsc	status,2,c
  2751  0004D4  D7DA               	goto	l3417
  2752  0004D6  0A03               	xorlw	3	; case 6
  2753  0004D8  B4D8               	btfsc	status,2,c
  2754  0004DA  D7DB               	goto	l3419
  2755  0004DC  0A01               	xorlw	1	; case 7
  2756  0004DE  B4D8               	btfsc	status,2,c
  2757  0004E0  D7DC               	goto	l3421
  2758  0004E2                     l3427:
  2759                           
  2760                           ;CAN.c: 330:                 return FALSE;
  2761  0004E2  0E00               	movlw	0
  2762  0004E4  0012               	return	
  2763  0004E6                     l3431:
  2764                           
  2765                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2766  0004E6  0E08               	movlw	8
  2767  0004E8  240E               	addwf	CAN_TakeFrame@message,w,c
  2768  0004EA  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2769  0004EC  0E00               	movlw	0
  2770  0004EE  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2771  0004F0  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2772  0004F2  0E66               	movlw	102
  2773  0004F4  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2774  0004F6  0E0F               	movlw	15
  2775  0004F8  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2776  0004FA  ECAB  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2777                           
  2778                           ;CAN.c: 333:         }
  2779  0004FE  D027               	goto	l3453
  2780  000500                     l3433:
  2781                           
  2782                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  2783  000500  EE20 F001          	lfsr	2,1
  2784  000504  500E               	movf	CAN_TakeFrame@message,w,c
  2785  000506  26D9               	addwf	fsr2l,f,c
  2786  000508  500F               	movf	CAN_TakeFrame@message+1,w,c
  2787  00050A  22DA               	addwfc	fsr2h,f,c
  2788  00050C  0E02               	movlw	2
  2789  00050E  6EDF               	movwf	indf2,c
  2790  000510  D01E               	goto	l3453
  2791  000512                     l3435:
  2792                           
  2793                           ;CAN.c: 343:                 RXB0CON = 0;
  2794  000512  0E00               	movlw	0
  2795  000514  6E60               	movwf	3936,c	;volatile
  2796                           
  2797                           ;CAN.c: 344:                 break;
  2798  000516  D03B               	goto	l3455
  2799  000518                     l3437:
  2800                           
  2801                           ;CAN.c: 346:                 RXB1CON = 0;
  2802  000518  0E00               	movlw	0
  2803  00051A  010F               	movlb	15	; () banked
  2804  00051C  D00E               	goto	L2
  2805  00051E                     l3439:
  2806                           
  2807                           ;CAN.c: 349:                 B0CON = 0;
  2808  00051E  0E00               	movlw	0
  2809  000520  010E               	movlb	14	; () banked
  2810  000522  6F20               	movwf	32,b	;volatile
  2811                           
  2812                           ;CAN.c: 350:                 break;
  2813  000524  D034               	goto	l3455
  2814  000526                     l3441:
  2815                           
  2816                           ;CAN.c: 352:                 B1CON = 0;
  2817  000526  0E00               	movlw	0
  2818  000528  010E               	movlb	14	; () banked
  2819  00052A  6F30               	movwf	48,b	;volatile
  2820                           
  2821                           ;CAN.c: 353:                 break;
  2822  00052C  D030               	goto	l3455
  2823  00052E                     l3443:
  2824                           
  2825                           ;CAN.c: 355:                 B2CON = 0;
  2826  00052E  0E00               	movlw	0
  2827  000530  010E               	movlb	14	; () banked
  2828  000532  6F40               	movwf	64,b	;volatile
  2829                           
  2830                           ;CAN.c: 356:                 break;
  2831  000534  D02C               	goto	l3455
  2832  000536                     l3445:
  2833                           
  2834                           ;CAN.c: 358:                 B3CON = 0;
  2835  000536  0E00               	movlw	0
  2836  000538  010E               	movlb	14	; () banked
  2837  00053A                     L2:
  2838  00053A  6F50               	movwf	80,b	;volatile
  2839                           
  2840                           ;CAN.c: 359:                 break;
  2841  00053C  D028               	goto	l3455
  2842  00053E                     l3447:
  2843                           
  2844                           ;CAN.c: 361:                 B4CON = 0;
  2845  00053E  0E00               	movlw	0
  2846  000540  010E               	movlb	14	; () banked
  2847  000542  6F60               	movwf	96,b	;volatile
  2848                           
  2849                           ;CAN.c: 362:                 break;
  2850  000544  D024               	goto	l3455
  2851  000546                     l3449:
  2852                           
  2853                           ;CAN.c: 364:                 B5CON = 0;
  2854  000546  0E00               	movlw	0
  2855  000548  010E               	movlb	14	; () banked
  2856  00054A  6F70               	movwf	112,b	;volatile
  2857                           
  2858                           ;CAN.c: 365:                 break;
  2859  00054C  D020               	goto	l3455
  2860  00054E                     l3453:
  2861  00054E  5013               	movf	CAN_TakeFrame@k,w,c
  2862  000550  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2863  000552  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2864                           
  2865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2866                           ; Switch size 1, requested type "simple"
  2867                           ; Number of cases is 1, Range of values is 0 to 0
  2868                           ; switch strategies available:
  2869                           ; Name         Instructions Cycles
  2870                           ; simple_byte            4     3 (average)
  2871                           ;	Chosen strategy is simple_byte
  2872  000554  5011               	movf	??_CAN_TakeFrame+1,w,c
  2873  000556  0A00               	xorlw	0	; case 0
  2874  000558  A4D8               	btfss	status,2,c
  2875  00055A  D019               	goto	l3455
  2876                           
  2877                           ; Switch size 1, requested type "simple"
  2878                           ; Number of cases is 8, Range of values is 0 to 7
  2879                           ; switch strategies available:
  2880                           ; Name         Instructions Cycles
  2881                           ; simple_byte           25    13 (average)
  2882                           ;	Chosen strategy is simple_byte
  2883  00055C  5010               	movf	??_CAN_TakeFrame,w,c
  2884  00055E  0A00               	xorlw	0	; case 0
  2885  000560  B4D8               	btfsc	status,2,c
  2886  000562  D7D7               	goto	l3435
  2887  000564  0A01               	xorlw	1	; case 1
  2888  000566  B4D8               	btfsc	status,2,c
  2889  000568  D7D7               	goto	l3437
  2890  00056A  0A03               	xorlw	3	; case 2
  2891  00056C  B4D8               	btfsc	status,2,c
  2892  00056E  D7D7               	goto	l3439
  2893  000570  0A01               	xorlw	1	; case 3
  2894  000572  B4D8               	btfsc	status,2,c
  2895  000574  D7D8               	goto	l3441
  2896  000576  0A07               	xorlw	7	; case 4
  2897  000578  B4D8               	btfsc	status,2,c
  2898  00057A  D7D9               	goto	l3443
  2899  00057C  0A01               	xorlw	1	; case 5
  2900  00057E  B4D8               	btfsc	status,2,c
  2901  000580  D7DA               	goto	l3445
  2902  000582  0A03               	xorlw	3	; case 6
  2903  000584  B4D8               	btfsc	status,2,c
  2904  000586  D7DB               	goto	l3447
  2905  000588  0A01               	xorlw	1	; case 7
  2906  00058A  B4D8               	btfsc	status,2,c
  2907  00058C  D7DC               	goto	l3449
  2908  00058E                     l3455:
  2909                           
  2910                           ;CAN.c: 367:         return TRUE;
  2911  00058E  0E01               	movlw	1
  2912  000590  0012               	return		;funcret
  2913  000592                     __end_of_CAN_TakeFrame:
  2914                           	opt callstack 0
  2915                           
  2916 ;; *************** function ___awdiv *****************
  2917 ;; Defined at:
  2918 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  dividend        2    5[COMRAM] int 
  2921 ;;  divisor         2    7[COMRAM] int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  quotient        2   11[COMRAM] int 
  2924 ;;  sign            1   10[COMRAM] unsigned char 
  2925 ;;  counter         1    9[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  2    5[COMRAM] int 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;Total ram usage:        8 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    3
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_CAN_TakeFrame
  2946 ;;		_FRAME_HandleCanFrame
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text17
  2951  000BB0                     __ptext17:
  2952                           	opt callstack 0
  2953  000BB0                     ___awdiv:
  2954                           	opt callstack 25
  2955                           
  2956                           ;incstack = 0
  2957  000BB0  0E00               	movlw	0
  2958  000BB2  6E0B               	movwf	___awdiv@sign,c
  2959  000BB4  AE09               	btfss	___awdiv@divisor+1,7,c
  2960  000BB6  D006               	goto	l3351
  2961  000BB8  6C08               	negf	___awdiv@divisor,c
  2962  000BBA  1E09               	comf	___awdiv@divisor+1,f,c
  2963  000BBC  B0D8               	btfsc	status,0,c
  2964  000BBE  2A09               	incf	___awdiv@divisor+1,f,c
  2965  000BC0  0E01               	movlw	1
  2966  000BC2  6E0B               	movwf	___awdiv@sign,c
  2967  000BC4                     l3351:
  2968  000BC4  AE07               	btfss	___awdiv@dividend+1,7,c
  2969  000BC6  D006               	goto	l3357
  2970  000BC8  6C06               	negf	___awdiv@dividend,c
  2971  000BCA  1E07               	comf	___awdiv@dividend+1,f,c
  2972  000BCC  B0D8               	btfsc	status,0,c
  2973  000BCE  2A07               	incf	___awdiv@dividend+1,f,c
  2974  000BD0  0E01               	movlw	1
  2975  000BD2  1A0B               	xorwf	___awdiv@sign,f,c
  2976  000BD4                     l3357:
  2977  000BD4  0E00               	movlw	0
  2978  000BD6  6E0D               	movwf	___awdiv@quotient+1,c
  2979  000BD8  0E00               	movlw	0
  2980  000BDA  6E0C               	movwf	___awdiv@quotient,c
  2981  000BDC  5008               	movf	___awdiv@divisor,w,c
  2982  000BDE  1009               	iorwf	___awdiv@divisor+1,w,c
  2983  000BE0  B4D8               	btfsc	status,2,c
  2984  000BE2  D01C               	goto	l3379
  2985  000BE4  0E01               	movlw	1
  2986  000BE6  6E0A               	movwf	___awdiv@counter,c
  2987  000BE8  D004               	goto	l3365
  2988  000BEA                     l3363:
  2989  000BEA  90D8               	bcf	status,0,c
  2990  000BEC  3608               	rlcf	___awdiv@divisor,f,c
  2991  000BEE  3609               	rlcf	___awdiv@divisor+1,f,c
  2992  000BF0  2A0A               	incf	___awdiv@counter,f,c
  2993  000BF2                     l3365:
  2994  000BF2  AE09               	btfss	___awdiv@divisor+1,7,c
  2995  000BF4  D7FA               	goto	l3363
  2996  000BF6                     u1860:
  2997  000BF6  90D8               	bcf	status,0,c
  2998  000BF8  360C               	rlcf	___awdiv@quotient,f,c
  2999  000BFA  360D               	rlcf	___awdiv@quotient+1,f,c
  3000  000BFC  5008               	movf	___awdiv@divisor,w,c
  3001  000BFE  5C06               	subwf	___awdiv@dividend,w,c
  3002  000C00  5009               	movf	___awdiv@divisor+1,w,c
  3003  000C02  5807               	subwfb	___awdiv@dividend+1,w,c
  3004  000C04  A0D8               	btfss	status,0,c
  3005  000C06  D005               	goto	l3375
  3006  000C08  5008               	movf	___awdiv@divisor,w,c
  3007  000C0A  5E06               	subwf	___awdiv@dividend,f,c
  3008  000C0C  5009               	movf	___awdiv@divisor+1,w,c
  3009  000C0E  5A07               	subwfb	___awdiv@dividend+1,f,c
  3010  000C10  800C               	bsf	___awdiv@quotient,0,c
  3011  000C12                     l3375:
  3012  000C12  90D8               	bcf	status,0,c
  3013  000C14  3209               	rrcf	___awdiv@divisor+1,f,c
  3014  000C16  3208               	rrcf	___awdiv@divisor,f,c
  3015  000C18  2E0A               	decfsz	___awdiv@counter,f,c
  3016  000C1A  D7ED               	goto	u1860
  3017  000C1C                     l3379:
  3018  000C1C  500B               	movf	___awdiv@sign,w,c
  3019  000C1E  B4D8               	btfsc	status,2,c
  3020  000C20  D004               	goto	l3383
  3021  000C22  6C0C               	negf	___awdiv@quotient,c
  3022  000C24  1E0D               	comf	___awdiv@quotient+1,f,c
  3023  000C26  B0D8               	btfsc	status,0,c
  3024  000C28  2A0D               	incf	___awdiv@quotient+1,f,c
  3025  000C2A                     l3383:
  3026  000C2A  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3027  000C2E  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3028  000C32  0012               	return		;funcret
  3029  000C34                     __end_of___awdiv:
  3030                           	opt callstack 0
  3031                           
  3032 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  3033 ;; Defined at:
  3034 ;;		line 169 in file "CAN.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  3037 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3038 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  3039 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  i               1    9[COMRAM] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;Total ram usage:        5 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    3
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_CAN_SendFrame
  3062 ;;		_CAN_TakeFrame
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text18
  3067  000F56                     __ptext18:
  3068                           	opt callstack 0
  3069  000F56                     _CAN_MoveBuffIntoFrame:
  3070                           	opt callstack 24
  3071                           
  3072                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  3073                           
  3074                           ;incstack = 0
  3075  000F56  0E00               	movlw	0
  3076  000F58  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  3077  000F5A                     l3171:
  3078                           
  3079                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  3080  000F5A  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3081  000F5C  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  3082  000F5E  6ED9               	movwf	fsr2l,c
  3083  000F60  0E00               	movlw	0
  3084  000F62  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  3085  000F64  6EDA               	movwf	fsr2h,c
  3086  000F66  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3087  000F68  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  3088  000F6A  6EE1               	movwf	fsr1l,c
  3089  000F6C  0E00               	movlw	0
  3090  000F6E  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3091  000F70  6EE2               	movwf	fsr1h,c
  3092  000F72  CFDF FFE7          	movff	indf2,indf1
  3093                           
  3094                           ;CAN.c: 175:     }
  3095  000F76  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3096  000F78  0E07               	movlw	7
  3097  000F7A  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3098  000F7C  D7EE               	goto	l3171
  3099  000F7E  0012               	return	
  3100  000F80                     __end_of_CAN_MoveBuffIntoFrame:
  3101                           	opt callstack 0
  3102                           
  3103 ;; *************** function _TMR1_Update_flag_Set *****************
  3104 ;; Defined at:
  3105 ;;		line 32 in file "TMR1.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  a               2    5[COMRAM] unsigned int 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		None
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;Total ram usage:        2 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    3
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text19
  3134  0010AE                     __ptext19:
  3135                           	opt callstack 0
  3136  0010AE                     _TMR1_Update_flag_Set:
  3137                           	opt callstack 27
  3138                           
  3139                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3140                           
  3141                           ;incstack = 0
  3142  0010AE  C006  F038         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3143  0010B2  C007  F039         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3144  0010B6  0012               	return		;funcret
  3145  0010B8                     __end_of_TMR1_Update_flag_Set:
  3146                           	opt callstack 0
  3147                           
  3148 ;; *************** function _TMR1_Update_flag_Get *****************
  3149 ;; Defined at:
  3150 ;;		line 47 in file "TMR1.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  2    5[COMRAM] unsigned int 
  3157 ;; Registers used:
  3158 ;;		None
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3168 ;;Total ram usage:        2 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    3
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text20
  3179  0010B8                     __ptext20:
  3180                           	opt callstack 0
  3181  0010B8                     _TMR1_Update_flag_Get:
  3182                           	opt callstack 27
  3183                           
  3184                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3185                           
  3186                           ;incstack = 0
  3187  0010B8  C038  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3188  0010BC  C039  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3189  0010C0  0012               	return		;funcret
  3190  0010C2                     __end_of_TMR1_Update_flag_Get:
  3191                           	opt callstack 0
  3192                           
  3193 ;; *************** function _LED_Update *****************
  3194 ;; Defined at:
  3195 ;;		line 105 in file "LED.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;		None
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;		None
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      unsigned char 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3213 ;;Total ram usage:        0 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    5
  3216 ;; This function calls:
  3217 ;;		_LED_Control
  3218 ;;		_LED_Left
  3219 ;;		_LED_Light_Pos
  3220 ;;		_LED_Right
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text21
  3227  000C34                     __ptext21:
  3228                           	opt callstack 0
  3229  000C34                     _LED_Update:
  3230                           	opt callstack 25
  3231                           
  3232                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  3233                           
  3234                           ;incstack = 0
  3235  000C34  5040               	movf	_LOCK,w,c
  3236  000C36  A4D8               	btfss	status,2,c
  3237  000C38  D013               	goto	l3557
  3238                           
  3239                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  3240  000C3A  0E00               	movlw	0
  3241  000C3C  6E07               	movwf	LED_Control@diode+1,c
  3242  000C3E  0E00               	movlw	0
  3243  000C40  6E06               	movwf	LED_Control@diode,c
  3244  000C42  0E00               	movlw	0
  3245  000C44  EC80  F003         	call	_LED_Control
  3246                           
  3247                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3248  000C48  C043  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3249  000C4C  C044  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3250  000C50  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3251  000C54  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3252  000C58  5049               	movf	LED_Update@Green,w,c
  3253  000C5A  EC36  F005         	call	_LED_Light_Pos
  3254                           
  3255                           ;LED.c: 117:     }
  3256  000C5E  D012               	goto	l283
  3257  000C60                     l3557:
  3258                           
  3259                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  3260  000C60  0E00               	movlw	0
  3261  000C62  6E07               	movwf	LED_Control@diode+1,c
  3262  000C64  0E00               	movlw	0
  3263  000C66  6E06               	movwf	LED_Control@diode,c
  3264  000C68  5049               	movf	LED_Update@Green,w,c
  3265  000C6A  EC80  F003         	call	_LED_Control
  3266                           
  3267                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3268  000C6E  C045  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3269  000C72  C046  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3270  000C76  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3271  000C7A  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3272  000C7E  0E00               	movlw	0
  3273  000C80  EC36  F005         	call	_LED_Light_Pos
  3274  000C84                     l283:
  3275                           
  3276                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  3277  000C84  C045  F006         	movff	LED_Update@pos1,LED_Right@a
  3278  000C88  C046  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3279  000C8C  EC33  F007         	call	_LED_Right	;wreg free
  3280  000C90  C006  F045         	movff	?_LED_Right,LED_Update@pos1
  3281  000C94  C007  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  3282                           
  3283                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  3284  000C98  C043  F006         	movff	LED_Update@pos2,LED_Left@a
  3285  000C9C  C044  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3286  000CA0  EC59  F007         	call	_LED_Left	;wreg free
  3287  000CA4  C006  F043         	movff	?_LED_Left,LED_Update@pos2
  3288  000CA8  C007  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  3289  000CAC  0012               	return		;funcret
  3290  000CAE                     __end_of_LED_Update:
  3291                           	opt callstack 0
  3292                           
  3293 ;; *************** function _LED_Light_Pos *****************
  3294 ;; Defined at:
  3295 ;;		line 196 in file "LED.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  color           1    wreg     enum E10644
  3298 ;;  pos             2   12[COMRAM] unsigned int 
  3299 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  color           1   16[COMRAM] enum E10644
  3302 ;;  flage           2   21[COMRAM] unsigned int 
  3303 ;;  pos2            2   19[COMRAM] unsigned int 
  3304 ;;  LED_array       2   17[COMRAM] unsigned int 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  2   12[COMRAM] unsigned int 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3318 ;;Total ram usage:       11 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    4
  3321 ;; This function calls:
  3322 ;;		_LED_Control
  3323 ;;		_LED_Left
  3324 ;;		_LED_Right
  3325 ;;		___lwdiv
  3326 ;; This function is called by:
  3327 ;;		_LED_Update
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text22
  3332  000A6C                     __ptext22:
  3333                           	opt callstack 0
  3334  000A6C                     _LED_Light_Pos:
  3335                           	opt callstack 25
  3336                           
  3337                           ;incstack = 0
  3338                           ;LED_Light_Pos@color stored from wreg
  3339  000A6C  6E11               	movwf	LED_Light_Pos@color,c
  3340                           
  3341                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  3342  000A6E  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3343  000A72  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3344                           
  3345                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  3346  000A76  0E00               	movlw	0
  3347  000A78  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3348  000A7A  0E00               	movlw	0
  3349  000A7C  6E12               	movwf	LED_Light_Pos@LED_array,c
  3350                           
  3351                           ;LED.c: 200:     UINT flage = fulfillment/10;
  3352  000A7E  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3353  000A82  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3354  000A86  0E00               	movlw	0
  3355  000A88  6E09               	movwf	___lwdiv@divisor+1,c
  3356  000A8A  0E0A               	movlw	10
  3357  000A8C  6E08               	movwf	___lwdiv@divisor,c
  3358  000A8E  ECE4  F006         	call	___lwdiv	;wreg free
  3359  000A92  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3360  000A96  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3361                           
  3362                           ;LED.c: 201:     if(color == RED)
  3363  000A9A  5011               	movf	LED_Light_Pos@color,w,c
  3364  000A9C  B4D8               	btfsc	status,2,c
  3365  000A9E  D017               	goto	l3493
  3366  000AA0  D031               	goto	l3501
  3367  000AA2                     l3487:
  3368                           
  3369                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  3370  000AA2  5012               	movf	LED_Light_Pos@LED_array,w,c
  3371  000AA4  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3372  000AA6  6E12               	movwf	LED_Light_Pos@LED_array,c
  3373  000AA8  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3374  000AAA  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3375  000AAC  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3376                           
  3377                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  3378  000AAE  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3379  000AB2  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3380  000AB6  EC59  F007         	call	_LED_Left	;wreg free
  3381  000ABA  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3382  000ABE  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3383                           
  3384                           ;LED.c: 207:             flage = flage - 1;
  3385  000AC2  0EFF               	movlw	255
  3386  000AC4  2416               	addwf	LED_Light_Pos@flage,w,c
  3387  000AC6  6E16               	movwf	LED_Light_Pos@flage,c
  3388  000AC8  0EFF               	movlw	255
  3389  000ACA  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3390  000ACC  6E17               	movwf	LED_Light_Pos@flage+1,c
  3391  000ACE                     l3493:
  3392                           
  3393                           ;LED.c: 203:         while(flage>0)
  3394  000ACE  5016               	movf	LED_Light_Pos@flage,w,c
  3395  000AD0  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3396  000AD2  B4D8               	btfsc	status,2,c
  3397  000AD4  D01B               	goto	u1950
  3398  000AD6  D7E5               	goto	l3487
  3399  000AD8                     l3495:
  3400                           
  3401                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  3402  000AD8  5012               	movf	LED_Light_Pos@LED_array,w,c
  3403  000ADA  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3404  000ADC  6E12               	movwf	LED_Light_Pos@LED_array,c
  3405  000ADE  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3406  000AE0  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3407  000AE2  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3408                           
  3409                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  3410  000AE4  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3411  000AE8  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3412  000AEC  EC33  F007         	call	_LED_Right	;wreg free
  3413  000AF0  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3414  000AF4  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3415                           
  3416                           ;LED.c: 216:             flage = flage - 1;
  3417  000AF8  0EFF               	movlw	255
  3418  000AFA  2416               	addwf	LED_Light_Pos@flage,w,c
  3419  000AFC  6E16               	movwf	LED_Light_Pos@flage,c
  3420  000AFE  0EFF               	movlw	255
  3421  000B00  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3422  000B02  6E17               	movwf	LED_Light_Pos@flage+1,c
  3423  000B04                     l3501:
  3424                           
  3425                           ;LED.c: 212:         while(flage>0)
  3426  000B04  5016               	movf	LED_Light_Pos@flage,w,c
  3427  000B06  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3428  000B08  A4D8               	btfss	status,2,c
  3429  000B0A  D7E6               	goto	l3495
  3430  000B0C                     u1950:
  3431                           
  3432                           ;LED.c: 219:     LED_Control(color, LED_array);
  3433  000B0C  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3434  000B10  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3435  000B14  5011               	movf	LED_Light_Pos@color,w,c
  3436  000B16  EC80  F003         	call	_LED_Control
  3437  000B1A  0012               	return		;funcret
  3438  000B1C                     __end_of_LED_Light_Pos:
  3439                           	opt callstack 0
  3440                           
  3441 ;; *************** function ___lwdiv *****************
  3442 ;; Defined at:
  3443 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  dividend        2    5[COMRAM] unsigned int 
  3446 ;;  divisor         2    7[COMRAM] unsigned int 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  quotient        2    9[COMRAM] unsigned int 
  3449 ;;  counter         1   11[COMRAM] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  2    5[COMRAM] unsigned int 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3462 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3463 ;;Total ram usage:        7 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    3
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_LED_Light_Pos
  3470 ;;		_FRAME_Plot
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text23
  3475  000DC8                     __ptext23:
  3476                           	opt callstack 0
  3477  000DC8                     ___lwdiv:
  3478                           	opt callstack 25
  3479                           
  3480                           ;incstack = 0
  3481  000DC8  0E00               	movlw	0
  3482  000DCA  6E0B               	movwf	___lwdiv@quotient+1,c
  3483  000DCC  0E00               	movlw	0
  3484  000DCE  6E0A               	movwf	___lwdiv@quotient,c
  3485  000DD0  5008               	movf	___lwdiv@divisor,w,c
  3486  000DD2  1009               	iorwf	___lwdiv@divisor+1,w,c
  3487  000DD4  B4D8               	btfsc	status,2,c
  3488  000DD6  D01C               	goto	l1151
  3489  000DD8  0E01               	movlw	1
  3490  000DDA  6E0C               	movwf	___lwdiv@counter,c
  3491  000DDC  D004               	goto	l2659
  3492  000DDE                     l2657:
  3493  000DDE  90D8               	bcf	status,0,c
  3494  000DE0  3608               	rlcf	___lwdiv@divisor,f,c
  3495  000DE2  3609               	rlcf	___lwdiv@divisor+1,f,c
  3496  000DE4  2A0C               	incf	___lwdiv@counter,f,c
  3497  000DE6                     l2659:
  3498  000DE6  AE09               	btfss	___lwdiv@divisor+1,7,c
  3499  000DE8  D7FA               	goto	l2657
  3500  000DEA                     u1220:
  3501  000DEA  90D8               	bcf	status,0,c
  3502  000DEC  360A               	rlcf	___lwdiv@quotient,f,c
  3503  000DEE  360B               	rlcf	___lwdiv@quotient+1,f,c
  3504  000DF0  5008               	movf	___lwdiv@divisor,w,c
  3505  000DF2  5C06               	subwf	___lwdiv@dividend,w,c
  3506  000DF4  5009               	movf	___lwdiv@divisor+1,w,c
  3507  000DF6  5807               	subwfb	___lwdiv@dividend+1,w,c
  3508  000DF8  A0D8               	btfss	status,0,c
  3509  000DFA  D005               	goto	l2669
  3510  000DFC  5008               	movf	___lwdiv@divisor,w,c
  3511  000DFE  5E06               	subwf	___lwdiv@dividend,f,c
  3512  000E00  5009               	movf	___lwdiv@divisor+1,w,c
  3513  000E02  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3514  000E04  800A               	bsf	___lwdiv@quotient,0,c
  3515  000E06                     l2669:
  3516  000E06  90D8               	bcf	status,0,c
  3517  000E08  3209               	rrcf	___lwdiv@divisor+1,f,c
  3518  000E0A  3208               	rrcf	___lwdiv@divisor,f,c
  3519  000E0C  2E0C               	decfsz	___lwdiv@counter,f,c
  3520  000E0E  D7ED               	goto	u1220
  3521  000E10                     l1151:
  3522  000E10  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3523  000E14  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3524  000E18  0012               	return		;funcret
  3525  000E1A                     __end_of___lwdiv:
  3526                           	opt callstack 0
  3527                           
  3528 ;; *************** function _LED_Right *****************
  3529 ;; Defined at:
  3530 ;;		line 140 in file "LED.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  a               2    5[COMRAM] unsigned int 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  b               2    9[COMRAM] unsigned int 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  2    5[COMRAM] unsigned int 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;Total ram usage:        6 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    3
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_LED_Update
  3555 ;;		_LED_Light_Pos
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text24
  3560  000E66                     __ptext24:
  3561                           	opt callstack 0
  3562  000E66                     _LED_Right:
  3563                           	opt callstack 26
  3564                           
  3565                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3566                           
  3567                           ;incstack = 0
  3568  000E66  A006               	btfss	LED_Right@a,0,c
  3569  000E68  D018               	goto	l2501
  3570                           
  3571                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  3572  000E6A  0EFE               	movlw	254
  3573  000E6C  1406               	andwf	LED_Right@a,w,c
  3574  000E6E  6E0A               	movwf	LED_Right@b,c
  3575  000E70  0E03               	movlw	3
  3576  000E72  1407               	andwf	LED_Right@a+1,w,c
  3577  000E74  6E0B               	movwf	LED_Right@b+1,c
  3578                           
  3579                           ;LED.c: 145:         b = b >> 1;
  3580  000E76  90D8               	bcf	status,0,c
  3581  000E78  300B               	rrcf	LED_Right@b+1,w,c
  3582  000E7A  6E08               	movwf	??_LED_Right& (0+255),c
  3583  000E7C  300A               	rrcf	LED_Right@b,w,c
  3584  000E7E  6E0A               	movwf	LED_Right@b,c
  3585  000E80  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3586                           
  3587                           ;LED.c: 146:         b = b | 0b1000000000;
  3588  000E84  0E00               	movlw	0
  3589  000E86  100A               	iorwf	LED_Right@b,w,c
  3590  000E88  6E0A               	movwf	LED_Right@b,c
  3591  000E8A  0E02               	movlw	2
  3592  000E8C  100B               	iorwf	LED_Right@b+1,w,c
  3593  000E8E  6E0B               	movwf	LED_Right@b+1,c
  3594                           
  3595                           ;LED.c: 147:         return b;
  3596  000E90  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3597  000E94  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3598  000E98  0012               	return	
  3599  000E9A                     l2501:
  3600                           
  3601                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  3602  000E9A  90D8               	bcf	status,0,c
  3603  000E9C  3007               	rrcf	LED_Right@a+1,w,c
  3604  000E9E  6E08               	movwf	??_LED_Right& (0+255),c
  3605  000EA0  3006               	rrcf	LED_Right@a,w,c
  3606  000EA2  6E06               	movwf	LED_Right@a,c
  3607  000EA4  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3608                           
  3609                           ;LED.c: 152:         return a;
  3610  000EA8  C006  F006         	movff	LED_Right@a,?_LED_Right
  3611  000EAC  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3612  000EB0  0012               	return		;funcret
  3613  000EB2                     __end_of_LED_Right:
  3614                           	opt callstack 0
  3615                           
  3616 ;; *************** function _LED_Left *****************
  3617 ;; Defined at:
  3618 ;;		line 167 in file "LED.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  a               2    5[COMRAM] unsigned int 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  b               2    7[COMRAM] unsigned int 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  2    5[COMRAM] unsigned int 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;Total ram usage:        4 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    3
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_LED_Update
  3643 ;;		_LED_Light_Pos
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text25
  3648  000EB2                     __ptext25:
  3649                           	opt callstack 0
  3650  000EB2                     _LED_Left:
  3651                           	opt callstack 25
  3652                           
  3653                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3654                           
  3655                           ;incstack = 0
  3656  000EB2  A207               	btfss	LED_Left@a+1,1,c
  3657  000EB4  D015               	goto	l2517
  3658                           
  3659                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  3660  000EB6  0EFF               	movlw	255
  3661  000EB8  1406               	andwf	LED_Left@a,w,c
  3662  000EBA  6E08               	movwf	LED_Left@b,c
  3663  000EBC  0E01               	movlw	1
  3664  000EBE  1407               	andwf	LED_Left@a+1,w,c
  3665  000EC0  6E09               	movwf	LED_Left@b+1,c
  3666                           
  3667                           ;LED.c: 172:         b = b << 1;
  3668  000EC2  90D8               	bcf	status,0,c
  3669  000EC4  3408               	rlcf	LED_Left@b,w,c
  3670  000EC6  6E08               	movwf	LED_Left@b,c
  3671  000EC8  3409               	rlcf	LED_Left@b+1,w,c
  3672  000ECA  6E09               	movwf	LED_Left@b+1,c
  3673                           
  3674                           ;LED.c: 173:         b = b | 0b0000000001;
  3675  000ECC  0E01               	movlw	1
  3676  000ECE  1008               	iorwf	LED_Left@b,w,c
  3677  000ED0  6E08               	movwf	LED_Left@b,c
  3678  000ED2  5009               	movf	LED_Left@b+1,w,c
  3679  000ED4  6E09               	movwf	LED_Left@b+1,c
  3680                           
  3681                           ;LED.c: 174:         return b;
  3682  000ED6  C008  F006         	movff	LED_Left@b,?_LED_Left
  3683  000EDA  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3684  000EDE  0012               	return	
  3685  000EE0                     l2517:
  3686                           
  3687                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  3688  000EE0  90D8               	bcf	status,0,c
  3689  000EE2  3406               	rlcf	LED_Left@a,w,c
  3690  000EE4  6E06               	movwf	LED_Left@a,c
  3691  000EE6  3407               	rlcf	LED_Left@a+1,w,c
  3692  000EE8  6E07               	movwf	LED_Left@a+1,c
  3693                           
  3694                           ;LED.c: 179:         return a;
  3695  000EEA  C006  F006         	movff	LED_Left@a,?_LED_Left
  3696  000EEE  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3697  000EF2  0012               	return		;funcret
  3698  000EF4                     __end_of_LED_Left:
  3699                           	opt callstack 0
  3700                           
  3701 ;; *************** function _INI_All *****************
  3702 ;; Defined at:
  3703 ;;		line 52 in file "INI.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    5
  3724 ;; This function calls:
  3725 ;;		_CAN_Setup
  3726 ;;		_INI_GlobalInterrupt
  3727 ;;		_INI_LED_Start
  3728 ;;		_INI_OUTPUT
  3729 ;;		_INI_Timer
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text26
  3736  00104C                     __ptext26:
  3737                           	opt callstack 0
  3738  00104C                     _INI_All:
  3739                           	opt callstack 25
  3740                           
  3741                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3742                           
  3743                           ;incstack = 0
  3744  00104C  80D1               	bsf	4049,0,c	;volatile
  3745  00104E  0004               	clrwdt		;# 
  3746                           
  3747                           ;INI.c: 64:     INI_OUTPUT();
  3748  001050  EC17  F008         	call	_INI_OUTPUT	;wreg free
  3749                           
  3750                           ;INI.c: 66:     CAN_Setup();
  3751  001054  EC89  F006         	call	_CAN_Setup	;wreg free
  3752                           
  3753                           ;INI.c: 67:     INI_GlobalInterrupt();
  3754  001058  EC46  F008         	call	_INI_GlobalInterrupt	;wreg free
  3755                           
  3756                           ;INI.c: 69:     INI_Timer();
  3757  00105C  EC33  F008         	call	_INI_Timer	;wreg free
  3758                           
  3759                           ;INI.c: 71:     INI_LED_Start();
  3760  001060  EC7A  F007         	call	_INI_LED_Start	;wreg free
  3761  001064  0012               	return		;funcret
  3762  001066                     __end_of_INI_All:
  3763                           	opt callstack 0
  3764                           
  3765 ;; *************** function _INI_Timer *****************
  3766 ;; Defined at:
  3767 ;;		line 92 in file "TMR1.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      unsigned char 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    3
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_INI_All
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text27
  3796  001066                     __ptext27:
  3797                           	opt callstack 0
  3798  001066                     _INI_Timer:
  3799                           	opt callstack 26
  3800                           
  3801                           ;TMR1.c: 96:     IRCF2 = 1;
  3802                           
  3803                           ;incstack = 0
  3804  001066  8CD3               	bsf	4051,6,c	;volatile
  3805                           
  3806                           ;TMR1.c: 97:     IRCF1 = 1;
  3807  001068  8AD3               	bsf	4051,5,c	;volatile
  3808                           
  3809                           ;TMR1.c: 98:     IRCF0 = 1;
  3810  00106A  88D3               	bsf	4051,4,c	;volatile
  3811                           
  3812                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3813  00106C  0E3D               	movlw	61
  3814  00106E  6ECD               	movwf	4045,c	;volatile
  3815                           
  3816                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3817  001070  0E9E               	movlw	158
  3818  001072  6ECF               	movwf	4047,c	;volatile
  3819                           
  3820                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  3821  001074  0E57               	movlw	87
  3822  001076  6ECE               	movwf	4046,c	;volatile
  3823                           
  3824                           ;TMR1.c: 102:     TMR1IE=1;
  3825  001078  809D               	bsf	3997,0,c	;volatile
  3826                           
  3827                           ;TMR1.c: 103:     TMR1ON = 1;
  3828  00107A  80CD               	bsf	4045,0,c	;volatile
  3829  00107C  0012               	return		;funcret
  3830  00107E                     __end_of_INI_Timer:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function _INI_OUTPUT *****************
  3834 ;; Defined at:
  3835 ;;		line 27 in file "INI.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;Total ram usage:        0 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    3
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_INI_All
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text28
  3864  00102E                     __ptext28:
  3865                           	opt callstack 0
  3866  00102E                     _INI_OUTPUT:
  3867                           	opt callstack 26
  3868                           
  3869                           ;INI.c: 31:     LATA = 0;
  3870                           
  3871                           ;incstack = 0
  3872  00102E  0E00               	movlw	0
  3873  001030  6E89               	movwf	3977,c	;volatile
  3874                           
  3875                           ;INI.c: 32:     LATB = 0;
  3876  001032  0E00               	movlw	0
  3877  001034  6E8A               	movwf	3978,c	;volatile
  3878                           
  3879                           ;INI.c: 33:     LATC = 0;
  3880  001036  0E00               	movlw	0
  3881  001038  6E8B               	movwf	3979,c	;volatile
  3882                           
  3883                           ;INI.c: 34:     TRISA = 0x0C;
  3884  00103A  0E0C               	movlw	12
  3885  00103C  6E92               	movwf	3986,c	;volatile
  3886                           
  3887                           ;INI.c: 35:     TRISB = 0b10001000;
  3888  00103E  0E88               	movlw	136
  3889  001040  6E93               	movwf	3987,c	;volatile
  3890                           
  3891                           ;INI.c: 36:     TRISC = 0xBF;
  3892  001042  0EBF               	movlw	191
  3893  001044  6E94               	movwf	3988,c	;volatile
  3894                           
  3895                           ;INI.c: 37:     RCONbits.IPEN = 1;
  3896  001046  8ED0               	bsf	4048,7,c	;volatile
  3897                           
  3898                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  3899  001048  8635               	bsf	_DetectorLedRadar,3,c
  3900  00104A  0012               	return		;funcret
  3901  00104C                     __end_of_INI_OUTPUT:
  3902                           	opt callstack 0
  3903                           
  3904 ;; *************** function _INI_LED_Start *****************
  3905 ;; Defined at:
  3906 ;;		line 231 in file "LED.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    4
  3927 ;; This function calls:
  3928 ;;		_LED_Control
  3929 ;; This function is called by:
  3930 ;;		_INI_All
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text29
  3935  000EF4                     __ptext29:
  3936                           	opt callstack 0
  3937  000EF4                     _INI_LED_Start:
  3938                           	opt callstack 25
  3939                           
  3940                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  3941                           
  3942                           ;incstack = 0
  3943  000EF4  5092               	movf	3986,w,c	;volatile
  3944  000EF6  0B01               	andlw	1
  3945  000EF8  6E92               	movwf	3986,c	;volatile
  3946                           
  3947                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  3948  000EFA  5093               	movf	3987,w,c	;volatile
  3949  000EFC  0BFC               	andlw	252
  3950  000EFE  6E93               	movwf	3987,c	;volatile
  3951                           
  3952                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  3953  000F00  5096               	movf	3990,w,c	;volatile
  3954  000F02  0BF8               	andlw	248
  3955  000F04  6E96               	movwf	3990,c	;volatile
  3956                           
  3957                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  3958  000F06  0E00               	movlw	0
  3959  000F08  6E95               	movwf	3989,c	;volatile
  3960                           
  3961                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  3962  000F0A  0E00               	movlw	0
  3963  000F0C  6E07               	movwf	LED_Control@diode+1,c
  3964  000F0E  0E00               	movlw	0
  3965  000F10  6E06               	movwf	LED_Control@diode,c
  3966  000F12  0E00               	movlw	0
  3967  000F14  EC80  F003         	call	_LED_Control
  3968                           
  3969                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  3970  000F18  0E00               	movlw	0
  3971  000F1A  6E07               	movwf	LED_Control@diode+1,c
  3972  000F1C  0E00               	movlw	0
  3973  000F1E  6E06               	movwf	LED_Control@diode,c
  3974  000F20  0E01               	movlw	1
  3975  000F22  EC80  F003         	call	_LED_Control
  3976  000F26  0012               	return		;funcret
  3977  000F28                     __end_of_INI_LED_Start:
  3978                           	opt callstack 0
  3979                           
  3980 ;; *************** function _LED_Control *****************
  3981 ;; Defined at:
  3982 ;;		line 256 in file "LED.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  color           1    wreg     enum E10644
  3985 ;;  diode           2    5[COMRAM] unsigned int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  color           1    9[COMRAM] enum E10644
  3988 ;;  cos             2    0        unsigned int 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      unsigned char 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;Total ram usage:        5 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    3
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_LED_Error
  4009 ;;		_LED_Clear
  4010 ;;		_LED_Update
  4011 ;;		_LED_Light_Pos
  4012 ;;		_INI_LED_Start
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text30
  4017  000700                     __ptext30:
  4018                           	opt callstack 0
  4019  000700                     _LED_Control:
  4020                           	opt callstack 24
  4021                           
  4022                           ;incstack = 0
  4023                           ;LED_Control@color stored from wreg
  4024  000700  6E0A               	movwf	LED_Control@color,c
  4025                           
  4026                           ;LED.c: 259:     if(color == RED)
  4027  000702  500A               	movf	LED_Control@color,w,c
  4028  000704  A4D8               	btfss	status,2,c
  4029  000706  D050               	goto	l311
  4030                           
  4031                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  4032  000708  A006               	btfss	LED_Control@diode,0,c
  4033  00070A  D003               	goto	l3047
  4034                           
  4035                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  4036  00070C  508C               	movf	3980,w,c	;volatile
  4037  00070E  0910               	iorlw	16
  4038  000710  D002               	goto	L3
  4039  000712                     l3047:
  4040                           
  4041                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  4042  000712  508C               	movf	3980,w,c	;volatile
  4043  000714  0BEF               	andlw	239
  4044  000716                     L3:
  4045  000716  6E8C               	movwf	3980,c	;volatile
  4046                           
  4047                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  4048  000718  A206               	btfss	LED_Control@diode,1,c
  4049  00071A  D003               	goto	l3053
  4050                           
  4051                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  4052  00071C  508C               	movf	3980,w,c	;volatile
  4053  00071E  0940               	iorlw	64
  4054  000720  D002               	goto	L4
  4055  000722                     l3053:
  4056                           
  4057                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  4058  000722  508C               	movf	3980,w,c	;volatile
  4059  000724  0BBF               	andlw	191
  4060  000726                     L4:
  4061  000726  6E8C               	movwf	3980,c	;volatile
  4062                           
  4063                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  4064  000728  A406               	btfss	LED_Control@diode,2,c
  4065  00072A  D003               	goto	l3059
  4066                           
  4067                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  4068  00072C  508A               	movf	3978,w,c	;volatile
  4069  00072E  0901               	iorlw	1
  4070  000730  D002               	goto	L5
  4071  000732                     l3059:
  4072                           
  4073                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  4074  000732  508A               	movf	3978,w,c	;volatile
  4075  000734  0BFE               	andlw	254
  4076  000736                     L5:
  4077  000736  6E8A               	movwf	3978,c	;volatile
  4078                           
  4079                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  4080  000738  A606               	btfss	LED_Control@diode,3,c
  4081  00073A  D003               	goto	l3065
  4082                           
  4083                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  4084  00073C  5089               	movf	3977,w,c	;volatile
  4085  00073E  0902               	iorlw	2
  4086  000740  D002               	goto	L6
  4087  000742                     l3065:
  4088                           
  4089                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  4090  000742  5089               	movf	3977,w,c	;volatile
  4091  000744  0BFD               	andlw	253
  4092  000746                     L6:
  4093  000746  6E89               	movwf	3977,c	;volatile
  4094                           
  4095                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  4096  000748  A806               	btfss	LED_Control@diode,4,c
  4097  00074A  D003               	goto	l3071
  4098                           
  4099                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  4100  00074C  5089               	movf	3977,w,c	;volatile
  4101  00074E  0908               	iorlw	8
  4102  000750  D002               	goto	L7
  4103  000752                     l3071:
  4104                           
  4105                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  4106  000752  5089               	movf	3977,w,c	;volatile
  4107  000754  0BF7               	andlw	247
  4108  000756                     L7:
  4109  000756  6E89               	movwf	3977,c	;volatile
  4110                           
  4111                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  4112  000758  AA06               	btfss	LED_Control@diode,5,c
  4113  00075A  D003               	goto	l3077
  4114                           
  4115                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  4116  00075C  5089               	movf	3977,w,c	;volatile
  4117  00075E  0920               	iorlw	32
  4118  000760  D002               	goto	L8
  4119  000762                     l3077:
  4120                           
  4121                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  4122  000762  5089               	movf	3977,w,c	;volatile
  4123  000764  0BDF               	andlw	223
  4124  000766                     L8:
  4125  000766  6E89               	movwf	3977,c	;volatile
  4126                           
  4127                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  4128  000768  AC06               	btfss	LED_Control@diode,6,c
  4129  00076A  D003               	goto	l3083
  4130                           
  4131                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  4132  00076C  508D               	movf	3981,w,c	;volatile
  4133  00076E  0902               	iorlw	2
  4134  000770  D002               	goto	L9
  4135  000772                     l3083:
  4136                           
  4137                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  4138  000772  508D               	movf	3981,w,c	;volatile
  4139  000774  0BFD               	andlw	253
  4140  000776                     L9:
  4141  000776  6E8D               	movwf	3981,c	;volatile
  4142                           
  4143                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  4144  000778  AE06               	btfss	LED_Control@diode,7,c
  4145  00077A  D003               	goto	l3089
  4146                           
  4147                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  4148  00077C  5089               	movf	3977,w,c	;volatile
  4149  00077E  0980               	iorlw	128
  4150  000780  D002               	goto	L10
  4151  000782                     l3089:
  4152                           
  4153                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  4154  000782  5089               	movf	3977,w,c	;volatile
  4155  000784  0B7F               	andlw	127
  4156  000786                     L10:
  4157  000786  6E89               	movwf	3977,c	;volatile
  4158                           
  4159                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  4160  000788  A007               	btfss	LED_Control@diode+1,0,c
  4161  00078A  D003               	goto	l3095
  4162                           
  4163                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  4164  00078C  508C               	movf	3980,w,c	;volatile
  4165  00078E  0901               	iorlw	1
  4166  000790  D002               	goto	L11
  4167  000792                     l3095:
  4168                           
  4169                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  4170  000792  508C               	movf	3980,w,c	;volatile
  4171  000794  0BFE               	andlw	254
  4172  000796                     L11:
  4173  000796  6E8C               	movwf	3980,c	;volatile
  4174                           
  4175                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  4176  000798  A207               	btfss	LED_Control@diode+1,1,c
  4177  00079A  D003               	goto	l3101
  4178                           
  4179                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  4180  00079C  508C               	movf	3980,w,c	;volatile
  4181  00079E  0904               	iorlw	4
  4182  0007A0  D002               	goto	L12
  4183  0007A2                     l3101:
  4184                           
  4185                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  4186  0007A2  508C               	movf	3980,w,c	;volatile
  4187  0007A4  0BFB               	andlw	251
  4188  0007A6                     L12:
  4189  0007A6  6E8C               	movwf	3980,c	;volatile
  4190  0007A8                     l311:
  4191                           
  4192                           ;LED.c: 358:     if(color == GREEN)
  4193  0007A8  040A               	decf	LED_Control@color,w,c
  4194  0007AA  A4D8               	btfss	status,2,c
  4195  0007AC  0012               	return	
  4196                           
  4197                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  4198  0007AE  A006               	btfss	LED_Control@diode,0,c
  4199  0007B0  D003               	goto	l3107
  4200                           
  4201                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  4202  0007B2  508C               	movf	3980,w,c	;volatile
  4203  0007B4  0920               	iorlw	32
  4204  0007B6  D002               	goto	L13
  4205  0007B8                     l3107:
  4206                           
  4207                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  4208  0007B8  508C               	movf	3980,w,c	;volatile
  4209  0007BA  0BDF               	andlw	223
  4210  0007BC                     L13:
  4211  0007BC  6E8C               	movwf	3980,c	;volatile
  4212                           
  4213                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  4214  0007BE  A206               	btfss	LED_Control@diode,1,c
  4215  0007C0  D003               	goto	l3113
  4216                           
  4217                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  4218  0007C2  508C               	movf	3980,w,c	;volatile
  4219  0007C4  0980               	iorlw	128
  4220  0007C6  D002               	goto	L14
  4221  0007C8                     l3113:
  4222                           
  4223                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  4224  0007C8  508C               	movf	3980,w,c	;volatile
  4225  0007CA  0B7F               	andlw	127
  4226  0007CC                     L14:
  4227  0007CC  6E8C               	movwf	3980,c	;volatile
  4228                           
  4229                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  4230  0007CE  A406               	btfss	LED_Control@diode,2,c
  4231  0007D0  D003               	goto	l3119
  4232                           
  4233                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  4234  0007D2  508A               	movf	3978,w,c	;volatile
  4235  0007D4  0902               	iorlw	2
  4236  0007D6  D002               	goto	L15
  4237  0007D8                     l3119:
  4238                           
  4239                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  4240  0007D8  508A               	movf	3978,w,c	;volatile
  4241  0007DA  0BFD               	andlw	253
  4242  0007DC                     L15:
  4243  0007DC  6E8A               	movwf	3978,c	;volatile
  4244                           
  4245                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  4246  0007DE  A606               	btfss	LED_Control@diode,3,c
  4247  0007E0  D003               	goto	l3125
  4248                           
  4249                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  4250  0007E2  5089               	movf	3977,w,c	;volatile
  4251  0007E4  0904               	iorlw	4
  4252  0007E6  D002               	goto	L16
  4253  0007E8                     l3125:
  4254                           
  4255                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  4256  0007E8  5089               	movf	3977,w,c	;volatile
  4257  0007EA  0BFB               	andlw	251
  4258  0007EC                     L16:
  4259  0007EC  6E89               	movwf	3977,c	;volatile
  4260                           
  4261                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  4262  0007EE  A806               	btfss	LED_Control@diode,4,c
  4263  0007F0  D003               	goto	l3131
  4264                           
  4265                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  4266  0007F2  5089               	movf	3977,w,c	;volatile
  4267  0007F4  0910               	iorlw	16
  4268  0007F6  D002               	goto	L17
  4269  0007F8                     l3131:
  4270                           
  4271                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  4272  0007F8  5089               	movf	3977,w,c	;volatile
  4273  0007FA  0BEF               	andlw	239
  4274  0007FC                     L17:
  4275  0007FC  6E89               	movwf	3977,c	;volatile
  4276                           
  4277                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  4278  0007FE  AA06               	btfss	LED_Control@diode,5,c
  4279  000800  D003               	goto	l3137
  4280                           
  4281                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  4282  000802  508D               	movf	3981,w,c	;volatile
  4283  000804  0901               	iorlw	1
  4284  000806  D002               	goto	L18
  4285  000808                     l3137:
  4286                           
  4287                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  4288  000808  508D               	movf	3981,w,c	;volatile
  4289  00080A  0BFE               	andlw	254
  4290  00080C                     L18:
  4291  00080C  6E8D               	movwf	3981,c	;volatile
  4292                           
  4293                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  4294  00080E  AC06               	btfss	LED_Control@diode,6,c
  4295  000810  D003               	goto	l3143
  4296                           
  4297                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  4298  000812  508D               	movf	3981,w,c	;volatile
  4299  000814  0904               	iorlw	4
  4300  000816  D002               	goto	L19
  4301  000818                     l3143:
  4302                           
  4303                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  4304  000818  508D               	movf	3981,w,c	;volatile
  4305  00081A  0BFB               	andlw	251
  4306  00081C                     L19:
  4307  00081C  6E8D               	movwf	3981,c	;volatile
  4308                           
  4309                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  4310  00081E  AE06               	btfss	LED_Control@diode,7,c
  4311  000820  D003               	goto	l3149
  4312                           
  4313                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  4314  000822  5089               	movf	3977,w,c	;volatile
  4315  000824  0940               	iorlw	64
  4316  000826  D002               	goto	L20
  4317  000828                     l3149:
  4318                           
  4319                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  4320  000828  5089               	movf	3977,w,c	;volatile
  4321  00082A  0BBF               	andlw	191
  4322  00082C                     L20:
  4323  00082C  6E89               	movwf	3977,c	;volatile
  4324                           
  4325                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  4326  00082E  A007               	btfss	LED_Control@diode+1,0,c
  4327  000830  D003               	goto	l3155
  4328                           
  4329                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  4330  000832  508C               	movf	3980,w,c	;volatile
  4331  000834  0902               	iorlw	2
  4332  000836  D002               	goto	L21
  4333  000838                     l3155:
  4334                           
  4335                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  4336  000838  508C               	movf	3980,w,c	;volatile
  4337  00083A  0BFD               	andlw	253
  4338  00083C                     L21:
  4339  00083C  6E8C               	movwf	3980,c	;volatile
  4340                           
  4341                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  4342  00083E  A207               	btfss	LED_Control@diode+1,1,c
  4343  000840  D004               	goto	l3161
  4344                           
  4345                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  4346  000842  508C               	movf	3980,w,c	;volatile
  4347  000844  0908               	iorlw	8
  4348  000846  6E8C               	movwf	3980,c	;volatile
  4349                           
  4350                           ;LED.c: 450:         }
  4351  000848  0012               	return	
  4352  00084A                     l3161:
  4353                           
  4354                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  4355  00084A  508C               	movf	3980,w,c	;volatile
  4356  00084C  0BF7               	andlw	247
  4357  00084E  6E8C               	movwf	3980,c	;volatile
  4358  000850  0012               	return		;funcret
  4359  000852                     __end_of_LED_Control:
  4360                           	opt callstack 0
  4361                           
  4362 ;; *************** function _INI_GlobalInterrupt *****************
  4363 ;; Defined at:
  4364 ;;		line 74 in file "INI.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      void 
  4371 ;; Registers used:
  4372 ;;		None
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:    3
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_INI_All
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text31
  4393  00108C                     __ptext31:
  4394                           	opt callstack 0
  4395  00108C                     _INI_GlobalInterrupt:
  4396                           	opt callstack 26
  4397                           
  4398                           ;INI.c: 76: INTCONbits.GIEH=1;
  4399                           
  4400                           ;incstack = 0
  4401  00108C  8EF2               	bsf	4082,7,c	;volatile
  4402                           
  4403                           ;INI.c: 77: INTCONbits.GIEL=1;
  4404  00108E  8CF2               	bsf	4082,6,c	;volatile
  4405                           
  4406                           ;INI.c: 78: RCONbits.IPEN=1;
  4407  001090  8ED0               	bsf	4048,7,c	;volatile
  4408                           
  4409                           ;INI.c: 79: IPEN =1;
  4410  001092  8ED0               	bsf	4048,7,c	;volatile
  4411                           
  4412                           ;INI.c: 81: PEIE=1;
  4413  001094  8CF2               	bsf	4082,6,c	;volatile
  4414                           
  4415                           ;INI.c: 82: TMR1IP = 0;
  4416  001096  909F               	bcf	3999,0,c	;volatile
  4417  001098  0012               	return		;funcret
  4418  00109A                     __end_of_INI_GlobalInterrupt:
  4419                           	opt callstack 0
  4420                           
  4421 ;; *************** function _CAN_Setup *****************
  4422 ;; Defined at:
  4423 ;;		line 22 in file "CAN.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;Total ram usage:        1 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    4
  4444 ;; This function calls:
  4445 ;;		_CAN_SetupClock
  4446 ;;		_CAN_SetupMask
  4447 ;; This function is called by:
  4448 ;;		_INI_All
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text32
  4453  000D12                     __ptext32:
  4454                           	opt callstack 0
  4455  000D12                     _CAN_Setup:
  4456                           	opt callstack 25
  4457                           
  4458                           ;CAN.c: 27:     CANCON = 0x80;
  4459                           
  4460                           ;incstack = 0
  4461  000D12  0E80               	movlw	128
  4462  000D14  6E6F               	movwf	3951,c	;volatile
  4463  000D16                     l2675:
  4464                           
  4465                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4466  000D16  506E               	movf	3950,w,c	;volatile
  4467  000D18  0BE0               	andlw	224
  4468  000D1A  0A80               	xorlw	128
  4469  000D1C  A4D8               	btfss	status,2,c
  4470  000D1E  D7FB               	goto	l2675
  4471                           
  4472                           ;CAN.c: 33:     BSEL0 = 0;
  4473  000D20  0E00               	movlw	0
  4474  000D22  010D               	movlb	13	; () banked
  4475  000D24  6FF8               	movwf	248,b	;volatile
  4476                           
  4477                           ;CAN.c: 34:     TXB0CON = 0;
  4478  000D26  0E00               	movlw	0
  4479  000D28  010F               	movlb	15	; () banked
  4480  000D2A  6F40               	movwf	64,b	;volatile
  4481                           
  4482                           ;CAN.c: 35:     RXB0CON = 0;
  4483  000D2C  0E00               	movlw	0
  4484  000D2E  6E60               	movwf	3936,c	;volatile
  4485                           
  4486                           ;CAN.c: 36:     RXB1CON = 0;
  4487  000D30  0E00               	movlw	0
  4488  000D32  6F50               	movwf	80,b	;volatile
  4489                           
  4490                           ;CAN.c: 37:     B0CON = 0;
  4491  000D34  0E00               	movlw	0
  4492  000D36  010E               	movlb	14	; () banked
  4493  000D38  6F20               	movwf	32,b	;volatile
  4494                           
  4495                           ;CAN.c: 38:     B1CON = 0;
  4496  000D3A  0E00               	movlw	0
  4497  000D3C  6F30               	movwf	48,b	;volatile
  4498                           
  4499                           ;CAN.c: 39:     PIE3 = 0;
  4500  000D3E  0E00               	movlw	0
  4501  000D40  6EA3               	movwf	4003,c	;volatile
  4502                           
  4503                           ; BSR set to: 14
  4504                           ;CAN.c: 40:     IPR3 = 0xFF;
  4505  000D42  68A5               	setf	4005,c	;volatile
  4506                           
  4507                           ;CAN.c: 41:     PIR3 = 0x00;
  4508  000D44  0E00               	movlw	0
  4509  000D46  6EA4               	movwf	4004,c	;volatile
  4510                           
  4511                           ;CAN.c: 42:     BIE0 = 0;
  4512  000D48  0E00               	movlw	0
  4513  000D4A  010D               	movlb	13	; () banked
  4514  000D4C  6FFA               	movwf	250,b	;volatile
  4515                           
  4516                           ;CAN.c: 45:     ECANCON = 0x90;
  4517  000D4E  0E90               	movlw	144
  4518  000D50  6E77               	movwf	3959,c	;volatile
  4519                           
  4520                           ; BSR set to: 13
  4521                           ;CAN.c: 48:     CAN_SetupClock();
  4522  000D52  ECC0  F007         	call	_CAN_SetupClock	;wreg free
  4523                           
  4524                           ;CAN.c: 51:     CAN_SetupMask();
  4525  000D56  EC57  F006         	call	_CAN_SetupMask	;wreg free
  4526                           
  4527                           ;CAN.c: 53:     CIOCON = 0xff;
  4528  000D5A  6873               	setf	3955,c	;volatile
  4529                           
  4530                           ;CAN.c: 59:     CANCON = 0x00;
  4531  000D5C  0E00               	movlw	0
  4532  000D5E  6E6F               	movwf	3951,c	;volatile
  4533  000D60                     l2689:
  4534                           
  4535                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4536  000D60  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4537  000D64  0EE0               	movlw	224
  4538  000D66  1606               	andwf	??_CAN_Setup,f,c
  4539  000D68  B4D8               	btfsc	status,2,c
  4540  000D6A  0012               	return	
  4541  000D6C  D7F9               	goto	l2689
  4542  000D6E                     __end_of_CAN_Setup:
  4543                           	opt callstack 0
  4544                           
  4545 ;; *************** function _CAN_SetupMask *****************
  4546 ;; Defined at:
  4547 ;;		line 81 in file "CAN.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    3
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_CAN_Setup
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text33
  4576  000CAE                     __ptext33:
  4577                           	opt callstack 0
  4578  000CAE                     _CAN_SetupMask:
  4579                           	opt callstack 25
  4580                           
  4581                           ;CAN.c: 83:     MSEL0 = 0x50;
  4582                           
  4583                           ;incstack = 0
  4584  000CAE  0E50               	movlw	80
  4585  000CB0  010D               	movlb	13	; () banked
  4586  000CB2  6FF0               	movwf	240,b	;volatile
  4587                           
  4588                           ;CAN.c: 84:     MSEL1 = 0x55;
  4589  000CB4  0E55               	movlw	85
  4590  000CB6  6FF1               	movwf	241,b	;volatile
  4591                           
  4592                           ;CAN.c: 85:     MSEL2 = 0x55;
  4593  000CB8  0E55               	movlw	85
  4594  000CBA  6FF2               	movwf	242,b	;volatile
  4595                           
  4596                           ;CAN.c: 86:     MSEL3 = 0x55;
  4597  000CBC  0E55               	movlw	85
  4598  000CBE  6FF3               	movwf	243,b	;volatile
  4599                           
  4600                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4601  000CC0  0E00               	movlw	0
  4602  000CC2  010F               	movlb	15	; () banked
  4603  000CC4  6F18               	movwf	24,b	;volatile
  4604                           
  4605                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4606  000CC6  0E0B               	movlw	11
  4607  000CC8  6F19               	movwf	25,b	;volatile
  4608                           
  4609                           ; BSR set to: 15
  4610                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4611  000CCA  691A               	setf	26,b	;volatile
  4612                           
  4613                           ; BSR set to: 15
  4614                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4615  000CCC  691B               	setf	27,b	;volatile
  4616                           
  4617                           ; BSR set to: 15
  4618                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4619  000CCE  691C               	setf	28,b	;volatile
  4620                           
  4621                           ; BSR set to: 15
  4622                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4623  000CD0  691D               	setf	29,b	;volatile
  4624                           
  4625                           ;CAN.c: 97:     RXM1EIDH = 0;
  4626  000CD2  0E00               	movlw	0
  4627  000CD4  6F1E               	movwf	30,b	;volatile
  4628                           
  4629                           ;CAN.c: 98:     RXM1EIDL = 0;
  4630  000CD6  0E00               	movlw	0
  4631  000CD8  6F1F               	movwf	31,b	;volatile
  4632                           
  4633                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4634  000CDA  0E00               	movlw	0
  4635  000CDC  6F00               	movwf	0,b	;volatile
  4636                           
  4637                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4638  000CDE  0E01               	movlw	1
  4639  000CE0  6F01               	movwf	1,b	;volatile
  4640                           
  4641                           ; BSR set to: 15
  4642                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4643  000CE2  8701               	bsf	1,3,b	;volatile
  4644                           
  4645                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4646  000CE4  5034               	movf	_DaneCan+3,w,c
  4647  000CE6  6F02               	movwf	2,b	;volatile
  4648                           
  4649                           ; BSR set to: 15
  4650                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4651  000CE8  8D02               	bsf	2,6,b	;volatile
  4652                           
  4653                           ; BSR set to: 15
  4654                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4655  000CEA  C033  FF03         	movff	_DaneCan+2,3843	;volatile
  4656                           
  4657                           ; BSR set to: 15
  4658                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4659  000CEE  0E00               	movlw	0
  4660  000CF0  6F04               	movwf	4,b	;volatile
  4661                           
  4662                           ; BSR set to: 15
  4663                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4664  000CF2  0E01               	movlw	1
  4665  000CF4  6F05               	movwf	5,b	;volatile
  4666                           
  4667                           ; BSR set to: 15
  4668                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4669  000CF6  8705               	bsf	5,3,b	;volatile
  4670                           
  4671                           ; BSR set to: 15
  4672                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4673  000CF8  0E7F               	movlw	127
  4674  000CFA  6F06               	movwf	6,b	;volatile
  4675                           
  4676                           ; BSR set to: 15
  4677                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4678  000CFC  6907               	setf	7,b	;volatile
  4679                           
  4680                           ; BSR set to: 15
  4681                           ;CAN.c: 115:     RXF2SIDH = 0;
  4682  000CFE  0E00               	movlw	0
  4683  000D00  6F08               	movwf	8,b	;volatile
  4684                           
  4685                           ; BSR set to: 15
  4686                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4687  000D02  0E20               	movlw	32
  4688  000D04  6F09               	movwf	9,b	;volatile
  4689                           
  4690                           ; BSR set to: 15
  4691                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4692  000D06  8709               	bsf	9,3,b	;volatile
  4693                           
  4694                           ; BSR set to: 15
  4695                           ;CAN.c: 118:     RXF2EIDH = 0;
  4696  000D08  0E00               	movlw	0
  4697  000D0A  6F0A               	movwf	10,b	;volatile
  4698                           
  4699                           ; BSR set to: 15
  4700                           ;CAN.c: 119:     RXF2EIDL = 0;
  4701  000D0C  0E00               	movlw	0
  4702  000D0E  6F0B               	movwf	11,b	;volatile
  4703                           
  4704                           ; BSR set to: 15
  4705  000D10  0012               	return		;funcret
  4706  000D12                     __end_of_CAN_SetupMask:
  4707                           	opt callstack 0
  4708                           
  4709 ;; *************** function _CAN_SetupClock *****************
  4710 ;; Defined at:
  4711 ;;		line 136 in file "CAN.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		None
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    3
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_CAN_Setup
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text34
  4740  000F80                     __ptext34:
  4741                           	opt callstack 0
  4742  000F80                     _CAN_SetupClock:
  4743                           	opt callstack 25
  4744                           
  4745                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4746                           
  4747                           ; BSR set to: 15
  4748                           ;incstack = 0
  4749  000F80  8070               	bsf	3952,0,c	;volatile
  4750                           
  4751                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4752  000F82  8270               	bsf	3952,1,c	;volatile
  4753                           
  4754                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4755  000F84  9470               	bcf	3952,2,c	;volatile
  4756                           
  4757                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4758  000F86  9670               	bcf	3952,3,c	;volatile
  4759                           
  4760                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4761  000F88  9870               	bcf	3952,4,c	;volatile
  4762                           
  4763                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4764  000F8A  9A70               	bcf	3952,5,c	;volatile
  4765                           
  4766                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4767  000F8C  8C70               	bsf	3952,6,c	;volatile
  4768                           
  4769                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4770  000F8E  8E70               	bsf	3952,7,c	;volatile
  4771                           
  4772                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4773  000F90  8671               	bsf	3953,3,c	;volatile
  4774                           
  4775                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4776  000F92  8871               	bsf	3953,4,c	;volatile
  4777                           
  4778                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4779  000F94  8A71               	bsf	3953,5,c	;volatile
  4780                           
  4781                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4782  000F96  8471               	bsf	3953,2,c	;volatile
  4783                           
  4784                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4785  000F98  9271               	bcf	3953,1,c	;volatile
  4786                           
  4787                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4788  000F9A  9071               	bcf	3953,0,c	;volatile
  4789                           
  4790                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4791  000F9C  8072               	bsf	3954,0,c	;volatile
  4792                           
  4793                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4794  000F9E  9272               	bcf	3954,1,c	;volatile
  4795                           
  4796                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  4797  000FA0  8472               	bsf	3954,2,c	;volatile
  4798                           
  4799                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  4800  000FA2  8C71               	bsf	3953,6,c	;volatile
  4801                           
  4802                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  4803  000FA4  8E71               	bsf	3953,7,c	;volatile
  4804  000FA6  0012               	return		;funcret
  4805  000FA8                     __end_of_CAN_SetupClock:
  4806                           	opt callstack 0
  4807                           
  4808 ;; *************** function _ISR_low *****************
  4809 ;; Defined at:
  4810 ;;		line 16 in file "ISR.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;		None
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;Total ram usage:        3 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    2
  4831 ;; This function calls:
  4832 ;;		_TMR1_Timer_reset
  4833 ;;		i1_TMR1_Update_flag_Set
  4834 ;; This function is called by:
  4835 ;;		Interrupt level 1
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	intcodelo
  4840  000018                     __pintcodelo:
  4841                           	opt callstack 0
  4842  000018                     _ISR_low:
  4843                           	opt callstack 23
  4844                           
  4845                           ;incstack = 0
  4846  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4847  00001A  CFD8 F003          	movff	status,??_ISR_low
  4848  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  4849  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  4850                           
  4851                           ;ISR.c: 21:     if(TMR1IF==1)
  4852  000026  A09E               	btfss	3998,0,c	;volatile
  4853  000028  D011               	goto	i1l587
  4854                           
  4855                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  4856  00002A  ECE7  F007         	call	_TMR1_Timer_reset	;wreg free
  4857                           
  4858                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  4859  00002E  0E00               	movlw	0
  4860  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  4861  000032  0E01               	movlw	1
  4862  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  4863  000036  EC61  F008         	call	i1_TMR1_Update_flag_Set	;wreg free
  4864                           
  4865                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  4866  00003A  8035               	bsf	_DetectorLedRadar,0,c
  4867                           
  4868                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  4869  00003C  2A3E               	incf	ISR_low@ramkaStanuU8,f,c
  4870  00003E  0E14               	movlw	20
  4871  000040  643E               	cpfsgt	ISR_low@ramkaStanuU8,c
  4872  000042  D003               	goto	i1l2957
  4873                           
  4874                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  4875  000044  0E00               	movlw	0
  4876  000046  6E3E               	movwf	ISR_low@ramkaStanuU8,c
  4877                           
  4878                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  4879  000048  8031               	bsf	_DaneCan,0,c
  4880  00004A                     i1l2957:
  4881                           
  4882                           ;ISR.c: 41:             TMR1IF=0;
  4883  00004A  909E               	bcf	3998,0,c	;volatile
  4884  00004C                     i1l587:
  4885  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  4886  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  4887  000054  C003  FFD8         	movff	??_ISR_low,status
  4888  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4889  00005A  0010               	retfie	
  4890  00005C                     __end_of_ISR_low:
  4891                           	opt callstack 0
  4892                           
  4893 ;; *************** function i1_TMR1_Update_flag_Set *****************
  4894 ;; Defined at:
  4895 ;;		line 32 in file "TMR1.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  a               2    0[COMRAM] unsigned int 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		None
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;Total ram usage:        2 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:    1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_ISR_low
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text36
  4924  0010C2                     __ptext36:
  4925                           	opt callstack 0
  4926  0010C2                     i1_TMR1_Update_flag_Set:
  4927                           	opt callstack 23
  4928                           
  4929                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4930                           
  4931                           ;incstack = 0
  4932  0010C2  C001  F038         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4933  0010C6  C002  F039         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4934  0010CA  0012               	return		;funcret
  4935  0010CC                     __end_ofi1_TMR1_Update_flag_Set:
  4936                           	opt callstack 0
  4937                           
  4938 ;; *************** function _TMR1_Timer_reset *****************
  4939 ;; Defined at:
  4940 ;;		line 63 in file "TMR1.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  4945 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      unsigned char 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;Total ram usage:        2 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_ISR_low
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text37
  4970  000FCE                     __ptext37:
  4971                           	opt callstack 0
  4972  000FCE                     _TMR1_Timer_reset:
  4973                           	opt callstack 23
  4974                           
  4975                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  4976                           
  4977                           ;incstack = 0
  4978  000FCE  0E00               	movlw	0
  4979  000FD0  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  4980  000FD2  0E00               	movlw	0
  4981  000FD4  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  4982                           
  4983                           ;TMR1.c: 70:     t1L = TMR1L;
  4984  000FD6  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  4985                           
  4986                           ;TMR1.c: 71:     t1H = TMR1H;
  4987  000FDA  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  4988                           
  4989                           ;TMR1.c: 72:     __nop();
  4990  000FDE  F000               	nop	
  4991                           
  4992                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4993  000FE0  0E9E               	movlw	158
  4994  000FE2  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  4995                           
  4996                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4997  000FE4  0E57               	movlw	87
  4998  000FE6  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  4999                           
  5000                           ;TMR1.c: 75:     TMR1H = t1H;
  5001  000FE8  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  5002                           
  5003                           ;TMR1.c: 76:     TMR1L = 0x5B;
  5004  000FEC  0E5B               	movlw	91
  5005  000FEE  6ECE               	movwf	4046,c	;volatile
  5006  000FF0  0012               	return		;funcret
  5007  000FF2                     __end_of_TMR1_Timer_reset:
  5008                           	opt callstack 0
  5009                           
  5010 ;; *************** function _ISR_high *****************
  5011 ;; Defined at:
  5012 ;;		line 53 in file "ISR.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;		None
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      void 
  5019 ;; Registers used:
  5020 ;;		None
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;Total ram usage:        0 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		Interrupt level 2
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	intcode
  5040  000008                     __pintcode:
  5041                           	opt callstack 0
  5042  000008                     _ISR_high:
  5043                           	opt callstack 23
  5044                           
  5045                           ;incstack = 0
  5046  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5047  00000A  ED73  F008         	call	int_func,f	;refresh shadow registers
  5048                           
  5049                           	psect	intcode_body
  5050  0010E6                     __pintcode_body:
  5051                           	opt callstack 23
  5052  0010E6                     int_func:
  5053                           	opt callstack 23
  5054  0010E6  0006               	pop		; remove dummy address from shadow register refresh
  5055  0010E8  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5056  0010EA  0011               	retfie		f
  5057  0010EC                     __end_of_ISR_high:
  5058                           	opt callstack 0
  5059  0000                     
  5060                           	psect	rparam
  5061  0000                     
  5062                           	psect	temp
  5063  00004A                     btemp:
  5064                           	opt callstack 0
  5065  00004A                     	ds	1
  5066  0000                     int$flags	set	btemp
  5067  0000                     wtemp8	set	btemp+1
  5068  0000                     ttemp5	set	btemp+1
  5069  0000                     ttemp6	set	btemp+4
  5070  0000                     ttemp7	set	btemp+8
  5071                           tosu	equ	0xFFF
  5072                           tosh	equ	0xFFE
  5073                           tosl	equ	0xFFD
  5074                           stkptr	equ	0xFFC
  5075                           pclatu	equ	0xFFB
  5076                           pclath	equ	0xFFA
  5077                           pcl	equ	0xFF9
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           indf0	equ	0xFEF
  5085                           postinc0	equ	0xFEE
  5086                           postdec0	equ	0xFED
  5087                           preinc0	equ	0xFEC
  5088                           plusw0	equ	0xFEB
  5089                           fsr0h	equ	0xFEA
  5090                           fsr0l	equ	0xFE9
  5091                           wreg	equ	0xFE8
  5092                           indf1	equ	0xFE7
  5093                           postinc1	equ	0xFE6
  5094                           postdec1	equ	0xFE5
  5095                           preinc1	equ	0xFE4
  5096                           plusw1	equ	0xFE3
  5097                           fsr1h	equ	0xFE2
  5098                           fsr1l	equ	0xFE1
  5099                           bsr	equ	0xFE0
  5100                           indf2	equ	0xFDF
  5101                           postinc2	equ	0xFDE
  5102                           postdec2	equ	0xFDD
  5103                           preinc2	equ	0xFDC
  5104                           plusw2	equ	0xFDB
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         667
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      73
    BANK0           160     17     119
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          244      0       0

Pointer List with Targets:

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 544
		 -> wartosciSasiada(BIGRAM[544]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_AdressOfNeighbors->___wmul
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24079
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   15604
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2   12934
                                             38 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
            _FRAME_AdressOfNeighbors
       _FRAME_SensorExcitationStatus
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                        16    14      2    4278
                                             10 COMRAM    16    14      2
                          _LED_Clear
                          _LED_Error
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             27    23      4    3712
                                             11 COMRAM    27    23      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2520
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     455
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6517
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4033
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     574
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1756
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AdressOfNeighbors
         ___wmul
       _FRAME_SensorExcitationStatus
         _LED_Clear
           _LED_Control
         _LED_Error
           _LED_Control
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CF3      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK12           F4      0       0      29        0.0%
BANK12              F4      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     11      77       6       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      49       1       77.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0       3        0.0%
DATA                 0      0     2E0       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 22 11:37:15 2019

                                 ___awdiv@sign 000B                                             bsr 000FE0  
                          ___wmul@multiplicand 0008                                    __CFG_BORV$3 000000  
                                 __CFG_CP0$OFF 000000                                   __CFG_CP1$OFF 000000  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                           __size_of_CAN_GenID 0094                                            l311 07A8  
                                          l180 05AC                                            l190 032A  
                                          l191 0330                                            l192 0336  
                                          l432 08F4                                            l520 0A66  
                                          l193 033C                                            l441 097A  
                                          l521 0A5E                                            l194 0342  
                                          l434 092C                                            l283 0C84  
                                          l195 0348                                            l179 05AE  
                                          l196 034E                                            l188 0324  
                                          l189 0394                                    ?_LED_Update 0001  
                                 __CFG_CPB$OFF 000000                                   __CFG_CPD$OFF 000000  
                           __size_of_CAN_Setup 005C                                   ?_LED_Control 0006  
                                          wreg 000FE8                          __end_of_CAN_TakeFrame 0592  
                                  ?_INI_OUTPUT 0001                         __size_of_INI_LED_Start 0034  
                        __end_of_CAN_SendFrame 0700                                   __CFG_LVP$OFF 000000  
                    TRM_DataTransmition@weWyU8 003D                   __size_of_INI_GlobalInterrupt 000E  
                                 __CFG_WDT$OFF 000000                                           l1151 0E10  
                                         l3101 07A2                                           l3113 07C8  
                                         l3131 07F8                                           l3107 07B8  
                                         l3125 07E8                                           l3053 0722  
                                         l2501 0E9A                                           l3143 0818  
                                         l3119 07D8                                           l3071 0752  
                                         l3047 0712                                           l3161 084A  
                                         l3137 0808                                           l3065 0742  
                                         l3155 0838                                           l3083 0772  
                                         l3059 0732                                __end_of_INI_All 1066  
                                         l3171 0F5A                                           l3411 0472  
                                         l3149 0828                                           l3077 0762  
                                         l2517 0EE0                                           l3501 0B04  
                                         l3421 049A                                           l3413 047A  
                                         l3253 06FA                                           l3325 017E  
                                         l3095 0792                                           l3351 0BC4  
                                         l3415 0482                                           l3407 0466  
                                         l3431 04E6                                           l3335 01D6  
                                         l3319 0098                                           l3089 0782  
                                         l3441 0526                                           l3417 048A  
                                         l3409 046C                                           l3425 04A2  
                                         l3433 0500                                           l3249 0646  
                                         l3363 0BEA                                           l3443 052E  
                                         l3435 0512                                           l3419 0492  
                                         l3427 04E2                                           l3523 09CC  
                                         l3365 0BF2                                           l3357 0BD4  
                                         l3445 0536                                           l3437 0518  
                                         l3453 054E                                           l3285 0916  
                                         l3525 09E4                                           l3517 09A4  
                                         l3383 0C2A                                           l3375 0C12  
                                         l3447 053E                                           l3439 051E  
                                         l3455 058E                                           l3391 0354  
                                         l3519 09B2                                           l2657 0DDE  
                                         l3449 0546                                           l3297 093C  
                                         l2675 0D16                                           l2659 0DE6  
                                         l3379 0C1C                                           l3571 0E46  
                                         l2669 0E06                                           l3493 0ACE  
                                         l3557 0C60                                           l3495 0AD8  
                                         l3487 0AA2                                           l2689 0D60  
                                         l3585 0F2E                                           l3595 0F4E  
                                         _BIE0 000DFA                              _MOC_Frame_Counter 107E  
                                         u1220 0DEA                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _LATD 000F8C                                           _LATE 000F8D  
                                         u1810 017C                                           u1820 0314  
                                         u1735 061C                                           _IPR3 000FA5  
                                         _IPEN 007E87                                           u1905 03FE  
                                         _PIE3 000FA3                                           u1860 0BF6  
                                         u1780 0950                                           u1950 0B0C  
                                         _PEIE 007F96                                           _LOCK 0040  
                                         _PIR3 000FA4                                           _RCON 000FD0  
                                         _Dane 003A                                __end_of_ISR_low 005C  
                             LED_Control@diode 0006                             ?_MOC_Frame_Counter 0006  
                                         _main 0F28                               LED_Control@color 000A  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 004A                                 _CAN_SetupClock 0F80  
                           __size_of_LED_Clear 001E                                           prodh 000FF4  
                                         prodl 000FF3                          __end_of_CAN_SetupMask 0D12  
                __size_of_TMR1_Update_flag_Get 000A                                           start 005C  
                __size_of_TMR1_Update_flag_Set 000A                             __size_of_LED_Error 001E  
                                __CFG_IESO$OFF 000000                             __size_of_LED_Right 004C  
                __size_of_FRAME_HandleCanFrame 00F0                                  _LED_Light_Pos 0A6C  
                                __CFG_MCLRE$ON 000000                                   ___param_bank 000000  
                          ??_MOC_Frame_Counter 0008                     ??_MOC_Aktualna_Temperatura 0008  
            FRAME_HandleCanFrame@identyfikator 002B                             __size_of_INI_Timer 0018  
                             __end_of_LED_Left 0EF4                                          _B0CON 000E20  
                                        _B1CON 000E30                                          _B2CON 000E40  
                                        _B3CON 000E50                                          _B4CON 000E60  
                                        _B5CON 000E70                               __end_of_LOCK_Get 10F0  
                                        ?_main 0001                               __end_of_LOCK_Set 10E6  
                              __end_of___awdiv 0C34                                          _BSEL0 000DF8  
                              ___awdiv@divisor 0008                                          _T1CON 000FCD  
                                        _IRCF0 007E9C                                          _IRCF1 007E9D  
                                        _IRCF2 007E9E                                __end_of___lwdiv 0E1A  
                                        i1l587 004C                                ___awdiv@counter 000A  
                                        _MSEL0 000DF0                                          _MSEL1 000DF1  
                                        _MSEL2 000DF2                                          _MSEL3 000DF3  
                                        _TMR1H 000FCF                                          _TMR1L 000FCE  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                  __CFG_PWRT$OFF 000000  
                                        _Flagi 002C                         ?_CAN_MoveBuffIntoFrame 0006  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                               __end_of_ISR_high 10EC  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                      __end_of_MOC_Frame_Counter 108C  
                               __CFG_EBTRB$OFF 000000                        i1TMR1_Update_flag_Set@a 0001  
                                 ?_MOC_NOTWORK 0006                                          tablat 000FF5  
                       __end_of_CAN_SetupClock 0FA8                                          ttemp5 004B  
                                        ttemp6 004E                                          ttemp7 0052  
                                        status 000FD8                                          wtemp8 004B  
                            __end_of_CAN_GenID 0BB0                                 __CFG_PBADEN$ON 000000  
                          __size_of_LED_Update 007A                                 ?_LED_Light_Pos 000D  
                             _TMR1_Timer_reset 0FCE                              __end_of_CAN_Setup 0D6E  
                                _INI_LED_Start 0EF4                                __initialization 0D6E  
                          __size_of_INI_OUTPUT 001E                               CAN_GenID@frameID 0008  
                                 __end_of_main 0F56                       ?_FRAME_AdressOfNeighbors 000C  
                             CAN_GenID@message 0006                                         ??_main 002C  
                       CAN_MoveBuffIntoFrame@i 000A                                  __activetblptr 000002  
                             _TMR1_Update_flag 0038                              __end_of_LED_Clear 102E  
                              _wartosciSasiada 00D7                                      ??_INI_All 000B  
                            __end_of_LED_Error 1010                              __end_of_LED_Right 0EB2  
                                    ??_ISR_low 0003                                         _CANCON 000F6F  
                             ___awdiv@dividend 0006                                         _CIOCON 000F73  
                              __CFG_BBSIZ$1024 000000                              __end_of_INI_Timer 107E  
                                       i1l2957 004A                                ?_CAN_SetupClock 0001  
                                       _RXB0D0 000F66                                         _TMR1IE 007CE8  
                                       _TMR1IF 007CF0                                         _TMR1IP 007CF8  
                                       _TMR1ON 007E68                                 ?_INI_LED_Start 0001  
                               __CFG_XINST$OFF 000000                                         ___wmul 0FA8  
                                    ??___awdiv 000A                                 __CFG_STVREN$ON 000000  
                             LED_Light_Pos@pos 000D                                      ??___lwdiv 000A  
                                       clear_0 0D96                                         clear_1 0DA8  
                                       clear_2 0DB4                               ___awdiv@quotient 000C  
                     ??i1_TMR1_Update_flag_Set 0003                  FRAME_AdressOfNeighbors@uranos 0021  
                              __CFG_BOREN$BOHW 000000                                   __pdataCOMRAM 0041  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                     __size_of_MOC_Frame_Counter 000E  
                         __size_of_LED_Control 0152                          TMR1_Update_flag_Set@a 0006  
                                   __accesstop 0060                        __end_of__initialization 0DBA  
                          ISR_low@ramkaStanuU8 003E                                      ?_LED_Left 0006  
                              ??_LED_Light_Pos 0011                                  ___rparam_used 000001  
                                    ?_LOCK_Get 0001                                      ?_LOCK_Set 0001  
              __end_of_FRAME_AdressOfNeighbors 0316                                 __pcstackCOMRAM 0001  
                                    LED_Left@a 0006                                      LED_Left@b 0008  
                          _INI_GlobalInterrupt 108C                                      ?_ISR_high 0001  
                                 ??_LED_Update 0018                    __end_of_TRM_DataTransmition 0E66  
                                 ??_INI_OUTPUT 0006                                      LOCK_Set@k 0006  
                         ?_INI_GlobalInterrupt 0001                                     __pbssBANK0 0060  
                         __size_of_MOC_NOTWORK 0008                                ??_INI_LED_Start 000B  
                                   ??_LED_Left 0008                                     ??_LOCK_Get 0006  
                                   ??_LOCK_Set 0006                             __end_of_LED_Update 0CAE  
                           __end_of_INI_OUTPUT 104C                                        ?___wmul 0006  
                                   ??_ISR_high 0001                            TMR1_Timer_reset@t1H 0002  
                          TMR1_Timer_reset@t1L 0001                                        _ECANCON 000F77  
                                      _CANSTAT 000F6E                        ??_CAN_MoveBuffIntoFrame 000A  
                 __end_of_TMR1_Update_flag_Get 10C2                   __end_of_TMR1_Update_flag_Set 10B8  
              __size_ofi1_TMR1_Update_flag_Set 000A                   __end_of_FRAME_HandleCanFrame 0A6C  
                                      _INI_All 104C                       __end_of_TMR1_Timer_reset 0FF2  
                                      _RXB0DLC 000F65                                        _RXB0CON 000F60  
                                      _RXB1CON 000F50                          ??_INI_GlobalInterrupt 0006  
                                      _TXB0CON 000F40                                        _ISR_low 0018  
                                      _DaneCan 0031                    FRAME_HandleCanFrame@message 0027  
                                      __Hparam 0000               ??_MOC_Wynikowa_wartosc_roznicowa 0008  
              ?_MOC_Wynikowa_wartosc_roznicowa 0006                                        __Lparam 0000  
                       __size_of_CAN_TakeFrame 027C                                      _CAN_GenID 0B1C  
                                      ___awdiv 0BB0                                      _CAN_Setup 0D12  
                              __size_of___wmul 0026                         __size_of_CAN_SendFrame 016E  
                                      ___lwdiv 0DC8                              LED_Light_Pos@pos2 0014  
                                      __pcinit 0D6E                                        __ramtop 0D00  
                                      __ptext0 0F28                                        __ptext1 0E1A  
                                      __ptext2 097C                                        __ptext3 0852  
                                      __ptext4 109A                                        __ptext5 10D6  
                                      __ptext6 107E                                        __ptext7 10A4  
                                      __ptext8 10DE                                        __ptext9 10EC  
                       __size_of_CAN_SetupMask 0064              __size_of_MOC_Aktualna_Temperatura 000A  
               FRAME_AdressOfNeighbors@nrRamki 000E                      ?_MOC_Aktualna_Temperatura 0006  
             __size_of_FRAME_AdressOfNeighbors 02B6                               ??_CAN_SetupClock 0006  
               FRAME_AdressOfNeighbors@message 000C                                      _LED_Clear 1010  
                                    _LED_Error 0FF2                                 __pintcode_body 10E6  
                                    _LED_Right 0E66                           end_of_initialization 0DBA  
                                __Lmediumconst 0000                                        int_func 10E6  
                                    _INI_Timer 1066                         i1_TMR1_Update_flag_Set 10C2  
             TRM_DataTransmition@czujnikWeWyU8 003C                                     ?_CAN_GenID 0006  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                                     ?_CAN_Setup 0001  
                         CAN_SendFrame@message 000B                                  LED_Update@Red 003F  
                FRAME_SensorExcitationStatus@k 0019                                  _CAN_TakeFrame 0316  
                                   ?_LED_Clear 0001                                  _CAN_SendFrame 0592  
                  FRAME_AdressOfNeighbors@gaja 001F                                     ?_LED_Error 0001  
                  FRAME_AdressOfNeighbors@kier 0023                                     ?_LED_Right 0006  
                                   ?_INI_Timer 0001                                _ramkaCanRxKarty 0060  
                         _TMR1_Update_flag_Get 10B8                                _ramkaCanTxKarty 00B5  
                         _TMR1_Update_flag_Set 10AE                                  _CAN_SetupMask 0CAE  
                            __size_of_LED_Left 0042                           _FRAME_HandleCanFrame 097C  
                            __size_of_LOCK_Get 0004                              __size_of_LOCK_Set 0008  
                               CAN_TakeFrame@k 0013                                 __end_of___wmul 0FCE  
                                __pidataCOMRAM 10CC                              __size_of_ISR_high 10E4  
                                   LED_Right@a 0006                                     LED_Right@b 000A  
                        MOC_Frame_Counter@zeta 0041                                  ??_LED_Control 0008  
                          start_initialization 0D6E                                 ?_CAN_TakeFrame 000E  
                               ?_CAN_SendFrame 000B                               __CFG_OSC$IRCIO67 000000  
                        ?_TMR1_Update_flag_Get 0006                          ?_TMR1_Update_flag_Set 0006  
                               ?_CAN_SetupMask 0001                          __end_of_LED_Light_Pos 0B1C  
                        ?_FRAME_HandleCanFrame 0027                                    ??_CAN_GenID 0009  
                                     ??___wmul 000A                                    ??_CAN_Setup 0006  
                             __CFG_LPT1OSC$OFF 000000                       CAN_MoveBuffIntoFrame@Buf 0008  
         __end_of_FRAME_SensorExcitationStatus 097C          __size_of_FRAME_SensorExcitationStatus 012A  
                     CAN_MoveBuffIntoFrame@Ram 0006                   _FRAME_SensorExcitationStatus 0852  
FRAME_SensorExcitationStatus@Satrun_prime_2166 0015                 __size_of_CAN_MoveBuffIntoFrame 002A  
                                  __pbssBIGRAM 00D7                  __end_of_CAN_MoveBuffIntoFrame 0F80  
                              _Fulfillment_Lvl 0047                                    __pbssCOMRAM 002C  
                                     ?_INI_All 0001                        _FRAME_AdressOfNeighbors 0060  
                                __pcstackBANK0 00C6                              ?_TMR1_Timer_reset 0001  
                                  _BRGCON1bits 000F70                                    _BRGCON2bits 000F71  
                                  _BRGCON3bits 000F72                                       ?_ISR_low 0001  
                                  ??_LED_Clear 000B                                  ??_MOC_NOTWORK 0008  
                           ??_TMR1_Timer_reset 0001                                    ??_LED_Error 000B  
                                  ??_LED_Right 0008                   __size_of_TRM_DataTransmition 004C  
                     FRAME_AdressOfNeighbors@i 0025                            __end_of_LED_Control 0852  
                                  ??_INI_Timer 0006                          __end_of_INI_LED_Start 0F28  
                             ___lwdiv@dividend 0006                                      __pintcode 0008  
                                     ?___awdiv 0006               __end_of_MOC_Aktualna_Temperatura 10AE  
                                     ?___lwdiv 0006                                    __pintcodelo 0018  
                  __end_of_INI_GlobalInterrupt 109A                                ??_CAN_TakeFrame 0010  
                ?_FRAME_SensorExcitationStatus 000B         __end_of_MOC_Wynikowa_wartosc_roznicowa 10A4  
      __size_of_MOC_Wynikowa_wartosc_roznicowa 000A                 _MOC_Wynikowa_wartosc_roznicowa 109A  
                                  _COMSTATbits 000F74                                ??_CAN_SendFrame 000D  
                             ___lwdiv@quotient 000A                        ?i1_TMR1_Update_flag_Set 0001  
                       ??_TMR1_Update_flag_Get 0008                         ??_TMR1_Update_flag_Set 0008  
                              ??_CAN_SetupMask 0006                                 ___wmul@product 000A  
                                     _LED_Left 0EB2                         ??_FRAME_HandleCanFrame 0029  
                         CAN_TakeFrame@message 000E                            __end_of_MOC_NOTWORK 10DE  
                                     _LOCK_Get 10EC                           CAN_TakeFrame@tempCON 0012  
                                     _LOCK_Set 10DE                                       _RXB0EIDH 000F63  
                                     _RXB0EIDL 000F64                                       _RCONbits 000FD0  
                             __CFG_WDTPS$32768 000000                                       _RXB0SIDH 000F61  
                                     _RXB0SIDL 000F62                                       _RXF0EIDH 000F02  
                                     _RXF0EIDL 000F03                                       _RXF1EIDH 000F06  
                                     _RXF1EIDL 000F07                                       _RXF2EIDH 000F0A  
                                     _RXF2EIDL 000F0B                                       _RXF0SIDH 000F00  
                                     _RXF0SIDL 000F01                                       _RXF1SIDH 000F04  
                                     _RXF1SIDL 000F05                                       _RXF2SIDH 000F08  
                                     _RXF2SIDL 000F09                                       _ISR_high 0008  
                                     _RXM0EIDH 000F1A                                       _RXM0EIDL 000F1B  
                                     _RXM1EIDH 000F1E                                       _RXM1EIDL 000F1F  
                                     _RXM0SIDH 000F18                                       _RXM0SIDL 000F19  
                                     _RXM1SIDH 000F1C                                       _RXM1SIDL 000F1D  
                    ??_FRAME_AdressOfNeighbors 0010                              ___wmul@multiplier 0006  
                             _DetectorLedRadar 0035                                    _LED_Control 0700  
                             __size_of_INI_All 001A                 __end_ofi1_TMR1_Update_flag_Set 10CC  
                                    copy_data0 0D82                               __size_of_ISR_low 0044  
                                     __Hrparam 0000                                   _RXB0SIDLbits 000F62  
                                     __Lrparam 0000                               __size_of___awdiv 0084  
                             __size_of___lwdiv 0052                       _MOC_Aktualna_Temperatura 10A4  
                           LED_Light_Pos@flage 0016                             LED_Light_Pos@color 0011  
                                 _RXF0SIDLbits 000F01                                ___lwdiv@divisor 0008  
                                 _RXF1SIDLbits 000F05                                ___lwdiv@counter 000C  
                                     __ptext10 0FF2                                       __ptext11 1010  
                                     __ptext20 10B8                                       __ptext12 0060  
                                     __ptext21 0C34                                       __ptext13 0FA8  
                                     __ptext30 0700                                       __ptext22 0A6C  
                                     __ptext14 0592                                       __ptext31 108C  
                                     __ptext23 0DC8                                       __ptext15 0B1C  
                                     __ptext32 0D12                                       __ptext24 0E66  
                                     __ptext16 0316                                       __ptext33 0CAE  
                                     __ptext25 0EB2                                       __ptext17 0BB0  
                                     __ptext34 0F80                                       __ptext26 104C  
                                     __ptext18 0F56                                       __ptext27 1066  
                                     __ptext19 10AE                                       __ptext36 10C2  
                                     __ptext28 102E                 ??_FRAME_SensorExcitationStatus 000D  
                                     __ptext37 0FCE                                       __ptext29 0EF4  
                TRM_DataTransmition@canMessage 00C6                                   _RXF2SIDLbits 000F09  
                                  _MOC_NOTWORK 10D6                                  __size_of_main 002E  
                      __size_of_CAN_SetupClock 0028       FRAME_SensorExcitationStatus@Satrun_prime 0013  
                                     int$flags 004A                            _TRM_DataTransmition 0E1A  
                                  _RXB0DLCbits 000F65                                     _LED_Update 0C34  
                                  _RXB0CONbits 000F60                                     _INTCONbits 000FF2  
                                   _INI_OUTPUT 102E                           ?_TRM_DataTransmition 0001  
                                     intlevel1 0000                                       intlevel2 0000  
          FRAME_SensorExcitationStatus@message 000B                                    _TXB0CONbits 000F40  
                    __size_of_TMR1_Timer_reset 0024             FRAME_SensorExcitationStatus@Saturn 0017  
                     LED_Light_Pos@fulfillment 000F                                LED_Update@Green 0049  
                       __size_of_LED_Light_Pos 00B0                          _CAN_MoveBuffIntoFrame 0F56  
                                   _WDTCONbits 000FD1                          ??_TRM_DataTransmition 002C  
                       LED_Light_Pos@LED_array 0012                                 LED_Update@pos1 0045  
                               LED_Update@pos2 0043  
