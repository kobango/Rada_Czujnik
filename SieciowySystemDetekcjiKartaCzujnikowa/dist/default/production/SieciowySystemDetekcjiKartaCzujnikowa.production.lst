

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 24 10:04:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           ; Version 2.05
    74                           ; Generated 20/12/2018 GMT
    75                           ; 
    76                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F4680 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataCOMRAM
   109  00186C                     __pidataCOMRAM:
   110                           	opt callstack 0
   111                           
   112                           ;initializer for MOC_Frame_Counter@zeta
   113  00186C  0011               	dw	17
   114                           
   115                           ;initializer for LED_Update@pos2
   116  00186E  0001               	dw	1
   117                           
   118                           ;initializer for LED_Update@pos1
   119  001870  0001               	dw	1
   120                           
   121                           ;initializer for _Fulfillment_Lvl
   122  001872  0014               	dw	20
   123                           
   124                           ;initializer for LED_Update@Green
   125  001874  01                 	db	1
   126  0000                     _RXFCON0	set	3540
   127  0000                     _MSEL3	set	3571
   128  0000                     _MSEL2	set	3570
   129  0000                     _MSEL1	set	3569
   130  0000                     _MSEL0	set	3568
   131  0000                     _BIE0	set	3578
   132  0000                     _BSEL0	set	3576
   133  0000                     _B5CON	set	3696
   134  0000                     _B4CON	set	3680
   135  0000                     _B3CON	set	3664
   136  0000                     _B2CON	set	3648
   137  0000                     _B1CON	set	3632
   138  0000                     _B0CON	set	3616
   139  0000                     _TXB0CONbits	set	3904
   140  0000                     _RXF3EIDL	set	3855
   141  0000                     _RXF3EIDH	set	3854
   142  0000                     _RXF3SIDL	set	3853
   143  0000                     _RXF3SIDH	set	3852
   144  0000                     _RXF2EIDL	set	3851
   145  0000                     _RXF2EIDH	set	3850
   146  0000                     _RXF2SIDLbits	set	3849
   147  0000                     _RXF2SIDL	set	3849
   148  0000                     _RXF2SIDH	set	3848
   149  0000                     _RXF1EIDL	set	3847
   150  0000                     _RXF1EIDH	set	3846
   151  0000                     _RXF1SIDLbits	set	3845
   152  0000                     _RXF1SIDL	set	3845
   153  0000                     _RXF1SIDH	set	3844
   154  0000                     _RXF0EIDL	set	3843
   155  0000                     _RXF0EIDH	set	3842
   156  0000                     _RXF0SIDLbits	set	3841
   157  0000                     _RXF0SIDL	set	3841
   158  0000                     _RXF0SIDH	set	3840
   159  0000                     _RXM1EIDL	set	3871
   160  0000                     _RXM1EIDH	set	3870
   161  0000                     _RXM1SIDL	set	3869
   162  0000                     _RXM1SIDH	set	3868
   163  0000                     _RXM0EIDL	set	3867
   164  0000                     _RXM0EIDH	set	3866
   165  0000                     _RXM0SIDL	set	3865
   166  0000                     _RXM0SIDH	set	3864
   167  0000                     _RXB1CON	set	3920
   168  0000                     _TXB0CON	set	3904
   169  0000                     _INTCONbits	set	4082
   170  0000                     _WDTCONbits	set	4049
   171  0000                     _RCONbits	set	4048
   172  0000                     _TRISC	set	3988
   173  0000                     _LATC	set	3979
   174  0000                     _T1CON	set	4045
   175  0000                     _TMR1H	set	4047
   176  0000                     _TMR1L	set	4046
   177  0000                     _LATE	set	3981
   178  0000                     _LATA	set	3977
   179  0000                     _LATB	set	3978
   180  0000                     _LATD	set	3980
   181  0000                     _TRISD	set	3989
   182  0000                     _TRISE	set	3990
   183  0000                     _TRISB	set	3987
   184  0000                     _TRISA	set	3986
   185  0000                     _RXB0DLCbits	set	3941
   186  0000                     _RXB0DLC	set	3941
   187  0000                     _RXB0SIDH	set	3937
   188  0000                     _RXB0SIDLbits	set	3938
   189  0000                     _RXB0SIDL	set	3938
   190  0000                     _RXB0EIDH	set	3939
   191  0000                     _RXB0EIDL	set	3940
   192  0000                     _COMSTATbits	set	3956
   193  0000                     _RXB0CONbits	set	3936
   194  0000                     _BRGCON3bits	set	3954
   195  0000                     _BRGCON2bits	set	3953
   196  0000                     _BRGCON1bits	set	3952
   197  0000                     _CIOCON	set	3955
   198  0000                     _ECANCON	set	3959
   199  0000                     _PIR3	set	4004
   200  0000                     _IPR3	set	4005
   201  0000                     _PIE3	set	4003
   202  0000                     _RXB0CON	set	3936
   203  0000                     _CANSTAT	set	3950
   204  0000                     _CANCON	set	3951
   205  0000                     _RCON	set	4048
   206  0000                     _RXB0D0	set	3942
   207  0000                     _TMR1IF	set	31984
   208  0000                     _TMR1IP	set	31992
   209  0000                     _PEIE	set	32662
   210  0000                     _IPEN	set	32391
   211  0000                     _TMR1ON	set	32360
   212  0000                     _TMR1IE	set	31976
   213  0000                     _IRCF0	set	32412
   214  0000                     _IRCF1	set	32413
   215  0000                     _IRCF2	set	32414
   216                           
   217                           ; #config settings
   218  0000                     
   219                           	psect	cinit
   220  001366                     __pcinit:
   221                           	opt callstack 0
   222  001366                     start_initialization:
   223                           	opt callstack 0
   224  001366                     __initialization:
   225                           	opt callstack 0
   226                           
   227                           ; Initialize objects allocated to COMRAM (9 bytes)
   228                           ; load TBLPTR registers with __pidataCOMRAM
   229  001366  0E6C               	movlw	low __pidataCOMRAM
   230  001368  6EF6               	movwf	tblptrl,c
   231  00136A  0E18               	movlw	high __pidataCOMRAM
   232  00136C  6EF7               	movwf	tblptrh,c
   233  00136E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   234  001370  6EF8               	movwf	tblptru,c
   235  001372  EE00  F042         	lfsr	0,__pdataCOMRAM
   236  001376  EE10 F009          	lfsr	1,9
   237  00137A                     copy_data0:
   238  00137A  0009               	tblrd		*+
   239  00137C  CFF5 FFEE          	movff	tablat,postinc0
   240  001380  50E5               	movf	postdec1,w,c
   241  001382  50E1               	movf	fsr1l,w,c
   242  001384  E1FA               	bnz	copy_data0
   243                           
   244                           ; Clear objects allocated to BIGRAM (544 bytes)
   245  001386  EE00  F0DF         	lfsr	0,__pbssBIGRAM
   246  00138A  EE12 F020          	lfsr	1,544
   247  00138E                     clear_0:
   248  00138E  6AEE               	clrf	postinc0,c
   249  001390  50E5               	movf	postdec1,w,c
   250  001392  50E1               	movf	fsr1l,w,c
   251  001394  E1FC               	bnz	clear_0
   252  001396  50E2               	movf	fsr1h,w,c
   253  001398  E1FA               	bnz	clear_0
   254                           
   255                           ; Clear objects allocated to BANK0 (110 bytes)
   256  00139A  EE00  F060         	lfsr	0,__pbssBANK0
   257  00139E  0E6E               	movlw	110
   258  0013A0                     clear_1:
   259  0013A0  6AEE               	clrf	postinc0,c
   260  0013A2  06E8               	decf	wreg,f,c
   261  0013A4  E1FD               	bnz	clear_1
   262                           
   263                           ; Clear objects allocated to COMRAM (29 bytes)
   264  0013A6  EE00  F025         	lfsr	0,__pbssCOMRAM
   265  0013AA  0E1D               	movlw	29
   266  0013AC                     clear_2:
   267  0013AC  6AEE               	clrf	postinc0,c
   268  0013AE  06E8               	decf	wreg,f,c
   269  0013B0  E1FD               	bnz	clear_2
   270  0013B2                     end_of_initialization:
   271                           	opt callstack 0
   272  0013B2                     __end_of__initialization:
   273                           	opt callstack 0
   274  0013B2  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   275  0013B4  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   276  0013B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   277  0013B8  6EF8               	movwf	tblptru,c
   278  0013BA  0100               	movlb	0
   279  0013BC  EF61  F00B         	goto	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMRAM
   282  000025                     __pbssCOMRAM:
   283                           	opt callstack 0
   284  000025                     _DaneCan:
   285                           	opt callstack 0
   286  000025                     	ds	4
   287  000029                     _NeightAdress8:
   288                           	opt callstack 0
   289  000029                     	ds	2
   290  00002B                     _NeightAdress7:
   291                           	opt callstack 0
   292  00002B                     	ds	2
   293  00002D                     _NeightAdress6:
   294                           	opt callstack 0
   295  00002D                     	ds	2
   296  00002F                     _NeightAdress5:
   297                           	opt callstack 0
   298  00002F                     	ds	2
   299  000031                     _NeightAdress4:
   300                           	opt callstack 0
   301  000031                     	ds	2
   302  000033                     _NeightAdress3:
   303                           	opt callstack 0
   304  000033                     	ds	2
   305  000035                     _NeightAdress2:
   306                           	opt callstack 0
   307  000035                     	ds	2
   308  000037                     _NeightAdress1:
   309                           	opt callstack 0
   310  000037                     	ds	2
   311  000039                     _TMR1_Update_flag:
   312                           	opt callstack 0
   313  000039                     	ds	2
   314  00003B                     _Dane:
   315                           	opt callstack 0
   316  00003B                     	ds	2
   317  00003D                     	ds	1
   318  00003E                     	ds	1
   319  00003F                     ISR_low@ramkaStanuU8:
   320                           	opt callstack 0
   321  00003F                     	ds	1
   322  000040                     	ds	1
   323  000041                     _LOCK:
   324                           	opt callstack 0
   325  000041                     	ds	1
   326                           
   327                           	psect	dataCOMRAM
   328  000042                     __pdataCOMRAM:
   329                           	opt callstack 0
   330  000042                     MOC_Frame_Counter@zeta:
   331                           	opt callstack 0
   332  000042                     	ds	2
   333  000044                     LED_Update@pos2:
   334                           	opt callstack 0
   335  000044                     	ds	2
   336  000046                     LED_Update@pos1:
   337                           	opt callstack 0
   338  000046                     	ds	2
   339  000048                     _Fulfillment_Lvl:
   340                           	opt callstack 0
   341  000048                     	ds	2
   342  00004A                     LED_Update@Green:
   343                           	opt callstack 0
   344  00004A                     	ds	1
   345                           
   346                           	psect	bssBANK0
   347  000060                     __pbssBANK0:
   348                           	opt callstack 0
   349  000060                     _ramkaCanRxKarty:
   350                           	opt callstack 0
   351  000060                     	ds	85
   352  0000B5                     _ramkaCanTxKarty:
   353                           	opt callstack 0
   354  0000B5                     	ds	17
   355  0000C6                     _Flagi:
   356                           	opt callstack 0
   357  0000C6                     	ds	5
   358  0000CB                     _DetectorLedRadar:
   359                           	opt callstack 0
   360  0000CB                     	ds	3
   361                           
   362                           	psect	bssBIGRAM
   363  0000DF                     __pbssBIGRAM:
   364                           	opt callstack 0
   365  0000DF                     _wartosciSasiada:
   366                           	opt callstack 0
   367  0000DF                     	ds	544
   368                           
   369                           	psect	cstackBANK0
   370  0000CE                     __pcstackBANK0:
   371                           	opt callstack 0
   372  0000CE                     TRM_DataTransmition@canMessage:
   373                           	opt callstack 0
   374                           
   375                           ; 17 bytes @ 0x0
   376  0000CE                     	ds	17
   377                           
   378                           	psect	cstackCOMRAM
   379  000001                     __pcstackCOMRAM:
   380                           	opt callstack 0
   381  000001                     TMR1_Timer_reset@t1L:
   382                           	opt callstack 0
   383  000001                     i1TMR1_Update_flag_Set@a:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x0
   387  000001                     	ds	1
   388  000002                     TMR1_Timer_reset@t1H:
   389                           	opt callstack 0
   390                           
   391                           ; 1 bytes @ 0x1
   392  000002                     	ds	1
   393  000003                     ??_ISR_low:
   394  000003                     
   395                           ; 1 bytes @ 0x2
   396  000003                     	ds	3
   397  000006                     ??_CAN_Setup:
   398  000006                     ?_TMR1_Update_flag_Get:
   399                           	opt callstack 0
   400  000006                     ?_LED_Right:
   401                           	opt callstack 0
   402  000006                     ?_LED_Left:
   403                           	opt callstack 0
   404  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   405                           	opt callstack 0
   406  000006                     ?_MOC_Frame_Counter:
   407                           	opt callstack 0
   408  000006                     ?_MOC_Aktualna_Temperatura:
   409                           	opt callstack 0
   410  000006                     ?_MOC_NOTWORK:
   411                           	opt callstack 0
   412  000006                     ?_MOCK_PrzyspieszenieX:
   413                           	opt callstack 0
   414  000006                     ?_MOCK_PrzyspieszenieY:
   415                           	opt callstack 0
   416  000006                     ?_MOCK_PrzyspieszenieZ:
   417                           	opt callstack 0
   418  000006                     ?_MOCK_Klikniecie_Spadek:
   419                           	opt callstack 0
   420  000006                     ?___awdiv:
   421                           	opt callstack 0
   422  000006                     ?___lwdiv:
   423                           	opt callstack 0
   424  000006                     LOCK_Set@k:
   425                           	opt callstack 0
   426  000006                     CAN_MoveBuffIntoFrame@Ram:
   427                           	opt callstack 0
   428  000006                     CAN_GenID@message:
   429                           	opt callstack 0
   430  000006                     LED_Right@a:
   431                           	opt callstack 0
   432  000006                     LED_Left@a:
   433                           	opt callstack 0
   434  000006                     LED_Control@diode:
   435                           	opt callstack 0
   436  000006                     TMR1_Update_flag_Set@a:
   437                           	opt callstack 0
   438  000006                     IsInNeighbors@message_adress:
   439                           	opt callstack 0
   440  000006                     FRAME_ExcitationValue@message:
   441                           	opt callstack 0
   442  000006                     FRAME_ExcitationMultiplier@message:
   443                           	opt callstack 0
   444  000006                     FRAME_AveragingTimes@message:
   445                           	opt callstack 0
   446  000006                     FRAME_AxisStatus@message:
   447                           	opt callstack 0
   448  000006                     FRAME_DataUpdateAndChangeOption@message:
   449                           	opt callstack 0
   450  000006                     FRAME_MapPosition@message:
   451                           	opt callstack 0
   452  000006                     FRAME_SoftwareVersion@message:
   453                           	opt callstack 0
   454  000006                     FRAME_AnalogValue@message:
   455                           	opt callstack 0
   456  000006                     FRAME_PrzypisanieDokarty@message:
   457                           	opt callstack 0
   458  000006                     FRAME_AdressOfNeighbors@message:
   459                           	opt callstack 0
   460  000006                     ___awdiv@dividend:
   461                           	opt callstack 0
   462  000006                     ___lwdiv@dividend:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x5
   466  000006                     	ds	2
   467  000008                     ??_LED_Right:
   468  000008                     ??_FRAME_DataUpdateAndChangeOption:
   469  000008                     ??_FRAME_PrzypisanieDokarty:
   470  000008                     CAN_GenID@frameID:
   471                           	opt callstack 0
   472  000008                     CAN_MoveBuffIntoFrame@Buf:
   473                           	opt callstack 0
   474  000008                     LED_Left@b:
   475                           	opt callstack 0
   476  000008                     FRAME_AccelerometerStatus@message:
   477                           	opt callstack 0
   478  000008                     FRAME_AnalogValue@set:
   479                           	opt callstack 0
   480  000008                     FRAME_AdressOfNeighbors@nrRamki:
   481                           	opt callstack 0
   482  000008                     ___awdiv@divisor:
   483                           	opt callstack 0
   484  000008                     ___lwdiv@divisor:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x7
   488  000008                     	ds	1
   489  000009                     ??_CAN_GenID:
   490  000009                     FRAME_ExcitationMultiplier@i:
   491                           	opt callstack 0
   492  000009                     FRAME_DeviceReset@message:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x8
   496  000009                     	ds	1
   497  00000A                     ??_FRAME_AdressOfNeighbors:
   498  00000A                     CAN_MoveBuffIntoFrame@i:
   499                           	opt callstack 0
   500  00000A                     LED_Control@color:
   501                           	opt callstack 0
   502  00000A                     ___awdiv@counter:
   503                           	opt callstack 0
   504  00000A                     ___lwdiv@counter:
   505                           	opt callstack 0
   506  00000A                     LED_Right@b:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x9
   510  00000A                     	ds	1
   511  00000B                     ___awdiv@sign:
   512                           	opt callstack 0
   513  00000B                     CAN_SendFrame@message:
   514                           	opt callstack 0
   515  00000B                     FRAME_SensorExcitationStatus@message:
   516                           	opt callstack 0
   517  00000B                     ___lwdiv@quotient:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0xA
   521  00000B                     	ds	1
   522  00000C                     ___awdiv@quotient:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0xB
   526  00000C                     	ds	1
   527  00000D                     ??_CAN_SendFrame:
   528  00000D                     LED_Light_Pos@pos:
   529                           	opt callstack 0
   530  00000D                     FRAME_Plot@message:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0xC
   534  00000D                     	ds	1
   535  00000E                     CAN_TakeFrame@message:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0xD
   539  00000E                     	ds	1
   540  00000F                     ??_FRAME_Plot:
   541  00000F                     LED_Light_Pos@fulfillment:
   542                           	opt callstack 0
   543  00000F                     FRAME_SensorExcitationStatus@iterator_beta:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0xE
   547  00000F                     	ds	1
   548  000010                     ??_CAN_TakeFrame:
   549                           
   550                           ; 1 bytes @ 0xF
   551  000010                     	ds	1
   552  000011                     LED_Light_Pos@color:
   553                           	opt callstack 0
   554                           
   555                           ; 1 bytes @ 0x10
   556  000011                     	ds	1
   557  000012                     CAN_TakeFrame@tempCON:
   558                           	opt callstack 0
   559  000012                     LED_Light_Pos@LED_array:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x11
   563  000012                     	ds	1
   564  000013                     CAN_TakeFrame@k:
   565                           	opt callstack 0
   566                           
   567                           ; 1 bytes @ 0x12
   568  000013                     	ds	1
   569  000014                     LED_Light_Pos@pos2:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x13
   573  000014                     	ds	2
   574  000016                     LED_Light_Pos@flage:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x15
   578  000016                     	ds	2
   579  000018                     FRAME_AdressOfNeighbors@kier:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x17
   583  000018                     	ds	2
   584  00001A                     FRAME_AdressOfNeighbors@i:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x19
   588  00001A                     	ds	2
   589  00001C                     FRAME_HandleCanFrame@message:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x1B
   593  00001C                     	ds	2
   594  00001E                     ??_FRAME_HandleCanFrame:
   595                           
   596                           ; 1 bytes @ 0x1D
   597  00001E                     	ds	4
   598  000022                     FRAME_HandleCanFrame@ident:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x21
   602  000022                     	ds	2
   603  000024                     FRAME_HandleCanFrame@identyfikator:
   604                           	opt callstack 0
   605                           
   606                           ; 1 bytes @ 0x23
   607  000024                     	ds	1
   608  000025                     
   609                           ; 1 bytes @ 0x24
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 94 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   633 ;;Total ram usage:        0 bytes
   634 ;; Hardware stack levels required when called:    8
   635 ;; This function calls:
   636 ;;		_INI_All
   637 ;;		_LED_Update
   638 ;;		_TMR1_Update_flag_Get
   639 ;;		_TMR1_Update_flag_Set
   640 ;;		_TRM_DataTransmition
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text0
   647  0016C2                     __ptext0:
   648                           	opt callstack 0
   649  0016C2                     _main:
   650                           	opt callstack 23
   651                           
   652                           ;main.c: 96:     INI_All();
   653                           
   654                           ;incstack = 0
   655  0016C2  ECE2  F00B         	call	_INI_All	;wreg free
   656                           
   657                           ;main.c: 98:     RCON = 0xFF;
   658  0016C6  68D0               	setf	4048,c	;volatile
   659  0016C8                     l4151:
   660                           
   661                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   662  0016C8  0100               	movlb	0	; () banked
   663  0016CA  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   664                           
   665                           ; BSR set to: 0
   666                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   667  0016CC  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   668                           
   669                           ; BSR set to: 0
   670                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   671  0016CE  EC2C  F00C         	call	_TMR1_Update_flag_Get	;wreg free
   672  0016D2  0406               	decf	?_TMR1_Update_flag_Get,w,c
   673  0016D4  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   674  0016D6  A4D8               	btfss	status,2,c
   675  0016D8  D008               	goto	l4161
   676                           
   677                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   678  0016DA  EC9E  F008         	call	_LED_Update	;wreg free
   679                           
   680                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   681  0016DE  0E00               	movlw	0
   682  0016E0  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   683  0016E2  0E00               	movlw	0
   684  0016E4  6E06               	movwf	TMR1_Update_flag_Set@a,c
   685  0016E6  EC27  F00C         	call	_TMR1_Update_flag_Set	;wreg free
   686  0016EA                     l4161:
   687                           
   688                           ;main.c: 115:         TRM_DataTransmition();
   689  0016EA  EC89  F00A         	call	_TRM_DataTransmition	;wreg free
   690  0016EE  0004               	clrwdt		;# 
   691                           
   692                           ;main.c: 117:     }
   693  0016F0  D7EB               	goto	l4151
   694  0016F2                     __end_of_main:
   695                           	opt callstack 0
   696                           
   697 ;; *************** function _TRM_DataTransmition *****************
   698 ;; Defined at:
   699 ;;		line 19 in file "TRM.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  canMessage     17    0[BANK0 ] struct .
   704 ;;  i               1    0        unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   715 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   718 ;;Total ram usage:       17 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    7
   721 ;; This function calls:
   722 ;;		_CAN_TakeFrame
   723 ;;		_FRAME_HandleCanFrame
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text1
   730  001512                     __ptext1:
   731                           	opt callstack 0
   732  001512                     _TRM_DataTransmition:
   733                           	opt callstack 23
   734                           
   735                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   736                           
   737                           ;incstack = 0
   738  001512  A025               	btfss	_DaneCan,0,c
   739  001514  D014               	goto	l4137
   740                           
   741                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   742  001516  0E02               	movlw	2
   743  001518  0100               	movlb	0	; () banked
   744  00151A  6FCF               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   745                           
   746                           ;TRM.c: 30:         canMessage.id.Val = 0;
   747  00151C  0E00               	movlw	0
   748  00151E  6FD2               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   749  001520  0E00               	movlw	0
   750  001522  6FD3               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   751  001524  0E00               	movlw	0
   752  001526  6FD4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   753  001528  0E00               	movlw	0
   754  00152A  6FD5               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
   755                           
   756                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   757  00152C  0E04               	movlw	4
   758  00152E  6FD4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   759                           
   760                           ; BSR set to: 0
   761                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   762  001530  0ECE               	movlw	low TRM_DataTransmition@canMessage
   763  001532  6E1C               	movwf	FRAME_HandleCanFrame@message,c
   764  001534  0E00               	movlw	high TRM_DataTransmition@canMessage
   765  001536  6E1D               	movwf	FRAME_HandleCanFrame@message+1,c
   766  001538  EC93  F003         	call	_FRAME_HandleCanFrame	;wreg free
   767                           
   768                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   769  00153C  9025               	bcf	_DaneCan,0,c
   770  00153E                     l4137:
   771                           
   772                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   773  00153E  0ECE               	movlw	low TRM_DataTransmition@canMessage
   774  001540  6E0E               	movwf	CAN_TakeFrame@message,c
   775  001542  0E00               	movlw	high TRM_DataTransmition@canMessage
   776  001544  6E0F               	movwf	CAN_TakeFrame@message+1,c
   777  001546  EC55  F002         	call	_CAN_TakeFrame	;wreg free
   778  00154A  0900               	iorlw	0
   779  00154C  B4D8               	btfsc	status,2,c
   780  00154E  0012               	return	
   781                           
   782                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   783  001550  0ECE               	movlw	low TRM_DataTransmition@canMessage
   784  001552  6E1C               	movwf	FRAME_HandleCanFrame@message,c
   785  001554  0E00               	movlw	high TRM_DataTransmition@canMessage
   786  001556  6E1D               	movwf	FRAME_HandleCanFrame@message+1,c
   787  001558  EC93  F003         	call	_FRAME_HandleCanFrame	;wreg free
   788                           
   789                           ;TRM.c: 67:         }
   790  00155C  0012               	return		;funcret
   791  00155E                     __end_of_TRM_DataTransmition:
   792                           	opt callstack 0
   793                           
   794 ;; *************** function _FRAME_HandleCanFrame *****************
   795 ;; Defined at:
   796 ;;		line 635 in file "FRAME.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  message         2   27[COMRAM] PTR struct .
   799 ;;		 -> TRM_DataTransmition@canMessage(17), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  ident           2   33[COMRAM] unsigned short 
   802 ;;  alfa            2    0        int 
   803 ;;  identyfikato    1   35[COMRAM] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   814 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   816 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   817 ;;Total ram usage:        9 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    6
   820 ;; This function calls:
   821 ;;		_CAN_GenID
   822 ;;		_CAN_SendFrame
   823 ;;		_FRAME_AccelerometerStatus
   824 ;;		_FRAME_AdressOfNeighbors
   825 ;;		_FRAME_AnalogValue
   826 ;;		_FRAME_AveragingTimes
   827 ;;		_FRAME_AxisStatus
   828 ;;		_FRAME_DeviceReset
   829 ;;		_FRAME_ExcitationMultiplier
   830 ;;		_FRAME_ExcitationValue
   831 ;;		_FRAME_MapPosition
   832 ;;		_FRAME_Plot
   833 ;;		_FRAME_PrzypisanieDokarty
   834 ;;		_FRAME_SensorExcitationStatus
   835 ;;		_FRAME_SoftwareVersion
   836 ;;		_LED_Error
   837 ;;		___awdiv
   838 ;; This function is called by:
   839 ;;		_TRM_DataTransmition
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text2
   844  000726                     __ptext2:
   845                           	opt callstack 0
   846  000726                     _FRAME_HandleCanFrame:
   847                           	opt callstack 23
   848                           
   849                           ;FRAME.c: 635: void FRAME_HandleCanFrame(mID * message);FRAME.c: 636: {;FRAME.c: 637:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   850                           
   851                           ;incstack = 0
   852  000726  EE20 F006          	lfsr	2,6
   853  00072A  501C               	movf	FRAME_HandleCanFrame@message,w,c
   854  00072C  26D9               	addwf	fsr2l,f,c
   855  00072E  501D               	movf	FRAME_HandleCanFrame@message+1,w,c
   856  000730  22DA               	addwfc	fsr2h,f,c
   857  000732  50DF               	movf	indf2,w,c
   858  000734  6E1E               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   859  000736  501E               	movf	??_FRAME_HandleCanFrame,w,c
   860  000738  6E06               	movwf	___awdiv@dividend,c
   861  00073A  6A07               	clrf	___awdiv@dividend+1,c
   862  00073C  0E00               	movlw	0
   863  00073E  6E09               	movwf	___awdiv@divisor+1,c
   864  000740  0E04               	movlw	4
   865  000742  6E08               	movwf	___awdiv@divisor,c
   866  000744  EC5C  F008         	call	___awdiv	;wreg free
   867  000748  5006               	movf	?___awdiv,w,c
   868  00074A  6E24               	movwf	FRAME_HandleCanFrame@identyfikator,c
   869                           
   870                           ;FRAME.c: 640:     if(identyfikator != 0x01)
   871  00074C  0424               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   872  00074E  B4D8               	btfsc	status,2,c
   873  000750  D074               	goto	l4089
   874                           
   875                           ;FRAME.c: 641:     {;FRAME.c: 642:         WORD ident = identyfikator;
   876  000752  C024  F022         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   877  000756  6A23               	clrf	FRAME_HandleCanFrame@ident+1,c
   878  000758  D070               	goto	l4089
   879  00075A                     l4059:
   880                           
   881                           ;FRAME.c: 649:             FRAME_SensorExcitationStatus(message);
   882  00075A  C01C  F00B         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   883  00075E  C01D  F00C         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   884  000762  EC98  F006         	call	_FRAME_SensorExcitationStatus	;wreg free
   885                           
   886                           ;FRAME.c: 650:             break;
   887  000766  D09E               	goto	l4091
   888  000768                     l4061:
   889                           
   890                           ;FRAME.c: 652:             FRAME_AccelerometerStatus(message);
   891  000768  C01C  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   892  00076C  C01D  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   893  000770  EC17  F009         	call	_FRAME_AccelerometerStatus	;wreg free
   894                           
   895                           ;FRAME.c: 653:             break;
   896  000774  D097               	goto	l4091
   897  000776                     l4063:
   898                           
   899                           ;FRAME.c: 655:             FRAME_ExcitationValue(message);
   900  000776  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   901  00077A  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   902  00077E  ECF6  F00A         	call	_FRAME_ExcitationValue	;wreg free
   903                           
   904                           ;FRAME.c: 656:             break;
   905  000782  D090               	goto	l4091
   906  000784                     l4065:
   907                           
   908                           ;FRAME.c: 658:             FRAME_ExcitationMultiplier(message);
   909  000784  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   910  000788  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   911  00078C  EC62  F00A         	call	_FRAME_ExcitationMultiplier	;wreg free
   912                           
   913                           ;FRAME.c: 659:             break;
   914  000790  D089               	goto	l4091
   915  000792                     l4067:
   916                           
   917                           ;FRAME.c: 661:             FRAME_AveragingTimes(message);
   918  000792  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   919  000796  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   920  00079A  EC2C  F00B         	call	_FRAME_AveragingTimes	;wreg free
   921                           
   922                           ;FRAME.c: 662:             break;
   923  00079E  D082               	goto	l4091
   924  0007A0                     l4069:
   925                           
   926                           ;FRAME.c: 664:             FRAME_AxisStatus(message);
   927  0007A0  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   928  0007A4  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   929  0007A8  EC11  F00B         	call	_FRAME_AxisStatus	;wreg free
   930                           
   931                           ;FRAME.c: 665:             break;
   932  0007AC  D07B               	goto	l4091
   933  0007AE                     l4071:
   934                           
   935                           ;FRAME.c: 667:             FRAME_DeviceReset(message);
   936  0007AE  C01C  F009         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   937  0007B2  C01D  F00A         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   938  0007B6  ECF8  F005         	call	_FRAME_DeviceReset	;wreg free
   939                           
   940                           ;FRAME.c: 668:             break;
   941  0007BA  D074               	goto	l4091
   942  0007BC                     l4073:
   943                           
   944                           ;FRAME.c: 670:             FRAME_Plot(message);
   945  0007BC  C01C  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   946  0007C0  C01D  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   947  0007C4  EC0D  F00A         	call	_FRAME_Plot	;wreg free
   948                           
   949                           ;FRAME.c: 671:             break;
   950  0007C8  D06D               	goto	l4091
   951  0007CA                     l4075:
   952                           
   953                           ;FRAME.c: 673:             FRAME_MapPosition(message);
   954  0007CA  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   955  0007CE  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   956  0007D2  EC48  F00C         	call	_FRAME_MapPosition	;wreg free
   957                           
   958                           ;FRAME.c: 674:             break;
   959  0007D6  D066               	goto	l4091
   960  0007D8                     l4077:
   961                           
   962                           ;FRAME.c: 676:             FRAME_SoftwareVersion(message);
   963  0007D8  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   964  0007DC  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   965  0007E0  EC52  F009         	call	_FRAME_SoftwareVersion	;wreg free
   966                           
   967                           ;FRAME.c: 677:             break;
   968  0007E4  D05F               	goto	l4091
   969  0007E6                     l4079:
   970                           
   971                           ;FRAME.c: 680:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   972  0007E6  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   973  0007EA  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   974  0007EE  0EF4               	movlw	244
   975  0007F0  2424               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   976  0007F2  6E08               	movwf	FRAME_AnalogValue@set,c
   977  0007F4  6A09               	clrf	FRAME_AnalogValue@set+1,c
   978  0007F6  0EFF               	movlw	255
   979  0007F8  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   980  0007FA  EC49  F00C         	call	_FRAME_AnalogValue	;wreg free
   981                           
   982                           ;FRAME.c: 681:             break;
   983  0007FE  D052               	goto	l4091
   984  000800                     l4081:
   985                           
   986                           ;FRAME.c: 683:             FRAME_PrzypisanieDokarty(message);
   987  000800  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   988  000804  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   989  000808  EC7D  F007         	call	_FRAME_PrzypisanieDokarty	;wreg free
   990                           
   991                           ;FRAME.c: 684:             break;
   992  00080C  D04B               	goto	l4091
   993  00080E                     l4083:
   994                           
   995                           ;FRAME.c: 686:             FRAME_AdressOfNeighbors(message,0x10);
   996  00080E  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   997  000812  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   998  000816  0E00               	movlw	0
   999  000818  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1000  00081A  0E10               	movlw	16
  1001  00081C  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1002  00081E  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1003                           
  1004                           ;FRAME.c: 687:             break;
  1005  000822  D040               	goto	l4091
  1006  000824                     l4085:
  1007                           
  1008                           ;FRAME.c: 689:             FRAME_AdressOfNeighbors(message,0x11);
  1009  000824  C01C  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1010  000828  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1011  00082C  0E00               	movlw	0
  1012  00082E  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1013  000830  0E11               	movlw	17
  1014  000832  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1015  000834  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1016                           
  1017                           ;FRAME.c: 690:             break;
  1018  000838  D035               	goto	l4091
  1019  00083A                     l4089:
  1020  00083A  5024               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1021  00083C  6E1E               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1022  00083E  6A1F               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1023                           
  1024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1025                           ; Switch size 1, requested type "simple"
  1026                           ; Number of cases is 1, Range of values is 0 to 0
  1027                           ; switch strategies available:
  1028                           ; Name         Instructions Cycles
  1029                           ; simple_byte            4     3 (average)
  1030                           ;	Chosen strategy is simple_byte
  1031  000840  501F               	movf	??_FRAME_HandleCanFrame+1,w,c
  1032  000842  0A00               	xorlw	0	; case 0
  1033  000844  A4D8               	btfss	status,2,c
  1034  000846  D02E               	goto	l4091
  1035                           
  1036                           ; Switch size 1, requested type "simple"
  1037                           ; Number of cases is 15, Range of values is 1 to 17
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; simple_byte           46    24 (average)
  1041                           ;	Chosen strategy is simple_byte
  1042  000848  501E               	movf	??_FRAME_HandleCanFrame,w,c
  1043  00084A  0A01               	xorlw	1	; case 1
  1044  00084C  B4D8               	btfsc	status,2,c
  1045  00084E  D785               	goto	l4059
  1046  000850  0A03               	xorlw	3	; case 2
  1047  000852  B4D8               	btfsc	status,2,c
  1048  000854  D789               	goto	l4061
  1049  000856  0A01               	xorlw	1	; case 3
  1050  000858  B4D8               	btfsc	status,2,c
  1051  00085A  D78D               	goto	l4063
  1052  00085C  0A07               	xorlw	7	; case 4
  1053  00085E  B4D8               	btfsc	status,2,c
  1054  000860  D791               	goto	l4065
  1055  000862  0A01               	xorlw	1	; case 5
  1056  000864  B4D8               	btfsc	status,2,c
  1057  000866  D795               	goto	l4067
  1058  000868  0A03               	xorlw	3	; case 6
  1059  00086A  B4D8               	btfsc	status,2,c
  1060  00086C  D799               	goto	l4069
  1061  00086E  0A01               	xorlw	1	; case 7
  1062  000870  B4D8               	btfsc	status,2,c
  1063  000872  D79D               	goto	l4071
  1064  000874  0A0E               	xorlw	14	; case 9
  1065  000876  B4D8               	btfsc	status,2,c
  1066  000878  D7A1               	goto	l4073
  1067  00087A  0A03               	xorlw	3	; case 10
  1068  00087C  B4D8               	btfsc	status,2,c
  1069  00087E  D7A5               	goto	l4075
  1070  000880  0A01               	xorlw	1	; case 11
  1071  000882  B4D8               	btfsc	status,2,c
  1072  000884  D7A9               	goto	l4077
  1073  000886  0A07               	xorlw	7	; case 12
  1074  000888  B4D8               	btfsc	status,2,c
  1075  00088A  D7AD               	goto	l4079
  1076  00088C  0A01               	xorlw	1	; case 13
  1077  00088E  B4D8               	btfsc	status,2,c
  1078  000890  D7AA               	goto	l4079
  1079  000892  0A02               	xorlw	2	; case 15
  1080  000894  B4D8               	btfsc	status,2,c
  1081  000896  D7B4               	goto	l4081
  1082  000898  0A1F               	xorlw	31	; case 16
  1083  00089A  B4D8               	btfsc	status,2,c
  1084  00089C  D7B8               	goto	l4083
  1085  00089E  0A01               	xorlw	1	; case 17
  1086  0008A0  B4D8               	btfsc	status,2,c
  1087  0008A2  D7C0               	goto	l4085
  1088  0008A4                     l4091:
  1089                           
  1090                           ;FRAME.c: 699:     if(message->message_type == 0x02)
  1091  0008A4  EE20 F001          	lfsr	2,1
  1092  0008A8  501C               	movf	FRAME_HandleCanFrame@message,w,c
  1093  0008AA  26D9               	addwf	fsr2l,f,c
  1094  0008AC  501D               	movf	FRAME_HandleCanFrame@message+1,w,c
  1095  0008AE  22DA               	addwfc	fsr2h,f,c
  1096  0008B0  0E02               	movlw	2
  1097  0008B2  18DE               	xorwf	postinc2,w,c
  1098  0008B4  A4D8               	btfss	status,2,c
  1099  0008B6  0012               	return	
  1100                           
  1101                           ;FRAME.c: 700:     {;FRAME.c: 702:         message->frame_type = 0x03;
  1102  0008B8  EE20 F002          	lfsr	2,2
  1103  0008BC  501C               	movf	FRAME_HandleCanFrame@message,w,c
  1104  0008BE  26D9               	addwf	fsr2l,f,c
  1105  0008C0  501D               	movf	FRAME_HandleCanFrame@message+1,w,c
  1106  0008C2  22DA               	addwfc	fsr2h,f,c
  1107  0008C4  0E03               	movlw	3
  1108  0008C6  6EDF               	movwf	indf2,c
  1109                           
  1110                           ;FRAME.c: 703:         message->message_type = 0x01;
  1111  0008C8  EE20 F001          	lfsr	2,1
  1112  0008CC  501C               	movf	FRAME_HandleCanFrame@message,w,c
  1113  0008CE  26D9               	addwf	fsr2l,f,c
  1114  0008D0  501D               	movf	FRAME_HandleCanFrame@message+1,w,c
  1115  0008D2  22DA               	addwfc	fsr2h,f,c
  1116  0008D4  0E01               	movlw	1
  1117  0008D6  6EDF               	movwf	indf2,c
  1118                           
  1119                           ;FRAME.c: 704:         message->id.Val = 0;
  1120  0008D8  EE20 F004          	lfsr	2,4
  1121  0008DC  501C               	movf	FRAME_HandleCanFrame@message,w,c
  1122  0008DE  26D9               	addwf	fsr2l,f,c
  1123  0008E0  501D               	movf	FRAME_HandleCanFrame@message+1,w,c
  1124  0008E2  22DA               	addwfc	fsr2h,f,c
  1125  0008E4  6ADE               	clrf	postinc2,c
  1126  0008E6  6ADE               	clrf	postinc2,c
  1127  0008E8  6ADE               	clrf	postinc2,c
  1128  0008EA  6ADD               	clrf	postdec2,c
  1129                           
  1130                           ;FRAME.c: 706:         message->id.v[2] = identyfikator*4;
  1131  0008EC  5024               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1132  0008EE  0D04               	mullw	4
  1133  0008F0  EE20 F006          	lfsr	2,6
  1134  0008F4  501C               	movf	FRAME_HandleCanFrame@message,w,c
  1135  0008F6  26D9               	addwf	fsr2l,f,c
  1136  0008F8  501D               	movf	FRAME_HandleCanFrame@message+1,w,c
  1137  0008FA  22DA               	addwfc	fsr2h,f,c
  1138  0008FC  CFF3 FFDF          	movff	prodl,indf2
  1139                           
  1140                           ;FRAME.c: 707:         CAN_GenID(message,identyfikator);
  1141  000900  C01C  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1142  000904  C01D  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1143  000908  C024  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1144  00090C  ECCC  F007         	call	_CAN_GenID	;wreg free
  1145                           
  1146                           ;FRAME.c: 708:         CAN_SendFrame(message);
  1147  000910  C01C  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1148  000914  C01D  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1149  000918  EC96  F004         	call	_CAN_SendFrame	;wreg free
  1150                           
  1151                           ;FRAME.c: 719:        while(RXB0CONbits.FILHIT3)
  1152  00091C  D004               	goto	l574
  1153  00091E                     l575:
  1154                           
  1155                           ;FRAME.c: 720:        {;FRAME.c: 721:            if(TXB0CONbits.TXERR == 1){
  1156  00091E  010F               	movlb	15	; () banked
  1157  000920  B940               	btfsc	64,4,b	;volatile
  1158                           
  1159                           ; BSR set to: 15
  1160                           ;FRAME.c: 722:                LED_Error();
  1161  000922  ECC4  F00B         	call	_LED_Error	;wreg free
  1162  000926                     l574:
  1163                           
  1164                           ;FRAME.c: 719:        while(RXB0CONbits.FILHIT3)
  1165  000926  A660               	btfss	3936,3,c	;volatile
  1166  000928  0012               	return	
  1167  00092A  D7F9               	goto	l575
  1168  00092C                     __end_of_FRAME_HandleCanFrame:
  1169                           	opt callstack 0
  1170                           
  1171 ;; *************** function _FRAME_SoftwareVersion *****************
  1172 ;; Defined at:
  1173 ;;		line 463 in file "FRAME.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  message         2    5[COMRAM] PTR struct .
  1176 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1192 ;;Total ram usage:        3 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    3
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_FRAME_HandleCanFrame
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text3
  1203  0012A4                     __ptext3:
  1204                           	opt callstack 0
  1205  0012A4                     _FRAME_SoftwareVersion:
  1206                           	opt callstack 25
  1207                           
  1208                           ;FRAME.c: 463: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 464: {;FRAME.c: 
      +                          466:     if(message->message_type == 0x02)
  1209                           
  1210                           ;incstack = 0
  1211  0012A4  EE20 F001          	lfsr	2,1
  1212  0012A8  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1213  0012AA  26D9               	addwf	fsr2l,f,c
  1214  0012AC  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1215  0012AE  22DA               	addwfc	fsr2h,f,c
  1216  0012B0  0E02               	movlw	2
  1217  0012B2  18DE               	xorwf	postinc2,w,c
  1218  0012B4  A4D8               	btfss	status,2,c
  1219  0012B6  0012               	return	
  1220                           
  1221                           ;FRAME.c: 467:     {;FRAME.c: 468:         message->data_length = 4;
  1222  0012B8  EE20 F010          	lfsr	2,16
  1223  0012BC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1224  0012BE  26D9               	addwf	fsr2l,f,c
  1225  0012C0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1226  0012C2  22DA               	addwfc	fsr2h,f,c
  1227  0012C4  0E04               	movlw	4
  1228  0012C6  6EDF               	movwf	indf2,c
  1229                           
  1230                           ;FRAME.c: 469:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1231  0012C8  EE20 F008          	lfsr	2,8
  1232  0012CC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1233  0012CE  26D9               	addwf	fsr2l,f,c
  1234  0012D0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1235  0012D2  22DA               	addwfc	fsr2h,f,c
  1236  0012D4  5005               	movf	5,w,c
  1237  0012D6  6EDF               	movwf	indf2,c
  1238                           
  1239                           ;FRAME.c: 470:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1240  0012D8  EE20 F009          	lfsr	2,9
  1241  0012DC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1242  0012DE  26D9               	addwf	fsr2l,f,c
  1243  0012E0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1244  0012E2  22DA               	addwfc	fsr2h,f,c
  1245  0012E4  C004 FFDF          	movff	4,indf2
  1246                           
  1247                           ;FRAME.c: 471:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1248  0012E8  EE20 F00A          	lfsr	2,10
  1249  0012EC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1250  0012EE  26D9               	addwf	fsr2l,f,c
  1251  0012F0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1252  0012F2  22DA               	addwfc	fsr2h,f,c
  1253  0012F4  500B               	movf	11,w,c
  1254  0012F6  6EDF               	movwf	indf2,c
  1255                           
  1256                           ;FRAME.c: 472:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1257  0012F8  EE20 F00B          	lfsr	2,11
  1258  0012FC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1259  0012FE  26D9               	addwf	fsr2l,f,c
  1260  001300  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1261  001302  22DA               	addwfc	fsr2h,f,c
  1262  001304  C00A FFDF          	movff	10,indf2
  1263                           
  1264                           ;FRAME.c: 473:     }
  1265  001308  0012               	return		;funcret
  1266  00130A                     __end_of_FRAME_SoftwareVersion:
  1267                           	opt callstack 0
  1268                           
  1269 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1270 ;; Defined at:
  1271 ;;		line 43 in file "FRAME.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  message         2   10[COMRAM] PTR struct .
  1274 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  iterator_bet    2   14[COMRAM] unsigned short 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1289 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1290 ;;Total ram usage:        6 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    5
  1293 ;; This function calls:
  1294 ;;		_IsInNeighbors
  1295 ;;		_LED_Clear
  1296 ;;		_LED_Error
  1297 ;;		_LOCK_Get
  1298 ;;		_LOCK_Set
  1299 ;;		_MOC_Aktualna_Temperatura
  1300 ;;		_MOC_Frame_Counter
  1301 ;;		_MOC_NOTWORK
  1302 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1303 ;; This function is called by:
  1304 ;;		_FRAME_HandleCanFrame
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text4
  1309  000D30                     __ptext4:
  1310                           	opt callstack 0
  1311  000D30                     _FRAME_SensorExcitationStatus:
  1312                           	opt callstack 23
  1313                           
  1314                           ;FRAME.c: 43: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 44: {;FRAM
      +                          E.c: 45:     if(message->message_type == 0x02)
  1315                           
  1316                           ;incstack = 0
  1317  000D30  EE20 F001          	lfsr	2,1
  1318  000D34  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1319  000D36  26D9               	addwf	fsr2l,f,c
  1320  000D38  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1321  000D3A  22DA               	addwfc	fsr2h,f,c
  1322  000D3C  0E02               	movlw	2
  1323  000D3E  18DE               	xorwf	postinc2,w,c
  1324  000D40  A4D8               	btfss	status,2,c
  1325  000D42  D047               	goto	l3727
  1326                           
  1327                           ;FRAME.c: 46:     {;FRAME.c: 47:         message->data_length = 6;
  1328  000D44  EE20 F010          	lfsr	2,16
  1329  000D48  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1330  000D4A  26D9               	addwf	fsr2l,f,c
  1331  000D4C  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1332  000D4E  22DA               	addwfc	fsr2h,f,c
  1333  000D50  0E06               	movlw	6
  1334  000D52  6EDF               	movwf	indf2,c
  1335                           
  1336                           ;FRAME.c: 53:         message->data[0] = LOCK_Get();
  1337  000D54  EE20 F008          	lfsr	2,8
  1338  000D58  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1339  000D5A  26D9               	addwf	fsr2l,f,c
  1340  000D5C  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1341  000D5E  22DA               	addwfc	fsr2h,f,c
  1342  000D60  EC46  F00C         	call	_LOCK_Get	;wreg free
  1343  000D64  6EDF               	movwf	indf2,c
  1344                           
  1345                           ;FRAME.c: 54:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1346  000D66  EE20 F009          	lfsr	2,9
  1347  000D6A  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1348  000D6C  26D9               	addwf	fsr2l,f,c
  1349  000D6E  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1350  000D70  22DA               	addwfc	fsr2h,f,c
  1351  000D72  EC09  F00C         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1352  000D76  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1353  000D7A  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1354  000D7C  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1355  000D7E  6EDF               	movwf	indf2,c
  1356                           
  1357                           ;FRAME.c: 55:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1358  000D80  EE20 F00A          	lfsr	2,10
  1359  000D84  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1360  000D86  26D9               	addwf	fsr2l,f,c
  1361  000D88  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1362  000D8A  22DA               	addwfc	fsr2h,f,c
  1363  000D8C  EC09  F00C         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1364  000D90  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1365  000D92  6EDF               	movwf	indf2,c
  1366                           
  1367                           ;FRAME.c: 56:         message->data[3] = MOC_Frame_Counter();
  1368  000D94  EE20 F00B          	lfsr	2,11
  1369  000D98  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1370  000D9A  26D9               	addwf	fsr2l,f,c
  1371  000D9C  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1372  000D9E  22DA               	addwfc	fsr2h,f,c
  1373  000DA0  ECFB  F00B         	call	_MOC_Frame_Counter	;wreg free
  1374  000DA4  5006               	movf	?_MOC_Frame_Counter,w,c
  1375  000DA6  6EDF               	movwf	indf2,c
  1376                           
  1377                           ;FRAME.c: 57:         message->data[4] = MOC_Aktualna_Temperatura();
  1378  000DA8  EE20 F00C          	lfsr	2,12
  1379  000DAC  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1380  000DAE  26D9               	addwf	fsr2l,f,c
  1381  000DB0  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1382  000DB2  22DA               	addwfc	fsr2h,f,c
  1383  000DB4  EC0E  F00C         	call	_MOC_Aktualna_Temperatura	;wreg free
  1384  000DB8  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1385  000DBA  6EDF               	movwf	indf2,c
  1386                           
  1387                           ;FRAME.c: 58:         message->data[5] = MOC_NOTWORK();
  1388  000DBC  EE20 F00D          	lfsr	2,13
  1389  000DC0  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1390  000DC2  26D9               	addwf	fsr2l,f,c
  1391  000DC4  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1392  000DC6  22DA               	addwfc	fsr2h,f,c
  1393  000DC8  EC3B  F00C         	call	_MOC_NOTWORK	;wreg free
  1394  000DCC  5006               	movf	?_MOC_NOTWORK,w,c
  1395  000DCE  6EDF               	movwf	indf2,c
  1396                           
  1397                           ;FRAME.c: 68:     }
  1398  000DD0  0012               	return	
  1399  000DD2                     l3727:
  1400                           
  1401                           ;FRAME.c: 70:     {;FRAME.c: 72:         WORD iterator_beta;;FRAME.c: 75:         if(IsI
      +                          nNeighbors(12))
  1402  000DD2  0E00               	movlw	0
  1403  000DD4  6E07               	movwf	IsInNeighbors@message_adress+1,c
  1404  000DD6  0E0C               	movlw	12
  1405  000DD8  6E06               	movwf	IsInNeighbors@message_adress,c
  1406  000DDA  ECDB  F008         	call	_IsInNeighbors	;wreg free
  1407  000DDE  0900               	iorlw	0
  1408  000DE0  B4D8               	btfsc	status,2,c
  1409  000DE2  D00F               	goto	l3741
  1410                           
  1411                           ;FRAME.c: 76:         {;FRAME.c: 79:             for(iterator_beta=0;iterator_beta<400;i
      +                          terator_beta++)
  1412  000DE4  0E00               	movlw	0
  1413  000DE6  6E10               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1414  000DE8  0E00               	movlw	0
  1415  000DEA  6E0F               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1416  000DEC                     l3735:
  1417                           
  1418                           ;FRAME.c: 80:             {;FRAME.c: 81:             LED_Clear();
  1419  000DEC  ECD3  F00B         	call	_LED_Clear	;wreg free
  1420                           
  1421                           ;FRAME.c: 82:             }
  1422  000DF0  4A0F               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1423  000DF2  2A10               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1424  000DF4  0E90               	movlw	144
  1425  000DF6  5C0F               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1426  000DF8  0E01               	movlw	1
  1427  000DFA  5810               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1428  000DFC  B0D8               	btfsc	status,0,c
  1429  000DFE  D00F               	goto	u2320
  1430  000E00  D7F5               	goto	l3735
  1431  000E02                     l3741:
  1432                           
  1433                           ;FRAME.c: 87:         {;FRAME.c: 89:             for(iterator_beta=0;iterator_beta<400;i
      +                          terator_beta++)
  1434  000E02  0E00               	movlw	0
  1435  000E04  6E10               	movwf	FRAME_SensorExcitationStatus@iterator_beta+1,c
  1436  000E06  0E00               	movlw	0
  1437  000E08  6E0F               	movwf	FRAME_SensorExcitationStatus@iterator_beta,c
  1438  000E0A                     l3747:
  1439                           
  1440                           ;FRAME.c: 90:             {;FRAME.c: 91:             LED_Error();
  1441  000E0A  ECC4  F00B         	call	_LED_Error	;wreg free
  1442                           
  1443                           ;FRAME.c: 92:             }
  1444  000E0E  4A0F               	infsnz	FRAME_SensorExcitationStatus@iterator_beta,f,c
  1445  000E10  2A10               	incf	FRAME_SensorExcitationStatus@iterator_beta+1,f,c
  1446  000E12  0E90               	movlw	144
  1447  000E14  5C0F               	subwf	FRAME_SensorExcitationStatus@iterator_beta,w,c
  1448  000E16  0E01               	movlw	1
  1449  000E18  5810               	subwfb	FRAME_SensorExcitationStatus@iterator_beta+1,w,c
  1450  000E1A  A0D8               	btfss	status,0,c
  1451  000E1C  D7F6               	goto	l3747
  1452  000E1E                     u2320:
  1453                           
  1454                           ;FRAME.c: 96:         if(0x12b==message->id.w[0])
  1455  000E1E  EE20 F004          	lfsr	2,4
  1456  000E22  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1457  000E24  26D9               	addwf	fsr2l,f,c
  1458  000E26  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1459  000E28  22DA               	addwfc	fsr2h,f,c
  1460  000E2A  0E2B               	movlw	43
  1461  000E2C  18DE               	xorwf	postinc2,w,c
  1462  000E2E  E10C               	bnz	l467
  1463  000E30  04DE               	decf	postinc2,w,c
  1464  000E32  A4D8               	btfss	status,2,c
  1465  000E34  0012               	return	
  1466                           
  1467                           ;FRAME.c: 97:         {;FRAME.c: 98:         LOCK_Set(message->data[0]);
  1468  000E36  EE20 F008          	lfsr	2,8
  1469  000E3A  500B               	movf	FRAME_SensorExcitationStatus@message,w,c
  1470  000E3C  26D9               	addwf	fsr2l,f,c
  1471  000E3E  500C               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1472  000E40  22DA               	addwfc	fsr2h,f,c
  1473  000E42  50DF               	movf	indf2,w,c
  1474  000E44  EC3F  F00C         	call	_LOCK_Set
  1475  000E48                     l467:
  1476  000E48  0012               	return		;funcret
  1477  000E4A                     __end_of_FRAME_SensorExcitationStatus:
  1478                           	opt callstack 0
  1479                           
  1480 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1481 ;; Defined at:
  1482 ;;		line 33 in file "MOC_Funct.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2    5[COMRAM] unsigned int 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1500 ;;Total ram usage:        2 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    3
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_FRAME_SensorExcitationStatus
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text5
  1511  001812                     __ptext5:
  1512                           	opt callstack 0
  1513  001812                     _MOC_Wynikowa_wartosc_roznicowa:
  1514                           	opt callstack 24
  1515                           
  1516                           ;MOC_Funct.c: 35:     return 0x0220;
  1517                           
  1518                           ;incstack = 0
  1519  001812  0E02               	movlw	2
  1520  001814  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1521  001816  0E20               	movlw	32
  1522  001818  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1523  00181A  0012               	return		;funcret
  1524  00181C                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1525                           	opt callstack 0
  1526                           
  1527 ;; *************** function _MOC_NOTWORK *****************
  1528 ;; Defined at:
  1529 ;;		line 47 in file "MOC_Funct.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  2    5[COMRAM] unsigned int 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;Total ram usage:        2 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_FRAME_SensorExcitationStatus
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  001876                     __ptext6:
  1559                           	opt callstack 0
  1560  001876                     _MOC_NOTWORK:
  1561                           	opt callstack 24
  1562                           
  1563                           ;MOC_Funct.c: 49:     return 0xFF;
  1564                           
  1565                           ;incstack = 0
  1566  001876  0E00               	movlw	0
  1567  001878  6E07               	movwf	?_MOC_NOTWORK+1,c
  1568  00187A  6806               	setf	?_MOC_NOTWORK,c
  1569  00187C  0012               	return		;funcret
  1570  00187E                     __end_of_MOC_NOTWORK:
  1571                           	opt callstack 0
  1572                           
  1573 ;; *************** function _MOC_Frame_Counter *****************
  1574 ;; Defined at:
  1575 ;;		line 38 in file "MOC_Funct.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  2    5[COMRAM] unsigned int 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;Total ram usage:        2 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    3
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_FRAME_SensorExcitationStatus
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text7
  1604  0017F6                     __ptext7:
  1605                           	opt callstack 0
  1606  0017F6                     _MOC_Frame_Counter:
  1607                           	opt callstack 24
  1608                           
  1609                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1610                           
  1611                           ;incstack = 0
  1612  0017F6  5042               	movf	MOC_Frame_Counter@zeta,w,c
  1613  0017F8  6E06               	movwf	?_MOC_Frame_Counter,c
  1614  0017FA  5043               	movf	MOC_Frame_Counter@zeta+1,w,c
  1615  0017FC  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1616  0017FE  4A42               	infsnz	MOC_Frame_Counter@zeta,f,c
  1617  001800  2A43               	incf	MOC_Frame_Counter@zeta+1,f,c
  1618  001802  0012               	return		;funcret
  1619  001804                     __end_of_MOC_Frame_Counter:
  1620                           	opt callstack 0
  1621                           
  1622 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1623 ;; Defined at:
  1624 ;;		line 43 in file "MOC_Funct.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2    5[COMRAM] unsigned int 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1642 ;;Total ram usage:        2 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    3
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_FRAME_SensorExcitationStatus
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text8
  1653  00181C                     __ptext8:
  1654                           	opt callstack 0
  1655  00181C                     _MOC_Aktualna_Temperatura:
  1656                           	opt callstack 24
  1657                           
  1658                           ;MOC_Funct.c: 45:     return 0x1B;
  1659                           
  1660                           ;incstack = 0
  1661  00181C  0E00               	movlw	0
  1662  00181E  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1663  001820  0E1B               	movlw	27
  1664  001822  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1665  001824  0012               	return		;funcret
  1666  001826                     __end_of_MOC_Aktualna_Temperatura:
  1667                           	opt callstack 0
  1668                           
  1669 ;; *************** function _LOCK_Set *****************
  1670 ;; Defined at:
  1671 ;;		line 52 in file "LED.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  k               1    wreg     unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  k               1    5[COMRAM] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1689 ;;Total ram usage:        1 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    3
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_FRAME_SensorExcitationStatus
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text9
  1700  00187E                     __ptext9:
  1701                           	opt callstack 0
  1702  00187E                     _LOCK_Set:
  1703                           	opt callstack 24
  1704                           
  1705                           ;incstack = 0
  1706                           ;LOCK_Set@k stored from wreg
  1707  00187E  6E06               	movwf	LOCK_Set@k,c
  1708                           
  1709                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1710  001880  C006  F041         	movff	LOCK_Set@k,_LOCK
  1711  001884  0012               	return		;funcret
  1712  001886                     __end_of_LOCK_Set:
  1713                           	opt callstack 0
  1714                           
  1715 ;; *************** function _LOCK_Get *****************
  1716 ;; Defined at:
  1717 ;;		line 57 in file "LED.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      unsigned char 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    3
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_FRAME_SensorExcitationStatus
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text10
  1746  00188C                     __ptext10:
  1747                           	opt callstack 0
  1748  00188C                     _LOCK_Get:
  1749                           	opt callstack 24
  1750                           
  1751                           ;LED.c: 59:     return LOCK;
  1752                           
  1753                           ;incstack = 0
  1754  00188C  5041               	movf	_LOCK,w,c
  1755  00188E  0012               	return		;funcret
  1756  001890                     __end_of_LOCK_Get:
  1757                           	opt callstack 0
  1758                           
  1759 ;; *************** function _LED_Error *****************
  1760 ;; Defined at:
  1761 ;;		line 37 in file "LED.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2  265[None  ] unsigned int 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;Total ram usage:        0 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    4
  1782 ;; This function calls:
  1783 ;;		_LED_Control
  1784 ;; This function is called by:
  1785 ;;		_FRAME_SensorExcitationStatus
  1786 ;;		_FRAME_HandleCanFrame
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text11
  1791  001788                     __ptext11:
  1792                           	opt callstack 0
  1793  001788                     _LED_Error:
  1794                           	opt callstack 24
  1795                           
  1796                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1797                           
  1798                           ;incstack = 0
  1799  001788  0E02               	movlw	2
  1800  00178A  6E07               	movwf	LED_Control@diode+1,c
  1801  00178C  0EAA               	movlw	170
  1802  00178E  6E06               	movwf	LED_Control@diode,c
  1803  001790  0E00               	movlw	0
  1804  001792  EC4F  F005         	call	_LED_Control
  1805                           
  1806                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1807  001796  0E00               	movlw	0
  1808  001798  6E07               	movwf	LED_Control@diode+1,c
  1809  00179A  0E00               	movlw	0
  1810  00179C  6E06               	movwf	LED_Control@diode,c
  1811  00179E  0E01               	movlw	1
  1812  0017A0  EC4F  F005         	call	_LED_Control
  1813  0017A4  0012               	return		;funcret
  1814  0017A6                     __end_of_LED_Error:
  1815                           	opt callstack 0
  1816                           
  1817 ;; *************** function _LED_Clear *****************
  1818 ;; Defined at:
  1819 ;;		line 45 in file "LED.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  2  268[None  ] unsigned int 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    4
  1840 ;; This function calls:
  1841 ;;		_LED_Control
  1842 ;; This function is called by:
  1843 ;;		_FRAME_SensorExcitationStatus
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text12
  1848  0017A6                     __ptext12:
  1849                           	opt callstack 0
  1850  0017A6                     _LED_Clear:
  1851                           	opt callstack 23
  1852                           
  1853                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  1854                           
  1855                           ;incstack = 0
  1856  0017A6  0E00               	movlw	0
  1857  0017A8  6E07               	movwf	LED_Control@diode+1,c
  1858  0017AA  0E00               	movlw	0
  1859  0017AC  6E06               	movwf	LED_Control@diode,c
  1860  0017AE  0E00               	movlw	0
  1861  0017B0  EC4F  F005         	call	_LED_Control
  1862                           
  1863                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  1864  0017B4  0E02               	movlw	2
  1865  0017B6  6E07               	movwf	LED_Control@diode+1,c
  1866  0017B8  0EAA               	movlw	170
  1867  0017BA  6E06               	movwf	LED_Control@diode,c
  1868  0017BC  0E01               	movlw	1
  1869  0017BE  EC4F  F005         	call	_LED_Control
  1870  0017C2  0012               	return		;funcret
  1871  0017C4                     __end_of_LED_Clear:
  1872                           	opt callstack 0
  1873                           
  1874 ;; *************** function _IsInNeighbors *****************
  1875 ;; Defined at:
  1876 ;;		line 103 in file "FRAME.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  message_adre    2    5[COMRAM] unsigned int 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  i               2    0        unsigned short 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      unsigned char 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1894 ;;Total ram usage:        2 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    3
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_FRAME_SensorExcitationStatus
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text13
  1905  0011B6                     __ptext13:
  1906                           	opt callstack 0
  1907  0011B6                     _IsInNeighbors:
  1908                           	opt callstack 24
  1909                           
  1910                           ;FRAME.c: 103: BYTE IsInNeighbors(UINT message_adress);FRAME.c: 104: {;FRAME.c: 105:    
      +                           WORD i;;FRAME.c: 115:     if(NeightAdress1==message_adress)
  1911                           
  1912                           ;incstack = 0
  1913  0011B6  5006               	movf	IsInNeighbors@message_adress,w,c
  1914  0011B8  1837               	xorwf	_NeightAdress1,w,c	;volatile
  1915  0011BA  E106               	bnz	l3579
  1916  0011BC  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1917  0011BE  1838               	xorwf	_NeightAdress1+1,w,c	;volatile
  1918  0011C0  A4D8               	btfss	status,2,c
  1919  0011C2  D002               	goto	l3579
  1920  0011C4                     u2120:
  1921                           
  1922                           ;FRAME.c: 116:     {;FRAME.c: 117:         return 1;
  1923  0011C4  0E01               	movlw	1
  1924  0011C6  0012               	return	
  1925  0011C8                     l3579:
  1926                           
  1927                           ;FRAME.c: 119:     if(NeightAdress2==message_adress)
  1928  0011C8  5006               	movf	IsInNeighbors@message_adress,w,c
  1929  0011CA  1835               	xorwf	_NeightAdress2,w,c	;volatile
  1930  0011CC  E104               	bnz	l3585
  1931  0011CE  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1932  0011D0  1836               	xorwf	_NeightAdress2+1,w,c	;volatile
  1933  0011D2  B4D8               	btfsc	status,2,c
  1934  0011D4  D7F7               	goto	u2120
  1935  0011D6                     l3585:
  1936                           
  1937                           ;FRAME.c: 123:     if(NeightAdress3==message_adress)
  1938  0011D6  5006               	movf	IsInNeighbors@message_adress,w,c
  1939  0011D8  1833               	xorwf	_NeightAdress3,w,c	;volatile
  1940  0011DA  E104               	bnz	l3591
  1941  0011DC  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1942  0011DE  1834               	xorwf	_NeightAdress3+1,w,c	;volatile
  1943  0011E0  B4D8               	btfsc	status,2,c
  1944  0011E2  D7F0               	goto	u2120
  1945  0011E4                     l3591:
  1946                           
  1947                           ;FRAME.c: 127:     if(NeightAdress4==message_adress)
  1948  0011E4  5006               	movf	IsInNeighbors@message_adress,w,c
  1949  0011E6  1831               	xorwf	_NeightAdress4,w,c	;volatile
  1950  0011E8  E104               	bnz	l3597
  1951  0011EA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1952  0011EC  1832               	xorwf	_NeightAdress4+1,w,c	;volatile
  1953  0011EE  B4D8               	btfsc	status,2,c
  1954  0011F0  D7E9               	goto	u2120
  1955  0011F2                     l3597:
  1956                           
  1957                           ;FRAME.c: 131:     if(NeightAdress5==message_adress)
  1958  0011F2  5006               	movf	IsInNeighbors@message_adress,w,c
  1959  0011F4  182F               	xorwf	_NeightAdress5,w,c	;volatile
  1960  0011F6  E104               	bnz	l3603
  1961  0011F8  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1962  0011FA  1830               	xorwf	_NeightAdress5+1,w,c	;volatile
  1963  0011FC  B4D8               	btfsc	status,2,c
  1964  0011FE  D7E2               	goto	u2120
  1965  001200                     l3603:
  1966                           
  1967                           ;FRAME.c: 135:     if(NeightAdress6==message_adress)
  1968  001200  5006               	movf	IsInNeighbors@message_adress,w,c
  1969  001202  182D               	xorwf	_NeightAdress6,w,c	;volatile
  1970  001204  E104               	bnz	l3609
  1971  001206  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1972  001208  182E               	xorwf	_NeightAdress6+1,w,c	;volatile
  1973  00120A  B4D8               	btfsc	status,2,c
  1974  00120C  D7DB               	goto	u2120
  1975  00120E                     l3609:
  1976                           
  1977                           ;FRAME.c: 139:     if(NeightAdress7==message_adress)
  1978  00120E  5006               	movf	IsInNeighbors@message_adress,w,c
  1979  001210  182B               	xorwf	_NeightAdress7,w,c	;volatile
  1980  001212  E104               	bnz	l3615
  1981  001214  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1982  001216  182C               	xorwf	_NeightAdress7+1,w,c	;volatile
  1983  001218  B4D8               	btfsc	status,2,c
  1984  00121A  D7D4               	goto	u2120
  1985  00121C                     l3615:
  1986                           
  1987                           ;FRAME.c: 143:     if(NeightAdress8==message_adress)
  1988  00121C  5006               	movf	IsInNeighbors@message_adress,w,c
  1989  00121E  1829               	xorwf	_NeightAdress8,w,c	;volatile
  1990  001220  E104               	bnz	l3621
  1991  001222  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1992  001224  182A               	xorwf	_NeightAdress8+1,w,c	;volatile
  1993  001226  B4D8               	btfsc	status,2,c
  1994  001228  D7CD               	goto	u2120
  1995  00122A                     l3621:
  1996                           
  1997                           ;FRAME.c: 161:     return 0;
  1998  00122A  0E00               	movlw	0
  1999  00122C  0012               	return		;funcret
  2000  00122E                     __end_of_IsInNeighbors:
  2001                           	opt callstack 0
  2002                           
  2003 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2004 ;; Defined at:
  2005 ;;		line 512 in file "FRAME.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  message         2    5[COMRAM] PTR struct .
  2008 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2024 ;;Total ram usage:        6 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    3
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_FRAME_HandleCanFrame
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text14
  2035  000EFA                     __ptext14:
  2036                           	opt callstack 0
  2037  000EFA                     _FRAME_PrzypisanieDokarty:
  2038                           	opt callstack 25
  2039                           
  2040                           ;FRAME.c: 512: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 513: {;FRAME.
      +                          c: 514:     if(message->message_type == 0x02)
  2041                           
  2042                           ;incstack = 0
  2043  000EFA  EE20 F001          	lfsr	2,1
  2044  000EFE  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2045  000F00  26D9               	addwf	fsr2l,f,c
  2046  000F02  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2047  000F04  22DA               	addwfc	fsr2h,f,c
  2048  000F06  0E02               	movlw	2
  2049  000F08  18DE               	xorwf	postinc2,w,c
  2050  000F0A  A4D8               	btfss	status,2,c
  2051  000F0C  D021               	goto	l3837
  2052                           
  2053                           ;FRAME.c: 515:     {;FRAME.c: 516:         message->data_length = 3;
  2054  000F0E  EE20 F010          	lfsr	2,16
  2055  000F12  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2056  000F14  26D9               	addwf	fsr2l,f,c
  2057  000F16  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2058  000F18  22DA               	addwfc	fsr2h,f,c
  2059  000F1A  0E03               	movlw	3
  2060  000F1C  6EDF               	movwf	indf2,c
  2061                           
  2062                           ;FRAME.c: 517:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2063  000F1E  EE20 F008          	lfsr	2,8
  2064  000F22  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2065  000F24  26D9               	addwf	fsr2l,f,c
  2066  000F26  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2067  000F28  22DA               	addwfc	fsr2h,f,c
  2068  000F2A  0E00               	movlw	0
  2069  000F2C  6EDF               	movwf	indf2,c
  2070                           
  2071                           ;FRAME.c: 518:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2072  000F2E  EE20 F009          	lfsr	2,9
  2073  000F32  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2074  000F34  26D9               	addwf	fsr2l,f,c
  2075  000F36  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2076  000F38  22DA               	addwfc	fsr2h,f,c
  2077  000F3A  C038 FFDF          	movff	56,indf2
  2078                           
  2079                           ;FRAME.c: 519:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2080  000F3E  EE20 F00A          	lfsr	2,10
  2081  000F42  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2082  000F44  26D9               	addwf	fsr2l,f,c
  2083  000F46  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2084  000F48  22DA               	addwfc	fsr2h,f,c
  2085  000F4A  C03A FFDF          	movff	58,indf2
  2086                           
  2087                           ;FRAME.c: 521:     }
  2088  000F4E  0012               	return	
  2089  000F50                     l3837:
  2090                           
  2091                           ;FRAME.c: 523:     {;FRAME.c: 524:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2092  000F50  EE20 F008          	lfsr	2,8
  2093  000F54  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2094  000F56  26D9               	addwf	fsr2l,f,c
  2095  000F58  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2096  000F5A  22DA               	addwfc	fsr2h,f,c
  2097  000F5C  50DF               	movf	indf2,w,c
  2098  000F5E  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2099  000F60  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2100  000F62  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2101  000F64  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2102  000F66  EE20 F009          	lfsr	2,9
  2103  000F6A  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2104  000F6C  26D9               	addwf	fsr2l,f,c
  2105  000F6E  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2106  000F70  22DA               	addwfc	fsr2h,f,c
  2107  000F72  50DF               	movf	indf2,w,c
  2108  000F74  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2109  000F76  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2110  000F78  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2111  000F7A  6E38               	movwf	56,c
  2112  000F7C  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2113  000F7E  6E39               	movwf	57,c
  2114                           
  2115                           ;FRAME.c: 525:          Dane->Nr_WeWy = (message->data[2]);
  2116  000F80  EE20 F00A          	lfsr	2,10
  2117  000F84  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2118  000F86  26D9               	addwf	fsr2l,f,c
  2119  000F88  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2120  000F8A  22DA               	addwfc	fsr2h,f,c
  2121  000F8C  50DF               	movf	indf2,w,c
  2122  000F8E  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2123  000F90  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2124  000F92  6E3A               	movwf	58,c
  2125  000F94  6A3B               	clrf	59,c
  2126  000F96  0012               	return		;funcret
  2127  000F98                     __end_of_FRAME_PrzypisanieDokarty:
  2128                           	opt callstack 0
  2129                           
  2130 ;; *************** function _FRAME_Plot *****************
  2131 ;; Defined at:
  2132 ;;		line 417 in file "FRAME.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  message         2   12[COMRAM] PTR struct .
  2135 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2151 ;;Total ram usage:        3 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    4
  2154 ;; This function calls:
  2155 ;;		___lwdiv
  2156 ;; This function is called by:
  2157 ;;		_FRAME_HandleCanFrame
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text15
  2162  00141A                     __ptext15:
  2163                           	opt callstack 0
  2164  00141A                     _FRAME_Plot:
  2165                           	opt callstack 24
  2166                           
  2167                           ;FRAME.c: 417: static void FRAME_Plot(mID *message);FRAME.c: 418: {;FRAME.c: 420:     if
      +                          (message->message_type == 0x02)
  2168                           
  2169                           ;incstack = 0
  2170  00141A  EE20 F001          	lfsr	2,1
  2171  00141E  500D               	movf	FRAME_Plot@message,w,c
  2172  001420  26D9               	addwf	fsr2l,f,c
  2173  001422  500E               	movf	FRAME_Plot@message+1,w,c
  2174  001424  22DA               	addwfc	fsr2h,f,c
  2175  001426  0E02               	movlw	2
  2176  001428  18DE               	xorwf	postinc2,w,c
  2177  00142A  A4D8               	btfss	status,2,c
  2178  00142C  D013               	goto	l3827
  2179                           
  2180                           ;FRAME.c: 421:     {;FRAME.c: 422:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2181  00142E  EE20 F008          	lfsr	2,8
  2182  001432  500D               	movf	FRAME_Plot@message,w,c
  2183  001434  26D9               	addwf	fsr2l,f,c
  2184  001436  500E               	movf	FRAME_Plot@message+1,w,c
  2185  001438  22DA               	addwfc	fsr2h,f,c
  2186  00143A  C00C F006          	movff	12,___lwdiv@dividend
  2187  00143E  C00D F007          	movff	13,___lwdiv@dividend+1
  2188  001442  0E00               	movlw	0
  2189  001444  6E09               	movwf	___lwdiv@divisor+1,c
  2190  001446  0E0A               	movlw	10
  2191  001448  6E08               	movwf	___lwdiv@divisor,c
  2192  00144A  EC39  F00A         	call	___lwdiv	;wreg free
  2193  00144E  5006               	movf	?___lwdiv,w,c
  2194  001450  6EDF               	movwf	indf2,c
  2195                           
  2196                           ;FRAME.c: 423:     }
  2197  001452  0012               	return	
  2198  001454                     l3827:
  2199                           
  2200                           ;FRAME.c: 425:     {;FRAME.c: 426:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2201  001454  EE20 F008          	lfsr	2,8
  2202  001458  500D               	movf	FRAME_Plot@message,w,c
  2203  00145A  26D9               	addwf	fsr2l,f,c
  2204  00145C  500E               	movf	FRAME_Plot@message+1,w,c
  2205  00145E  22DA               	addwfc	fsr2h,f,c
  2206  001460  50DF               	movf	indf2,w,c
  2207  001462  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2208  001464  500F               	movf	??_FRAME_Plot,w,c
  2209  001466  0D0A               	mullw	10
  2210  001468  CFF3 F00C          	movff	prodl,12
  2211  00146C  CFF4 F00D          	movff	prodh,13
  2212  001470  0012               	return		;funcret
  2213  001472                     __end_of_FRAME_Plot:
  2214                           	opt callstack 0
  2215                           
  2216 ;; *************** function _FRAME_MapPosition *****************
  2217 ;; Defined at:
  2218 ;;		line 438 in file "FRAME.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  message         2    5[COMRAM] PTR struct .
  2221 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		None
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2237 ;;Total ram usage:        2 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    3
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_FRAME_HandleCanFrame
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text16
  2248  001890                     __ptext16:
  2249                           	opt callstack 0
  2250  001890                     _FRAME_MapPosition:
  2251                           	opt callstack 25
  2252                           
  2253                           ;incstack = 0
  2254  001890  0012               	return		;funcret
  2255  001892                     __end_of_FRAME_MapPosition:
  2256                           	opt callstack 0
  2257                           
  2258 ;; *************** function _FRAME_ExcitationValue *****************
  2259 ;; Defined at:
  2260 ;;		line 195 in file "FRAME.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  message         2    5[COMRAM] PTR struct .
  2263 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2278 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2279 ;;Total ram usage:        3 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    3
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_FRAME_HandleCanFrame
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text17
  2290  0015EC                     __ptext17:
  2291                           	opt callstack 0
  2292  0015EC                     _FRAME_ExcitationValue:
  2293                           	opt callstack 25
  2294                           
  2295                           ;FRAME.c: 195: static void FRAME_ExcitationValue(mID *message);FRAME.c: 196: {;FRAME.c: 
      +                          197:     if(message->message_type == 0x02)
  2296                           
  2297                           ;incstack = 0
  2298  0015EC  EE20 F001          	lfsr	2,1
  2299  0015F0  5006               	movf	FRAME_ExcitationValue@message,w,c
  2300  0015F2  26D9               	addwf	fsr2l,f,c
  2301  0015F4  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2302  0015F6  22DA               	addwfc	fsr2h,f,c
  2303  0015F8  0E02               	movlw	2
  2304  0015FA  18DE               	xorwf	postinc2,w,c
  2305  0015FC  A4D8               	btfss	status,2,c
  2306  0015FE  0012               	return	
  2307                           
  2308                           ;FRAME.c: 198:     {;FRAME.c: 199:         message->data_length = 1;
  2309  001600  EE20 F010          	lfsr	2,16
  2310  001604  5006               	movf	FRAME_ExcitationValue@message,w,c
  2311  001606  26D9               	addwf	fsr2l,f,c
  2312  001608  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2313  00160A  22DA               	addwfc	fsr2h,f,c
  2314  00160C  0E01               	movlw	1
  2315  00160E  6EDF               	movwf	indf2,c
  2316                           
  2317                           ;FRAME.c: 204:         message->data[0] = 0xFF;
  2318  001610  EE20 F008          	lfsr	2,8
  2319  001614  5006               	movf	FRAME_ExcitationValue@message,w,c
  2320  001616  26D9               	addwf	fsr2l,f,c
  2321  001618  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2322  00161A  22DA               	addwfc	fsr2h,f,c
  2323  00161C  0EFF               	movlw	255
  2324  00161E  6EDF               	movwf	indf2,c
  2325                           
  2326                           ;FRAME.c: 205:     }
  2327  001620  0012               	return		;funcret
  2328  001622                     __end_of_FRAME_ExcitationValue:
  2329                           	opt callstack 0
  2330                           
  2331 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2332 ;; Defined at:
  2333 ;;		line 219 in file "FRAME.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  message         2    5[COMRAM] PTR struct .
  2336 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  i               2    8[COMRAM] unsigned short 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;Total ram usage:        5 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    3
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_FRAME_HandleCanFrame
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text18
  2363  0014C4                     __ptext18:
  2364                           	opt callstack 0
  2365  0014C4                     _FRAME_ExcitationMultiplier:
  2366                           	opt callstack 25
  2367                           
  2368                           ;FRAME.c: 219: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 220: {;FRAM
      +                          E.c: 221:     WORD i;;FRAME.c: 223:     if(message->message_type == 0x02)
  2369                           
  2370                           ;incstack = 0
  2371  0014C4  EE20 F001          	lfsr	2,1
  2372  0014C8  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2373  0014CA  26D9               	addwf	fsr2l,f,c
  2374  0014CC  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2375  0014CE  22DA               	addwfc	fsr2h,f,c
  2376  0014D0  0E02               	movlw	2
  2377  0014D2  18DE               	xorwf	postinc2,w,c
  2378  0014D4  A4D8               	btfss	status,2,c
  2379  0014D6  0012               	return	
  2380                           
  2381                           ;FRAME.c: 224:     {;FRAME.c: 225:         message->data_length = 1;
  2382  0014D8  EE20 F010          	lfsr	2,16
  2383  0014DC  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2384  0014DE  26D9               	addwf	fsr2l,f,c
  2385  0014E0  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2386  0014E2  22DA               	addwfc	fsr2h,f,c
  2387  0014E4  0E01               	movlw	1
  2388  0014E6  6EDF               	movwf	indf2,c
  2389                           
  2390                           ;FRAME.c: 226:         for(i=0; i<3; i++)
  2391  0014E8  0E00               	movlw	0
  2392  0014EA  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2393  0014EC  0E00               	movlw	0
  2394  0014EE  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2395  0014F0                     l3783:
  2396                           
  2397                           ;FRAME.c: 227:         {;FRAME.c: 230:         }
  2398  0014F0  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2399  0014F2  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2400  0014F4  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2401  0014F6  E104               	bnz	u2370
  2402  0014F8  0E03               	movlw	3
  2403  0014FA  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2404  0014FC  A0D8               	btfss	status,0,c
  2405  0014FE  D7F8               	goto	l3783
  2406  001500                     u2370:
  2407                           
  2408                           ;FRAME.c: 231:         message->data[0] = 0xFF;
  2409  001500  EE20 F008          	lfsr	2,8
  2410  001504  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2411  001506  26D9               	addwf	fsr2l,f,c
  2412  001508  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2413  00150A  22DA               	addwfc	fsr2h,f,c
  2414  00150C  0EFF               	movlw	255
  2415  00150E  6EDF               	movwf	indf2,c
  2416                           
  2417                           ;FRAME.c: 232:     }
  2418  001510  0012               	return		;funcret
  2419  001512                     __end_of_FRAME_ExcitationMultiplier:
  2420                           	opt callstack 0
  2421                           
  2422 ;; *************** function _FRAME_DeviceReset *****************
  2423 ;; Defined at:
  2424 ;;		line 353 in file "FRAME.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  message         2    8[COMRAM] PTR struct .
  2427 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;Total ram usage:        3 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    4
  2446 ;; This function calls:
  2447 ;;		_FRAME_DataUpdateAndChangeOption
  2448 ;; This function is called by:
  2449 ;;		_FRAME_HandleCanFrame
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text19
  2454  000BF0                     __ptext19:
  2455                           	opt callstack 0
  2456  000BF0                     _FRAME_DeviceReset:
  2457                           	opt callstack 24
  2458                           
  2459                           ;FRAME.c: 353: static void FRAME_DeviceReset(mID *message);FRAME.c: 354: {;FRAME.c: 355:
      +                               if(message->message_type == 0x02)
  2460                           
  2461                           ;incstack = 0
  2462  000BF0  EE20 F001          	lfsr	2,1
  2463  000BF4  5009               	movf	FRAME_DeviceReset@message,w,c
  2464  000BF6  26D9               	addwf	fsr2l,f,c
  2465  000BF8  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2466  000BFA  22DA               	addwfc	fsr2h,f,c
  2467  000BFC  0E02               	movlw	2
  2468  000BFE  18DE               	xorwf	postinc2,w,c
  2469  000C00  A4D8               	btfss	status,2,c
  2470  000C02  D057               	goto	l3805
  2471                           
  2472                           ;FRAME.c: 356:     {;FRAME.c: 357:         message->data_length = 1;
  2473  000C04  EE20 F010          	lfsr	2,16
  2474  000C08  5009               	movf	FRAME_DeviceReset@message,w,c
  2475  000C0A  26D9               	addwf	fsr2l,f,c
  2476  000C0C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2477  000C0E  22DA               	addwfc	fsr2h,f,c
  2478  000C10  0E01               	movlw	1
  2479  000C12  6EDF               	movwf	indf2,c
  2480                           
  2481                           ;FRAME.c: 359:         message->data[0] = (RCON>>6) & 0x01;
  2482  000C14  EE20 F008          	lfsr	2,8
  2483  000C18  5009               	movf	FRAME_DeviceReset@message,w,c
  2484  000C1A  26D9               	addwf	fsr2l,f,c
  2485  000C1C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2486  000C1E  22DA               	addwfc	fsr2h,f,c
  2487  000C20  44D0               	rlncf	4048,w,c	;volatile
  2488  000C22  46E8               	rlncf	wreg,f,c
  2489  000C24  0B03               	andlw	3
  2490  000C26  0B01               	andlw	1
  2491  000C28  6EDF               	movwf	indf2,c
  2492                           
  2493                           ;FRAME.c: 360:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2494  000C2A  EE20 F009          	lfsr	2,9
  2495  000C2E  5009               	movf	FRAME_DeviceReset@message,w,c
  2496  000C30  26D9               	addwf	fsr2l,f,c
  2497  000C32  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2498  000C34  22DA               	addwfc	fsr2h,f,c
  2499  000C36  0100               	movlb	0	; () banked
  2500  000C38  A9C6               	btfss	_Flagi& (0+255),4,b
  2501  000C3A  D002               	goto	u2410
  2502  000C3C  0E01               	movlw	1
  2503  000C3E  D001               	goto	u2416
  2504  000C40                     u2410:
  2505  000C40  0E00               	movlw	0
  2506  000C42                     u2416:
  2507  000C42  6EDF               	movwf	indf2,c
  2508                           
  2509                           ;FRAME.c: 361:         message->data[2] = Flagi.pomiarTla;
  2510  000C44  EE20 F00A          	lfsr	2,10
  2511  000C48  5009               	movf	FRAME_DeviceReset@message,w,c
  2512  000C4A  26D9               	addwf	fsr2l,f,c
  2513  000C4C  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2514  000C4E  22DA               	addwfc	fsr2h,f,c
  2515  000C50  A1C6               	btfss	_Flagi& (0+255),0,b
  2516  000C52  D002               	goto	u2420
  2517  000C54  0E01               	movlw	1
  2518  000C56  D001               	goto	u2426
  2519  000C58                     u2420:
  2520  000C58  0E00               	movlw	0
  2521  000C5A                     u2426:
  2522  000C5A  6EDF               	movwf	indf2,c
  2523                           
  2524                           ;FRAME.c: 362:         message->data[3] = 0;
  2525  000C5C  EE20 F00B          	lfsr	2,11
  2526  000C60  5009               	movf	FRAME_DeviceReset@message,w,c
  2527  000C62  26D9               	addwf	fsr2l,f,c
  2528  000C64  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2529  000C66  22DA               	addwfc	fsr2h,f,c
  2530  000C68  0E00               	movlw	0
  2531  000C6A  6EDF               	movwf	indf2,c
  2532                           
  2533                           ;FRAME.c: 363:         message->data[4] = Dane->rokU16;
  2534  000C6C  EE20 F00C          	lfsr	2,12
  2535  000C70  5009               	movf	FRAME_DeviceReset@message,w,c
  2536  000C72  26D9               	addwf	fsr2l,f,c
  2537  000C74  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2538  000C76  22DA               	addwfc	fsr2h,f,c
  2539  000C78  C02E FFDF          	movff	46,indf2
  2540                           
  2541                           ;FRAME.c: 364:         message->data[5] = Dane->miesiacU16;
  2542  000C7C  EE20 F00D          	lfsr	2,13
  2543  000C80  5009               	movf	FRAME_DeviceReset@message,w,c
  2544  000C82  26D9               	addwf	fsr2l,f,c
  2545  000C84  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2546  000C86  22DA               	addwfc	fsr2h,f,c
  2547  000C88  C030 FFDF          	movff	48,indf2
  2548                           
  2549                           ;FRAME.c: 365:         message->data[6] = Dane->dzienU16;
  2550  000C8C  EE20 F00E          	lfsr	2,14
  2551  000C90  5009               	movf	FRAME_DeviceReset@message,w,c
  2552  000C92  26D9               	addwf	fsr2l,f,c
  2553  000C94  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2554  000C96  22DA               	addwfc	fsr2h,f,c
  2555  000C98  C032 FFDF          	movff	50,indf2
  2556                           
  2557                           ;FRAME.c: 366:         message->data[7] = Dane->godzinaU16;
  2558  000C9C  EE20 F00F          	lfsr	2,15
  2559  000CA0  5009               	movf	FRAME_DeviceReset@message,w,c
  2560  000CA2  26D9               	addwf	fsr2l,f,c
  2561  000CA4  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2562  000CA6  22DA               	addwfc	fsr2h,f,c
  2563  000CA8  C034 FFDF          	movff	52,indf2
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;FRAME.c: 367:         RCON &= ~(1<<6);
  2567  000CAC  9CD0               	bcf	4048,6,c	;volatile
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;FRAME.c: 368:         Flagi.wykonanoZapisDoFlash = 0;
  2571  000CAE  99C6               	bcf	_Flagi& (0+255),4,b
  2572                           
  2573                           ;FRAME.c: 382:     }
  2574  000CB0  0012               	return	
  2575  000CB2                     l3805:
  2576                           
  2577                           ;FRAME.c: 384:     {;FRAME.c: 385:         message->data_length = 1;
  2578  000CB2  EE20 F010          	lfsr	2,16
  2579  000CB6  5009               	movf	FRAME_DeviceReset@message,w,c
  2580  000CB8  26D9               	addwf	fsr2l,f,c
  2581  000CBA  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2582  000CBC  22DA               	addwfc	fsr2h,f,c
  2583  000CBE  0E01               	movlw	1
  2584  000CC0  6EDF               	movwf	indf2,c
  2585                           
  2586                           ;FRAME.c: 387:         if(message->data[2])
  2587  000CC2  EE20 F00A          	lfsr	2,10
  2588  000CC6  5009               	movf	FRAME_DeviceReset@message,w,c
  2589  000CC8  26D9               	addwf	fsr2l,f,c
  2590  000CCA  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2591  000CCC  22DA               	addwfc	fsr2h,f,c
  2592  000CCE  50DF               	movf	indf2,w,c
  2593  000CD0  B4D8               	btfsc	status,2,c
  2594  000CD2  D00D               	goto	l3813
  2595                           
  2596                           ;FRAME.c: 388:         {;FRAME.c: 389:             Flagi.pomiarTla = 1;
  2597  000CD4  0100               	movlb	0	; () banked
  2598  000CD6  81C6               	bsf	_Flagi& (0+255),0,b
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;FRAME.c: 390:             if(message->data[1])
  2602  000CD8  EE20 F009          	lfsr	2,9
  2603  000CDC  5009               	movf	FRAME_DeviceReset@message,w,c
  2604  000CDE  26D9               	addwf	fsr2l,f,c
  2605  000CE0  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2606  000CE2  22DA               	addwfc	fsr2h,f,c
  2607  000CE4  50DF               	movf	indf2,w,c
  2608  000CE6  B4D8               	btfsc	status,2,c
  2609  000CE8  D01A               	goto	l3821
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;FRAME.c: 391:             {;FRAME.c: 392:                 Flagi.zapisDoFlash = 1;
  2613  000CEA  87C6               	bsf	_Flagi& (0+255),3,b
  2614  000CEC  D018               	goto	l3821
  2615  000CEE                     l3813:
  2616                           
  2617                           ;FRAME.c: 396:         {;FRAME.c: 397:             if(message->data[1])
  2618  000CEE  EE20 F009          	lfsr	2,9
  2619  000CF2  5009               	movf	FRAME_DeviceReset@message,w,c
  2620  000CF4  26D9               	addwf	fsr2l,f,c
  2621  000CF6  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2622  000CF8  22DA               	addwfc	fsr2h,f,c
  2623  000CFA  50DF               	movf	indf2,w,c
  2624  000CFC  B4D8               	btfsc	status,2,c
  2625  000CFE  D006               	goto	l3817
  2626                           
  2627                           ;FRAME.c: 398:             {;FRAME.c: 399:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2628  000D00  C009  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2629  000D04  C00A  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2630  000D08  ECE0  F009         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2631  000D0C                     l3817:
  2632                           
  2633                           ;FRAME.c: 402:             if(message->data[0])
  2634  000D0C  EE20 F008          	lfsr	2,8
  2635  000D10  5009               	movf	FRAME_DeviceReset@message,w,c
  2636  000D12  26D9               	addwf	fsr2l,f,c
  2637  000D14  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2638  000D16  22DA               	addwfc	fsr2h,f,c
  2639  000D18  50DF               	movf	indf2,w,c
  2640  000D1A  A4D8               	btfss	status,2,c
  2641  000D1C  00FF               	reset		;# 
  2642  000D1E                     l3821:
  2643                           
  2644                           ;FRAME.c: 407:         message->data[0] = 0xFF;
  2645  000D1E  EE20 F008          	lfsr	2,8
  2646  000D22  5009               	movf	FRAME_DeviceReset@message,w,c
  2647  000D24  26D9               	addwf	fsr2l,f,c
  2648  000D26  500A               	movf	FRAME_DeviceReset@message+1,w,c
  2649  000D28  22DA               	addwfc	fsr2h,f,c
  2650  000D2A  0EFF               	movlw	255
  2651  000D2C  6EDF               	movwf	indf2,c
  2652  000D2E  0012               	return		;funcret
  2653  000D30                     __end_of_FRAME_DeviceReset:
  2654                           	opt callstack 0
  2655                           
  2656 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  2657 ;; Defined at:
  2658 ;;		line 337 in file "FRAME.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  message         2    5[COMRAM] PTR struct .
  2661 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2676 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2677 ;;Total ram usage:        3 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    3
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_FRAME_DeviceReset
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text20
  2688  0013C0                     __ptext20:
  2689                           	opt callstack 0
  2690  0013C0                     _FRAME_DataUpdateAndChangeOption:
  2691                           	opt callstack 24
  2692                           
  2693                           ;FRAME.c: 337: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 338: {
      +                          ;FRAME.c: 340:     Dane->rokU16 = message->data[4];
  2694                           
  2695                           ;incstack = 0
  2696  0013C0  EE20 F00C          	lfsr	2,12
  2697  0013C4  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2698  0013C6  26D9               	addwf	fsr2l,f,c
  2699  0013C8  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2700  0013CA  22DA               	addwfc	fsr2h,f,c
  2701  0013CC  50DF               	movf	indf2,w,c
  2702  0013CE  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2703  0013D0  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2704  0013D2  6E2E               	movwf	46,c
  2705  0013D4  6A2F               	clrf	47,c
  2706                           
  2707                           ;FRAME.c: 341:     Dane->miesiacU16 = message->data[5];
  2708  0013D6  EE20 F00D          	lfsr	2,13
  2709  0013DA  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2710  0013DC  26D9               	addwf	fsr2l,f,c
  2711  0013DE  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2712  0013E0  22DA               	addwfc	fsr2h,f,c
  2713  0013E2  50DF               	movf	indf2,w,c
  2714  0013E4  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2715  0013E6  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2716  0013E8  6E30               	movwf	48,c
  2717  0013EA  6A31               	clrf	49,c
  2718                           
  2719                           ;FRAME.c: 342:     Dane->dzienU16 = message->data[6];
  2720  0013EC  EE20 F00E          	lfsr	2,14
  2721  0013F0  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2722  0013F2  26D9               	addwf	fsr2l,f,c
  2723  0013F4  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2724  0013F6  22DA               	addwfc	fsr2h,f,c
  2725  0013F8  50DF               	movf	indf2,w,c
  2726  0013FA  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2727  0013FC  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2728  0013FE  6E32               	movwf	50,c
  2729  001400  6A33               	clrf	51,c
  2730                           
  2731                           ;FRAME.c: 343:     Dane->godzinaU16 = message->data[7];
  2732  001402  EE20 F00F          	lfsr	2,15
  2733  001406  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  2734  001408  26D9               	addwf	fsr2l,f,c
  2735  00140A  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  2736  00140C  22DA               	addwfc	fsr2h,f,c
  2737  00140E  50DF               	movf	indf2,w,c
  2738  001410  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  2739  001412  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  2740  001414  6E34               	movwf	52,c
  2741  001416  6A35               	clrf	53,c
  2742  001418  0012               	return		;funcret
  2743  00141A                     __end_of_FRAME_DataUpdateAndChangeOption:
  2744                           	opt callstack 0
  2745                           
  2746 ;; *************** function _FRAME_AxisStatus *****************
  2747 ;; Defined at:
  2748 ;;		line 306 in file "FRAME.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  message         2    5[COMRAM] PTR struct .
  2751 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  i               2    0        unsigned short 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2766 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;Total ram usage:        3 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    3
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_FRAME_HandleCanFrame
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text21
  2778  001622                     __ptext21:
  2779                           	opt callstack 0
  2780  001622                     _FRAME_AxisStatus:
  2781                           	opt callstack 25
  2782                           
  2783                           ;FRAME.c: 306: static void FRAME_AxisStatus(mID *message);FRAME.c: 307: {;FRAME.c: 308: 
      +                              WORD i;;FRAME.c: 310:     if(message->message_type == 0x02)
  2784                           
  2785                           ;incstack = 0
  2786  001622  EE20 F001          	lfsr	2,1
  2787  001626  5006               	movf	FRAME_AxisStatus@message,w,c
  2788  001628  26D9               	addwf	fsr2l,f,c
  2789  00162A  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2790  00162C  22DA               	addwfc	fsr2h,f,c
  2791  00162E  0E02               	movlw	2
  2792  001630  18DE               	xorwf	postinc2,w,c
  2793  001632  A4D8               	btfss	status,2,c
  2794  001634  0012               	return	
  2795                           
  2796                           ;FRAME.c: 311:     {;FRAME.c: 312:         message->data_length = 1;
  2797  001636  EE20 F010          	lfsr	2,16
  2798  00163A  5006               	movf	FRAME_AxisStatus@message,w,c
  2799  00163C  26D9               	addwf	fsr2l,f,c
  2800  00163E  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2801  001640  22DA               	addwfc	fsr2h,f,c
  2802  001642  0E01               	movlw	1
  2803  001644  6EDF               	movwf	indf2,c
  2804                           
  2805                           ;FRAME.c: 323:         message->data[0] = 0xFF;
  2806  001646  EE20 F008          	lfsr	2,8
  2807  00164A  5006               	movf	FRAME_AxisStatus@message,w,c
  2808  00164C  26D9               	addwf	fsr2l,f,c
  2809  00164E  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2810  001650  22DA               	addwfc	fsr2h,f,c
  2811  001652  0EFF               	movlw	255
  2812  001654  6EDF               	movwf	indf2,c
  2813                           
  2814                           ;FRAME.c: 324:     }
  2815  001656  0012               	return		;funcret
  2816  001658                     __end_of_FRAME_AxisStatus:
  2817                           	opt callstack 0
  2818                           
  2819 ;; *************** function _FRAME_AveragingTimes *****************
  2820 ;; Defined at:
  2821 ;;		line 247 in file "FRAME.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  message         2    5[COMRAM] PTR struct .
  2824 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;Total ram usage:        3 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    3
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_FRAME_HandleCanFrame
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text22
  2851  001658                     __ptext22:
  2852                           	opt callstack 0
  2853  001658                     _FRAME_AveragingTimes:
  2854                           	opt callstack 25
  2855                           
  2856                           ;FRAME.c: 247: static void FRAME_AveragingTimes(mID *message);FRAME.c: 248: {;FRAME.c: 2
      +                          49:     if(message->message_type == 0x02)
  2857                           
  2858                           ;incstack = 0
  2859  001658  EE20 F001          	lfsr	2,1
  2860  00165C  5006               	movf	FRAME_AveragingTimes@message,w,c
  2861  00165E  26D9               	addwf	fsr2l,f,c
  2862  001660  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2863  001662  22DA               	addwfc	fsr2h,f,c
  2864  001664  0E02               	movlw	2
  2865  001666  18DE               	xorwf	postinc2,w,c
  2866  001668  A4D8               	btfss	status,2,c
  2867  00166A  0012               	return	
  2868                           
  2869                           ;FRAME.c: 250:     {;FRAME.c: 251:         message->data_length = 1;
  2870  00166C  EE20 F010          	lfsr	2,16
  2871  001670  5006               	movf	FRAME_AveragingTimes@message,w,c
  2872  001672  26D9               	addwf	fsr2l,f,c
  2873  001674  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2874  001676  22DA               	addwfc	fsr2h,f,c
  2875  001678  0E01               	movlw	1
  2876  00167A  6EDF               	movwf	indf2,c
  2877                           
  2878                           ;FRAME.c: 259:         message->data[0] = 0xFF;
  2879  00167C  EE20 F008          	lfsr	2,8
  2880  001680  5006               	movf	FRAME_AveragingTimes@message,w,c
  2881  001682  26D9               	addwf	fsr2l,f,c
  2882  001684  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2883  001686  22DA               	addwfc	fsr2h,f,c
  2884  001688  0EFF               	movlw	255
  2885  00168A  6EDF               	movwf	indf2,c
  2886                           
  2887                           ;FRAME.c: 260:     }
  2888  00168C  0012               	return		;funcret
  2889  00168E                     __end_of_FRAME_AveragingTimes:
  2890                           	opt callstack 0
  2891                           
  2892 ;; *************** function _FRAME_AnalogValue *****************
  2893 ;; Defined at:
  2894 ;;		line 486 in file "FRAME.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  message         2    5[COMRAM] PTR struct .
  2897 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2898 ;;  set             2    7[COMRAM] unsigned short 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  i               2    0        unsigned short 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      void 
  2903 ;; Registers used:
  2904 ;;		None
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2914 ;;Total ram usage:        4 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    3
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_FRAME_HandleCanFrame
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text23
  2925  001892                     __ptext23:
  2926                           	opt callstack 0
  2927  001892                     _FRAME_AnalogValue:
  2928                           	opt callstack 25
  2929                           
  2930                           ;incstack = 0
  2931  001892  0012               	return		;funcret
  2932  001894                     __end_of_FRAME_AnalogValue:
  2933                           	opt callstack 0
  2934                           
  2935 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2936 ;; Defined at:
  2937 ;;		line 534 in file "FRAME.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  message         2    5[COMRAM] PTR struct .
  2940 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2941 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  i               2   25[COMRAM] unsigned short 
  2944 ;;  kier            2   23[COMRAM] unsigned short 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;Total ram usage:       22 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    3
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_FRAME_HandleCanFrame
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text24
  2969  000062                     __ptext24:
  2970                           	opt callstack 0
  2971  000062                     _FRAME_AdressOfNeighbors:
  2972                           	opt callstack 25
  2973                           
  2974                           ;FRAME.c: 534: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          535: {;FRAME.c: 536:     WORD i;;FRAME.c: 539:     WORD kier = (nrRamki-0x10);
  2975                           
  2976                           ;incstack = 0
  2977  000062  0EF0               	movlw	240
  2978  000064  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  2979  000066  6E18               	movwf	FRAME_AdressOfNeighbors@kier,c
  2980  000068  0EFF               	movlw	255
  2981  00006A  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  2982  00006C  6E19               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  2983                           
  2984                           ;FRAME.c: 540:     if(message->message_type == 0x02)
  2985  00006E  EE20 F001          	lfsr	2,1
  2986  000072  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2987  000074  26D9               	addwf	fsr2l,f,c
  2988  000076  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2989  000078  22DA               	addwfc	fsr2h,f,c
  2990  00007A  0E02               	movlw	2
  2991  00007C  18DE               	xorwf	postinc2,w,c
  2992  00007E  A4D8               	btfss	status,2,c
  2993  000080  D08E               	goto	l3851
  2994                           
  2995                           ;FRAME.c: 541:     {;FRAME.c: 543:         message->data_length = 8;
  2996  000082  EE20 F010          	lfsr	2,16
  2997  000086  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  2998  000088  26D9               	addwf	fsr2l,f,c
  2999  00008A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3000  00008C  22DA               	addwfc	fsr2h,f,c
  3001  00008E  0E08               	movlw	8
  3002  000090  6EDF               	movwf	indf2,c
  3003                           
  3004                           ;FRAME.c: 545:         if(kier == 0)
  3005  000092  5018               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3006  000094  1019               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3007  000096  A4D8               	btfss	status,2,c
  3008  000098  D041               	goto	l3849
  3009                           
  3010                           ;FRAME.c: 546:         {;FRAME.c: 547:         message->data[0] = (NeightAdress1>> 8);
  3011  00009A  EE20 F008          	lfsr	2,8
  3012  00009E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3013  0000A0  26D9               	addwf	fsr2l,f,c
  3014  0000A2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3015  0000A4  22DA               	addwfc	fsr2h,f,c
  3016  0000A6  5038               	movf	_NeightAdress1+1,w,c	;volatile
  3017  0000A8  6EDF               	movwf	indf2,c
  3018                           
  3019                           ;FRAME.c: 548:         message->data[1] = NeightAdress1;
  3020  0000AA  EE20 F009          	lfsr	2,9
  3021  0000AE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3022  0000B0  26D9               	addwf	fsr2l,f,c
  3023  0000B2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3024  0000B4  22DA               	addwfc	fsr2h,f,c
  3025  0000B6  C037  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3026                           
  3027                           ;FRAME.c: 549:         message->data[2] = (NeightAdress2>> 8);
  3028  0000BA  EE20 F00A          	lfsr	2,10
  3029  0000BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3030  0000C0  26D9               	addwf	fsr2l,f,c
  3031  0000C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3032  0000C4  22DA               	addwfc	fsr2h,f,c
  3033  0000C6  5036               	movf	_NeightAdress2+1,w,c	;volatile
  3034  0000C8  6EDF               	movwf	indf2,c
  3035                           
  3036                           ;FRAME.c: 550:         message->data[3] = NeightAdress2;
  3037  0000CA  EE20 F00B          	lfsr	2,11
  3038  0000CE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3039  0000D0  26D9               	addwf	fsr2l,f,c
  3040  0000D2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3041  0000D4  22DA               	addwfc	fsr2h,f,c
  3042  0000D6  C035  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3043                           
  3044                           ;FRAME.c: 551:         message->data[4] = (NeightAdress3>> 8);
  3045  0000DA  EE20 F00C          	lfsr	2,12
  3046  0000DE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3047  0000E0  26D9               	addwf	fsr2l,f,c
  3048  0000E2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3049  0000E4  22DA               	addwfc	fsr2h,f,c
  3050  0000E6  5034               	movf	_NeightAdress3+1,w,c	;volatile
  3051  0000E8  6EDF               	movwf	indf2,c
  3052                           
  3053                           ;FRAME.c: 552:         message->data[5] = NeightAdress3;
  3054  0000EA  EE20 F00D          	lfsr	2,13
  3055  0000EE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3056  0000F0  26D9               	addwf	fsr2l,f,c
  3057  0000F2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3058  0000F4  22DA               	addwfc	fsr2h,f,c
  3059  0000F6  C033  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3060                           
  3061                           ;FRAME.c: 553:         message->data[6] = (NeightAdress4>> 8);
  3062  0000FA  EE20 F00E          	lfsr	2,14
  3063  0000FE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3064  000100  26D9               	addwf	fsr2l,f,c
  3065  000102  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3066  000104  22DA               	addwfc	fsr2h,f,c
  3067  000106  5032               	movf	_NeightAdress4+1,w,c	;volatile
  3068  000108  6EDF               	movwf	indf2,c
  3069                           
  3070                           ;FRAME.c: 554:         message->data[7] = NeightAdress4;
  3071  00010A  EE20 F00F          	lfsr	2,15
  3072  00010E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3073  000110  26D9               	addwf	fsr2l,f,c
  3074  000112  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3075  000114  22DA               	addwfc	fsr2h,f,c
  3076  000116  C031  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3077                           
  3078                           ;FRAME.c: 555:         }
  3079  00011A  0012               	return	
  3080  00011C                     l3849:
  3081                           
  3082                           ;FRAME.c: 557:         {;FRAME.c: 558:         message->data[0] = (NeightAdress5>> 8);
  3083  00011C  EE20 F008          	lfsr	2,8
  3084  000120  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3085  000122  26D9               	addwf	fsr2l,f,c
  3086  000124  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3087  000126  22DA               	addwfc	fsr2h,f,c
  3088  000128  5030               	movf	_NeightAdress5+1,w,c	;volatile
  3089  00012A  6EDF               	movwf	indf2,c
  3090                           
  3091                           ;FRAME.c: 559:         message->data[1] = NeightAdress5;
  3092  00012C  EE20 F009          	lfsr	2,9
  3093  000130  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3094  000132  26D9               	addwf	fsr2l,f,c
  3095  000134  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3096  000136  22DA               	addwfc	fsr2h,f,c
  3097  000138  C02F  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3098                           
  3099                           ;FRAME.c: 560:         message->data[2] = (NeightAdress6>> 8);
  3100  00013C  EE20 F00A          	lfsr	2,10
  3101  000140  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3102  000142  26D9               	addwf	fsr2l,f,c
  3103  000144  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3104  000146  22DA               	addwfc	fsr2h,f,c
  3105  000148  502E               	movf	_NeightAdress6+1,w,c	;volatile
  3106  00014A  6EDF               	movwf	indf2,c
  3107                           
  3108                           ;FRAME.c: 561:         message->data[3] = NeightAdress6;
  3109  00014C  EE20 F00B          	lfsr	2,11
  3110  000150  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3111  000152  26D9               	addwf	fsr2l,f,c
  3112  000154  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3113  000156  22DA               	addwfc	fsr2h,f,c
  3114  000158  C02D  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3115                           
  3116                           ;FRAME.c: 562:         message->data[4] = (NeightAdress7>> 8);
  3117  00015C  EE20 F00C          	lfsr	2,12
  3118  000160  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3119  000162  26D9               	addwf	fsr2l,f,c
  3120  000164  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3121  000166  22DA               	addwfc	fsr2h,f,c
  3122  000168  502C               	movf	_NeightAdress7+1,w,c	;volatile
  3123  00016A  6EDF               	movwf	indf2,c
  3124                           
  3125                           ;FRAME.c: 563:         message->data[5] = NeightAdress7;
  3126  00016C  EE20 F00D          	lfsr	2,13
  3127  000170  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3128  000172  26D9               	addwf	fsr2l,f,c
  3129  000174  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3130  000176  22DA               	addwfc	fsr2h,f,c
  3131  000178  C02B  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3132                           
  3133                           ;FRAME.c: 564:         message->data[6] = (NeightAdress8>> 8);
  3134  00017C  EE20 F00E          	lfsr	2,14
  3135  000180  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3136  000182  26D9               	addwf	fsr2l,f,c
  3137  000184  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3138  000186  22DA               	addwfc	fsr2h,f,c
  3139  000188  502A               	movf	_NeightAdress8+1,w,c	;volatile
  3140  00018A  6EDF               	movwf	indf2,c
  3141                           
  3142                           ;FRAME.c: 565:         message->data[7] = NeightAdress8;
  3143  00018C  EE20 F00F          	lfsr	2,15
  3144  000190  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3145  000192  26D9               	addwf	fsr2l,f,c
  3146  000194  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3147  000196  22DA               	addwfc	fsr2h,f,c
  3148  000198  C029  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3149  00019C  0012               	return	
  3150  00019E                     l3851:
  3151                           
  3152                           ;FRAME.c: 572:     {;FRAME.c: 575:         if(kier == 0)
  3153  00019E  5018               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3154  0001A0  1019               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3155  0001A2  A4D8               	btfss	status,2,c
  3156  0001A4  D0C1               	goto	l3867
  3157                           
  3158                           ;FRAME.c: 576:         {;FRAME.c: 577:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3159  0001A6  EE20 F008          	lfsr	2,8
  3160  0001AA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3161  0001AC  26D9               	addwf	fsr2l,f,c
  3162  0001AE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3163  0001B0  22DA               	addwfc	fsr2h,f,c
  3164  0001B2  50DF               	movf	indf2,w,c
  3165  0001B4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3166  0001B6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3167  0001B8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3168  0001BA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3169  0001BC  EE20 F009          	lfsr	2,9
  3170  0001C0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3171  0001C2  26D9               	addwf	fsr2l,f,c
  3172  0001C4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3173  0001C6  22DA               	addwfc	fsr2h,f,c
  3174  0001C8  50DF               	movf	indf2,w,c
  3175  0001CA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3176  0001CC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3177  0001CE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3178  0001D0  6E37               	movwf	_NeightAdress1,c	;volatile
  3179  0001D2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3180  0001D4  6E38               	movwf	_NeightAdress1+1,c	;volatile
  3181                           
  3182                           ;FRAME.c: 578:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3183  0001D6  EE20 F00A          	lfsr	2,10
  3184  0001DA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3185  0001DC  26D9               	addwf	fsr2l,f,c
  3186  0001DE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3187  0001E0  22DA               	addwfc	fsr2h,f,c
  3188  0001E2  50DF               	movf	indf2,w,c
  3189  0001E4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3190  0001E6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3191  0001E8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3192  0001EA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3193  0001EC  EE20 F00B          	lfsr	2,11
  3194  0001F0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3195  0001F2  26D9               	addwf	fsr2l,f,c
  3196  0001F4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3197  0001F6  22DA               	addwfc	fsr2h,f,c
  3198  0001F8  50DF               	movf	indf2,w,c
  3199  0001FA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3200  0001FC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3201  0001FE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3202  000200  6E35               	movwf	_NeightAdress2,c	;volatile
  3203  000202  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3204  000204  6E36               	movwf	_NeightAdress2+1,c	;volatile
  3205                           
  3206                           ;FRAME.c: 579:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3207  000206  EE20 F00C          	lfsr	2,12
  3208  00020A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3209  00020C  26D9               	addwf	fsr2l,f,c
  3210  00020E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3211  000210  22DA               	addwfc	fsr2h,f,c
  3212  000212  50DF               	movf	indf2,w,c
  3213  000214  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3214  000216  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3215  000218  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3216  00021A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3217  00021C  EE20 F00D          	lfsr	2,13
  3218  000220  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3219  000222  26D9               	addwf	fsr2l,f,c
  3220  000224  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3221  000226  22DA               	addwfc	fsr2h,f,c
  3222  000228  50DF               	movf	indf2,w,c
  3223  00022A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3224  00022C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3225  00022E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3226  000230  6E33               	movwf	_NeightAdress3,c	;volatile
  3227  000232  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3228  000234  6E34               	movwf	_NeightAdress3+1,c	;volatile
  3229                           
  3230                           ;FRAME.c: 580:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3231  000236  EE20 F00E          	lfsr	2,14
  3232  00023A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3233  00023C  26D9               	addwf	fsr2l,f,c
  3234  00023E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3235  000240  22DA               	addwfc	fsr2h,f,c
  3236  000242  50DF               	movf	indf2,w,c
  3237  000244  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3238  000246  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3239  000248  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3240  00024A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3241  00024C  EE20 F00F          	lfsr	2,15
  3242  000250  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3243  000252  26D9               	addwf	fsr2l,f,c
  3244  000254  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3245  000256  22DA               	addwfc	fsr2h,f,c
  3246  000258  50DF               	movf	indf2,w,c
  3247  00025A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3248  00025C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3249  00025E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3250  000260  6E31               	movwf	_NeightAdress4,c	;volatile
  3251  000262  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3252  000264  6E32               	movwf	_NeightAdress4+1,c	;volatile
  3253                           
  3254                           ;FRAME.c: 582:          for(i=0; i<4; i++)
  3255  000266  0E00               	movlw	0
  3256  000268  6E1B               	movwf	FRAME_AdressOfNeighbors@i+1,c
  3257  00026A  0E00               	movlw	0
  3258  00026C  6E1A               	movwf	FRAME_AdressOfNeighbors@i,c
  3259  00026E                     l3861:
  3260                           
  3261                           ;FRAME.c: 583:             {;FRAME.c: 584:             Dane->sasiedzi[i+(4*kier)].adres 
      +                          = (message->data[2*i] << 8)| message->data[(2*i)+1];
  3262  00026E  C01A  F00A         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  3263  000272  C01B  F00B         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  3264  000276  90D8               	bcf	status,0,c
  3265  000278  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  3266  00027A  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  3267  00027C  C006  F00C         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  3268  000280  C007  F00D         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  3269  000284  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3270  000286  260C               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  3271  000288  500B               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  3272  00028A  220D               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  3273  00028C  0E08               	movlw	8
  3274  00028E  240C               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  3275  000290  6ED9               	movwf	fsr2l,c
  3276  000292  0E00               	movlw	0
  3277  000294  200D               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  3278  000296  6EDA               	movwf	fsr2h,c
  3279  000298  50DF               	movf	indf2,w,c
  3280  00029A  6E0E               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  3281  00029C  500E               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  3282  00029E  6E10               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  3283  0002A0  6A0F               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  3284  0002A2  C01A  F011         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+7
  3285  0002A6  C01B  F012         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+8
  3286  0002AA  90D8               	bcf	status,0,c
  3287  0002AC  3611               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  3288  0002AE  3612               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  3289  0002B0  C006  F013         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  3290  0002B4  C007  F014         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  3291  0002B8  5011               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  3292  0002BA  2613               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  3293  0002BC  5012               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  3294  0002BE  2214               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  3295  0002C0  0E09               	movlw	9
  3296  0002C2  2413               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  3297  0002C4  6ED9               	movwf	fsr2l,c
  3298  0002C6  0E00               	movlw	0
  3299  0002C8  2014               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  3300  0002CA  6EDA               	movwf	fsr2h,c
  3301  0002CC  50DF               	movf	indf2,w,c
  3302  0002CE  6E15               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  3303  0002D0  5015               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  3304  0002D2  120F               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  3305  0002D4  0E00               	movlw	0
  3306  0002D6  1210               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  3307  0002D8  C018  F016         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors+12
  3308  0002DC  C019  F017         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+13
  3309  0002E0  90D8               	bcf	status,0,c
  3310  0002E2  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  3311  0002E4  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  3312  0002E6  90D8               	bcf	status,0,c
  3313  0002E8  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  3314  0002EA  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  3315  0002EC  501A               	movf	FRAME_AdressOfNeighbors@i,w,c
  3316  0002EE  2616               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  3317  0002F0  501B               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  3318  0002F2  2217               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  3319  0002F4  90D8               	bcf	status,0,c
  3320  0002F6  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  3321  0002F8  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  3322  0002FA  90D8               	bcf	status,0,c
  3323  0002FC  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  3324  0002FE  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  3325  000300  0E0E               	movlw	14
  3326  000302  2416               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  3327  000304  6ED9               	movwf	fsr2l,c
  3328  000306  0E00               	movlw	0
  3329  000308  2017               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  3330  00030A  6EDA               	movwf	fsr2h,c
  3331  00030C  C00F  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  3332  000310  C010  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  3333                           
  3334                           ;FRAME.c: 586:             }
  3335  000314  4A1A               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  3336  000316  2A1B               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  3337  000318  501B               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  3338  00031A  E105               	bnz	u2530
  3339  00031C  0E04               	movlw	4
  3340  00031E  5C1A               	subwf	FRAME_AdressOfNeighbors@i,w,c
  3341  000320  B0D8               	btfsc	status,0,c
  3342  000322  0012               	return	
  3343  000324  D7A4               	goto	l3861
  3344  000326                     u2530:
  3345  000326  0012               	return	
  3346  000328                     l3867:
  3347                           
  3348                           ;FRAME.c: 589:         {;FRAME.c: 590:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3349  000328  EE20 F008          	lfsr	2,8
  3350  00032C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3351  00032E  26D9               	addwf	fsr2l,f,c
  3352  000330  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3353  000332  22DA               	addwfc	fsr2h,f,c
  3354  000334  50DF               	movf	indf2,w,c
  3355  000336  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3356  000338  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3357  00033A  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3358  00033C  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3359  00033E  EE20 F009          	lfsr	2,9
  3360  000342  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3361  000344  26D9               	addwf	fsr2l,f,c
  3362  000346  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3363  000348  22DA               	addwfc	fsr2h,f,c
  3364  00034A  50DF               	movf	indf2,w,c
  3365  00034C  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3366  00034E  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3367  000350  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3368  000352  6E2F               	movwf	_NeightAdress5,c	;volatile
  3369  000354  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3370  000356  6E30               	movwf	_NeightAdress5+1,c	;volatile
  3371                           
  3372                           ;FRAME.c: 591:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3373  000358  EE20 F00A          	lfsr	2,10
  3374  00035C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3375  00035E  26D9               	addwf	fsr2l,f,c
  3376  000360  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3377  000362  22DA               	addwfc	fsr2h,f,c
  3378  000364  50DF               	movf	indf2,w,c
  3379  000366  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3380  000368  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3381  00036A  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3382  00036C  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3383  00036E  EE20 F00B          	lfsr	2,11
  3384  000372  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3385  000374  26D9               	addwf	fsr2l,f,c
  3386  000376  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3387  000378  22DA               	addwfc	fsr2h,f,c
  3388  00037A  50DF               	movf	indf2,w,c
  3389  00037C  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3390  00037E  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3391  000380  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3392  000382  6E2D               	movwf	_NeightAdress6,c	;volatile
  3393  000384  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3394  000386  6E2E               	movwf	_NeightAdress6+1,c	;volatile
  3395                           
  3396                           ;FRAME.c: 592:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3397  000388  EE20 F00C          	lfsr	2,12
  3398  00038C  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3399  00038E  26D9               	addwf	fsr2l,f,c
  3400  000390  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3401  000392  22DA               	addwfc	fsr2h,f,c
  3402  000394  50DF               	movf	indf2,w,c
  3403  000396  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3404  000398  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3405  00039A  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3406  00039C  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3407  00039E  EE20 F00D          	lfsr	2,13
  3408  0003A2  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3409  0003A4  26D9               	addwf	fsr2l,f,c
  3410  0003A6  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3411  0003A8  22DA               	addwfc	fsr2h,f,c
  3412  0003AA  50DF               	movf	indf2,w,c
  3413  0003AC  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3414  0003AE  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3415  0003B0  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3416  0003B2  6E2B               	movwf	_NeightAdress7,c	;volatile
  3417  0003B4  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3418  0003B6  6E2C               	movwf	_NeightAdress7+1,c	;volatile
  3419                           
  3420                           ;FRAME.c: 593:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3421  0003B8  EE20 F00E          	lfsr	2,14
  3422  0003BC  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3423  0003BE  26D9               	addwf	fsr2l,f,c
  3424  0003C0  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3425  0003C2  22DA               	addwfc	fsr2h,f,c
  3426  0003C4  50DF               	movf	indf2,w,c
  3427  0003C6  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3428  0003C8  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3429  0003CA  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3430  0003CC  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3431  0003CE  EE20 F00F          	lfsr	2,15
  3432  0003D2  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3433  0003D4  26D9               	addwf	fsr2l,f,c
  3434  0003D6  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3435  0003D8  22DA               	addwfc	fsr2h,f,c
  3436  0003DA  50DF               	movf	indf2,w,c
  3437  0003DC  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3438  0003DE  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3439  0003E0  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3440  0003E2  6E29               	movwf	_NeightAdress8,c	;volatile
  3441  0003E4  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3442  0003E6  6E2A               	movwf	_NeightAdress8+1,c	;volatile
  3443                           
  3444                           ;FRAME.c: 594:          for(i=0; i<4; i++)
  3445  0003E8  0E00               	movlw	0
  3446  0003EA  6E1B               	movwf	FRAME_AdressOfNeighbors@i+1,c
  3447  0003EC  0E00               	movlw	0
  3448  0003EE  6E1A               	movwf	FRAME_AdressOfNeighbors@i,c
  3449  0003F0                     l3875:
  3450                           
  3451                           ;FRAME.c: 595:             {;FRAME.c: 596:             Dane->sasiedzi[i+(4*kier)].adres 
      +                          = (message->data[2*i] << 8)| message->data[(2*i)+1];
  3452  0003F0  C01A  F00A         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  3453  0003F4  C01B  F00B         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  3454  0003F8  90D8               	bcf	status,0,c
  3455  0003FA  360A               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  3456  0003FC  360B               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  3457  0003FE  C006  F00C         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  3458  000402  C007  F00D         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  3459  000406  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3460  000408  260C               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  3461  00040A  500B               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  3462  00040C  220D               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  3463  00040E  0E08               	movlw	8
  3464  000410  240C               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  3465  000412  6ED9               	movwf	fsr2l,c
  3466  000414  0E00               	movlw	0
  3467  000416  200D               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  3468  000418  6EDA               	movwf	fsr2h,c
  3469  00041A  50DF               	movf	indf2,w,c
  3470  00041C  6E0E               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  3471  00041E  500E               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  3472  000420  6E10               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  3473  000422  6A0F               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  3474  000424  C01A  F011         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+7
  3475  000428  C01B  F012         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+8
  3476  00042C  90D8               	bcf	status,0,c
  3477  00042E  3611               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  3478  000430  3612               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  3479  000432  C006  F013         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  3480  000436  C007  F014         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  3481  00043A  5011               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  3482  00043C  2613               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  3483  00043E  5012               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  3484  000440  2214               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  3485  000442  0E09               	movlw	9
  3486  000444  2413               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  3487  000446  6ED9               	movwf	fsr2l,c
  3488  000448  0E00               	movlw	0
  3489  00044A  2014               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  3490  00044C  6EDA               	movwf	fsr2h,c
  3491  00044E  50DF               	movf	indf2,w,c
  3492  000450  6E15               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  3493  000452  5015               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  3494  000454  120F               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  3495  000456  0E00               	movlw	0
  3496  000458  1210               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  3497  00045A  C018  F016         	movff	FRAME_AdressOfNeighbors@kier,??_FRAME_AdressOfNeighbors+12
  3498  00045E  C019  F017         	movff	FRAME_AdressOfNeighbors@kier+1,??_FRAME_AdressOfNeighbors+13
  3499  000462  90D8               	bcf	status,0,c
  3500  000464  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  3501  000466  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  3502  000468  90D8               	bcf	status,0,c
  3503  00046A  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  3504  00046C  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  3505  00046E  501A               	movf	FRAME_AdressOfNeighbors@i,w,c
  3506  000470  2616               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  3507  000472  501B               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  3508  000474  2217               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  3509  000476  90D8               	bcf	status,0,c
  3510  000478  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  3511  00047A  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  3512  00047C  90D8               	bcf	status,0,c
  3513  00047E  3616               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  3514  000480  3617               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  3515  000482  0E0E               	movlw	14
  3516  000484  2416               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  3517  000486  6ED9               	movwf	fsr2l,c
  3518  000488  0E00               	movlw	0
  3519  00048A  2017               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  3520  00048C  6EDA               	movwf	fsr2h,c
  3521  00048E  C00F  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  3522  000492  C010  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  3523                           
  3524                           ;FRAME.c: 598:             }
  3525  000496  4A1A               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  3526  000498  2A1B               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  3527  00049A  501B               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  3528  00049C  E105               	bnz	u2540
  3529  00049E  0E04               	movlw	4
  3530  0004A0  5C1A               	subwf	FRAME_AdressOfNeighbors@i,w,c
  3531  0004A2  B0D8               	btfsc	status,0,c
  3532  0004A4  0012               	return	
  3533  0004A6  D7A4               	goto	l3875
  3534  0004A8                     u2540:
  3535  0004A8  0012               	return		;funcret
  3536  0004AA                     __end_of_FRAME_AdressOfNeighbors:
  3537                           	opt callstack 0
  3538                           
  3539 ;; *************** function _FRAME_AccelerometerStatus *****************
  3540 ;; Defined at:
  3541 ;;		line 170 in file "FRAME.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  message         2    7[COMRAM] PTR struct .
  3544 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3559 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3560 ;;Total ram usage:        3 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    4
  3563 ;; This function calls:
  3564 ;;		_MOCK_Klikniecie_Spadek
  3565 ;;		_MOCK_PrzyspieszenieX
  3566 ;;		_MOCK_PrzyspieszenieY
  3567 ;;		_MOCK_PrzyspieszenieZ
  3568 ;; This function is called by:
  3569 ;;		_FRAME_HandleCanFrame
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text25
  3574  00122E                     __ptext25:
  3575                           	opt callstack 0
  3576  00122E                     _FRAME_AccelerometerStatus:
  3577                           	opt callstack 24
  3578                           
  3579                           ;FRAME.c: 170: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 171: {;FRAME
      +                          .c: 172:     if(message->message_type == 0x02)
  3580                           
  3581                           ;incstack = 0
  3582  00122E  EE20 F001          	lfsr	2,1
  3583  001232  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3584  001234  26D9               	addwf	fsr2l,f,c
  3585  001236  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3586  001238  22DA               	addwfc	fsr2h,f,c
  3587  00123A  0E02               	movlw	2
  3588  00123C  18DE               	xorwf	postinc2,w,c
  3589  00123E  A4D8               	btfss	status,2,c
  3590  001240  0012               	return	
  3591                           
  3592                           ;FRAME.c: 173:     {;FRAME.c: 174:         message->data_length = 4;
  3593  001242  EE20 F010          	lfsr	2,16
  3594  001246  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3595  001248  26D9               	addwf	fsr2l,f,c
  3596  00124A  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3597  00124C  22DA               	addwfc	fsr2h,f,c
  3598  00124E  0E04               	movlw	4
  3599  001250  6EDF               	movwf	indf2,c
  3600                           
  3601                           ;FRAME.c: 178:         message->data[0] = MOCK_PrzyspieszenieX();
  3602  001252  EE20 F008          	lfsr	2,8
  3603  001256  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3604  001258  26D9               	addwf	fsr2l,f,c
  3605  00125A  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3606  00125C  22DA               	addwfc	fsr2h,f,c
  3607  00125E  EC1D  F00C         	call	_MOCK_PrzyspieszenieX	;wreg free
  3608  001262  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3609  001264  6EDF               	movwf	indf2,c
  3610                           
  3611                           ;FRAME.c: 179:         message->data[1] = MOCK_PrzyspieszenieY();
  3612  001266  EE20 F009          	lfsr	2,9
  3613  00126A  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3614  00126C  26D9               	addwf	fsr2l,f,c
  3615  00126E  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3616  001270  22DA               	addwfc	fsr2h,f,c
  3617  001272  EC18  F00C         	call	_MOCK_PrzyspieszenieY	;wreg free
  3618  001276  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3619  001278  6EDF               	movwf	indf2,c
  3620                           
  3621                           ;FRAME.c: 180:         message->data[2] = MOCK_PrzyspieszenieZ();
  3622  00127A  EE20 F00A          	lfsr	2,10
  3623  00127E  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3624  001280  26D9               	addwf	fsr2l,f,c
  3625  001282  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3626  001284  22DA               	addwfc	fsr2h,f,c
  3627  001286  EC13  F00C         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3628  00128A  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3629  00128C  6EDF               	movwf	indf2,c
  3630                           
  3631                           ;FRAME.c: 181:         message->data[3] = MOCK_Klikniecie_Spadek();
  3632  00128E  EE20 F00B          	lfsr	2,11
  3633  001292  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3634  001294  26D9               	addwf	fsr2l,f,c
  3635  001296  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3636  001298  22DA               	addwfc	fsr2h,f,c
  3637  00129A  EC22  F00C         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3638  00129E  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3639  0012A0  6EDF               	movwf	indf2,c
  3640                           
  3641                           ;FRAME.c: 182:     }
  3642  0012A2  0012               	return		;funcret
  3643  0012A4                     __end_of_FRAME_AccelerometerStatus:
  3644                           	opt callstack 0
  3645                           
  3646 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3647 ;; Defined at:
  3648 ;;		line 72 in file "MOC_Funct.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  2    5[COMRAM] unsigned int 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;Total ram usage:        2 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    3
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_FRAME_AccelerometerStatus
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text26
  3677  001826                     __ptext26:
  3678                           	opt callstack 0
  3679  001826                     _MOCK_PrzyspieszenieZ:
  3680                           	opt callstack 24
  3681                           
  3682                           ;MOC_Funct.c: 74:     return 0xFE;
  3683                           
  3684                           ;incstack = 0
  3685  001826  0E00               	movlw	0
  3686  001828  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3687  00182A  0EFE               	movlw	254
  3688  00182C  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3689  00182E  0012               	return		;funcret
  3690  001830                     __end_of_MOCK_PrzyspieszenieZ:
  3691                           	opt callstack 0
  3692                           
  3693 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3694 ;; Defined at:
  3695 ;;		line 68 in file "MOC_Funct.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2    5[COMRAM] unsigned int 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    3
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_FRAME_AccelerometerStatus
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text27
  3724  001830                     __ptext27:
  3725                           	opt callstack 0
  3726  001830                     _MOCK_PrzyspieszenieY:
  3727                           	opt callstack 24
  3728                           
  3729                           ;MOC_Funct.c: 70:     return 0xFE;
  3730                           
  3731                           ;incstack = 0
  3732  001830  0E00               	movlw	0
  3733  001832  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3734  001834  0EFE               	movlw	254
  3735  001836  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3736  001838  0012               	return		;funcret
  3737  00183A                     __end_of_MOCK_PrzyspieszenieY:
  3738                           	opt callstack 0
  3739                           
  3740 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3741 ;; Defined at:
  3742 ;;		line 63 in file "MOC_Funct.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  2    5[COMRAM] unsigned int 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;Total ram usage:        2 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    3
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_FRAME_AccelerometerStatus
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text28
  3771  00183A                     __ptext28:
  3772                           	opt callstack 0
  3773  00183A                     _MOCK_PrzyspieszenieX:
  3774                           	opt callstack 24
  3775                           
  3776                           ;MOC_Funct.c: 65:     return 0xFE;
  3777                           
  3778                           ;incstack = 0
  3779  00183A  0E00               	movlw	0
  3780  00183C  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3781  00183E  0EFE               	movlw	254
  3782  001840  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  3783  001842  0012               	return		;funcret
  3784  001844                     __end_of_MOCK_PrzyspieszenieX:
  3785                           	opt callstack 0
  3786                           
  3787 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3788 ;; Defined at:
  3789 ;;		line 76 in file "MOC_Funct.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2    5[COMRAM] unsigned int 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    3
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_FRAME_AccelerometerStatus
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text29
  3818  001844                     __ptext29:
  3819                           	opt callstack 0
  3820  001844                     _MOCK_Klikniecie_Spadek:
  3821                           	opt callstack 24
  3822                           
  3823                           ;MOC_Funct.c: 78:     return 0b00000000;
  3824                           
  3825                           ;incstack = 0
  3826  001844  0E00               	movlw	0
  3827  001846  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3828  001848  0E00               	movlw	0
  3829  00184A  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  3830  00184C  0012               	return		;funcret
  3831  00184E                     __end_of_MOCK_Klikniecie_Spadek:
  3832                           	opt callstack 0
  3833                           
  3834 ;; *************** function _CAN_SendFrame *****************
  3835 ;; Defined at:
  3836 ;;		line 196 in file "CAN.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  message         2   10[COMRAM] PTR struct .
  3839 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;Total ram usage:        5 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    4
  3858 ;; This function calls:
  3859 ;;		_CAN_MoveBuffIntoFrame
  3860 ;; This function is called by:
  3861 ;;		_FRAME_HandleCanFrame
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text30
  3866  00092C                     __ptext30:
  3867                           	opt callstack 0
  3868  00092C                     _CAN_SendFrame:
  3869                           	opt callstack 24
  3870                           
  3871                           ;CAN.c: 201:     {;CAN.c: 202:         ECANCON = 0x83;
  3872                           
  3873                           ;incstack = 0
  3874                           ;CAN.c: 196: void CAN_SendFrame(mID * message);CAN.c: 197: {;CAN.c: 200:     for(;;)
  3875  00092C  0E83               	movlw	131
  3876  00092E  6E77               	movwf	3959,c	;volatile
  3877                           
  3878                           ;CAN.c: 203:         if(!RXB0CONbits.FILHIT3)
  3879  000930  A660               	btfss	3936,3,c	;volatile
  3880  000932  D00A               	goto	l189
  3881                           
  3882                           ;CAN.c: 208:         ECANCON = 0x84;
  3883  000934  0E84               	movlw	132
  3884  000936  6E77               	movwf	3959,c	;volatile
  3885                           
  3886                           ;CAN.c: 209:         if(!RXB0CONbits.FILHIT3)
  3887  000938  A660               	btfss	3936,3,c	;volatile
  3888  00093A  D006               	goto	l189
  3889                           
  3890                           ;CAN.c: 214:         ECANCON = 0x85;
  3891  00093C  0E85               	movlw	133
  3892  00093E  6E77               	movwf	3959,c	;volatile
  3893                           
  3894                           ;CAN.c: 215:         if(!RXB0CONbits.FILHIT3)
  3895  000940  A660               	btfss	3936,3,c	;volatile
  3896  000942  D002               	goto	l189
  3897  000944  D7F3               	goto	_CAN_SendFrame
  3898  000946                     l190:
  3899  000946  00FF               	reset		;# 
  3900  000948                     l189:
  3901                           
  3902                           ;CAN.c: 222:     while(COMSTATbits.TXWARN)
  3903  000948  B474               	btfsc	3956,2,c	;volatile
  3904  00094A  D7FD               	goto	l190
  3905                           
  3906                           ;CAN.c: 226:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3907  00094C  0E00               	movlw	0
  3908  00094E  0100               	movlb	0	; () banked
  3909  000950  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;CAN.c: 227:     RXB0EIDL = message->id.v[0];
  3913  000952  EE20 F004          	lfsr	2,4
  3914  000956  500B               	movf	CAN_SendFrame@message,w,c
  3915  000958  26D9               	addwf	fsr2l,f,c
  3916  00095A  500C               	movf	CAN_SendFrame@message+1,w,c
  3917  00095C  22DA               	addwfc	fsr2h,f,c
  3918  00095E  50DF               	movf	indf2,w,c
  3919  000960  6E64               	movwf	3940,c	;volatile
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;CAN.c: 228:     RXB0EIDH = message->id.v[1];
  3923  000962  EE20 F005          	lfsr	2,5
  3924  000966  500B               	movf	CAN_SendFrame@message,w,c
  3925  000968  26D9               	addwf	fsr2l,f,c
  3926  00096A  500C               	movf	CAN_SendFrame@message+1,w,c
  3927  00096C  22DA               	addwfc	fsr2h,f,c
  3928  00096E  50DF               	movf	indf2,w,c
  3929  000970  6E63               	movwf	3939,c	;volatile
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;CAN.c: 229:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3933  000972  EE20 F006          	lfsr	2,6
  3934  000976  500B               	movf	CAN_SendFrame@message,w,c
  3935  000978  26D9               	addwf	fsr2l,f,c
  3936  00097A  500C               	movf	CAN_SendFrame@message+1,w,c
  3937  00097C  22DA               	addwfc	fsr2h,f,c
  3938  00097E  50DF               	movf	indf2,w,c
  3939  000980  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3940  000982  0E03               	movlw	3
  3941  000984  160D               	andwf	??_CAN_SendFrame,f,c
  3942  000986  EE20 F006          	lfsr	2,6
  3943  00098A  500B               	movf	CAN_SendFrame@message,w,c
  3944  00098C  26D9               	addwf	fsr2l,f,c
  3945  00098E  500C               	movf	CAN_SendFrame@message+1,w,c
  3946  000990  22DA               	addwfc	fsr2h,f,c
  3947  000992  50DF               	movf	indf2,w,c
  3948  000994  0BFC               	andlw	252
  3949  000996  0D08               	mullw	8
  3950  000998  50F3               	movf	prodl,w,c
  3951  00099A  100D               	iorwf	??_CAN_SendFrame,w,c
  3952  00099C  6E62               	movwf	3938,c	;volatile
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;CAN.c: 230:     RXB0SIDLbits.EXID = 1;
  3956  00099E  8662               	bsf	3938,3,c	;volatile
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;CAN.c: 231:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3960  0009A0  EE20 F006          	lfsr	2,6
  3961  0009A4  500B               	movf	CAN_SendFrame@message,w,c
  3962  0009A6  26D9               	addwf	fsr2l,f,c
  3963  0009A8  500C               	movf	CAN_SendFrame@message+1,w,c
  3964  0009AA  22DA               	addwfc	fsr2h,f,c
  3965  0009AC  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  3966  0009B0  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  3967  0009B4  0E05               	movlw	5
  3968  0009B6  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3969  0009B8                     u2275:
  3970  0009B8  90D8               	bcf	status,0,c
  3971  0009BA  320E               	rrcf	??_CAN_SendFrame+1,f,c
  3972  0009BC  320D               	rrcf	??_CAN_SendFrame,f,c
  3973  0009BE  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3974  0009C0  D7FB               	goto	u2275
  3975  0009C2  500D               	movf	??_CAN_SendFrame,w,c
  3976  0009C4  6E61               	movwf	3937,c	;volatile
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;CAN.c: 233:     RXB0DLC = 0;
  3980  0009C6  0E00               	movlw	0
  3981  0009C8  6E65               	movwf	3941,c	;volatile
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;CAN.c: 235:     if(message->message_type==0x02)
  3985  0009CA  EE20 F001          	lfsr	2,1
  3986  0009CE  500B               	movf	CAN_SendFrame@message,w,c
  3987  0009D0  26D9               	addwf	fsr2l,f,c
  3988  0009D2  500C               	movf	CAN_SendFrame@message+1,w,c
  3989  0009D4  22DA               	addwfc	fsr2h,f,c
  3990  0009D6  0E02               	movlw	2
  3991  0009D8  18DE               	xorwf	postinc2,w,c
  3992  0009DA  A4D8               	btfss	status,2,c
  3993  0009DC  D002               	goto	l3701
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;CAN.c: 236:     {;CAN.c: 237:         RXB0DLCbits.RXRTR = 1;
  3997  0009DE  8C65               	bsf	3941,6,c	;volatile
  3998                           
  3999                           ;CAN.c: 238:     }
  4000  0009E0  D05A               	goto	l3705
  4001  0009E2                     l3701:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;CAN.c: 240:     {;CAN.c: 241:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  4005  0009E2  EE20 F010          	lfsr	2,16
  4006  0009E6  500B               	movf	CAN_SendFrame@message,w,c
  4007  0009E8  26D9               	addwf	fsr2l,f,c
  4008  0009EA  500C               	movf	CAN_SendFrame@message+1,w,c
  4009  0009EC  22DA               	addwfc	fsr2h,f,c
  4010  0009EE  50DF               	movf	indf2,w,c
  4011  0009F0  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4012  0009F2  0E0F               	movlw	15
  4013  0009F4  160D               	andwf	??_CAN_SendFrame,f,c
  4014  0009F6  5065               	movf	3941,w,c	;volatile
  4015  0009F8  180D               	xorwf	??_CAN_SendFrame,w,c
  4016  0009FA  0BFE               	andlw	-2
  4017  0009FC  180D               	xorwf	??_CAN_SendFrame,w,c
  4018  0009FE  6E65               	movwf	3941,c	;volatile
  4019                           
  4020                           ;CAN.c: 242:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4021  000A00  EE20 F010          	lfsr	2,16
  4022  000A04  500B               	movf	CAN_SendFrame@message,w,c
  4023  000A06  26D9               	addwf	fsr2l,f,c
  4024  000A08  500C               	movf	CAN_SendFrame@message+1,w,c
  4025  000A0A  22DA               	addwfc	fsr2h,f,c
  4026  000A0C  50DF               	movf	indf2,w,c
  4027  000A0E  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4028  000A10  90D8               	bcf	status,0,c
  4029  000A12  320D               	rrcf	??_CAN_SendFrame,f,c
  4030  000A14  0E07               	movlw	7
  4031  000A16  160D               	andwf	??_CAN_SendFrame,f,c
  4032  000A18  460D               	rlncf	??_CAN_SendFrame,f,c
  4033  000A1A  5065               	movf	3941,w,c	;volatile
  4034  000A1C  180D               	xorwf	??_CAN_SendFrame,w,c
  4035  000A1E  0BFD               	andlw	-3
  4036  000A20  180D               	xorwf	??_CAN_SendFrame,w,c
  4037  000A22  6E65               	movwf	3941,c	;volatile
  4038                           
  4039                           ;CAN.c: 243:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4040  000A24  EE20 F010          	lfsr	2,16
  4041  000A28  500B               	movf	CAN_SendFrame@message,w,c
  4042  000A2A  26D9               	addwf	fsr2l,f,c
  4043  000A2C  500C               	movf	CAN_SendFrame@message+1,w,c
  4044  000A2E  22DA               	addwfc	fsr2h,f,c
  4045  000A30  50DF               	movf	indf2,w,c
  4046  000A32  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4047  000A34  90D8               	bcf	status,0,c
  4048  000A36  320D               	rrcf	??_CAN_SendFrame,f,c
  4049  000A38  90D8               	bcf	status,0,c
  4050  000A3A  320D               	rrcf	??_CAN_SendFrame,f,c
  4051  000A3C  0E03               	movlw	3
  4052  000A3E  160D               	andwf	??_CAN_SendFrame,f,c
  4053  000A40  460D               	rlncf	??_CAN_SendFrame,f,c
  4054  000A42  460D               	rlncf	??_CAN_SendFrame,f,c
  4055  000A44  5065               	movf	3941,w,c	;volatile
  4056  000A46  180D               	xorwf	??_CAN_SendFrame,w,c
  4057  000A48  0BFB               	andlw	-5
  4058  000A4A  180D               	xorwf	??_CAN_SendFrame,w,c
  4059  000A4C  6E65               	movwf	3941,c	;volatile
  4060                           
  4061                           ;CAN.c: 244:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4062  000A4E  EE20 F010          	lfsr	2,16
  4063  000A52  500B               	movf	CAN_SendFrame@message,w,c
  4064  000A54  26D9               	addwf	fsr2l,f,c
  4065  000A56  500C               	movf	CAN_SendFrame@message+1,w,c
  4066  000A58  22DA               	addwfc	fsr2h,f,c
  4067  000A5A  50DF               	movf	indf2,w,c
  4068  000A5C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4069  000A5E  90D8               	bcf	status,0,c
  4070  000A60  320D               	rrcf	??_CAN_SendFrame,f,c
  4071  000A62  90D8               	bcf	status,0,c
  4072  000A64  320D               	rrcf	??_CAN_SendFrame,f,c
  4073  000A66  90D8               	bcf	status,0,c
  4074  000A68  320D               	rrcf	??_CAN_SendFrame,f,c
  4075  000A6A  0E01               	movlw	1
  4076  000A6C  160D               	andwf	??_CAN_SendFrame,f,c
  4077  000A6E  460D               	rlncf	??_CAN_SendFrame,f,c
  4078  000A70  460D               	rlncf	??_CAN_SendFrame,f,c
  4079  000A72  460D               	rlncf	??_CAN_SendFrame,f,c
  4080  000A74  5065               	movf	3941,w,c	;volatile
  4081  000A76  180D               	xorwf	??_CAN_SendFrame,w,c
  4082  000A78  0BF7               	andlw	-9
  4083  000A7A  180D               	xorwf	??_CAN_SendFrame,w,c
  4084  000A7C  6E65               	movwf	3941,c	;volatile
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;CAN.c: 246:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4088  000A7E  0E66               	movlw	102
  4089  000A80  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4090  000A82  0E0F               	movlw	15
  4091  000A84  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4092  000A86  0E08               	movlw	8
  4093  000A88  240B               	addwf	CAN_SendFrame@message,w,c
  4094  000A8A  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4095  000A8C  0E00               	movlw	0
  4096  000A8E  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4097  000A90  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4098  000A92  EC79  F00B         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4099  000A96                     l3705:
  4100                           
  4101                           ;CAN.c: 249:     RXB0CONbits.FILHIT3 = 1;
  4102  000A96  8660               	bsf	3936,3,c	;volatile
  4103                           
  4104                           ;CAN.c: 251:     DetectorLedRadar.Flags.ramkaTx = 1;
  4105  000A98  0100               	movlb	0	; () banked
  4106  000A9A  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4107                           
  4108                           ; BSR set to: 0
  4109  000A9C  0012               	return		;funcret
  4110  000A9E                     __end_of_CAN_SendFrame:
  4111                           	opt callstack 0
  4112                           
  4113 ;; *************** function _CAN_GenID *****************
  4114 ;; Defined at:
  4115 ;;		line 395 in file "CAN.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  message         2    5[COMRAM] PTR struct .
  4118 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4119 ;;  frameID         1    7[COMRAM] unsigned char 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4131 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;Total ram usage:        7 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    3
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_FRAME_HandleCanFrame
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text31
  4146  000F98                     __ptext31:
  4147                           	opt callstack 0
  4148  000F98                     _CAN_GenID:
  4149                           	opt callstack 25
  4150                           
  4151                           ;CAN.c: 395: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 396: {;CAN.c: 398:     m
      +                          essage->frame_type = 0x03;
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;incstack = 0
  4155  000F98  EE20 F002          	lfsr	2,2
  4156  000F9C  5006               	movf	CAN_GenID@message,w,c
  4157  000F9E  26D9               	addwf	fsr2l,f,c
  4158  000FA0  5007               	movf	CAN_GenID@message+1,w,c
  4159  000FA2  22DA               	addwfc	fsr2h,f,c
  4160  000FA4  0E03               	movlw	3
  4161  000FA6  6EDF               	movwf	indf2,c
  4162                           
  4163                           ;CAN.c: 399:     message->message_type = 0x01;
  4164  000FA8  EE20 F001          	lfsr	2,1
  4165  000FAC  5006               	movf	CAN_GenID@message,w,c
  4166  000FAE  26D9               	addwf	fsr2l,f,c
  4167  000FB0  5007               	movf	CAN_GenID@message+1,w,c
  4168  000FB2  22DA               	addwfc	fsr2h,f,c
  4169  000FB4  0E01               	movlw	1
  4170  000FB6  6EDF               	movwf	indf2,c
  4171                           
  4172                           ;CAN.c: 400:     message->id.w[1] = (WORD)frameID * (WORD)4;
  4173  000FB8  5008               	movf	CAN_GenID@frameID,w,c
  4174  000FBA  6E09               	movwf	??_CAN_GenID& (0+255),c
  4175  000FBC  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4176  000FBE  90D8               	bcf	status,0,c
  4177  000FC0  3609               	rlcf	??_CAN_GenID,f,c
  4178  000FC2  360A               	rlcf	??_CAN_GenID+1,f,c
  4179  000FC4  90D8               	bcf	status,0,c
  4180  000FC6  3609               	rlcf	??_CAN_GenID,f,c
  4181  000FC8  360A               	rlcf	??_CAN_GenID+1,f,c
  4182  000FCA  EE20 F006          	lfsr	2,6
  4183  000FCE  5006               	movf	CAN_GenID@message,w,c
  4184  000FD0  26D9               	addwf	fsr2l,f,c
  4185  000FD2  5007               	movf	CAN_GenID@message+1,w,c
  4186  000FD4  22DA               	addwfc	fsr2h,f,c
  4187  000FD6  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4188  000FDA  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4189                           
  4190                           ;CAN.c: 401:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  4191  000FDE  0E2C               	movlw	44
  4192  000FE0  6E09               	movwf	??_CAN_GenID& (0+255),c
  4193  000FE2  0E01               	movlw	1
  4194  000FE4  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  4195  000FE6  EE20  F027         	lfsr	2,_DaneCan+2
  4196  000FEA  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  4197  000FEE  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  4198  000FF2  5009               	movf	??_CAN_GenID,w,c
  4199  000FF4  260B               	addwf	??_CAN_GenID+2,f,c
  4200  000FF6  500A               	movf	??_CAN_GenID+1,w,c
  4201  000FF8  220C               	addwfc	??_CAN_GenID+3,f,c
  4202  000FFA  EE20 F004          	lfsr	2,4
  4203  000FFE  5006               	movf	CAN_GenID@message,w,c
  4204  001000  26D9               	addwf	fsr2l,f,c
  4205  001002  5007               	movf	CAN_GenID@message+1,w,c
  4206  001004  22DA               	addwfc	fsr2h,f,c
  4207  001006  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  4208  00100A  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  4209                           
  4210                           ;CAN.c: 404:     message ->id.bits.b16 = 0;
  4211  00100E  EE20 F006          	lfsr	2,6
  4212  001012  5006               	movf	CAN_GenID@message,w,c
  4213  001014  26D9               	addwf	fsr2l,f,c
  4214  001016  5007               	movf	CAN_GenID@message+1,w,c
  4215  001018  22DA               	addwfc	fsr2h,f,c
  4216  00101A  90DF               	bcf	indf2,0,c
  4217                           
  4218                           ;CAN.c: 405:     message ->id.bits.b17 = 0;
  4219  00101C  EE20 F006          	lfsr	2,6
  4220  001020  5006               	movf	CAN_GenID@message,w,c
  4221  001022  26D9               	addwf	fsr2l,f,c
  4222  001024  5007               	movf	CAN_GenID@message+1,w,c
  4223  001026  22DA               	addwfc	fsr2h,f,c
  4224  001028  92DF               	bcf	indf2,1,c
  4225  00102A  0012               	return		;funcret
  4226  00102C                     __end_of_CAN_GenID:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _CAN_TakeFrame *****************
  4230 ;; Defined at:
  4231 ;;		line 260 in file "CAN.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  message         2   13[COMRAM] PTR struct .
  4234 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  k               1   18[COMRAM] unsigned char 
  4237 ;;  tempCON         1   17[COMRAM] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      enum E10433
  4240 ;; Registers used:
  4241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;Total ram usage:        6 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    4
  4254 ;; This function calls:
  4255 ;;		_CAN_MoveBuffIntoFrame
  4256 ;;		___awdiv
  4257 ;; This function is called by:
  4258 ;;		_TRM_DataTransmition
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text32
  4263  0004AA                     __ptext32:
  4264                           	opt callstack 0
  4265  0004AA                     _CAN_TakeFrame:
  4266                           	opt callstack 25
  4267                           
  4268                           ;CAN.c: 260: BOOL CAN_TakeFrame(mID * message);CAN.c: 261: {;CAN.c: 262:     BYTE k, tem
      +                          pCON;;CAN.c: 264:     k = CANCON&0x0F;
  4269                           
  4270                           ;incstack = 0
  4271  0004AA  506F               	movf	3951,w,c	;volatile
  4272  0004AC  0B0F               	andlw	15
  4273  0004AE  6E13               	movwf	CAN_TakeFrame@k,c
  4274                           
  4275                           ;CAN.c: 266:     ECANCON = 0x90 | k;
  4276  0004B0  5013               	movf	CAN_TakeFrame@k,w,c
  4277  0004B2  0990               	iorlw	144
  4278  0004B4  6E77               	movwf	3959,c	;volatile
  4279                           
  4280                           ;CAN.c: 269:     switch(k)
  4281  0004B6  D018               	goto	l3929
  4282  0004B8                     l198:
  4283                           
  4284                           ;CAN.c: 272:             tempCON = RXB0CON;
  4285  0004B8  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4286                           
  4287                           ;CAN.c: 273:             break;
  4288  0004BC  D035               	goto	l199
  4289  0004BE                     l200:
  4290                           
  4291                           ;CAN.c: 275:             tempCON = RXB1CON;
  4292  0004BE  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4293                           
  4294                           ;CAN.c: 276:             break;
  4295  0004C2  D032               	goto	l199
  4296  0004C4                     l201:
  4297                           
  4298                           ;CAN.c: 278:             tempCON = B0CON;
  4299  0004C4  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4300                           
  4301                           ;CAN.c: 279:             break;
  4302  0004C8  D02F               	goto	l199
  4303  0004CA                     l202:
  4304                           
  4305                           ;CAN.c: 281:             tempCON = B1CON;
  4306  0004CA  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4307                           
  4308                           ;CAN.c: 282:             break;
  4309  0004CE  D02C               	goto	l199
  4310  0004D0                     l203:
  4311                           
  4312                           ;CAN.c: 284:             tempCON = B2CON;
  4313  0004D0  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4314                           
  4315                           ;CAN.c: 285:             break;
  4316  0004D4  D029               	goto	l199
  4317  0004D6                     l204:
  4318                           
  4319                           ;CAN.c: 287:             tempCON = B3CON;
  4320  0004D6  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4321                           
  4322                           ;CAN.c: 288:             break;
  4323  0004DA  D026               	goto	l199
  4324  0004DC                     l205:
  4325                           
  4326                           ;CAN.c: 290:             tempCON = B4CON;
  4327  0004DC  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4328                           
  4329                           ;CAN.c: 291:             break;
  4330  0004E0  D023               	goto	l199
  4331  0004E2                     l206:
  4332                           
  4333                           ;CAN.c: 293:             tempCON = B5CON;
  4334  0004E2  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4335                           
  4336                           ;CAN.c: 294:             break;
  4337  0004E6  D020               	goto	l199
  4338  0004E8                     l3929:
  4339  0004E8  5013               	movf	CAN_TakeFrame@k,w,c
  4340  0004EA  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4341  0004EC  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4342                           
  4343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4344                           ; Switch size 1, requested type "simple"
  4345                           ; Number of cases is 1, Range of values is 0 to 0
  4346                           ; switch strategies available:
  4347                           ; Name         Instructions Cycles
  4348                           ; simple_byte            4     3 (average)
  4349                           ;	Chosen strategy is simple_byte
  4350  0004EE  5011               	movf	??_CAN_TakeFrame+1,w,c
  4351  0004F0  0A00               	xorlw	0	; case 0
  4352  0004F2  A4D8               	btfss	status,2,c
  4353  0004F4  D019               	goto	l199
  4354                           
  4355                           ; Switch size 1, requested type "simple"
  4356                           ; Number of cases is 8, Range of values is 0 to 7
  4357                           ; switch strategies available:
  4358                           ; Name         Instructions Cycles
  4359                           ; simple_byte           25    13 (average)
  4360                           ;	Chosen strategy is simple_byte
  4361  0004F6  5010               	movf	??_CAN_TakeFrame,w,c
  4362  0004F8  0A00               	xorlw	0	; case 0
  4363  0004FA  B4D8               	btfsc	status,2,c
  4364  0004FC  D7DD               	goto	l198
  4365  0004FE  0A01               	xorlw	1	; case 1
  4366  000500  B4D8               	btfsc	status,2,c
  4367  000502  D7DD               	goto	l200
  4368  000504  0A03               	xorlw	3	; case 2
  4369  000506  B4D8               	btfsc	status,2,c
  4370  000508  D7DD               	goto	l201
  4371  00050A  0A01               	xorlw	1	; case 3
  4372  00050C  B4D8               	btfsc	status,2,c
  4373  00050E  D7DD               	goto	l202
  4374  000510  0A07               	xorlw	7	; case 4
  4375  000512  B4D8               	btfsc	status,2,c
  4376  000514  D7DD               	goto	l203
  4377  000516  0A01               	xorlw	1	; case 5
  4378  000518  B4D8               	btfsc	status,2,c
  4379  00051A  D7DD               	goto	l204
  4380  00051C  0A03               	xorlw	3	; case 6
  4381  00051E  B4D8               	btfsc	status,2,c
  4382  000520  D7DD               	goto	l205
  4383  000522  0A01               	xorlw	1	; case 7
  4384  000524  B4D8               	btfsc	status,2,c
  4385  000526  D7DD               	goto	l206
  4386  000528                     l199:
  4387                           
  4388                           ;CAN.c: 298:     if((tempCON & 0x80) > 0)
  4389  000528  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4390  00052A  D0A5               	goto	l3965
  4391                           
  4392                           ;CAN.c: 299:     {;CAN.c: 300:         message->buffer = RXB0CON & 0x1F;
  4393  00052C  EE20 F003          	lfsr	2,3
  4394  000530  500E               	movf	CAN_TakeFrame@message,w,c
  4395  000532  26D9               	addwf	fsr2l,f,c
  4396  000534  500F               	movf	CAN_TakeFrame@message+1,w,c
  4397  000536  22DA               	addwfc	fsr2h,f,c
  4398  000538  5060               	movf	3936,w,c	;volatile
  4399  00053A  0B1F               	andlw	31
  4400  00053C  6EDF               	movwf	indf2,c
  4401                           
  4402                           ;CAN.c: 301:         message->id.v[0] = RXB0EIDL;
  4403  00053E  EE20 F004          	lfsr	2,4
  4404  000542  500E               	movf	CAN_TakeFrame@message,w,c
  4405  000544  26D9               	addwf	fsr2l,f,c
  4406  000546  500F               	movf	CAN_TakeFrame@message+1,w,c
  4407  000548  22DA               	addwfc	fsr2h,f,c
  4408  00054A  CF64 FFDF          	movff	3940,indf2	;volatile
  4409                           
  4410                           ;CAN.c: 302:         message->id.v[1] = RXB0EIDH;
  4411  00054E  EE20 F005          	lfsr	2,5
  4412  000552  500E               	movf	CAN_TakeFrame@message,w,c
  4413  000554  26D9               	addwf	fsr2l,f,c
  4414  000556  500F               	movf	CAN_TakeFrame@message+1,w,c
  4415  000558  22DA               	addwfc	fsr2h,f,c
  4416  00055A  CF63 FFDF          	movff	3939,indf2	;volatile
  4417                           
  4418                           ;CAN.c: 303:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4419  00055E  EE20 F006          	lfsr	2,6
  4420  000562  500E               	movf	CAN_TakeFrame@message,w,c
  4421  000564  26D9               	addwf	fsr2l,f,c
  4422  000566  500F               	movf	CAN_TakeFrame@message+1,w,c
  4423  000568  22DA               	addwfc	fsr2h,f,c
  4424  00056A  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4425  00056E  0E03               	movlw	3
  4426  000570  1610               	andwf	??_CAN_TakeFrame,f,c
  4427  000572  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4428  000576  6A07               	clrf	___awdiv@dividend+1,c
  4429  000578  0E00               	movlw	0
  4430  00057A  6E09               	movwf	___awdiv@divisor+1,c
  4431  00057C  0E08               	movlw	8
  4432  00057E  6E08               	movwf	___awdiv@divisor,c
  4433  000580  EC5C  F008         	call	___awdiv	;wreg free
  4434  000584  5006               	movf	?___awdiv,w,c
  4435  000586  1010               	iorwf	??_CAN_TakeFrame,w,c
  4436  000588  6EDF               	movwf	indf2,c
  4437                           
  4438                           ;CAN.c: 304:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4439  00058A  5061               	movf	3937,w,c	;volatile
  4440  00058C  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4441  00058E  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4442  000590  0E05               	movlw	5
  4443  000592                     u2625:
  4444  000592  90D8               	bcf	status,0,c
  4445  000594  3610               	rlcf	??_CAN_TakeFrame,f,c
  4446  000596  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4447  000598  2EE8               	decfsz	wreg,f,c
  4448  00059A  D7FB               	goto	u2625
  4449  00059C  EE20 F006          	lfsr	2,6
  4450  0005A0  500E               	movf	CAN_TakeFrame@message,w,c
  4451  0005A2  26D9               	addwf	fsr2l,f,c
  4452  0005A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  4453  0005A6  22DA               	addwfc	fsr2h,f,c
  4454  0005A8  5010               	movf	??_CAN_TakeFrame,w,c
  4455  0005AA  12DE               	iorwf	postinc2,f,c
  4456  0005AC  5011               	movf	??_CAN_TakeFrame+1,w,c
  4457  0005AE  12DD               	iorwf	postdec2,f,c
  4458                           
  4459                           ;CAN.c: 305:         message->frame_type=0x03;
  4460  0005B0  EE20 F002          	lfsr	2,2
  4461  0005B4  500E               	movf	CAN_TakeFrame@message,w,c
  4462  0005B6  26D9               	addwf	fsr2l,f,c
  4463  0005B8  500F               	movf	CAN_TakeFrame@message+1,w,c
  4464  0005BA  22DA               	addwfc	fsr2h,f,c
  4465  0005BC  0E03               	movlw	3
  4466  0005BE  6EDF               	movwf	indf2,c
  4467                           
  4468                           ;CAN.c: 309:         if(RXB0DLCbits.RXRTR == 0)
  4469  0005C0  BC65               	btfsc	3941,6,c	;volatile
  4470  0005C2  D068               	goto	l3971
  4471                           
  4472                           ;CAN.c: 310:         {;CAN.c: 311:             message->message_type = 0x01;
  4473  0005C4  EE20 F001          	lfsr	2,1
  4474  0005C8  500E               	movf	CAN_TakeFrame@message,w,c
  4475  0005CA  26D9               	addwf	fsr2l,f,c
  4476  0005CC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4477  0005CE  22DA               	addwfc	fsr2h,f,c
  4478  0005D0  0E01               	movlw	1
  4479  0005D2  6EDF               	movwf	indf2,c
  4480                           
  4481                           ;CAN.c: 312:             message->data_length= RXB0DLC & 0x0F;
  4482  0005D4  EE20 F010          	lfsr	2,16
  4483  0005D8  500E               	movf	CAN_TakeFrame@message,w,c
  4484  0005DA  26D9               	addwf	fsr2l,f,c
  4485  0005DC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4486  0005DE  22DA               	addwfc	fsr2h,f,c
  4487  0005E0  5065               	movf	3941,w,c	;volatile
  4488  0005E2  0B0F               	andlw	15
  4489  0005E4  6EDF               	movwf	indf2,c
  4490                           
  4491                           ;CAN.c: 313:             if(message->data_length > 8)
  4492  0005E6  EE20 F010          	lfsr	2,16
  4493  0005EA  500E               	movf	CAN_TakeFrame@message,w,c
  4494  0005EC  26D9               	addwf	fsr2l,f,c
  4495  0005EE  500F               	movf	CAN_TakeFrame@message+1,w,c
  4496  0005F0  22DA               	addwfc	fsr2h,f,c
  4497  0005F2  0E08               	movlw	8
  4498  0005F4  64DF               	cpfsgt	indf2,c
  4499  0005F6  D041               	goto	l3969
  4500  0005F8  D01E               	goto	l3963
  4501  0005FA                     l3945:
  4502                           
  4503                           ;CAN.c: 319:                         RXB0CON = 0;
  4504  0005FA  0E00               	movlw	0
  4505  0005FC  6E60               	movwf	3936,c	;volatile
  4506                           
  4507                           ;CAN.c: 320:                         break;
  4508  0005FE  D03B               	goto	l3965
  4509  000600                     l3947:
  4510                           
  4511                           ;CAN.c: 322:                         RXB1CON = 0;
  4512  000600  0E00               	movlw	0
  4513  000602  010F               	movlb	15	; () banked
  4514  000604  D00E               	goto	L1
  4515  000606                     l3949:
  4516                           
  4517                           ;CAN.c: 325:                         B0CON = 0;
  4518  000606  0E00               	movlw	0
  4519  000608  010E               	movlb	14	; () banked
  4520  00060A  6F20               	movwf	32,b	;volatile
  4521                           
  4522                           ;CAN.c: 326:                         break;
  4523  00060C  D034               	goto	l3965
  4524  00060E                     l3951:
  4525                           
  4526                           ;CAN.c: 328:                         B1CON = 0;
  4527  00060E  0E00               	movlw	0
  4528  000610  010E               	movlb	14	; () banked
  4529  000612  6F30               	movwf	48,b	;volatile
  4530                           
  4531                           ;CAN.c: 329:                         break;
  4532  000614  D030               	goto	l3965
  4533  000616                     l3953:
  4534                           
  4535                           ;CAN.c: 331:                         B2CON = 0;
  4536  000616  0E00               	movlw	0
  4537  000618  010E               	movlb	14	; () banked
  4538  00061A  6F40               	movwf	64,b	;volatile
  4539                           
  4540                           ;CAN.c: 332:                         break;
  4541  00061C  D02C               	goto	l3965
  4542  00061E                     l3955:
  4543                           
  4544                           ;CAN.c: 334:                         B3CON = 0;
  4545  00061E  0E00               	movlw	0
  4546  000620  010E               	movlb	14	; () banked
  4547  000622                     L1:
  4548  000622  6F50               	movwf	80,b	;volatile
  4549                           
  4550                           ;CAN.c: 335:                         break;
  4551  000624  D028               	goto	l3965
  4552  000626                     l3957:
  4553                           
  4554                           ;CAN.c: 337:                         B4CON = 0;
  4555  000626  0E00               	movlw	0
  4556  000628  010E               	movlb	14	; () banked
  4557  00062A  6F60               	movwf	96,b	;volatile
  4558                           
  4559                           ;CAN.c: 338:                         break;
  4560  00062C  D024               	goto	l3965
  4561  00062E                     l3959:
  4562                           
  4563                           ;CAN.c: 340:                         B5CON = 0;
  4564  00062E  0E00               	movlw	0
  4565  000630  010E               	movlb	14	; () banked
  4566  000632  6F70               	movwf	112,b	;volatile
  4567                           
  4568                           ;CAN.c: 341:                         break;
  4569  000634  D020               	goto	l3965
  4570  000636                     l3963:
  4571  000636  5013               	movf	CAN_TakeFrame@k,w,c
  4572  000638  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4573  00063A  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4574                           
  4575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4576                           ; Switch size 1, requested type "simple"
  4577                           ; Number of cases is 1, Range of values is 0 to 0
  4578                           ; switch strategies available:
  4579                           ; Name         Instructions Cycles
  4580                           ; simple_byte            4     3 (average)
  4581                           ;	Chosen strategy is simple_byte
  4582  00063C  5011               	movf	??_CAN_TakeFrame+1,w,c
  4583  00063E  0A00               	xorlw	0	; case 0
  4584  000640  A4D8               	btfss	status,2,c
  4585  000642  D019               	goto	l3965
  4586                           
  4587                           ; Switch size 1, requested type "simple"
  4588                           ; Number of cases is 8, Range of values is 0 to 7
  4589                           ; switch strategies available:
  4590                           ; Name         Instructions Cycles
  4591                           ; simple_byte           25    13 (average)
  4592                           ;	Chosen strategy is simple_byte
  4593  000644  5010               	movf	??_CAN_TakeFrame,w,c
  4594  000646  0A00               	xorlw	0	; case 0
  4595  000648  B4D8               	btfsc	status,2,c
  4596  00064A  D7D7               	goto	l3945
  4597  00064C  0A01               	xorlw	1	; case 1
  4598  00064E  B4D8               	btfsc	status,2,c
  4599  000650  D7D7               	goto	l3947
  4600  000652  0A03               	xorlw	3	; case 2
  4601  000654  B4D8               	btfsc	status,2,c
  4602  000656  D7D7               	goto	l3949
  4603  000658  0A01               	xorlw	1	; case 3
  4604  00065A  B4D8               	btfsc	status,2,c
  4605  00065C  D7D8               	goto	l3951
  4606  00065E  0A07               	xorlw	7	; case 4
  4607  000660  B4D8               	btfsc	status,2,c
  4608  000662  D7D9               	goto	l3953
  4609  000664  0A01               	xorlw	1	; case 5
  4610  000666  B4D8               	btfsc	status,2,c
  4611  000668  D7DA               	goto	l3955
  4612  00066A  0A03               	xorlw	3	; case 6
  4613  00066C  B4D8               	btfsc	status,2,c
  4614  00066E  D7DB               	goto	l3957
  4615  000670  0A01               	xorlw	1	; case 7
  4616  000672  B4D8               	btfsc	status,2,c
  4617  000674  D7DC               	goto	l3959
  4618  000676                     l3965:
  4619                           
  4620                           ;CAN.c: 343:                 return FALSE;
  4621  000676  0E00               	movlw	0
  4622  000678  0012               	return	
  4623  00067A                     l3969:
  4624                           
  4625                           ;CAN.c: 345:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4626  00067A  0E08               	movlw	8
  4627  00067C  240E               	addwf	CAN_TakeFrame@message,w,c
  4628  00067E  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4629  000680  0E00               	movlw	0
  4630  000682  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4631  000684  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4632  000686  0E66               	movlw	102
  4633  000688  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4634  00068A  0E0F               	movlw	15
  4635  00068C  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4636  00068E  EC79  F00B         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4637                           
  4638                           ;CAN.c: 346:         }
  4639  000692  D027               	goto	l3991
  4640  000694                     l3971:
  4641                           
  4642                           ;CAN.c: 349:         {;CAN.c: 350:             message->message_type=0x02;
  4643  000694  EE20 F001          	lfsr	2,1
  4644  000698  500E               	movf	CAN_TakeFrame@message,w,c
  4645  00069A  26D9               	addwf	fsr2l,f,c
  4646  00069C  500F               	movf	CAN_TakeFrame@message+1,w,c
  4647  00069E  22DA               	addwfc	fsr2h,f,c
  4648  0006A0  0E02               	movlw	2
  4649  0006A2  6EDF               	movwf	indf2,c
  4650  0006A4  D01E               	goto	l3991
  4651  0006A6                     l3973:
  4652                           
  4653                           ;CAN.c: 356:                 RXB0CON = 0;
  4654  0006A6  0E00               	movlw	0
  4655  0006A8  6E60               	movwf	3936,c	;volatile
  4656                           
  4657                           ;CAN.c: 357:                 break;
  4658  0006AA  D03B               	goto	l3993
  4659  0006AC                     l3975:
  4660                           
  4661                           ;CAN.c: 359:                 RXB1CON = 0;
  4662  0006AC  0E00               	movlw	0
  4663  0006AE  010F               	movlb	15	; () banked
  4664  0006B0  D00E               	goto	L2
  4665  0006B2                     l3977:
  4666                           
  4667                           ;CAN.c: 362:                 B0CON = 0;
  4668  0006B2  0E00               	movlw	0
  4669  0006B4  010E               	movlb	14	; () banked
  4670  0006B6  6F20               	movwf	32,b	;volatile
  4671                           
  4672                           ;CAN.c: 363:                 break;
  4673  0006B8  D034               	goto	l3993
  4674  0006BA                     l3979:
  4675                           
  4676                           ;CAN.c: 365:                 B1CON = 0;
  4677  0006BA  0E00               	movlw	0
  4678  0006BC  010E               	movlb	14	; () banked
  4679  0006BE  6F30               	movwf	48,b	;volatile
  4680                           
  4681                           ;CAN.c: 366:                 break;
  4682  0006C0  D030               	goto	l3993
  4683  0006C2                     l3981:
  4684                           
  4685                           ;CAN.c: 368:                 B2CON = 0;
  4686  0006C2  0E00               	movlw	0
  4687  0006C4  010E               	movlb	14	; () banked
  4688  0006C6  6F40               	movwf	64,b	;volatile
  4689                           
  4690                           ;CAN.c: 369:                 break;
  4691  0006C8  D02C               	goto	l3993
  4692  0006CA                     l3983:
  4693                           
  4694                           ;CAN.c: 371:                 B3CON = 0;
  4695  0006CA  0E00               	movlw	0
  4696  0006CC  010E               	movlb	14	; () banked
  4697  0006CE                     L2:
  4698  0006CE  6F50               	movwf	80,b	;volatile
  4699                           
  4700                           ;CAN.c: 372:                 break;
  4701  0006D0  D028               	goto	l3993
  4702  0006D2                     l3985:
  4703                           
  4704                           ;CAN.c: 374:                 B4CON = 0;
  4705  0006D2  0E00               	movlw	0
  4706  0006D4  010E               	movlb	14	; () banked
  4707  0006D6  6F60               	movwf	96,b	;volatile
  4708                           
  4709                           ;CAN.c: 375:                 break;
  4710  0006D8  D024               	goto	l3993
  4711  0006DA                     l3987:
  4712                           
  4713                           ;CAN.c: 377:                 B5CON = 0;
  4714  0006DA  0E00               	movlw	0
  4715  0006DC  010E               	movlb	14	; () banked
  4716  0006DE  6F70               	movwf	112,b	;volatile
  4717                           
  4718                           ;CAN.c: 378:                 break;
  4719  0006E0  D020               	goto	l3993
  4720  0006E2                     l3991:
  4721  0006E2  5013               	movf	CAN_TakeFrame@k,w,c
  4722  0006E4  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4723  0006E6  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4724                           
  4725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4726                           ; Switch size 1, requested type "simple"
  4727                           ; Number of cases is 1, Range of values is 0 to 0
  4728                           ; switch strategies available:
  4729                           ; Name         Instructions Cycles
  4730                           ; simple_byte            4     3 (average)
  4731                           ;	Chosen strategy is simple_byte
  4732  0006E8  5011               	movf	??_CAN_TakeFrame+1,w,c
  4733  0006EA  0A00               	xorlw	0	; case 0
  4734  0006EC  A4D8               	btfss	status,2,c
  4735  0006EE  D019               	goto	l3993
  4736                           
  4737                           ; Switch size 1, requested type "simple"
  4738                           ; Number of cases is 8, Range of values is 0 to 7
  4739                           ; switch strategies available:
  4740                           ; Name         Instructions Cycles
  4741                           ; simple_byte           25    13 (average)
  4742                           ;	Chosen strategy is simple_byte
  4743  0006F0  5010               	movf	??_CAN_TakeFrame,w,c
  4744  0006F2  0A00               	xorlw	0	; case 0
  4745  0006F4  B4D8               	btfsc	status,2,c
  4746  0006F6  D7D7               	goto	l3973
  4747  0006F8  0A01               	xorlw	1	; case 1
  4748  0006FA  B4D8               	btfsc	status,2,c
  4749  0006FC  D7D7               	goto	l3975
  4750  0006FE  0A03               	xorlw	3	; case 2
  4751  000700  B4D8               	btfsc	status,2,c
  4752  000702  D7D7               	goto	l3977
  4753  000704  0A01               	xorlw	1	; case 3
  4754  000706  B4D8               	btfsc	status,2,c
  4755  000708  D7D8               	goto	l3979
  4756  00070A  0A07               	xorlw	7	; case 4
  4757  00070C  B4D8               	btfsc	status,2,c
  4758  00070E  D7D9               	goto	l3981
  4759  000710  0A01               	xorlw	1	; case 5
  4760  000712  B4D8               	btfsc	status,2,c
  4761  000714  D7DA               	goto	l3983
  4762  000716  0A03               	xorlw	3	; case 6
  4763  000718  B4D8               	btfsc	status,2,c
  4764  00071A  D7DB               	goto	l3985
  4765  00071C  0A01               	xorlw	1	; case 7
  4766  00071E  B4D8               	btfsc	status,2,c
  4767  000720  D7DC               	goto	l3987
  4768  000722                     l3993:
  4769                           
  4770                           ;CAN.c: 380:         return TRUE;
  4771  000722  0E01               	movlw	1
  4772  000724  0012               	return		;funcret
  4773  000726                     __end_of_CAN_TakeFrame:
  4774                           	opt callstack 0
  4775                           
  4776 ;; *************** function ___awdiv *****************
  4777 ;; Defined at:
  4778 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  dividend        2    5[COMRAM] int 
  4781 ;;  divisor         2    7[COMRAM] int 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  quotient        2   11[COMRAM] int 
  4784 ;;  sign            1   10[COMRAM] unsigned char 
  4785 ;;  counter         1    9[COMRAM] unsigned char 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  2    5[COMRAM] int 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;Total ram usage:        8 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    3
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_CAN_TakeFrame
  4806 ;;		_FRAME_HandleCanFrame
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text33
  4811  0010B8                     __ptext33:
  4812                           	opt callstack 0
  4813  0010B8                     ___awdiv:
  4814                           	opt callstack 25
  4815                           
  4816                           ;incstack = 0
  4817  0010B8  0E00               	movlw	0
  4818  0010BA  6E0B               	movwf	___awdiv@sign,c
  4819  0010BC  AE09               	btfss	___awdiv@divisor+1,7,c
  4820  0010BE  D006               	goto	l3889
  4821  0010C0  6C08               	negf	___awdiv@divisor,c
  4822  0010C2  1E09               	comf	___awdiv@divisor+1,f,c
  4823  0010C4  B0D8               	btfsc	status,0,c
  4824  0010C6  2A09               	incf	___awdiv@divisor+1,f,c
  4825  0010C8  0E01               	movlw	1
  4826  0010CA  6E0B               	movwf	___awdiv@sign,c
  4827  0010CC                     l3889:
  4828  0010CC  AE07               	btfss	___awdiv@dividend+1,7,c
  4829  0010CE  D006               	goto	l3895
  4830  0010D0  6C06               	negf	___awdiv@dividend,c
  4831  0010D2  1E07               	comf	___awdiv@dividend+1,f,c
  4832  0010D4  B0D8               	btfsc	status,0,c
  4833  0010D6  2A07               	incf	___awdiv@dividend+1,f,c
  4834  0010D8  0E01               	movlw	1
  4835  0010DA  1A0B               	xorwf	___awdiv@sign,f,c
  4836  0010DC                     l3895:
  4837  0010DC  0E00               	movlw	0
  4838  0010DE  6E0D               	movwf	___awdiv@quotient+1,c
  4839  0010E0  0E00               	movlw	0
  4840  0010E2  6E0C               	movwf	___awdiv@quotient,c
  4841  0010E4  5008               	movf	___awdiv@divisor,w,c
  4842  0010E6  1009               	iorwf	___awdiv@divisor+1,w,c
  4843  0010E8  B4D8               	btfsc	status,2,c
  4844  0010EA  D01C               	goto	l3917
  4845  0010EC  0E01               	movlw	1
  4846  0010EE  6E0A               	movwf	___awdiv@counter,c
  4847  0010F0  D004               	goto	l3903
  4848  0010F2                     l3901:
  4849  0010F2  90D8               	bcf	status,0,c
  4850  0010F4  3608               	rlcf	___awdiv@divisor,f,c
  4851  0010F6  3609               	rlcf	___awdiv@divisor+1,f,c
  4852  0010F8  2A0A               	incf	___awdiv@counter,f,c
  4853  0010FA                     l3903:
  4854  0010FA  AE09               	btfss	___awdiv@divisor+1,7,c
  4855  0010FC  D7FA               	goto	l3901
  4856  0010FE                     u2580:
  4857  0010FE  90D8               	bcf	status,0,c
  4858  001100  360C               	rlcf	___awdiv@quotient,f,c
  4859  001102  360D               	rlcf	___awdiv@quotient+1,f,c
  4860  001104  5008               	movf	___awdiv@divisor,w,c
  4861  001106  5C06               	subwf	___awdiv@dividend,w,c
  4862  001108  5009               	movf	___awdiv@divisor+1,w,c
  4863  00110A  5807               	subwfb	___awdiv@dividend+1,w,c
  4864  00110C  A0D8               	btfss	status,0,c
  4865  00110E  D005               	goto	l3913
  4866  001110  5008               	movf	___awdiv@divisor,w,c
  4867  001112  5E06               	subwf	___awdiv@dividend,f,c
  4868  001114  5009               	movf	___awdiv@divisor+1,w,c
  4869  001116  5A07               	subwfb	___awdiv@dividend+1,f,c
  4870  001118  800C               	bsf	___awdiv@quotient,0,c
  4871  00111A                     l3913:
  4872  00111A  90D8               	bcf	status,0,c
  4873  00111C  3209               	rrcf	___awdiv@divisor+1,f,c
  4874  00111E  3208               	rrcf	___awdiv@divisor,f,c
  4875  001120  2E0A               	decfsz	___awdiv@counter,f,c
  4876  001122  D7ED               	goto	u2580
  4877  001124                     l3917:
  4878  001124  500B               	movf	___awdiv@sign,w,c
  4879  001126  B4D8               	btfsc	status,2,c
  4880  001128  D004               	goto	l3921
  4881  00112A  6C0C               	negf	___awdiv@quotient,c
  4882  00112C  1E0D               	comf	___awdiv@quotient+1,f,c
  4883  00112E  B0D8               	btfsc	status,0,c
  4884  001130  2A0D               	incf	___awdiv@quotient+1,f,c
  4885  001132                     l3921:
  4886  001132  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4887  001136  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4888  00113A  0012               	return		;funcret
  4889  00113C                     __end_of___awdiv:
  4890                           	opt callstack 0
  4891                           
  4892 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4893 ;; Defined at:
  4894 ;;		line 182 in file "CAN.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4897 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4898 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4899 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  i               1    9[COMRAM] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;Total ram usage:        5 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    3
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_CAN_SendFrame
  4922 ;;		_CAN_TakeFrame
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text34
  4927  0016F2                     __ptext34:
  4928                           	opt callstack 0
  4929  0016F2                     _CAN_MoveBuffIntoFrame:
  4930                           	opt callstack 24
  4931                           
  4932                           ;CAN.c: 182: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 183: {;CAN.c
      +                          : 184:     BYTE i;;CAN.c: 185:     for(i=0; i<8; ++i)
  4933                           
  4934                           ;incstack = 0
  4935  0016F2  0E00               	movlw	0
  4936  0016F4  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4937  0016F6                     l3537:
  4938                           
  4939                           ;CAN.c: 186:     {;CAN.c: 187:         Ram[i]=(*(Buf+i));
  4940  0016F6  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4941  0016F8  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4942  0016FA  6ED9               	movwf	fsr2l,c
  4943  0016FC  0E00               	movlw	0
  4944  0016FE  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4945  001700  6EDA               	movwf	fsr2h,c
  4946  001702  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4947  001704  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4948  001706  6EE1               	movwf	fsr1l,c
  4949  001708  0E00               	movlw	0
  4950  00170A  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4951  00170C  6EE2               	movwf	fsr1h,c
  4952  00170E  CFDF FFE7          	movff	indf2,indf1
  4953                           
  4954                           ;CAN.c: 188:     }
  4955  001712  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4956  001714  0E07               	movlw	7
  4957  001716  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4958  001718  D7EE               	goto	l3537
  4959  00171A  0012               	return	
  4960  00171C                     __end_of_CAN_MoveBuffIntoFrame:
  4961                           	opt callstack 0
  4962                           
  4963 ;; *************** function _TMR1_Update_flag_Set *****************
  4964 ;; Defined at:
  4965 ;;		line 32 in file "TMR1.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  a               2    5[COMRAM] unsigned int 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		None
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;Total ram usage:        2 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    3
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text35
  4994  00184E                     __ptext35:
  4995                           	opt callstack 0
  4996  00184E                     _TMR1_Update_flag_Set:
  4997                           	opt callstack 27
  4998                           
  4999                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5000                           
  5001                           ;incstack = 0
  5002  00184E  C006  F039         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5003  001852  C007  F03A         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5004  001856  0012               	return		;funcret
  5005  001858                     __end_of_TMR1_Update_flag_Set:
  5006                           	opt callstack 0
  5007                           
  5008 ;; *************** function _TMR1_Update_flag_Get *****************
  5009 ;; Defined at:
  5010 ;;		line 47 in file "TMR1.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  2    5[COMRAM] unsigned int 
  5017 ;; Registers used:
  5018 ;;		None
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;Total ram usage:        2 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    3
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_main
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text36
  5039  001858                     __ptext36:
  5040                           	opt callstack 0
  5041  001858                     _TMR1_Update_flag_Get:
  5042                           	opt callstack 27
  5043                           
  5044                           ;TMR1.c: 49:     return TMR1_Update_flag;
  5045                           
  5046                           ;incstack = 0
  5047  001858  C039  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5048  00185C  C03A  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5049  001860  0012               	return		;funcret
  5050  001862                     __end_of_TMR1_Update_flag_Get:
  5051                           	opt callstack 0
  5052                           
  5053 ;; *************** function _LED_Update *****************
  5054 ;; Defined at:
  5055 ;;		line 105 in file "LED.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;		None
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      unsigned char 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;Total ram usage:        0 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; Hardware stack levels required when called:    5
  5076 ;; This function calls:
  5077 ;;		_LED_Control
  5078 ;;		_LED_Left
  5079 ;;		_LED_Light_Pos
  5080 ;;		_LED_Right
  5081 ;; This function is called by:
  5082 ;;		_main
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text37
  5087  00113C                     __ptext37:
  5088                           	opt callstack 0
  5089  00113C                     _LED_Update:
  5090                           	opt callstack 25
  5091                           
  5092                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  5093                           
  5094                           ;incstack = 0
  5095  00113C  5041               	movf	_LOCK,w,c
  5096  00113E  A4D8               	btfss	status,2,c
  5097  001140  D013               	goto	l4123
  5098                           
  5099                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  5100  001142  0E00               	movlw	0
  5101  001144  6E07               	movwf	LED_Control@diode+1,c
  5102  001146  0E00               	movlw	0
  5103  001148  6E06               	movwf	LED_Control@diode,c
  5104  00114A  0E00               	movlw	0
  5105  00114C  EC4F  F005         	call	_LED_Control
  5106                           
  5107                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5108  001150  C044  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5109  001154  C045  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5110  001158  C048  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5111  00115C  C049  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5112  001160  504A               	movf	LED_Update@Green,w,c
  5113  001162  EC25  F007         	call	_LED_Light_Pos
  5114                           
  5115                           ;LED.c: 117:     }
  5116  001166  D012               	goto	l293
  5117  001168                     l4123:
  5118                           
  5119                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  5120  001168  0E00               	movlw	0
  5121  00116A  6E07               	movwf	LED_Control@diode+1,c
  5122  00116C  0E00               	movlw	0
  5123  00116E  6E06               	movwf	LED_Control@diode,c
  5124  001170  504A               	movf	LED_Update@Green,w,c
  5125  001172  EC4F  F005         	call	_LED_Control
  5126                           
  5127                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5128  001176  C046  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5129  00117A  C047  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5130  00117E  C048  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5131  001182  C049  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5132  001186  0E00               	movlw	0
  5133  001188  EC25  F007         	call	_LED_Light_Pos
  5134  00118C                     l293:
  5135                           
  5136                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  5137  00118C  C046  F006         	movff	LED_Update@pos1,LED_Right@a
  5138  001190  C047  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5139  001194  ECAF  F00A         	call	_LED_Right	;wreg free
  5140  001198  C006  F046         	movff	?_LED_Right,LED_Update@pos1
  5141  00119C  C007  F047         	movff	?_LED_Right+1,LED_Update@pos1+1
  5142                           
  5143                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  5144  0011A0  C044  F006         	movff	LED_Update@pos2,LED_Left@a
  5145  0011A4  C045  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5146  0011A8  ECD5  F00A         	call	_LED_Left	;wreg free
  5147  0011AC  C006  F044         	movff	?_LED_Left,LED_Update@pos2
  5148  0011B0  C007  F045         	movff	?_LED_Left+1,LED_Update@pos2+1
  5149  0011B4  0012               	return		;funcret
  5150  0011B6                     __end_of_LED_Update:
  5151                           	opt callstack 0
  5152                           
  5153 ;; *************** function _LED_Light_Pos *****************
  5154 ;; Defined at:
  5155 ;;		line 196 in file "LED.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  color           1    wreg     enum E10644
  5158 ;;  pos             2   12[COMRAM] unsigned int 
  5159 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  color           1   16[COMRAM] enum E10644
  5162 ;;  flage           2   21[COMRAM] unsigned int 
  5163 ;;  pos2            2   19[COMRAM] unsigned int 
  5164 ;;  LED_array       2   17[COMRAM] unsigned int 
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  2   12[COMRAM] unsigned int 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;Total ram usage:       11 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    4
  5181 ;; This function calls:
  5182 ;;		_LED_Control
  5183 ;;		_LED_Left
  5184 ;;		_LED_Right
  5185 ;;		___lwdiv
  5186 ;; This function is called by:
  5187 ;;		_LED_Update
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text38
  5192  000E4A                     __ptext38:
  5193                           	opt callstack 0
  5194  000E4A                     _LED_Light_Pos:
  5195                           	opt callstack 25
  5196                           
  5197                           ;incstack = 0
  5198                           ;LED_Light_Pos@color stored from wreg
  5199  000E4A  6E11               	movwf	LED_Light_Pos@color,c
  5200                           
  5201                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  5202  000E4C  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5203  000E50  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5204                           
  5205                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  5206  000E54  0E00               	movlw	0
  5207  000E56  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5208  000E58  0E00               	movlw	0
  5209  000E5A  6E12               	movwf	LED_Light_Pos@LED_array,c
  5210                           
  5211                           ;LED.c: 200:     UINT flage = fulfillment/10;
  5212  000E5C  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5213  000E60  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5214  000E64  0E00               	movlw	0
  5215  000E66  6E09               	movwf	___lwdiv@divisor+1,c
  5216  000E68  0E0A               	movlw	10
  5217  000E6A  6E08               	movwf	___lwdiv@divisor,c
  5218  000E6C  EC39  F00A         	call	___lwdiv	;wreg free
  5219  000E70  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5220  000E74  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5221                           
  5222                           ;LED.c: 201:     if(color == RED)
  5223  000E78  5011               	movf	LED_Light_Pos@color,w,c
  5224  000E7A  B4D8               	btfsc	status,2,c
  5225  000E7C  D017               	goto	l4031
  5226  000E7E  D031               	goto	l4039
  5227  000E80                     l4025:
  5228                           
  5229                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5230  000E80  5012               	movf	LED_Light_Pos@LED_array,w,c
  5231  000E82  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5232  000E84  6E12               	movwf	LED_Light_Pos@LED_array,c
  5233  000E86  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5234  000E88  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5235  000E8A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5236                           
  5237                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5238  000E8C  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5239  000E90  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5240  000E94  ECD5  F00A         	call	_LED_Left	;wreg free
  5241  000E98  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5242  000E9C  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5243                           
  5244                           ;LED.c: 207:             flage = flage - 1;
  5245  000EA0  0EFF               	movlw	255
  5246  000EA2  2416               	addwf	LED_Light_Pos@flage,w,c
  5247  000EA4  6E16               	movwf	LED_Light_Pos@flage,c
  5248  000EA6  0EFF               	movlw	255
  5249  000EA8  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5250  000EAA  6E17               	movwf	LED_Light_Pos@flage+1,c
  5251  000EAC                     l4031:
  5252                           
  5253                           ;LED.c: 203:         while(flage>0)
  5254  000EAC  5016               	movf	LED_Light_Pos@flage,w,c
  5255  000EAE  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5256  000EB0  B4D8               	btfsc	status,2,c
  5257  000EB2  D01B               	goto	u2670
  5258  000EB4  D7E5               	goto	l4025
  5259  000EB6                     l4033:
  5260                           
  5261                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5262  000EB6  5012               	movf	LED_Light_Pos@LED_array,w,c
  5263  000EB8  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5264  000EBA  6E12               	movwf	LED_Light_Pos@LED_array,c
  5265  000EBC  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5266  000EBE  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5267  000EC0  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5268                           
  5269                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5270  000EC2  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5271  000EC6  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5272  000ECA  ECAF  F00A         	call	_LED_Right	;wreg free
  5273  000ECE  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5274  000ED2  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5275                           
  5276                           ;LED.c: 216:             flage = flage - 1;
  5277  000ED6  0EFF               	movlw	255
  5278  000ED8  2416               	addwf	LED_Light_Pos@flage,w,c
  5279  000EDA  6E16               	movwf	LED_Light_Pos@flage,c
  5280  000EDC  0EFF               	movlw	255
  5281  000EDE  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5282  000EE0  6E17               	movwf	LED_Light_Pos@flage+1,c
  5283  000EE2                     l4039:
  5284                           
  5285                           ;LED.c: 212:         while(flage>0)
  5286  000EE2  5016               	movf	LED_Light_Pos@flage,w,c
  5287  000EE4  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5288  000EE6  A4D8               	btfss	status,2,c
  5289  000EE8  D7E6               	goto	l4033
  5290  000EEA                     u2670:
  5291                           
  5292                           ;LED.c: 219:     LED_Control(color, LED_array);
  5293  000EEA  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5294  000EEE  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5295  000EF2  5011               	movf	LED_Light_Pos@color,w,c
  5296  000EF4  EC4F  F005         	call	_LED_Control
  5297  000EF8  0012               	return		;funcret
  5298  000EFA                     __end_of_LED_Light_Pos:
  5299                           	opt callstack 0
  5300                           
  5301 ;; *************** function ___lwdiv *****************
  5302 ;; Defined at:
  5303 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  dividend        2    5[COMRAM] unsigned int 
  5306 ;;  divisor         2    7[COMRAM] unsigned int 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  quotient        2   10[COMRAM] unsigned int 
  5309 ;;  counter         1    9[COMRAM] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  2    5[COMRAM] unsigned int 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;Total ram usage:        7 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    3
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_LED_Light_Pos
  5330 ;;		_FRAME_Plot
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text39
  5335  001472                     __ptext39:
  5336                           	opt callstack 0
  5337  001472                     ___lwdiv:
  5338                           	opt callstack 24
  5339                           
  5340                           ;incstack = 0
  5341  001472  0E00               	movlw	0
  5342  001474  6E0C               	movwf	___lwdiv@quotient+1,c
  5343  001476  0E00               	movlw	0
  5344  001478  6E0B               	movwf	___lwdiv@quotient,c
  5345  00147A  5008               	movf	___lwdiv@divisor,w,c
  5346  00147C  1009               	iorwf	___lwdiv@divisor+1,w,c
  5347  00147E  B4D8               	btfsc	status,2,c
  5348  001480  D01C               	goto	l1205
  5349  001482  0E01               	movlw	1
  5350  001484  6E0A               	movwf	___lwdiv@counter,c
  5351  001486  D004               	goto	l3651
  5352  001488                     l3649:
  5353  001488  90D8               	bcf	status,0,c
  5354  00148A  3608               	rlcf	___lwdiv@divisor,f,c
  5355  00148C  3609               	rlcf	___lwdiv@divisor+1,f,c
  5356  00148E  2A0A               	incf	___lwdiv@counter,f,c
  5357  001490                     l3651:
  5358  001490  AE09               	btfss	___lwdiv@divisor+1,7,c
  5359  001492  D7FA               	goto	l3649
  5360  001494                     u2210:
  5361  001494  90D8               	bcf	status,0,c
  5362  001496  360B               	rlcf	___lwdiv@quotient,f,c
  5363  001498  360C               	rlcf	___lwdiv@quotient+1,f,c
  5364  00149A  5008               	movf	___lwdiv@divisor,w,c
  5365  00149C  5C06               	subwf	___lwdiv@dividend,w,c
  5366  00149E  5009               	movf	___lwdiv@divisor+1,w,c
  5367  0014A0  5807               	subwfb	___lwdiv@dividend+1,w,c
  5368  0014A2  A0D8               	btfss	status,0,c
  5369  0014A4  D005               	goto	l3661
  5370  0014A6  5008               	movf	___lwdiv@divisor,w,c
  5371  0014A8  5E06               	subwf	___lwdiv@dividend,f,c
  5372  0014AA  5009               	movf	___lwdiv@divisor+1,w,c
  5373  0014AC  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5374  0014AE  800B               	bsf	___lwdiv@quotient,0,c
  5375  0014B0                     l3661:
  5376  0014B0  90D8               	bcf	status,0,c
  5377  0014B2  3209               	rrcf	___lwdiv@divisor+1,f,c
  5378  0014B4  3208               	rrcf	___lwdiv@divisor,f,c
  5379  0014B6  2E0A               	decfsz	___lwdiv@counter,f,c
  5380  0014B8  D7ED               	goto	u2210
  5381  0014BA                     l1205:
  5382  0014BA  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5383  0014BE  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5384  0014C2  0012               	return		;funcret
  5385  0014C4                     __end_of___lwdiv:
  5386                           	opt callstack 0
  5387                           
  5388 ;; *************** function _LED_Right *****************
  5389 ;; Defined at:
  5390 ;;		line 140 in file "LED.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  a               2    5[COMRAM] unsigned int 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  b               2    9[COMRAM] unsigned int 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  2    5[COMRAM] unsigned int 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;Total ram usage:        6 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    3
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_LED_Update
  5415 ;;		_LED_Light_Pos
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text40
  5420  00155E                     __ptext40:
  5421                           	opt callstack 0
  5422  00155E                     _LED_Right:
  5423                           	opt callstack 26
  5424                           
  5425                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5426                           
  5427                           ;incstack = 0
  5428  00155E  A006               	btfss	LED_Right@a,0,c
  5429  001560  D018               	goto	l2771
  5430                           
  5431                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5432  001562  0EFE               	movlw	254
  5433  001564  1406               	andwf	LED_Right@a,w,c
  5434  001566  6E0A               	movwf	LED_Right@b,c
  5435  001568  0E03               	movlw	3
  5436  00156A  1407               	andwf	LED_Right@a+1,w,c
  5437  00156C  6E0B               	movwf	LED_Right@b+1,c
  5438                           
  5439                           ;LED.c: 145:         b = b >> 1;
  5440  00156E  90D8               	bcf	status,0,c
  5441  001570  300B               	rrcf	LED_Right@b+1,w,c
  5442  001572  6E08               	movwf	??_LED_Right& (0+255),c
  5443  001574  300A               	rrcf	LED_Right@b,w,c
  5444  001576  6E0A               	movwf	LED_Right@b,c
  5445  001578  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5446                           
  5447                           ;LED.c: 146:         b = b | 0b1000000000;
  5448  00157C  0E00               	movlw	0
  5449  00157E  100A               	iorwf	LED_Right@b,w,c
  5450  001580  6E0A               	movwf	LED_Right@b,c
  5451  001582  0E02               	movlw	2
  5452  001584  100B               	iorwf	LED_Right@b+1,w,c
  5453  001586  6E0B               	movwf	LED_Right@b+1,c
  5454                           
  5455                           ;LED.c: 147:         return b;
  5456  001588  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5457  00158C  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5458  001590  0012               	return	
  5459  001592                     l2771:
  5460                           
  5461                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5462  001592  90D8               	bcf	status,0,c
  5463  001594  3007               	rrcf	LED_Right@a+1,w,c
  5464  001596  6E08               	movwf	??_LED_Right& (0+255),c
  5465  001598  3006               	rrcf	LED_Right@a,w,c
  5466  00159A  6E06               	movwf	LED_Right@a,c
  5467  00159C  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5468                           
  5469                           ;LED.c: 152:         return a;
  5470  0015A0  C006  F006         	movff	LED_Right@a,?_LED_Right
  5471  0015A4  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5472  0015A8  0012               	return		;funcret
  5473  0015AA                     __end_of_LED_Right:
  5474                           	opt callstack 0
  5475                           
  5476 ;; *************** function _LED_Left *****************
  5477 ;; Defined at:
  5478 ;;		line 167 in file "LED.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  a               2    5[COMRAM] unsigned int 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  b               2    7[COMRAM] unsigned int 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  2    5[COMRAM] unsigned int 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;Total ram usage:        4 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    3
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_LED_Update
  5503 ;;		_LED_Light_Pos
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text41
  5508  0015AA                     __ptext41:
  5509                           	opt callstack 0
  5510  0015AA                     _LED_Left:
  5511                           	opt callstack 25
  5512                           
  5513                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5514                           
  5515                           ;incstack = 0
  5516  0015AA  A207               	btfss	LED_Left@a+1,1,c
  5517  0015AC  D015               	goto	l2787
  5518                           
  5519                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5520  0015AE  0EFF               	movlw	255
  5521  0015B0  1406               	andwf	LED_Left@a,w,c
  5522  0015B2  6E08               	movwf	LED_Left@b,c
  5523  0015B4  0E01               	movlw	1
  5524  0015B6  1407               	andwf	LED_Left@a+1,w,c
  5525  0015B8  6E09               	movwf	LED_Left@b+1,c
  5526                           
  5527                           ;LED.c: 172:         b = b << 1;
  5528  0015BA  90D8               	bcf	status,0,c
  5529  0015BC  3408               	rlcf	LED_Left@b,w,c
  5530  0015BE  6E08               	movwf	LED_Left@b,c
  5531  0015C0  3409               	rlcf	LED_Left@b+1,w,c
  5532  0015C2  6E09               	movwf	LED_Left@b+1,c
  5533                           
  5534                           ;LED.c: 173:         b = b | 0b0000000001;
  5535  0015C4  0E01               	movlw	1
  5536  0015C6  1008               	iorwf	LED_Left@b,w,c
  5537  0015C8  6E08               	movwf	LED_Left@b,c
  5538  0015CA  5009               	movf	LED_Left@b+1,w,c
  5539  0015CC  6E09               	movwf	LED_Left@b+1,c
  5540                           
  5541                           ;LED.c: 174:         return b;
  5542  0015CE  C008  F006         	movff	LED_Left@b,?_LED_Left
  5543  0015D2  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5544  0015D6  0012               	return	
  5545  0015D8                     l2787:
  5546                           
  5547                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5548  0015D8  90D8               	bcf	status,0,c
  5549  0015DA  3406               	rlcf	LED_Left@a,w,c
  5550  0015DC  6E06               	movwf	LED_Left@a,c
  5551  0015DE  3407               	rlcf	LED_Left@a+1,w,c
  5552  0015E0  6E07               	movwf	LED_Left@a+1,c
  5553                           
  5554                           ;LED.c: 179:         return a;
  5555  0015E2  C006  F006         	movff	LED_Left@a,?_LED_Left
  5556  0015E6  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5557  0015EA  0012               	return		;funcret
  5558  0015EC                     __end_of_LED_Left:
  5559                           	opt callstack 0
  5560                           
  5561 ;; *************** function _INI_All *****************
  5562 ;; Defined at:
  5563 ;;		line 52 in file "INI.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    5
  5584 ;; This function calls:
  5585 ;;		_CAN_Setup
  5586 ;;		_INI_GlobalInterrupt
  5587 ;;		_INI_LED_Start
  5588 ;;		_INI_OUTPUT
  5589 ;;		_INI_Timer
  5590 ;; This function is called by:
  5591 ;;		_main
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text42
  5596  0017C4                     __ptext42:
  5597                           	opt callstack 0
  5598  0017C4                     _INI_All:
  5599                           	opt callstack 25
  5600                           
  5601                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  5602                           
  5603                           ;incstack = 0
  5604  0017C4  80D1               	bsf	4049,0,c	;volatile
  5605  0017C6  0004               	clrwdt		;# 
  5606                           
  5607                           ;INI.c: 64:     INI_OUTPUT();
  5608  0017C8  ECB4  F00B         	call	_INI_OUTPUT	;wreg free
  5609                           
  5610                           ;INI.c: 66:     CAN_Setup();
  5611  0017CC  EC85  F009         	call	_CAN_Setup	;wreg free
  5612                           
  5613                           ;INI.c: 67:     INI_GlobalInterrupt();
  5614  0017D0  EC02  F00C         	call	_INI_GlobalInterrupt	;wreg free
  5615                           
  5616                           ;INI.c: 69:     INI_Timer();
  5617  0017D4  ECEF  F00B         	call	_INI_Timer	;wreg free
  5618                           
  5619                           ;INI.c: 71:     INI_LED_Start();
  5620  0017D8  EC47  F00B         	call	_INI_LED_Start	;wreg free
  5621  0017DC  0012               	return		;funcret
  5622  0017DE                     __end_of_INI_All:
  5623                           	opt callstack 0
  5624                           
  5625 ;; *************** function _INI_Timer *****************
  5626 ;; Defined at:
  5627 ;;		line 92 in file "TMR1.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;		None
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      unsigned char 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5645 ;;Total ram usage:        0 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    3
  5648 ;; This function calls:
  5649 ;;		Nothing
  5650 ;; This function is called by:
  5651 ;;		_INI_All
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text43
  5656  0017DE                     __ptext43:
  5657                           	opt callstack 0
  5658  0017DE                     _INI_Timer:
  5659                           	opt callstack 26
  5660                           
  5661                           ;TMR1.c: 96:     IRCF2 = 1;
  5662                           
  5663                           ;incstack = 0
  5664  0017DE  8CD3               	bsf	4051,6,c	;volatile
  5665                           
  5666                           ;TMR1.c: 97:     IRCF1 = 1;
  5667  0017E0  8AD3               	bsf	4051,5,c	;volatile
  5668                           
  5669                           ;TMR1.c: 98:     IRCF0 = 1;
  5670  0017E2  88D3               	bsf	4051,4,c	;volatile
  5671                           
  5672                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5673  0017E4  0E3D               	movlw	61
  5674  0017E6  6ECD               	movwf	4045,c	;volatile
  5675                           
  5676                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5677  0017E8  0E9E               	movlw	158
  5678  0017EA  6ECF               	movwf	4047,c	;volatile
  5679                           
  5680                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5681  0017EC  0E57               	movlw	87
  5682  0017EE  6ECE               	movwf	4046,c	;volatile
  5683                           
  5684                           ;TMR1.c: 102:     TMR1IE=1;
  5685  0017F0  809D               	bsf	3997,0,c	;volatile
  5686                           
  5687                           ;TMR1.c: 103:     TMR1ON = 1;
  5688  0017F2  80CD               	bsf	4045,0,c	;volatile
  5689  0017F4  0012               	return		;funcret
  5690  0017F6                     __end_of_INI_Timer:
  5691                           	opt callstack 0
  5692                           
  5693 ;; *************** function _INI_OUTPUT *****************
  5694 ;; Defined at:
  5695 ;;		line 27 in file "INI.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;Total ram usage:        0 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    3
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_INI_All
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text44
  5724  001768                     __ptext44:
  5725                           	opt callstack 0
  5726  001768                     _INI_OUTPUT:
  5727                           	opt callstack 26
  5728                           
  5729                           ;INI.c: 31:     LATA = 0;
  5730                           
  5731                           ;incstack = 0
  5732  001768  0E00               	movlw	0
  5733  00176A  6E89               	movwf	3977,c	;volatile
  5734                           
  5735                           ;INI.c: 32:     LATB = 0;
  5736  00176C  0E00               	movlw	0
  5737  00176E  6E8A               	movwf	3978,c	;volatile
  5738                           
  5739                           ;INI.c: 33:     LATC = 0;
  5740  001770  0E00               	movlw	0
  5741  001772  6E8B               	movwf	3979,c	;volatile
  5742                           
  5743                           ;INI.c: 34:     TRISA = 0x0C;
  5744  001774  0E0C               	movlw	12
  5745  001776  6E92               	movwf	3986,c	;volatile
  5746                           
  5747                           ;INI.c: 35:     TRISB = 0b10001000;
  5748  001778  0E88               	movlw	136
  5749  00177A  6E93               	movwf	3987,c	;volatile
  5750                           
  5751                           ;INI.c: 36:     TRISC = 0xBF;
  5752  00177C  0EBF               	movlw	191
  5753  00177E  6E94               	movwf	3988,c	;volatile
  5754                           
  5755                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5756  001780  8ED0               	bsf	4048,7,c	;volatile
  5757                           
  5758                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5759  001782  0100               	movlb	0	; () banked
  5760  001784  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  5761                           
  5762                           ; BSR set to: 0
  5763  001786  0012               	return		;funcret
  5764  001788                     __end_of_INI_OUTPUT:
  5765                           	opt callstack 0
  5766                           
  5767 ;; *************** function _INI_LED_Start *****************
  5768 ;; Defined at:
  5769 ;;		line 231 in file "LED.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    4
  5790 ;; This function calls:
  5791 ;;		_LED_Control
  5792 ;; This function is called by:
  5793 ;;		_INI_All
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text45
  5798  00168E                     __ptext45:
  5799                           	opt callstack 0
  5800  00168E                     _INI_LED_Start:
  5801                           	opt callstack 25
  5802                           
  5803                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;incstack = 0
  5807  00168E  5092               	movf	3986,w,c	;volatile
  5808  001690  0B01               	andlw	1
  5809  001692  6E92               	movwf	3986,c	;volatile
  5810                           
  5811                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5812  001694  5093               	movf	3987,w,c	;volatile
  5813  001696  0BFC               	andlw	252
  5814  001698  6E93               	movwf	3987,c	;volatile
  5815                           
  5816                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5817  00169A  5096               	movf	3990,w,c	;volatile
  5818  00169C  0BF8               	andlw	248
  5819  00169E  6E96               	movwf	3990,c	;volatile
  5820                           
  5821                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5822  0016A0  0E00               	movlw	0
  5823  0016A2  6E95               	movwf	3989,c	;volatile
  5824                           
  5825                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5826  0016A4  0E00               	movlw	0
  5827  0016A6  6E07               	movwf	LED_Control@diode+1,c
  5828  0016A8  0E00               	movlw	0
  5829  0016AA  6E06               	movwf	LED_Control@diode,c
  5830  0016AC  0E00               	movlw	0
  5831  0016AE  EC4F  F005         	call	_LED_Control
  5832                           
  5833                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5834  0016B2  0E00               	movlw	0
  5835  0016B4  6E07               	movwf	LED_Control@diode+1,c
  5836  0016B6  0E00               	movlw	0
  5837  0016B8  6E06               	movwf	LED_Control@diode,c
  5838  0016BA  0E01               	movlw	1
  5839  0016BC  EC4F  F005         	call	_LED_Control
  5840  0016C0  0012               	return		;funcret
  5841  0016C2                     __end_of_INI_LED_Start:
  5842                           	opt callstack 0
  5843                           
  5844 ;; *************** function _LED_Control *****************
  5845 ;; Defined at:
  5846 ;;		line 256 in file "LED.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  color           1    wreg     enum E10644
  5849 ;;  diode           2    5[COMRAM] unsigned int 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  color           1    9[COMRAM] enum E10644
  5852 ;;  cos             2    0        unsigned int 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      unsigned char 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;Total ram usage:        5 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    3
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_LED_Error
  5873 ;;		_LED_Clear
  5874 ;;		_LED_Update
  5875 ;;		_LED_Light_Pos
  5876 ;;		_INI_LED_Start
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text46
  5881  000A9E                     __ptext46:
  5882                           	opt callstack 0
  5883  000A9E                     _LED_Control:
  5884                           	opt callstack 24
  5885                           
  5886                           ;incstack = 0
  5887                           ;LED_Control@color stored from wreg
  5888  000A9E  6E0A               	movwf	LED_Control@color,c
  5889                           
  5890                           ;LED.c: 259:     if(color == RED)
  5891  000AA0  500A               	movf	LED_Control@color,w,c
  5892  000AA2  A4D8               	btfss	status,2,c
  5893  000AA4  D050               	goto	l321
  5894                           
  5895                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5896  000AA6  A006               	btfss	LED_Control@diode,0,c
  5897  000AA8  D003               	goto	l3413
  5898                           
  5899                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5900  000AAA  508C               	movf	3980,w,c	;volatile
  5901  000AAC  0910               	iorlw	16
  5902  000AAE  D002               	goto	L3
  5903  000AB0                     l3413:
  5904                           
  5905                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5906  000AB0  508C               	movf	3980,w,c	;volatile
  5907  000AB2  0BEF               	andlw	239
  5908  000AB4                     L3:
  5909  000AB4  6E8C               	movwf	3980,c	;volatile
  5910                           
  5911                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5912  000AB6  A206               	btfss	LED_Control@diode,1,c
  5913  000AB8  D003               	goto	l3419
  5914                           
  5915                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5916  000ABA  508C               	movf	3980,w,c	;volatile
  5917  000ABC  0940               	iorlw	64
  5918  000ABE  D002               	goto	L4
  5919  000AC0                     l3419:
  5920                           
  5921                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5922  000AC0  508C               	movf	3980,w,c	;volatile
  5923  000AC2  0BBF               	andlw	191
  5924  000AC4                     L4:
  5925  000AC4  6E8C               	movwf	3980,c	;volatile
  5926                           
  5927                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5928  000AC6  A406               	btfss	LED_Control@diode,2,c
  5929  000AC8  D003               	goto	l3425
  5930                           
  5931                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5932  000ACA  508A               	movf	3978,w,c	;volatile
  5933  000ACC  0901               	iorlw	1
  5934  000ACE  D002               	goto	L5
  5935  000AD0                     l3425:
  5936                           
  5937                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5938  000AD0  508A               	movf	3978,w,c	;volatile
  5939  000AD2  0BFE               	andlw	254
  5940  000AD4                     L5:
  5941  000AD4  6E8A               	movwf	3978,c	;volatile
  5942                           
  5943                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5944  000AD6  A606               	btfss	LED_Control@diode,3,c
  5945  000AD8  D003               	goto	l3431
  5946                           
  5947                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5948  000ADA  5089               	movf	3977,w,c	;volatile
  5949  000ADC  0902               	iorlw	2
  5950  000ADE  D002               	goto	L6
  5951  000AE0                     l3431:
  5952                           
  5953                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5954  000AE0  5089               	movf	3977,w,c	;volatile
  5955  000AE2  0BFD               	andlw	253
  5956  000AE4                     L6:
  5957  000AE4  6E89               	movwf	3977,c	;volatile
  5958                           
  5959                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5960  000AE6  A806               	btfss	LED_Control@diode,4,c
  5961  000AE8  D003               	goto	l3437
  5962                           
  5963                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5964  000AEA  5089               	movf	3977,w,c	;volatile
  5965  000AEC  0908               	iorlw	8
  5966  000AEE  D002               	goto	L7
  5967  000AF0                     l3437:
  5968                           
  5969                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5970  000AF0  5089               	movf	3977,w,c	;volatile
  5971  000AF2  0BF7               	andlw	247
  5972  000AF4                     L7:
  5973  000AF4  6E89               	movwf	3977,c	;volatile
  5974                           
  5975                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5976  000AF6  AA06               	btfss	LED_Control@diode,5,c
  5977  000AF8  D003               	goto	l3443
  5978                           
  5979                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5980  000AFA  5089               	movf	3977,w,c	;volatile
  5981  000AFC  0920               	iorlw	32
  5982  000AFE  D002               	goto	L8
  5983  000B00                     l3443:
  5984                           
  5985                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5986  000B00  5089               	movf	3977,w,c	;volatile
  5987  000B02  0BDF               	andlw	223
  5988  000B04                     L8:
  5989  000B04  6E89               	movwf	3977,c	;volatile
  5990                           
  5991                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5992  000B06  AC06               	btfss	LED_Control@diode,6,c
  5993  000B08  D003               	goto	l3449
  5994                           
  5995                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5996  000B0A  508D               	movf	3981,w,c	;volatile
  5997  000B0C  0902               	iorlw	2
  5998  000B0E  D002               	goto	L9
  5999  000B10                     l3449:
  6000                           
  6001                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  6002  000B10  508D               	movf	3981,w,c	;volatile
  6003  000B12  0BFD               	andlw	253
  6004  000B14                     L9:
  6005  000B14  6E8D               	movwf	3981,c	;volatile
  6006                           
  6007                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  6008  000B16  AE06               	btfss	LED_Control@diode,7,c
  6009  000B18  D003               	goto	l3455
  6010                           
  6011                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  6012  000B1A  5089               	movf	3977,w,c	;volatile
  6013  000B1C  0980               	iorlw	128
  6014  000B1E  D002               	goto	L10
  6015  000B20                     l3455:
  6016                           
  6017                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  6018  000B20  5089               	movf	3977,w,c	;volatile
  6019  000B22  0B7F               	andlw	127
  6020  000B24                     L10:
  6021  000B24  6E89               	movwf	3977,c	;volatile
  6022                           
  6023                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  6024  000B26  A007               	btfss	LED_Control@diode+1,0,c
  6025  000B28  D003               	goto	l3461
  6026                           
  6027                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  6028  000B2A  508C               	movf	3980,w,c	;volatile
  6029  000B2C  0901               	iorlw	1
  6030  000B2E  D002               	goto	L11
  6031  000B30                     l3461:
  6032                           
  6033                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  6034  000B30  508C               	movf	3980,w,c	;volatile
  6035  000B32  0BFE               	andlw	254
  6036  000B34                     L11:
  6037  000B34  6E8C               	movwf	3980,c	;volatile
  6038                           
  6039                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  6040  000B36  A207               	btfss	LED_Control@diode+1,1,c
  6041  000B38  D003               	goto	l3467
  6042                           
  6043                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  6044  000B3A  508C               	movf	3980,w,c	;volatile
  6045  000B3C  0904               	iorlw	4
  6046  000B3E  D002               	goto	L12
  6047  000B40                     l3467:
  6048                           
  6049                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  6050  000B40  508C               	movf	3980,w,c	;volatile
  6051  000B42  0BFB               	andlw	251
  6052  000B44                     L12:
  6053  000B44  6E8C               	movwf	3980,c	;volatile
  6054  000B46                     l321:
  6055                           
  6056                           ;LED.c: 358:     if(color == GREEN)
  6057  000B46  040A               	decf	LED_Control@color,w,c
  6058  000B48  A4D8               	btfss	status,2,c
  6059  000B4A  0012               	return	
  6060                           
  6061                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  6062  000B4C  A006               	btfss	LED_Control@diode,0,c
  6063  000B4E  D003               	goto	l3473
  6064                           
  6065                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  6066  000B50  508C               	movf	3980,w,c	;volatile
  6067  000B52  0920               	iorlw	32
  6068  000B54  D002               	goto	L13
  6069  000B56                     l3473:
  6070                           
  6071                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  6072  000B56  508C               	movf	3980,w,c	;volatile
  6073  000B58  0BDF               	andlw	223
  6074  000B5A                     L13:
  6075  000B5A  6E8C               	movwf	3980,c	;volatile
  6076                           
  6077                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  6078  000B5C  A206               	btfss	LED_Control@diode,1,c
  6079  000B5E  D003               	goto	l3479
  6080                           
  6081                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  6082  000B60  508C               	movf	3980,w,c	;volatile
  6083  000B62  0980               	iorlw	128
  6084  000B64  D002               	goto	L14
  6085  000B66                     l3479:
  6086                           
  6087                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  6088  000B66  508C               	movf	3980,w,c	;volatile
  6089  000B68  0B7F               	andlw	127
  6090  000B6A                     L14:
  6091  000B6A  6E8C               	movwf	3980,c	;volatile
  6092                           
  6093                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  6094  000B6C  A406               	btfss	LED_Control@diode,2,c
  6095  000B6E  D003               	goto	l3485
  6096                           
  6097                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  6098  000B70  508A               	movf	3978,w,c	;volatile
  6099  000B72  0902               	iorlw	2
  6100  000B74  D002               	goto	L15
  6101  000B76                     l3485:
  6102                           
  6103                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  6104  000B76  508A               	movf	3978,w,c	;volatile
  6105  000B78  0BFD               	andlw	253
  6106  000B7A                     L15:
  6107  000B7A  6E8A               	movwf	3978,c	;volatile
  6108                           
  6109                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  6110  000B7C  A606               	btfss	LED_Control@diode,3,c
  6111  000B7E  D003               	goto	l3491
  6112                           
  6113                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  6114  000B80  5089               	movf	3977,w,c	;volatile
  6115  000B82  0904               	iorlw	4
  6116  000B84  D002               	goto	L16
  6117  000B86                     l3491:
  6118                           
  6119                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  6120  000B86  5089               	movf	3977,w,c	;volatile
  6121  000B88  0BFB               	andlw	251
  6122  000B8A                     L16:
  6123  000B8A  6E89               	movwf	3977,c	;volatile
  6124                           
  6125                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  6126  000B8C  A806               	btfss	LED_Control@diode,4,c
  6127  000B8E  D003               	goto	l3497
  6128                           
  6129                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  6130  000B90  5089               	movf	3977,w,c	;volatile
  6131  000B92  0910               	iorlw	16
  6132  000B94  D002               	goto	L17
  6133  000B96                     l3497:
  6134                           
  6135                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  6136  000B96  5089               	movf	3977,w,c	;volatile
  6137  000B98  0BEF               	andlw	239
  6138  000B9A                     L17:
  6139  000B9A  6E89               	movwf	3977,c	;volatile
  6140                           
  6141                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  6142  000B9C  AA06               	btfss	LED_Control@diode,5,c
  6143  000B9E  D003               	goto	l3503
  6144                           
  6145                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  6146  000BA0  508D               	movf	3981,w,c	;volatile
  6147  000BA2  0901               	iorlw	1
  6148  000BA4  D002               	goto	L18
  6149  000BA6                     l3503:
  6150                           
  6151                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  6152  000BA6  508D               	movf	3981,w,c	;volatile
  6153  000BA8  0BFE               	andlw	254
  6154  000BAA                     L18:
  6155  000BAA  6E8D               	movwf	3981,c	;volatile
  6156                           
  6157                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  6158  000BAC  AC06               	btfss	LED_Control@diode,6,c
  6159  000BAE  D003               	goto	l3509
  6160                           
  6161                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  6162  000BB0  508D               	movf	3981,w,c	;volatile
  6163  000BB2  0904               	iorlw	4
  6164  000BB4  D002               	goto	L19
  6165  000BB6                     l3509:
  6166                           
  6167                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  6168  000BB6  508D               	movf	3981,w,c	;volatile
  6169  000BB8  0BFB               	andlw	251
  6170  000BBA                     L19:
  6171  000BBA  6E8D               	movwf	3981,c	;volatile
  6172                           
  6173                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  6174  000BBC  AE06               	btfss	LED_Control@diode,7,c
  6175  000BBE  D003               	goto	l3515
  6176                           
  6177                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  6178  000BC0  5089               	movf	3977,w,c	;volatile
  6179  000BC2  0940               	iorlw	64
  6180  000BC4  D002               	goto	L20
  6181  000BC6                     l3515:
  6182                           
  6183                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  6184  000BC6  5089               	movf	3977,w,c	;volatile
  6185  000BC8  0BBF               	andlw	191
  6186  000BCA                     L20:
  6187  000BCA  6E89               	movwf	3977,c	;volatile
  6188                           
  6189                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  6190  000BCC  A007               	btfss	LED_Control@diode+1,0,c
  6191  000BCE  D003               	goto	l3521
  6192                           
  6193                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  6194  000BD0  508C               	movf	3980,w,c	;volatile
  6195  000BD2  0902               	iorlw	2
  6196  000BD4  D002               	goto	L21
  6197  000BD6                     l3521:
  6198                           
  6199                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  6200  000BD6  508C               	movf	3980,w,c	;volatile
  6201  000BD8  0BFD               	andlw	253
  6202  000BDA                     L21:
  6203  000BDA  6E8C               	movwf	3980,c	;volatile
  6204                           
  6205                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  6206  000BDC  A207               	btfss	LED_Control@diode+1,1,c
  6207  000BDE  D004               	goto	l3527
  6208                           
  6209                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  6210  000BE0  508C               	movf	3980,w,c	;volatile
  6211  000BE2  0908               	iorlw	8
  6212  000BE4  6E8C               	movwf	3980,c	;volatile
  6213                           
  6214                           ;LED.c: 450:         }
  6215  000BE6  0012               	return	
  6216  000BE8                     l3527:
  6217                           
  6218                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  6219  000BE8  508C               	movf	3980,w,c	;volatile
  6220  000BEA  0BF7               	andlw	247
  6221  000BEC  6E8C               	movwf	3980,c	;volatile
  6222  000BEE  0012               	return		;funcret
  6223  000BF0                     __end_of_LED_Control:
  6224                           	opt callstack 0
  6225                           
  6226 ;; *************** function _INI_GlobalInterrupt *****************
  6227 ;; Defined at:
  6228 ;;		line 74 in file "INI.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      void 
  6235 ;; Registers used:
  6236 ;;		None
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    3
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_INI_All
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text47
  6257  001804                     __ptext47:
  6258                           	opt callstack 0
  6259  001804                     _INI_GlobalInterrupt:
  6260                           	opt callstack 26
  6261                           
  6262                           ;INI.c: 76: INTCONbits.GIEH=1;
  6263                           
  6264                           ;incstack = 0
  6265  001804  8EF2               	bsf	4082,7,c	;volatile
  6266                           
  6267                           ;INI.c: 77: INTCONbits.GIEL=1;
  6268  001806  8CF2               	bsf	4082,6,c	;volatile
  6269                           
  6270                           ;INI.c: 78: RCONbits.IPEN=1;
  6271  001808  8ED0               	bsf	4048,7,c	;volatile
  6272                           
  6273                           ;INI.c: 79: IPEN =1;
  6274  00180A  8ED0               	bsf	4048,7,c	;volatile
  6275                           
  6276                           ;INI.c: 81: PEIE=1;
  6277  00180C  8CF2               	bsf	4082,6,c	;volatile
  6278                           
  6279                           ;INI.c: 82: TMR1IP = 0;
  6280  00180E  909F               	bcf	3999,0,c	;volatile
  6281  001810  0012               	return		;funcret
  6282  001812                     __end_of_INI_GlobalInterrupt:
  6283                           	opt callstack 0
  6284                           
  6285 ;; *************** function _CAN_Setup *****************
  6286 ;; Defined at:
  6287 ;;		line 23 in file "CAN.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;		None
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;Total ram usage:        1 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    4
  6308 ;; This function calls:
  6309 ;;		_CAN_SetupClock
  6310 ;;		_CAN_SetupMask
  6311 ;; This function is called by:
  6312 ;;		_INI_All
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text48
  6317  00130A                     __ptext48:
  6318                           	opt callstack 0
  6319  00130A                     _CAN_Setup:
  6320                           	opt callstack 25
  6321                           
  6322                           ;CAN.c: 28:     CANCON = 0x80;
  6323                           
  6324                           ;incstack = 0
  6325  00130A  0E80               	movlw	128
  6326  00130C  6E6F               	movwf	3951,c	;volatile
  6327  00130E                     l3009:
  6328                           
  6329                           ;CAN.c: 29:     while((CANSTAT & 0xE0)!=0x80)
  6330  00130E  506E               	movf	3950,w,c	;volatile
  6331  001310  0BE0               	andlw	224
  6332  001312  0A80               	xorlw	128
  6333  001314  A4D8               	btfss	status,2,c
  6334  001316  D7FB               	goto	l3009
  6335                           
  6336                           ;CAN.c: 34:     BSEL0 = 0;
  6337  001318  0E00               	movlw	0
  6338  00131A  010D               	movlb	13	; () banked
  6339  00131C  6FF8               	movwf	248,b	;volatile
  6340                           
  6341                           ;CAN.c: 35:     TXB0CON = 0;
  6342  00131E  0E00               	movlw	0
  6343  001320  010F               	movlb	15	; () banked
  6344  001322  6F40               	movwf	64,b	;volatile
  6345                           
  6346                           ;CAN.c: 36:     RXB0CON = 0;
  6347  001324  0E00               	movlw	0
  6348  001326  6E60               	movwf	3936,c	;volatile
  6349                           
  6350                           ;CAN.c: 37:     RXB1CON = 0;
  6351  001328  0E00               	movlw	0
  6352  00132A  6F50               	movwf	80,b	;volatile
  6353                           
  6354                           ;CAN.c: 38:     B0CON = 0;
  6355  00132C  0E00               	movlw	0
  6356  00132E  010E               	movlb	14	; () banked
  6357  001330  6F20               	movwf	32,b	;volatile
  6358                           
  6359                           ;CAN.c: 39:     B1CON = 0;
  6360  001332  0E00               	movlw	0
  6361  001334  6F30               	movwf	48,b	;volatile
  6362                           
  6363                           ;CAN.c: 40:     PIE3 = 0;
  6364  001336  0E00               	movlw	0
  6365  001338  6EA3               	movwf	4003,c	;volatile
  6366                           
  6367                           ; BSR set to: 14
  6368                           ;CAN.c: 41:     IPR3 = 0xFF;
  6369  00133A  68A5               	setf	4005,c	;volatile
  6370                           
  6371                           ;CAN.c: 42:     PIR3 = 0x00;
  6372  00133C  0E00               	movlw	0
  6373  00133E  6EA4               	movwf	4004,c	;volatile
  6374                           
  6375                           ;CAN.c: 43:     BIE0 = 0;
  6376  001340  0E00               	movlw	0
  6377  001342  010D               	movlb	13	; () banked
  6378  001344  6FFA               	movwf	250,b	;volatile
  6379                           
  6380                           ;CAN.c: 46:     ECANCON = 0x90;
  6381  001346  0E90               	movlw	144
  6382  001348  6E77               	movwf	3959,c	;volatile
  6383                           
  6384                           ; BSR set to: 13
  6385                           ;CAN.c: 49:     CAN_SetupClock();
  6386  00134A  EC8E  F00B         	call	_CAN_SetupClock	;wreg free
  6387                           
  6388                           ;CAN.c: 52:     CAN_SetupMask();
  6389  00134E  EC16  F008         	call	_CAN_SetupMask	;wreg free
  6390                           
  6391                           ;CAN.c: 54:     CIOCON = 0xff;
  6392  001352  6873               	setf	3955,c	;volatile
  6393                           
  6394                           ;CAN.c: 60:     CANCON = 0x00;
  6395  001354  0E00               	movlw	0
  6396  001356  6E6F               	movwf	3951,c	;volatile
  6397  001358                     l3023:
  6398                           
  6399                           ;CAN.c: 61:     while((CANSTAT & 0xE0) != 0x00)
  6400  001358  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  6401  00135C  0EE0               	movlw	224
  6402  00135E  1606               	andwf	??_CAN_Setup,f,c
  6403  001360  B4D8               	btfsc	status,2,c
  6404  001362  0012               	return	
  6405  001364  D7F9               	goto	l3023
  6406  001366                     __end_of_CAN_Setup:
  6407                           	opt callstack 0
  6408                           
  6409 ;; *************** function _CAN_SetupMask *****************
  6410 ;; Defined at:
  6411 ;;		line 82 in file "CAN.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;		None
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;Total ram usage:        0 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    3
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_CAN_Setup
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text49
  6440  00102C                     __ptext49:
  6441                           	opt callstack 0
  6442  00102C                     _CAN_SetupMask:
  6443                           	opt callstack 25
  6444                           
  6445                           ;CAN.c: 84:     MSEL0 = 0x50;
  6446                           
  6447                           ;incstack = 0
  6448  00102C  0E50               	movlw	80
  6449  00102E  010D               	movlb	13	; () banked
  6450  001030  6FF0               	movwf	240,b	;volatile
  6451                           
  6452                           ;CAN.c: 85:     MSEL1 = 0x55;
  6453  001032  0E55               	movlw	85
  6454  001034  6FF1               	movwf	241,b	;volatile
  6455                           
  6456                           ;CAN.c: 86:     MSEL2 = 0x55;
  6457  001036  0E55               	movlw	85
  6458  001038  6FF2               	movwf	242,b	;volatile
  6459                           
  6460                           ;CAN.c: 87:     MSEL3 = 0x55;
  6461  00103A  0E55               	movlw	85
  6462  00103C  6FF3               	movwf	243,b	;volatile
  6463                           
  6464                           ;CAN.c: 90:     RXM0SIDH = 0b00000000;
  6465  00103E  0E00               	movlw	0
  6466  001040  010F               	movlb	15	; () banked
  6467  001042  6F18               	movwf	24,b	;volatile
  6468                           
  6469                           ;CAN.c: 91:     RXM0SIDL = 0b00001011;
  6470  001044  0E0B               	movlw	11
  6471  001046  6F19               	movwf	25,b	;volatile
  6472                           
  6473                           ; BSR set to: 15
  6474                           ;CAN.c: 92:     RXM0EIDH = 0xFF;
  6475  001048  691A               	setf	26,b	;volatile
  6476                           
  6477                           ; BSR set to: 15
  6478                           ;CAN.c: 93:     RXM0EIDL = 0xFF;
  6479  00104A  691B               	setf	27,b	;volatile
  6480                           
  6481                           ; BSR set to: 15
  6482                           ;CAN.c: 96:     RXM1SIDH = 0xFF;
  6483  00104C  691C               	setf	28,b	;volatile
  6484                           
  6485                           ; BSR set to: 15
  6486                           ;CAN.c: 97:     RXM1SIDL = 0xFF;
  6487  00104E  691D               	setf	29,b	;volatile
  6488                           
  6489                           ;CAN.c: 98:     RXM1EIDH = 0;
  6490  001050  0E00               	movlw	0
  6491  001052  6F1E               	movwf	30,b	;volatile
  6492                           
  6493                           ;CAN.c: 99:     RXM1EIDL = 0;
  6494  001054  0E00               	movlw	0
  6495  001056  6F1F               	movwf	31,b	;volatile
  6496                           
  6497                           ;CAN.c: 102:     RXM0SIDH = 0x00;
  6498  001058  0E00               	movlw	0
  6499  00105A  6F18               	movwf	24,b	;volatile
  6500                           
  6501                           ;CAN.c: 103:     RXM0SIDL = 0x00;
  6502  00105C  0E00               	movlw	0
  6503  00105E  6F19               	movwf	25,b	;volatile
  6504                           
  6505                           ;CAN.c: 104:     RXM0EIDH = 0;
  6506  001060  0E00               	movlw	0
  6507  001062  6F1A               	movwf	26,b	;volatile
  6508                           
  6509                           ;CAN.c: 105:     RXM0EIDL = 0;
  6510  001064  0E00               	movlw	0
  6511  001066  6F1B               	movwf	27,b	;volatile
  6512                           
  6513                           ;CAN.c: 108:     RXF0SIDH = 0x00;
  6514  001068  0E00               	movlw	0
  6515  00106A  6F00               	movwf	0,b	;volatile
  6516                           
  6517                           ;CAN.c: 109:     RXF0SIDL = 0x01;
  6518  00106C  0E01               	movlw	1
  6519  00106E  6F01               	movwf	1,b	;volatile
  6520                           
  6521                           ; BSR set to: 15
  6522                           ;CAN.c: 110:     RXF0SIDLbits.EXIDEN = 1;
  6523  001070  8701               	bsf	1,3,b	;volatile
  6524                           
  6525                           ;CAN.c: 111:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  6526  001072  5028               	movf	_DaneCan+3,w,c
  6527  001074  6F02               	movwf	2,b	;volatile
  6528                           
  6529                           ; BSR set to: 15
  6530                           ;CAN.c: 112:  RXF0EIDH |= 0x40;
  6531  001076  8D02               	bsf	2,6,b	;volatile
  6532                           
  6533                           ; BSR set to: 15
  6534                           ;CAN.c: 113:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  6535  001078  C027  FF03         	movff	_DaneCan+2,3843	;volatile
  6536                           
  6537                           ; BSR set to: 15
  6538                           ;CAN.c: 115:     RXF1SIDH = 0x00;
  6539  00107C  0E00               	movlw	0
  6540  00107E  6F04               	movwf	4,b	;volatile
  6541                           
  6542                           ; BSR set to: 15
  6543                           ;CAN.c: 116:     RXF1SIDL = 0x01;
  6544  001080  0E01               	movlw	1
  6545  001082  6F05               	movwf	5,b	;volatile
  6546                           
  6547                           ; BSR set to: 15
  6548                           ;CAN.c: 117:     RXF1SIDLbits.EXIDEN = 1;
  6549  001084  8705               	bsf	5,3,b	;volatile
  6550                           
  6551                           ; BSR set to: 15
  6552                           ;CAN.c: 118:     RXF1EIDH = 0x7F;
  6553  001086  0E7F               	movlw	127
  6554  001088  6F06               	movwf	6,b	;volatile
  6555                           
  6556                           ; BSR set to: 15
  6557                           ;CAN.c: 119:     RXF1EIDL = 0xFF;
  6558  00108A  6907               	setf	7,b	;volatile
  6559                           
  6560                           ; BSR set to: 15
  6561                           ;CAN.c: 122:     RXF2SIDH = 0;
  6562  00108C  0E00               	movlw	0
  6563  00108E  6F08               	movwf	8,b	;volatile
  6564                           
  6565                           ; BSR set to: 15
  6566                           ;CAN.c: 123:     RXF2SIDL = 0x20;
  6567  001090  0E20               	movlw	32
  6568  001092  6F09               	movwf	9,b	;volatile
  6569                           
  6570                           ; BSR set to: 15
  6571                           ;CAN.c: 124:     RXF2SIDLbits.EXIDEN = 1;
  6572  001094  8709               	bsf	9,3,b	;volatile
  6573                           
  6574                           ; BSR set to: 15
  6575                           ;CAN.c: 125:     RXF2EIDH = 0;
  6576  001096  0E00               	movlw	0
  6577  001098  6F0A               	movwf	10,b	;volatile
  6578                           
  6579                           ; BSR set to: 15
  6580                           ;CAN.c: 126:     RXF2EIDL = 0;
  6581  00109A  0E00               	movlw	0
  6582  00109C  6F0B               	movwf	11,b	;volatile
  6583                           
  6584                           ; BSR set to: 15
  6585                           ;CAN.c: 129:     RXF3SIDH = 0x00;
  6586  00109E  0E00               	movlw	0
  6587  0010A0  6F0C               	movwf	12,b	;volatile
  6588                           
  6589                           ; BSR set to: 15
  6590                           ;CAN.c: 130:     RXF3SIDL = 0x00;
  6591  0010A2  0E00               	movlw	0
  6592  0010A4  6F0D               	movwf	13,b	;volatile
  6593                           
  6594                           ; BSR set to: 15
  6595                           ;CAN.c: 131:     RXF3EIDH = 0x00;
  6596  0010A6  0E00               	movlw	0
  6597  0010A8  6F0E               	movwf	14,b	;volatile
  6598                           
  6599                           ; BSR set to: 15
  6600                           ;CAN.c: 132:  RXF3EIDH |= 0x00;
  6601  0010AA  510E               	movf	14,w,b	;volatile
  6602                           
  6603                           ; BSR set to: 15
  6604                           ;CAN.c: 133:     RXF3EIDL = 0x00;
  6605  0010AC  0E00               	movlw	0
  6606  0010AE  6F0F               	movwf	15,b	;volatile
  6607                           
  6608                           ; BSR set to: 15
  6609                           ;CAN.c: 140:     RXFCON0 = 0x0F;
  6610  0010B0  0E0F               	movlw	15
  6611  0010B2  010D               	movlb	13	; () banked
  6612  0010B4  6FD4               	movwf	212,b	;volatile
  6613                           
  6614                           ; BSR set to: 13
  6615  0010B6  0012               	return		;funcret
  6616  0010B8                     __end_of_CAN_SetupMask:
  6617                           	opt callstack 0
  6618                           
  6619 ;; *************** function _CAN_SetupClock *****************
  6620 ;; Defined at:
  6621 ;;		line 149 in file "CAN.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		None
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:    3
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_CAN_Setup
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text50
  6650  00171C                     __ptext50:
  6651                           	opt callstack 0
  6652  00171C                     _CAN_SetupClock:
  6653                           	opt callstack 25
  6654                           
  6655                           ;CAN.c: 151:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6656                           
  6657                           ; BSR set to: 13
  6658                           ;incstack = 0
  6659  00171C  8070               	bsf	3952,0,c	;volatile
  6660                           
  6661                           ;CAN.c: 152:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6662  00171E  8270               	bsf	3952,1,c	;volatile
  6663                           
  6664                           ;CAN.c: 153:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6665  001720  9470               	bcf	3952,2,c	;volatile
  6666                           
  6667                           ;CAN.c: 154:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6668  001722  9670               	bcf	3952,3,c	;volatile
  6669                           
  6670                           ;CAN.c: 155:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6671  001724  9870               	bcf	3952,4,c	;volatile
  6672                           
  6673                           ;CAN.c: 156:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6674  001726  9A70               	bcf	3952,5,c	;volatile
  6675                           
  6676                           ;CAN.c: 158:     BRGCON1bits.SJW0 = 1;
  6677  001728  8C70               	bsf	3952,6,c	;volatile
  6678                           
  6679                           ;CAN.c: 159:     BRGCON1bits.SJW1 = 1;
  6680  00172A  8E70               	bsf	3952,7,c	;volatile
  6681                           
  6682                           ;CAN.c: 161:     BRGCON2bits.SEG1PH0 = 1;
  6683  00172C  8671               	bsf	3953,3,c	;volatile
  6684                           
  6685                           ;CAN.c: 162:     BRGCON2bits.SEG1PH1 = 1;
  6686  00172E  8871               	bsf	3953,4,c	;volatile
  6687                           
  6688                           ;CAN.c: 163:     BRGCON2bits.SEG1PH2 = 1;
  6689  001730  8A71               	bsf	3953,5,c	;volatile
  6690                           
  6691                           ;CAN.c: 165:     BRGCON2bits.PRSEG2 = 1;
  6692  001732  8471               	bsf	3953,2,c	;volatile
  6693                           
  6694                           ;CAN.c: 166:     BRGCON2bits.PRSEG1 = 0;
  6695  001734  9271               	bcf	3953,1,c	;volatile
  6696                           
  6697                           ;CAN.c: 167:     BRGCON2bits.PRSEG0 = 0;
  6698  001736  9071               	bcf	3953,0,c	;volatile
  6699                           
  6700                           ;CAN.c: 169:     BRGCON3bits.SEG2PH0 = 1;
  6701  001738  8072               	bsf	3954,0,c	;volatile
  6702                           
  6703                           ;CAN.c: 170:     BRGCON3bits.SEG2PH1 = 0;
  6704  00173A  9272               	bcf	3954,1,c	;volatile
  6705                           
  6706                           ;CAN.c: 171:     BRGCON3bits.SEG2PH2 = 1;
  6707  00173C  8472               	bsf	3954,2,c	;volatile
  6708                           
  6709                           ;CAN.c: 173:     BRGCON2bits.SAM = 1;
  6710  00173E  8C71               	bsf	3953,6,c	;volatile
  6711                           
  6712                           ;CAN.c: 174:     BRGCON2bits.SEG2PHTS = 1;
  6713  001740  8E71               	bsf	3953,7,c	;volatile
  6714  001742  0012               	return		;funcret
  6715  001744                     __end_of_CAN_SetupClock:
  6716                           	opt callstack 0
  6717                           
  6718 ;; *************** function _ISR_low *****************
  6719 ;; Defined at:
  6720 ;;		line 16 in file "ISR.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;		None
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;		None
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  1    wreg      void 
  6727 ;; Registers used:
  6728 ;;		wreg, status,2, status,0, cstack
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;Total ram usage:        3 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:    2
  6741 ;; This function calls:
  6742 ;;		_TMR1_Timer_reset
  6743 ;;		i1_TMR1_Update_flag_Set
  6744 ;; This function is called by:
  6745 ;;		Interrupt level 1
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	intcodelo
  6750  000018                     __pintcodelo:
  6751                           	opt callstack 0
  6752  000018                     _ISR_low:
  6753                           	opt callstack 23
  6754                           
  6755                           ;incstack = 0
  6756  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6757  00001A  CFD8 F003          	movff	status,??_ISR_low
  6758  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  6759  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  6760                           
  6761                           ;ISR.c: 21:     if(TMR1IF==1)
  6762  000026  A09E               	btfss	3998,0,c	;volatile
  6763  000028  D012               	goto	i1l641
  6764                           
  6765                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6766  00002A  ECA2  F00B         	call	_TMR1_Timer_reset	;wreg free
  6767                           
  6768                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6769  00002E  0E00               	movlw	0
  6770  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6771  000032  0E01               	movlw	1
  6772  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  6773  000036  EC31  F00C         	call	i1_TMR1_Update_flag_Set	;wreg free
  6774                           
  6775                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6776  00003A  0100               	movlb	0	; () banked
  6777  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6781  00003E  2A3F               	incf	ISR_low@ramkaStanuU8,f,c
  6782  000040  0E14               	movlw	20
  6783  000042  643F               	cpfsgt	ISR_low@ramkaStanuU8,c
  6784  000044  D003               	goto	i1l3317
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6788  000046  0E00               	movlw	0
  6789  000048  6E3F               	movwf	ISR_low@ramkaStanuU8,c
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6793  00004A  8025               	bsf	_DaneCan,0,c
  6794  00004C                     i1l3317:
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;ISR.c: 41:             TMR1IF=0;
  6798  00004C  909E               	bcf	3998,0,c	;volatile
  6799  00004E                     i1l641:
  6800  00004E  C005  FFE0         	movff	??_ISR_low+2,bsr
  6801  000052  C004  FFE8         	movff	??_ISR_low+1,wreg
  6802  000056  C003  FFD8         	movff	??_ISR_low,status
  6803  00005A  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6804  00005C  0010               	retfie	
  6805  00005E                     __end_of_ISR_low:
  6806                           	opt callstack 0
  6807                           
  6808 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6809 ;; Defined at:
  6810 ;;		line 32 in file "TMR1.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  a               2    0[COMRAM] unsigned int 
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		None
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;Total ram usage:        2 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; Hardware stack levels required when called:    1
  6831 ;; This function calls:
  6832 ;;		Nothing
  6833 ;; This function is called by:
  6834 ;;		_ISR_low
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text52
  6839  001862                     __ptext52:
  6840                           	opt callstack 0
  6841  001862                     i1_TMR1_Update_flag_Set:
  6842                           	opt callstack 23
  6843                           
  6844                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6845                           
  6846                           ;incstack = 0
  6847  001862  C001  F039         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6848  001866  C002  F03A         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6849  00186A  0012               	return		;funcret
  6850  00186C                     __end_ofi1_TMR1_Update_flag_Set:
  6851                           	opt callstack 0
  6852                           
  6853 ;; *************** function _TMR1_Timer_reset *****************
  6854 ;; Defined at:
  6855 ;;		line 63 in file "TMR1.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;		None
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6860 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      unsigned char 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2, status,0
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;Total ram usage:        2 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:    1
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_ISR_low
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text53
  6885  001744                     __ptext53:
  6886                           	opt callstack 0
  6887  001744                     _TMR1_Timer_reset:
  6888                           	opt callstack 23
  6889                           
  6890                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6891                           
  6892                           ;incstack = 0
  6893  001744  0E00               	movlw	0
  6894  001746  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6895  001748  0E00               	movlw	0
  6896  00174A  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6897                           
  6898                           ;TMR1.c: 70:     t1L = TMR1L;
  6899  00174C  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6900                           
  6901                           ;TMR1.c: 71:     t1H = TMR1H;
  6902  001750  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6903                           
  6904                           ;TMR1.c: 72:     __nop();
  6905  001754  F000               	nop	
  6906                           
  6907                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6908  001756  0E9E               	movlw	158
  6909  001758  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6910                           
  6911                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6912  00175A  0E57               	movlw	87
  6913  00175C  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6914                           
  6915                           ;TMR1.c: 75:     TMR1H = t1H;
  6916  00175E  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6917                           
  6918                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6919  001762  0E5B               	movlw	91
  6920  001764  6ECE               	movwf	4046,c	;volatile
  6921  001766  0012               	return		;funcret
  6922  001768                     __end_of_TMR1_Timer_reset:
  6923                           	opt callstack 0
  6924                           
  6925 ;; *************** function _ISR_high *****************
  6926 ;; Defined at:
  6927 ;;		line 53 in file "ISR.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		None
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;Total ram usage:        0 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		Interrupt level 2
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	intcode
  6955  000008                     __pintcode:
  6956                           	opt callstack 0
  6957  000008                     _ISR_high:
  6958                           	opt callstack 23
  6959                           
  6960                           ;incstack = 0
  6961  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6962  00000A  ED43  F00C         	call	int_func,f	;refresh shadow registers
  6963                           
  6964                           	psect	intcode_body
  6965  001886                     __pintcode_body:
  6966                           	opt callstack 23
  6967  001886                     int_func:
  6968                           	opt callstack 23
  6969  001886  0006               	pop		; remove dummy address from shadow register refresh
  6970  001888  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6971  00188A  0011               	retfie		f
  6972  00188C                     __end_of_ISR_high:
  6973                           	opt callstack 0
  6974  0000                     
  6975                           	psect	rparam
  6976  0000                     
  6977                           	psect	temp
  6978  00004B                     btemp:
  6979                           	opt callstack 0
  6980  00004B                     	ds	1
  6981  0000                     int$flags	set	btemp
  6982  0000                     wtemp8	set	btemp+1
  6983  0000                     ttemp5	set	btemp+1
  6984  0000                     ttemp6	set	btemp+4
  6985  0000                     ttemp7	set	btemp+8
  6986                           tosu	equ	0xFFF
  6987                           tosh	equ	0xFFE
  6988                           tosl	equ	0xFFD
  6989                           stkptr	equ	0xFFC
  6990                           pclatu	equ	0xFFB
  6991                           pclath	equ	0xFFA
  6992                           pcl	equ	0xFF9
  6993                           tblptru	equ	0xFF8
  6994                           tblptrh	equ	0xFF7
  6995                           tblptrl	equ	0xFF6
  6996                           tablat	equ	0xFF5
  6997                           prodh	equ	0xFF4
  6998                           prodl	equ	0xFF3
  6999                           indf0	equ	0xFEF
  7000                           postinc0	equ	0xFEE
  7001                           postdec0	equ	0xFED
  7002                           preinc0	equ	0xFEC
  7003                           plusw0	equ	0xFEB
  7004                           fsr0h	equ	0xFEA
  7005                           fsr0l	equ	0xFE9
  7006                           wreg	equ	0xFE8
  7007                           indf1	equ	0xFE7
  7008                           postinc1	equ	0xFE6
  7009                           postdec1	equ	0xFE5
  7010                           preinc1	equ	0xFE4
  7011                           plusw1	equ	0xFE3
  7012                           fsr1h	equ	0xFE2
  7013                           fsr1l	equ	0xFE1
  7014                           bsr	equ	0xFE0
  7015                           indf2	equ	0xFDF
  7016                           postinc2	equ	0xFDE
  7017                           postdec2	equ	0xFDD
  7018                           preinc2	equ	0xFDC
  7019                           plusw2	equ	0xFDB
  7020                           fsr2h	equ	0xFDA
  7021                           fsr2l	equ	0xFD9
  7022                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         683
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      74
    BANK0           160     17     127
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    S52$pointerNaSasiada	PTR struct . size(2) Largest target is 0

    Dane.sasiedzi.pointerNaSasiada	PTR struct . size(2) Largest target is 0

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_AdressOfNeighbors
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_Plot->___lwdiv
    _FRAME_DeviceReset->_FRAME_DataUpdateAndChangeOption
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27773
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   19155
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   16092
                                             27 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2    4475
                                             10 COMRAM     6     4      2
                      _IsInNeighbors
                          _LED_Clear
                          _LED_Error
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     889
                                              8 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             22    18      4    2134
                                              5 COMRAM    22    18      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            7     4      3     455
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6660
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4176
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1756
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LED_Clear
           _LED_Control
         _LED_Error
           _LED_Control
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      4A       1       78.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C9      20        0.0%
DATA                 0      0     2E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 24 10:04:34 2019

                __end_of_FRAME_DeviceReset 0D30                      ?_FRAME_AveragingTimes 0006  
                             ___awdiv@sign 000B                                         bsr 000FE0  
                              __CFG_BORV$3 000000                          ?_FRAME_AxisStatus 0006  
                        _FRAME_MapPosition 1890                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                         __size_of_CAN_GenID 0094  
                                      l200 04BE                                        l201 04C4  
                                      l202 04CA                                        l203 04D0  
                                      l204 04D6                                        l205 04DC  
                                      l206 04E2                                        l321 0B46  
                                      l190 0946                                        l293 118C  
                                      l189 0948                                        l198 04B8  
                                      l199 0528                                ?_LED_Update 0001  
                                      l467 0E48                                        l574 0926  
                                      l575 091E                               __CFG_CPB$OFF 000000  
                       ??_FRAME_AxisStatus 0008                               __CFG_CPD$OFF 000000  
                       ?_FRAME_MapPosition 0006                         __size_of_CAN_Setup 005C  
                             ?_LED_Control 0006                                        wreg 000FE8  
                    __end_of_CAN_TakeFrame 0726                                ?_INI_OUTPUT 0001  
                   __size_of_INI_LED_Start 0034                   ??_MOCK_Klikniecie_Spadek 0008  
                    __end_of_CAN_SendFrame 0A9E                               __CFG_LVP$OFF 000000  
                TRM_DataTransmition@weWyU8 003E               __size_of_INI_GlobalInterrupt 000E  
                      ??_FRAME_MapPosition 0008                               __CFG_WDT$OFF 000000  
                                     l1205 14BA                                       l3023 1358  
                                     l3009 130E                                       l4031 0EAC  
                                     l4033 0EB6                                       l4025 0E80  
                          __end_of_INI_All 17DE                                       l4123 1168  
                                     l3413 0AB0                                       l4061 0768  
                                     l3503 0BA6                                       l3431 0AE0  
                                     l4039 0EE2                                       l4071 07AE  
                                     l4063 0776                                       l4151 16C8  
                                     l3521 0BD6                                       l3425 0AD0  
                                     l4081 0800                                       l4073 07BC  
                                     l4065 0784                                       l4137 153E  
                                     l4161 16EA                                       l3515 0BC6  
                                     l3443 0B00                                       l3419 0AC0  
                                     l3603 1200                                       l4083 080E  
                                     l4075 07CA                                       l4067 0792  
                                     l4091 08A4                                       l4059 075A  
                                     l3509 0BB6                                       l3461 0B30  
                                     l3437 0AF0                                       l3701 09E2  
                                     l3621 122A                                       l4085 0824  
                                     l4077 07D8                                       l4069 07A0  
                                     l3527 0BE8                                       l3455 0B20  
                                     l3615 121C                                       l4079 07E6  
                                     l3473 0B56                                       l3449 0B10  
                                     l3537 16F6                                       l3705 0A96  
                                     l3609 120E                                       l4089 083A  
                                     l3491 0B86                                       l3467 0B40  
                                     l2771 1592                                       l3651 1490  
                                     l3485 0B76                                       l3661 14B0  
                                     l3901 10F2                                       l3821 0D1E  
                                     l3813 0CEE                                       l3805 0CB2  
                                     l3741 0E02                                       l3479 0B66  
                                     l3903 10FA                                       l3591 11E4  
                                     l3735 0DEC                                       l3727 0DD2  
                                     l3497 0B96                                       l3649 1488  
                                     l3921 1132                                       l3913 111A  
                                     l3817 0D0C                                       l3585 11D6  
                                     l2787 15D8                                       l3851 019E  
                                     l3827 1454                                       l3579 11C8  
                                     l3747 0E0A                                       l3917 1124  
                                     l3861 026E                                       l3837 0F50  
                                     l3597 11F2                                       l3951 060E  
                                     l3783 14F0                                       l3953 0616  
                                     l3945 05FA                                       l3929 04E8  
                                     l3849 011C                                       l3955 061E  
                                     l3947 0600                                       l3963 0636  
                                     l3971 0694                                       l3875 03F0  
                                     l3867 0328                                       l3981 06C2  
                                     l3973 06A6                                       l3957 0626  
                                     l3949 0606                                       l3965 0676  
                                     _BIE0 000DFA                                       l3895 10DC  
                                     l3983 06CA                                       l3975 06AC  
                                     l3991 06E2                                       l3959 062E  
                                     l3889 10CC                                       l3985 06D2  
                                     l3977 06B2                                       l3993 0722  
                                     l3969 067A                                       l3987 06DA  
                                     l3979 06BA                          _MOC_Frame_Counter 17F6  
                                     u2120 11C4                                       u2210 1494  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       u2320 0E1E  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     u2410 0C40                                       u2420 0C58  
                                     u2416 0C42                                       u2530 0326  
                                     u2426 0C5A                                       u2370 1500  
                                     u2275 09B8                                       u2540 04A8  
                                     _IPR3 000FA5                                       _IPEN 007E87  
                                     u2625 0592                                       _PIE3 000FA3  
                                     u2580 10FE                                       u2670 0EEA  
                                     _PEIE 007F96                                       _LOCK 0041  
                                     _PIR3 000FA4                                       _RCON 000FD0  
              ??_FRAME_AccelerometerStatus 000A                                       _Dane 003B  
                          __end_of_ISR_low 005E                           LED_Control@diode 0006  
                     FRAME_AnalogValue@set 0008                         ?_MOC_Frame_Counter 0006  
                                     _main 16C2                           LED_Control@color 000A  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       fsr2l 000FD9  
                                     btemp 004B                             _CAN_SetupClock 171C  
                       __size_of_LED_Clear 001E                                       prodh 000FF4  
                                     prodl 000FF3                      __end_of_CAN_SetupMask 10B8  
            __size_of_TMR1_Update_flag_Get 000A                                       start 005E  
            __size_of_TMR1_Update_flag_Set 000A                         __size_of_LED_Error 001E  
                            __CFG_IESO$OFF 000000                         __size_of_LED_Right 004C  
            __size_of_FRAME_HandleCanFrame 0206                              _LED_Light_Pos 0E4A  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                      ??_MOC_Frame_Counter 0008                 ??_MOC_Aktualna_Temperatura 0008  
        FRAME_HandleCanFrame@identyfikator 0024                         __size_of_INI_Timer 0018  
                __end_of_FRAME_MapPosition 1892                              _NeightAdress1 0037  
                            _NeightAdress2 0035                              _NeightAdress3 0033  
                            _NeightAdress4 0031                              _NeightAdress5 002F  
                            _NeightAdress6 002D                              _NeightAdress7 002B  
                            _NeightAdress8 0029                           __end_of_LED_Left 15EC  
            __size_of_MOCK_PrzyspieszenieX 000A              __size_of_MOCK_PrzyspieszenieY 000A  
            __size_of_MOCK_PrzyspieszenieZ 000A                                      _B0CON 000E20  
                                    _B1CON 000E30                                      _B2CON 000E40  
                                    _B3CON 000E50                                      _B4CON 000E60  
                                    _B5CON 000E70                           __end_of_LOCK_Get 1890  
                                    ?_main 0001                           __end_of_LOCK_Set 1886  
                          __end_of___awdiv 113C                                      _BSEL0 000DF8  
                          ___awdiv@divisor 0008                                      _T1CON 000FCD  
                                    _IRCF0 007E9C                                      _IRCF1 007E9D  
        FRAME_ExcitationMultiplier@message 0006                                      _IRCF2 007E9E  
                          __end_of___lwdiv 14C4                                      i1l641 004E  
                      __size_of_FRAME_Plot 0058                            ___awdiv@counter 000A  
                                    _MSEL0 000DF0                                      _MSEL1 000DF1  
                                    _MSEL2 000DF2                                      _MSEL3 000DF3  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_PWRT$OFF 000000  
                                    _Flagi 00C6                     ?_CAN_MoveBuffIntoFrame 0006  
                            __CFG_WRT0$OFF 000000                 __size_of_FRAME_AnalogValue 0002  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                         __end_of_ISR_high 188C                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                __end_of_MOC_Frame_Counter 1804                             __CFG_EBTRB$OFF 000000  
                  i1TMR1_Update_flag_Set@a 0001                               ?_MOC_NOTWORK 0006  
                                    tablat 000FF5                     __end_of_CAN_SetupClock 1744  
                                    ttemp5 004C                                      ttemp6 004F  
                                    ttemp7 0053                                      status 000FD8  
                                    wtemp8 004C                          __end_of_CAN_GenID 102C  
                           __CFG_PBADEN$ON 000000                        __size_of_LED_Update 007A  
                           ?_LED_Light_Pos 000D                           _TMR1_Timer_reset 1744  
                        __end_of_CAN_Setup 1366                              _INI_LED_Start 168E  
                    _FRAME_ExcitationValue 15EC           FRAME_AccelerometerStatus@message 0008  
                          __initialization 1366                        __size_of_INI_OUTPUT 0020  
                         CAN_GenID@frameID 0008                               __end_of_main 16F2  
                   ??_FRAME_AveragingTimes 0008                 __size_of_FRAME_DeviceReset 0140  
                 ?_FRAME_AdressOfNeighbors 0006                           CAN_GenID@message 0006  
                _FRAME_AccelerometerStatus 122E  FRAME_SensorExcitationStatus@iterator_beta 000F  
                                   ??_main 0025                     CAN_MoveBuffIntoFrame@i 000A  
                            __activetblptr 000002                           _TMR1_Update_flag 0039  
                        __end_of_LED_Clear 17C4                      __end_of_IsInNeighbors 122E  
                          _wartosciSasiada 00DF                                  ??_INI_All 000B  
                        __end_of_LED_Error 17A6                          __end_of_LED_Right 15AA  
          __size_of_MOCK_Klikniecie_Spadek 000A                                  ??_ISR_low 0003  
                                   _CANCON 000F6F                           ___awdiv@dividend 0006  
              FRAME_ExcitationMultiplier@i 0009                                     _CIOCON 000F73  
                          __CFG_BBSIZ$1024 000000                          __end_of_INI_Timer 17F6  
                                   i1l3317 004C                            ?_CAN_SetupClock 0001  
                                   _RXB0D0 000F66                                     _TMR1IE 007CE8  
                                   _TMR1IF 007CF0                                     _TMR1IP 007CF8  
                                   _TMR1ON 007E68               ??_FRAME_ExcitationMultiplier 0008  
                           ?_INI_LED_Start 0001                             __CFG_XINST$OFF 000000  
                                ??___awdiv 000A                             __CFG_STVREN$ON 000000  
                         LED_Light_Pos@pos 000D                 __size_of_FRAME_MapPosition 0002  
                                ??___lwdiv 000A                                     clear_0 138E  
                                   clear_1 13A0                                     clear_2 13AC  
                         ___awdiv@quotient 000C                 ??_FRAME_PrzypisanieDokarty 0008  
                 ??i1_TMR1_Update_flag_Set 0003                            __CFG_BOREN$BOHW 000000  
                             __pdataCOMRAM 0042                                     tblptrh 000FF7  
                                   tblptrl 000FF6                                     tblptru 000FF8  
      __size_of_FRAME_ExcitationMultiplier 004E                 __size_of_MOC_Frame_Counter 000E  
                     __size_of_LED_Control 0152                   FRAME_MapPosition@message 0006  
                    TMR1_Update_flag_Set@a 0006                                 __accesstop 0060  
                  __end_of__initialization 13B2                               ??_FRAME_Plot 000F  
                      ISR_low@ramkaStanuU8 003F                                  ?_LED_Left 0006  
                          ??_LED_Light_Pos 0011                              ___rparam_used 000001  
                   ?_FRAME_ExcitationValue 0006                                  ?_LOCK_Get 0001  
                                ?_LOCK_Set 0001            __end_of_FRAME_AdressOfNeighbors 04AA  
                   _MOCK_Klikniecie_Spadek 1844                             __pcstackCOMRAM 0001  
                                LED_Left@a 0006                                  LED_Left@b 0008  
                      _INI_GlobalInterrupt 1804                                  ?_ISR_high 0001  
                             ??_LED_Update 0018                __end_of_TRM_DataTransmition 155E  
                    _FRAME_SoftwareVersion 12A4                         __end_of_FRAME_Plot 1472  
                             ??_INI_OUTPUT 0006                                  LOCK_Set@k 0006  
                  FRAME_AxisStatus@message 0006                IsInNeighbors@message_adress 0006  
                     ?_INI_GlobalInterrupt 0001                  __size_of_FRAME_AxisStatus 0036  
                               __pbssBANK0 0060                       __size_of_MOC_NOTWORK 0008  
                          ??_INI_LED_Start 000B                                 ??_LED_Left 0008  
                               ??_LOCK_Get 0006                                 ??_LOCK_Set 0006  
                       __end_of_LED_Update 11B6                         __end_of_INI_OUTPUT 1788  
                               ??_ISR_high 0001                        TMR1_Timer_reset@t1H 0002  
                      TMR1_Timer_reset@t1L 0001                                    _ECANCON 000F77  
                                  _CANSTAT 000F6E                    ??_CAN_MoveBuffIntoFrame 000A  
             __end_of_TMR1_Update_flag_Get 1862               __end_of_TMR1_Update_flag_Set 1858  
          __size_ofi1_TMR1_Update_flag_Set 000A               __end_of_FRAME_HandleCanFrame 092C  
                                  _INI_All 17C4                   __end_of_TMR1_Timer_reset 1768  
                                  _RXB0DLC 000F65                                    _RXB0CON 000F60  
                                  _RXB1CON 000F50                      ??_INI_GlobalInterrupt 0006  
                                  _TXB0CON 000F40                                    _ISR_low 0018  
                                  _RXFCON0 000DD4                                    _DaneCan 0025  
             __end_of_MOCK_PrzyspieszenieX 1844               __end_of_MOCK_PrzyspieszenieY 183A  
             __end_of_MOCK_PrzyspieszenieZ 1830         __end_of_FRAME_ExcitationMultiplier 1512  
               _FRAME_ExcitationMultiplier 14C4                FRAME_HandleCanFrame@message 001C  
                                  __Hparam 0000           ??_MOC_Wynikowa_wartosc_roznicowa 0008  
          ?_MOC_Wynikowa_wartosc_roznicowa 0006                                    __Lparam 0000  
                   __size_of_CAN_TakeFrame 027C                                  _CAN_GenID 0F98  
                                  ___awdiv 10B8                                  _CAN_Setup 130A  
                   __size_of_CAN_SendFrame 0172                                    ___lwdiv 1472  
                        LED_Light_Pos@pos2 0014                                    __pcinit 1366  
                                  __ramtop 0D00     FRAME_DataUpdateAndChangeOption@message 0006  
                                  __ptext0 16C2                                    __ptext1 1512  
                                  __ptext2 0726                                    __ptext3 12A4  
                                  __ptext4 0D30                                    __ptext5 1812  
                                  __ptext6 1876                                    __ptext7 17F6  
                                  __ptext8 181C                                    __ptext9 187E  
                   ?_FRAME_SoftwareVersion 0006                     __size_of_CAN_SetupMask 008C  
        __size_of_MOC_Aktualna_Temperatura 000A             FRAME_AdressOfNeighbors@nrRamki 0008  
                ?_MOC_Aktualna_Temperatura 0006           __size_of_FRAME_AdressOfNeighbors 0448  
                         ??_CAN_SetupClock 0006             FRAME_AdressOfNeighbors@message 0006  
                                _LED_Clear 17A6                                  _LED_Error 1788  
                           __pintcode_body 1886                                  _LED_Right 155E  
                     end_of_initialization 13B2                              __Lmediumconst 0000  
                                  int_func 1886                                  _INI_Timer 17DE  
                   i1_TMR1_Update_flag_Set 1862           TRM_DataTransmition@czujnikWeWyU8 003D  
                               ?_CAN_GenID 0006                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc2 000FDE                                 ?_CAN_Setup 0001  
            __size_of_FRAME_AveragingTimes 0036                       CAN_SendFrame@message 000B  
                            LED_Update@Red 0040                              _CAN_TakeFrame 04AA  
                               ?_LED_Clear 0001                              _CAN_SendFrame 092C  
                               ?_LED_Error 0001                FRAME_AdressOfNeighbors@kier 0018  
                               ?_LED_Right 0006                           _FRAME_AxisStatus 1622  
                  ??_FRAME_ExcitationValue 0008                                 ?_INI_Timer 0001  
                  ?_MOCK_Klikniecie_Spadek 0006                            _ramkaCanRxKarty 0060  
                     _TMR1_Update_flag_Get 1858                            _ramkaCanTxKarty 00B5  
                     _TMR1_Update_flag_Set 184E                              _CAN_SetupMask 102C  
                        __size_of_LED_Left 0042                       _FRAME_HandleCanFrame 0726  
                   __size_of_IsInNeighbors 0078                          __size_of_LOCK_Get 0004  
                        __size_of_LOCK_Set 0008                             CAN_TakeFrame@k 0013  
                            __pidataCOMRAM 186C                          __size_of_ISR_high 1884  
                     _MOCK_PrzyspieszenieX 183A                       _MOCK_PrzyspieszenieY 1830  
                     _MOCK_PrzyspieszenieZ 1826                                 LED_Right@a 0006  
                               LED_Right@b 000A                      MOC_Frame_Counter@zeta 0042  
                            ??_LED_Control 0008                        start_initialization 1366  
                           ?_CAN_TakeFrame 000E                             ?_CAN_SendFrame 000B  
           __end_of_MOCK_Klikniecie_Spadek 184E                           __CFG_OSC$IRCIO67 000000  
        __size_of_FRAME_PrzypisanieDokarty 009E                  ?_FRAME_PrzypisanieDokarty 0006  
                    ?_TMR1_Update_flag_Get 0006                      ?_TMR1_Update_flag_Set 0006  
                           ?_CAN_SetupMask 0001                      __end_of_LED_Light_Pos 0EFA  
                    ?_FRAME_HandleCanFrame 001C                                ??_CAN_GenID 0009  
                              ??_CAN_Setup 0006                           __CFG_LPT1OSC$OFF 000000  
                    ?_MOCK_PrzyspieszenieX 0006                      ?_MOCK_PrzyspieszenieY 0006  
                    ?_MOCK_PrzyspieszenieZ 0006                   CAN_MoveBuffIntoFrame@Buf 0008  
     __end_of_FRAME_SensorExcitationStatus 0E4A      __size_of_FRAME_SensorExcitationStatus 011A  
                 CAN_MoveBuffIntoFrame@Ram 0006               _FRAME_SensorExcitationStatus 0D30  
           __size_of_CAN_MoveBuffIntoFrame 002A                                __pbssBIGRAM 00DF  
            __end_of_CAN_MoveBuffIntoFrame 171C                            _Fulfillment_Lvl 0048  
                              __pbssCOMRAM 0025                                   ?_INI_All 0001  
                  _FRAME_AdressOfNeighbors 0062                              __pcstackBANK0 00CE  
                            _IsInNeighbors 11B6                          ?_TMR1_Timer_reset 0001  
                              _BRGCON1bits 000F70                                _BRGCON2bits 000F71  
                              _BRGCON3bits 000F72                                   ?_ISR_low 0001  
  __end_of_FRAME_DataUpdateAndChangeOption 141A   __size_of_FRAME_DataUpdateAndChangeOption 005A  
        ??_FRAME_DataUpdateAndChangeOption 0008           ?_FRAME_DataUpdateAndChangeOption 0006  
          _FRAME_DataUpdateAndChangeOption 13C0                                ??_LED_Clear 000B  
                            ??_MOC_NOTWORK 0008                         ??_TMR1_Timer_reset 0001  
                              ??_LED_Error 000B                                ??_LED_Right 0008  
             __size_of_TRM_DataTransmition 004C                   FRAME_AdressOfNeighbors@i 001A  
                      __end_of_LED_Control 0BF0                ?_FRAME_ExcitationMultiplier 0006  
                              ??_INI_Timer 0006                      __end_of_INI_LED_Start 16C2  
                         ___lwdiv@dividend 0006                                  __pintcode 0008  
                                 ?___awdiv 0006                    ??_FRAME_SoftwareVersion 0008  
         __end_of_MOC_Aktualna_Temperatura 1826                                   ?___lwdiv 0006  
                        FRAME_Plot@message 000D                                __pintcodelo 0018  
              __end_of_INI_GlobalInterrupt 1812                            ??_CAN_TakeFrame 0010  
            ?_FRAME_SensorExcitationStatus 000B     __end_of_MOC_Wynikowa_wartosc_roznicowa 181C  
  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A             _MOC_Wynikowa_wartosc_roznicowa 1812  
                              _COMSTATbits 000F74                             ?_IsInNeighbors 0006  
                          ??_CAN_SendFrame 000D                           ___lwdiv@quotient 000B  
                  ?i1_TMR1_Update_flag_Set 0001                FRAME_AveragingTimes@message 0006  
                   ??_TMR1_Update_flag_Get 0008                     ??_TMR1_Update_flag_Set 0008  
                          ??_CAN_SetupMask 0006                                   _LED_Left 15AA  
                   ??_FRAME_HandleCanFrame 001E                       CAN_TakeFrame@message 000E  
                      __end_of_MOC_NOTWORK 187E                                   _LOCK_Get 188C  
                     CAN_TakeFrame@tempCON 0012                                   _LOCK_Set 187E  
                                 _RXB0EIDH 000F63                                   _RXB0EIDL 000F64  
                                 _RCONbits 000FD0                           __CFG_WDTPS$32768 000000  
                                 _RXB0SIDH 000F61                                   _RXB0SIDL 000F62  
                                 _RXF0EIDH 000F02                                   _RXF0EIDL 000F03  
                                 _RXF1EIDH 000F06                                   _RXF1EIDL 000F07  
                                 _RXF2EIDH 000F0A                                   _RXF2EIDL 000F0B  
                                 _RXF3EIDH 000F0E                                   _RXF3EIDL 000F0F  
                                 _RXF0SIDH 000F00                                   _RXF0SIDL 000F01  
                                 _RXF1SIDH 000F04                                   _RXF1SIDL 000F05  
                                 _RXF2SIDH 000F08                                   _RXF2SIDL 000F09  
                                 _RXF3SIDH 000F0C                                   _RXF3SIDL 000F0D  
                                 _ISR_high 0008                                   _RXM0EIDH 000F1A  
                                 _RXM0EIDL 000F1B                                   _RXM1EIDH 000F1E  
                                 _RXM1EIDL 000F1F                     ??_MOCK_PrzyspieszenieX 0008  
                   ??_MOCK_PrzyspieszenieY 0008                     ??_MOCK_PrzyspieszenieZ 0008  
                                 _RXM0SIDH 000F18                                   _RXM0SIDL 000F19  
                                 _RXM1SIDH 000F1C                                   _RXM1SIDL 000F1D  
                 __end_of_FRAME_AxisStatus 1658                  ??_FRAME_AdressOfNeighbors 000A  
                         _DetectorLedRadar 00CB                                _LED_Control 0A9E  
                         __size_of_INI_All 001A               FRAME_ExcitationValue@message 0006  
           __end_ofi1_TMR1_Update_flag_Set 186C                                  copy_data0 137A  
                         __size_of_ISR_low 0046         __size_of_FRAME_AccelerometerStatus 0076  
             __end_of_FRAME_AveragingTimes 168E                 ?_FRAME_AccelerometerStatus 0008  
           __size_of_FRAME_ExcitationValue 0036              __end_of_FRAME_ExcitationValue 1622  
                                 __Hrparam 0000                               _RXB0SIDLbits 000F62  
                                 __Lrparam 0000                           __size_of___awdiv 0084  
                         __size_of___lwdiv 0052                            ??_IsInNeighbors 0008  
                 _MOC_Aktualna_Temperatura 181C            FRAME_PrzypisanieDokarty@message 0006  
                       LED_Light_Pos@flage 0016                         LED_Light_Pos@color 0011  
         __end_of_FRAME_PrzypisanieDokarty 0F98                               _RXF0SIDLbits 000F01  
                 FRAME_AnalogValue@message 0006                            ___lwdiv@divisor 0008  
                             _RXF1SIDLbits 000F05                            ___lwdiv@counter 000A  
                                 __ptext10 188C                                   __ptext11 1788  
                                 __ptext20 13C0                                   __ptext12 17A6  
                                 __ptext21 1622                                   __ptext13 11B6  
                                 __ptext30 092C                                   __ptext22 1658  
                                 __ptext14 0EFA                                   __ptext31 0F98  
                                 __ptext23 1892                                   __ptext15 141A  
                                 __ptext40 155E                                   __ptext32 04AA  
                                 __ptext24 0062                                   __ptext16 1890  
                                 __ptext41 15AA                                   __ptext33 10B8  
                                 __ptext25 122E                                   __ptext17 15EC  
                                 __ptext50 171C                                   __ptext42 17C4  
                                 __ptext34 16F2                                   __ptext26 1826  
                                 __ptext18 14C4                                   __ptext43 17DE  
                                 __ptext35 184E                                   __ptext27 1830  
                                 __ptext19 0BF0                                   __ptext52 1862  
                                 __ptext44 1768                                   __ptext36 1858  
                                 __ptext28 183A             ??_FRAME_SensorExcitationStatus 000D  
                                 __ptext53 1744                                   __ptext45 168E  
                                 __ptext37 113C                                   __ptext29 1844  
                                 __ptext46 0A9E                                   __ptext38 0E4A  
                                 __ptext47 1804                                   __ptext39 1472  
                                 __ptext48 130A                                   __ptext49 102C  
            TRM_DataTransmition@canMessage 00CE                               _RXF2SIDLbits 000F09  
                              _MOC_NOTWORK 1876                  FRAME_HandleCanFrame@ident 0022  
                 FRAME_DeviceReset@message 0009          __end_of_FRAME_AccelerometerStatus 12A4  
                               _FRAME_Plot 141A                              __size_of_main 0030  
                  __size_of_CAN_SetupClock 0028                                   int$flags 004B  
                      _TRM_DataTransmition 1512                                _RXB0DLCbits 000F65  
                               _LED_Update 113C                                _RXB0CONbits 000F60  
                               _INTCONbits 000FF2                                 _INI_OUTPUT 1768  
                        _FRAME_AnalogValue 1892                       ?_TRM_DataTransmition 0001  
             FRAME_SoftwareVersion@message 0006                                   intlevel1 0000  
                                 intlevel2 0000                         ?_FRAME_AnalogValue 0006  
      FRAME_SensorExcitationStatus@message 000B                                _TXB0CONbits 000F40  
                      ??_FRAME_AnalogValue 000A                  __size_of_TMR1_Timer_reset 0024  
                 LED_Light_Pos@fulfillment 000F                       _FRAME_AveragingTimes 1658  
           __size_of_FRAME_SoftwareVersion 0066                          _FRAME_DeviceReset 0BF0  
            __end_of_FRAME_SoftwareVersion 130A                         ?_FRAME_DeviceReset 0009  
                          LED_Update@Green 004A                  __end_of_FRAME_AnalogValue 1894  
                   __size_of_LED_Light_Pos 00B0                      _CAN_MoveBuffIntoFrame 16F2  
                               _WDTCONbits 000FD1                        ??_FRAME_DeviceReset 000B  
                    ??_TRM_DataTransmition 0025                   _FRAME_PrzypisanieDokarty 0EFA  
                   LED_Light_Pos@LED_array 0012                             LED_Update@pos1 0046  
                           LED_Update@pos2 0044                                ?_FRAME_Plot 000D  
