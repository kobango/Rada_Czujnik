

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 26 11:20:49 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80  0000                     
    81                           ; Version 2.05
    82                           ; Generated 20/12/2018 GMT
    83                           ; 
    84                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4680 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  001A14                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for MOC_Frame_Counter@zeta
   121  001A14  0011               	dw	17
   122                           
   123                           ;initializer for LED_Update@pos2
   124  001A16  0001               	dw	1
   125                           
   126                           ;initializer for LED_Update@pos1
   127  001A18  0001               	dw	1
   128                           
   129                           ;initializer for _Fulfillment_Lvl
   130  001A1A  0014               	dw	20
   131                           
   132                           ;initializer for LED_Update@Green
   133  001A1C  01                 	db	1
   134                           
   135                           ;initializer for _NeightAdress2
   136  001A1D  006F               	dw	111
   137                           
   138                           ;initializer for _NeightAdress1
   139  001A1F  000A               	dw	10
   140  0000                     _RXF9EIDL	set	3443
   141  0000                     _RXF9EIDH	set	3442
   142  0000                     _RXF9SIDLbits	set	3441
   143  0000                     _RXF9SIDL	set	3441
   144  0000                     _RXF9SIDH	set	3440
   145  0000                     _RXF8EIDL	set	3435
   146  0000                     _RXF8EIDH	set	3434
   147  0000                     _RXF8SIDLbits	set	3433
   148  0000                     _RXF8SIDL	set	3433
   149  0000                     _RXF8SIDH	set	3432
   150  0000                     _RXF7EIDL	set	3431
   151  0000                     _RXF7EIDH	set	3430
   152  0000                     _RXF7SIDLbits	set	3429
   153  0000                     _RXF7SIDL	set	3429
   154  0000                     _RXF7SIDH	set	3428
   155  0000                     _RXF6EIDL	set	3427
   156  0000                     _RXF6EIDH	set	3426
   157  0000                     _RXF6SIDLbits	set	3425
   158  0000                     _RXF6SIDL	set	3425
   159  0000                     _RXF6SIDH	set	3424
   160  0000                     _RXFBCON4	set	3556
   161  0000                     _RXFBCON3	set	3555
   162  0000                     _RXFBCON2	set	3554
   163  0000                     _RXFBCON1	set	3553
   164  0000                     _RXFBCON0	set	3552
   165  0000                     _MSEL3	set	3571
   166  0000                     _MSEL2	set	3570
   167  0000                     _MSEL1	set	3569
   168  0000                     _MSEL0	set	3568
   169  0000                     _BIE0	set	3578
   170  0000                     _BSEL0	set	3576
   171  0000                     _B5CON	set	3696
   172  0000                     _B4CON	set	3680
   173  0000                     _B3CON	set	3664
   174  0000                     _B2CON	set	3648
   175  0000                     _B1CON	set	3632
   176  0000                     _B0CON	set	3616
   177  0000                     _TXB0CONbits	set	3904
   178  0000                     _RXF5EIDL	set	3863
   179  0000                     _RXF5EIDH	set	3862
   180  0000                     _RXF5SIDLbits	set	3861
   181  0000                     _RXF5SIDL	set	3861
   182  0000                     _RXF5SIDH	set	3860
   183  0000                     _RXF4EIDL	set	3859
   184  0000                     _RXF4EIDH	set	3858
   185  0000                     _RXF4SIDLbits	set	3857
   186  0000                     _RXF4SIDL	set	3857
   187  0000                     _RXF4SIDH	set	3856
   188  0000                     _RXF3EIDL	set	3855
   189  0000                     _RXF3EIDH	set	3854
   190  0000                     _RXF3SIDLbits	set	3853
   191  0000                     _RXF3SIDL	set	3853
   192  0000                     _RXF3SIDH	set	3852
   193  0000                     _RXF2EIDL	set	3851
   194  0000                     _RXF2EIDH	set	3850
   195  0000                     _RXF2SIDLbits	set	3849
   196  0000                     _RXF2SIDL	set	3849
   197  0000                     _RXF2SIDH	set	3848
   198  0000                     _RXF1EIDL	set	3847
   199  0000                     _RXF1EIDH	set	3846
   200  0000                     _RXF1SIDLbits	set	3845
   201  0000                     _RXF1SIDL	set	3845
   202  0000                     _RXF1SIDH	set	3844
   203  0000                     _RXF0EIDL	set	3843
   204  0000                     _RXF0EIDH	set	3842
   205  0000                     _RXF0SIDLbits	set	3841
   206  0000                     _RXF0SIDL	set	3841
   207  0000                     _RXF0SIDH	set	3840
   208  0000                     _RXM1EIDL	set	3871
   209  0000                     _RXM1EIDH	set	3870
   210  0000                     _RXM1SIDL	set	3869
   211  0000                     _RXM1SIDH	set	3868
   212  0000                     _RXM0EIDL	set	3867
   213  0000                     _RXM0EIDH	set	3866
   214  0000                     _RXM0SIDL	set	3865
   215  0000                     _RXM0SIDH	set	3864
   216  0000                     _RXB1CON	set	3920
   217  0000                     _TXB0CON	set	3904
   218  0000                     _EECON2	set	4007
   219  0000                     _EEDATA	set	4008
   220  0000                     _EECON1bits	set	4006
   221  0000                     _EEADR	set	4009
   222  0000                     _EEADRH	set	4010
   223  0000                     _INTCONbits	set	4082
   224  0000                     _WDTCONbits	set	4049
   225  0000                     _RCONbits	set	4048
   226  0000                     _TRISC	set	3988
   227  0000                     _LATC	set	3979
   228  0000                     _T1CON	set	4045
   229  0000                     _TMR1H	set	4047
   230  0000                     _TMR1L	set	4046
   231  0000                     _LATE	set	3981
   232  0000                     _LATA	set	3977
   233  0000                     _LATB	set	3978
   234  0000                     _LATD	set	3980
   235  0000                     _TRISD	set	3989
   236  0000                     _TRISE	set	3990
   237  0000                     _TRISB	set	3987
   238  0000                     _TRISA	set	3986
   239  0000                     _RXB0DLCbits	set	3941
   240  0000                     _RXB0DLC	set	3941
   241  0000                     _RXB0SIDH	set	3937
   242  0000                     _RXB0SIDLbits	set	3938
   243  0000                     _RXB0SIDL	set	3938
   244  0000                     _RXB0EIDH	set	3939
   245  0000                     _RXB0EIDL	set	3940
   246  0000                     _COMSTATbits	set	3956
   247  0000                     _RXB0CONbits	set	3936
   248  0000                     _BRGCON3bits	set	3954
   249  0000                     _BRGCON2bits	set	3953
   250  0000                     _BRGCON1bits	set	3952
   251  0000                     _CIOCON	set	3955
   252  0000                     _ECANCON	set	3959
   253  0000                     _PIR3	set	4004
   254  0000                     _IPR3	set	4005
   255  0000                     _PIE3	set	4003
   256  0000                     _RXB0CON	set	3936
   257  0000                     _CANSTAT	set	3950
   258  0000                     _CANCON	set	3951
   259  0000                     _RCON	set	4048
   260  0000                     _RXB0D0	set	3942
   261  0000                     _TMR1IF	set	31984
   262  0000                     _TMR1IP	set	31992
   263  0000                     _PEIE	set	32662
   264  0000                     _IPEN	set	32391
   265  0000                     _TMR1ON	set	32360
   266  0000                     _TMR1IE	set	31976
   267  0000                     _IRCF0	set	32412
   268  0000                     _IRCF1	set	32413
   269  0000                     _IRCF2	set	32414
   270                           
   271                           ; #config settings
   272  0000                     
   273                           	psect	cinit
   274  00145E                     __pcinit:
   275                           	opt callstack 0
   276  00145E                     start_initialization:
   277                           	opt callstack 0
   278  00145E                     __initialization:
   279                           	opt callstack 0
   280                           
   281                           ; Initialize objects allocated to COMRAM (13 bytes)
   282                           ; load TBLPTR registers with __pidataCOMRAM
   283  00145E  0E14               	movlw	low __pidataCOMRAM
   284  001460  6EF6               	movwf	tblptrl,c
   285  001462  0E1A               	movlw	high __pidataCOMRAM
   286  001464  6EF7               	movwf	tblptrh,c
   287  001466  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   288  001468  6EF8               	movwf	tblptru,c
   289  00146A  EE00  F03F         	lfsr	0,__pdataCOMRAM
   290  00146E  EE10 F00D          	lfsr	1,13
   291  001472                     copy_data0:
   292  001472  0009               	tblrd		*+
   293  001474  CFF5 FFEE          	movff	tablat,postinc0
   294  001478  50E5               	movf	postdec1,w,c
   295  00147A  50E1               	movf	fsr1l,w,c
   296  00147C  E1FA               	bnz	copy_data0
   297                           
   298                           ; Clear objects allocated to BIGRAM (544 bytes)
   299  00147E  EE00  F0DF         	lfsr	0,__pbssBIGRAM
   300  001482  EE12 F020          	lfsr	1,544
   301  001486                     clear_0:
   302  001486  6AEE               	clrf	postinc0,c
   303  001488  50E5               	movf	postdec1,w,c
   304  00148A  50E1               	movf	fsr1l,w,c
   305  00148C  E1FC               	bnz	clear_0
   306  00148E  50E2               	movf	fsr1h,w,c
   307  001490  E1FA               	bnz	clear_0
   308                           
   309                           ; Clear objects allocated to BANK0 (110 bytes)
   310  001492  EE00  F060         	lfsr	0,__pbssBANK0
   311  001496  0E6E               	movlw	110
   312  001498                     clear_1:
   313  001498  6AEE               	clrf	postinc0,c
   314  00149A  06E8               	decf	wreg,f,c
   315  00149C  E1FD               	bnz	clear_1
   316                           
   317                           ; Clear objects allocated to COMRAM (36 bytes)
   318  00149E  EE00  F001         	lfsr	0,__pbssCOMRAM
   319  0014A2  0E24               	movlw	36
   320  0014A4                     clear_2:
   321  0014A4  6AEE               	clrf	postinc0,c
   322  0014A6  06E8               	decf	wreg,f,c
   323  0014A8  E1FD               	bnz	clear_2
   324  0014AA                     end_of_initialization:
   325                           	opt callstack 0
   326  0014AA                     __end_of__initialization:
   327                           	opt callstack 0
   328  0014AA  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  0014AC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  0014AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  0014B0  6EF8               	movwf	tblptru,c
   332  0014B2  0100               	movlb	0
   333  0014B4  EF64  F00C         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336  000001                     __pbssCOMRAM:
   337                           	opt callstack 0
   338  000001                     _DaneCan:
   339                           	opt callstack 0
   340  000001                     	ds	4
   341  000005                     _nextEEPosition:
   342                           	opt callstack 0
   343  000005                     	ds	2
   344  000007                     _czujnikiNaMapie:
   345                           	opt callstack 0
   346  000007                     	ds	2
   347  000009                     FRAME_SensorExcitationStatus@statwect:
   348                           	opt callstack 0
   349  000009                     	ds	2
   350  00000B                     _TMR1_Update_flag:
   351                           	opt callstack 0
   352  00000B                     	ds	2
   353  00000D                     _Dane:
   354                           	opt callstack 0
   355  00000D                     	ds	2
   356  00000F                     WritetoEEPROM@GIE_Status:
   357                           	opt callstack 0
   358  00000F                     	ds	1
   359  000010                     	ds	1
   360  000011                     	ds	1
   361  000012                     ISR_low@ramkaStanuU8:
   362                           	opt callstack 0
   363  000012                     	ds	1
   364  000013                     	ds	1
   365  000014                     _LOCK:
   366                           	opt callstack 0
   367  000014                     	ds	1
   368  000015                     _neighborsAdress:
   369                           	opt callstack 0
   370  000015                     	ds	2
   371  000017                     _ustawieniaKarty:
   372                           	opt callstack 0
   373  000017                     	ds	2
   374  000019                     _NeightAdress8:
   375                           	opt callstack 0
   376  000019                     	ds	2
   377  00001B                     _NeightAdress7:
   378                           	opt callstack 0
   379  00001B                     	ds	2
   380  00001D                     _NeightAdress6:
   381                           	opt callstack 0
   382  00001D                     	ds	2
   383  00001F                     _NeightAdress5:
   384                           	opt callstack 0
   385  00001F                     	ds	2
   386  000021                     _NeightAdress4:
   387                           	opt callstack 0
   388  000021                     	ds	2
   389  000023                     _NeightAdress3:
   390                           	opt callstack 0
   391  000023                     	ds	2
   392                           
   393                           	psect	dataCOMRAM
   394  00003F                     __pdataCOMRAM:
   395                           	opt callstack 0
   396  00003F                     MOC_Frame_Counter@zeta:
   397                           	opt callstack 0
   398  00003F                     	ds	2
   399  000041                     LED_Update@pos2:
   400                           	opt callstack 0
   401  000041                     	ds	2
   402  000043                     LED_Update@pos1:
   403                           	opt callstack 0
   404  000043                     	ds	2
   405  000045                     _Fulfillment_Lvl:
   406                           	opt callstack 0
   407  000045                     	ds	2
   408  000047                     LED_Update@Green:
   409                           	opt callstack 0
   410  000047                     	ds	1
   411  000048                     _NeightAdress2:
   412                           	opt callstack 0
   413  000048                     	ds	2
   414  00004A                     _NeightAdress1:
   415                           	opt callstack 0
   416  00004A                     	ds	2
   417                           
   418                           	psect	bssBANK0
   419  000060                     __pbssBANK0:
   420                           	opt callstack 0
   421  000060                     _ramkaCanRxKarty:
   422                           	opt callstack 0
   423  000060                     	ds	85
   424  0000B5                     _ramkaCanTxKarty:
   425                           	opt callstack 0
   426  0000B5                     	ds	17
   427  0000C6                     _Flagi:
   428                           	opt callstack 0
   429  0000C6                     	ds	5
   430  0000CB                     _DetectorLedRadar:
   431                           	opt callstack 0
   432  0000CB                     	ds	3
   433                           
   434                           	psect	bssBIGRAM
   435  0000DF                     __pbssBIGRAM:
   436                           	opt callstack 0
   437  0000DF                     _wartosciSasiada:
   438                           	opt callstack 0
   439  0000DF                     	ds	544
   440                           
   441                           	psect	cstackBANK0
   442  0000CE                     __pcstackBANK0:
   443                           	opt callstack 0
   444  0000CE                     TRM_DataTransmition@canMessage:
   445                           	opt callstack 0
   446                           
   447                           ; 17 bytes @ 0x0
   448  0000CE                     	ds	17
   449                           
   450                           	psect	cstackCOMRAM
   451  000025                     __pcstackCOMRAM:
   452                           	opt callstack 0
   453  000025                     TMR1_Timer_reset@t1L:
   454                           	opt callstack 0
   455  000025                     i1TMR1_Update_flag_Set@a:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x0
   459  000025                     	ds	1
   460  000026                     TMR1_Timer_reset@t1H:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x1
   464  000026                     	ds	1
   465  000027                     ??_ISR_low:
   466  000027                     
   467                           ; 1 bytes @ 0x2
   468  000027                     	ds	3
   469  00002A                     ??_CAN_Setup:
   470  00002A                     ?_TMR1_Update_flag_Get:
   471                           	opt callstack 0
   472  00002A                     ?_LED_Right:
   473                           	opt callstack 0
   474  00002A                     ?_LED_Left:
   475                           	opt callstack 0
   476  00002A                     ?_MOC_Wynikowa_wartosc_roznicowa:
   477                           	opt callstack 0
   478  00002A                     ?_MOC_Frame_Counter:
   479                           	opt callstack 0
   480  00002A                     ?_MOC_Aktualna_Temperatura:
   481                           	opt callstack 0
   482  00002A                     ?_MOC_NOTWORK:
   483                           	opt callstack 0
   484  00002A                     ?_IsInNeighbors:
   485                           	opt callstack 0
   486  00002A                     ?_MOCK_PrzyspieszenieX:
   487                           	opt callstack 0
   488  00002A                     ?_MOCK_PrzyspieszenieY:
   489                           	opt callstack 0
   490  00002A                     ?_MOCK_PrzyspieszenieZ:
   491                           	opt callstack 0
   492  00002A                     ?_MOCK_Klikniecie_Spadek:
   493                           	opt callstack 0
   494  00002A                     ?___awdiv:
   495                           	opt callstack 0
   496  00002A                     ?___lwdiv:
   497                           	opt callstack 0
   498  00002A                     LOCK_Set@k:
   499                           	opt callstack 0
   500  00002A                     CAN_MoveBuffIntoFrame@Ram:
   501                           	opt callstack 0
   502  00002A                     CAN_GenID@message:
   503                           	opt callstack 0
   504  00002A                     LED_Right@a:
   505                           	opt callstack 0
   506  00002A                     LED_Left@a:
   507                           	opt callstack 0
   508  00002A                     LED_Control@diode:
   509                           	opt callstack 0
   510  00002A                     TMR1_Update_flag_Set@a:
   511                           	opt callstack 0
   512  00002A                     IsInNeighbors@message_adress:
   513                           	opt callstack 0
   514  00002A                     FRAME_ExcitationValue@message:
   515                           	opt callstack 0
   516  00002A                     FRAME_ExcitationMultiplier@message:
   517                           	opt callstack 0
   518  00002A                     FRAME_AveragingTimes@message:
   519                           	opt callstack 0
   520  00002A                     FRAME_AxisStatus@message:
   521                           	opt callstack 0
   522  00002A                     FRAME_DataUpdateAndChangeOption@message:
   523                           	opt callstack 0
   524  00002A                     FRAME_MapPosition@message:
   525                           	opt callstack 0
   526  00002A                     FRAME_SoftwareVersion@message:
   527                           	opt callstack 0
   528  00002A                     FRAME_AnalogValue@message:
   529                           	opt callstack 0
   530  00002A                     FRAME_PrzypisanieDokarty@message:
   531                           	opt callstack 0
   532  00002A                     FRAME_AdressOfNeighbors@message:
   533                           	opt callstack 0
   534  00002A                     NVMalloc@size:
   535                           	opt callstack 0
   536  00002A                     ReadfromEEPROM@Address:
   537                           	opt callstack 0
   538  00002A                     WritetoEEPROM@Address:
   539                           	opt callstack 0
   540  00002A                     ___awdiv@dividend:
   541                           	opt callstack 0
   542  00002A                     ___lwdiv@dividend:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x5
   546  00002A                     	ds	2
   547  00002C                     ??_LED_Right:
   548  00002C                     ??_FRAME_DataUpdateAndChangeOption:
   549  00002C                     ??_FRAME_PrzypisanieDokarty:
   550  00002C                     CAN_GenID@frameID:
   551                           	opt callstack 0
   552  00002C                     WritetoEEPROM@Data:
   553                           	opt callstack 0
   554  00002C                     CAN_MoveBuffIntoFrame@Buf:
   555                           	opt callstack 0
   556  00002C                     LED_Left@b:
   557                           	opt callstack 0
   558  00002C                     FRAME_SensorExcitationStatus@message:
   559                           	opt callstack 0
   560  00002C                     FRAME_AccelerometerStatus@message:
   561                           	opt callstack 0
   562  00002C                     FRAME_AnalogValue@set:
   563                           	opt callstack 0
   564  00002C                     FRAME_AdressOfNeighbors@nrRamki:
   565                           	opt callstack 0
   566  00002C                     NVMalloc@location:
   567                           	opt callstack 0
   568  00002C                     NVMRead@dest:
   569                           	opt callstack 0
   570  00002C                     ___awdiv@divisor:
   571                           	opt callstack 0
   572  00002C                     ___lwdiv@divisor:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x7
   576  00002C                     	ds	1
   577  00002D                     ??_CAN_GenID:
   578  00002D                     FRAME_ExcitationMultiplier@i:
   579                           	opt callstack 0
   580  00002D                     NVMWrite@source:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x8
   584  00002D                     	ds	1
   585  00002E                     ??_FRAME_SensorExcitationStatus:
   586  00002E                     ??_FRAME_AdressOfNeighbors:
   587  00002E                     ??_NVMalloc:
   588  00002E                     CAN_MoveBuffIntoFrame@i:
   589                           	opt callstack 0
   590  00002E                     LED_Control@color:
   591                           	opt callstack 0
   592  00002E                     ___awdiv@counter:
   593                           	opt callstack 0
   594  00002E                     ___lwdiv@counter:
   595                           	opt callstack 0
   596  00002E                     LED_Right@b:
   597                           	opt callstack 0
   598  00002E                     NVMRead@addr:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x9
   602  00002E                     	ds	1
   603  00002F                     ___awdiv@sign:
   604                           	opt callstack 0
   605  00002F                     CAN_SendFrame@message:
   606                           	opt callstack 0
   607  00002F                     NVMWrite@addr:
   608                           	opt callstack 0
   609  00002F                     ___lwdiv@quotient:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0xA
   613  00002F                     	ds	1
   614  000030                     NVMInit@result:
   615                           	opt callstack 0
   616  000030                     FRAME_SensorExcitationStatus@tru:
   617                           	opt callstack 0
   618  000030                     NVMRead@count:
   619                           	opt callstack 0
   620  000030                     ___awdiv@quotient:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0xB
   624  000030                     	ds	1
   625  000031                     ??_CAN_SendFrame:
   626  000031                     LED_Light_Pos@pos:
   627                           	opt callstack 0
   628  000031                     FRAME_Plot@message:
   629                           	opt callstack 0
   630  000031                     NVMWrite@count:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0xC
   634  000031                     	ds	1
   635  000032                     CAN_TakeFrame@message:
   636                           	opt callstack 0
   637  000032                     FRAME_AdressOfNeighbors@kier:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0xD
   641  000032                     	ds	1
   642  000033                     ??_FRAME_Plot:
   643  000033                     LED_Light_Pos@fulfillment:
   644                           	opt callstack 0
   645  000033                     FRAME_DeviceReset@message:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0xE
   649  000033                     	ds	1
   650  000034                     ??_CAN_TakeFrame:
   651                           
   652                           ; 1 bytes @ 0xF
   653  000034                     	ds	1
   654  000035                     LED_Light_Pos@color:
   655                           	opt callstack 0
   656                           
   657                           ; 1 bytes @ 0x10
   658  000035                     	ds	1
   659  000036                     CAN_TakeFrame@tempCON:
   660                           	opt callstack 0
   661  000036                     LED_Light_Pos@LED_array:
   662                           	opt callstack 0
   663  000036                     FRAME_HandleCanFrame@message:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x11
   667  000036                     	ds	1
   668  000037                     CAN_TakeFrame@k:
   669                           	opt callstack 0
   670                           
   671                           ; 1 bytes @ 0x12
   672  000037                     	ds	1
   673  000038                     ??_FRAME_HandleCanFrame:
   674  000038                     LED_Light_Pos@pos2:
   675                           	opt callstack 0
   676                           
   677                           ; 2 bytes @ 0x13
   678  000038                     	ds	2
   679  00003A                     LED_Light_Pos@flage:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x15
   683  00003A                     	ds	2
   684  00003C                     FRAME_HandleCanFrame@ident:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x17
   688  00003C                     	ds	2
   689  00003E                     FRAME_HandleCanFrame@identyfikator:
   690                           	opt callstack 0
   691                           
   692                           ; 1 bytes @ 0x19
   693  00003E                     	ds	1
   694  00003F                     
   695                           ; 1 bytes @ 0x1A
   696 ;;
   697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   698 ;;
   699 ;; *************** function _main *****************
   700 ;; Defined at:
   701 ;;		line 97 in file "main.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels required when called:    9
   721 ;; This function calls:
   722 ;;		_INI_All
   723 ;;		_LED_Update
   724 ;;		_TMR1_Update_flag_Get
   725 ;;		_TMR1_Update_flag_Set
   726 ;;		_TRM_DataTransmition
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text0
   733  0018C8                     __ptext0:
   734                           	opt callstack 0
   735  0018C8                     _main:
   736                           	opt callstack 22
   737                           
   738                           ;main.c: 99:     INI_All();
   739                           
   740                           ;incstack = 0
   741  0018C8  ECB7  F00C         	call	_INI_All	;wreg free
   742                           
   743                           ;main.c: 101:     RCON = 0xFF;
   744  0018CC  68D0               	setf	4048,c	;volatile
   745  0018CE                     l4593:
   746                           
   747                           ;main.c: 104:     {;main.c: 105:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   748  0018CE  0100               	movlb	0	; () banked
   749  0018D0  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   750                           
   751                           ; BSR set to: 0
   752                           ;main.c: 106:         {;main.c: 107:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   753  0018D2  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   754                           
   755                           ; BSR set to: 0
   756                           ;main.c: 111:         if(TMR1_Update_flag_Get()==1)
   757  0018D4  EC34  F00D         	call	_TMR1_Update_flag_Get	;wreg free
   758  0018D8  042A               	decf	?_TMR1_Update_flag_Get,w,c
   759  0018DA  102B               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   760  0018DC  A4D8               	btfss	status,2,c
   761  0018DE  D008               	goto	l4603
   762                           
   763                           ;main.c: 112:         {;main.c: 113:             LED_Update();
   764  0018E0  ECDF  F008         	call	_LED_Update	;wreg free
   765                           
   766                           ;main.c: 114:             TMR1_Update_flag_Set(0);
   767  0018E4  0E00               	movlw	0
   768  0018E6  6E2B               	movwf	TMR1_Update_flag_Set@a+1,c
   769  0018E8  0E00               	movlw	0
   770  0018EA  6E2A               	movwf	TMR1_Update_flag_Set@a,c
   771  0018EC  EC2F  F00D         	call	_TMR1_Update_flag_Set	;wreg free
   772  0018F0                     l4603:
   773                           
   774                           ;main.c: 119:         TRM_DataTransmition();
   775  0018F0  EC05  F00B         	call	_TRM_DataTransmition	;wreg free
   776  0018F4  0004               	clrwdt		;# 
   777                           
   778                           ;main.c: 121:     }
   779  0018F6  D7EB               	goto	l4593
   780  0018F8                     __end_of_main:
   781                           	opt callstack 0
   782                           
   783 ;; *************** function _TRM_DataTransmition *****************
   784 ;; Defined at:
   785 ;;		line 19 in file "TRM.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  canMessage     17    0[BANK0 ] struct .
   790 ;;  i               1    0        unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   801 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   803 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   804 ;;Total ram usage:       17 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    8
   807 ;; This function calls:
   808 ;;		_CAN_TakeFrame
   809 ;;		_FRAME_HandleCanFrame
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text1
   816  00160A                     __ptext1:
   817                           	opt callstack 0
   818  00160A                     _TRM_DataTransmition:
   819                           	opt callstack 22
   820                           
   821                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   822                           
   823                           ;incstack = 0
   824  00160A  A001               	btfss	_DaneCan,0,c
   825  00160C  D014               	goto	l4579
   826                           
   827                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   828  00160E  0E02               	movlw	2
   829  001610  0100               	movlb	0	; () banked
   830  001612  6FCF               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   831                           
   832                           ;TRM.c: 30:         canMessage.id.Val = 0;
   833  001614  0E00               	movlw	0
   834  001616  6FD2               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   835  001618  0E00               	movlw	0
   836  00161A  6FD3               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   837  00161C  0E00               	movlw	0
   838  00161E  6FD4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   839  001620  0E00               	movlw	0
   840  001622  6FD5               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
   841                           
   842                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   843  001624  0E04               	movlw	4
   844  001626  6FD4               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   845                           
   846                           ; BSR set to: 0
   847                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   848  001628  0ECE               	movlw	low TRM_DataTransmition@canMessage
   849  00162A  6E36               	movwf	FRAME_HandleCanFrame@message,c
   850  00162C  0E00               	movlw	high TRM_DataTransmition@canMessage
   851  00162E  6E37               	movwf	FRAME_HandleCanFrame@message+1,c
   852  001630  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   853                           
   854                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   855  001634  9001               	bcf	_DaneCan,0,c
   856  001636                     l4579:
   857                           
   858                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   859  001636  0ECE               	movlw	low TRM_DataTransmition@canMessage
   860  001638  6E32               	movwf	CAN_TakeFrame@message,c
   861  00163A  0E00               	movlw	high TRM_DataTransmition@canMessage
   862  00163C  6E33               	movwf	CAN_TakeFrame@message+1,c
   863  00163E  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   864  001642  0900               	iorlw	0
   865  001644  B4D8               	btfsc	status,2,c
   866  001646  0012               	return	
   867                           
   868                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   869  001648  0ECE               	movlw	low TRM_DataTransmition@canMessage
   870  00164A  6E36               	movwf	FRAME_HandleCanFrame@message,c
   871  00164C  0E00               	movlw	high TRM_DataTransmition@canMessage
   872  00164E  6E37               	movwf	FRAME_HandleCanFrame@message+1,c
   873  001650  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   874                           
   875                           ;TRM.c: 67:         }
   876  001654  0012               	return		;funcret
   877  001656                     __end_of_TRM_DataTransmition:
   878                           	opt callstack 0
   879                           
   880 ;; *************** function _FRAME_HandleCanFrame *****************
   881 ;; Defined at:
   882 ;;		line 650 in file "FRAME.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  message         2   17[COMRAM] PTR struct .
   885 ;;		 -> TRM_DataTransmition@canMessage(17), 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  ident           2   23[COMRAM] unsigned short 
   888 ;;  alfa            2    0        int 
   889 ;;  identyfikato    1   25[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   900 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   902 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   903 ;;Total ram usage:        9 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    7
   906 ;; This function calls:
   907 ;;		_CAN_GenID
   908 ;;		_CAN_SendFrame
   909 ;;		_FRAME_AccelerometerStatus
   910 ;;		_FRAME_AdressOfNeighbors
   911 ;;		_FRAME_AnalogValue
   912 ;;		_FRAME_AveragingTimes
   913 ;;		_FRAME_AxisStatus
   914 ;;		_FRAME_DeviceReset
   915 ;;		_FRAME_ExcitationMultiplier
   916 ;;		_FRAME_ExcitationValue
   917 ;;		_FRAME_MapPosition
   918 ;;		_FRAME_Plot
   919 ;;		_FRAME_PrzypisanieDokarty
   920 ;;		_FRAME_SensorExcitationStatus
   921 ;;		_FRAME_SoftwareVersion
   922 ;;		_LED_Error
   923 ;;		___awdiv
   924 ;; This function is called by:
   925 ;;		_TRM_DataTransmition
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text2
   930  0005AA                     __ptext2:
   931                           	opt callstack 0
   932  0005AA                     _FRAME_HandleCanFrame:
   933                           	opt callstack 22
   934                           
   935                           ;FRAME.c: 650: void FRAME_HandleCanFrame(mID * message);FRAME.c: 651: {;FRAME.c: 652:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   936                           
   937                           ;incstack = 0
   938  0005AA  EE20 F006          	lfsr	2,6
   939  0005AE  5036               	movf	FRAME_HandleCanFrame@message,w,c
   940  0005B0  26D9               	addwf	fsr2l,f,c
   941  0005B2  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
   942  0005B4  22DA               	addwfc	fsr2h,f,c
   943  0005B6  50DF               	movf	indf2,w,c
   944  0005B8  6E38               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   945  0005BA  5038               	movf	??_FRAME_HandleCanFrame,w,c
   946  0005BC  6E2A               	movwf	___awdiv@dividend,c
   947  0005BE  6A2B               	clrf	___awdiv@dividend+1,c
   948  0005C0  0E00               	movlw	0
   949  0005C2  6E2D               	movwf	___awdiv@divisor+1,c
   950  0005C4  0E04               	movlw	4
   951  0005C6  6E2C               	movwf	___awdiv@divisor,c
   952  0005C8  EC9D  F008         	call	___awdiv	;wreg free
   953  0005CC  502A               	movf	?___awdiv,w,c
   954  0005CE  6E3E               	movwf	FRAME_HandleCanFrame@identyfikator,c
   955                           
   956                           ;FRAME.c: 655:     if(identyfikator != 0x01)
   957  0005D0  043E               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   958  0005D2  B4D8               	btfsc	status,2,c
   959  0005D4  D074               	goto	l4529
   960                           
   961                           ;FRAME.c: 656:     {;FRAME.c: 657:         WORD ident = identyfikator;
   962  0005D6  C03E  F03C         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   963  0005DA  6A3D               	clrf	FRAME_HandleCanFrame@ident+1,c
   964  0005DC  D070               	goto	l4529
   965  0005DE                     l4499:
   966                           
   967                           ;FRAME.c: 664:             FRAME_SensorExcitationStatus(message);
   968  0005DE  C036  F02C         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   969  0005E2  C037  F02D         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   970  0005E6  ECDE  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   971                           
   972                           ;FRAME.c: 665:             break;
   973  0005EA  D09E               	goto	l4531
   974  0005EC                     l4501:
   975                           
   976                           ;FRAME.c: 667:             FRAME_AccelerometerStatus(message);
   977  0005EC  C036  F02C         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   978  0005F0  C037  F02D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   979  0005F4  EC58  F009         	call	_FRAME_AccelerometerStatus	;wreg free
   980                           
   981                           ;FRAME.c: 668:             break;
   982  0005F8  D097               	goto	l4531
   983  0005FA                     l4503:
   984                           
   985                           ;FRAME.c: 670:             FRAME_ExcitationValue(message);
   986  0005FA  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   987  0005FE  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   988  000602  EC8F  F00B         	call	_FRAME_ExcitationValue	;wreg free
   989                           
   990                           ;FRAME.c: 671:             break;
   991  000606  D090               	goto	l4531
   992  000608                     l4505:
   993                           
   994                           ;FRAME.c: 673:             FRAME_ExcitationMultiplier(message);
   995  000608  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   996  00060C  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   997  000610  ECDE  F00A         	call	_FRAME_ExcitationMultiplier	;wreg free
   998                           
   999                           ;FRAME.c: 674:             break;
  1000  000614  D089               	goto	l4531
  1001  000616                     l4507:
  1002                           
  1003                           ;FRAME.c: 676:             FRAME_AveragingTimes(message);
  1004  000616  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1005  00061A  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1006  00061E  ECE0  F00B         	call	_FRAME_AveragingTimes	;wreg free
  1007                           
  1008                           ;FRAME.c: 677:             break;
  1009  000622  D082               	goto	l4531
  1010  000624                     l4509:
  1011                           
  1012                           ;FRAME.c: 679:             FRAME_AxisStatus(message);
  1013  000624  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1014  000628  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1015  00062C  ECC5  F00B         	call	_FRAME_AxisStatus	;wreg free
  1016                           
  1017                           ;FRAME.c: 680:             break;
  1018  000630  D07B               	goto	l4531
  1019  000632                     l4511:
  1020                           
  1021                           ;FRAME.c: 682:             FRAME_DeviceReset(message);
  1022  000632  C036  F033         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1023  000636  C037  F034         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1024  00063A  EC3A  F005         	call	_FRAME_DeviceReset	;wreg free
  1025                           
  1026                           ;FRAME.c: 683:             break;
  1027  00063E  D074               	goto	l4531
  1028  000640                     l4513:
  1029                           
  1030                           ;FRAME.c: 685:             FRAME_Plot(message);
  1031  000640  C036  F031         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1032  000644  C037  F032         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1033  000648  EC89  F00A         	call	_FRAME_Plot	;wreg free
  1034                           
  1035                           ;FRAME.c: 686:             break;
  1036  00064C  D06D               	goto	l4531
  1037  00064E                     l4515:
  1038                           
  1039                           ;FRAME.c: 688:             FRAME_MapPosition(message);
  1040  00064E  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1041  000652  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1042  000656  EC4B  F00D         	call	_FRAME_MapPosition	;wreg free
  1043                           
  1044                           ;FRAME.c: 689:             break;
  1045  00065A  D066               	goto	l4531
  1046  00065C                     l4517:
  1047                           
  1048                           ;FRAME.c: 691:             FRAME_SoftwareVersion(message);
  1049  00065C  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1050  000660  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1051  000664  ECCA  F009         	call	_FRAME_SoftwareVersion	;wreg free
  1052                           
  1053                           ;FRAME.c: 692:             break;
  1054  000668  D05F               	goto	l4531
  1055  00066A                     l4519:
  1056                           
  1057                           ;FRAME.c: 695:             FRAME_AnalogValue(message, identyfikator - 0x0C);
  1058  00066A  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1059  00066E  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1060  000672  0EF4               	movlw	244
  1061  000674  243E               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1062  000676  6E2C               	movwf	FRAME_AnalogValue@set,c
  1063  000678  6A2D               	clrf	FRAME_AnalogValue@set+1,c
  1064  00067A  0EFF               	movlw	255
  1065  00067C  222D               	addwfc	FRAME_AnalogValue@set+1,f,c
  1066  00067E  EC4C  F00D         	call	_FRAME_AnalogValue	;wreg free
  1067                           
  1068                           ;FRAME.c: 696:             break;
  1069  000682  D052               	goto	l4531
  1070  000684                     l4521:
  1071                           
  1072                           ;FRAME.c: 698:             FRAME_PrzypisanieDokarty(message);
  1073  000684  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1074  000688  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1075  00068C  EC03  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1076                           
  1077                           ;FRAME.c: 699:             break;
  1078  000690  D04B               	goto	l4531
  1079  000692                     l4523:
  1080                           
  1081                           ;FRAME.c: 701:             FRAME_AdressOfNeighbors(message,0x10);
  1082  000692  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1083  000696  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1084  00069A  0E00               	movlw	0
  1085  00069C  6E2D               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1086  00069E  0E10               	movlw	16
  1087  0006A0  6E2C               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1088  0006A2  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1089                           
  1090                           ;FRAME.c: 702:             break;
  1091  0006A6  D040               	goto	l4531
  1092  0006A8                     l4525:
  1093                           
  1094                           ;FRAME.c: 704:             FRAME_AdressOfNeighbors(message,0x11);
  1095  0006A8  C036  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1096  0006AC  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1097  0006B0  0E00               	movlw	0
  1098  0006B2  6E2D               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1099  0006B4  0E11               	movlw	17
  1100  0006B6  6E2C               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1101  0006B8  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1102                           
  1103                           ;FRAME.c: 705:             break;
  1104  0006BC  D035               	goto	l4531
  1105  0006BE                     l4529:
  1106  0006BE  503E               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1107  0006C0  6E38               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1108  0006C2  6A39               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1109                           
  1110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1111                           ; Switch size 1, requested type "simple"
  1112                           ; Number of cases is 1, Range of values is 0 to 0
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte            4     3 (average)
  1116                           ;	Chosen strategy is simple_byte
  1117  0006C4  5039               	movf	??_FRAME_HandleCanFrame+1,w,c
  1118  0006C6  0A00               	xorlw	0	; case 0
  1119  0006C8  A4D8               	btfss	status,2,c
  1120  0006CA  D02E               	goto	l4531
  1121                           
  1122                           ; Switch size 1, requested type "simple"
  1123                           ; Number of cases is 15, Range of values is 1 to 17
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte           46    24 (average)
  1127                           ;	Chosen strategy is simple_byte
  1128  0006CC  5038               	movf	??_FRAME_HandleCanFrame,w,c
  1129  0006CE  0A01               	xorlw	1	; case 1
  1130  0006D0  B4D8               	btfsc	status,2,c
  1131  0006D2  D785               	goto	l4499
  1132  0006D4  0A03               	xorlw	3	; case 2
  1133  0006D6  B4D8               	btfsc	status,2,c
  1134  0006D8  D789               	goto	l4501
  1135  0006DA  0A01               	xorlw	1	; case 3
  1136  0006DC  B4D8               	btfsc	status,2,c
  1137  0006DE  D78D               	goto	l4503
  1138  0006E0  0A07               	xorlw	7	; case 4
  1139  0006E2  B4D8               	btfsc	status,2,c
  1140  0006E4  D791               	goto	l4505
  1141  0006E6  0A01               	xorlw	1	; case 5
  1142  0006E8  B4D8               	btfsc	status,2,c
  1143  0006EA  D795               	goto	l4507
  1144  0006EC  0A03               	xorlw	3	; case 6
  1145  0006EE  B4D8               	btfsc	status,2,c
  1146  0006F0  D799               	goto	l4509
  1147  0006F2  0A01               	xorlw	1	; case 7
  1148  0006F4  B4D8               	btfsc	status,2,c
  1149  0006F6  D79D               	goto	l4511
  1150  0006F8  0A0E               	xorlw	14	; case 9
  1151  0006FA  B4D8               	btfsc	status,2,c
  1152  0006FC  D7A1               	goto	l4513
  1153  0006FE  0A03               	xorlw	3	; case 10
  1154  000700  B4D8               	btfsc	status,2,c
  1155  000702  D7A5               	goto	l4515
  1156  000704  0A01               	xorlw	1	; case 11
  1157  000706  B4D8               	btfsc	status,2,c
  1158  000708  D7A9               	goto	l4517
  1159  00070A  0A07               	xorlw	7	; case 12
  1160  00070C  B4D8               	btfsc	status,2,c
  1161  00070E  D7AD               	goto	l4519
  1162  000710  0A01               	xorlw	1	; case 13
  1163  000712  B4D8               	btfsc	status,2,c
  1164  000714  D7AA               	goto	l4519
  1165  000716  0A02               	xorlw	2	; case 15
  1166  000718  B4D8               	btfsc	status,2,c
  1167  00071A  D7B4               	goto	l4521
  1168  00071C  0A1F               	xorlw	31	; case 16
  1169  00071E  B4D8               	btfsc	status,2,c
  1170  000720  D7B8               	goto	l4523
  1171  000722  0A01               	xorlw	1	; case 17
  1172  000724  B4D8               	btfsc	status,2,c
  1173  000726  D7C0               	goto	l4525
  1174  000728                     l4531:
  1175                           
  1176                           ;FRAME.c: 714:     if(message->message_type == 0x02)
  1177  000728  EE20 F001          	lfsr	2,1
  1178  00072C  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1179  00072E  26D9               	addwf	fsr2l,f,c
  1180  000730  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1181  000732  22DA               	addwfc	fsr2h,f,c
  1182  000734  0E02               	movlw	2
  1183  000736  18DE               	xorwf	postinc2,w,c
  1184  000738  A4D8               	btfss	status,2,c
  1185  00073A  0012               	return	
  1186                           
  1187                           ;FRAME.c: 715:     {;FRAME.c: 717:         message->frame_type = 0x03;
  1188  00073C  EE20 F002          	lfsr	2,2
  1189  000740  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1190  000742  26D9               	addwf	fsr2l,f,c
  1191  000744  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1192  000746  22DA               	addwfc	fsr2h,f,c
  1193  000748  0E03               	movlw	3
  1194  00074A  6EDF               	movwf	indf2,c
  1195                           
  1196                           ;FRAME.c: 718:         message->message_type = 0x01;
  1197  00074C  EE20 F001          	lfsr	2,1
  1198  000750  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1199  000752  26D9               	addwf	fsr2l,f,c
  1200  000754  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1201  000756  22DA               	addwfc	fsr2h,f,c
  1202  000758  0E01               	movlw	1
  1203  00075A  6EDF               	movwf	indf2,c
  1204                           
  1205                           ;FRAME.c: 719:         message->id.Val = 0;
  1206  00075C  EE20 F004          	lfsr	2,4
  1207  000760  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1208  000762  26D9               	addwf	fsr2l,f,c
  1209  000764  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1210  000766  22DA               	addwfc	fsr2h,f,c
  1211  000768  6ADE               	clrf	postinc2,c
  1212  00076A  6ADE               	clrf	postinc2,c
  1213  00076C  6ADE               	clrf	postinc2,c
  1214  00076E  6ADD               	clrf	postdec2,c
  1215                           
  1216                           ;FRAME.c: 721:         message->id.v[2] = identyfikator*4;
  1217  000770  503E               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1218  000772  0D04               	mullw	4
  1219  000774  EE20 F006          	lfsr	2,6
  1220  000778  5036               	movf	FRAME_HandleCanFrame@message,w,c
  1221  00077A  26D9               	addwf	fsr2l,f,c
  1222  00077C  5037               	movf	FRAME_HandleCanFrame@message+1,w,c
  1223  00077E  22DA               	addwfc	fsr2h,f,c
  1224  000780  CFF3 FFDF          	movff	prodl,indf2
  1225                           
  1226                           ;FRAME.c: 722:         CAN_GenID(message,identyfikator);
  1227  000784  C036  F02A         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1228  000788  C037  F02B         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1229  00078C  C03E  F02C         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1230  000790  EC1C  F009         	call	_CAN_GenID	;wreg free
  1231                           
  1232                           ;FRAME.c: 723:         CAN_SendFrame(message);
  1233  000794  C036  F02F         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1234  000798  C037  F030         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1235  00079C  ECD8  F003         	call	_CAN_SendFrame	;wreg free
  1236                           
  1237                           ;FRAME.c: 734:        while(RXB0CONbits.FILHIT3)
  1238  0007A0  D004               	goto	l688
  1239  0007A2                     l689:
  1240                           
  1241                           ;FRAME.c: 735:        {;FRAME.c: 736:            if(TXB0CONbits.TXERR == 1){
  1242  0007A2  010F               	movlb	15	; () banked
  1243  0007A4  B940               	btfsc	64,4,b	;volatile
  1244                           
  1245                           ; BSR set to: 15
  1246                           ;FRAME.c: 737:                LED_Error();
  1247  0007A6  ECD8  F00C         	call	_LED_Error	;wreg free
  1248  0007AA                     l688:
  1249                           
  1250                           ;FRAME.c: 734:        while(RXB0CONbits.FILHIT3)
  1251  0007AA  A660               	btfss	3936,3,c	;volatile
  1252  0007AC  0012               	return	
  1253  0007AE  D7F9               	goto	l689
  1254  0007B0                     __end_of_FRAME_HandleCanFrame:
  1255                           	opt callstack 0
  1256                           
  1257 ;; *************** function _LED_Error *****************
  1258 ;; Defined at:
  1259 ;;		line 37 in file "LED.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  2  356[None  ] unsigned int 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    4
  1280 ;; This function calls:
  1281 ;;		_LED_Control
  1282 ;; This function is called by:
  1283 ;;		_FRAME_HandleCanFrame
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text3
  1288  0019B0                     __ptext3:
  1289                           	opt callstack 0
  1290  0019B0                     _LED_Error:
  1291                           	opt callstack 24
  1292                           
  1293                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1294                           
  1295                           ;incstack = 0
  1296  0019B0  0E02               	movlw	2
  1297  0019B2  6E2B               	movwf	LED_Control@diode+1,c
  1298  0019B4  0EAA               	movlw	170
  1299  0019B6  6E2A               	movwf	LED_Control@diode,c
  1300  0019B8  0E00               	movlw	0
  1301  0019BA  EC91  F004         	call	_LED_Control
  1302                           
  1303                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1304  0019BE  0E00               	movlw	0
  1305  0019C0  6E2B               	movwf	LED_Control@diode+1,c
  1306  0019C2  0E00               	movlw	0
  1307  0019C4  6E2A               	movwf	LED_Control@diode,c
  1308  0019C6  0E01               	movlw	1
  1309  0019C8  EC91  F004         	call	_LED_Control
  1310  0019CC  0012               	return		;funcret
  1311  0019CE                     __end_of_LED_Error:
  1312                           	opt callstack 0
  1313                           
  1314 ;; *************** function _FRAME_SoftwareVersion *****************
  1315 ;; Defined at:
  1316 ;;		line 484 in file "FRAME.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  message         2    5[COMRAM] PTR struct .
  1319 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1334 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1335 ;;Total ram usage:        3 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    3
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_FRAME_HandleCanFrame
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text4
  1346  001394                     __ptext4:
  1347                           	opt callstack 0
  1348  001394                     _FRAME_SoftwareVersion:
  1349                           	opt callstack 25
  1350                           
  1351                           ;FRAME.c: 484: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 485: {;FRAME.c: 
      +                          487:     if(message->message_type == 0x02)
  1352                           
  1353                           ;incstack = 0
  1354  001394  EE20 F001          	lfsr	2,1
  1355  001398  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1356  00139A  26D9               	addwf	fsr2l,f,c
  1357  00139C  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1358  00139E  22DA               	addwfc	fsr2h,f,c
  1359  0013A0  0E02               	movlw	2
  1360  0013A2  18DE               	xorwf	postinc2,w,c
  1361  0013A4  A4D8               	btfss	status,2,c
  1362  0013A6  0012               	return	
  1363                           
  1364                           ;FRAME.c: 488:     {;FRAME.c: 489:         message->data_length = 4;
  1365  0013A8  EE20 F010          	lfsr	2,16
  1366  0013AC  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1367  0013AE  26D9               	addwf	fsr2l,f,c
  1368  0013B0  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1369  0013B2  22DA               	addwfc	fsr2h,f,c
  1370  0013B4  0E04               	movlw	4
  1371  0013B6  6EDF               	movwf	indf2,c
  1372                           
  1373                           ;FRAME.c: 490:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1374  0013B8  EE20 F008          	lfsr	2,8
  1375  0013BC  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1376  0013BE  26D9               	addwf	fsr2l,f,c
  1377  0013C0  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1378  0013C2  22DA               	addwfc	fsr2h,f,c
  1379  0013C4  5005               	movf	5,w,c
  1380  0013C6  6EDF               	movwf	indf2,c
  1381                           
  1382                           ;FRAME.c: 491:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1383  0013C8  EE20 F009          	lfsr	2,9
  1384  0013CC  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1385  0013CE  26D9               	addwf	fsr2l,f,c
  1386  0013D0  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1387  0013D2  22DA               	addwfc	fsr2h,f,c
  1388  0013D4  C004 FFDF          	movff	4,indf2
  1389                           
  1390                           ;FRAME.c: 492:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1391  0013D8  EE20 F00A          	lfsr	2,10
  1392  0013DC  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1393  0013DE  26D9               	addwf	fsr2l,f,c
  1394  0013E0  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1395  0013E2  22DA               	addwfc	fsr2h,f,c
  1396  0013E4  500B               	movf	11,w,c
  1397  0013E6  6EDF               	movwf	indf2,c
  1398                           
  1399                           ;FRAME.c: 493:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1400  0013E8  EE20 F00B          	lfsr	2,11
  1401  0013EC  502A               	movf	FRAME_SoftwareVersion@message,w,c
  1402  0013EE  26D9               	addwf	fsr2l,f,c
  1403  0013F0  502B               	movf	FRAME_SoftwareVersion@message+1,w,c
  1404  0013F2  22DA               	addwfc	fsr2h,f,c
  1405  0013F4  C00A FFDF          	movff	10,indf2
  1406                           
  1407                           ;FRAME.c: 494:     }
  1408  0013F8  0012               	return		;funcret
  1409  0013FA                     __end_of_FRAME_SoftwareVersion:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1413 ;; Defined at:
  1414 ;;		line 47 in file "FRAME.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  message         2    7[COMRAM] PTR struct .
  1417 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  tru             2   11[COMRAM] unsigned int 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;Total ram usage:        6 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    4
  1436 ;; This function calls:
  1437 ;;		_IsInNeighbors
  1438 ;;		_LOCK_Get
  1439 ;;		_LOCK_Set
  1440 ;;		_MOC_Aktualna_Temperatura
  1441 ;;		_MOC_Frame_Counter
  1442 ;;		_MOC_NOTWORK
  1443 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1444 ;; This function is called by:
  1445 ;;		_FRAME_HandleCanFrame
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text5
  1450  000BBC                     __ptext5:
  1451                           	opt callstack 0
  1452  000BBC                     _FRAME_SensorExcitationStatus:
  1453                           	opt callstack 24
  1454                           
  1455                           ;FRAME.c: 47: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 48: {;FRAM
      +                          E.c: 50:     static UINT statwect = 0b00000000;;FRAME.c: 51:     if(message->message_typ
      +                          e == 0x02)
  1456                           
  1457                           ;incstack = 0
  1458  000BBC  EE20 F001          	lfsr	2,1
  1459  000BC0  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1460  000BC2  26D9               	addwf	fsr2l,f,c
  1461  000BC4  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1462  000BC6  22DA               	addwfc	fsr2h,f,c
  1463  000BC8  0E02               	movlw	2
  1464  000BCA  18DE               	xorwf	postinc2,w,c
  1465  000BCC  A4D8               	btfss	status,2,c
  1466  000BCE  D047               	goto	l4187
  1467                           
  1468                           ;FRAME.c: 52:     {;FRAME.c: 53:         message->data_length = 6;
  1469  000BD0  EE20 F010          	lfsr	2,16
  1470  000BD4  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1471  000BD6  26D9               	addwf	fsr2l,f,c
  1472  000BD8  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1473  000BDA  22DA               	addwfc	fsr2h,f,c
  1474  000BDC  0E06               	movlw	6
  1475  000BDE  6EDF               	movwf	indf2,c
  1476                           
  1477                           ;FRAME.c: 59:         message->data[0] = LOCK_Get();
  1478  000BE0  EE20 F008          	lfsr	2,8
  1479  000BE4  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1480  000BE6  26D9               	addwf	fsr2l,f,c
  1481  000BE8  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1482  000BEA  22DA               	addwfc	fsr2h,f,c
  1483  000BEC  EC49  F00D         	call	_LOCK_Get	;wreg free
  1484  000BF0  6EDF               	movwf	indf2,c
  1485                           
  1486                           ;FRAME.c: 60:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1487  000BF2  EE20 F009          	lfsr	2,9
  1488  000BF6  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1489  000BF8  26D9               	addwf	fsr2l,f,c
  1490  000BFA  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1491  000BFC  22DA               	addwfc	fsr2h,f,c
  1492  000BFE  EC11  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1493  000C02  C02B  F02A         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1494  000C06  6A2B               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1495  000C08  502A               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1496  000C0A  6EDF               	movwf	indf2,c
  1497                           
  1498                           ;FRAME.c: 61:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1499  000C0C  EE20 F00A          	lfsr	2,10
  1500  000C10  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1501  000C12  26D9               	addwf	fsr2l,f,c
  1502  000C14  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1503  000C16  22DA               	addwfc	fsr2h,f,c
  1504  000C18  EC11  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1505  000C1C  502A               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1506  000C1E  6EDF               	movwf	indf2,c
  1507                           
  1508                           ;FRAME.c: 62:         message->data[3] = MOC_Frame_Counter();
  1509  000C20  EE20 F00B          	lfsr	2,11
  1510  000C24  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1511  000C26  26D9               	addwf	fsr2l,f,c
  1512  000C28  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1513  000C2A  22DA               	addwfc	fsr2h,f,c
  1514  000C2C  ECFC  F00C         	call	_MOC_Frame_Counter	;wreg free
  1515  000C30  502A               	movf	?_MOC_Frame_Counter,w,c
  1516  000C32  6EDF               	movwf	indf2,c
  1517                           
  1518                           ;FRAME.c: 63:         message->data[4] = MOC_Aktualna_Temperatura();
  1519  000C34  EE20 F00C          	lfsr	2,12
  1520  000C38  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1521  000C3A  26D9               	addwf	fsr2l,f,c
  1522  000C3C  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1523  000C3E  22DA               	addwfc	fsr2h,f,c
  1524  000C40  EC16  F00D         	call	_MOC_Aktualna_Temperatura	;wreg free
  1525  000C44  502A               	movf	?_MOC_Aktualna_Temperatura,w,c
  1526  000C46  6EDF               	movwf	indf2,c
  1527                           
  1528                           ;FRAME.c: 64:         message->data[5] = MOC_NOTWORK();
  1529  000C48  EE20 F00D          	lfsr	2,13
  1530  000C4C  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1531  000C4E  26D9               	addwf	fsr2l,f,c
  1532  000C50  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1533  000C52  22DA               	addwfc	fsr2h,f,c
  1534  000C54  EC3E  F00D         	call	_MOC_NOTWORK	;wreg free
  1535  000C58  502A               	movf	?_MOC_NOTWORK,w,c
  1536  000C5A  6EDF               	movwf	indf2,c
  1537                           
  1538                           ;FRAME.c: 74:     }
  1539  000C5C  0012               	return	
  1540  000C5E                     l4187:
  1541                           
  1542                           ;FRAME.c: 76:     {;FRAME.c: 78:         UINT tru = IsInNeighbors(message->id.w[0]);
  1543  000C5E  EE20 F004          	lfsr	2,4
  1544  000C62  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1545  000C64  26D9               	addwf	fsr2l,f,c
  1546  000C66  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1547  000C68  22DA               	addwfc	fsr2h,f,c
  1548  000C6A  CFDE F02A          	movff	postinc2,IsInNeighbors@message_adress
  1549  000C6E  CFDD F02B          	movff	postdec2,IsInNeighbors@message_adress+1
  1550  000C72  EC46  F007         	call	_IsInNeighbors	;wreg free
  1551  000C76  C02A  F030         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1552  000C7A  C02B  F031         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1553                           
  1554                           ;FRAME.c: 81:         if(message->data[0]==0)
  1555  000C7E  EE20 F008          	lfsr	2,8
  1556  000C82  502C               	movf	FRAME_SensorExcitationStatus@message,w,c
  1557  000C84  26D9               	addwf	fsr2l,f,c
  1558  000C86  502D               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1559  000C88  22DA               	addwfc	fsr2h,f,c
  1560  000C8A  50DF               	movf	indf2,w,c
  1561  000C8C  A4D8               	btfss	status,2,c
  1562  000C8E  D00A               	goto	l4193
  1563                           
  1564                           ;FRAME.c: 82:         {;FRAME.c: 84:             statwect = statwect &( ~tru );
  1565  000C90  1C30               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1566  000C92  6E2E               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1567  000C94  1C31               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1568  000C96  6E2F               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1569  000C98  5009               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1570  000C9A  142E               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1571  000C9C  6E09               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1572  000C9E  500A               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1573  000CA0  142F               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1574  000CA2  D005               	goto	L1
  1575  000CA4                     l4193:
  1576                           
  1577                           ;FRAME.c: 87:         {;FRAME.c: 88:             statwect = statwect| tru;
  1578  000CA4  5030               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1579  000CA6  1009               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1580  000CA8  6E09               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1581  000CAA  5031               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1582  000CAC  100A               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1583  000CAE                     L1:
  1584  000CAE  6E0A               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1585                           
  1586                           ;FRAME.c: 91:         if(statwect>0)
  1587                           
  1588                           ;FRAME.c: 89:         }
  1589  000CB0  5009               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1590  000CB2  100A               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1591  000CB4  B4D8               	btfsc	status,2,c
  1592  000CB6  D004               	goto	l4197
  1593                           
  1594                           ;FRAME.c: 92:         {;FRAME.c: 93:         LOCK_Set(1);
  1595  000CB8  0E01               	movlw	1
  1596  000CBA  EC42  F00D         	call	_LOCK_Set
  1597                           
  1598                           ;FRAME.c: 94:         }
  1599  000CBE  0012               	return	
  1600  000CC0                     l4197:
  1601                           
  1602                           ;FRAME.c: 96:         {;FRAME.c: 97:         LOCK_Set(0);
  1603  000CC0  0E00               	movlw	0
  1604  000CC2  EC42  F00D         	call	_LOCK_Set
  1605  000CC6  0012               	return		;funcret
  1606  000CC8                     __end_of_FRAME_SensorExcitationStatus:
  1607                           	opt callstack 0
  1608                           
  1609 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1610 ;; Defined at:
  1611 ;;		line 33 in file "MOC_Funct.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2    5[COMRAM] unsigned int 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1629 ;;Total ram usage:        2 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    3
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_FRAME_SensorExcitationStatus
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text6
  1640  001A22                     __ptext6:
  1641                           	opt callstack 0
  1642  001A22                     _MOC_Wynikowa_wartosc_roznicowa:
  1643                           	opt callstack 24
  1644                           
  1645                           ;MOC_Funct.c: 35:     return 0x0220;
  1646                           
  1647                           ;incstack = 0
  1648  001A22  0E02               	movlw	2
  1649  001A24  6E2B               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1650  001A26  0E20               	movlw	32
  1651  001A28  6E2A               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1652  001A2A  0012               	return		;funcret
  1653  001A2C                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _MOC_NOTWORK *****************
  1657 ;; Defined at:
  1658 ;;		line 47 in file "MOC_Funct.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  2    5[COMRAM] unsigned int 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;Total ram usage:        2 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    3
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_FRAME_SensorExcitationStatus
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text7
  1687  001A7C                     __ptext7:
  1688                           	opt callstack 0
  1689  001A7C                     _MOC_NOTWORK:
  1690                           	opt callstack 24
  1691                           
  1692                           ;MOC_Funct.c: 49:     return 0xFF;
  1693                           
  1694                           ;incstack = 0
  1695  001A7C  0E00               	movlw	0
  1696  001A7E  6E2B               	movwf	?_MOC_NOTWORK+1,c
  1697  001A80  682A               	setf	?_MOC_NOTWORK,c
  1698  001A82  0012               	return		;funcret
  1699  001A84                     __end_of_MOC_NOTWORK:
  1700                           	opt callstack 0
  1701                           
  1702 ;; *************** function _MOC_Frame_Counter *****************
  1703 ;; Defined at:
  1704 ;;		line 38 in file "MOC_Funct.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  2    5[COMRAM] unsigned int 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1722 ;;Total ram usage:        2 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    3
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_FRAME_SensorExcitationStatus
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text8
  1733  0019F8                     __ptext8:
  1734                           	opt callstack 0
  1735  0019F8                     _MOC_Frame_Counter:
  1736                           	opt callstack 24
  1737                           
  1738                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1739                           
  1740                           ;incstack = 0
  1741  0019F8  503F               	movf	MOC_Frame_Counter@zeta,w,c
  1742  0019FA  6E2A               	movwf	?_MOC_Frame_Counter,c
  1743  0019FC  5040               	movf	MOC_Frame_Counter@zeta+1,w,c
  1744  0019FE  6E2B               	movwf	?_MOC_Frame_Counter+1,c
  1745  001A00  4A3F               	infsnz	MOC_Frame_Counter@zeta,f,c
  1746  001A02  2A40               	incf	MOC_Frame_Counter@zeta+1,f,c
  1747  001A04  0012               	return		;funcret
  1748  001A06                     __end_of_MOC_Frame_Counter:
  1749                           	opt callstack 0
  1750                           
  1751 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1752 ;; Defined at:
  1753 ;;		line 43 in file "MOC_Funct.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    5[COMRAM] unsigned int 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;Total ram usage:        2 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    3
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_FRAME_SensorExcitationStatus
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text9
  1782  001A2C                     __ptext9:
  1783                           	opt callstack 0
  1784  001A2C                     _MOC_Aktualna_Temperatura:
  1785                           	opt callstack 24
  1786                           
  1787                           ;MOC_Funct.c: 45:     return 0x1B;
  1788                           
  1789                           ;incstack = 0
  1790  001A2C  0E00               	movlw	0
  1791  001A2E  6E2B               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1792  001A30  0E1B               	movlw	27
  1793  001A32  6E2A               	movwf	?_MOC_Aktualna_Temperatura,c
  1794  001A34  0012               	return		;funcret
  1795  001A36                     __end_of_MOC_Aktualna_Temperatura:
  1796                           	opt callstack 0
  1797                           
  1798 ;; *************** function _LOCK_Set *****************
  1799 ;; Defined at:
  1800 ;;		line 52 in file "LED.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  k               1    wreg     unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  k               1    5[COMRAM] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1818 ;;Total ram usage:        1 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    3
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_FRAME_SensorExcitationStatus
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text10
  1829  001A84                     __ptext10:
  1830                           	opt callstack 0
  1831  001A84                     _LOCK_Set:
  1832                           	opt callstack 24
  1833                           
  1834                           ;incstack = 0
  1835                           ;LOCK_Set@k stored from wreg
  1836  001A84  6E2A               	movwf	LOCK_Set@k,c
  1837                           
  1838                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1839  001A86  C02A  F014         	movff	LOCK_Set@k,_LOCK
  1840  001A8A  0012               	return		;funcret
  1841  001A8C                     __end_of_LOCK_Set:
  1842                           	opt callstack 0
  1843                           
  1844 ;; *************** function _LOCK_Get *****************
  1845 ;; Defined at:
  1846 ;;		line 57 in file "LED.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      unsigned char 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    3
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_FRAME_SensorExcitationStatus
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text11
  1875  001A92                     __ptext11:
  1876                           	opt callstack 0
  1877  001A92                     _LOCK_Get:
  1878                           	opt callstack 24
  1879                           
  1880                           ;LED.c: 59:     return LOCK;
  1881                           
  1882                           ;incstack = 0
  1883  001A92  5014               	movf	_LOCK,w,c
  1884  001A94  0012               	return		;funcret
  1885  001A96                     __end_of_LOCK_Get:
  1886                           	opt callstack 0
  1887                           
  1888 ;; *************** function _IsInNeighbors *****************
  1889 ;; Defined at:
  1890 ;;		line 102 in file "FRAME.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  message_adre    2    5[COMRAM] unsigned int 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  i               2    0        unsigned short 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2    5[COMRAM] unsigned int 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    3
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_FRAME_SensorExcitationStatus
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text12
  1919  000E8C                     __ptext12:
  1920                           	opt callstack 0
  1921  000E8C                     _IsInNeighbors:
  1922                           	opt callstack 24
  1923                           
  1924                           ;FRAME.c: 102: UINT IsInNeighbors(UINT message_adress);FRAME.c: 103: {;FRAME.c: 104:    
      +                           WORD i;;FRAME.c: 106:     if(NeightAdress1==message_adress)
  1925                           
  1926                           ;incstack = 0
  1927  000E8C  502A               	movf	IsInNeighbors@message_adress,w,c
  1928  000E8E  184A               	xorwf	_NeightAdress1,w,c	;volatile
  1929  000E90  E109               	bnz	l3999
  1930  000E92  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1931  000E94  184B               	xorwf	_NeightAdress1+1,w,c	;volatile
  1932  000E96  A4D8               	btfss	status,2,c
  1933  000E98  D005               	goto	l3999
  1934                           
  1935                           ;FRAME.c: 107:     {;FRAME.c: 108:         return 0b1;
  1936  000E9A  0E00               	movlw	0
  1937  000E9C  6E2B               	movwf	?_IsInNeighbors+1,c
  1938  000E9E  0E01               	movlw	1
  1939  000EA0  6E2A               	movwf	?_IsInNeighbors,c
  1940  000EA2  0012               	return	
  1941  000EA4                     l3999:
  1942                           
  1943                           ;FRAME.c: 110:     if(NeightAdress2==message_adress)
  1944  000EA4  502A               	movf	IsInNeighbors@message_adress,w,c
  1945  000EA6  1848               	xorwf	_NeightAdress2,w,c	;volatile
  1946  000EA8  E109               	bnz	l4005
  1947  000EAA  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1948  000EAC  1849               	xorwf	_NeightAdress2+1,w,c	;volatile
  1949  000EAE  A4D8               	btfss	status,2,c
  1950  000EB0  D005               	goto	l4005
  1951                           
  1952                           ;FRAME.c: 111:     {;FRAME.c: 112:         return 0b10;
  1953  000EB2  0E00               	movlw	0
  1954  000EB4  6E2B               	movwf	?_IsInNeighbors+1,c
  1955  000EB6  0E02               	movlw	2
  1956  000EB8  6E2A               	movwf	?_IsInNeighbors,c
  1957  000EBA  0012               	return	
  1958  000EBC                     l4005:
  1959                           
  1960                           ;FRAME.c: 114:     if(NeightAdress3==message_adress)
  1961  000EBC  502A               	movf	IsInNeighbors@message_adress,w,c
  1962  000EBE  1823               	xorwf	_NeightAdress3,w,c	;volatile
  1963  000EC0  E109               	bnz	l4011
  1964  000EC2  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1965  000EC4  1824               	xorwf	_NeightAdress3+1,w,c	;volatile
  1966  000EC6  A4D8               	btfss	status,2,c
  1967  000EC8  D005               	goto	l4011
  1968                           
  1969                           ;FRAME.c: 115:     {;FRAME.c: 116:         return 0b100;
  1970  000ECA  0E00               	movlw	0
  1971  000ECC  6E2B               	movwf	?_IsInNeighbors+1,c
  1972  000ECE  0E04               	movlw	4
  1973  000ED0  6E2A               	movwf	?_IsInNeighbors,c
  1974  000ED2  0012               	return	
  1975  000ED4                     l4011:
  1976                           
  1977                           ;FRAME.c: 118:     if(NeightAdress4==message_adress)
  1978  000ED4  502A               	movf	IsInNeighbors@message_adress,w,c
  1979  000ED6  1821               	xorwf	_NeightAdress4,w,c	;volatile
  1980  000ED8  E109               	bnz	l4017
  1981  000EDA  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1982  000EDC  1822               	xorwf	_NeightAdress4+1,w,c	;volatile
  1983  000EDE  A4D8               	btfss	status,2,c
  1984  000EE0  D005               	goto	l4017
  1985                           
  1986                           ;FRAME.c: 119:     {;FRAME.c: 120:         return 0b1000;
  1987  000EE2  0E00               	movlw	0
  1988  000EE4  6E2B               	movwf	?_IsInNeighbors+1,c
  1989  000EE6  0E08               	movlw	8
  1990  000EE8  6E2A               	movwf	?_IsInNeighbors,c
  1991  000EEA  0012               	return	
  1992  000EEC                     l4017:
  1993                           
  1994                           ;FRAME.c: 122:     if(NeightAdress5==message_adress)
  1995  000EEC  502A               	movf	IsInNeighbors@message_adress,w,c
  1996  000EEE  181F               	xorwf	_NeightAdress5,w,c	;volatile
  1997  000EF0  E109               	bnz	l4023
  1998  000EF2  502B               	movf	IsInNeighbors@message_adress+1,w,c
  1999  000EF4  1820               	xorwf	_NeightAdress5+1,w,c	;volatile
  2000  000EF6  A4D8               	btfss	status,2,c
  2001  000EF8  D005               	goto	l4023
  2002                           
  2003                           ;FRAME.c: 123:     {;FRAME.c: 124:         return 0b10000;
  2004  000EFA  0E00               	movlw	0
  2005  000EFC  6E2B               	movwf	?_IsInNeighbors+1,c
  2006  000EFE  0E10               	movlw	16
  2007  000F00  6E2A               	movwf	?_IsInNeighbors,c
  2008  000F02  0012               	return	
  2009  000F04                     l4023:
  2010                           
  2011                           ;FRAME.c: 126:     if(NeightAdress6==message_adress)
  2012  000F04  502A               	movf	IsInNeighbors@message_adress,w,c
  2013  000F06  181D               	xorwf	_NeightAdress6,w,c	;volatile
  2014  000F08  E109               	bnz	l4029
  2015  000F0A  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2016  000F0C  181E               	xorwf	_NeightAdress6+1,w,c	;volatile
  2017  000F0E  A4D8               	btfss	status,2,c
  2018  000F10  D005               	goto	l4029
  2019                           
  2020                           ;FRAME.c: 127:     {;FRAME.c: 128:         return 0b100000;
  2021  000F12  0E00               	movlw	0
  2022  000F14  6E2B               	movwf	?_IsInNeighbors+1,c
  2023  000F16  0E20               	movlw	32
  2024  000F18  6E2A               	movwf	?_IsInNeighbors,c
  2025  000F1A  0012               	return	
  2026  000F1C                     l4029:
  2027                           
  2028                           ;FRAME.c: 130:     if(NeightAdress7==message_adress)
  2029  000F1C  502A               	movf	IsInNeighbors@message_adress,w,c
  2030  000F1E  181B               	xorwf	_NeightAdress7,w,c	;volatile
  2031  000F20  E109               	bnz	l4035
  2032  000F22  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2033  000F24  181C               	xorwf	_NeightAdress7+1,w,c	;volatile
  2034  000F26  A4D8               	btfss	status,2,c
  2035  000F28  D005               	goto	l4035
  2036                           
  2037                           ;FRAME.c: 131:     {;FRAME.c: 132:         return 0b1000000;
  2038  000F2A  0E00               	movlw	0
  2039  000F2C  6E2B               	movwf	?_IsInNeighbors+1,c
  2040  000F2E  0E40               	movlw	64
  2041  000F30  6E2A               	movwf	?_IsInNeighbors,c
  2042  000F32  0012               	return	
  2043  000F34                     l4035:
  2044                           
  2045                           ;FRAME.c: 134:     if(NeightAdress8==message_adress)
  2046  000F34  502A               	movf	IsInNeighbors@message_adress,w,c
  2047  000F36  1819               	xorwf	_NeightAdress8,w,c	;volatile
  2048  000F38  E109               	bnz	l4041
  2049  000F3A  502B               	movf	IsInNeighbors@message_adress+1,w,c
  2050  000F3C  181A               	xorwf	_NeightAdress8+1,w,c	;volatile
  2051  000F3E  A4D8               	btfss	status,2,c
  2052  000F40  D005               	goto	l4041
  2053                           
  2054                           ;FRAME.c: 135:     {;FRAME.c: 136:         return 0b10000000;
  2055  000F42  0E00               	movlw	0
  2056  000F44  6E2B               	movwf	?_IsInNeighbors+1,c
  2057  000F46  0E80               	movlw	128
  2058  000F48  6E2A               	movwf	?_IsInNeighbors,c
  2059  000F4A  0012               	return	
  2060  000F4C                     l4041:
  2061                           
  2062                           ;FRAME.c: 152:     return 0;
  2063  000F4C  0E00               	movlw	0
  2064  000F4E  6E2B               	movwf	?_IsInNeighbors+1,c
  2065  000F50  0E00               	movlw	0
  2066  000F52  6E2A               	movwf	?_IsInNeighbors,c
  2067  000F54  0012               	return		;funcret
  2068  000F56                     __end_of_IsInNeighbors:
  2069                           	opt callstack 0
  2070                           
  2071 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2072 ;; Defined at:
  2073 ;;		line 533 in file "FRAME.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  message         2    5[COMRAM] PTR struct .
  2076 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;Total ram usage:        6 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    3
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_FRAME_HandleCanFrame
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text13
  2103  001006                     __ptext13:
  2104                           	opt callstack 0
  2105  001006                     _FRAME_PrzypisanieDokarty:
  2106                           	opt callstack 25
  2107                           
  2108                           ;FRAME.c: 533: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 534: {;FRAME.
      +                          c: 535:     if(message->message_type == 0x02)
  2109                           
  2110                           ;incstack = 0
  2111  001006  EE20 F001          	lfsr	2,1
  2112  00100A  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2113  00100C  26D9               	addwf	fsr2l,f,c
  2114  00100E  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2115  001010  22DA               	addwfc	fsr2h,f,c
  2116  001012  0E02               	movlw	2
  2117  001014  18DE               	xorwf	postinc2,w,c
  2118  001016  A4D8               	btfss	status,2,c
  2119  001018  D021               	goto	l4281
  2120                           
  2121                           ;FRAME.c: 536:     {;FRAME.c: 537:         message->data_length = 3;
  2122  00101A  EE20 F010          	lfsr	2,16
  2123  00101E  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2124  001020  26D9               	addwf	fsr2l,f,c
  2125  001022  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2126  001024  22DA               	addwfc	fsr2h,f,c
  2127  001026  0E03               	movlw	3
  2128  001028  6EDF               	movwf	indf2,c
  2129                           
  2130                           ;FRAME.c: 538:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2131  00102A  EE20 F008          	lfsr	2,8
  2132  00102E  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2133  001030  26D9               	addwf	fsr2l,f,c
  2134  001032  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2135  001034  22DA               	addwfc	fsr2h,f,c
  2136  001036  0E00               	movlw	0
  2137  001038  6EDF               	movwf	indf2,c
  2138                           
  2139                           ;FRAME.c: 539:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2140  00103A  EE20 F009          	lfsr	2,9
  2141  00103E  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2142  001040  26D9               	addwf	fsr2l,f,c
  2143  001042  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2144  001044  22DA               	addwfc	fsr2h,f,c
  2145  001046  C040 FFDF          	movff	64,indf2
  2146                           
  2147                           ;FRAME.c: 540:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2148  00104A  EE20 F00A          	lfsr	2,10
  2149  00104E  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2150  001050  26D9               	addwf	fsr2l,f,c
  2151  001052  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2152  001054  22DA               	addwfc	fsr2h,f,c
  2153  001056  C042 FFDF          	movff	66,indf2
  2154                           
  2155                           ;FRAME.c: 542:     }
  2156  00105A  0012               	return	
  2157  00105C                     l4281:
  2158                           
  2159                           ;FRAME.c: 544:     {;FRAME.c: 545:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2160  00105C  EE20 F008          	lfsr	2,8
  2161  001060  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2162  001062  26D9               	addwf	fsr2l,f,c
  2163  001064  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2164  001066  22DA               	addwfc	fsr2h,f,c
  2165  001068  50DF               	movf	indf2,w,c
  2166  00106A  6E2C               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2167  00106C  502C               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2168  00106E  6E2E               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2169  001070  6A2D               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2170  001072  EE20 F009          	lfsr	2,9
  2171  001076  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2172  001078  26D9               	addwf	fsr2l,f,c
  2173  00107A  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2174  00107C  22DA               	addwfc	fsr2h,f,c
  2175  00107E  50DF               	movf	indf2,w,c
  2176  001080  6E2F               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2177  001082  502F               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2178  001084  102D               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2179  001086  6E40               	movwf	64,c
  2180  001088  502E               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2181  00108A  6E41               	movwf	65,c
  2182                           
  2183                           ;FRAME.c: 546:          Dane->Nr_WeWy = (message->data[2]);
  2184  00108C  EE20 F00A          	lfsr	2,10
  2185  001090  502A               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2186  001092  26D9               	addwf	fsr2l,f,c
  2187  001094  502B               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2188  001096  22DA               	addwfc	fsr2h,f,c
  2189  001098  50DF               	movf	indf2,w,c
  2190  00109A  6E2C               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2191  00109C  502C               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2192  00109E  6E42               	movwf	66,c
  2193  0010A0  6A43               	clrf	67,c
  2194  0010A2  0012               	return		;funcret
  2195  0010A4                     __end_of_FRAME_PrzypisanieDokarty:
  2196                           	opt callstack 0
  2197                           
  2198 ;; *************** function _FRAME_Plot *****************
  2199 ;; Defined at:
  2200 ;;		line 438 in file "FRAME.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  message         2   12[COMRAM] PTR struct .
  2203 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2218 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;Total ram usage:        3 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    4
  2222 ;; This function calls:
  2223 ;;		___lwdiv
  2224 ;; This function is called by:
  2225 ;;		_FRAME_HandleCanFrame
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text14
  2230  001512                     __ptext14:
  2231                           	opt callstack 0
  2232  001512                     _FRAME_Plot:
  2233                           	opt callstack 24
  2234                           
  2235                           ;FRAME.c: 438: static void FRAME_Plot(mID *message);FRAME.c: 439: {;FRAME.c: 441:     if
      +                          (message->message_type == 0x02)
  2236                           
  2237                           ;incstack = 0
  2238  001512  EE20 F001          	lfsr	2,1
  2239  001516  5031               	movf	FRAME_Plot@message,w,c
  2240  001518  26D9               	addwf	fsr2l,f,c
  2241  00151A  5032               	movf	FRAME_Plot@message+1,w,c
  2242  00151C  22DA               	addwfc	fsr2h,f,c
  2243  00151E  0E02               	movlw	2
  2244  001520  18DE               	xorwf	postinc2,w,c
  2245  001522  A4D8               	btfss	status,2,c
  2246  001524  D013               	goto	l4271
  2247                           
  2248                           ;FRAME.c: 442:     {;FRAME.c: 443:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2249  001526  EE20 F008          	lfsr	2,8
  2250  00152A  5031               	movf	FRAME_Plot@message,w,c
  2251  00152C  26D9               	addwf	fsr2l,f,c
  2252  00152E  5032               	movf	FRAME_Plot@message+1,w,c
  2253  001530  22DA               	addwfc	fsr2h,f,c
  2254  001532  C00C F02A          	movff	12,___lwdiv@dividend
  2255  001536  C00D F02B          	movff	13,___lwdiv@dividend+1
  2256  00153A  0E00               	movlw	0
  2257  00153C  6E2D               	movwf	___lwdiv@divisor+1,c
  2258  00153E  0E0A               	movlw	10
  2259  001540  6E2C               	movwf	___lwdiv@divisor,c
  2260  001542  ECB5  F00A         	call	___lwdiv	;wreg free
  2261  001546  502A               	movf	?___lwdiv,w,c
  2262  001548  6EDF               	movwf	indf2,c
  2263                           
  2264                           ;FRAME.c: 444:     }
  2265  00154A  0012               	return	
  2266  00154C                     l4271:
  2267                           
  2268                           ;FRAME.c: 446:     {;FRAME.c: 447:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2269  00154C  EE20 F008          	lfsr	2,8
  2270  001550  5031               	movf	FRAME_Plot@message,w,c
  2271  001552  26D9               	addwf	fsr2l,f,c
  2272  001554  5032               	movf	FRAME_Plot@message+1,w,c
  2273  001556  22DA               	addwfc	fsr2h,f,c
  2274  001558  50DF               	movf	indf2,w,c
  2275  00155A  6E33               	movwf	??_FRAME_Plot& (0+255),c
  2276  00155C  5033               	movf	??_FRAME_Plot,w,c
  2277  00155E  0D0A               	mullw	10
  2278  001560  CFF3 F00C          	movff	prodl,12
  2279  001564  CFF4 F00D          	movff	prodh,13
  2280  001568  0012               	return		;funcret
  2281  00156A                     __end_of_FRAME_Plot:
  2282                           	opt callstack 0
  2283                           
  2284 ;; *************** function _FRAME_MapPosition *****************
  2285 ;; Defined at:
  2286 ;;		line 459 in file "FRAME.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  message         2    5[COMRAM] PTR struct .
  2289 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		None
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;Total ram usage:        2 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    3
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_FRAME_HandleCanFrame
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text15
  2316  001A96                     __ptext15:
  2317                           	opt callstack 0
  2318  001A96                     _FRAME_MapPosition:
  2319                           	opt callstack 25
  2320                           
  2321                           ;incstack = 0
  2322  001A96  0012               	return		;funcret
  2323  001A98                     __end_of_FRAME_MapPosition:
  2324                           	opt callstack 0
  2325                           
  2326 ;; *************** function _FRAME_ExcitationValue *****************
  2327 ;; Defined at:
  2328 ;;		line 186 in file "FRAME.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  message         2    5[COMRAM] PTR struct .
  2331 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;Total ram usage:        3 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    3
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_FRAME_HandleCanFrame
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text16
  2358  00171E                     __ptext16:
  2359                           	opt callstack 0
  2360  00171E                     _FRAME_ExcitationValue:
  2361                           	opt callstack 25
  2362                           
  2363                           ;FRAME.c: 186: static void FRAME_ExcitationValue(mID *message);FRAME.c: 187: {;FRAME.c: 
      +                          188:     if(message->message_type == 0x02)
  2364                           
  2365                           ;incstack = 0
  2366  00171E  EE20 F001          	lfsr	2,1
  2367  001722  502A               	movf	FRAME_ExcitationValue@message,w,c
  2368  001724  26D9               	addwf	fsr2l,f,c
  2369  001726  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2370  001728  22DA               	addwfc	fsr2h,f,c
  2371  00172A  0E02               	movlw	2
  2372  00172C  18DE               	xorwf	postinc2,w,c
  2373  00172E  A4D8               	btfss	status,2,c
  2374  001730  0012               	return	
  2375                           
  2376                           ;FRAME.c: 189:     {;FRAME.c: 190:         message->data_length = 1;
  2377  001732  EE20 F010          	lfsr	2,16
  2378  001736  502A               	movf	FRAME_ExcitationValue@message,w,c
  2379  001738  26D9               	addwf	fsr2l,f,c
  2380  00173A  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2381  00173C  22DA               	addwfc	fsr2h,f,c
  2382  00173E  0E01               	movlw	1
  2383  001740  6EDF               	movwf	indf2,c
  2384                           
  2385                           ;FRAME.c: 195:         message->data[0] = 0xFF;
  2386  001742  EE20 F008          	lfsr	2,8
  2387  001746  502A               	movf	FRAME_ExcitationValue@message,w,c
  2388  001748  26D9               	addwf	fsr2l,f,c
  2389  00174A  502B               	movf	FRAME_ExcitationValue@message+1,w,c
  2390  00174C  22DA               	addwfc	fsr2h,f,c
  2391  00174E  0EFF               	movlw	255
  2392  001750  6EDF               	movwf	indf2,c
  2393                           
  2394                           ;FRAME.c: 196:     }
  2395  001752  0012               	return		;funcret
  2396  001754                     __end_of_FRAME_ExcitationValue:
  2397                           	opt callstack 0
  2398                           
  2399 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2400 ;; Defined at:
  2401 ;;		line 210 in file "FRAME.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  message         2    5[COMRAM] PTR struct .
  2404 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  i               2    8[COMRAM] unsigned short 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;Total ram usage:        5 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    3
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_FRAME_HandleCanFrame
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text17
  2431  0015BC                     __ptext17:
  2432                           	opt callstack 0
  2433  0015BC                     _FRAME_ExcitationMultiplier:
  2434                           	opt callstack 25
  2435                           
  2436                           ;FRAME.c: 210: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 211: {;FRAM
      +                          E.c: 212:     WORD i;;FRAME.c: 214:     if(message->message_type == 0x02)
  2437                           
  2438                           ;incstack = 0
  2439  0015BC  EE20 F001          	lfsr	2,1
  2440  0015C0  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2441  0015C2  26D9               	addwf	fsr2l,f,c
  2442  0015C4  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2443  0015C6  22DA               	addwfc	fsr2h,f,c
  2444  0015C8  0E02               	movlw	2
  2445  0015CA  18DE               	xorwf	postinc2,w,c
  2446  0015CC  A4D8               	btfss	status,2,c
  2447  0015CE  0012               	return	
  2448                           
  2449                           ;FRAME.c: 215:     {;FRAME.c: 216:         message->data_length = 1;
  2450  0015D0  EE20 F010          	lfsr	2,16
  2451  0015D4  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2452  0015D6  26D9               	addwf	fsr2l,f,c
  2453  0015D8  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2454  0015DA  22DA               	addwfc	fsr2h,f,c
  2455  0015DC  0E01               	movlw	1
  2456  0015DE  6EDF               	movwf	indf2,c
  2457                           
  2458                           ;FRAME.c: 217:         for(i=0; i<3; i++)
  2459  0015E0  0E00               	movlw	0
  2460  0015E2  6E2E               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2461  0015E4  0E00               	movlw	0
  2462  0015E6  6E2D               	movwf	FRAME_ExcitationMultiplier@i,c
  2463  0015E8                     l4225:
  2464                           
  2465                           ;FRAME.c: 218:         {;FRAME.c: 221:         }
  2466  0015E8  4A2D               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2467  0015EA  2A2E               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2468  0015EC  502E               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2469  0015EE  E104               	bnz	u2450
  2470  0015F0  0E03               	movlw	3
  2471  0015F2  5C2D               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2472  0015F4  A0D8               	btfss	status,0,c
  2473  0015F6  D7F8               	goto	l4225
  2474  0015F8                     u2450:
  2475                           
  2476                           ;FRAME.c: 222:         message->data[0] = 0xFF;
  2477  0015F8  EE20 F008          	lfsr	2,8
  2478  0015FC  502A               	movf	FRAME_ExcitationMultiplier@message,w,c
  2479  0015FE  26D9               	addwf	fsr2l,f,c
  2480  001600  502B               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2481  001602  22DA               	addwfc	fsr2h,f,c
  2482  001604  0EFF               	movlw	255
  2483  001606  6EDF               	movwf	indf2,c
  2484                           
  2485                           ;FRAME.c: 223:     }
  2486  001608  0012               	return		;funcret
  2487  00160A                     __end_of_FRAME_ExcitationMultiplier:
  2488                           	opt callstack 0
  2489                           
  2490 ;; *************** function _FRAME_DeviceReset *****************
  2491 ;; Defined at:
  2492 ;;		line 344 in file "FRAME.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  message         2   14[COMRAM] PTR struct .
  2495 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2511 ;;Total ram usage:        3 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    6
  2514 ;; This function calls:
  2515 ;;		_FRAME_DataUpdateAndChangeOption
  2516 ;;		_WriteDataToEEPROM
  2517 ;; This function is called by:
  2518 ;;		_FRAME_HandleCanFrame
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text18
  2523  000A74                     __ptext18:
  2524                           	opt callstack 0
  2525  000A74                     _FRAME_DeviceReset:
  2526                           	opt callstack 22
  2527                           
  2528                           ;FRAME.c: 344: static void FRAME_DeviceReset(mID *message);FRAME.c: 345: {;FRAME.c: 346:
      +                               if(message->message_type == 0x02)
  2529                           
  2530                           ;incstack = 0
  2531  000A74  EE20 F001          	lfsr	2,1
  2532  000A78  5033               	movf	FRAME_DeviceReset@message,w,c
  2533  000A7A  26D9               	addwf	fsr2l,f,c
  2534  000A7C  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2535  000A7E  22DA               	addwfc	fsr2h,f,c
  2536  000A80  0E02               	movlw	2
  2537  000A82  18DE               	xorwf	postinc2,w,c
  2538  000A84  A4D8               	btfss	status,2,c
  2539  000A86  D057               	goto	l4247
  2540                           
  2541                           ;FRAME.c: 347:     {;FRAME.c: 348:         message->data_length = 1;
  2542  000A88  EE20 F010          	lfsr	2,16
  2543  000A8C  5033               	movf	FRAME_DeviceReset@message,w,c
  2544  000A8E  26D9               	addwf	fsr2l,f,c
  2545  000A90  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2546  000A92  22DA               	addwfc	fsr2h,f,c
  2547  000A94  0E01               	movlw	1
  2548  000A96  6EDF               	movwf	indf2,c
  2549                           
  2550                           ;FRAME.c: 350:         message->data[0] = (RCON>>6) & 0x01;
  2551  000A98  EE20 F008          	lfsr	2,8
  2552  000A9C  5033               	movf	FRAME_DeviceReset@message,w,c
  2553  000A9E  26D9               	addwf	fsr2l,f,c
  2554  000AA0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2555  000AA2  22DA               	addwfc	fsr2h,f,c
  2556  000AA4  44D0               	rlncf	4048,w,c	;volatile
  2557  000AA6  46E8               	rlncf	wreg,f,c
  2558  000AA8  0B03               	andlw	3
  2559  000AAA  0B01               	andlw	1
  2560  000AAC  6EDF               	movwf	indf2,c
  2561                           
  2562                           ;FRAME.c: 351:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2563  000AAE  EE20 F009          	lfsr	2,9
  2564  000AB2  5033               	movf	FRAME_DeviceReset@message,w,c
  2565  000AB4  26D9               	addwf	fsr2l,f,c
  2566  000AB6  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2567  000AB8  22DA               	addwfc	fsr2h,f,c
  2568  000ABA  0100               	movlb	0	; () banked
  2569  000ABC  A9C6               	btfss	_Flagi& (0+255),4,b
  2570  000ABE  D002               	goto	u2490
  2571  000AC0  0E01               	movlw	1
  2572  000AC2  D001               	goto	u2496
  2573  000AC4                     u2490:
  2574  000AC4  0E00               	movlw	0
  2575  000AC6                     u2496:
  2576  000AC6  6EDF               	movwf	indf2,c
  2577                           
  2578                           ;FRAME.c: 352:         message->data[2] = Flagi.pomiarTla;
  2579  000AC8  EE20 F00A          	lfsr	2,10
  2580  000ACC  5033               	movf	FRAME_DeviceReset@message,w,c
  2581  000ACE  26D9               	addwf	fsr2l,f,c
  2582  000AD0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2583  000AD2  22DA               	addwfc	fsr2h,f,c
  2584  000AD4  A1C6               	btfss	_Flagi& (0+255),0,b
  2585  000AD6  D002               	goto	u2500
  2586  000AD8  0E01               	movlw	1
  2587  000ADA  D001               	goto	u2506
  2588  000ADC                     u2500:
  2589  000ADC  0E00               	movlw	0
  2590  000ADE                     u2506:
  2591  000ADE  6EDF               	movwf	indf2,c
  2592                           
  2593                           ;FRAME.c: 353:         message->data[3] = 0;
  2594  000AE0  EE20 F00B          	lfsr	2,11
  2595  000AE4  5033               	movf	FRAME_DeviceReset@message,w,c
  2596  000AE6  26D9               	addwf	fsr2l,f,c
  2597  000AE8  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2598  000AEA  22DA               	addwfc	fsr2h,f,c
  2599  000AEC  0E00               	movlw	0
  2600  000AEE  6EDF               	movwf	indf2,c
  2601                           
  2602                           ;FRAME.c: 354:         message->data[4] = Dane->rokU16;
  2603  000AF0  EE20 F00C          	lfsr	2,12
  2604  000AF4  5033               	movf	FRAME_DeviceReset@message,w,c
  2605  000AF6  26D9               	addwf	fsr2l,f,c
  2606  000AF8  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2607  000AFA  22DA               	addwfc	fsr2h,f,c
  2608  000AFC  C036 FFDF          	movff	54,indf2
  2609                           
  2610                           ;FRAME.c: 355:         message->data[5] = Dane->miesiacU16;
  2611  000B00  EE20 F00D          	lfsr	2,13
  2612  000B04  5033               	movf	FRAME_DeviceReset@message,w,c
  2613  000B06  26D9               	addwf	fsr2l,f,c
  2614  000B08  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2615  000B0A  22DA               	addwfc	fsr2h,f,c
  2616  000B0C  C038 FFDF          	movff	56,indf2
  2617                           
  2618                           ;FRAME.c: 356:         message->data[6] = Dane->dzienU16;
  2619  000B10  EE20 F00E          	lfsr	2,14
  2620  000B14  5033               	movf	FRAME_DeviceReset@message,w,c
  2621  000B16  26D9               	addwf	fsr2l,f,c
  2622  000B18  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2623  000B1A  22DA               	addwfc	fsr2h,f,c
  2624  000B1C  C03A FFDF          	movff	58,indf2
  2625                           
  2626                           ;FRAME.c: 357:         message->data[7] = Dane->godzinaU16;
  2627  000B20  EE20 F00F          	lfsr	2,15
  2628  000B24  5033               	movf	FRAME_DeviceReset@message,w,c
  2629  000B26  26D9               	addwf	fsr2l,f,c
  2630  000B28  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2631  000B2A  22DA               	addwfc	fsr2h,f,c
  2632  000B2C  C03C FFDF          	movff	60,indf2
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;FRAME.c: 358:         RCON &= ~(1<<6);
  2636  000B30  9CD0               	bcf	4048,6,c	;volatile
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;FRAME.c: 359:         Flagi.wykonanoZapisDoFlash = 0;
  2640  000B32  99C6               	bcf	_Flagi& (0+255),4,b
  2641                           
  2642                           ;FRAME.c: 373:     }
  2643  000B34  0012               	return	
  2644  000B36                     l4247:
  2645                           
  2646                           ;FRAME.c: 375:     {;FRAME.c: 376:         message->data_length = 1;
  2647  000B36  EE20 F010          	lfsr	2,16
  2648  000B3A  5033               	movf	FRAME_DeviceReset@message,w,c
  2649  000B3C  26D9               	addwf	fsr2l,f,c
  2650  000B3E  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2651  000B40  22DA               	addwfc	fsr2h,f,c
  2652  000B42  0E01               	movlw	1
  2653  000B44  6EDF               	movwf	indf2,c
  2654                           
  2655                           ;FRAME.c: 378:         if(message->data[2])
  2656  000B46  EE20 F00A          	lfsr	2,10
  2657  000B4A  5033               	movf	FRAME_DeviceReset@message,w,c
  2658  000B4C  26D9               	addwf	fsr2l,f,c
  2659  000B4E  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2660  000B50  22DA               	addwfc	fsr2h,f,c
  2661  000B52  50DF               	movf	indf2,w,c
  2662  000B54  B4D8               	btfsc	status,2,c
  2663  000B56  D00F               	goto	l4257
  2664                           
  2665                           ;FRAME.c: 379:         {;FRAME.c: 380:             Flagi.pomiarTla = 1;
  2666  000B58  0100               	movlb	0	; () banked
  2667  000B5A  81C6               	bsf	_Flagi& (0+255),0,b
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;FRAME.c: 381:             if(message->data[1])
  2671  000B5C  EE20 F009          	lfsr	2,9
  2672  000B60  5033               	movf	FRAME_DeviceReset@message,w,c
  2673  000B62  26D9               	addwf	fsr2l,f,c
  2674  000B64  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2675  000B66  22DA               	addwfc	fsr2h,f,c
  2676  000B68  50DF               	movf	indf2,w,c
  2677  000B6A  B4D8               	btfsc	status,2,c
  2678  000B6C  D01E               	goto	l4265
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;FRAME.c: 382:             {;FRAME.c: 383:                 Flagi.zapisDoFlash = 1;
  2682  000B6E  87C6               	bsf	_Flagi& (0+255),3,b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;FRAME.c: 384:                 WriteDataToEEPROM();
  2686  000B70  EC64  F006         	call	_WriteDataToEEPROM	;wreg free
  2687  000B74  D01A               	goto	l4265
  2688  000B76                     l4257:
  2689                           
  2690                           ;FRAME.c: 388:         {;FRAME.c: 389:             if(message->data[1])
  2691  000B76  EE20 F009          	lfsr	2,9
  2692  000B7A  5033               	movf	FRAME_DeviceReset@message,w,c
  2693  000B7C  26D9               	addwf	fsr2l,f,c
  2694  000B7E  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2695  000B80  22DA               	addwfc	fsr2h,f,c
  2696  000B82  50DF               	movf	indf2,w,c
  2697  000B84  B4D8               	btfsc	status,2,c
  2698  000B86  D008               	goto	l4261
  2699                           
  2700                           ;FRAME.c: 390:             {;FRAME.c: 391:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2701  000B88  C033  F02A         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2702  000B8C  C034  F02B         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2703  000B90  EC5C  F00A         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2704                           
  2705                           ;FRAME.c: 392:                 WriteDataToEEPROM();
  2706  000B94  EC64  F006         	call	_WriteDataToEEPROM	;wreg free
  2707  000B98                     l4261:
  2708                           
  2709                           ;FRAME.c: 395:             if(message->data[0])
  2710  000B98  EE20 F008          	lfsr	2,8
  2711  000B9C  5033               	movf	FRAME_DeviceReset@message,w,c
  2712  000B9E  26D9               	addwf	fsr2l,f,c
  2713  000BA0  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2714  000BA2  22DA               	addwfc	fsr2h,f,c
  2715  000BA4  50DF               	movf	indf2,w,c
  2716  000BA6  A4D8               	btfss	status,2,c
  2717  000BA8  00FF               	reset		;# 
  2718  000BAA                     l4265:
  2719                           
  2720                           ;FRAME.c: 400:         message->data[0] = 0xFF;
  2721  000BAA  EE20 F008          	lfsr	2,8
  2722  000BAE  5033               	movf	FRAME_DeviceReset@message,w,c
  2723  000BB0  26D9               	addwf	fsr2l,f,c
  2724  000BB2  5034               	movf	FRAME_DeviceReset@message+1,w,c
  2725  000BB4  22DA               	addwfc	fsr2h,f,c
  2726  000BB6  0EFF               	movlw	255
  2727  000BB8  6EDF               	movwf	indf2,c
  2728  000BBA  0012               	return		;funcret
  2729  000BBC                     __end_of_FRAME_DeviceReset:
  2730                           	opt callstack 0
  2731                           
  2732 ;; *************** function _WriteDataToEEPROM *****************
  2733 ;; Defined at:
  2734 ;;		line 418 in file "FRAME.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2752 ;;Total ram usage:        0 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    5
  2755 ;; This function calls:
  2756 ;;		_NVMWrite
  2757 ;; This function is called by:
  2758 ;;		_FRAME_DeviceReset
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text19
  2763  000CC8                     __ptext19:
  2764                           	opt callstack 0
  2765  000CC8                     _WriteDataToEEPROM:
  2766                           	opt callstack 22
  2767                           
  2768                           ;FRAME.c: 421:     NVMWrite(&NeightAdress1,4,2);
  2769                           
  2770                           ;incstack = 0
  2771  000CC8  0E4A               	movlw	low _NeightAdress1
  2772  000CCA  6E2D               	movwf	NVMWrite@source,c
  2773  000CCC  0E00               	movlw	high _NeightAdress1
  2774  000CCE  6E2E               	movwf	NVMWrite@source+1,c
  2775  000CD0  0E00               	movlw	0
  2776  000CD2  6E30               	movwf	NVMWrite@addr+1,c
  2777  000CD4  0E04               	movlw	4
  2778  000CD6  6E2F               	movwf	NVMWrite@addr,c
  2779  000CD8  0E00               	movlw	0
  2780  000CDA  6E32               	movwf	NVMWrite@count+1,c
  2781  000CDC  0E02               	movlw	2
  2782  000CDE  6E31               	movwf	NVMWrite@count,c
  2783  000CE0  ECAA  F00B         	call	_NVMWrite	;wreg free
  2784                           
  2785                           ;FRAME.c: 422:     NVMWrite(&NeightAdress2,7,2);
  2786  000CE4  0E48               	movlw	low _NeightAdress2
  2787  000CE6  6E2D               	movwf	NVMWrite@source,c
  2788  000CE8  0E00               	movlw	high _NeightAdress2
  2789  000CEA  6E2E               	movwf	NVMWrite@source+1,c
  2790  000CEC  0E00               	movlw	0
  2791  000CEE  6E30               	movwf	NVMWrite@addr+1,c
  2792  000CF0  0E07               	movlw	7
  2793  000CF2  6E2F               	movwf	NVMWrite@addr,c
  2794  000CF4  0E00               	movlw	0
  2795  000CF6  6E32               	movwf	NVMWrite@count+1,c
  2796  000CF8  0E02               	movlw	2
  2797  000CFA  6E31               	movwf	NVMWrite@count,c
  2798  000CFC  ECAA  F00B         	call	_NVMWrite	;wreg free
  2799                           
  2800                           ;FRAME.c: 423:     NVMWrite(&NeightAdress3,10,2);
  2801  000D00  0E23               	movlw	low _NeightAdress3
  2802  000D02  6E2D               	movwf	NVMWrite@source,c
  2803  000D04  0E00               	movlw	high _NeightAdress3
  2804  000D06  6E2E               	movwf	NVMWrite@source+1,c
  2805  000D08  0E00               	movlw	0
  2806  000D0A  6E30               	movwf	NVMWrite@addr+1,c
  2807  000D0C  0E0A               	movlw	10
  2808  000D0E  6E2F               	movwf	NVMWrite@addr,c
  2809  000D10  0E00               	movlw	0
  2810  000D12  6E32               	movwf	NVMWrite@count+1,c
  2811  000D14  0E02               	movlw	2
  2812  000D16  6E31               	movwf	NVMWrite@count,c
  2813  000D18  ECAA  F00B         	call	_NVMWrite	;wreg free
  2814                           
  2815                           ;FRAME.c: 424:     NVMWrite(&NeightAdress4,13,2);
  2816  000D1C  0E21               	movlw	low _NeightAdress4
  2817  000D1E  6E2D               	movwf	NVMWrite@source,c
  2818  000D20  0E00               	movlw	high _NeightAdress4
  2819  000D22  6E2E               	movwf	NVMWrite@source+1,c
  2820  000D24  0E00               	movlw	0
  2821  000D26  6E30               	movwf	NVMWrite@addr+1,c
  2822  000D28  0E0D               	movlw	13
  2823  000D2A  6E2F               	movwf	NVMWrite@addr,c
  2824  000D2C  0E00               	movlw	0
  2825  000D2E  6E32               	movwf	NVMWrite@count+1,c
  2826  000D30  0E02               	movlw	2
  2827  000D32  6E31               	movwf	NVMWrite@count,c
  2828  000D34  ECAA  F00B         	call	_NVMWrite	;wreg free
  2829                           
  2830                           ;FRAME.c: 425:     NVMWrite(&NeightAdress5,16,2);
  2831  000D38  0E1F               	movlw	low _NeightAdress5
  2832  000D3A  6E2D               	movwf	NVMWrite@source,c
  2833  000D3C  0E00               	movlw	high _NeightAdress5
  2834  000D3E  6E2E               	movwf	NVMWrite@source+1,c
  2835  000D40  0E00               	movlw	0
  2836  000D42  6E30               	movwf	NVMWrite@addr+1,c
  2837  000D44  0E10               	movlw	16
  2838  000D46  6E2F               	movwf	NVMWrite@addr,c
  2839  000D48  0E00               	movlw	0
  2840  000D4A  6E32               	movwf	NVMWrite@count+1,c
  2841  000D4C  0E02               	movlw	2
  2842  000D4E  6E31               	movwf	NVMWrite@count,c
  2843  000D50  ECAA  F00B         	call	_NVMWrite	;wreg free
  2844                           
  2845                           ;FRAME.c: 426:     NVMWrite(&NeightAdress6,19,2);
  2846  000D54  0E1D               	movlw	low _NeightAdress6
  2847  000D56  6E2D               	movwf	NVMWrite@source,c
  2848  000D58  0E00               	movlw	high _NeightAdress6
  2849  000D5A  6E2E               	movwf	NVMWrite@source+1,c
  2850  000D5C  0E00               	movlw	0
  2851  000D5E  6E30               	movwf	NVMWrite@addr+1,c
  2852  000D60  0E13               	movlw	19
  2853  000D62  6E2F               	movwf	NVMWrite@addr,c
  2854  000D64  0E00               	movlw	0
  2855  000D66  6E32               	movwf	NVMWrite@count+1,c
  2856  000D68  0E02               	movlw	2
  2857  000D6A  6E31               	movwf	NVMWrite@count,c
  2858  000D6C  ECAA  F00B         	call	_NVMWrite	;wreg free
  2859                           
  2860                           ;FRAME.c: 427:     NVMWrite(&NeightAdress7,22,2);
  2861  000D70  0E1B               	movlw	low _NeightAdress7
  2862  000D72  6E2D               	movwf	NVMWrite@source,c
  2863  000D74  0E00               	movlw	high _NeightAdress7
  2864  000D76  6E2E               	movwf	NVMWrite@source+1,c
  2865  000D78  0E00               	movlw	0
  2866  000D7A  6E30               	movwf	NVMWrite@addr+1,c
  2867  000D7C  0E16               	movlw	22
  2868  000D7E  6E2F               	movwf	NVMWrite@addr,c
  2869  000D80  0E00               	movlw	0
  2870  000D82  6E32               	movwf	NVMWrite@count+1,c
  2871  000D84  0E02               	movlw	2
  2872  000D86  6E31               	movwf	NVMWrite@count,c
  2873  000D88  ECAA  F00B         	call	_NVMWrite	;wreg free
  2874                           
  2875                           ;FRAME.c: 428:     NVMWrite(&NeightAdress8,25,2);
  2876  000D8C  0E19               	movlw	low _NeightAdress8
  2877  000D8E  6E2D               	movwf	NVMWrite@source,c
  2878  000D90  0E00               	movlw	high _NeightAdress8
  2879  000D92  6E2E               	movwf	NVMWrite@source+1,c
  2880  000D94  0E00               	movlw	0
  2881  000D96  6E30               	movwf	NVMWrite@addr+1,c
  2882  000D98  0E19               	movlw	25
  2883  000D9A  6E2F               	movwf	NVMWrite@addr,c
  2884  000D9C  0E00               	movlw	0
  2885  000D9E  6E32               	movwf	NVMWrite@count+1,c
  2886  000DA0  0E02               	movlw	2
  2887  000DA2  6E31               	movwf	NVMWrite@count,c
  2888  000DA4  ECAA  F00B         	call	_NVMWrite	;wreg free
  2889  000DA8  0012               	return		;funcret
  2890  000DAA                     __end_of_WriteDataToEEPROM:
  2891                           	opt callstack 0
  2892                           
  2893 ;; *************** function _NVMWrite *****************
  2894 ;; Defined at:
  2895 ;;		line 90 in file "EEPROM.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  source          2    8[COMRAM] PTR unsigned char 
  2898 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  2899 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  2900 ;;  addr            2   10[COMRAM] unsigned short 
  2901 ;;  count           2   12[COMRAM] unsigned short 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2913 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;Total ram usage:        6 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    4
  2920 ;; This function calls:
  2921 ;;		_WritetoEEPROM
  2922 ;; This function is called by:
  2923 ;;		_WriteDataToEEPROM
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text20
  2928  001754                     __ptext20:
  2929                           	opt callstack 0
  2930  001754                     _NVMWrite:
  2931                           	opt callstack 22
  2932                           
  2933                           ;EEPROM.c: 90: void NVMWrite(BYTE *source, WORD addr, WORD count);EEPROM.c: 91: {;EEPROM
      +                          .c: 92:     while(count > 0)
  2934                           
  2935                           ;incstack = 0
  2936  001754  D015               	goto	l3797
  2937  001756                     l929:
  2938  001756  B2A6               	btfsc	4006,1,c	;volsfr
  2939  001758  D7FE               	goto	l929
  2940                           
  2941                           ;EEPROM.c: 95:         WritetoEEPROM(addr++,*source);
  2942  00175A  C02F  F02A         	movff	NVMWrite@addr,WritetoEEPROM@Address
  2943  00175E  C030  F02B         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  2944  001762  C02D  FFD9         	movff	NVMWrite@source,fsr2l
  2945  001766  C02E  FFDA         	movff	NVMWrite@source+1,fsr2h
  2946  00176A  50DF               	movf	indf2,w,c
  2947  00176C  6E2C               	movwf	WritetoEEPROM@Data,c
  2948  00176E  EC16  F00C         	call	_WritetoEEPROM	;wreg free
  2949  001772  4A2F               	infsnz	NVMWrite@addr,f,c
  2950  001774  2A30               	incf	NVMWrite@addr+1,f,c
  2951                           
  2952                           ;EEPROM.c: 96:         count--;
  2953  001776  0631               	decf	NVMWrite@count,f,c
  2954  001778  A0D8               	btfss	status,0,c
  2955  00177A  0632               	decf	NVMWrite@count+1,f,c
  2956                           
  2957                           ;EEPROM.c: 97:         source++;
  2958  00177C  4A2D               	infsnz	NVMWrite@source,f,c
  2959  00177E  2A2E               	incf	NVMWrite@source+1,f,c
  2960  001780                     l3797:
  2961                           
  2962                           ;EEPROM.c: 92:     while(count > 0)
  2963  001780  5031               	movf	NVMWrite@count,w,c
  2964  001782  1032               	iorwf	NVMWrite@count+1,w,c
  2965  001784  B4D8               	btfsc	status,2,c
  2966  001786  0012               	return	
  2967  001788  D7E6               	goto	l929
  2968  00178A                     __end_of_NVMWrite:
  2969                           	opt callstack 0
  2970                           
  2971 ;; *************** function _WritetoEEPROM *****************
  2972 ;; Defined at:
  2973 ;;		line 61 in file "EEPROM.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  Address         2    5[COMRAM] unsigned short 
  2976 ;;  Data            1    7[COMRAM] unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2988 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;Total ram usage:        3 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    3
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_NVMWrite
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text21
  3003  00182C                     __ptext21:
  3004                           	opt callstack 0
  3005  00182C                     _WritetoEEPROM:
  3006                           	opt callstack 22
  3007                           
  3008                           ;EEPROM.c: 61: static void WritetoEEPROM(WORD Address, BYTE Data);EEPROM.c: 62: {;EEPROM
      +                          .c: 63:     static BYTE GIE_Status;;EEPROM.c: 65:     EEADRH = (BYTE)(Address>>8);
  3009                           
  3010                           ;incstack = 0
  3011  00182C  502B               	movf	WritetoEEPROM@Address+1,w,c
  3012  00182E  6EAA               	movwf	4010,c	;volatile
  3013                           
  3014                           ;EEPROM.c: 66:     EEADR = (BYTE)Address;
  3015  001830  C02A  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3016                           
  3017                           ;EEPROM.c: 67:     EEDATA = Data;
  3018  001834  C02C  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3019                           
  3020                           ;EEPROM.c: 68:     EECON1bits.WREN = 1;
  3021  001838  84A6               	bsf	4006,2,c	;volsfr
  3022                           
  3023                           ;EEPROM.c: 69:     GIE_Status = INTCONbits.GIE;
  3024  00183A  0E00               	movlw	0
  3025  00183C  BEF2               	btfsc	4082,7,c	;volatile
  3026  00183E  0E01               	movlw	1
  3027  001840  6E0F               	movwf	WritetoEEPROM@GIE_Status,c
  3028                           
  3029                           ;EEPROM.c: 70:     INTCONbits.GIE = 0;
  3030  001842  9EF2               	bcf	4082,7,c	;volatile
  3031                           
  3032                           ;EEPROM.c: 71:     EECON2 = 0x55;
  3033  001844  0E55               	movlw	85
  3034  001846  6EA7               	movwf	4007,c	;volsfr
  3035                           
  3036                           ;EEPROM.c: 72:     EECON2 = 0xAA;
  3037  001848  0EAA               	movlw	170
  3038  00184A  6EA7               	movwf	4007,c	;volsfr
  3039                           
  3040                           ;EEPROM.c: 73:     EECON1bits.WR = 1;
  3041  00184C  82A6               	bsf	4006,1,c	;volsfr
  3042                           
  3043                           ;EEPROM.c: 74:     INTCONbits.GIE = GIE_Status;
  3044  00184E  B00F               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3045  001850  D002               	bra	u1955
  3046  001852  9EF2               	bcf	4082,7,c	;volatile
  3047  001854  D001               	bra	u1956
  3048  001856                     u1955:
  3049  001856  8EF2               	bsf	4082,7,c	;volatile
  3050  001858                     u1956:
  3051                           
  3052                           ;EEPROM.c: 75:     EECON1bits.WREN = 0;
  3053  001858  94A6               	bcf	4006,2,c	;volsfr
  3054  00185A                     l912:
  3055  00185A  B2A6               	btfsc	4006,1,c	;volsfr
  3056  00185C  D7FE               	goto	l912
  3057  00185E  0012               	return	
  3058  001860                     __end_of_WritetoEEPROM:
  3059                           	opt callstack 0
  3060                           
  3061 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3062 ;; Defined at:
  3063 ;;		line 328 in file "FRAME.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  message         2    5[COMRAM] PTR struct .
  3066 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3082 ;;Total ram usage:        3 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    3
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_FRAME_DeviceReset
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text22
  3093  0014B8                     __ptext22:
  3094                           	opt callstack 0
  3095  0014B8                     _FRAME_DataUpdateAndChangeOption:
  3096                           	opt callstack 24
  3097                           
  3098                           ;FRAME.c: 328: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 329: {
      +                          ;FRAME.c: 331:     Dane->rokU16 = message->data[4];
  3099                           
  3100                           ;incstack = 0
  3101  0014B8  EE20 F00C          	lfsr	2,12
  3102  0014BC  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3103  0014BE  26D9               	addwf	fsr2l,f,c
  3104  0014C0  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3105  0014C2  22DA               	addwfc	fsr2h,f,c
  3106  0014C4  50DF               	movf	indf2,w,c
  3107  0014C6  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3108  0014C8  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3109  0014CA  6E36               	movwf	54,c
  3110  0014CC  6A37               	clrf	55,c
  3111                           
  3112                           ;FRAME.c: 332:     Dane->miesiacU16 = message->data[5];
  3113  0014CE  EE20 F00D          	lfsr	2,13
  3114  0014D2  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3115  0014D4  26D9               	addwf	fsr2l,f,c
  3116  0014D6  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3117  0014D8  22DA               	addwfc	fsr2h,f,c
  3118  0014DA  50DF               	movf	indf2,w,c
  3119  0014DC  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3120  0014DE  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3121  0014E0  6E38               	movwf	56,c
  3122  0014E2  6A39               	clrf	57,c
  3123                           
  3124                           ;FRAME.c: 333:     Dane->dzienU16 = message->data[6];
  3125  0014E4  EE20 F00E          	lfsr	2,14
  3126  0014E8  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3127  0014EA  26D9               	addwf	fsr2l,f,c
  3128  0014EC  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3129  0014EE  22DA               	addwfc	fsr2h,f,c
  3130  0014F0  50DF               	movf	indf2,w,c
  3131  0014F2  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3132  0014F4  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3133  0014F6  6E3A               	movwf	58,c
  3134  0014F8  6A3B               	clrf	59,c
  3135                           
  3136                           ;FRAME.c: 334:     Dane->godzinaU16 = message->data[7];
  3137  0014FA  EE20 F00F          	lfsr	2,15
  3138  0014FE  502A               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3139  001500  26D9               	addwf	fsr2l,f,c
  3140  001502  502B               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3141  001504  22DA               	addwfc	fsr2h,f,c
  3142  001506  50DF               	movf	indf2,w,c
  3143  001508  6E2C               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3144  00150A  502C               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3145  00150C  6E3C               	movwf	60,c
  3146  00150E  6A3D               	clrf	61,c
  3147  001510  0012               	return		;funcret
  3148  001512                     __end_of_FRAME_DataUpdateAndChangeOption:
  3149                           	opt callstack 0
  3150                           
  3151 ;; *************** function _FRAME_AxisStatus *****************
  3152 ;; Defined at:
  3153 ;;		line 297 in file "FRAME.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  message         2    5[COMRAM] PTR struct .
  3156 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  i               2    0        unsigned short 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;Total ram usage:        3 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    3
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_FRAME_HandleCanFrame
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text23
  3183  00178A                     __ptext23:
  3184                           	opt callstack 0
  3185  00178A                     _FRAME_AxisStatus:
  3186                           	opt callstack 25
  3187                           
  3188                           ;FRAME.c: 297: static void FRAME_AxisStatus(mID *message);FRAME.c: 298: {;FRAME.c: 299: 
      +                              WORD i;;FRAME.c: 301:     if(message->message_type == 0x02)
  3189                           
  3190                           ;incstack = 0
  3191  00178A  EE20 F001          	lfsr	2,1
  3192  00178E  502A               	movf	FRAME_AxisStatus@message,w,c
  3193  001790  26D9               	addwf	fsr2l,f,c
  3194  001792  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3195  001794  22DA               	addwfc	fsr2h,f,c
  3196  001796  0E02               	movlw	2
  3197  001798  18DE               	xorwf	postinc2,w,c
  3198  00179A  A4D8               	btfss	status,2,c
  3199  00179C  0012               	return	
  3200                           
  3201                           ;FRAME.c: 302:     {;FRAME.c: 303:         message->data_length = 1;
  3202  00179E  EE20 F010          	lfsr	2,16
  3203  0017A2  502A               	movf	FRAME_AxisStatus@message,w,c
  3204  0017A4  26D9               	addwf	fsr2l,f,c
  3205  0017A6  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3206  0017A8  22DA               	addwfc	fsr2h,f,c
  3207  0017AA  0E01               	movlw	1
  3208  0017AC  6EDF               	movwf	indf2,c
  3209                           
  3210                           ;FRAME.c: 314:         message->data[0] = 0xFF;
  3211  0017AE  EE20 F008          	lfsr	2,8
  3212  0017B2  502A               	movf	FRAME_AxisStatus@message,w,c
  3213  0017B4  26D9               	addwf	fsr2l,f,c
  3214  0017B6  502B               	movf	FRAME_AxisStatus@message+1,w,c
  3215  0017B8  22DA               	addwfc	fsr2h,f,c
  3216  0017BA  0EFF               	movlw	255
  3217  0017BC  6EDF               	movwf	indf2,c
  3218                           
  3219                           ;FRAME.c: 315:     }
  3220  0017BE  0012               	return		;funcret
  3221  0017C0                     __end_of_FRAME_AxisStatus:
  3222                           	opt callstack 0
  3223                           
  3224 ;; *************** function _FRAME_AveragingTimes *****************
  3225 ;; Defined at:
  3226 ;;		line 238 in file "FRAME.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  message         2    5[COMRAM] PTR struct .
  3229 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;Total ram usage:        3 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    3
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_FRAME_HandleCanFrame
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text24
  3256  0017C0                     __ptext24:
  3257                           	opt callstack 0
  3258  0017C0                     _FRAME_AveragingTimes:
  3259                           	opt callstack 25
  3260                           
  3261                           ;FRAME.c: 238: static void FRAME_AveragingTimes(mID *message);FRAME.c: 239: {;FRAME.c: 2
      +                          40:     if(message->message_type == 0x02)
  3262                           
  3263                           ;incstack = 0
  3264  0017C0  EE20 F001          	lfsr	2,1
  3265  0017C4  502A               	movf	FRAME_AveragingTimes@message,w,c
  3266  0017C6  26D9               	addwf	fsr2l,f,c
  3267  0017C8  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3268  0017CA  22DA               	addwfc	fsr2h,f,c
  3269  0017CC  0E02               	movlw	2
  3270  0017CE  18DE               	xorwf	postinc2,w,c
  3271  0017D0  A4D8               	btfss	status,2,c
  3272  0017D2  0012               	return	
  3273                           
  3274                           ;FRAME.c: 241:     {;FRAME.c: 242:         message->data_length = 1;
  3275  0017D4  EE20 F010          	lfsr	2,16
  3276  0017D8  502A               	movf	FRAME_AveragingTimes@message,w,c
  3277  0017DA  26D9               	addwf	fsr2l,f,c
  3278  0017DC  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3279  0017DE  22DA               	addwfc	fsr2h,f,c
  3280  0017E0  0E01               	movlw	1
  3281  0017E2  6EDF               	movwf	indf2,c
  3282                           
  3283                           ;FRAME.c: 250:         message->data[0] = 0xFF;
  3284  0017E4  EE20 F008          	lfsr	2,8
  3285  0017E8  502A               	movf	FRAME_AveragingTimes@message,w,c
  3286  0017EA  26D9               	addwf	fsr2l,f,c
  3287  0017EC  502B               	movf	FRAME_AveragingTimes@message+1,w,c
  3288  0017EE  22DA               	addwfc	fsr2h,f,c
  3289  0017F0  0EFF               	movlw	255
  3290  0017F2  6EDF               	movwf	indf2,c
  3291                           
  3292                           ;FRAME.c: 251:     }
  3293  0017F4  0012               	return		;funcret
  3294  0017F6                     __end_of_FRAME_AveragingTimes:
  3295                           	opt callstack 0
  3296                           
  3297 ;; *************** function _FRAME_AnalogValue *****************
  3298 ;; Defined at:
  3299 ;;		line 507 in file "FRAME.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  message         2    5[COMRAM] PTR struct .
  3302 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3303 ;;  set             2    7[COMRAM] unsigned short 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  i               2    0        unsigned short 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		None
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3319 ;;Total ram usage:        4 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    3
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_FRAME_HandleCanFrame
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text25
  3330  001A98                     __ptext25:
  3331                           	opt callstack 0
  3332  001A98                     _FRAME_AnalogValue:
  3333                           	opt callstack 25
  3334                           
  3335                           ;incstack = 0
  3336  001A98  0012               	return		;funcret
  3337  001A9A                     __end_of_FRAME_AnalogValue:
  3338                           	opt callstack 0
  3339                           
  3340 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3341 ;; Defined at:
  3342 ;;		line 555 in file "FRAME.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  message         2    5[COMRAM] PTR struct .
  3345 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3346 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  kier            2   13[COMRAM] unsigned short 
  3349 ;;  it              2    0        unsigned short 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3363 ;;Total ram usage:       10 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    4
  3366 ;; This function calls:
  3367 ;;		_CAN_SetupFilter_Ne
  3368 ;; This function is called by:
  3369 ;;		_FRAME_HandleCanFrame
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text26
  3374  000062                     __ptext26:
  3375                           	opt callstack 0
  3376  000062                     _FRAME_AdressOfNeighbors:
  3377                           	opt callstack 24
  3378                           
  3379                           ;FRAME.c: 555: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          556: {;FRAME.c: 557:     WORD it;;FRAME.c: 560:     WORD kier = (nrRamki-0x10);
  3380                           
  3381                           ;incstack = 0
  3382  000062  0EF0               	movlw	240
  3383  000064  242C               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3384  000066  6E32               	movwf	FRAME_AdressOfNeighbors@kier,c
  3385  000068  0EFF               	movlw	255
  3386  00006A  202D               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3387  00006C  6E33               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3388                           
  3389                           ;FRAME.c: 561:     if(message->message_type == 0x02)
  3390  00006E  EE20 F001          	lfsr	2,1
  3391  000072  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3392  000074  26D9               	addwf	fsr2l,f,c
  3393  000076  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3394  000078  22DA               	addwfc	fsr2h,f,c
  3395  00007A  0E02               	movlw	2
  3396  00007C  18DE               	xorwf	postinc2,w,c
  3397  00007E  A4D8               	btfss	status,2,c
  3398  000080  D08E               	goto	l4295
  3399                           
  3400                           ;FRAME.c: 562:     {;FRAME.c: 564:         message->data_length = 8;
  3401  000082  EE20 F010          	lfsr	2,16
  3402  000086  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3403  000088  26D9               	addwf	fsr2l,f,c
  3404  00008A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3405  00008C  22DA               	addwfc	fsr2h,f,c
  3406  00008E  0E08               	movlw	8
  3407  000090  6EDF               	movwf	indf2,c
  3408                           
  3409                           ;FRAME.c: 566:         if(kier == 0)
  3410  000092  5032               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3411  000094  1033               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3412  000096  A4D8               	btfss	status,2,c
  3413  000098  D041               	goto	l4293
  3414                           
  3415                           ;FRAME.c: 567:         {;FRAME.c: 568:         message->data[0] = (NeightAdress1>> 8);
  3416  00009A  EE20 F008          	lfsr	2,8
  3417  00009E  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3418  0000A0  26D9               	addwf	fsr2l,f,c
  3419  0000A2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3420  0000A4  22DA               	addwfc	fsr2h,f,c
  3421  0000A6  504B               	movf	_NeightAdress1+1,w,c	;volatile
  3422  0000A8  6EDF               	movwf	indf2,c
  3423                           
  3424                           ;FRAME.c: 569:         message->data[1] = NeightAdress1 & 0b11111111;
  3425  0000AA  EE20 F009          	lfsr	2,9
  3426  0000AE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3427  0000B0  26D9               	addwf	fsr2l,f,c
  3428  0000B2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3429  0000B4  22DA               	addwfc	fsr2h,f,c
  3430  0000B6  C04A  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3431                           
  3432                           ;FRAME.c: 570:         message->data[2] = (NeightAdress2>> 8);
  3433  0000BA  EE20 F00A          	lfsr	2,10
  3434  0000BE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3435  0000C0  26D9               	addwf	fsr2l,f,c
  3436  0000C2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3437  0000C4  22DA               	addwfc	fsr2h,f,c
  3438  0000C6  5049               	movf	_NeightAdress2+1,w,c	;volatile
  3439  0000C8  6EDF               	movwf	indf2,c
  3440                           
  3441                           ;FRAME.c: 571:         message->data[3] = NeightAdress2 & 0b11111111;
  3442  0000CA  EE20 F00B          	lfsr	2,11
  3443  0000CE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3444  0000D0  26D9               	addwf	fsr2l,f,c
  3445  0000D2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3446  0000D4  22DA               	addwfc	fsr2h,f,c
  3447  0000D6  C048  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3448                           
  3449                           ;FRAME.c: 572:         message->data[4] = (NeightAdress3>> 8);
  3450  0000DA  EE20 F00C          	lfsr	2,12
  3451  0000DE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3452  0000E0  26D9               	addwf	fsr2l,f,c
  3453  0000E2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3454  0000E4  22DA               	addwfc	fsr2h,f,c
  3455  0000E6  5024               	movf	_NeightAdress3+1,w,c	;volatile
  3456  0000E8  6EDF               	movwf	indf2,c
  3457                           
  3458                           ;FRAME.c: 573:         message->data[5] = NeightAdress3 & 0b11111111;
  3459  0000EA  EE20 F00D          	lfsr	2,13
  3460  0000EE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3461  0000F0  26D9               	addwf	fsr2l,f,c
  3462  0000F2  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3463  0000F4  22DA               	addwfc	fsr2h,f,c
  3464  0000F6  C023  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3465                           
  3466                           ;FRAME.c: 574:         message->data[6] = (NeightAdress4>> 8);
  3467  0000FA  EE20 F00E          	lfsr	2,14
  3468  0000FE  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3469  000100  26D9               	addwf	fsr2l,f,c
  3470  000102  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3471  000104  22DA               	addwfc	fsr2h,f,c
  3472  000106  5022               	movf	_NeightAdress4+1,w,c	;volatile
  3473  000108  6EDF               	movwf	indf2,c
  3474                           
  3475                           ;FRAME.c: 575:         message->data[7] = NeightAdress4 & 0b11111111;
  3476  00010A  EE20 F00F          	lfsr	2,15
  3477  00010E  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3478  000110  26D9               	addwf	fsr2l,f,c
  3479  000112  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3480  000114  22DA               	addwfc	fsr2h,f,c
  3481  000116  C021  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3482                           
  3483                           ;FRAME.c: 576:         }
  3484  00011A  0012               	return	
  3485  00011C                     l4293:
  3486                           
  3487                           ;FRAME.c: 578:         {;FRAME.c: 579:         message->data[0] = (NeightAdress5>> 8);
  3488  00011C  EE20 F008          	lfsr	2,8
  3489  000120  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3490  000122  26D9               	addwf	fsr2l,f,c
  3491  000124  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3492  000126  22DA               	addwfc	fsr2h,f,c
  3493  000128  5020               	movf	_NeightAdress5+1,w,c	;volatile
  3494  00012A  6EDF               	movwf	indf2,c
  3495                           
  3496                           ;FRAME.c: 580:         message->data[1] = NeightAdress5 & 0b11111111;
  3497  00012C  EE20 F009          	lfsr	2,9
  3498  000130  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3499  000132  26D9               	addwf	fsr2l,f,c
  3500  000134  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3501  000136  22DA               	addwfc	fsr2h,f,c
  3502  000138  C01F  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3503                           
  3504                           ;FRAME.c: 581:         message->data[2] = (NeightAdress6>> 8);
  3505  00013C  EE20 F00A          	lfsr	2,10
  3506  000140  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3507  000142  26D9               	addwf	fsr2l,f,c
  3508  000144  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3509  000146  22DA               	addwfc	fsr2h,f,c
  3510  000148  501E               	movf	_NeightAdress6+1,w,c	;volatile
  3511  00014A  6EDF               	movwf	indf2,c
  3512                           
  3513                           ;FRAME.c: 582:         message->data[3] = NeightAdress6 & 0b11111111;
  3514  00014C  EE20 F00B          	lfsr	2,11
  3515  000150  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3516  000152  26D9               	addwf	fsr2l,f,c
  3517  000154  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3518  000156  22DA               	addwfc	fsr2h,f,c
  3519  000158  C01D  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3520                           
  3521                           ;FRAME.c: 583:         message->data[4] = (NeightAdress7>> 8);
  3522  00015C  EE20 F00C          	lfsr	2,12
  3523  000160  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3524  000162  26D9               	addwf	fsr2l,f,c
  3525  000164  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3526  000166  22DA               	addwfc	fsr2h,f,c
  3527  000168  501C               	movf	_NeightAdress7+1,w,c	;volatile
  3528  00016A  6EDF               	movwf	indf2,c
  3529                           
  3530                           ;FRAME.c: 584:         message->data[5] = NeightAdress7 & 0b11111111;
  3531  00016C  EE20 F00D          	lfsr	2,13
  3532  000170  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3533  000172  26D9               	addwf	fsr2l,f,c
  3534  000174  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3535  000176  22DA               	addwfc	fsr2h,f,c
  3536  000178  C01B  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3537                           
  3538                           ;FRAME.c: 585:         message->data[6] = (NeightAdress8>> 8);
  3539  00017C  EE20 F00E          	lfsr	2,14
  3540  000180  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3541  000182  26D9               	addwf	fsr2l,f,c
  3542  000184  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3543  000186  22DA               	addwfc	fsr2h,f,c
  3544  000188  501A               	movf	_NeightAdress8+1,w,c	;volatile
  3545  00018A  6EDF               	movwf	indf2,c
  3546                           
  3547                           ;FRAME.c: 586:         message->data[7] = NeightAdress8 & 0b11111111;
  3548  00018C  EE20 F00F          	lfsr	2,15
  3549  000190  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3550  000192  26D9               	addwf	fsr2l,f,c
  3551  000194  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3552  000196  22DA               	addwfc	fsr2h,f,c
  3553  000198  C019  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3554  00019C  0012               	return	
  3555  00019E                     l4295:
  3556                           
  3557                           ;FRAME.c: 593:     {;FRAME.c: 596:         if(kier == 0)
  3558  00019E  5032               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3559  0001A0  1033               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3560  0001A2  A4D8               	btfss	status,2,c
  3561  0001A4  D063               	goto	l4301
  3562                           
  3563                           ;FRAME.c: 597:         {;FRAME.c: 598:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3564  0001A6  EE20 F008          	lfsr	2,8
  3565  0001AA  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3566  0001AC  26D9               	addwf	fsr2l,f,c
  3567  0001AE  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3568  0001B0  22DA               	addwfc	fsr2h,f,c
  3569  0001B2  50DF               	movf	indf2,w,c
  3570  0001B4  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3571  0001B6  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3572  0001B8  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3573  0001BA  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3574  0001BC  EE20 F009          	lfsr	2,9
  3575  0001C0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3576  0001C2  26D9               	addwf	fsr2l,f,c
  3577  0001C4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3578  0001C6  22DA               	addwfc	fsr2h,f,c
  3579  0001C8  50DF               	movf	indf2,w,c
  3580  0001CA  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3581  0001CC  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3582  0001CE  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3583  0001D0  6E4A               	movwf	_NeightAdress1,c	;volatile
  3584  0001D2  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3585  0001D4  6E4B               	movwf	_NeightAdress1+1,c	;volatile
  3586                           
  3587                           ;FRAME.c: 599:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3588  0001D6  EE20 F00A          	lfsr	2,10
  3589  0001DA  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3590  0001DC  26D9               	addwf	fsr2l,f,c
  3591  0001DE  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3592  0001E0  22DA               	addwfc	fsr2h,f,c
  3593  0001E2  50DF               	movf	indf2,w,c
  3594  0001E4  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3595  0001E6  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3596  0001E8  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3597  0001EA  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3598  0001EC  EE20 F00B          	lfsr	2,11
  3599  0001F0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3600  0001F2  26D9               	addwf	fsr2l,f,c
  3601  0001F4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3602  0001F6  22DA               	addwfc	fsr2h,f,c
  3603  0001F8  50DF               	movf	indf2,w,c
  3604  0001FA  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3605  0001FC  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3606  0001FE  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3607  000200  6E48               	movwf	_NeightAdress2,c	;volatile
  3608  000202  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3609  000204  6E49               	movwf	_NeightAdress2+1,c	;volatile
  3610                           
  3611                           ;FRAME.c: 600:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3612  000206  EE20 F00C          	lfsr	2,12
  3613  00020A  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3614  00020C  26D9               	addwf	fsr2l,f,c
  3615  00020E  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3616  000210  22DA               	addwfc	fsr2h,f,c
  3617  000212  50DF               	movf	indf2,w,c
  3618  000214  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3619  000216  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3620  000218  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3621  00021A  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3622  00021C  EE20 F00D          	lfsr	2,13
  3623  000220  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3624  000222  26D9               	addwf	fsr2l,f,c
  3625  000224  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3626  000226  22DA               	addwfc	fsr2h,f,c
  3627  000228  50DF               	movf	indf2,w,c
  3628  00022A  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3629  00022C  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3630  00022E  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3631  000230  6E23               	movwf	_NeightAdress3,c	;volatile
  3632  000232  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3633  000234  6E24               	movwf	_NeightAdress3+1,c	;volatile
  3634                           
  3635                           ;FRAME.c: 601:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3636  000236  EE20 F00E          	lfsr	2,14
  3637  00023A  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3638  00023C  26D9               	addwf	fsr2l,f,c
  3639  00023E  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3640  000240  22DA               	addwfc	fsr2h,f,c
  3641  000242  50DF               	movf	indf2,w,c
  3642  000244  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3643  000246  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3644  000248  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3645  00024A  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3646  00024C  EE20 F00F          	lfsr	2,15
  3647  000250  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3648  000252  26D9               	addwf	fsr2l,f,c
  3649  000254  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3650  000256  22DA               	addwfc	fsr2h,f,c
  3651  000258  50DF               	movf	indf2,w,c
  3652  00025A  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3653  00025C  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3654  00025E  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3655  000260  6E21               	movwf	_NeightAdress4,c	;volatile
  3656  000262  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3657  000264  6E22               	movwf	_NeightAdress4+1,c	;volatile
  3658  000266                     l4299:
  3659                           
  3660                           ;FRAME.c: 602:          CAN_SetupFilter_Ne();
  3661  000266  EC52  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  3662                           
  3663                           ;FRAME.c: 605:         }
  3664  00026A  0012               	return	
  3665  00026C                     l4301:
  3666                           
  3667                           ;FRAME.c: 607:         {;FRAME.c: 608:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3668  00026C  EE20 F008          	lfsr	2,8
  3669  000270  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3670  000272  26D9               	addwf	fsr2l,f,c
  3671  000274  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3672  000276  22DA               	addwfc	fsr2h,f,c
  3673  000278  50DF               	movf	indf2,w,c
  3674  00027A  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3675  00027C  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3676  00027E  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3677  000280  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3678  000282  EE20 F009          	lfsr	2,9
  3679  000286  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3680  000288  26D9               	addwf	fsr2l,f,c
  3681  00028A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3682  00028C  22DA               	addwfc	fsr2h,f,c
  3683  00028E  50DF               	movf	indf2,w,c
  3684  000290  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3685  000292  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3686  000294  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3687  000296  6E1F               	movwf	_NeightAdress5,c	;volatile
  3688  000298  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3689  00029A  6E20               	movwf	_NeightAdress5+1,c	;volatile
  3690                           
  3691                           ;FRAME.c: 609:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3692  00029C  EE20 F00A          	lfsr	2,10
  3693  0002A0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3694  0002A2  26D9               	addwf	fsr2l,f,c
  3695  0002A4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3696  0002A6  22DA               	addwfc	fsr2h,f,c
  3697  0002A8  50DF               	movf	indf2,w,c
  3698  0002AA  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3699  0002AC  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3700  0002AE  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3701  0002B0  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3702  0002B2  EE20 F00B          	lfsr	2,11
  3703  0002B6  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3704  0002B8  26D9               	addwf	fsr2l,f,c
  3705  0002BA  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3706  0002BC  22DA               	addwfc	fsr2h,f,c
  3707  0002BE  50DF               	movf	indf2,w,c
  3708  0002C0  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3709  0002C2  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3710  0002C4  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3711  0002C6  6E1D               	movwf	_NeightAdress6,c	;volatile
  3712  0002C8  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3713  0002CA  6E1E               	movwf	_NeightAdress6+1,c	;volatile
  3714                           
  3715                           ;FRAME.c: 610:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3716  0002CC  EE20 F00C          	lfsr	2,12
  3717  0002D0  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3718  0002D2  26D9               	addwf	fsr2l,f,c
  3719  0002D4  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3720  0002D6  22DA               	addwfc	fsr2h,f,c
  3721  0002D8  50DF               	movf	indf2,w,c
  3722  0002DA  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3723  0002DC  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3724  0002DE  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3725  0002E0  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3726  0002E2  EE20 F00D          	lfsr	2,13
  3727  0002E6  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3728  0002E8  26D9               	addwf	fsr2l,f,c
  3729  0002EA  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3730  0002EC  22DA               	addwfc	fsr2h,f,c
  3731  0002EE  50DF               	movf	indf2,w,c
  3732  0002F0  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3733  0002F2  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3734  0002F4  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3735  0002F6  6E1B               	movwf	_NeightAdress7,c	;volatile
  3736  0002F8  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3737  0002FA  6E1C               	movwf	_NeightAdress7+1,c	;volatile
  3738                           
  3739                           ;FRAME.c: 611:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3740  0002FC  EE20 F00E          	lfsr	2,14
  3741  000300  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3742  000302  26D9               	addwf	fsr2l,f,c
  3743  000304  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3744  000306  22DA               	addwfc	fsr2h,f,c
  3745  000308  50DF               	movf	indf2,w,c
  3746  00030A  6E2E               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3747  00030C  502E               	movf	??_FRAME_AdressOfNeighbors,w,c
  3748  00030E  6E30               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3749  000310  6A2F               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3750  000312  EE20 F00F          	lfsr	2,15
  3751  000316  502A               	movf	FRAME_AdressOfNeighbors@message,w,c
  3752  000318  26D9               	addwf	fsr2l,f,c
  3753  00031A  502B               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3754  00031C  22DA               	addwfc	fsr2h,f,c
  3755  00031E  50DF               	movf	indf2,w,c
  3756  000320  6E31               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3757  000322  5031               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3758  000324  102F               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3759  000326  6E19               	movwf	_NeightAdress8,c	;volatile
  3760  000328  5030               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3761  00032A  6E1A               	movwf	_NeightAdress8+1,c	;volatile
  3762  00032C  D79C               	goto	l4299
  3763  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3764                           	opt callstack 0
  3765                           
  3766 ;; *************** function _FRAME_AccelerometerStatus *****************
  3767 ;; Defined at:
  3768 ;;		line 161 in file "FRAME.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  message         2    7[COMRAM] PTR struct .
  3771 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;Total ram usage:        3 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    4
  3790 ;; This function calls:
  3791 ;;		_MOCK_Klikniecie_Spadek
  3792 ;;		_MOCK_PrzyspieszenieX
  3793 ;;		_MOCK_PrzyspieszenieY
  3794 ;;		_MOCK_PrzyspieszenieZ
  3795 ;; This function is called by:
  3796 ;;		_FRAME_HandleCanFrame
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text27
  3801  0012B0                     __ptext27:
  3802                           	opt callstack 0
  3803  0012B0                     _FRAME_AccelerometerStatus:
  3804                           	opt callstack 24
  3805                           
  3806                           ;FRAME.c: 161: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 162: {;FRAME
      +                          .c: 163:     if(message->message_type == 0x02)
  3807                           
  3808                           ;incstack = 0
  3809  0012B0  EE20 F001          	lfsr	2,1
  3810  0012B4  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3811  0012B6  26D9               	addwf	fsr2l,f,c
  3812  0012B8  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3813  0012BA  22DA               	addwfc	fsr2h,f,c
  3814  0012BC  0E02               	movlw	2
  3815  0012BE  18DE               	xorwf	postinc2,w,c
  3816  0012C0  A4D8               	btfss	status,2,c
  3817  0012C2  0012               	return	
  3818                           
  3819                           ;FRAME.c: 164:     {;FRAME.c: 165:         message->data_length = 4;
  3820  0012C4  EE20 F010          	lfsr	2,16
  3821  0012C8  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3822  0012CA  26D9               	addwf	fsr2l,f,c
  3823  0012CC  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3824  0012CE  22DA               	addwfc	fsr2h,f,c
  3825  0012D0  0E04               	movlw	4
  3826  0012D2  6EDF               	movwf	indf2,c
  3827                           
  3828                           ;FRAME.c: 169:         message->data[0] = MOCK_PrzyspieszenieX();
  3829  0012D4  EE20 F008          	lfsr	2,8
  3830  0012D8  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3831  0012DA  26D9               	addwf	fsr2l,f,c
  3832  0012DC  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3833  0012DE  22DA               	addwfc	fsr2h,f,c
  3834  0012E0  EC25  F00D         	call	_MOCK_PrzyspieszenieX	;wreg free
  3835  0012E4  502A               	movf	?_MOCK_PrzyspieszenieX,w,c
  3836  0012E6  6EDF               	movwf	indf2,c
  3837                           
  3838                           ;FRAME.c: 170:         message->data[1] = MOCK_PrzyspieszenieY();
  3839  0012E8  EE20 F009          	lfsr	2,9
  3840  0012EC  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3841  0012EE  26D9               	addwf	fsr2l,f,c
  3842  0012F0  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3843  0012F2  22DA               	addwfc	fsr2h,f,c
  3844  0012F4  EC20  F00D         	call	_MOCK_PrzyspieszenieY	;wreg free
  3845  0012F8  502A               	movf	?_MOCK_PrzyspieszenieY,w,c
  3846  0012FA  6EDF               	movwf	indf2,c
  3847                           
  3848                           ;FRAME.c: 171:         message->data[2] = MOCK_PrzyspieszenieZ();
  3849  0012FC  EE20 F00A          	lfsr	2,10
  3850  001300  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3851  001302  26D9               	addwf	fsr2l,f,c
  3852  001304  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3853  001306  22DA               	addwfc	fsr2h,f,c
  3854  001308  EC1B  F00D         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3855  00130C  502A               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3856  00130E  6EDF               	movwf	indf2,c
  3857                           
  3858                           ;FRAME.c: 172:         message->data[3] = MOCK_Klikniecie_Spadek();
  3859  001310  EE20 F00B          	lfsr	2,11
  3860  001314  502C               	movf	FRAME_AccelerometerStatus@message,w,c
  3861  001316  26D9               	addwf	fsr2l,f,c
  3862  001318  502D               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3863  00131A  22DA               	addwfc	fsr2h,f,c
  3864  00131C  EC2A  F00D         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3865  001320  502A               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3866  001322  6EDF               	movwf	indf2,c
  3867                           
  3868                           ;FRAME.c: 173:     }
  3869  001324  0012               	return		;funcret
  3870  001326                     __end_of_FRAME_AccelerometerStatus:
  3871                           	opt callstack 0
  3872                           
  3873 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3874 ;; Defined at:
  3875 ;;		line 72 in file "MOC_Funct.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  2    5[COMRAM] unsigned int 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;Total ram usage:        2 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    3
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_FRAME_AccelerometerStatus
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text28
  3904  001A36                     __ptext28:
  3905                           	opt callstack 0
  3906  001A36                     _MOCK_PrzyspieszenieZ:
  3907                           	opt callstack 24
  3908                           
  3909                           ;MOC_Funct.c: 74:     return 0xFE;
  3910                           
  3911                           ;incstack = 0
  3912  001A36  0E00               	movlw	0
  3913  001A38  6E2B               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3914  001A3A  0EFE               	movlw	254
  3915  001A3C  6E2A               	movwf	?_MOCK_PrzyspieszenieZ,c
  3916  001A3E  0012               	return		;funcret
  3917  001A40                     __end_of_MOCK_PrzyspieszenieZ:
  3918                           	opt callstack 0
  3919                           
  3920 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3921 ;; Defined at:
  3922 ;;		line 68 in file "MOC_Funct.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  2    5[COMRAM] unsigned int 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;Total ram usage:        2 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    3
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_FRAME_AccelerometerStatus
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text29
  3951  001A40                     __ptext29:
  3952                           	opt callstack 0
  3953  001A40                     _MOCK_PrzyspieszenieY:
  3954                           	opt callstack 24
  3955                           
  3956                           ;MOC_Funct.c: 70:     return 0xFE;
  3957                           
  3958                           ;incstack = 0
  3959  001A40  0E00               	movlw	0
  3960  001A42  6E2B               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3961  001A44  0EFE               	movlw	254
  3962  001A46  6E2A               	movwf	?_MOCK_PrzyspieszenieY,c
  3963  001A48  0012               	return		;funcret
  3964  001A4A                     __end_of_MOCK_PrzyspieszenieY:
  3965                           	opt callstack 0
  3966                           
  3967 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3968 ;; Defined at:
  3969 ;;		line 63 in file "MOC_Funct.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  2    5[COMRAM] unsigned int 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;Total ram usage:        2 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    3
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_FRAME_AccelerometerStatus
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text30
  3998  001A4A                     __ptext30:
  3999                           	opt callstack 0
  4000  001A4A                     _MOCK_PrzyspieszenieX:
  4001                           	opt callstack 24
  4002                           
  4003                           ;MOC_Funct.c: 65:     return 0xFE;
  4004                           
  4005                           ;incstack = 0
  4006  001A4A  0E00               	movlw	0
  4007  001A4C  6E2B               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4008  001A4E  0EFE               	movlw	254
  4009  001A50  6E2A               	movwf	?_MOCK_PrzyspieszenieX,c
  4010  001A52  0012               	return		;funcret
  4011  001A54                     __end_of_MOCK_PrzyspieszenieX:
  4012                           	opt callstack 0
  4013                           
  4014 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4015 ;; Defined at:
  4016 ;;		line 76 in file "MOC_Funct.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  2    5[COMRAM] unsigned int 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;Total ram usage:        2 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    3
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_FRAME_AccelerometerStatus
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text31
  4045  001A54                     __ptext31:
  4046                           	opt callstack 0
  4047  001A54                     _MOCK_Klikniecie_Spadek:
  4048                           	opt callstack 24
  4049                           
  4050                           ;MOC_Funct.c: 78:     return 0b00000000;
  4051                           
  4052                           ;incstack = 0
  4053  001A54  0E00               	movlw	0
  4054  001A56  6E2B               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4055  001A58  0E00               	movlw	0
  4056  001A5A  6E2A               	movwf	?_MOCK_Klikniecie_Spadek,c
  4057  001A5C  0012               	return		;funcret
  4058  001A5E                     __end_of_MOCK_Klikniecie_Spadek:
  4059                           	opt callstack 0
  4060                           
  4061 ;; *************** function _CAN_SendFrame *****************
  4062 ;; Defined at:
  4063 ;;		line 246 in file "CAN.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  message         2   10[COMRAM] PTR struct .
  4066 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;Total ram usage:        5 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    4
  4085 ;; This function calls:
  4086 ;;		_CAN_MoveBuffIntoFrame
  4087 ;; This function is called by:
  4088 ;;		_FRAME_HandleCanFrame
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text32
  4093  0007B0                     __ptext32:
  4094                           	opt callstack 0
  4095  0007B0                     _CAN_SendFrame:
  4096                           	opt callstack 24
  4097                           
  4098                           ;CAN.c: 251:     {;CAN.c: 252:         ECANCON = 0x83;
  4099                           
  4100                           ;incstack = 0
  4101                           ;CAN.c: 246: void CAN_SendFrame(mID * message);CAN.c: 247: {;CAN.c: 250:     for(;;)
  4102  0007B0  0E83               	movlw	131
  4103  0007B2  6E77               	movwf	3959,c	;volatile
  4104                           
  4105                           ;CAN.c: 253:         if(!RXB0CONbits.FILHIT3)
  4106  0007B4  A660               	btfss	3936,3,c	;volatile
  4107  0007B6  D00A               	goto	l280
  4108                           
  4109                           ;CAN.c: 258:         ECANCON = 0x84;
  4110  0007B8  0E84               	movlw	132
  4111  0007BA  6E77               	movwf	3959,c	;volatile
  4112                           
  4113                           ;CAN.c: 259:         if(!RXB0CONbits.FILHIT3)
  4114  0007BC  A660               	btfss	3936,3,c	;volatile
  4115  0007BE  D006               	goto	l280
  4116                           
  4117                           ;CAN.c: 264:         ECANCON = 0x85;
  4118  0007C0  0E85               	movlw	133
  4119  0007C2  6E77               	movwf	3959,c	;volatile
  4120                           
  4121                           ;CAN.c: 265:         if(!RXB0CONbits.FILHIT3)
  4122  0007C4  A660               	btfss	3936,3,c	;volatile
  4123  0007C6  D002               	goto	l280
  4124  0007C8  D7F3               	goto	_CAN_SendFrame
  4125  0007CA                     l281:
  4126  0007CA  00FF               	reset		;# 
  4127  0007CC                     l280:
  4128                           
  4129                           ;CAN.c: 272:     while(COMSTATbits.TXWARN)
  4130  0007CC  B474               	btfsc	3956,2,c	;volatile
  4131  0007CE  D7FD               	goto	l281
  4132                           
  4133                           ;CAN.c: 276:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4134  0007D0  0E00               	movlw	0
  4135  0007D2  0100               	movlb	0	; () banked
  4136  0007D4  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;CAN.c: 277:     RXB0EIDL = message->id.v[0];
  4140  0007D6  EE20 F004          	lfsr	2,4
  4141  0007DA  502F               	movf	CAN_SendFrame@message,w,c
  4142  0007DC  26D9               	addwf	fsr2l,f,c
  4143  0007DE  5030               	movf	CAN_SendFrame@message+1,w,c
  4144  0007E0  22DA               	addwfc	fsr2h,f,c
  4145  0007E2  50DF               	movf	indf2,w,c
  4146  0007E4  6E64               	movwf	3940,c	;volatile
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;CAN.c: 278:     RXB0EIDH = message->id.v[1];
  4150  0007E6  EE20 F005          	lfsr	2,5
  4151  0007EA  502F               	movf	CAN_SendFrame@message,w,c
  4152  0007EC  26D9               	addwf	fsr2l,f,c
  4153  0007EE  5030               	movf	CAN_SendFrame@message+1,w,c
  4154  0007F0  22DA               	addwfc	fsr2h,f,c
  4155  0007F2  50DF               	movf	indf2,w,c
  4156  0007F4  6E63               	movwf	3939,c	;volatile
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;CAN.c: 279:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4160  0007F6  EE20 F006          	lfsr	2,6
  4161  0007FA  502F               	movf	CAN_SendFrame@message,w,c
  4162  0007FC  26D9               	addwf	fsr2l,f,c
  4163  0007FE  5030               	movf	CAN_SendFrame@message+1,w,c
  4164  000800  22DA               	addwfc	fsr2h,f,c
  4165  000802  50DF               	movf	indf2,w,c
  4166  000804  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4167  000806  0E03               	movlw	3
  4168  000808  1631               	andwf	??_CAN_SendFrame,f,c
  4169  00080A  EE20 F006          	lfsr	2,6
  4170  00080E  502F               	movf	CAN_SendFrame@message,w,c
  4171  000810  26D9               	addwf	fsr2l,f,c
  4172  000812  5030               	movf	CAN_SendFrame@message+1,w,c
  4173  000814  22DA               	addwfc	fsr2h,f,c
  4174  000816  50DF               	movf	indf2,w,c
  4175  000818  0BFC               	andlw	252
  4176  00081A  0D08               	mullw	8
  4177  00081C  50F3               	movf	prodl,w,c
  4178  00081E  1031               	iorwf	??_CAN_SendFrame,w,c
  4179  000820  6E62               	movwf	3938,c	;volatile
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;CAN.c: 280:     RXB0SIDLbits.EXID = 1;
  4183  000822  8662               	bsf	3938,3,c	;volatile
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;CAN.c: 281:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4187  000824  EE20 F006          	lfsr	2,6
  4188  000828  502F               	movf	CAN_SendFrame@message,w,c
  4189  00082A  26D9               	addwf	fsr2l,f,c
  4190  00082C  5030               	movf	CAN_SendFrame@message+1,w,c
  4191  00082E  22DA               	addwfc	fsr2h,f,c
  4192  000830  CFDE F031          	movff	postinc2,??_CAN_SendFrame
  4193  000834  CFDD F032          	movff	postdec2,??_CAN_SendFrame+1
  4194  000838  0E05               	movlw	5
  4195  00083A  6E33               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4196  00083C                     u2375:
  4197  00083C  90D8               	bcf	status,0,c
  4198  00083E  3232               	rrcf	??_CAN_SendFrame+1,f,c
  4199  000840  3231               	rrcf	??_CAN_SendFrame,f,c
  4200  000842  2E33               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4201  000844  D7FB               	goto	u2375
  4202  000846  5031               	movf	??_CAN_SendFrame,w,c
  4203  000848  6E61               	movwf	3937,c	;volatile
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;CAN.c: 283:     RXB0DLC = 0;
  4207  00084A  0E00               	movlw	0
  4208  00084C  6E65               	movwf	3941,c	;volatile
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;CAN.c: 285:     if(message->message_type==0x02)
  4212  00084E  EE20 F001          	lfsr	2,1
  4213  000852  502F               	movf	CAN_SendFrame@message,w,c
  4214  000854  26D9               	addwf	fsr2l,f,c
  4215  000856  5030               	movf	CAN_SendFrame@message+1,w,c
  4216  000858  22DA               	addwfc	fsr2h,f,c
  4217  00085A  0E02               	movlw	2
  4218  00085C  18DE               	xorwf	postinc2,w,c
  4219  00085E  A4D8               	btfss	status,2,c
  4220  000860  D002               	goto	l4157
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;CAN.c: 286:     {;CAN.c: 287:         RXB0DLCbits.RXRTR = 1;
  4224  000862  8C65               	bsf	3941,6,c	;volatile
  4225                           
  4226                           ;CAN.c: 288:     }
  4227  000864  D05A               	goto	l4161
  4228  000866                     l4157:
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;CAN.c: 290:     {;CAN.c: 291:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  4232  000866  EE20 F010          	lfsr	2,16
  4233  00086A  502F               	movf	CAN_SendFrame@message,w,c
  4234  00086C  26D9               	addwf	fsr2l,f,c
  4235  00086E  5030               	movf	CAN_SendFrame@message+1,w,c
  4236  000870  22DA               	addwfc	fsr2h,f,c
  4237  000872  50DF               	movf	indf2,w,c
  4238  000874  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4239  000876  0E0F               	movlw	15
  4240  000878  1631               	andwf	??_CAN_SendFrame,f,c
  4241  00087A  5065               	movf	3941,w,c	;volatile
  4242  00087C  1831               	xorwf	??_CAN_SendFrame,w,c
  4243  00087E  0BFE               	andlw	-2
  4244  000880  1831               	xorwf	??_CAN_SendFrame,w,c
  4245  000882  6E65               	movwf	3941,c	;volatile
  4246                           
  4247                           ;CAN.c: 292:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4248  000884  EE20 F010          	lfsr	2,16
  4249  000888  502F               	movf	CAN_SendFrame@message,w,c
  4250  00088A  26D9               	addwf	fsr2l,f,c
  4251  00088C  5030               	movf	CAN_SendFrame@message+1,w,c
  4252  00088E  22DA               	addwfc	fsr2h,f,c
  4253  000890  50DF               	movf	indf2,w,c
  4254  000892  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4255  000894  90D8               	bcf	status,0,c
  4256  000896  3231               	rrcf	??_CAN_SendFrame,f,c
  4257  000898  0E07               	movlw	7
  4258  00089A  1631               	andwf	??_CAN_SendFrame,f,c
  4259  00089C  4631               	rlncf	??_CAN_SendFrame,f,c
  4260  00089E  5065               	movf	3941,w,c	;volatile
  4261  0008A0  1831               	xorwf	??_CAN_SendFrame,w,c
  4262  0008A2  0BFD               	andlw	-3
  4263  0008A4  1831               	xorwf	??_CAN_SendFrame,w,c
  4264  0008A6  6E65               	movwf	3941,c	;volatile
  4265                           
  4266                           ;CAN.c: 293:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4267  0008A8  EE20 F010          	lfsr	2,16
  4268  0008AC  502F               	movf	CAN_SendFrame@message,w,c
  4269  0008AE  26D9               	addwf	fsr2l,f,c
  4270  0008B0  5030               	movf	CAN_SendFrame@message+1,w,c
  4271  0008B2  22DA               	addwfc	fsr2h,f,c
  4272  0008B4  50DF               	movf	indf2,w,c
  4273  0008B6  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4274  0008B8  90D8               	bcf	status,0,c
  4275  0008BA  3231               	rrcf	??_CAN_SendFrame,f,c
  4276  0008BC  90D8               	bcf	status,0,c
  4277  0008BE  3231               	rrcf	??_CAN_SendFrame,f,c
  4278  0008C0  0E03               	movlw	3
  4279  0008C2  1631               	andwf	??_CAN_SendFrame,f,c
  4280  0008C4  4631               	rlncf	??_CAN_SendFrame,f,c
  4281  0008C6  4631               	rlncf	??_CAN_SendFrame,f,c
  4282  0008C8  5065               	movf	3941,w,c	;volatile
  4283  0008CA  1831               	xorwf	??_CAN_SendFrame,w,c
  4284  0008CC  0BFB               	andlw	-5
  4285  0008CE  1831               	xorwf	??_CAN_SendFrame,w,c
  4286  0008D0  6E65               	movwf	3941,c	;volatile
  4287                           
  4288                           ;CAN.c: 294:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4289  0008D2  EE20 F010          	lfsr	2,16
  4290  0008D6  502F               	movf	CAN_SendFrame@message,w,c
  4291  0008D8  26D9               	addwf	fsr2l,f,c
  4292  0008DA  5030               	movf	CAN_SendFrame@message+1,w,c
  4293  0008DC  22DA               	addwfc	fsr2h,f,c
  4294  0008DE  50DF               	movf	indf2,w,c
  4295  0008E0  6E31               	movwf	??_CAN_SendFrame& (0+255),c
  4296  0008E2  90D8               	bcf	status,0,c
  4297  0008E4  3231               	rrcf	??_CAN_SendFrame,f,c
  4298  0008E6  90D8               	bcf	status,0,c
  4299  0008E8  3231               	rrcf	??_CAN_SendFrame,f,c
  4300  0008EA  90D8               	bcf	status,0,c
  4301  0008EC  3231               	rrcf	??_CAN_SendFrame,f,c
  4302  0008EE  0E01               	movlw	1
  4303  0008F0  1631               	andwf	??_CAN_SendFrame,f,c
  4304  0008F2  4631               	rlncf	??_CAN_SendFrame,f,c
  4305  0008F4  4631               	rlncf	??_CAN_SendFrame,f,c
  4306  0008F6  4631               	rlncf	??_CAN_SendFrame,f,c
  4307  0008F8  5065               	movf	3941,w,c	;volatile
  4308  0008FA  1831               	xorwf	??_CAN_SendFrame,w,c
  4309  0008FC  0BF7               	andlw	-9
  4310  0008FE  1831               	xorwf	??_CAN_SendFrame,w,c
  4311  000900  6E65               	movwf	3941,c	;volatile
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;CAN.c: 296:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4315  000902  0E66               	movlw	102
  4316  000904  6E2A               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4317  000906  0E0F               	movlw	15
  4318  000908  6E2B               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4319  00090A  0E08               	movlw	8
  4320  00090C  242F               	addwf	CAN_SendFrame@message,w,c
  4321  00090E  6E2C               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4322  000910  0E00               	movlw	0
  4323  000912  2030               	addwfc	CAN_SendFrame@message+1,w,c
  4324  000914  6E2D               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4325  000916  EC7C  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4326  00091A                     l4161:
  4327                           
  4328                           ;CAN.c: 299:     RXB0CONbits.FILHIT3 = 1;
  4329  00091A  8660               	bsf	3936,3,c	;volatile
  4330                           
  4331                           ;CAN.c: 301:     DetectorLedRadar.Flags.ramkaTx = 1;
  4332  00091C  0100               	movlb	0	; () banked
  4333  00091E  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4334                           
  4335                           ; BSR set to: 0
  4336  000920  0012               	return		;funcret
  4337  000922                     __end_of_CAN_SendFrame:
  4338                           	opt callstack 0
  4339                           
  4340 ;; *************** function _CAN_GenID *****************
  4341 ;; Defined at:
  4342 ;;		line 445 in file "CAN.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  message         2    5[COMRAM] PTR struct .
  4345 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4346 ;;  frameID         1    7[COMRAM] unsigned char 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4358 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4361 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4362 ;;Total ram usage:        5 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    3
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_FRAME_HandleCanFrame
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text33
  4373  001238                     __ptext33:
  4374                           	opt callstack 0
  4375  001238                     _CAN_GenID:
  4376                           	opt callstack 25
  4377                           
  4378                           ;CAN.c: 445: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 446: {;CAN.c: 448:     m
      +                          essage->frame_type = 0x03;
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;incstack = 0
  4382  001238  EE20 F002          	lfsr	2,2
  4383  00123C  502A               	movf	CAN_GenID@message,w,c
  4384  00123E  26D9               	addwf	fsr2l,f,c
  4385  001240  502B               	movf	CAN_GenID@message+1,w,c
  4386  001242  22DA               	addwfc	fsr2h,f,c
  4387  001244  0E03               	movlw	3
  4388  001246  6EDF               	movwf	indf2,c
  4389                           
  4390                           ;CAN.c: 449:     message->message_type = 0x01;
  4391  001248  EE20 F001          	lfsr	2,1
  4392  00124C  502A               	movf	CAN_GenID@message,w,c
  4393  00124E  26D9               	addwf	fsr2l,f,c
  4394  001250  502B               	movf	CAN_GenID@message+1,w,c
  4395  001252  22DA               	addwfc	fsr2h,f,c
  4396  001254  0E01               	movlw	1
  4397  001256  6EDF               	movwf	indf2,c
  4398                           
  4399                           ;CAN.c: 450:     message->id.w[1] = (WORD)frameID * (WORD)4;
  4400  001258  502C               	movf	CAN_GenID@frameID,w,c
  4401  00125A  6E2D               	movwf	??_CAN_GenID& (0+255),c
  4402  00125C  6A2E               	clrf	(??_CAN_GenID+1)& (0+255),c
  4403  00125E  90D8               	bcf	status,0,c
  4404  001260  362D               	rlcf	??_CAN_GenID,f,c
  4405  001262  362E               	rlcf	??_CAN_GenID+1,f,c
  4406  001264  90D8               	bcf	status,0,c
  4407  001266  362D               	rlcf	??_CAN_GenID,f,c
  4408  001268  362E               	rlcf	??_CAN_GenID+1,f,c
  4409  00126A  EE20 F006          	lfsr	2,6
  4410  00126E  502A               	movf	CAN_GenID@message,w,c
  4411  001270  26D9               	addwf	fsr2l,f,c
  4412  001272  502B               	movf	CAN_GenID@message+1,w,c
  4413  001274  22DA               	addwfc	fsr2h,f,c
  4414  001276  C02D  FFDE         	movff	??_CAN_GenID,postinc2
  4415  00127A  C02E  FFDD         	movff	??_CAN_GenID+1,postdec2
  4416                           
  4417                           ;CAN.c: 451:     message->id.w[0] = DaneCan.adresCAN;
  4418  00127E  EE20 F004          	lfsr	2,4
  4419  001282  502A               	movf	CAN_GenID@message,w,c
  4420  001284  26D9               	addwf	fsr2l,f,c
  4421  001286  502B               	movf	CAN_GenID@message+1,w,c
  4422  001288  22DA               	addwfc	fsr2h,f,c
  4423  00128A  C003  FFDE         	movff	_DaneCan+2,postinc2
  4424  00128E  C004  FFDD         	movff	_DaneCan+3,postdec2
  4425                           
  4426                           ;CAN.c: 454:     message ->id.bits.b16 = 0;
  4427  001292  EE20 F006          	lfsr	2,6
  4428  001296  502A               	movf	CAN_GenID@message,w,c
  4429  001298  26D9               	addwf	fsr2l,f,c
  4430  00129A  502B               	movf	CAN_GenID@message+1,w,c
  4431  00129C  22DA               	addwfc	fsr2h,f,c
  4432  00129E  90DF               	bcf	indf2,0,c
  4433                           
  4434                           ;CAN.c: 455:     message ->id.bits.b17 = 0;
  4435  0012A0  EE20 F006          	lfsr	2,6
  4436  0012A4  502A               	movf	CAN_GenID@message,w,c
  4437  0012A6  26D9               	addwf	fsr2l,f,c
  4438  0012A8  502B               	movf	CAN_GenID@message+1,w,c
  4439  0012AA  22DA               	addwfc	fsr2h,f,c
  4440  0012AC  92DF               	bcf	indf2,1,c
  4441  0012AE  0012               	return		;funcret
  4442  0012B0                     __end_of_CAN_GenID:
  4443                           	opt callstack 0
  4444                           
  4445 ;; *************** function _CAN_TakeFrame *****************
  4446 ;; Defined at:
  4447 ;;		line 310 in file "CAN.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  message         2   13[COMRAM] PTR struct .
  4450 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  k               1   18[COMRAM] unsigned char 
  4453 ;;  tempCON         1   17[COMRAM] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      enum E10433
  4456 ;; Registers used:
  4457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;Total ram usage:        6 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    4
  4470 ;; This function calls:
  4471 ;;		_CAN_MoveBuffIntoFrame
  4472 ;;		___awdiv
  4473 ;; This function is called by:
  4474 ;;		_TRM_DataTransmition
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text34
  4479  00032E                     __ptext34:
  4480                           	opt callstack 0
  4481  00032E                     _CAN_TakeFrame:
  4482                           	opt callstack 25
  4483                           
  4484                           ;CAN.c: 310: BOOL CAN_TakeFrame(mID * message);CAN.c: 311: {;CAN.c: 312:     BYTE k, tem
      +                          pCON;;CAN.c: 314:     k = CANCON&0x0F;
  4485                           
  4486                           ;incstack = 0
  4487  00032E  506F               	movf	3951,w,c	;volatile
  4488  000330  0B0F               	andlw	15
  4489  000332  6E37               	movwf	CAN_TakeFrame@k,c
  4490                           
  4491                           ;CAN.c: 316:     ECANCON = 0x90 | k;
  4492  000334  5037               	movf	CAN_TakeFrame@k,w,c
  4493  000336  0990               	iorlw	144
  4494  000338  6E77               	movwf	3959,c	;volatile
  4495                           
  4496                           ;CAN.c: 319:     switch(k)
  4497  00033A  D018               	goto	l4369
  4498  00033C                     l289:
  4499                           
  4500                           ;CAN.c: 322:             tempCON = RXB0CON;
  4501  00033C  CF60 F036          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4502                           
  4503                           ;CAN.c: 323:             break;
  4504  000340  D035               	goto	l290
  4505  000342                     l291:
  4506                           
  4507                           ;CAN.c: 325:             tempCON = RXB1CON;
  4508  000342  CF50 F036          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4509                           
  4510                           ;CAN.c: 326:             break;
  4511  000346  D032               	goto	l290
  4512  000348                     l292:
  4513                           
  4514                           ;CAN.c: 328:             tempCON = B0CON;
  4515  000348  CE20 F036          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4516                           
  4517                           ;CAN.c: 329:             break;
  4518  00034C  D02F               	goto	l290
  4519  00034E                     l293:
  4520                           
  4521                           ;CAN.c: 331:             tempCON = B1CON;
  4522  00034E  CE30 F036          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4523                           
  4524                           ;CAN.c: 332:             break;
  4525  000352  D02C               	goto	l290
  4526  000354                     l294:
  4527                           
  4528                           ;CAN.c: 334:             tempCON = B2CON;
  4529  000354  CE40 F036          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4530                           
  4531                           ;CAN.c: 335:             break;
  4532  000358  D029               	goto	l290
  4533  00035A                     l295:
  4534                           
  4535                           ;CAN.c: 337:             tempCON = B3CON;
  4536  00035A  CE50 F036          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4537                           
  4538                           ;CAN.c: 338:             break;
  4539  00035E  D026               	goto	l290
  4540  000360                     l296:
  4541                           
  4542                           ;CAN.c: 340:             tempCON = B4CON;
  4543  000360  CE60 F036          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4544                           
  4545                           ;CAN.c: 341:             break;
  4546  000364  D023               	goto	l290
  4547  000366                     l297:
  4548                           
  4549                           ;CAN.c: 343:             tempCON = B5CON;
  4550  000366  CE70 F036          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4551                           
  4552                           ;CAN.c: 344:             break;
  4553  00036A  D020               	goto	l290
  4554  00036C                     l4369:
  4555  00036C  5037               	movf	CAN_TakeFrame@k,w,c
  4556  00036E  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4557  000370  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4558                           
  4559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4560                           ; Switch size 1, requested type "simple"
  4561                           ; Number of cases is 1, Range of values is 0 to 0
  4562                           ; switch strategies available:
  4563                           ; Name         Instructions Cycles
  4564                           ; simple_byte            4     3 (average)
  4565                           ;	Chosen strategy is simple_byte
  4566  000372  5035               	movf	??_CAN_TakeFrame+1,w,c
  4567  000374  0A00               	xorlw	0	; case 0
  4568  000376  A4D8               	btfss	status,2,c
  4569  000378  D019               	goto	l290
  4570                           
  4571                           ; Switch size 1, requested type "simple"
  4572                           ; Number of cases is 8, Range of values is 0 to 7
  4573                           ; switch strategies available:
  4574                           ; Name         Instructions Cycles
  4575                           ; simple_byte           25    13 (average)
  4576                           ;	Chosen strategy is simple_byte
  4577  00037A  5034               	movf	??_CAN_TakeFrame,w,c
  4578  00037C  0A00               	xorlw	0	; case 0
  4579  00037E  B4D8               	btfsc	status,2,c
  4580  000380  D7DD               	goto	l289
  4581  000382  0A01               	xorlw	1	; case 1
  4582  000384  B4D8               	btfsc	status,2,c
  4583  000386  D7DD               	goto	l291
  4584  000388  0A03               	xorlw	3	; case 2
  4585  00038A  B4D8               	btfsc	status,2,c
  4586  00038C  D7DD               	goto	l292
  4587  00038E  0A01               	xorlw	1	; case 3
  4588  000390  B4D8               	btfsc	status,2,c
  4589  000392  D7DD               	goto	l293
  4590  000394  0A07               	xorlw	7	; case 4
  4591  000396  B4D8               	btfsc	status,2,c
  4592  000398  D7DD               	goto	l294
  4593  00039A  0A01               	xorlw	1	; case 5
  4594  00039C  B4D8               	btfsc	status,2,c
  4595  00039E  D7DD               	goto	l295
  4596  0003A0  0A03               	xorlw	3	; case 6
  4597  0003A2  B4D8               	btfsc	status,2,c
  4598  0003A4  D7DD               	goto	l296
  4599  0003A6  0A01               	xorlw	1	; case 7
  4600  0003A8  B4D8               	btfsc	status,2,c
  4601  0003AA  D7DD               	goto	l297
  4602  0003AC                     l290:
  4603                           
  4604                           ;CAN.c: 348:     if((tempCON & 0x80) > 0)
  4605  0003AC  AE36               	btfss	CAN_TakeFrame@tempCON,7,c
  4606  0003AE  D0A5               	goto	l4405
  4607                           
  4608                           ;CAN.c: 349:     {;CAN.c: 350:         message->buffer = RXB0CON & 0x1F;
  4609  0003B0  EE20 F003          	lfsr	2,3
  4610  0003B4  5032               	movf	CAN_TakeFrame@message,w,c
  4611  0003B6  26D9               	addwf	fsr2l,f,c
  4612  0003B8  5033               	movf	CAN_TakeFrame@message+1,w,c
  4613  0003BA  22DA               	addwfc	fsr2h,f,c
  4614  0003BC  5060               	movf	3936,w,c	;volatile
  4615  0003BE  0B1F               	andlw	31
  4616  0003C0  6EDF               	movwf	indf2,c
  4617                           
  4618                           ;CAN.c: 351:         message->id.v[0] = RXB0EIDL;
  4619  0003C2  EE20 F004          	lfsr	2,4
  4620  0003C6  5032               	movf	CAN_TakeFrame@message,w,c
  4621  0003C8  26D9               	addwf	fsr2l,f,c
  4622  0003CA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4623  0003CC  22DA               	addwfc	fsr2h,f,c
  4624  0003CE  CF64 FFDF          	movff	3940,indf2	;volatile
  4625                           
  4626                           ;CAN.c: 352:         message->id.v[1] = RXB0EIDH;
  4627  0003D2  EE20 F005          	lfsr	2,5
  4628  0003D6  5032               	movf	CAN_TakeFrame@message,w,c
  4629  0003D8  26D9               	addwf	fsr2l,f,c
  4630  0003DA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4631  0003DC  22DA               	addwfc	fsr2h,f,c
  4632  0003DE  CF63 FFDF          	movff	3939,indf2	;volatile
  4633                           
  4634                           ;CAN.c: 353:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4635  0003E2  EE20 F006          	lfsr	2,6
  4636  0003E6  5032               	movf	CAN_TakeFrame@message,w,c
  4637  0003E8  26D9               	addwf	fsr2l,f,c
  4638  0003EA  5033               	movf	CAN_TakeFrame@message+1,w,c
  4639  0003EC  22DA               	addwfc	fsr2h,f,c
  4640  0003EE  CF62 F034          	movff	3938,??_CAN_TakeFrame	;volatile
  4641  0003F2  0E03               	movlw	3
  4642  0003F4  1634               	andwf	??_CAN_TakeFrame,f,c
  4643  0003F6  CF62 F02A          	movff	3938,___awdiv@dividend	;volatile
  4644  0003FA  6A2B               	clrf	___awdiv@dividend+1,c
  4645  0003FC  0E00               	movlw	0
  4646  0003FE  6E2D               	movwf	___awdiv@divisor+1,c
  4647  000400  0E08               	movlw	8
  4648  000402  6E2C               	movwf	___awdiv@divisor,c
  4649  000404  EC9D  F008         	call	___awdiv	;wreg free
  4650  000408  502A               	movf	?___awdiv,w,c
  4651  00040A  1034               	iorwf	??_CAN_TakeFrame,w,c
  4652  00040C  6EDF               	movwf	indf2,c
  4653                           
  4654                           ;CAN.c: 354:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4655  00040E  5061               	movf	3937,w,c	;volatile
  4656  000410  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4657  000412  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4658  000414  0E05               	movlw	5
  4659  000416                     u2705:
  4660  000416  90D8               	bcf	status,0,c
  4661  000418  3634               	rlcf	??_CAN_TakeFrame,f,c
  4662  00041A  3635               	rlcf	??_CAN_TakeFrame+1,f,c
  4663  00041C  2EE8               	decfsz	wreg,f,c
  4664  00041E  D7FB               	goto	u2705
  4665  000420  EE20 F006          	lfsr	2,6
  4666  000424  5032               	movf	CAN_TakeFrame@message,w,c
  4667  000426  26D9               	addwf	fsr2l,f,c
  4668  000428  5033               	movf	CAN_TakeFrame@message+1,w,c
  4669  00042A  22DA               	addwfc	fsr2h,f,c
  4670  00042C  5034               	movf	??_CAN_TakeFrame,w,c
  4671  00042E  12DE               	iorwf	postinc2,f,c
  4672  000430  5035               	movf	??_CAN_TakeFrame+1,w,c
  4673  000432  12DD               	iorwf	postdec2,f,c
  4674                           
  4675                           ;CAN.c: 355:         message->frame_type=0x03;
  4676  000434  EE20 F002          	lfsr	2,2
  4677  000438  5032               	movf	CAN_TakeFrame@message,w,c
  4678  00043A  26D9               	addwf	fsr2l,f,c
  4679  00043C  5033               	movf	CAN_TakeFrame@message+1,w,c
  4680  00043E  22DA               	addwfc	fsr2h,f,c
  4681  000440  0E03               	movlw	3
  4682  000442  6EDF               	movwf	indf2,c
  4683                           
  4684                           ;CAN.c: 359:         if(RXB0DLCbits.RXRTR == 0)
  4685  000444  BC65               	btfsc	3941,6,c	;volatile
  4686  000446  D068               	goto	l4411
  4687                           
  4688                           ;CAN.c: 360:         {;CAN.c: 361:             message->message_type = 0x01;
  4689  000448  EE20 F001          	lfsr	2,1
  4690  00044C  5032               	movf	CAN_TakeFrame@message,w,c
  4691  00044E  26D9               	addwf	fsr2l,f,c
  4692  000450  5033               	movf	CAN_TakeFrame@message+1,w,c
  4693  000452  22DA               	addwfc	fsr2h,f,c
  4694  000454  0E01               	movlw	1
  4695  000456  6EDF               	movwf	indf2,c
  4696                           
  4697                           ;CAN.c: 362:             message->data_length= RXB0DLC & 0x0F;
  4698  000458  EE20 F010          	lfsr	2,16
  4699  00045C  5032               	movf	CAN_TakeFrame@message,w,c
  4700  00045E  26D9               	addwf	fsr2l,f,c
  4701  000460  5033               	movf	CAN_TakeFrame@message+1,w,c
  4702  000462  22DA               	addwfc	fsr2h,f,c
  4703  000464  5065               	movf	3941,w,c	;volatile
  4704  000466  0B0F               	andlw	15
  4705  000468  6EDF               	movwf	indf2,c
  4706                           
  4707                           ;CAN.c: 363:             if(message->data_length > 8)
  4708  00046A  EE20 F010          	lfsr	2,16
  4709  00046E  5032               	movf	CAN_TakeFrame@message,w,c
  4710  000470  26D9               	addwf	fsr2l,f,c
  4711  000472  5033               	movf	CAN_TakeFrame@message+1,w,c
  4712  000474  22DA               	addwfc	fsr2h,f,c
  4713  000476  0E08               	movlw	8
  4714  000478  64DF               	cpfsgt	indf2,c
  4715  00047A  D041               	goto	l4409
  4716  00047C  D01E               	goto	l4403
  4717  00047E                     l4385:
  4718                           
  4719                           ;CAN.c: 369:                         RXB0CON = 0;
  4720  00047E  0E00               	movlw	0
  4721  000480  6E60               	movwf	3936,c	;volatile
  4722                           
  4723                           ;CAN.c: 370:                         break;
  4724  000482  D03B               	goto	l4405
  4725  000484                     l4387:
  4726                           
  4727                           ;CAN.c: 372:                         RXB1CON = 0;
  4728  000484  0E00               	movlw	0
  4729  000486  010F               	movlb	15	; () banked
  4730  000488  D00E               	goto	L2
  4731  00048A                     l4389:
  4732                           
  4733                           ;CAN.c: 375:                         B0CON = 0;
  4734  00048A  0E00               	movlw	0
  4735  00048C  010E               	movlb	14	; () banked
  4736  00048E  6F20               	movwf	32,b	;volatile
  4737                           
  4738                           ;CAN.c: 376:                         break;
  4739  000490  D034               	goto	l4405
  4740  000492                     l4391:
  4741                           
  4742                           ;CAN.c: 378:                         B1CON = 0;
  4743  000492  0E00               	movlw	0
  4744  000494  010E               	movlb	14	; () banked
  4745  000496  6F30               	movwf	48,b	;volatile
  4746                           
  4747                           ;CAN.c: 379:                         break;
  4748  000498  D030               	goto	l4405
  4749  00049A                     l4393:
  4750                           
  4751                           ;CAN.c: 381:                         B2CON = 0;
  4752  00049A  0E00               	movlw	0
  4753  00049C  010E               	movlb	14	; () banked
  4754  00049E  6F40               	movwf	64,b	;volatile
  4755                           
  4756                           ;CAN.c: 382:                         break;
  4757  0004A0  D02C               	goto	l4405
  4758  0004A2                     l4395:
  4759                           
  4760                           ;CAN.c: 384:                         B3CON = 0;
  4761  0004A2  0E00               	movlw	0
  4762  0004A4  010E               	movlb	14	; () banked
  4763  0004A6                     L2:
  4764  0004A6  6F50               	movwf	80,b	;volatile
  4765                           
  4766                           ;CAN.c: 385:                         break;
  4767  0004A8  D028               	goto	l4405
  4768  0004AA                     l4397:
  4769                           
  4770                           ;CAN.c: 387:                         B4CON = 0;
  4771  0004AA  0E00               	movlw	0
  4772  0004AC  010E               	movlb	14	; () banked
  4773  0004AE  6F60               	movwf	96,b	;volatile
  4774                           
  4775                           ;CAN.c: 388:                         break;
  4776  0004B0  D024               	goto	l4405
  4777  0004B2                     l4399:
  4778                           
  4779                           ;CAN.c: 390:                         B5CON = 0;
  4780  0004B2  0E00               	movlw	0
  4781  0004B4  010E               	movlb	14	; () banked
  4782  0004B6  6F70               	movwf	112,b	;volatile
  4783                           
  4784                           ;CAN.c: 391:                         break;
  4785  0004B8  D020               	goto	l4405
  4786  0004BA                     l4403:
  4787  0004BA  5037               	movf	CAN_TakeFrame@k,w,c
  4788  0004BC  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4789  0004BE  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4790                           
  4791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4792                           ; Switch size 1, requested type "simple"
  4793                           ; Number of cases is 1, Range of values is 0 to 0
  4794                           ; switch strategies available:
  4795                           ; Name         Instructions Cycles
  4796                           ; simple_byte            4     3 (average)
  4797                           ;	Chosen strategy is simple_byte
  4798  0004C0  5035               	movf	??_CAN_TakeFrame+1,w,c
  4799  0004C2  0A00               	xorlw	0	; case 0
  4800  0004C4  A4D8               	btfss	status,2,c
  4801  0004C6  D019               	goto	l4405
  4802                           
  4803                           ; Switch size 1, requested type "simple"
  4804                           ; Number of cases is 8, Range of values is 0 to 7
  4805                           ; switch strategies available:
  4806                           ; Name         Instructions Cycles
  4807                           ; simple_byte           25    13 (average)
  4808                           ;	Chosen strategy is simple_byte
  4809  0004C8  5034               	movf	??_CAN_TakeFrame,w,c
  4810  0004CA  0A00               	xorlw	0	; case 0
  4811  0004CC  B4D8               	btfsc	status,2,c
  4812  0004CE  D7D7               	goto	l4385
  4813  0004D0  0A01               	xorlw	1	; case 1
  4814  0004D2  B4D8               	btfsc	status,2,c
  4815  0004D4  D7D7               	goto	l4387
  4816  0004D6  0A03               	xorlw	3	; case 2
  4817  0004D8  B4D8               	btfsc	status,2,c
  4818  0004DA  D7D7               	goto	l4389
  4819  0004DC  0A01               	xorlw	1	; case 3
  4820  0004DE  B4D8               	btfsc	status,2,c
  4821  0004E0  D7D8               	goto	l4391
  4822  0004E2  0A07               	xorlw	7	; case 4
  4823  0004E4  B4D8               	btfsc	status,2,c
  4824  0004E6  D7D9               	goto	l4393
  4825  0004E8  0A01               	xorlw	1	; case 5
  4826  0004EA  B4D8               	btfsc	status,2,c
  4827  0004EC  D7DA               	goto	l4395
  4828  0004EE  0A03               	xorlw	3	; case 6
  4829  0004F0  B4D8               	btfsc	status,2,c
  4830  0004F2  D7DB               	goto	l4397
  4831  0004F4  0A01               	xorlw	1	; case 7
  4832  0004F6  B4D8               	btfsc	status,2,c
  4833  0004F8  D7DC               	goto	l4399
  4834  0004FA                     l4405:
  4835                           
  4836                           ;CAN.c: 393:                 return FALSE;
  4837  0004FA  0E00               	movlw	0
  4838  0004FC  0012               	return	
  4839  0004FE                     l4409:
  4840                           
  4841                           ;CAN.c: 395:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4842  0004FE  0E08               	movlw	8
  4843  000500  2432               	addwf	CAN_TakeFrame@message,w,c
  4844  000502  6E2A               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4845  000504  0E00               	movlw	0
  4846  000506  2033               	addwfc	CAN_TakeFrame@message+1,w,c
  4847  000508  6E2B               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4848  00050A  0E66               	movlw	102
  4849  00050C  6E2C               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4850  00050E  0E0F               	movlw	15
  4851  000510  6E2D               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4852  000512  EC7C  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4853                           
  4854                           ;CAN.c: 396:         }
  4855  000516  D027               	goto	l4431
  4856  000518                     l4411:
  4857                           
  4858                           ;CAN.c: 399:         {;CAN.c: 400:             message->message_type=0x02;
  4859  000518  EE20 F001          	lfsr	2,1
  4860  00051C  5032               	movf	CAN_TakeFrame@message,w,c
  4861  00051E  26D9               	addwf	fsr2l,f,c
  4862  000520  5033               	movf	CAN_TakeFrame@message+1,w,c
  4863  000522  22DA               	addwfc	fsr2h,f,c
  4864  000524  0E02               	movlw	2
  4865  000526  6EDF               	movwf	indf2,c
  4866  000528  D01E               	goto	l4431
  4867  00052A                     l4413:
  4868                           
  4869                           ;CAN.c: 406:                 RXB0CON = 0;
  4870  00052A  0E00               	movlw	0
  4871  00052C  6E60               	movwf	3936,c	;volatile
  4872                           
  4873                           ;CAN.c: 407:                 break;
  4874  00052E  D03B               	goto	l4433
  4875  000530                     l4415:
  4876                           
  4877                           ;CAN.c: 409:                 RXB1CON = 0;
  4878  000530  0E00               	movlw	0
  4879  000532  010F               	movlb	15	; () banked
  4880  000534  D00E               	goto	L3
  4881  000536                     l4417:
  4882                           
  4883                           ;CAN.c: 412:                 B0CON = 0;
  4884  000536  0E00               	movlw	0
  4885  000538  010E               	movlb	14	; () banked
  4886  00053A  6F20               	movwf	32,b	;volatile
  4887                           
  4888                           ;CAN.c: 413:                 break;
  4889  00053C  D034               	goto	l4433
  4890  00053E                     l4419:
  4891                           
  4892                           ;CAN.c: 415:                 B1CON = 0;
  4893  00053E  0E00               	movlw	0
  4894  000540  010E               	movlb	14	; () banked
  4895  000542  6F30               	movwf	48,b	;volatile
  4896                           
  4897                           ;CAN.c: 416:                 break;
  4898  000544  D030               	goto	l4433
  4899  000546                     l4421:
  4900                           
  4901                           ;CAN.c: 418:                 B2CON = 0;
  4902  000546  0E00               	movlw	0
  4903  000548  010E               	movlb	14	; () banked
  4904  00054A  6F40               	movwf	64,b	;volatile
  4905                           
  4906                           ;CAN.c: 419:                 break;
  4907  00054C  D02C               	goto	l4433
  4908  00054E                     l4423:
  4909                           
  4910                           ;CAN.c: 421:                 B3CON = 0;
  4911  00054E  0E00               	movlw	0
  4912  000550  010E               	movlb	14	; () banked
  4913  000552                     L3:
  4914  000552  6F50               	movwf	80,b	;volatile
  4915                           
  4916                           ;CAN.c: 422:                 break;
  4917  000554  D028               	goto	l4433
  4918  000556                     l4425:
  4919                           
  4920                           ;CAN.c: 424:                 B4CON = 0;
  4921  000556  0E00               	movlw	0
  4922  000558  010E               	movlb	14	; () banked
  4923  00055A  6F60               	movwf	96,b	;volatile
  4924                           
  4925                           ;CAN.c: 425:                 break;
  4926  00055C  D024               	goto	l4433
  4927  00055E                     l4427:
  4928                           
  4929                           ;CAN.c: 427:                 B5CON = 0;
  4930  00055E  0E00               	movlw	0
  4931  000560  010E               	movlb	14	; () banked
  4932  000562  6F70               	movwf	112,b	;volatile
  4933                           
  4934                           ;CAN.c: 428:                 break;
  4935  000564  D020               	goto	l4433
  4936  000566                     l4431:
  4937  000566  5037               	movf	CAN_TakeFrame@k,w,c
  4938  000568  6E34               	movwf	??_CAN_TakeFrame& (0+255),c
  4939  00056A  6A35               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4940                           
  4941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4942                           ; Switch size 1, requested type "simple"
  4943                           ; Number of cases is 1, Range of values is 0 to 0
  4944                           ; switch strategies available:
  4945                           ; Name         Instructions Cycles
  4946                           ; simple_byte            4     3 (average)
  4947                           ;	Chosen strategy is simple_byte
  4948  00056C  5035               	movf	??_CAN_TakeFrame+1,w,c
  4949  00056E  0A00               	xorlw	0	; case 0
  4950  000570  A4D8               	btfss	status,2,c
  4951  000572  D019               	goto	l4433
  4952                           
  4953                           ; Switch size 1, requested type "simple"
  4954                           ; Number of cases is 8, Range of values is 0 to 7
  4955                           ; switch strategies available:
  4956                           ; Name         Instructions Cycles
  4957                           ; simple_byte           25    13 (average)
  4958                           ;	Chosen strategy is simple_byte
  4959  000574  5034               	movf	??_CAN_TakeFrame,w,c
  4960  000576  0A00               	xorlw	0	; case 0
  4961  000578  B4D8               	btfsc	status,2,c
  4962  00057A  D7D7               	goto	l4413
  4963  00057C  0A01               	xorlw	1	; case 1
  4964  00057E  B4D8               	btfsc	status,2,c
  4965  000580  D7D7               	goto	l4415
  4966  000582  0A03               	xorlw	3	; case 2
  4967  000584  B4D8               	btfsc	status,2,c
  4968  000586  D7D7               	goto	l4417
  4969  000588  0A01               	xorlw	1	; case 3
  4970  00058A  B4D8               	btfsc	status,2,c
  4971  00058C  D7D8               	goto	l4419
  4972  00058E  0A07               	xorlw	7	; case 4
  4973  000590  B4D8               	btfsc	status,2,c
  4974  000592  D7D9               	goto	l4421
  4975  000594  0A01               	xorlw	1	; case 5
  4976  000596  B4D8               	btfsc	status,2,c
  4977  000598  D7DA               	goto	l4423
  4978  00059A  0A03               	xorlw	3	; case 6
  4979  00059C  B4D8               	btfsc	status,2,c
  4980  00059E  D7DB               	goto	l4425
  4981  0005A0  0A01               	xorlw	1	; case 7
  4982  0005A2  B4D8               	btfsc	status,2,c
  4983  0005A4  D7DC               	goto	l4427
  4984  0005A6                     l4433:
  4985                           
  4986                           ;CAN.c: 430:         return TRUE;
  4987  0005A6  0E01               	movlw	1
  4988  0005A8  0012               	return		;funcret
  4989  0005AA                     __end_of_CAN_TakeFrame:
  4990                           	opt callstack 0
  4991                           
  4992 ;; *************** function ___awdiv *****************
  4993 ;; Defined at:
  4994 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  dividend        2    5[COMRAM] int 
  4997 ;;  divisor         2    7[COMRAM] int 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  quotient        2   11[COMRAM] int 
  5000 ;;  sign            1   10[COMRAM] unsigned char 
  5001 ;;  counter         1    9[COMRAM] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  2    5[COMRAM] int 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;Total ram usage:        8 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    3
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_CAN_TakeFrame
  5022 ;;		_FRAME_HandleCanFrame
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text35
  5027  00113A                     __ptext35:
  5028                           	opt callstack 0
  5029  00113A                     ___awdiv:
  5030                           	opt callstack 25
  5031                           
  5032                           ;incstack = 0
  5033  00113A  0E00               	movlw	0
  5034  00113C  6E2F               	movwf	___awdiv@sign,c
  5035  00113E  AE2D               	btfss	___awdiv@divisor+1,7,c
  5036  001140  D006               	goto	l4313
  5037  001142  6C2C               	negf	___awdiv@divisor,c
  5038  001144  1E2D               	comf	___awdiv@divisor+1,f,c
  5039  001146  B0D8               	btfsc	status,0,c
  5040  001148  2A2D               	incf	___awdiv@divisor+1,f,c
  5041  00114A  0E01               	movlw	1
  5042  00114C  6E2F               	movwf	___awdiv@sign,c
  5043  00114E                     l4313:
  5044  00114E  AE2B               	btfss	___awdiv@dividend+1,7,c
  5045  001150  D006               	goto	l4319
  5046  001152  6C2A               	negf	___awdiv@dividend,c
  5047  001154  1E2B               	comf	___awdiv@dividend+1,f,c
  5048  001156  B0D8               	btfsc	status,0,c
  5049  001158  2A2B               	incf	___awdiv@dividend+1,f,c
  5050  00115A  0E01               	movlw	1
  5051  00115C  1A2F               	xorwf	___awdiv@sign,f,c
  5052  00115E                     l4319:
  5053  00115E  0E00               	movlw	0
  5054  001160  6E31               	movwf	___awdiv@quotient+1,c
  5055  001162  0E00               	movlw	0
  5056  001164  6E30               	movwf	___awdiv@quotient,c
  5057  001166  502C               	movf	___awdiv@divisor,w,c
  5058  001168  102D               	iorwf	___awdiv@divisor+1,w,c
  5059  00116A  B4D8               	btfsc	status,2,c
  5060  00116C  D01C               	goto	l4341
  5061  00116E  0E01               	movlw	1
  5062  001170  6E2E               	movwf	___awdiv@counter,c
  5063  001172  D004               	goto	l4327
  5064  001174                     l4325:
  5065  001174  90D8               	bcf	status,0,c
  5066  001176  362C               	rlcf	___awdiv@divisor,f,c
  5067  001178  362D               	rlcf	___awdiv@divisor+1,f,c
  5068  00117A  2A2E               	incf	___awdiv@counter,f,c
  5069  00117C                     l4327:
  5070  00117C  AE2D               	btfss	___awdiv@divisor+1,7,c
  5071  00117E  D7FA               	goto	l4325
  5072  001180                     u2640:
  5073  001180  90D8               	bcf	status,0,c
  5074  001182  3630               	rlcf	___awdiv@quotient,f,c
  5075  001184  3631               	rlcf	___awdiv@quotient+1,f,c
  5076  001186  502C               	movf	___awdiv@divisor,w,c
  5077  001188  5C2A               	subwf	___awdiv@dividend,w,c
  5078  00118A  502D               	movf	___awdiv@divisor+1,w,c
  5079  00118C  582B               	subwfb	___awdiv@dividend+1,w,c
  5080  00118E  A0D8               	btfss	status,0,c
  5081  001190  D005               	goto	l4337
  5082  001192  502C               	movf	___awdiv@divisor,w,c
  5083  001194  5E2A               	subwf	___awdiv@dividend,f,c
  5084  001196  502D               	movf	___awdiv@divisor+1,w,c
  5085  001198  5A2B               	subwfb	___awdiv@dividend+1,f,c
  5086  00119A  8030               	bsf	___awdiv@quotient,0,c
  5087  00119C                     l4337:
  5088  00119C  90D8               	bcf	status,0,c
  5089  00119E  322D               	rrcf	___awdiv@divisor+1,f,c
  5090  0011A0  322C               	rrcf	___awdiv@divisor,f,c
  5091  0011A2  2E2E               	decfsz	___awdiv@counter,f,c
  5092  0011A4  D7ED               	goto	u2640
  5093  0011A6                     l4341:
  5094  0011A6  502F               	movf	___awdiv@sign,w,c
  5095  0011A8  B4D8               	btfsc	status,2,c
  5096  0011AA  D004               	goto	l4345
  5097  0011AC  6C30               	negf	___awdiv@quotient,c
  5098  0011AE  1E31               	comf	___awdiv@quotient+1,f,c
  5099  0011B0  B0D8               	btfsc	status,0,c
  5100  0011B2  2A31               	incf	___awdiv@quotient+1,f,c
  5101  0011B4                     l4345:
  5102  0011B4  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  5103  0011B8  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  5104  0011BC  0012               	return		;funcret
  5105  0011BE                     __end_of___awdiv:
  5106                           	opt callstack 0
  5107                           
  5108 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5109 ;; Defined at:
  5110 ;;		line 232 in file "CAN.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5113 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5114 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5115 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  i               1    9[COMRAM] unsigned char 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5127 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;Total ram usage:        5 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    3
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_CAN_SendFrame
  5138 ;;		_CAN_TakeFrame
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text36
  5143  0018F8                     __ptext36:
  5144                           	opt callstack 0
  5145  0018F8                     _CAN_MoveBuffIntoFrame:
  5146                           	opt callstack 24
  5147                           
  5148                           ;CAN.c: 232: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 233: {;CAN.c
      +                          : 234:     BYTE i;;CAN.c: 235:     for(i=0; i<8; ++i)
  5149                           
  5150                           ;incstack = 0
  5151  0018F8  0E00               	movlw	0
  5152  0018FA  6E2E               	movwf	CAN_MoveBuffIntoFrame@i,c
  5153  0018FC                     l3839:
  5154                           
  5155                           ;CAN.c: 236:     {;CAN.c: 237:         Ram[i]=(*(Buf+i));
  5156  0018FC  502E               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5157  0018FE  242C               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5158  001900  6ED9               	movwf	fsr2l,c
  5159  001902  0E00               	movlw	0
  5160  001904  202D               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5161  001906  6EDA               	movwf	fsr2h,c
  5162  001908  502E               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5163  00190A  242A               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5164  00190C  6EE1               	movwf	fsr1l,c
  5165  00190E  0E00               	movlw	0
  5166  001910  202B               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5167  001912  6EE2               	movwf	fsr1h,c
  5168  001914  CFDF FFE7          	movff	indf2,indf1
  5169                           
  5170                           ;CAN.c: 238:     }
  5171  001918  2A2E               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5172  00191A  0E07               	movlw	7
  5173  00191C  642E               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5174  00191E  D7EE               	goto	l3839
  5175  001920  0012               	return	
  5176  001922                     __end_of_CAN_MoveBuffIntoFrame:
  5177                           	opt callstack 0
  5178                           
  5179 ;; *************** function _TMR1_Update_flag_Set *****************
  5180 ;; Defined at:
  5181 ;;		line 32 in file "TMR1.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  a               2    5[COMRAM] unsigned int 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		None
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;Total ram usage:        2 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    3
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_main
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text37
  5210  001A5E                     __ptext37:
  5211                           	opt callstack 0
  5212  001A5E                     _TMR1_Update_flag_Set:
  5213                           	opt callstack 27
  5214                           
  5215                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5216                           
  5217                           ;incstack = 0
  5218  001A5E  C02A  F00B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5219  001A62  C02B  F00C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5220  001A66  0012               	return		;funcret
  5221  001A68                     __end_of_TMR1_Update_flag_Set:
  5222                           	opt callstack 0
  5223                           
  5224 ;; *************** function _TMR1_Update_flag_Get *****************
  5225 ;; Defined at:
  5226 ;;		line 47 in file "TMR1.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  2    5[COMRAM] unsigned int 
  5233 ;; Registers used:
  5234 ;;		None
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5244 ;;Total ram usage:        2 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    3
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_main
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text38
  5255  001A68                     __ptext38:
  5256                           	opt callstack 0
  5257  001A68                     _TMR1_Update_flag_Get:
  5258                           	opt callstack 27
  5259                           
  5260                           ;TMR1.c: 49:     return TMR1_Update_flag;
  5261                           
  5262                           ;incstack = 0
  5263  001A68  C00B  F02A         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5264  001A6C  C00C  F02B         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5265  001A70  0012               	return		;funcret
  5266  001A72                     __end_of_TMR1_Update_flag_Get:
  5267                           	opt callstack 0
  5268                           
  5269 ;; *************** function _LED_Update *****************
  5270 ;; Defined at:
  5271 ;;		line 105 in file "LED.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;		None
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      unsigned char 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;Total ram usage:        0 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    5
  5292 ;; This function calls:
  5293 ;;		_LED_Control
  5294 ;;		_LED_Left
  5295 ;;		_LED_Light_Pos
  5296 ;;		_LED_Right
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text39
  5303  0011BE                     __ptext39:
  5304                           	opt callstack 0
  5305  0011BE                     _LED_Update:
  5306                           	opt callstack 25
  5307                           
  5308                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  5309                           
  5310                           ;incstack = 0
  5311  0011BE  5014               	movf	_LOCK,w,c
  5312  0011C0  A4D8               	btfss	status,2,c
  5313  0011C2  D013               	goto	l4565
  5314                           
  5315                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  5316  0011C4  0E00               	movlw	0
  5317  0011C6  6E2B               	movwf	LED_Control@diode+1,c
  5318  0011C8  0E00               	movlw	0
  5319  0011CA  6E2A               	movwf	LED_Control@diode,c
  5320  0011CC  0E00               	movlw	0
  5321  0011CE  EC91  F004         	call	_LED_Control
  5322                           
  5323                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5324  0011D2  C041  F031         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5325  0011D6  C042  F032         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5326  0011DA  C045  F033         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5327  0011DE  C046  F034         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5328  0011E2  5047               	movf	LED_Update@Green,w,c
  5329  0011E4  ECAB  F007         	call	_LED_Light_Pos
  5330                           
  5331                           ;LED.c: 117:     }
  5332  0011E8  D012               	goto	l384
  5333  0011EA                     l4565:
  5334                           
  5335                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  5336  0011EA  0E00               	movlw	0
  5337  0011EC  6E2B               	movwf	LED_Control@diode+1,c
  5338  0011EE  0E00               	movlw	0
  5339  0011F0  6E2A               	movwf	LED_Control@diode,c
  5340  0011F2  5047               	movf	LED_Update@Green,w,c
  5341  0011F4  EC91  F004         	call	_LED_Control
  5342                           
  5343                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5344  0011F8  C043  F031         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5345  0011FC  C044  F032         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5346  001200  C045  F033         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5347  001204  C046  F034         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5348  001208  0E00               	movlw	0
  5349  00120A  ECAB  F007         	call	_LED_Light_Pos
  5350  00120E                     l384:
  5351                           
  5352                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  5353  00120E  C043  F02A         	movff	LED_Update@pos1,LED_Right@a
  5354  001212  C044  F02B         	movff	LED_Update@pos1+1,LED_Right@a+1
  5355  001216  EC2B  F00B         	call	_LED_Right	;wreg free
  5356  00121A  C02A  F043         	movff	?_LED_Right,LED_Update@pos1
  5357  00121E  C02B  F044         	movff	?_LED_Right+1,LED_Update@pos1+1
  5358                           
  5359                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  5360  001222  C041  F02A         	movff	LED_Update@pos2,LED_Left@a
  5361  001226  C042  F02B         	movff	LED_Update@pos2+1,LED_Left@a+1
  5362  00122A  EC51  F00B         	call	_LED_Left	;wreg free
  5363  00122E  C02A  F041         	movff	?_LED_Left,LED_Update@pos2
  5364  001232  C02B  F042         	movff	?_LED_Left+1,LED_Update@pos2+1
  5365  001236  0012               	return		;funcret
  5366  001238                     __end_of_LED_Update:
  5367                           	opt callstack 0
  5368                           
  5369 ;; *************** function _LED_Light_Pos *****************
  5370 ;; Defined at:
  5371 ;;		line 196 in file "LED.c"
  5372 ;; Parameters:    Size  Location     Type
  5373 ;;  color           1    wreg     enum E10644
  5374 ;;  pos             2   12[COMRAM] unsigned int 
  5375 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  color           1   16[COMRAM] enum E10644
  5378 ;;  flage           2   21[COMRAM] unsigned int 
  5379 ;;  pos2            2   19[COMRAM] unsigned int 
  5380 ;;  LED_array       2   17[COMRAM] unsigned int 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2   12[COMRAM] unsigned int 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5393 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;Total ram usage:       11 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    4
  5397 ;; This function calls:
  5398 ;;		_LED_Control
  5399 ;;		_LED_Left
  5400 ;;		_LED_Right
  5401 ;;		___lwdiv
  5402 ;; This function is called by:
  5403 ;;		_LED_Update
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text40
  5408  000F56                     __ptext40:
  5409                           	opt callstack 0
  5410  000F56                     _LED_Light_Pos:
  5411                           	opt callstack 25
  5412                           
  5413                           ;incstack = 0
  5414                           ;LED_Light_Pos@color stored from wreg
  5415  000F56  6E35               	movwf	LED_Light_Pos@color,c
  5416                           
  5417                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  5418  000F58  C031  F038         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5419  000F5C  C032  F039         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5420                           
  5421                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  5422  000F60  0E00               	movlw	0
  5423  000F62  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5424  000F64  0E00               	movlw	0
  5425  000F66  6E36               	movwf	LED_Light_Pos@LED_array,c
  5426                           
  5427                           ;LED.c: 200:     UINT flage = fulfillment/10;
  5428  000F68  C033  F02A         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5429  000F6C  C034  F02B         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5430  000F70  0E00               	movlw	0
  5431  000F72  6E2D               	movwf	___lwdiv@divisor+1,c
  5432  000F74  0E0A               	movlw	10
  5433  000F76  6E2C               	movwf	___lwdiv@divisor,c
  5434  000F78  ECB5  F00A         	call	___lwdiv	;wreg free
  5435  000F7C  C02A  F03A         	movff	?___lwdiv,LED_Light_Pos@flage
  5436  000F80  C02B  F03B         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5437                           
  5438                           ;LED.c: 201:     if(color == RED)
  5439  000F84  5035               	movf	LED_Light_Pos@color,w,c
  5440  000F86  B4D8               	btfsc	status,2,c
  5441  000F88  D017               	goto	l4471
  5442  000F8A  D031               	goto	l4479
  5443  000F8C                     l4465:
  5444                           
  5445                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5446  000F8C  5036               	movf	LED_Light_Pos@LED_array,w,c
  5447  000F8E  1038               	iorwf	LED_Light_Pos@pos2,w,c
  5448  000F90  6E36               	movwf	LED_Light_Pos@LED_array,c
  5449  000F92  5037               	movf	LED_Light_Pos@LED_array+1,w,c
  5450  000F94  1039               	iorwf	LED_Light_Pos@pos2+1,w,c
  5451  000F96  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5452                           
  5453                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5454  000F98  C038  F02A         	movff	LED_Light_Pos@pos2,LED_Left@a
  5455  000F9C  C039  F02B         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5456  000FA0  EC51  F00B         	call	_LED_Left	;wreg free
  5457  000FA4  C02A  F038         	movff	?_LED_Left,LED_Light_Pos@pos2
  5458  000FA8  C02B  F039         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5459                           
  5460                           ;LED.c: 207:             flage = flage - 1;
  5461  000FAC  0EFF               	movlw	255
  5462  000FAE  243A               	addwf	LED_Light_Pos@flage,w,c
  5463  000FB0  6E3A               	movwf	LED_Light_Pos@flage,c
  5464  000FB2  0EFF               	movlw	255
  5465  000FB4  203B               	addwfc	LED_Light_Pos@flage+1,w,c
  5466  000FB6  6E3B               	movwf	LED_Light_Pos@flage+1,c
  5467  000FB8                     l4471:
  5468                           
  5469                           ;LED.c: 203:         while(flage>0)
  5470  000FB8  503A               	movf	LED_Light_Pos@flage,w,c
  5471  000FBA  103B               	iorwf	LED_Light_Pos@flage+1,w,c
  5472  000FBC  B4D8               	btfsc	status,2,c
  5473  000FBE  D01B               	goto	u2750
  5474  000FC0  D7E5               	goto	l4465
  5475  000FC2                     l4473:
  5476                           
  5477                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5478  000FC2  5036               	movf	LED_Light_Pos@LED_array,w,c
  5479  000FC4  1038               	iorwf	LED_Light_Pos@pos2,w,c
  5480  000FC6  6E36               	movwf	LED_Light_Pos@LED_array,c
  5481  000FC8  5037               	movf	LED_Light_Pos@LED_array+1,w,c
  5482  000FCA  1039               	iorwf	LED_Light_Pos@pos2+1,w,c
  5483  000FCC  6E37               	movwf	LED_Light_Pos@LED_array+1,c
  5484                           
  5485                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5486  000FCE  C038  F02A         	movff	LED_Light_Pos@pos2,LED_Right@a
  5487  000FD2  C039  F02B         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5488  000FD6  EC2B  F00B         	call	_LED_Right	;wreg free
  5489  000FDA  C02A  F038         	movff	?_LED_Right,LED_Light_Pos@pos2
  5490  000FDE  C02B  F039         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5491                           
  5492                           ;LED.c: 216:             flage = flage - 1;
  5493  000FE2  0EFF               	movlw	255
  5494  000FE4  243A               	addwf	LED_Light_Pos@flage,w,c
  5495  000FE6  6E3A               	movwf	LED_Light_Pos@flage,c
  5496  000FE8  0EFF               	movlw	255
  5497  000FEA  203B               	addwfc	LED_Light_Pos@flage+1,w,c
  5498  000FEC  6E3B               	movwf	LED_Light_Pos@flage+1,c
  5499  000FEE                     l4479:
  5500                           
  5501                           ;LED.c: 212:         while(flage>0)
  5502  000FEE  503A               	movf	LED_Light_Pos@flage,w,c
  5503  000FF0  103B               	iorwf	LED_Light_Pos@flage+1,w,c
  5504  000FF2  A4D8               	btfss	status,2,c
  5505  000FF4  D7E6               	goto	l4473
  5506  000FF6                     u2750:
  5507                           
  5508                           ;LED.c: 219:     LED_Control(color, LED_array);
  5509  000FF6  C036  F02A         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5510  000FFA  C037  F02B         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5511  000FFE  5035               	movf	LED_Light_Pos@color,w,c
  5512  001000  EC91  F004         	call	_LED_Control
  5513  001004  0012               	return		;funcret
  5514  001006                     __end_of_LED_Light_Pos:
  5515                           	opt callstack 0
  5516                           
  5517 ;; *************** function ___lwdiv *****************
  5518 ;; Defined at:
  5519 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  dividend        2    5[COMRAM] unsigned int 
  5522 ;;  divisor         2    7[COMRAM] unsigned int 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  quotient        2   10[COMRAM] unsigned int 
  5525 ;;  counter         1    9[COMRAM] unsigned char 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  2    5[COMRAM] unsigned int 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;Total ram usage:        7 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    3
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_LED_Light_Pos
  5546 ;;		_FRAME_Plot
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text41
  5551  00156A                     __ptext41:
  5552                           	opt callstack 0
  5553  00156A                     ___lwdiv:
  5554                           	opt callstack 24
  5555                           
  5556                           ;incstack = 0
  5557  00156A  0E00               	movlw	0
  5558  00156C  6E30               	movwf	___lwdiv@quotient+1,c
  5559  00156E  0E00               	movlw	0
  5560  001570  6E2F               	movwf	___lwdiv@quotient,c
  5561  001572  502C               	movf	___lwdiv@divisor,w,c
  5562  001574  102D               	iorwf	___lwdiv@divisor+1,w,c
  5563  001576  B4D8               	btfsc	status,2,c
  5564  001578  D01C               	goto	l1427
  5565  00157A  0E01               	movlw	1
  5566  00157C  6E2E               	movwf	___lwdiv@counter,c
  5567  00157E  D004               	goto	l4073
  5568  001580                     l4071:
  5569  001580  90D8               	bcf	status,0,c
  5570  001582  362C               	rlcf	___lwdiv@divisor,f,c
  5571  001584  362D               	rlcf	___lwdiv@divisor+1,f,c
  5572  001586  2A2E               	incf	___lwdiv@counter,f,c
  5573  001588                     l4073:
  5574  001588  AE2D               	btfss	___lwdiv@divisor+1,7,c
  5575  00158A  D7FA               	goto	l4071
  5576  00158C                     u2310:
  5577  00158C  90D8               	bcf	status,0,c
  5578  00158E  362F               	rlcf	___lwdiv@quotient,f,c
  5579  001590  3630               	rlcf	___lwdiv@quotient+1,f,c
  5580  001592  502C               	movf	___lwdiv@divisor,w,c
  5581  001594  5C2A               	subwf	___lwdiv@dividend,w,c
  5582  001596  502D               	movf	___lwdiv@divisor+1,w,c
  5583  001598  582B               	subwfb	___lwdiv@dividend+1,w,c
  5584  00159A  A0D8               	btfss	status,0,c
  5585  00159C  D005               	goto	l4083
  5586  00159E  502C               	movf	___lwdiv@divisor,w,c
  5587  0015A0  5E2A               	subwf	___lwdiv@dividend,f,c
  5588  0015A2  502D               	movf	___lwdiv@divisor+1,w,c
  5589  0015A4  5A2B               	subwfb	___lwdiv@dividend+1,f,c
  5590  0015A6  802F               	bsf	___lwdiv@quotient,0,c
  5591  0015A8                     l4083:
  5592  0015A8  90D8               	bcf	status,0,c
  5593  0015AA  322D               	rrcf	___lwdiv@divisor+1,f,c
  5594  0015AC  322C               	rrcf	___lwdiv@divisor,f,c
  5595  0015AE  2E2E               	decfsz	___lwdiv@counter,f,c
  5596  0015B0  D7ED               	goto	u2310
  5597  0015B2                     l1427:
  5598  0015B2  C02F  F02A         	movff	___lwdiv@quotient,?___lwdiv
  5599  0015B6  C030  F02B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5600  0015BA  0012               	return		;funcret
  5601  0015BC                     __end_of___lwdiv:
  5602                           	opt callstack 0
  5603                           
  5604 ;; *************** function _LED_Right *****************
  5605 ;; Defined at:
  5606 ;;		line 140 in file "LED.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  a               2    5[COMRAM] unsigned int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  b               2    9[COMRAM] unsigned int 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  2    5[COMRAM] unsigned int 
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;Total ram usage:        6 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    3
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_LED_Update
  5631 ;;		_LED_Light_Pos
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text42
  5636  001656                     __ptext42:
  5637                           	opt callstack 0
  5638  001656                     _LED_Right:
  5639                           	opt callstack 26
  5640                           
  5641                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5642                           
  5643                           ;incstack = 0
  5644  001656  A02A               	btfss	LED_Right@a,0,c
  5645  001658  D018               	goto	l3133
  5646                           
  5647                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5648  00165A  0EFE               	movlw	254
  5649  00165C  142A               	andwf	LED_Right@a,w,c
  5650  00165E  6E2E               	movwf	LED_Right@b,c
  5651  001660  0E03               	movlw	3
  5652  001662  142B               	andwf	LED_Right@a+1,w,c
  5653  001664  6E2F               	movwf	LED_Right@b+1,c
  5654                           
  5655                           ;LED.c: 145:         b = b >> 1;
  5656  001666  90D8               	bcf	status,0,c
  5657  001668  302F               	rrcf	LED_Right@b+1,w,c
  5658  00166A  6E2C               	movwf	??_LED_Right& (0+255),c
  5659  00166C  302E               	rrcf	LED_Right@b,w,c
  5660  00166E  6E2E               	movwf	LED_Right@b,c
  5661  001670  C02C  F02F         	movff	??_LED_Right,LED_Right@b+1
  5662                           
  5663                           ;LED.c: 146:         b = b | 0b1000000000;
  5664  001674  0E00               	movlw	0
  5665  001676  102E               	iorwf	LED_Right@b,w,c
  5666  001678  6E2E               	movwf	LED_Right@b,c
  5667  00167A  0E02               	movlw	2
  5668  00167C  102F               	iorwf	LED_Right@b+1,w,c
  5669  00167E  6E2F               	movwf	LED_Right@b+1,c
  5670                           
  5671                           ;LED.c: 147:         return b;
  5672  001680  C02E  F02A         	movff	LED_Right@b,?_LED_Right
  5673  001684  C02F  F02B         	movff	LED_Right@b+1,?_LED_Right+1
  5674  001688  0012               	return	
  5675  00168A                     l3133:
  5676                           
  5677                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5678  00168A  90D8               	bcf	status,0,c
  5679  00168C  302B               	rrcf	LED_Right@a+1,w,c
  5680  00168E  6E2C               	movwf	??_LED_Right& (0+255),c
  5681  001690  302A               	rrcf	LED_Right@a,w,c
  5682  001692  6E2A               	movwf	LED_Right@a,c
  5683  001694  C02C  F02B         	movff	??_LED_Right,LED_Right@a+1
  5684                           
  5685                           ;LED.c: 152:         return a;
  5686  001698  C02A  F02A         	movff	LED_Right@a,?_LED_Right
  5687  00169C  C02B  F02B         	movff	LED_Right@a+1,?_LED_Right+1
  5688  0016A0  0012               	return		;funcret
  5689  0016A2                     __end_of_LED_Right:
  5690                           	opt callstack 0
  5691                           
  5692 ;; *************** function _LED_Left *****************
  5693 ;; Defined at:
  5694 ;;		line 167 in file "LED.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  a               2    5[COMRAM] unsigned int 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  b               2    7[COMRAM] unsigned int 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  2    5[COMRAM] unsigned int 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;Total ram usage:        4 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    3
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_LED_Update
  5719 ;;		_LED_Light_Pos
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text43
  5724  0016A2                     __ptext43:
  5725                           	opt callstack 0
  5726  0016A2                     _LED_Left:
  5727                           	opt callstack 25
  5728                           
  5729                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5730                           
  5731                           ;incstack = 0
  5732  0016A2  A22B               	btfss	LED_Left@a+1,1,c
  5733  0016A4  D015               	goto	l3149
  5734                           
  5735                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5736  0016A6  0EFF               	movlw	255
  5737  0016A8  142A               	andwf	LED_Left@a,w,c
  5738  0016AA  6E2C               	movwf	LED_Left@b,c
  5739  0016AC  0E01               	movlw	1
  5740  0016AE  142B               	andwf	LED_Left@a+1,w,c
  5741  0016B0  6E2D               	movwf	LED_Left@b+1,c
  5742                           
  5743                           ;LED.c: 172:         b = b << 1;
  5744  0016B2  90D8               	bcf	status,0,c
  5745  0016B4  342C               	rlcf	LED_Left@b,w,c
  5746  0016B6  6E2C               	movwf	LED_Left@b,c
  5747  0016B8  342D               	rlcf	LED_Left@b+1,w,c
  5748  0016BA  6E2D               	movwf	LED_Left@b+1,c
  5749                           
  5750                           ;LED.c: 173:         b = b | 0b0000000001;
  5751  0016BC  0E01               	movlw	1
  5752  0016BE  102C               	iorwf	LED_Left@b,w,c
  5753  0016C0  6E2C               	movwf	LED_Left@b,c
  5754  0016C2  502D               	movf	LED_Left@b+1,w,c
  5755  0016C4  6E2D               	movwf	LED_Left@b+1,c
  5756                           
  5757                           ;LED.c: 174:         return b;
  5758  0016C6  C02C  F02A         	movff	LED_Left@b,?_LED_Left
  5759  0016CA  C02D  F02B         	movff	LED_Left@b+1,?_LED_Left+1
  5760  0016CE  0012               	return	
  5761  0016D0                     l3149:
  5762                           
  5763                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5764  0016D0  90D8               	bcf	status,0,c
  5765  0016D2  342A               	rlcf	LED_Left@a,w,c
  5766  0016D4  6E2A               	movwf	LED_Left@a,c
  5767  0016D6  342B               	rlcf	LED_Left@a+1,w,c
  5768  0016D8  6E2B               	movwf	LED_Left@a+1,c
  5769                           
  5770                           ;LED.c: 179:         return a;
  5771  0016DA  C02A  F02A         	movff	LED_Left@a,?_LED_Left
  5772  0016DE  C02B  F02B         	movff	LED_Left@a+1,?_LED_Left+1
  5773  0016E2  0012               	return		;funcret
  5774  0016E4                     __end_of_LED_Left:
  5775                           	opt callstack 0
  5776                           
  5777 ;; *************** function _INI_All *****************
  5778 ;; Defined at:
  5779 ;;		line 54 in file "INI.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;Total ram usage:        0 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    6
  5800 ;; This function calls:
  5801 ;;		_CAN_Setup
  5802 ;;		_INI_GlobalInterrupt
  5803 ;;		_INI_LED_Start
  5804 ;;		_INI_OUTPUT
  5805 ;;		_INI_Timer
  5806 ;;		_NVMInit
  5807 ;;		_ReadDataToEEPROM
  5808 ;; This function is called by:
  5809 ;;		_main
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text44
  5814  00196E                     __ptext44:
  5815                           	opt callstack 0
  5816  00196E                     _INI_All:
  5817                           	opt callstack 24
  5818                           
  5819                           ;INI.c: 57:     WDTCONbits.SWDTEN = 1;
  5820                           
  5821                           ;incstack = 0
  5822  00196E  80D1               	bsf	4049,0,c	;volatile
  5823                           
  5824                           ;INI.c: 60:     NVMInit();
  5825  001970  EC72  F00B         	call	_NVMInit	;wreg free
  5826                           
  5827                           ;INI.c: 62:     ReadDataToEEPROM();
  5828  001974  ECD5  F006         	call	_ReadDataToEEPROM	;wreg free
  5829  001978  0004               	clrwdt		;# 
  5830                           
  5831                           ;INI.c: 66:     INI_OUTPUT();
  5832  00197A  ECC8  F00C         	call	_INI_OUTPUT	;wreg free
  5833                           
  5834                           ;INI.c: 68:     CAN_Setup();
  5835  00197E  ECFD  F009         	call	_CAN_Setup	;wreg free
  5836                           
  5837                           ;INI.c: 69:     INI_GlobalInterrupt();
  5838  001982  EC03  F00D         	call	_INI_GlobalInterrupt	;wreg free
  5839                           
  5840                           ;INI.c: 71:     INI_Timer();
  5841  001986  ECE7  F00C         	call	_INI_Timer	;wreg free
  5842                           
  5843                           ;INI.c: 73:     INI_LED_Start();
  5844  00198A  EC4A  F00C         	call	_INI_LED_Start	;wreg free
  5845  00198E  0012               	return		;funcret
  5846  001990                     __end_of_INI_All:
  5847                           	opt callstack 0
  5848                           
  5849 ;; *************** function _ReadDataToEEPROM *****************
  5850 ;; Defined at:
  5851 ;;		line 404 in file "FRAME.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;Total ram usage:        0 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    5
  5872 ;; This function calls:
  5873 ;;		_NVMRead
  5874 ;; This function is called by:
  5875 ;;		_INI_All
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text45
  5880  000DAA                     __ptext45:
  5881                           	opt callstack 0
  5882  000DAA                     _ReadDataToEEPROM:
  5883                           	opt callstack 24
  5884                           
  5885                           ;FRAME.c: 406:     NVMRead(&NeightAdress1,4,2);
  5886                           
  5887                           ;incstack = 0
  5888  000DAA  0E4A               	movlw	low _NeightAdress1
  5889  000DAC  6E2C               	movwf	NVMRead@dest,c
  5890  000DAE  0E00               	movlw	high _NeightAdress1
  5891  000DB0  6E2D               	movwf	NVMRead@dest+1,c
  5892  000DB2  0E00               	movlw	0
  5893  000DB4  6E2F               	movwf	NVMRead@addr+1,c
  5894  000DB6  0E04               	movlw	4
  5895  000DB8  6E2E               	movwf	NVMRead@addr,c
  5896  000DBA  0E00               	movlw	0
  5897  000DBC  6E31               	movwf	NVMRead@count+1,c
  5898  000DBE  0E02               	movlw	2
  5899  000DC0  6E30               	movwf	NVMRead@count,c
  5900  000DC2  EC30  F00C         	call	_NVMRead	;wreg free
  5901                           
  5902                           ;FRAME.c: 407:     NVMRead(&NeightAdress2,7,2);
  5903  000DC6  0E48               	movlw	low _NeightAdress2
  5904  000DC8  6E2C               	movwf	NVMRead@dest,c
  5905  000DCA  0E00               	movlw	high _NeightAdress2
  5906  000DCC  6E2D               	movwf	NVMRead@dest+1,c
  5907  000DCE  0E00               	movlw	0
  5908  000DD0  6E2F               	movwf	NVMRead@addr+1,c
  5909  000DD2  0E07               	movlw	7
  5910  000DD4  6E2E               	movwf	NVMRead@addr,c
  5911  000DD6  0E00               	movlw	0
  5912  000DD8  6E31               	movwf	NVMRead@count+1,c
  5913  000DDA  0E02               	movlw	2
  5914  000DDC  6E30               	movwf	NVMRead@count,c
  5915  000DDE  EC30  F00C         	call	_NVMRead	;wreg free
  5916                           
  5917                           ;FRAME.c: 408:     NVMRead(&NeightAdress3,10,2);
  5918  000DE2  0E23               	movlw	low _NeightAdress3
  5919  000DE4  6E2C               	movwf	NVMRead@dest,c
  5920  000DE6  0E00               	movlw	high _NeightAdress3
  5921  000DE8  6E2D               	movwf	NVMRead@dest+1,c
  5922  000DEA  0E00               	movlw	0
  5923  000DEC  6E2F               	movwf	NVMRead@addr+1,c
  5924  000DEE  0E0A               	movlw	10
  5925  000DF0  6E2E               	movwf	NVMRead@addr,c
  5926  000DF2  0E00               	movlw	0
  5927  000DF4  6E31               	movwf	NVMRead@count+1,c
  5928  000DF6  0E02               	movlw	2
  5929  000DF8  6E30               	movwf	NVMRead@count,c
  5930  000DFA  EC30  F00C         	call	_NVMRead	;wreg free
  5931                           
  5932                           ;FRAME.c: 409:     NVMRead(&NeightAdress4,13,2);
  5933  000DFE  0E21               	movlw	low _NeightAdress4
  5934  000E00  6E2C               	movwf	NVMRead@dest,c
  5935  000E02  0E00               	movlw	high _NeightAdress4
  5936  000E04  6E2D               	movwf	NVMRead@dest+1,c
  5937  000E06  0E00               	movlw	0
  5938  000E08  6E2F               	movwf	NVMRead@addr+1,c
  5939  000E0A  0E0D               	movlw	13
  5940  000E0C  6E2E               	movwf	NVMRead@addr,c
  5941  000E0E  0E00               	movlw	0
  5942  000E10  6E31               	movwf	NVMRead@count+1,c
  5943  000E12  0E02               	movlw	2
  5944  000E14  6E30               	movwf	NVMRead@count,c
  5945  000E16  EC30  F00C         	call	_NVMRead	;wreg free
  5946                           
  5947                           ;FRAME.c: 410:     NVMRead(&NeightAdress5,16,2);
  5948  000E1A  0E1F               	movlw	low _NeightAdress5
  5949  000E1C  6E2C               	movwf	NVMRead@dest,c
  5950  000E1E  0E00               	movlw	high _NeightAdress5
  5951  000E20  6E2D               	movwf	NVMRead@dest+1,c
  5952  000E22  0E00               	movlw	0
  5953  000E24  6E2F               	movwf	NVMRead@addr+1,c
  5954  000E26  0E10               	movlw	16
  5955  000E28  6E2E               	movwf	NVMRead@addr,c
  5956  000E2A  0E00               	movlw	0
  5957  000E2C  6E31               	movwf	NVMRead@count+1,c
  5958  000E2E  0E02               	movlw	2
  5959  000E30  6E30               	movwf	NVMRead@count,c
  5960  000E32  EC30  F00C         	call	_NVMRead	;wreg free
  5961                           
  5962                           ;FRAME.c: 411:     NVMRead(&NeightAdress6,19,2);
  5963  000E36  0E1D               	movlw	low _NeightAdress6
  5964  000E38  6E2C               	movwf	NVMRead@dest,c
  5965  000E3A  0E00               	movlw	high _NeightAdress6
  5966  000E3C  6E2D               	movwf	NVMRead@dest+1,c
  5967  000E3E  0E00               	movlw	0
  5968  000E40  6E2F               	movwf	NVMRead@addr+1,c
  5969  000E42  0E13               	movlw	19
  5970  000E44  6E2E               	movwf	NVMRead@addr,c
  5971  000E46  0E00               	movlw	0
  5972  000E48  6E31               	movwf	NVMRead@count+1,c
  5973  000E4A  0E02               	movlw	2
  5974  000E4C  6E30               	movwf	NVMRead@count,c
  5975  000E4E  EC30  F00C         	call	_NVMRead	;wreg free
  5976                           
  5977                           ;FRAME.c: 412:     NVMRead(&NeightAdress7,22,2);
  5978  000E52  0E1B               	movlw	low _NeightAdress7
  5979  000E54  6E2C               	movwf	NVMRead@dest,c
  5980  000E56  0E00               	movlw	high _NeightAdress7
  5981  000E58  6E2D               	movwf	NVMRead@dest+1,c
  5982  000E5A  0E00               	movlw	0
  5983  000E5C  6E2F               	movwf	NVMRead@addr+1,c
  5984  000E5E  0E16               	movlw	22
  5985  000E60  6E2E               	movwf	NVMRead@addr,c
  5986  000E62  0E00               	movlw	0
  5987  000E64  6E31               	movwf	NVMRead@count+1,c
  5988  000E66  0E02               	movlw	2
  5989  000E68  6E30               	movwf	NVMRead@count,c
  5990  000E6A  EC30  F00C         	call	_NVMRead	;wreg free
  5991                           
  5992                           ;FRAME.c: 413:     NVMRead(&NeightAdress8,25,2);
  5993  000E6E  0E19               	movlw	low _NeightAdress8
  5994  000E70  6E2C               	movwf	NVMRead@dest,c
  5995  000E72  0E00               	movlw	high _NeightAdress8
  5996  000E74  6E2D               	movwf	NVMRead@dest+1,c
  5997  000E76  0E00               	movlw	0
  5998  000E78  6E2F               	movwf	NVMRead@addr+1,c
  5999  000E7A  0E19               	movlw	25
  6000  000E7C  6E2E               	movwf	NVMRead@addr,c
  6001  000E7E  0E00               	movlw	0
  6002  000E80  6E31               	movwf	NVMRead@count+1,c
  6003  000E82  0E02               	movlw	2
  6004  000E84  6E30               	movwf	NVMRead@count,c
  6005  000E86  EC30  F00C         	call	_NVMRead	;wreg free
  6006  000E8A  0012               	return		;funcret
  6007  000E8C                     __end_of_ReadDataToEEPROM:
  6008                           	opt callstack 0
  6009                           
  6010 ;; *************** function _NVMRead *****************
  6011 ;; Defined at:
  6012 ;;		line 79 in file "EEPROM.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6015 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  6016 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  6017 ;;  addr            2    9[COMRAM] unsigned short 
  6018 ;;  count           2   11[COMRAM] unsigned short 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6030 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;Total ram usage:        6 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    4
  6037 ;; This function calls:
  6038 ;;		_ReadfromEEPROM
  6039 ;; This function is called by:
  6040 ;;		_ReadDataToEEPROM
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text46
  6045  001860                     __ptext46:
  6046                           	opt callstack 0
  6047  001860                     _NVMRead:
  6048                           	opt callstack 24
  6049                           
  6050                           ;EEPROM.c: 79: void NVMRead(BYTE *dest, WORD addr, WORD count);EEPROM.c: 80: {;EEPROM.c:
      +                           81:     while( count > 0 )
  6051                           
  6052                           ;incstack = 0
  6053  001860  D014               	goto	l3261
  6054  001862                     l920:
  6055  001862  B2A6               	btfsc	4006,1,c	;volsfr
  6056  001864  D7FE               	goto	l920
  6057                           
  6058                           ;EEPROM.c: 84:         *dest++ = ReadfromEEPROM(addr++);
  6059  001866  C02E  F02A         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6060  00186A  C02F  F02B         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6061  00186E  ECF3  F00C         	call	_ReadfromEEPROM	;wreg free
  6062  001872  C02C  FFD9         	movff	NVMRead@dest,fsr2l
  6063  001876  C02D  FFDA         	movff	NVMRead@dest+1,fsr2h
  6064  00187A  6EDF               	movwf	indf2,c
  6065  00187C  4A2E               	infsnz	NVMRead@addr,f,c
  6066  00187E  2A2F               	incf	NVMRead@addr+1,f,c
  6067  001880  4A2C               	infsnz	NVMRead@dest,f,c
  6068  001882  2A2D               	incf	NVMRead@dest+1,f,c
  6069                           
  6070                           ;EEPROM.c: 85:         count--;
  6071  001884  0630               	decf	NVMRead@count,f,c
  6072  001886  A0D8               	btfss	status,0,c
  6073  001888  0631               	decf	NVMRead@count+1,f,c
  6074  00188A                     l3261:
  6075                           
  6076                           ;EEPROM.c: 81:     while( count > 0 )
  6077  00188A  5030               	movf	NVMRead@count,w,c
  6078  00188C  1031               	iorwf	NVMRead@count+1,w,c
  6079  00188E  B4D8               	btfsc	status,2,c
  6080  001890  0012               	return	
  6081  001892  D7E7               	goto	l920
  6082  001894                     __end_of_NVMRead:
  6083                           	opt callstack 0
  6084                           
  6085 ;; *************** function _ReadfromEEPROM *****************
  6086 ;; Defined at:
  6087 ;;		line 45 in file "EEPROM.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  Address         2    5[COMRAM] unsigned short 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      unsigned char 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;Total ram usage:        2 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    3
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		_NVMRead
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text47
  6116  0019E6                     __ptext47:
  6117                           	opt callstack 0
  6118  0019E6                     _ReadfromEEPROM:
  6119                           	opt callstack 24
  6120                           
  6121                           ;EEPROM.c: 45: static BYTE ReadfromEEPROM(WORD Address);EEPROM.c: 46: {;EEPROM.c: 47:   
      +                            EEADRH = (BYTE)(Address>>8);
  6122                           
  6123                           ;incstack = 0
  6124  0019E6  502B               	movf	ReadfromEEPROM@Address+1,w,c
  6125  0019E8  6EAA               	movwf	4010,c	;volatile
  6126                           
  6127                           ;EEPROM.c: 48:     EEADR = (BYTE)Address;
  6128  0019EA  C02A  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6129                           
  6130                           ;EEPROM.c: 49:     EECON1bits.RD = 1;
  6131  0019EE  80A6               	bsf	4006,0,c	;volsfr
  6132                           
  6133                           ;EEPROM.c: 50:     EECON1bits.EEPGD = 0;
  6134  0019F0  9EA6               	bcf	4006,7,c	;volsfr
  6135                           
  6136                           ;EEPROM.c: 51:     EECON1bits.CFGS = 0;
  6137  0019F2  9CA6               	bcf	4006,6,c	;volsfr
  6138                           
  6139                           ;EEPROM.c: 52:     return EEDATA;
  6140  0019F4  50A8               	movf	4008,w,c	;volatile
  6141  0019F6  0012               	return		;funcret
  6142  0019F8                     __end_of_ReadfromEEPROM:
  6143                           	opt callstack 0
  6144                           
  6145 ;; *************** function _NVMInit *****************
  6146 ;; Defined at:
  6147 ;;		line 26 in file "EEPROM.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;		None
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  result          1   11[COMRAM] enum E10433
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      enum E10433
  6154 ;; Registers used:
  6155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;Total ram usage:        1 bytes
  6166 ;; Hardware stack levels used:    1
  6167 ;; Hardware stack levels required when called:    4
  6168 ;; This function calls:
  6169 ;;		_NVMalloc
  6170 ;; This function is called by:
  6171 ;;		_INI_All
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text48
  6176  0016E4                     __ptext48:
  6177                           	opt callstack 0
  6178  0016E4                     _NVMInit:
  6179                           	opt callstack 25
  6180                           
  6181                           ;EEPROM.c: 28:     BOOL result = TRUE;
  6182                           
  6183                           ;incstack = 0
  6184  0016E4  0E01               	movlw	1
  6185  0016E6  6E30               	movwf	NVMInit@result,c
  6186                           
  6187                           ;EEPROM.c: 30:     nextEEPosition = 0;
  6188  0016E8  0E00               	movlw	0
  6189  0016EA  6E06               	movwf	_nextEEPosition+1,c
  6190  0016EC  0E00               	movlw	0
  6191  0016EE  6E05               	movwf	_nextEEPosition,c
  6192                           
  6193                           ;EEPROM.c: 32:     result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6194  0016F0  0E00               	movlw	0
  6195  0016F2  6E2B               	movwf	NVMalloc@size+1,c
  6196  0016F4  0E03               	movlw	3
  6197  0016F6  6E2A               	movwf	NVMalloc@size,c
  6198  0016F8  0E17               	movlw	low _ustawieniaKarty
  6199  0016FA  6E2C               	movwf	NVMalloc@location,c
  6200  0016FC  0E00               	movlw	high _ustawieniaKarty
  6201  0016FE  6E2D               	movwf	NVMalloc@location+1,c
  6202  001700  ECFB  F00B         	call	_NVMalloc	;wreg free
  6203  001704  1630               	andwf	NVMInit@result,f,c
  6204                           
  6205                           ;EEPROM.c: 33:     result &= NVMalloc(8*sizeof(NeightAdress1), &neighborsAdress);
  6206  001706  0E00               	movlw	0
  6207  001708  6E2B               	movwf	NVMalloc@size+1,c
  6208  00170A  0E10               	movlw	16
  6209  00170C  6E2A               	movwf	NVMalloc@size,c
  6210  00170E  0E15               	movlw	low _neighborsAdress
  6211  001710  6E2C               	movwf	NVMalloc@location,c
  6212  001712  0E00               	movlw	high _neighborsAdress
  6213  001714  6E2D               	movwf	NVMalloc@location+1,c
  6214  001716  ECFB  F00B         	call	_NVMalloc	;wreg free
  6215  00171A  1630               	andwf	NVMInit@result,f,c
  6216  00171C  0012               	return		;funcret
  6217  00171E                     __end_of_NVMInit:
  6218                           	opt callstack 0
  6219                           
  6220 ;; *************** function _NVMalloc *****************
  6221 ;; Defined at:
  6222 ;;		line 11 in file "EEPROM.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  size            2    5[COMRAM] unsigned short 
  6225 ;;  location        2    7[COMRAM] PTR unsigned short 
  6226 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      enum E10433
  6231 ;; Registers used:
  6232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;Total ram usage:        6 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; Hardware stack levels required when called:    3
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_NVMInit
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text49
  6253  0017F6                     __ptext49:
  6254                           	opt callstack 0
  6255  0017F6                     _NVMalloc:
  6256                           	opt callstack 25
  6257                           
  6258                           ;EEPROM.c: 11: BOOL NVMalloc(WORD size, WORD *location);EEPROM.c: 12: {;EEPROM.c: 15:   
      +                            if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6259                           
  6260                           ;incstack = 0
  6261  0017F6  502A               	movf	NVMalloc@size,w,c
  6262  0017F8  2405               	addwf	_nextEEPosition,w,c
  6263  0017FA  6E2E               	movwf	??_NVMalloc& (0+255),c
  6264  0017FC  502B               	movf	NVMalloc@size+1,w,c
  6265  0017FE  2006               	addwfc	_nextEEPosition+1,w,c
  6266  001800  6E2F               	movwf	(??_NVMalloc+1)& (0+255),c
  6267  001802  042E               	decf	??_NVMalloc,w,c
  6268  001804  0E04               	movlw	4
  6269  001806  582F               	subwfb	??_NVMalloc+1,w,c
  6270  001808  A0D8               	btfss	status,0,c
  6271  00180A  D002               	goto	l3307
  6272                           
  6273                           ;EEPROM.c: 16:     {;EEPROM.c: 17:         return FALSE;
  6274  00180C  0E00               	movlw	0
  6275  00180E  0012               	return	
  6276  001810                     l3307:
  6277                           
  6278                           ;EEPROM.c: 20:     *location = nextEEPosition;
  6279  001810  C02C  FFD9         	movff	NVMalloc@location,fsr2l
  6280  001814  C02D  FFDA         	movff	NVMalloc@location+1,fsr2h
  6281  001818  C005  FFDE         	movff	_nextEEPosition,postinc2
  6282  00181C  C006  FFDD         	movff	_nextEEPosition+1,postdec2
  6283                           
  6284                           ;EEPROM.c: 21:     nextEEPosition += size;
  6285  001820  502A               	movf	NVMalloc@size,w,c
  6286  001822  2605               	addwf	_nextEEPosition,f,c
  6287  001824  502B               	movf	NVMalloc@size+1,w,c
  6288  001826  2206               	addwfc	_nextEEPosition+1,f,c
  6289                           
  6290                           ;EEPROM.c: 22:     return TRUE;
  6291  001828  0E01               	movlw	1
  6292  00182A  0012               	return		;funcret
  6293  00182C                     __end_of_NVMalloc:
  6294                           	opt callstack 0
  6295                           
  6296 ;; *************** function _INI_Timer *****************
  6297 ;; Defined at:
  6298 ;;		line 92 in file "TMR1.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      unsigned char 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;Total ram usage:        0 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    3
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_INI_All
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text50
  6327  0019CE                     __ptext50:
  6328                           	opt callstack 0
  6329  0019CE                     _INI_Timer:
  6330                           	opt callstack 26
  6331                           
  6332                           ;TMR1.c: 96:     IRCF2 = 1;
  6333                           
  6334                           ;incstack = 0
  6335  0019CE  8CD3               	bsf	4051,6,c	;volatile
  6336                           
  6337                           ;TMR1.c: 97:     IRCF1 = 1;
  6338  0019D0  8AD3               	bsf	4051,5,c	;volatile
  6339                           
  6340                           ;TMR1.c: 98:     IRCF0 = 1;
  6341  0019D2  88D3               	bsf	4051,4,c	;volatile
  6342                           
  6343                           ;TMR1.c: 99:     T1CON = 0b00111101;
  6344  0019D4  0E3D               	movlw	61
  6345  0019D6  6ECD               	movwf	4045,c	;volatile
  6346                           
  6347                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6348  0019D8  0E9E               	movlw	158
  6349  0019DA  6ECF               	movwf	4047,c	;volatile
  6350                           
  6351                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6352  0019DC  0E57               	movlw	87
  6353  0019DE  6ECE               	movwf	4046,c	;volatile
  6354                           
  6355                           ;TMR1.c: 102:     TMR1IE=1;
  6356  0019E0  809D               	bsf	3997,0,c	;volatile
  6357                           
  6358                           ;TMR1.c: 103:     TMR1ON = 1;
  6359  0019E2  80CD               	bsf	4045,0,c	;volatile
  6360  0019E4  0012               	return		;funcret
  6361  0019E6                     __end_of_INI_Timer:
  6362                           	opt callstack 0
  6363                           
  6364 ;; *************** function _INI_OUTPUT *****************
  6365 ;; Defined at:
  6366 ;;		line 29 in file "INI.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;		None
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, status,2
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;Total ram usage:        0 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    3
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_INI_All
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text51
  6395  001990                     __ptext51:
  6396                           	opt callstack 0
  6397  001990                     _INI_OUTPUT:
  6398                           	opt callstack 26
  6399                           
  6400                           ;INI.c: 33:     LATA = 0;
  6401                           
  6402                           ;incstack = 0
  6403  001990  0E00               	movlw	0
  6404  001992  6E89               	movwf	3977,c	;volatile
  6405                           
  6406                           ;INI.c: 34:     LATB = 0;
  6407  001994  0E00               	movlw	0
  6408  001996  6E8A               	movwf	3978,c	;volatile
  6409                           
  6410                           ;INI.c: 35:     LATC = 0;
  6411  001998  0E00               	movlw	0
  6412  00199A  6E8B               	movwf	3979,c	;volatile
  6413                           
  6414                           ;INI.c: 36:     TRISA = 0x0C;
  6415  00199C  0E0C               	movlw	12
  6416  00199E  6E92               	movwf	3986,c	;volatile
  6417                           
  6418                           ;INI.c: 37:     TRISB = 0b10001000;
  6419  0019A0  0E88               	movlw	136
  6420  0019A2  6E93               	movwf	3987,c	;volatile
  6421                           
  6422                           ;INI.c: 38:     TRISC = 0xBF;
  6423  0019A4  0EBF               	movlw	191
  6424  0019A6  6E94               	movwf	3988,c	;volatile
  6425                           
  6426                           ;INI.c: 39:     RCONbits.IPEN = 1;
  6427  0019A8  8ED0               	bsf	4048,7,c	;volatile
  6428                           
  6429                           ;INI.c: 42:     DetectorLedRadar.Flags.inicjalizacja = 1;
  6430  0019AA  0100               	movlb	0	; () banked
  6431  0019AC  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6432                           
  6433                           ; BSR set to: 0
  6434  0019AE  0012               	return		;funcret
  6435  0019B0                     __end_of_INI_OUTPUT:
  6436                           	opt callstack 0
  6437                           
  6438 ;; *************** function _INI_LED_Start *****************
  6439 ;; Defined at:
  6440 ;;		line 231 in file "LED.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;		None
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;		None
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      void 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;Total ram usage:        0 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    4
  6461 ;; This function calls:
  6462 ;;		_LED_Control
  6463 ;; This function is called by:
  6464 ;;		_INI_All
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text52
  6469  001894                     __ptext52:
  6470                           	opt callstack 0
  6471  001894                     _INI_LED_Start:
  6472                           	opt callstack 25
  6473                           
  6474                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;incstack = 0
  6478  001894  5092               	movf	3986,w,c	;volatile
  6479  001896  0B01               	andlw	1
  6480  001898  6E92               	movwf	3986,c	;volatile
  6481                           
  6482                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  6483  00189A  5093               	movf	3987,w,c	;volatile
  6484  00189C  0BFC               	andlw	252
  6485  00189E  6E93               	movwf	3987,c	;volatile
  6486                           
  6487                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  6488  0018A0  5096               	movf	3990,w,c	;volatile
  6489  0018A2  0BF8               	andlw	248
  6490  0018A4  6E96               	movwf	3990,c	;volatile
  6491                           
  6492                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  6493  0018A6  0E00               	movlw	0
  6494  0018A8  6E95               	movwf	3989,c	;volatile
  6495                           
  6496                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  6497  0018AA  0E00               	movlw	0
  6498  0018AC  6E2B               	movwf	LED_Control@diode+1,c
  6499  0018AE  0E00               	movlw	0
  6500  0018B0  6E2A               	movwf	LED_Control@diode,c
  6501  0018B2  0E00               	movlw	0
  6502  0018B4  EC91  F004         	call	_LED_Control
  6503                           
  6504                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  6505  0018B8  0E00               	movlw	0
  6506  0018BA  6E2B               	movwf	LED_Control@diode+1,c
  6507  0018BC  0E00               	movlw	0
  6508  0018BE  6E2A               	movwf	LED_Control@diode,c
  6509  0018C0  0E01               	movlw	1
  6510  0018C2  EC91  F004         	call	_LED_Control
  6511  0018C6  0012               	return		;funcret
  6512  0018C8                     __end_of_INI_LED_Start:
  6513                           	opt callstack 0
  6514                           
  6515 ;; *************** function _LED_Control *****************
  6516 ;; Defined at:
  6517 ;;		line 256 in file "LED.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  color           1    wreg     enum E10644
  6520 ;;  diode           2    5[COMRAM] unsigned int 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  color           1    9[COMRAM] enum E10644
  6523 ;;  cos             2    0        unsigned int 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      unsigned char 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6534 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;Total ram usage:        5 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    3
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_LED_Error
  6544 ;;		_LED_Update
  6545 ;;		_LED_Light_Pos
  6546 ;;		_INI_LED_Start
  6547 ;;		_LED_Clear
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text53
  6552  000922                     __ptext53:
  6553                           	opt callstack 0
  6554  000922                     _LED_Control:
  6555                           	opt callstack 24
  6556                           
  6557                           ;incstack = 0
  6558                           ;LED_Control@color stored from wreg
  6559  000922  6E2E               	movwf	LED_Control@color,c
  6560                           
  6561                           ;LED.c: 259:     if(color == RED)
  6562  000924  502E               	movf	LED_Control@color,w,c
  6563  000926  A4D8               	btfss	status,2,c
  6564  000928  D050               	goto	l412
  6565                           
  6566                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  6567  00092A  A02A               	btfss	LED_Control@diode,0,c
  6568  00092C  D003               	goto	l3853
  6569                           
  6570                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  6571  00092E  508C               	movf	3980,w,c	;volatile
  6572  000930  0910               	iorlw	16
  6573  000932  D002               	goto	L4
  6574  000934                     l3853:
  6575                           
  6576                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  6577  000934  508C               	movf	3980,w,c	;volatile
  6578  000936  0BEF               	andlw	239
  6579  000938                     L4:
  6580  000938  6E8C               	movwf	3980,c	;volatile
  6581                           
  6582                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  6583  00093A  A22A               	btfss	LED_Control@diode,1,c
  6584  00093C  D003               	goto	l3859
  6585                           
  6586                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  6587  00093E  508C               	movf	3980,w,c	;volatile
  6588  000940  0940               	iorlw	64
  6589  000942  D002               	goto	L5
  6590  000944                     l3859:
  6591                           
  6592                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  6593  000944  508C               	movf	3980,w,c	;volatile
  6594  000946  0BBF               	andlw	191
  6595  000948                     L5:
  6596  000948  6E8C               	movwf	3980,c	;volatile
  6597                           
  6598                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  6599  00094A  A42A               	btfss	LED_Control@diode,2,c
  6600  00094C  D003               	goto	l3865
  6601                           
  6602                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  6603  00094E  508A               	movf	3978,w,c	;volatile
  6604  000950  0901               	iorlw	1
  6605  000952  D002               	goto	L6
  6606  000954                     l3865:
  6607                           
  6608                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  6609  000954  508A               	movf	3978,w,c	;volatile
  6610  000956  0BFE               	andlw	254
  6611  000958                     L6:
  6612  000958  6E8A               	movwf	3978,c	;volatile
  6613                           
  6614                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  6615  00095A  A62A               	btfss	LED_Control@diode,3,c
  6616  00095C  D003               	goto	l3871
  6617                           
  6618                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  6619  00095E  5089               	movf	3977,w,c	;volatile
  6620  000960  0902               	iorlw	2
  6621  000962  D002               	goto	L7
  6622  000964                     l3871:
  6623                           
  6624                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  6625  000964  5089               	movf	3977,w,c	;volatile
  6626  000966  0BFD               	andlw	253
  6627  000968                     L7:
  6628  000968  6E89               	movwf	3977,c	;volatile
  6629                           
  6630                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  6631  00096A  A82A               	btfss	LED_Control@diode,4,c
  6632  00096C  D003               	goto	l3877
  6633                           
  6634                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  6635  00096E  5089               	movf	3977,w,c	;volatile
  6636  000970  0908               	iorlw	8
  6637  000972  D002               	goto	L8
  6638  000974                     l3877:
  6639                           
  6640                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  6641  000974  5089               	movf	3977,w,c	;volatile
  6642  000976  0BF7               	andlw	247
  6643  000978                     L8:
  6644  000978  6E89               	movwf	3977,c	;volatile
  6645                           
  6646                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  6647  00097A  AA2A               	btfss	LED_Control@diode,5,c
  6648  00097C  D003               	goto	l3883
  6649                           
  6650                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  6651  00097E  5089               	movf	3977,w,c	;volatile
  6652  000980  0920               	iorlw	32
  6653  000982  D002               	goto	L9
  6654  000984                     l3883:
  6655                           
  6656                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  6657  000984  5089               	movf	3977,w,c	;volatile
  6658  000986  0BDF               	andlw	223
  6659  000988                     L9:
  6660  000988  6E89               	movwf	3977,c	;volatile
  6661                           
  6662                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  6663  00098A  AC2A               	btfss	LED_Control@diode,6,c
  6664  00098C  D003               	goto	l3889
  6665                           
  6666                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  6667  00098E  508D               	movf	3981,w,c	;volatile
  6668  000990  0902               	iorlw	2
  6669  000992  D002               	goto	L10
  6670  000994                     l3889:
  6671                           
  6672                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  6673  000994  508D               	movf	3981,w,c	;volatile
  6674  000996  0BFD               	andlw	253
  6675  000998                     L10:
  6676  000998  6E8D               	movwf	3981,c	;volatile
  6677                           
  6678                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  6679  00099A  AE2A               	btfss	LED_Control@diode,7,c
  6680  00099C  D003               	goto	l3895
  6681                           
  6682                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  6683  00099E  5089               	movf	3977,w,c	;volatile
  6684  0009A0  0980               	iorlw	128
  6685  0009A2  D002               	goto	L11
  6686  0009A4                     l3895:
  6687                           
  6688                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  6689  0009A4  5089               	movf	3977,w,c	;volatile
  6690  0009A6  0B7F               	andlw	127
  6691  0009A8                     L11:
  6692  0009A8  6E89               	movwf	3977,c	;volatile
  6693                           
  6694                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  6695  0009AA  A02B               	btfss	LED_Control@diode+1,0,c
  6696  0009AC  D003               	goto	l3901
  6697                           
  6698                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  6699  0009AE  508C               	movf	3980,w,c	;volatile
  6700  0009B0  0901               	iorlw	1
  6701  0009B2  D002               	goto	L12
  6702  0009B4                     l3901:
  6703                           
  6704                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  6705  0009B4  508C               	movf	3980,w,c	;volatile
  6706  0009B6  0BFE               	andlw	254
  6707  0009B8                     L12:
  6708  0009B8  6E8C               	movwf	3980,c	;volatile
  6709                           
  6710                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  6711  0009BA  A22B               	btfss	LED_Control@diode+1,1,c
  6712  0009BC  D003               	goto	l3907
  6713                           
  6714                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  6715  0009BE  508C               	movf	3980,w,c	;volatile
  6716  0009C0  0904               	iorlw	4
  6717  0009C2  D002               	goto	L13
  6718  0009C4                     l3907:
  6719                           
  6720                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  6721  0009C4  508C               	movf	3980,w,c	;volatile
  6722  0009C6  0BFB               	andlw	251
  6723  0009C8                     L13:
  6724  0009C8  6E8C               	movwf	3980,c	;volatile
  6725  0009CA                     l412:
  6726                           
  6727                           ;LED.c: 358:     if(color == GREEN)
  6728  0009CA  042E               	decf	LED_Control@color,w,c
  6729  0009CC  A4D8               	btfss	status,2,c
  6730  0009CE  0012               	return	
  6731                           
  6732                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  6733  0009D0  A02A               	btfss	LED_Control@diode,0,c
  6734  0009D2  D003               	goto	l3913
  6735                           
  6736                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  6737  0009D4  508C               	movf	3980,w,c	;volatile
  6738  0009D6  0920               	iorlw	32
  6739  0009D8  D002               	goto	L14
  6740  0009DA                     l3913:
  6741                           
  6742                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  6743  0009DA  508C               	movf	3980,w,c	;volatile
  6744  0009DC  0BDF               	andlw	223
  6745  0009DE                     L14:
  6746  0009DE  6E8C               	movwf	3980,c	;volatile
  6747                           
  6748                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  6749  0009E0  A22A               	btfss	LED_Control@diode,1,c
  6750  0009E2  D003               	goto	l3919
  6751                           
  6752                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  6753  0009E4  508C               	movf	3980,w,c	;volatile
  6754  0009E6  0980               	iorlw	128
  6755  0009E8  D002               	goto	L15
  6756  0009EA                     l3919:
  6757                           
  6758                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  6759  0009EA  508C               	movf	3980,w,c	;volatile
  6760  0009EC  0B7F               	andlw	127
  6761  0009EE                     L15:
  6762  0009EE  6E8C               	movwf	3980,c	;volatile
  6763                           
  6764                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  6765  0009F0  A42A               	btfss	LED_Control@diode,2,c
  6766  0009F2  D003               	goto	l3925
  6767                           
  6768                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  6769  0009F4  508A               	movf	3978,w,c	;volatile
  6770  0009F6  0902               	iorlw	2
  6771  0009F8  D002               	goto	L16
  6772  0009FA                     l3925:
  6773                           
  6774                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  6775  0009FA  508A               	movf	3978,w,c	;volatile
  6776  0009FC  0BFD               	andlw	253
  6777  0009FE                     L16:
  6778  0009FE  6E8A               	movwf	3978,c	;volatile
  6779                           
  6780                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  6781  000A00  A62A               	btfss	LED_Control@diode,3,c
  6782  000A02  D003               	goto	l3931
  6783                           
  6784                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  6785  000A04  5089               	movf	3977,w,c	;volatile
  6786  000A06  0904               	iorlw	4
  6787  000A08  D002               	goto	L17
  6788  000A0A                     l3931:
  6789                           
  6790                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  6791  000A0A  5089               	movf	3977,w,c	;volatile
  6792  000A0C  0BFB               	andlw	251
  6793  000A0E                     L17:
  6794  000A0E  6E89               	movwf	3977,c	;volatile
  6795                           
  6796                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  6797  000A10  A82A               	btfss	LED_Control@diode,4,c
  6798  000A12  D003               	goto	l3937
  6799                           
  6800                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  6801  000A14  5089               	movf	3977,w,c	;volatile
  6802  000A16  0910               	iorlw	16
  6803  000A18  D002               	goto	L18
  6804  000A1A                     l3937:
  6805                           
  6806                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  6807  000A1A  5089               	movf	3977,w,c	;volatile
  6808  000A1C  0BEF               	andlw	239
  6809  000A1E                     L18:
  6810  000A1E  6E89               	movwf	3977,c	;volatile
  6811                           
  6812                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  6813  000A20  AA2A               	btfss	LED_Control@diode,5,c
  6814  000A22  D003               	goto	l3943
  6815                           
  6816                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  6817  000A24  508D               	movf	3981,w,c	;volatile
  6818  000A26  0901               	iorlw	1
  6819  000A28  D002               	goto	L19
  6820  000A2A                     l3943:
  6821                           
  6822                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  6823  000A2A  508D               	movf	3981,w,c	;volatile
  6824  000A2C  0BFE               	andlw	254
  6825  000A2E                     L19:
  6826  000A2E  6E8D               	movwf	3981,c	;volatile
  6827                           
  6828                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  6829  000A30  AC2A               	btfss	LED_Control@diode,6,c
  6830  000A32  D003               	goto	l3949
  6831                           
  6832                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  6833  000A34  508D               	movf	3981,w,c	;volatile
  6834  000A36  0904               	iorlw	4
  6835  000A38  D002               	goto	L20
  6836  000A3A                     l3949:
  6837                           
  6838                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  6839  000A3A  508D               	movf	3981,w,c	;volatile
  6840  000A3C  0BFB               	andlw	251
  6841  000A3E                     L20:
  6842  000A3E  6E8D               	movwf	3981,c	;volatile
  6843                           
  6844                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  6845  000A40  AE2A               	btfss	LED_Control@diode,7,c
  6846  000A42  D003               	goto	l3955
  6847                           
  6848                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  6849  000A44  5089               	movf	3977,w,c	;volatile
  6850  000A46  0940               	iorlw	64
  6851  000A48  D002               	goto	L21
  6852  000A4A                     l3955:
  6853                           
  6854                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  6855  000A4A  5089               	movf	3977,w,c	;volatile
  6856  000A4C  0BBF               	andlw	191
  6857  000A4E                     L21:
  6858  000A4E  6E89               	movwf	3977,c	;volatile
  6859                           
  6860                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  6861  000A50  A02B               	btfss	LED_Control@diode+1,0,c
  6862  000A52  D003               	goto	l3961
  6863                           
  6864                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  6865  000A54  508C               	movf	3980,w,c	;volatile
  6866  000A56  0902               	iorlw	2
  6867  000A58  D002               	goto	L22
  6868  000A5A                     l3961:
  6869                           
  6870                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  6871  000A5A  508C               	movf	3980,w,c	;volatile
  6872  000A5C  0BFD               	andlw	253
  6873  000A5E                     L22:
  6874  000A5E  6E8C               	movwf	3980,c	;volatile
  6875                           
  6876                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  6877  000A60  A22B               	btfss	LED_Control@diode+1,1,c
  6878  000A62  D004               	goto	l3967
  6879                           
  6880                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  6881  000A64  508C               	movf	3980,w,c	;volatile
  6882  000A66  0908               	iorlw	8
  6883  000A68  6E8C               	movwf	3980,c	;volatile
  6884                           
  6885                           ;LED.c: 450:         }
  6886  000A6A  0012               	return	
  6887  000A6C                     l3967:
  6888                           
  6889                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  6890  000A6C  508C               	movf	3980,w,c	;volatile
  6891  000A6E  0BF7               	andlw	247
  6892  000A70  6E8C               	movwf	3980,c	;volatile
  6893  000A72  0012               	return		;funcret
  6894  000A74                     __end_of_LED_Control:
  6895                           	opt callstack 0
  6896                           
  6897 ;; *************** function _INI_GlobalInterrupt *****************
  6898 ;; Defined at:
  6899 ;;		line 78 in file "INI.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;		None
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      void 
  6906 ;; Registers used:
  6907 ;;		None
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;Total ram usage:        0 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    3
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_INI_All
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text54
  6928  001A06                     __ptext54:
  6929                           	opt callstack 0
  6930  001A06                     _INI_GlobalInterrupt:
  6931                           	opt callstack 26
  6932                           
  6933                           ;INI.c: 80: INTCONbits.GIEH=1;
  6934                           
  6935                           ;incstack = 0
  6936  001A06  8EF2               	bsf	4082,7,c	;volatile
  6937                           
  6938                           ;INI.c: 81: INTCONbits.GIEL=1;
  6939  001A08  8CF2               	bsf	4082,6,c	;volatile
  6940                           
  6941                           ;INI.c: 82: RCONbits.IPEN=1;
  6942  001A0A  8ED0               	bsf	4048,7,c	;volatile
  6943                           
  6944                           ;INI.c: 83: IPEN =1;
  6945  001A0C  8ED0               	bsf	4048,7,c	;volatile
  6946                           
  6947                           ;INI.c: 85: PEIE=1;
  6948  001A0E  8CF2               	bsf	4082,6,c	;volatile
  6949                           
  6950                           ;INI.c: 86: TMR1IP = 0;
  6951  001A10  909F               	bcf	3999,0,c	;volatile
  6952  001A12  0012               	return		;funcret
  6953  001A14                     __end_of_INI_GlobalInterrupt:
  6954                           	opt callstack 0
  6955                           
  6956 ;; *************** function _CAN_Setup *****************
  6957 ;; Defined at:
  6958 ;;		line 24 in file "CAN.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg, status,2, status,0, cstack
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;Total ram usage:        1 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    5
  6979 ;; This function calls:
  6980 ;;		_CAN_SetupClock
  6981 ;;		_CAN_SetupMask
  6982 ;; This function is called by:
  6983 ;;		_INI_All
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text55
  6988  0013FA                     __ptext55:
  6989                           	opt callstack 0
  6990  0013FA                     _CAN_Setup:
  6991                           	opt callstack 24
  6992                           
  6993                           ;CAN.c: 29:     CANCON = 0x80;
  6994                           
  6995                           ;incstack = 0
  6996  0013FA  0E80               	movlw	128
  6997  0013FC  6E6F               	movwf	3951,c	;volatile
  6998  0013FE                     l4351:
  6999                           
  7000                           ;CAN.c: 30:     while((CANSTAT & 0xE0)!=0x80)
  7001  0013FE  506E               	movf	3950,w,c	;volatile
  7002  001400  0BE0               	andlw	224
  7003  001402  0A80               	xorlw	128
  7004  001404  A4D8               	btfss	status,2,c
  7005  001406  D7FB               	goto	l4351
  7006                           
  7007                           ;CAN.c: 35:     BSEL0 = 0;
  7008  001408  0E00               	movlw	0
  7009  00140A  010D               	movlb	13	; () banked
  7010  00140C  6FF8               	movwf	248,b	;volatile
  7011                           
  7012                           ;CAN.c: 36:     TXB0CON = 0;
  7013  00140E  0E00               	movlw	0
  7014  001410  010F               	movlb	15	; () banked
  7015  001412  6F40               	movwf	64,b	;volatile
  7016                           
  7017                           ;CAN.c: 37:     RXB0CON = 0;
  7018  001414  0E00               	movlw	0
  7019  001416  6E60               	movwf	3936,c	;volatile
  7020                           
  7021                           ;CAN.c: 38:     RXB1CON = 0;
  7022  001418  0E00               	movlw	0
  7023  00141A  6F50               	movwf	80,b	;volatile
  7024                           
  7025                           ;CAN.c: 39:     B0CON = 0;
  7026  00141C  0E00               	movlw	0
  7027  00141E  010E               	movlb	14	; () banked
  7028  001420  6F20               	movwf	32,b	;volatile
  7029                           
  7030                           ;CAN.c: 40:     B1CON = 0;
  7031  001422  0E00               	movlw	0
  7032  001424  6F30               	movwf	48,b	;volatile
  7033                           
  7034                           ;CAN.c: 41:     PIE3 = 0;
  7035  001426  0E00               	movlw	0
  7036  001428  6EA3               	movwf	4003,c	;volatile
  7037                           
  7038                           ; BSR set to: 14
  7039                           ;CAN.c: 42:     IPR3 = 0xFF;
  7040  00142A  68A5               	setf	4005,c	;volatile
  7041                           
  7042                           ;CAN.c: 43:     PIR3 = 0x00;
  7043  00142C  0E00               	movlw	0
  7044  00142E  6EA4               	movwf	4004,c	;volatile
  7045                           
  7046                           ;CAN.c: 44:     BIE0 = 0;
  7047  001430  0E00               	movlw	0
  7048  001432  010D               	movlb	13	; () banked
  7049  001434  6FFA               	movwf	250,b	;volatile
  7050                           
  7051                           ;CAN.c: 46:     DaneCan.adresCAN = 36;
  7052  001436  0E00               	movlw	0
  7053  001438  6E04               	movwf	_DaneCan+3,c
  7054  00143A  0E24               	movlw	36
  7055  00143C  6E03               	movwf	_DaneCan+2,c
  7056                           
  7057                           ;CAN.c: 48:     ECANCON = 0x90;
  7058  00143E  0E90               	movlw	144
  7059  001440  6E77               	movwf	3959,c	;volatile
  7060                           
  7061                           ; BSR set to: 13
  7062                           ;CAN.c: 51:     CAN_SetupClock();
  7063  001442  EC91  F00C         	call	_CAN_SetupClock	;wreg free
  7064                           
  7065                           ;CAN.c: 54:     CAN_SetupMask();
  7066  001446  EC93  F009         	call	_CAN_SetupMask	;wreg free
  7067                           
  7068                           ;CAN.c: 56:     CIOCON = 0xff;
  7069  00144A  6873               	setf	3955,c	;volatile
  7070                           
  7071                           ;CAN.c: 62:     CANCON = 0x00;
  7072  00144C  0E00               	movlw	0
  7073  00144E  6E6F               	movwf	3951,c	;volatile
  7074  001450                     l4363:
  7075                           
  7076                           ;CAN.c: 63:     while((CANSTAT & 0xE0) != 0x00)
  7077  001450  CF6E F02A          	movff	3950,??_CAN_Setup	;volatile
  7078  001454  0EE0               	movlw	224
  7079  001456  162A               	andwf	??_CAN_Setup,f,c
  7080  001458  B4D8               	btfsc	status,2,c
  7081  00145A  0012               	return	
  7082  00145C  D7F9               	goto	l4363
  7083  00145E                     __end_of_CAN_Setup:
  7084                           	opt callstack 0
  7085                           
  7086 ;; *************** function _CAN_SetupMask *****************
  7087 ;; Defined at:
  7088 ;;		line 84 in file "CAN.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;		None
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;		None
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, cstack
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;Total ram usage:        0 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:    4
  7109 ;; This function calls:
  7110 ;;		_CAN_SetupFilter_Ne
  7111 ;; This function is called by:
  7112 ;;		_CAN_Setup
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text56
  7117  001326                     __ptext56:
  7118                           	opt callstack 0
  7119  001326                     _CAN_SetupMask:
  7120                           	opt callstack 24
  7121                           
  7122                           ;CAN.c: 86:     MSEL0 = 0x50;
  7123                           
  7124                           ;incstack = 0
  7125  001326  0E50               	movlw	80
  7126  001328  010D               	movlb	13	; () banked
  7127  00132A  6FF0               	movwf	240,b	;volatile
  7128                           
  7129                           ;CAN.c: 87:     MSEL1 = 0x55;
  7130  00132C  0E55               	movlw	85
  7131  00132E  6FF1               	movwf	241,b	;volatile
  7132                           
  7133                           ;CAN.c: 88:     MSEL2 = 0x55;
  7134  001330  0E55               	movlw	85
  7135  001332  6FF2               	movwf	242,b	;volatile
  7136                           
  7137                           ;CAN.c: 89:     MSEL3 = 0x55;
  7138  001334  0E55               	movlw	85
  7139  001336  6FF3               	movwf	243,b	;volatile
  7140                           
  7141                           ;CAN.c: 92:     RXM0SIDH = 0b00000000;
  7142  001338  0E00               	movlw	0
  7143  00133A  010F               	movlb	15	; () banked
  7144  00133C  6F18               	movwf	24,b	;volatile
  7145                           
  7146                           ;CAN.c: 93:     RXM0SIDL = 0b00001011;
  7147  00133E  0E0B               	movlw	11
  7148  001340  6F19               	movwf	25,b	;volatile
  7149                           
  7150                           ; BSR set to: 15
  7151                           ;CAN.c: 94:     RXM0EIDH = 0xFF;
  7152  001342  691A               	setf	26,b	;volatile
  7153                           
  7154                           ; BSR set to: 15
  7155                           ;CAN.c: 95:     RXM0EIDL = 0xFF;
  7156  001344  691B               	setf	27,b	;volatile
  7157                           
  7158                           ; BSR set to: 15
  7159                           ;CAN.c: 98:     RXM1SIDH = 0xFF;
  7160  001346  691C               	setf	28,b	;volatile
  7161                           
  7162                           ; BSR set to: 15
  7163                           ;CAN.c: 99:     RXM1SIDL = 0xFF;
  7164  001348  691D               	setf	29,b	;volatile
  7165                           
  7166                           ; BSR set to: 15
  7167                           ;CAN.c: 100:     RXM1EIDH = 0xFF;
  7168  00134A  691E               	setf	30,b	;volatile
  7169                           
  7170                           ; BSR set to: 15
  7171                           ;CAN.c: 101:     RXM1EIDL = 0xFF;
  7172  00134C  691F               	setf	31,b	;volatile
  7173                           
  7174                           ;CAN.c: 104:     RXM0SIDH = 0x00;
  7175  00134E  0E00               	movlw	0
  7176  001350  6F18               	movwf	24,b	;volatile
  7177                           
  7178                           ;CAN.c: 105:     RXM0SIDL = 0x00;
  7179  001352  0E00               	movlw	0
  7180  001354  6F19               	movwf	25,b	;volatile
  7181                           
  7182                           ;CAN.c: 110:     RXF0SIDH = 0x00;
  7183  001356  0E00               	movlw	0
  7184  001358  6F00               	movwf	0,b	;volatile
  7185                           
  7186                           ;CAN.c: 111:     RXF0SIDL = 0x01;
  7187  00135A  0E01               	movlw	1
  7188  00135C  6F01               	movwf	1,b	;volatile
  7189                           
  7190                           ; BSR set to: 15
  7191                           ;CAN.c: 112:     RXF0SIDLbits.EXIDEN = 1;
  7192  00135E  8701               	bsf	1,3,b	;volatile
  7193                           
  7194                           ;CAN.c: 113:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7195  001360  5004               	movf	_DaneCan+3,w,c
  7196  001362  6F02               	movwf	2,b	;volatile
  7197                           
  7198                           ; BSR set to: 15
  7199                           ;CAN.c: 115:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7200  001364  C003  FF03         	movff	_DaneCan+2,3843	;volatile
  7201                           
  7202                           ;CAN.c: 117:     RXF1SIDH = 0x00;
  7203  001368  0E00               	movlw	0
  7204  00136A  6F04               	movwf	4,b	;volatile
  7205                           
  7206                           ;CAN.c: 118:     RXF1SIDL = 0x01;
  7207  00136C  0E01               	movlw	1
  7208  00136E  6F05               	movwf	5,b	;volatile
  7209                           
  7210                           ; BSR set to: 15
  7211                           ;CAN.c: 119:     RXF1SIDLbits.EXIDEN = 1;
  7212  001370  8705               	bsf	5,3,b	;volatile
  7213                           
  7214                           ;CAN.c: 120:     RXF1EIDH = 0x7F;
  7215  001372  0E7F               	movlw	127
  7216  001374  6F06               	movwf	6,b	;volatile
  7217                           
  7218                           ; BSR set to: 15
  7219                           ;CAN.c: 121:     RXF1EIDL = 0xFF;
  7220  001376  6907               	setf	7,b	;volatile
  7221                           
  7222                           ; BSR set to: 15
  7223                           ;CAN.c: 123:     CAN_SetupFilter_Ne();
  7224  001378  EC52  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  7225                           
  7226                           ;CAN.c: 126:     RXFBCON0 = 0b00000000;
  7227  00137C  0E00               	movlw	0
  7228  00137E  010D               	movlb	13	; () banked
  7229  001380  6FE0               	movwf	224,b	;volatile
  7230                           
  7231                           ; BSR set to: 13
  7232                           ;CAN.c: 128:     RXFBCON1 = 0b00010001;
  7233  001382  0E11               	movlw	17
  7234  001384  6FE1               	movwf	225,b	;volatile
  7235                           
  7236                           ; BSR set to: 13
  7237                           ;CAN.c: 130:     RXFBCON2 = 0b00010001;
  7238  001386  0E11               	movlw	17
  7239  001388  6FE2               	movwf	226,b	;volatile
  7240                           
  7241                           ; BSR set to: 13
  7242                           ;CAN.c: 132:     RXFBCON3 = 0b00010001;
  7243  00138A  0E11               	movlw	17
  7244  00138C  6FE3               	movwf	227,b	;volatile
  7245                           
  7246                           ; BSR set to: 13
  7247                           ;CAN.c: 134:     RXFBCON4 = 0b00010001;
  7248  00138E  0E11               	movlw	17
  7249  001390  6FE4               	movwf	228,b	;volatile
  7250                           
  7251                           ; BSR set to: 13
  7252  001392  0012               	return		;funcret
  7253  001394                     __end_of_CAN_SetupMask:
  7254                           	opt callstack 0
  7255                           
  7256 ;; *************** function _CAN_SetupFilter_Ne *****************
  7257 ;; Defined at:
  7258 ;;		line 140 in file "CAN.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;		None
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;		None
  7263 ;; Return value:  Size  Location     Type
  7264 ;;                  1    wreg      void 
  7265 ;; Registers used:
  7266 ;;		wreg, status,2
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7276 ;;Total ram usage:        0 bytes
  7277 ;; Hardware stack levels used:    1
  7278 ;; Hardware stack levels required when called:    3
  7279 ;; This function calls:
  7280 ;;		Nothing
  7281 ;; This function is called by:
  7282 ;;		_CAN_SetupMask
  7283 ;;		_FRAME_AdressOfNeighbors
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text57
  7288  0010A4                     __ptext57:
  7289                           	opt callstack 0
  7290  0010A4                     _CAN_SetupFilter_Ne:
  7291                           	opt callstack 24
  7292                           
  7293                           ;CAN.c: 144:     RXF2SIDH = 0;
  7294                           
  7295                           ; BSR set to: 13
  7296                           ;incstack = 0
  7297  0010A4  0E00               	movlw	0
  7298  0010A6  010F               	movlb	15	; () banked
  7299  0010A8  6F08               	movwf	8,b	;volatile
  7300                           
  7301                           ;CAN.c: 145:     RXF2SIDL = 0x20;
  7302  0010AA  0E20               	movlw	32
  7303  0010AC  6F09               	movwf	9,b	;volatile
  7304                           
  7305                           ; BSR set to: 15
  7306                           ;CAN.c: 146:     RXF2SIDLbits.EXIDEN = 1;
  7307  0010AE  8709               	bsf	9,3,b	;volatile
  7308                           
  7309                           ;CAN.c: 147:     RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7310  0010B0  504B               	movf	_NeightAdress1+1,w,c	;volatile
  7311  0010B2  6F0A               	movwf	10,b	;volatile
  7312                           
  7313                           ; BSR set to: 15
  7314                           ;CAN.c: 148:     RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7315  0010B4  C04A  FF0B         	movff	_NeightAdress1,3851	;volatile
  7316                           
  7317                           ;CAN.c: 151:     RXF3SIDH = 0;
  7318  0010B8  0E00               	movlw	0
  7319  0010BA  6F0C               	movwf	12,b	;volatile
  7320                           
  7321                           ;CAN.c: 152:     RXF3SIDL = 0x20;
  7322  0010BC  0E20               	movlw	32
  7323  0010BE  6F0D               	movwf	13,b	;volatile
  7324                           
  7325                           ; BSR set to: 15
  7326                           ;CAN.c: 153:     RXF3SIDLbits.EXIDEN = 1;
  7327  0010C0  870D               	bsf	13,3,b	;volatile
  7328                           
  7329                           ;CAN.c: 154:     RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7330  0010C2  5049               	movf	_NeightAdress2+1,w,c	;volatile
  7331  0010C4  6F0E               	movwf	14,b	;volatile
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;CAN.c: 155:     RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7335  0010C6  C048  FF0F         	movff	_NeightAdress2,3855	;volatile
  7336                           
  7337                           ;CAN.c: 157:     RXF4SIDH = 0;
  7338  0010CA  0E00               	movlw	0
  7339  0010CC  6F10               	movwf	16,b	;volatile
  7340                           
  7341                           ;CAN.c: 158:     RXF4SIDL = 0x20;
  7342  0010CE  0E20               	movlw	32
  7343  0010D0  6F11               	movwf	17,b	;volatile
  7344                           
  7345                           ; BSR set to: 15
  7346                           ;CAN.c: 159:     RXF4SIDLbits.EXIDEN = 1;
  7347  0010D2  8711               	bsf	17,3,b	;volatile
  7348                           
  7349                           ;CAN.c: 160:     RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7350  0010D4  5024               	movf	_NeightAdress3+1,w,c	;volatile
  7351  0010D6  6F12               	movwf	18,b	;volatile
  7352                           
  7353                           ; BSR set to: 15
  7354                           ;CAN.c: 161:     RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7355  0010D8  C023  FF13         	movff	_NeightAdress3,3859	;volatile
  7356                           
  7357                           ;CAN.c: 163:     RXF5SIDH = 0;
  7358  0010DC  0E00               	movlw	0
  7359  0010DE  6F14               	movwf	20,b	;volatile
  7360                           
  7361                           ;CAN.c: 164:     RXF5SIDL = 0x20;
  7362  0010E0  0E20               	movlw	32
  7363  0010E2  6F15               	movwf	21,b	;volatile
  7364                           
  7365                           ; BSR set to: 15
  7366                           ;CAN.c: 165:     RXF5SIDLbits.EXIDEN = 1;
  7367  0010E4  8715               	bsf	21,3,b	;volatile
  7368                           
  7369                           ;CAN.c: 166:     RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7370  0010E6  5022               	movf	_NeightAdress4+1,w,c	;volatile
  7371  0010E8  6F16               	movwf	22,b	;volatile
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;CAN.c: 167:     RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7375  0010EA  C021  FF17         	movff	_NeightAdress4,3863	;volatile
  7376                           
  7377                           ;CAN.c: 169:     RXF6SIDH = 0;
  7378  0010EE  0E00               	movlw	0
  7379  0010F0  010D               	movlb	13	; () banked
  7380  0010F2  6F60               	movwf	96,b	;volatile
  7381                           
  7382                           ;CAN.c: 170:     RXF6SIDL = 0x20;
  7383  0010F4  0E20               	movlw	32
  7384  0010F6  6F61               	movwf	97,b	;volatile
  7385                           
  7386                           ; BSR set to: 13
  7387                           ;CAN.c: 171:     RXF6SIDLbits.EXIDEN = 1;
  7388  0010F8  8761               	bsf	97,3,b	;volatile
  7389                           
  7390                           ;CAN.c: 172:     RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7391  0010FA  5020               	movf	_NeightAdress5+1,w,c	;volatile
  7392  0010FC  6F62               	movwf	98,b	;volatile
  7393                           
  7394                           ; BSR set to: 13
  7395                           ;CAN.c: 173:     RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7396  0010FE  C01F  FD63         	movff	_NeightAdress5,3427	;volatile
  7397                           
  7398                           ;CAN.c: 175:     RXF7SIDH = 0;
  7399  001102  0E00               	movlw	0
  7400  001104  6F64               	movwf	100,b	;volatile
  7401                           
  7402                           ;CAN.c: 176:     RXF7SIDL = 0x20;
  7403  001106  0E20               	movlw	32
  7404  001108  6F65               	movwf	101,b	;volatile
  7405                           
  7406                           ; BSR set to: 13
  7407                           ;CAN.c: 177:     RXF7SIDLbits.EXIDEN = 1;
  7408  00110A  8765               	bsf	101,3,b	;volatile
  7409                           
  7410                           ;CAN.c: 178:     RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7411  00110C  501E               	movf	_NeightAdress6+1,w,c	;volatile
  7412  00110E  6F66               	movwf	102,b	;volatile
  7413                           
  7414                           ; BSR set to: 13
  7415                           ;CAN.c: 179:     RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7416  001110  C01D  FD67         	movff	_NeightAdress6,3431	;volatile
  7417                           
  7418                           ;CAN.c: 181:     RXF8SIDH = 0;
  7419  001114  0E00               	movlw	0
  7420  001116  6F68               	movwf	104,b	;volatile
  7421                           
  7422                           ;CAN.c: 182:     RXF8SIDL = 0x20;
  7423  001118  0E20               	movlw	32
  7424  00111A  6F69               	movwf	105,b	;volatile
  7425                           
  7426                           ; BSR set to: 13
  7427                           ;CAN.c: 183:     RXF8SIDLbits.EXIDEN = 1;
  7428  00111C  8769               	bsf	105,3,b	;volatile
  7429                           
  7430                           ;CAN.c: 184:     RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7431  00111E  501C               	movf	_NeightAdress7+1,w,c	;volatile
  7432  001120  6F6A               	movwf	106,b	;volatile
  7433                           
  7434                           ; BSR set to: 13
  7435                           ;CAN.c: 185:     RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7436  001122  C01B  FD6B         	movff	_NeightAdress7,3435	;volatile
  7437                           
  7438                           ;CAN.c: 187:     RXF9SIDH = 0;
  7439  001126  0E00               	movlw	0
  7440  001128  6F70               	movwf	112,b	;volatile
  7441                           
  7442                           ;CAN.c: 188:     RXF9SIDL = 0x20;
  7443  00112A  0E20               	movlw	32
  7444  00112C  6F71               	movwf	113,b	;volatile
  7445                           
  7446                           ; BSR set to: 13
  7447                           ;CAN.c: 189:     RXF9SIDLbits.EXIDEN = 1;
  7448  00112E  8771               	bsf	113,3,b	;volatile
  7449                           
  7450                           ;CAN.c: 190:     RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7451  001130  501A               	movf	_NeightAdress8+1,w,c	;volatile
  7452  001132  6F72               	movwf	114,b	;volatile
  7453                           
  7454                           ; BSR set to: 13
  7455                           ;CAN.c: 191:     RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7456  001134  C019  FD73         	movff	_NeightAdress8,3443	;volatile
  7457                           
  7458                           ; BSR set to: 13
  7459  001138  0012               	return		;funcret
  7460  00113A                     __end_of_CAN_SetupFilter_Ne:
  7461                           	opt callstack 0
  7462                           
  7463 ;; *************** function _CAN_SetupClock *****************
  7464 ;; Defined at:
  7465 ;;		line 199 in file "CAN.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;		None
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      void 
  7472 ;; Registers used:
  7473 ;;		None
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;Total ram usage:        0 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    3
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_CAN_Setup
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text58
  7494  001922                     __ptext58:
  7495                           	opt callstack 0
  7496  001922                     _CAN_SetupClock:
  7497                           	opt callstack 25
  7498                           
  7499                           ;CAN.c: 201:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7500                           
  7501                           ; BSR set to: 13
  7502                           ;incstack = 0
  7503  001922  8070               	bsf	3952,0,c	;volatile
  7504                           
  7505                           ;CAN.c: 202:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7506  001924  8270               	bsf	3952,1,c	;volatile
  7507                           
  7508                           ;CAN.c: 203:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7509  001926  9470               	bcf	3952,2,c	;volatile
  7510                           
  7511                           ;CAN.c: 204:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7512  001928  9670               	bcf	3952,3,c	;volatile
  7513                           
  7514                           ;CAN.c: 205:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7515  00192A  9870               	bcf	3952,4,c	;volatile
  7516                           
  7517                           ;CAN.c: 206:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7518  00192C  9A70               	bcf	3952,5,c	;volatile
  7519                           
  7520                           ;CAN.c: 208:     BRGCON1bits.SJW0 = 1;
  7521  00192E  8C70               	bsf	3952,6,c	;volatile
  7522                           
  7523                           ;CAN.c: 209:     BRGCON1bits.SJW1 = 1;
  7524  001930  8E70               	bsf	3952,7,c	;volatile
  7525                           
  7526                           ;CAN.c: 211:     BRGCON2bits.SEG1PH0 = 1;
  7527  001932  8671               	bsf	3953,3,c	;volatile
  7528                           
  7529                           ;CAN.c: 212:     BRGCON2bits.SEG1PH1 = 1;
  7530  001934  8871               	bsf	3953,4,c	;volatile
  7531                           
  7532                           ;CAN.c: 213:     BRGCON2bits.SEG1PH2 = 1;
  7533  001936  8A71               	bsf	3953,5,c	;volatile
  7534                           
  7535                           ;CAN.c: 215:     BRGCON2bits.PRSEG2 = 1;
  7536  001938  8471               	bsf	3953,2,c	;volatile
  7537                           
  7538                           ;CAN.c: 216:     BRGCON2bits.PRSEG1 = 0;
  7539  00193A  9271               	bcf	3953,1,c	;volatile
  7540                           
  7541                           ;CAN.c: 217:     BRGCON2bits.PRSEG0 = 0;
  7542  00193C  9071               	bcf	3953,0,c	;volatile
  7543                           
  7544                           ;CAN.c: 219:     BRGCON3bits.SEG2PH0 = 1;
  7545  00193E  8072               	bsf	3954,0,c	;volatile
  7546                           
  7547                           ;CAN.c: 220:     BRGCON3bits.SEG2PH1 = 0;
  7548  001940  9272               	bcf	3954,1,c	;volatile
  7549                           
  7550                           ;CAN.c: 221:     BRGCON3bits.SEG2PH2 = 1;
  7551  001942  8472               	bsf	3954,2,c	;volatile
  7552                           
  7553                           ;CAN.c: 223:     BRGCON2bits.SAM = 1;
  7554  001944  8C71               	bsf	3953,6,c	;volatile
  7555                           
  7556                           ;CAN.c: 224:     BRGCON2bits.SEG2PHTS = 1;
  7557  001946  8E71               	bsf	3953,7,c	;volatile
  7558  001948  0012               	return		;funcret
  7559  00194A                     __end_of_CAN_SetupClock:
  7560                           	opt callstack 0
  7561                           
  7562 ;; *************** function _ISR_low *****************
  7563 ;; Defined at:
  7564 ;;		line 16 in file "ISR.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      void 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0, cstack
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;Total ram usage:        3 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    2
  7585 ;; This function calls:
  7586 ;;		_TMR1_Timer_reset
  7587 ;;		i1_TMR1_Update_flag_Set
  7588 ;; This function is called by:
  7589 ;;		Interrupt level 1
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	intcodelo
  7594  000018                     __pintcodelo:
  7595                           	opt callstack 0
  7596  000018                     _ISR_low:
  7597                           	opt callstack 22
  7598                           
  7599                           ;incstack = 0
  7600  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7601  00001A  CFD8 F027          	movff	status,??_ISR_low
  7602  00001E  CFE8 F028          	movff	wreg,??_ISR_low+1
  7603  000022  CFE0 F029          	movff	bsr,??_ISR_low+2
  7604                           
  7605                           ;ISR.c: 21:     if(TMR1IF==1)
  7606  000026  A09E               	btfss	3998,0,c	;volatile
  7607  000028  D012               	goto	i1l775
  7608                           
  7609                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  7610  00002A  ECA5  F00C         	call	_TMR1_Timer_reset	;wreg free
  7611                           
  7612                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  7613  00002E  0E00               	movlw	0
  7614  000030  6E26               	movwf	i1TMR1_Update_flag_Set@a+1,c
  7615  000032  0E01               	movlw	1
  7616  000034  6E25               	movwf	i1TMR1_Update_flag_Set@a,c
  7617  000036  EC39  F00D         	call	i1_TMR1_Update_flag_Set	;wreg free
  7618                           
  7619                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  7620  00003A  0100               	movlb	0	; () banked
  7621  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  7625  00003E  2A12               	incf	ISR_low@ramkaStanuU8,f,c
  7626  000040  0E14               	movlw	20
  7627  000042  6412               	cpfsgt	ISR_low@ramkaStanuU8,c
  7628  000044  D003               	goto	i1l3683
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  7632  000046  0E00               	movlw	0
  7633  000048  6E12               	movwf	ISR_low@ramkaStanuU8,c
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  7637  00004A  8001               	bsf	_DaneCan,0,c
  7638  00004C                     i1l3683:
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;ISR.c: 41:             TMR1IF=0;
  7642  00004C  909E               	bcf	3998,0,c	;volatile
  7643  00004E                     i1l775:
  7644  00004E  C029  FFE0         	movff	??_ISR_low+2,bsr
  7645  000052  C028  FFE8         	movff	??_ISR_low+1,wreg
  7646  000056  C027  FFD8         	movff	??_ISR_low,status
  7647  00005A  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7648  00005C  0010               	retfie	
  7649  00005E                     __end_of_ISR_low:
  7650                           	opt callstack 0
  7651                           
  7652 ;; *************** function i1_TMR1_Update_flag_Set *****************
  7653 ;; Defined at:
  7654 ;;		line 32 in file "TMR1.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  a               2    0[COMRAM] unsigned int 
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		None
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7672 ;;Total ram usage:        2 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    1
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_ISR_low
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text60
  7683  001A72                     __ptext60:
  7684                           	opt callstack 0
  7685  001A72                     i1_TMR1_Update_flag_Set:
  7686                           	opt callstack 22
  7687                           
  7688                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  7689                           
  7690                           ;incstack = 0
  7691  001A72  C025  F00B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  7692  001A76  C026  F00C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  7693  001A7A  0012               	return		;funcret
  7694  001A7C                     __end_ofi1_TMR1_Update_flag_Set:
  7695                           	opt callstack 0
  7696                           
  7697 ;; *************** function _TMR1_Timer_reset *****************
  7698 ;; Defined at:
  7699 ;;		line 63 in file "TMR1.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;		None
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  7704 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      unsigned char 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;Total ram usage:        2 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    1
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_ISR_low
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text61
  7729  00194A                     __ptext61:
  7730                           	opt callstack 0
  7731  00194A                     _TMR1_Timer_reset:
  7732                           	opt callstack 22
  7733                           
  7734                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  7735                           
  7736                           ;incstack = 0
  7737  00194A  0E00               	movlw	0
  7738  00194C  6E25               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  7739  00194E  0E00               	movlw	0
  7740  001950  6E26               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  7741                           
  7742                           ;TMR1.c: 70:     t1L = TMR1L;
  7743  001952  CFCE F025          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  7744                           
  7745                           ;TMR1.c: 71:     t1H = TMR1H;
  7746  001956  CFCF F026          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  7747                           
  7748                           ;TMR1.c: 72:     __nop();
  7749  00195A  F000               	nop	
  7750                           
  7751                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  7752  00195C  0E9E               	movlw	158
  7753  00195E  2626               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  7754                           
  7755                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  7756  001960  0E57               	movlw	87
  7757  001962  2625               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  7758                           
  7759                           ;TMR1.c: 75:     TMR1H = t1H;
  7760  001964  C026  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  7761                           
  7762                           ;TMR1.c: 76:     TMR1L = 0x5B;
  7763  001968  0E5B               	movlw	91
  7764  00196A  6ECE               	movwf	4046,c	;volatile
  7765  00196C  0012               	return		;funcret
  7766  00196E                     __end_of_TMR1_Timer_reset:
  7767                           	opt callstack 0
  7768                           
  7769 ;; *************** function _ISR_high *****************
  7770 ;; Defined at:
  7771 ;;		line 53 in file "ISR.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;		None
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		None
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7789 ;;Total ram usage:        0 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		Interrupt level 2
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	intcode
  7799  000008                     __pintcode:
  7800                           	opt callstack 0
  7801  000008                     _ISR_high:
  7802                           	opt callstack 22
  7803                           
  7804                           ;incstack = 0
  7805  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7806  00000A  ED46  F00D         	call	int_func,f	;refresh shadow registers
  7807                           
  7808                           	psect	intcode_body
  7809  001A8C                     __pintcode_body:
  7810                           	opt callstack 22
  7811  001A8C                     int_func:
  7812                           	opt callstack 22
  7813  001A8C  0006               	pop		; remove dummy address from shadow register refresh
  7814  001A8E  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7815  001A90  0011               	retfie		f
  7816  001A92                     __end_of_ISR_high:
  7817                           	opt callstack 0
  7818  0000                     
  7819                           	psect	rparam
  7820  0000                     
  7821                           	psect	temp
  7822  00004C                     btemp:
  7823                           	opt callstack 0
  7824  00004C                     	ds	1
  7825  0000                     int$flags	set	btemp
  7826  0000                     wtemp8	set	btemp+1
  7827  0000                     ttemp5	set	btemp+1
  7828  0000                     ttemp6	set	btemp+4
  7829  0000                     ttemp7	set	btemp+8
  7830                           tosu	equ	0xFFF
  7831                           tosh	equ	0xFFE
  7832                           tosl	equ	0xFFD
  7833                           stkptr	equ	0xFFC
  7834                           pclatu	equ	0xFFB
  7835                           pclath	equ	0xFFA
  7836                           pcl	equ	0xFF9
  7837                           tblptru	equ	0xFF8
  7838                           tblptrh	equ	0xFF7
  7839                           tblptrl	equ	0xFF6
  7840                           tablat	equ	0xFF5
  7841                           prodh	equ	0xFF4
  7842                           prodl	equ	0xFF3
  7843                           indf0	equ	0xFEF
  7844                           postinc0	equ	0xFEE
  7845                           postdec0	equ	0xFED
  7846                           preinc0	equ	0xFEC
  7847                           plusw0	equ	0xFEB
  7848                           fsr0h	equ	0xFEA
  7849                           fsr0l	equ	0xFE9
  7850                           wreg	equ	0xFE8
  7851                           indf1	equ	0xFE7
  7852                           postinc1	equ	0xFE6
  7853                           postdec1	equ	0xFE5
  7854                           preinc1	equ	0xFE4
  7855                           plusw1	equ	0xFE3
  7856                           fsr1h	equ	0xFE2
  7857                           fsr1l	equ	0xFE1
  7858                           bsr	equ	0xFE0
  7859                           indf2	equ	0xFDF
  7860                           postinc2	equ	0xFDE
  7861                           postdec2	equ	0xFDD
  7862                           preinc2	equ	0xFDC
  7863                           plusw2	equ	0xFDB
  7864                           fsr2h	equ	0xFDA
  7865                           fsr2l	equ	0xFD9
  7866                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         690
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      75
    BANK0           160     17     127
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30134
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18341
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   15290
                                             17 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4178
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3289
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3289
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6660
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4176
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    4931
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    2688
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    2688
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              1     1      0     487
                                             11 COMRAM     1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     478
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      20        0.0%
DATA                 0      0     2EA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 26 11:20:49 2019

               __end_of_FRAME_DeviceReset 0BBC                     ?_FRAME_AveragingTimes 002A  
                            ___awdiv@sign 002F                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 002A  
                       _FRAME_MapPosition 1A96                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 0030                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 002C                        __size_of_CAN_GenID 0078  
                                     l412 09CA                                       l280 07CC  
                                     l281 07CA                                       l290 03AC  
                                     l291 0342                                       l292 0348  
                                     l293 034E                                       l294 0354  
                                     l295 035A                                       l384 120E  
                                     l296 0360                               ?_LED_Update 0025  
                                     l297 0366                                       l289 033C  
                                     l920 1862                                       l912 185A  
                                     l688 07AA                                       l929 1756  
                                     l689 07A2                              __CFG_CPB$OFF 000000  
                      ??_FRAME_AxisStatus 002C                              __CFG_CPD$OFF 000000  
                      ?_FRAME_MapPosition 002A                        __size_of_CAN_Setup 0064  
                            ?_LED_Control 002A                                       wreg 000FE8  
                   __end_of_CAN_TakeFrame 05AA                               ?_INI_OUTPUT 0025  
                  __size_of_INI_LED_Start 0034                             NVMInit@result 0030  
                ??_MOCK_Klikniecie_Spadek 002C                     __end_of_CAN_SendFrame 0922  
                            __CFG_LVP$OFF 000000                           _neighborsAdress 0015  
               TRM_DataTransmition@weWyU8 0011              __size_of_INI_GlobalInterrupt 000E  
                     ??_FRAME_MapPosition 002C                              __CFG_WDT$OFF 000000  
                                    l1427 15B2                                      l4011 0ED4  
                                    l3133 168A                                      l4005 0EBC  
                                    l4023 0F04                                      l4041 0F4C  
                                    l4017 0EEC                                      l3307 1810  
                         __end_of_INI_All 1990                                      l4035 0F34  
                                    l3261 188A                                      l3149 16D0  
                                    l4301 026C                                      l4029 0F1C  
                                    l4071 1580                                      l4073 1588  
                                    l4313 114E                                      l4161 091A  
                                    l4225 15E8                                      l4083 15A8  
                                    l4403 04BA                                      l4411 0518  
                                    l4325 1174                                      l4341 11A6  
                                    l4421 0546                                      l4413 052A  
                                    l4405 04FA                                      l4157 0866  
                                    l4261 0B98                                      l4501 05EC  
                                    l4351 13FE                                      l4327 117C  
                                    l4319 115E                                      l4423 054E  
                                    l4415 0530                                      l4431 0566  
                                    l4247 0B36                                      l4271 154C  
                                    l4511 0632                                      l4503 05FA  
                                    l4345 11B4                                      l4337 119C  
                                    l4425 0556                                      l4417 0536  
                                    l4433 05A6                                      l4409 04FE  
                                    l4265 0BAA                                      l4257 0B76  
                                    l4281 105C                                      l4193 0CA4  
                                    l4521 0684                                      l4513 0640  
                                    l4505 0608                                      l4363 1450  
                                    l4427 055E                                      l4419 053E  
                                    l4187 0C5E                                      l4523 0692  
                                    l4515 064E                                      l4507 0616  
                                    l4531 0728                                      l4603 18F0  
                                    l3901 09B4                                      l4293 011C  
                                    l4197 0CC0                                      l4525 06A8  
                                    l4517 065C                                      l4509 0624  
                                    l4471 0FB8                                      l4391 0492  
                                    l4295 019E                                      l4519 066A  
                                    l3913 09DA                                      l4473 0FC2  
                                    l4465 0F8C                                      l4393 049A  
                                    l4385 047E                                      l4369 036C  
                                    l4529 06BE                                      l3931 0A0A  
                                    l3907 09C4                                      l4395 04A2  
                                    l4387 0484                                      l4299 0266  
                                    l3925 09FA                                      l3853 0934  
                                    l4565 11EA                                      l4397 04AA  
                                    l4389 048A                                      l3943 0A2A  
                                    l3919 09EA                                      l3871 0964  
                                    l4479 0FEE                                      l3839 18FC  
                                    l4399 04B2                                      l3961 0A5A  
                                    l3937 0A1A                                      l3865 0954  
                                    l4593 18CE                                      l3955 0A4A  
                                    l3883 0984                                      l3859 0944  
                                    l4499 05DE                                      l4579 1636  
                                    l3949 0A3A                                      l3877 0974  
                                    l3797 1780                                      _BIE0 000DFA  
                                    l3967 0A6C                                      l3895 09A4  
                                    l3889 0994                                      l3999 0EA4  
                       _MOC_Frame_Counter 19F8                                      _LATA 000F89  
                                    u2310 158C                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u2500 0ADC  
                                    u2506 0ADE                                      u2450 15F8  
                                    u2375 083C                                      _IPR3 000FA5  
                                    u2640 1180                                      _IPEN 007E87  
                                    u2705 0416                                      _PIE3 000FA3  
                                    u2490 0AC4                                      u2750 0FF6  
                                    u2496 0AC6                                      u1955 1856  
                                    _PEIE 007F96                                      u1956 1858  
                                    _LOCK 0014                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 002E  
                                    _Dane 000D                           __end_of_ISR_low 005E  
                        LED_Control@diode 002A                      FRAME_AnalogValue@set 002C  
                      ?_MOC_Frame_Counter 002A                                      _main 18C8  
                        LED_Control@color 002E                           __end_of_NVMInit 171E  
                         __end_of_NVMRead 1894                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004C  
                          _CAN_SetupClock 1922                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 1394  
           __size_of_TMR1_Update_flag_Get 000A                                      start 005E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_LED_Error 001E  
                           __CFG_IESO$OFF 000000                        __size_of_LED_Right 004C  
           __size_of_FRAME_HandleCanFrame 0206                             _LED_Light_Pos 0F56  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                     ??_MOC_Frame_Counter 002C                ??_MOC_Aktualna_Temperatura 002C  
       FRAME_HandleCanFrame@identyfikator 003E                        __size_of_INI_Timer 0018  
               __end_of_FRAME_MapPosition 1A98                             _NeightAdress1 004A  
                           _NeightAdress2 0048                             _NeightAdress3 0023  
                           _NeightAdress4 0021                             _NeightAdress5 001F  
                           _NeightAdress6 001D                             _NeightAdress7 001B  
                           _NeightAdress8 0019                          __end_of_LED_Left 16E4  
           __size_of_MOCK_PrzyspieszenieX 000A             __size_of_MOCK_PrzyspieszenieY 000A  
           __size_of_MOCK_PrzyspieszenieZ 000A                     ReadfromEEPROM@Address 002A  
                                   _B0CON 000E20                                     _B1CON 000E30  
                                   _B2CON 000E40                                     _B3CON 000E50  
                                   _B4CON 000E60                                     _B5CON 000E70  
                        __end_of_LOCK_Get 1A96                                     ?_main 0025  
                        __end_of_LOCK_Set 1A8C                           __end_of___awdiv 11BE  
                                   _EEADR 000FA9                                     _BSEL0 000DF8  
                         ___awdiv@divisor 002C                                     _T1CON 000FCD  
                                   _IRCF0 007E9C                                     _IRCF1 007E9D  
       FRAME_ExcitationMultiplier@message 002A                                     _IRCF2 007E9E  
                         __end_of___lwdiv 15BC                                     i1l775 004E  
                     __size_of_FRAME_Plot 0058                           ___awdiv@counter 002E  
                                   _MSEL0 000DF0                                     _MSEL1 000DF1  
                                   _MSEL2 000DF2                                     _MSEL3 000DF3  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_PWRT$OFF 000000  
                                   _Flagi 00C6                    ?_CAN_MoveBuffIntoFrame 002A  
                           __CFG_WRT0$OFF 000000                __size_of_FRAME_AnalogValue 0002  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_ISR_high 1A92                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
               __end_of_MOC_Frame_Counter 1A06                            __CFG_EBTRB$OFF 000000  
                 i1TMR1_Update_flag_Set@a 0025                              ?_MOC_NOTWORK 002A  
               __size_of_ReadDataToEEPROM 00E2                          __end_of_NVMWrite 178A  
                        __end_of_NVMalloc 182C                                     tablat 000FF5  
                  __end_of_CAN_SetupClock 194A                                     ttemp5 004D  
                                   ttemp6 0050                                     ttemp7 0054  
                                   status 000FD8                                     wtemp8 004D  
                       __end_of_CAN_GenID 12B0                            __CFG_PBADEN$ON 000000  
                     __size_of_LED_Update 007A                            ?_LED_Light_Pos 0031  
                        _TMR1_Timer_reset 194A                         __end_of_CAN_Setup 145E  
                           _INI_LED_Start 1894                     _FRAME_ExcitationValue 171E  
        FRAME_AccelerometerStatus@message 002C                           __initialization 145E  
                     __size_of_INI_OUTPUT 0020                          CAN_GenID@frameID 002C  
                            __end_of_main 18F8                    ??_FRAME_AveragingTimes 002C  
              __size_of_FRAME_DeviceReset 0148                  ?_FRAME_AdressOfNeighbors 002A  
                  __size_of_WritetoEEPROM 0034                          CAN_GenID@message 002A  
               _FRAME_AccelerometerStatus 12B0                                    ??_main 003F  
                  CAN_MoveBuffIntoFrame@i 002E                             __activetblptr 000002  
                            NVMWrite@addr 002F                          _TMR1_Update_flag 000B  
                 WritetoEEPROM@GIE_Status 000F                     __end_of_IsInNeighbors 0F56  
                         _wartosciSasiada 00DF                                 ??_INI_All 0032  
                       __end_of_LED_Error 19CE                         __end_of_LED_Right 16A2  
                    WritetoEEPROM@Address 002A           __size_of_MOCK_Klikniecie_Spadek 000A  
                               ??_ISR_low 0027                                 ??_NVMInit 0030  
                               ??_NVMRead 0032                                    _CANCON 000F6F  
                                  _EEADRH 000FAA                                    _EEDATA 000FA8  
                                  _EECON2 000FA7                          ___awdiv@dividend 002A  
             FRAME_ExcitationMultiplier@i 002D                                    _CIOCON 000F73  
                         __CFG_BBSIZ$1024 000000                         __end_of_INI_Timer 19E6  
                                  i1l3683 004C                           ?_CAN_SetupClock 0025  
                                  _RXB0D0 000F66                                    _TMR1IE 007CE8  
                                  _TMR1IF 007CF0                                    _TMR1IP 007CF8  
                                  _TMR1ON 007E68              ??_FRAME_ExcitationMultiplier 002C  
                          ?_INI_LED_Start 0025                            __CFG_XINST$OFF 000000  
                               ??___awdiv 002E                            __CFG_STVREN$ON 000000  
                        LED_Light_Pos@pos 0031                __size_of_FRAME_MapPosition 0002  
                               ??___lwdiv 002E                                    clear_0 1486  
                                  clear_1 1498                                    clear_2 14A4  
                        ___awdiv@quotient 0030                              NVMalloc@size 002A  
              ??_FRAME_PrzypisanieDokarty 002C                  ??i1_TMR1_Update_flag_Set 0027  
                         __CFG_BOREN$BOHW 000000                   __size_of_ReadfromEEPROM 0012  
                            __pdataCOMRAM 003F                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
     __size_of_FRAME_ExcitationMultiplier 004E                __size_of_MOC_Frame_Counter 000E  
                    __size_of_LED_Control 0152                             _WritetoEEPROM 182C  
                FRAME_MapPosition@message 002A                     TMR1_Update_flag_Set@a 002A  
                              __accesstop 0060                   __end_of__initialization 14AA  
                            ??_FRAME_Plot 0033                       ISR_low@ramkaStanuU8 0012  
                               ?_LED_Left 002A                           ??_LED_Light_Pos 0035  
                           ___rparam_used 000001                    ?_FRAME_ExcitationValue 002A  
                               ?_LOCK_Get 0025                                 ?_LOCK_Set 0025  
         __end_of_FRAME_AdressOfNeighbors 032E                    _MOCK_Klikniecie_Spadek 1A54  
                          __pcstackCOMRAM 0025                                 LED_Left@a 002A  
                               LED_Left@b 002C                       _INI_GlobalInterrupt 1A06  
                               ?_ISR_high 0025                                 ?_NVMWrite 002D  
                               ?_NVMalloc 002A                              ??_LED_Update 003C  
             __end_of_TRM_DataTransmition 1656                     _FRAME_SoftwareVersion 1394  
                      __end_of_FRAME_Plot 156A                              ??_INI_OUTPUT 002A  
                               LOCK_Set@k 002A                   FRAME_AxisStatus@message 002A  
             IsInNeighbors@message_adress 002A                            ?_WritetoEEPROM 002A  
                    ?_INI_GlobalInterrupt 0025                          _ReadDataToEEPROM 0DAA  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                             NVMWrite@count 0031  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 002F  
                              ??_LED_Left 002C                                ??_LOCK_Get 002A  
                              ??_LOCK_Set 002A                        __end_of_LED_Update 1238  
                      __end_of_INI_OUTPUT 19B0                                ??_ISR_high 0025  
                     TMR1_Timer_reset@t1H 0026                       TMR1_Timer_reset@t1L 0025  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 0033                   ??_CAN_MoveBuffIntoFrame 002E  
                              ??_NVMalloc 002E              __end_of_TMR1_Update_flag_Get 1A72  
            __end_of_TMR1_Update_flag_Set 1A68           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 07B0                                   _INI_All 196E  
                __end_of_TMR1_Timer_reset 196E                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 002A                                   _TXB0CON 000F40  
                                 _ISR_low 0018                                   _NVMInit 16E4  
                                 _NVMRead 1860                                   _DaneCan 0001  
            __end_of_MOCK_PrzyspieszenieX 1A54              __end_of_MOCK_PrzyspieszenieY 1A4A  
            __end_of_MOCK_PrzyspieszenieZ 1A40        __end_of_FRAME_ExcitationMultiplier 160A  
              _FRAME_ExcitationMultiplier 15BC               FRAME_HandleCanFrame@message 0036  
                                 __Hparam 0000          ??_MOC_Wynikowa_wartosc_roznicowa 002C  
         ?_MOC_Wynikowa_wartosc_roznicowa 002A                                   __Lparam 0000  
                  __size_of_CAN_TakeFrame 027C                                 _CAN_GenID 1238  
                                 ___awdiv 113A                                 _CAN_Setup 13FA  
                  __size_of_CAN_SendFrame 0172                                   ___lwdiv 156A  
                       LED_Light_Pos@pos2 0038                                   __pcinit 145E  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 002A  
                                 __ptext0 18C8                                   __ptext1 160A  
                                 __ptext2 05AA                                   __ptext3 19B0  
                                 __ptext4 1394                                   __ptext5 0BBC  
                                 __ptext6 1A22                                   __ptext7 1A7C  
                                 __ptext8 19F8                                   __ptext9 1A2C  
                  ?_FRAME_SoftwareVersion 002A                            _ReadfromEEPROM 19E6  
                         ??_WritetoEEPROM 002D                    __size_of_CAN_SetupMask 006E  
       __size_of_MOC_Aktualna_Temperatura 000A            FRAME_AdressOfNeighbors@nrRamki 002C  
               ?_MOC_Aktualna_Temperatura 002A          __size_of_FRAME_AdressOfNeighbors 02CC  
                        ??_CAN_SetupClock 002A            FRAME_AdressOfNeighbors@message 002A  
                               _LED_Error 19B0                            __pintcode_body 1A8C  
                               _LED_Right 1656                      end_of_initialization 14AA  
    FRAME_SensorExcitationStatus@statwect 0009                             __Lmediumconst 0000  
                                 int_func 1A8C                                 _INI_Timer 19CE  
                  i1_TMR1_Update_flag_Set 1A72          TRM_DataTransmition@czujnikWeWyU8 0010  
                              ?_CAN_GenID 002A                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ?_CAN_Setup 0025  
           __size_of_FRAME_AveragingTimes 0036                    __end_of_ReadfromEEPROM 19F8  
                    CAN_SendFrame@message 002F                          NVMalloc@location 002C  
                           LED_Update@Red 0013                             _CAN_TakeFrame 032E  
                             NVMRead@addr 002E                             _CAN_SendFrame 07B0  
                              ?_LED_Error 0025                               NVMRead@dest 002C  
             FRAME_AdressOfNeighbors@kier 0032                                ?_LED_Right 002A  
                        _FRAME_AxisStatus 178A                   ??_FRAME_ExcitationValue 002C  
                              ?_INI_Timer 0025                   ?_MOCK_Klikniecie_Spadek 002A  
                         _ramkaCanRxKarty 0060                      _TMR1_Update_flag_Get 1A68  
                         _ramkaCanTxKarty 00B5                      _TMR1_Update_flag_Set 1A5E  
                           _CAN_SetupMask 1326                         __size_of_LED_Left 0042  
                    _FRAME_HandleCanFrame 05AA                    __size_of_IsInNeighbors 00CA  
                       __size_of_LOCK_Get 0004                         __size_of_LOCK_Set 0008  
                       _WriteDataToEEPROM 0CC8                  __end_of_ReadDataToEEPROM 0E8C  
                          CAN_TakeFrame@k 0037                        ?_WriteDataToEEPROM 0025  
                         ?_ReadfromEEPROM 002A                             __pidataCOMRAM 1A14  
                       __size_of_ISR_high 1A8A                      _MOCK_PrzyspieszenieX 1A4A  
                    _MOCK_PrzyspieszenieY 1A40                      _MOCK_PrzyspieszenieZ 1A36  
                              LED_Right@a 002A                                LED_Right@b 002E  
                   MOC_Frame_Counter@zeta 003F                         __size_of_NVMWrite 0036  
                           ??_LED_Control 002C                       ??_WriteDataToEEPROM 0033  
                       __size_of_NVMalloc 0036                       start_initialization 145E  
                          ?_CAN_TakeFrame 0032                            ?_CAN_SendFrame 002F  
         FRAME_SensorExcitationStatus@tru 0030            __end_of_MOCK_Klikniecie_Spadek 1A5E  
                        __CFG_OSC$IRCIO67 000000         __size_of_FRAME_PrzypisanieDokarty 009E  
               ?_FRAME_PrzypisanieDokarty 002A                     ?_TMR1_Update_flag_Get 002A  
                   ?_TMR1_Update_flag_Set 002A                            ?_CAN_SetupMask 0025  
                   __end_of_LED_Light_Pos 1006                     ?_FRAME_HandleCanFrame 0036  
               __end_of_WriteDataToEEPROM 0DAA                               ??_CAN_GenID 002D  
                             ??_CAN_Setup 002A                          __CFG_LPT1OSC$OFF 000000  
                   ?_MOCK_PrzyspieszenieX 002A                     ?_MOCK_PrzyspieszenieY 002A  
                   ?_MOCK_PrzyspieszenieZ 002A                  CAN_MoveBuffIntoFrame@Buf 002C  
    __end_of_FRAME_SensorExcitationStatus 0CC8     __size_of_FRAME_SensorExcitationStatus 010C  
                CAN_MoveBuffIntoFrame@Ram 002A              _FRAME_SensorExcitationStatus 0BBC  
          __size_of_CAN_MoveBuffIntoFrame 002A                               __pbssBIGRAM 00DF  
           __end_of_CAN_MoveBuffIntoFrame 1922                           _Fulfillment_Lvl 0045  
                             __pbssCOMRAM 0001                                  ?_INI_All 0025  
                 _FRAME_AdressOfNeighbors 0062                             __pcstackBANK0 00CE  
                           _IsInNeighbors 0E8C                         ?_TMR1_Timer_reset 0025  
                         _ustawieniaKarty 0017                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0025   __end_of_FRAME_DataUpdateAndChangeOption 1512  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 002C  
        ?_FRAME_DataUpdateAndChangeOption 002A           _FRAME_DataUpdateAndChangeOption 14B8  
                           ??_MOC_NOTWORK 002C                __end_of_CAN_SetupFilter_Ne 113A  
                                ?_NVMInit 0025                                  ?_NVMRead 002C  
                      ??_TMR1_Timer_reset 0025                               ??_LED_Error 002F  
                          NVMWrite@source 002D                               ??_LED_Right 002C  
            __size_of_TRM_DataTransmition 004C                       __end_of_LED_Control 0A74  
             ?_FRAME_ExcitationMultiplier 002A                               ??_INI_Timer 002A  
                   __end_of_INI_LED_Start 18C8                          ___lwdiv@dividend 002A  
                               __pintcode 0008                                  ?___awdiv 002A  
                 ??_FRAME_SoftwareVersion 002C          __end_of_MOC_Aktualna_Temperatura 1A36  
                                ?___lwdiv 002A                         FRAME_Plot@message 0031  
                             __pintcodelo 0018               __end_of_INI_GlobalInterrupt 1A14  
                         ??_CAN_TakeFrame 0034             ?_FRAME_SensorExcitationStatus 002C  
  __end_of_MOC_Wynikowa_wartosc_roznicowa 1A2C   __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
          _MOC_Wynikowa_wartosc_roznicowa 1A22                               _COMSTATbits 000F74  
                          ?_IsInNeighbors 002A                           ??_CAN_SendFrame 0031  
                        ___lwdiv@quotient 002F                   ?i1_TMR1_Update_flag_Set 0025  
             FRAME_AveragingTimes@message 002A                    ??_TMR1_Update_flag_Get 002C  
                  ??_TMR1_Update_flag_Set 002C                           ??_CAN_SetupMask 002A  
                                _LED_Left 16A2                    ??_FRAME_HandleCanFrame 0038  
                    CAN_TakeFrame@message 0032                       __end_of_MOC_NOTWORK 1A84  
                                _LOCK_Get 1A92                      CAN_TakeFrame@tempCON 0036  
                                _LOCK_Set 1A84                __size_of_WriteDataToEEPROM 00E2  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _RXB0SIDH 000F61                                  _RXB0SIDL 000F62  
                                _RXF0EIDH 000F02                                  _RXF0EIDL 000F03  
                                _RXF1EIDH 000F06                                  _RXF1EIDL 000F07  
                                _RXF2EIDH 000F0A                                  _RXF2EIDL 000F0B  
                                _RXF3EIDH 000F0E                                  _RXF3EIDL 000F0F  
                                _RXF4EIDH 000F12                                  _RXF4EIDL 000F13  
                                _RXF5EIDH 000F16                                  _RXF5EIDL 000F17  
                                _RXF6EIDH 000D62                                  _RXF6EIDL 000D63  
                                _RXF0SIDH 000F00                                  _RXF7EIDH 000D66  
                                _RXF0SIDL 000F01                                  _RXF7EIDL 000D67  
                                _RXF1SIDH 000F04                                  _RXF8EIDH 000D6A  
                                _RXF1SIDL 000F05                                  _RXF8EIDL 000D6B  
                                _RXF2SIDH 000F08                                  _RXF9EIDH 000D72  
                                _RXF2SIDL 000F09                                  _RXF9EIDL 000D73  
                                _RXF3SIDH 000F0C                                  _RXF3SIDL 000F0D  
                                _ISR_high 0008                                  _RXF4SIDH 000F10  
                                _RXF4SIDL 000F11                                  _RXF5SIDH 000F14  
                                _RXF5SIDL 000F15                                  _RXF6SIDH 000D60  
                                _RXF6SIDL 000D61                                  _RXM0EIDH 000F1A  
                                _RXF7SIDH 000D64                                  _RXM0EIDL 000F1B  
                                _RXF7SIDL 000D65                                  _RXM1EIDH 000F1E  
                                _RXF8SIDH 000D68                                  _RXM1EIDL 000F1F  
                                _RXF8SIDL 000D69                                  _RXF9SIDH 000D70  
                  ??_MOCK_PrzyspieszenieX 002C                    ??_MOCK_PrzyspieszenieY 002C  
                                _RXF9SIDL 000D71                    ??_MOCK_PrzyspieszenieZ 002C  
                                _RXFBCON0 000DE0                                  _RXFBCON1 000DE1  
                                _RXFBCON2 000DE2                                  _RXFBCON3 000DE3  
                                _RXFBCON4 000DE4                                  _RXM0SIDH 000F18  
                                _RXM0SIDL 000F19                                  _RXM1SIDH 000F1C  
                                _RXM1SIDL 000F1D                  __end_of_FRAME_AxisStatus 17C0  
                                _NVMWrite 1754                                  _NVMalloc 17F6  
               ??_FRAME_AdressOfNeighbors 002E                          _DetectorLedRadar 00CB  
                             _LED_Control 0922                          __size_of_INI_All 0022  
            FRAME_ExcitationValue@message 002A                     __end_of_WritetoEEPROM 1860  
          __end_ofi1_TMR1_Update_flag_Set 1A7C                            _nextEEPosition 0005  
                               copy_data0 1472                          __size_of_ISR_low 0046  
      __size_of_FRAME_AccelerometerStatus 0076              __end_of_FRAME_AveragingTimes 17F6  
                        __size_of_NVMInit 003A                          __size_of_NVMRead 0034  
              ?_FRAME_AccelerometerStatus 002C            __size_of_FRAME_ExcitationValue 0036  
           __end_of_FRAME_ExcitationValue 1754                                _EECON1bits 000FA6  
                                __Hrparam 0000                              _RXB0SIDLbits 000F62  
                        ??_ReadfromEEPROM 002C                                  __Lrparam 0000  
                       ?_ReadDataToEEPROM 0025                          __size_of___awdiv 0084  
                        __size_of___lwdiv 0052                        ??_ReadDataToEEPROM 0032  
                         ??_IsInNeighbors 002C                  _MOC_Aktualna_Temperatura 1A2C  
         FRAME_PrzypisanieDokarty@message 002A                        LED_Light_Pos@flage 003A  
                      LED_Light_Pos@color 0035          __end_of_FRAME_PrzypisanieDokarty 10A4  
                            _RXF0SIDLbits 000F01                  FRAME_AnalogValue@message 002A  
                         ___lwdiv@divisor 002C                              _RXF1SIDLbits 000F05  
                         ___lwdiv@counter 002E                                  __ptext10 1A84  
                                __ptext11 1A92                                  __ptext20 1754  
                                __ptext12 0E8C                                  __ptext21 182C  
                                __ptext13 1006                                  __ptext30 1A4A  
                                __ptext22 14B8                                  __ptext14 1512  
                                __ptext31 1A54                                  __ptext23 178A  
                                __ptext15 1A96                                  __ptext40 0F56  
                                __ptext32 07B0                                  __ptext24 17C0  
                                __ptext16 171E                                  __ptext41 156A  
                                __ptext33 1238                                  __ptext25 1A98  
                                __ptext17 15BC                                  __ptext50 19CE  
                                __ptext42 1656                                  __ptext34 032E  
                                __ptext26 0062                                  __ptext18 0A74  
                                __ptext51 1990                                  __ptext43 16A2  
                                __ptext35 113A                                  __ptext27 12B0  
                                __ptext19 0CC8                                  __ptext60 1A72  
                                __ptext52 1894                                  __ptext44 196E  
                                __ptext36 18F8                                  __ptext28 1A36  
          ??_FRAME_SensorExcitationStatus 002E                                  __ptext61 194A  
                                __ptext53 0922                                  __ptext45 0DAA  
                                __ptext37 1A5E                                  __ptext29 1A40  
                                __ptext54 1A06                                  __ptext46 1860  
                                __ptext38 1A68                                  __ptext55 13FA  
                                __ptext47 19E6                                  __ptext39 11BE  
                                __ptext56 1326                                  __ptext48 16E4  
                                __ptext57 10A4                                  __ptext49 17F6  
                                __ptext58 1922             TRM_DataTransmition@canMessage 00CE  
                            _RXF2SIDLbits 000F09                               _MOC_NOTWORK 1A7C  
                            _RXF3SIDLbits 000F0D                 FRAME_HandleCanFrame@ident 003C  
                            _RXF4SIDLbits 000F11                  FRAME_DeviceReset@message 0033  
       __end_of_FRAME_AccelerometerStatus 1326                              _RXF5SIDLbits 000F15  
                              _FRAME_Plot 1512                             __size_of_main 0030  
                            _RXF6SIDLbits 000D61                              _RXF7SIDLbits 000D65  
                 __size_of_CAN_SetupClock 0028                              _RXF8SIDLbits 000D69  
                            _RXF9SIDLbits 000D71                                  int$flags 004C  
                     _TRM_DataTransmition 160A                               _RXB0DLCbits 000F65  
                              _LED_Update 11BE                               _RXB0CONbits 000F60  
                              _INTCONbits 000FF2                                _INI_OUTPUT 1990  
                       _FRAME_AnalogValue 1A98                      ?_TRM_DataTransmition 0025  
            FRAME_SoftwareVersion@message 002A                                  intlevel1 0000  
                                intlevel2 0000                           _czujnikiNaMapie 0007  
                      ?_FRAME_AnalogValue 002A       FRAME_SensorExcitationStatus@message 002C  
                             _TXB0CONbits 000F40                       ??_FRAME_AnalogValue 002E  
               __size_of_TMR1_Timer_reset 0024                        _CAN_SetupFilter_Ne 10A4  
                LED_Light_Pos@fulfillment 0033                      _FRAME_AveragingTimes 17C0  
                     ?_CAN_SetupFilter_Ne 0025            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0A74             __end_of_FRAME_SoftwareVersion 13FA  
                      ?_FRAME_DeviceReset 0033                           LED_Update@Green 0047  
               __end_of_FRAME_AnalogValue 1A9A                    __size_of_LED_Light_Pos 00B0  
                   _CAN_MoveBuffIntoFrame 18F8                                _WDTCONbits 000FD1  
                     ??_FRAME_DeviceReset 0035                     ??_TRM_DataTransmition 003F  
                _FRAME_PrzypisanieDokarty 1006                    LED_Light_Pos@LED_array 0036  
                    ??_CAN_SetupFilter_Ne 002A                            LED_Update@pos1 0043  
                          LED_Update@pos2 0041                               ?_FRAME_Plot 0031  
