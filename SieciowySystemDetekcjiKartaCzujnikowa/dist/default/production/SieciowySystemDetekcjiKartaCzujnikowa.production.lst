

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 18:36:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           ; Version 2.05
    64                           ; Generated 20/12/2018 GMT
    65                           ; 
    66                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4680 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataCOMRAM
    99  000FB0                     __pidataCOMRAM:
   100                           	opt callstack 0
   101                           
   102                           ;initializer for LED_Update@pos2
   103  000FB0  0001               	dw	1
   104                           
   105                           ;initializer for LED_Update@pos1
   106  000FB2  0001               	dw	1
   107                           
   108                           ;initializer for _Fulfillment_Lvl
   109  000FB4  0014               	dw	20
   110                           
   111                           ;initializer for LED_Update@Green
   112  000FB6  01                 	db	1
   113  0000                     _RXFCON0	set	3540
   114  0000                     _MSEL3	set	3571
   115  0000                     _MSEL2	set	3570
   116  0000                     _MSEL1	set	3569
   117  0000                     _MSEL0	set	3568
   118  0000                     _BIE0	set	3578
   119  0000                     _BSEL0	set	3576
   120  0000                     _B5CON	set	3696
   121  0000                     _B4CON	set	3680
   122  0000                     _B3CON	set	3664
   123  0000                     _B2CON	set	3648
   124  0000                     _B1CON	set	3632
   125  0000                     _B0CON	set	3616
   126  0000                     _TXB0CONbits	set	3904
   127  0000                     _RXF2EIDL	set	3851
   128  0000                     _RXF2EIDH	set	3850
   129  0000                     _RXF2SIDLbits	set	3849
   130  0000                     _RXF2SIDL	set	3849
   131  0000                     _RXF2SIDH	set	3848
   132  0000                     _RXF1EIDL	set	3847
   133  0000                     _RXF1EIDH	set	3846
   134  0000                     _RXF1SIDLbits	set	3845
   135  0000                     _RXF1SIDL	set	3845
   136  0000                     _RXF1SIDH	set	3844
   137  0000                     _RXF0EIDL	set	3843
   138  0000                     _RXF0EIDH	set	3842
   139  0000                     _RXF0SIDLbits	set	3841
   140  0000                     _RXF0SIDL	set	3841
   141  0000                     _RXF0SIDH	set	3840
   142  0000                     _RXM1EIDL	set	3871
   143  0000                     _RXM1EIDH	set	3870
   144  0000                     _RXM1SIDL	set	3869
   145  0000                     _RXM1SIDH	set	3868
   146  0000                     _RXM0EIDL	set	3867
   147  0000                     _RXM0EIDH	set	3866
   148  0000                     _RXM0SIDL	set	3865
   149  0000                     _RXM0SIDH	set	3864
   150  0000                     _RXB1CON	set	3920
   151  0000                     _TXB0CON	set	3904
   152  0000                     _INTCONbits	set	4082
   153  0000                     _WDTCONbits	set	4049
   154  0000                     _RCONbits	set	4048
   155  0000                     _TRISC	set	3988
   156  0000                     _LATC	set	3979
   157  0000                     _T1CON	set	4045
   158  0000                     _TMR1H	set	4047
   159  0000                     _TMR1L	set	4046
   160  0000                     _LATE	set	3981
   161  0000                     _LATA	set	3977
   162  0000                     _LATB	set	3978
   163  0000                     _LATD	set	3980
   164  0000                     _TRISD	set	3989
   165  0000                     _TRISE	set	3990
   166  0000                     _TRISB	set	3987
   167  0000                     _TRISA	set	3986
   168  0000                     _RXB0DLCbits	set	3941
   169  0000                     _RXB0DLC	set	3941
   170  0000                     _RXB0SIDH	set	3937
   171  0000                     _RXB0SIDLbits	set	3938
   172  0000                     _RXB0SIDL	set	3938
   173  0000                     _RXB0EIDH	set	3939
   174  0000                     _RXB0EIDL	set	3940
   175  0000                     _COMSTATbits	set	3956
   176  0000                     _RXB0CONbits	set	3936
   177  0000                     _BRGCON3bits	set	3954
   178  0000                     _BRGCON2bits	set	3953
   179  0000                     _BRGCON1bits	set	3952
   180  0000                     _CIOCON	set	3955
   181  0000                     _ECANCON	set	3959
   182  0000                     _PIR3	set	4004
   183  0000                     _IPR3	set	4005
   184  0000                     _PIE3	set	4003
   185  0000                     _RXB0CON	set	3936
   186  0000                     _CANSTAT	set	3950
   187  0000                     _CANCON	set	3951
   188  0000                     _RCON	set	4048
   189  0000                     _RXB0D0	set	3942
   190  0000                     _TMR1IF	set	31984
   191  0000                     _TMR1IP	set	31992
   192  0000                     _PEIE	set	32662
   193  0000                     _IPEN	set	32391
   194  0000                     _TMR1ON	set	32360
   195  0000                     _TMR1IE	set	31976
   196  0000                     _IRCF0	set	32412
   197  0000                     _IRCF1	set	32413
   198  0000                     _IRCF2	set	32414
   199                           
   200                           ; #config settings
   201  0000                     
   202                           	psect	cinit
   203  000C6E                     __pcinit:
   204                           	opt callstack 0
   205  000C6E                     start_initialization:
   206                           	opt callstack 0
   207  000C6E                     __initialization:
   208                           	opt callstack 0
   209                           
   210                           ; Initialize objects allocated to COMRAM (7 bytes)
   211                           ; load TBLPTR registers with __pidataCOMRAM
   212  000C6E  0EB0               	movlw	low __pidataCOMRAM
   213  000C70  6EF6               	movwf	tblptrl,c
   214  000C72  0E0F               	movlw	high __pidataCOMRAM
   215  000C74  6EF7               	movwf	tblptrh,c
   216  000C76  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   217  000C78  6EF8               	movwf	tblptru,c
   218  000C7A  EE00  F043         	lfsr	0,__pdataCOMRAM
   219  000C7E  EE10 F007          	lfsr	1,7
   220  000C82                     copy_data0:
   221  000C82  0009               	tblrd		*+
   222  000C84  CFF5 FFEE          	movff	tablat,postinc0
   223  000C88  50E5               	movf	postdec1,w,c
   224  000C8A  50E1               	movf	fsr1l,w,c
   225  000C8C  E1FA               	bnz	copy_data0
   226                           
   227                           ; Clear objects allocated to BANK0 (85 bytes)
   228  000C8E  EE00  F060         	lfsr	0,__pbssBANK0
   229  000C92  0E55               	movlw	85
   230  000C94                     clear_0:
   231  000C94  6AEE               	clrf	postinc0,c
   232  000C96  06E8               	decf	wreg,f,c
   233  000C98  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to COMRAM (29 bytes)
   236  000C9A  EE00  F026         	lfsr	0,__pbssCOMRAM
   237  000C9E  0E1D               	movlw	29
   238  000CA0                     clear_1:
   239  000CA0  6AEE               	clrf	postinc0,c
   240  000CA2  06E8               	decf	wreg,f,c
   241  000CA4  E1FD               	bnz	clear_1
   242  000CA6                     end_of_initialization:
   243                           	opt callstack 0
   244  000CA6                     __end_of__initialization:
   245                           	opt callstack 0
   246  000CA6  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   247  000CA8  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   248  000CAA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249  000CAC  6EF8               	movwf	tblptru,c
   250  000CAE  0100               	movlb	0
   251  000CB0  EF01  F007         	goto	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMRAM
   254  000026                     __pbssCOMRAM:
   255                           	opt callstack 0
   256  000026                     _ramkaCanTxKarty:
   257                           	opt callstack 0
   258  000026                     	ds	17
   259  000037                     _DaneCan:
   260                           	opt callstack 0
   261  000037                     	ds	4
   262  00003B                     _TMR1_Update_flag:
   263                           	opt callstack 0
   264  00003B                     	ds	2
   265  00003D                     _DetectorLedRadar:
   266                           	opt callstack 0
   267  00003D                     	ds	2
   268  00003F                     	ds	1
   269  000040                     	ds	1
   270  000041                     ISR_low@ramkaStanuU8:
   271                           	opt callstack 0
   272  000041                     	ds	1
   273  000042                     	ds	1
   274                           
   275                           	psect	dataCOMRAM
   276  000043                     __pdataCOMRAM:
   277                           	opt callstack 0
   278  000043                     LED_Update@pos2:
   279                           	opt callstack 0
   280  000043                     	ds	2
   281  000045                     LED_Update@pos1:
   282                           	opt callstack 0
   283  000045                     	ds	2
   284  000047                     _Fulfillment_Lvl:
   285                           	opt callstack 0
   286  000047                     	ds	2
   287  000049                     LED_Update@Green:
   288                           	opt callstack 0
   289  000049                     	ds	1
   290                           
   291                           	psect	bssBANK0
   292  000060                     __pbssBANK0:
   293                           	opt callstack 0
   294  000060                     _ramkaCanRxKarty:
   295                           	opt callstack 0
   296  000060                     	ds	85
   297                           
   298                           	psect	cstackCOMRAM
   299  000001                     __pcstackCOMRAM:
   300                           	opt callstack 0
   301  000001                     TMR1_Timer_reset@t1L:
   302                           	opt callstack 0
   303  000001                     i1TMR1_Update_flag_Set@a:
   304                           	opt callstack 0
   305                           
   306                           ; 2 bytes @ 0x0
   307  000001                     	ds	1
   308  000002                     TMR1_Timer_reset@t1H:
   309                           	opt callstack 0
   310                           
   311                           ; 1 bytes @ 0x1
   312  000002                     	ds	1
   313  000003                     ??_ISR_low:
   314  000003                     
   315                           ; 1 bytes @ 0x2
   316  000003                     	ds	3
   317  000006                     ??_CAN_Setup:
   318  000006                     ?_TMR1_Update_flag_Get:
   319                           	opt callstack 0
   320  000006                     ?_LED_Right:
   321                           	opt callstack 0
   322  000006                     ?_LED_Left:
   323                           	opt callstack 0
   324  000006                     ?_MOC_StanWzbudzenia:
   325                           	opt callstack 0
   326  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   327                           	opt callstack 0
   328  000006                     ?_MOC_Frame_Counter:
   329                           	opt callstack 0
   330  000006                     ?_MOC_Aktualna_Temperatura:
   331                           	opt callstack 0
   332  000006                     ?_MOC_NOTWORK:
   333                           	opt callstack 0
   334  000006                     ?___awdiv:
   335                           	opt callstack 0
   336  000006                     ?___lwdiv:
   337                           	opt callstack 0
   338  000006                     CAN_MoveBuffIntoFrame@Ram:
   339                           	opt callstack 0
   340  000006                     CAN_GenID@message:
   341                           	opt callstack 0
   342  000006                     LED_Right@a:
   343                           	opt callstack 0
   344  000006                     LED_Left@a:
   345                           	opt callstack 0
   346  000006                     LED_Control@diode:
   347                           	opt callstack 0
   348  000006                     TMR1_Update_flag_Set@a:
   349                           	opt callstack 0
   350  000006                     FRAME_AccelerometerStatus@message:
   351                           	opt callstack 0
   352  000006                     FRAME_ExcitationValue@message:
   353                           	opt callstack 0
   354  000006                     FRAME_ExcitationMultiplier@message:
   355                           	opt callstack 0
   356  000006                     FRAME_AveragingTimes@message:
   357                           	opt callstack 0
   358  000006                     FRAME_AxisStatus@message:
   359                           	opt callstack 0
   360  000006                     FRAME_DeviceReset@message:
   361                           	opt callstack 0
   362  000006                     FRAME_Plot@message:
   363                           	opt callstack 0
   364  000006                     FRAME_MapPosition@message:
   365                           	opt callstack 0
   366  000006                     FRAME_SoftwareVersion@message:
   367                           	opt callstack 0
   368  000006                     FRAME_AnalogValue@message:
   369                           	opt callstack 0
   370  000006                     FRAME_AdressOfNeighbors@message:
   371                           	opt callstack 0
   372  000006                     ___awdiv@dividend:
   373                           	opt callstack 0
   374  000006                     ___lwdiv@dividend:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x5
   378  000006                     	ds	2
   379  000008                     ??_LED_Right:
   380  000008                     CAN_GenID@frameID:
   381                           	opt callstack 0
   382  000008                     CAN_MoveBuffIntoFrame@Buf:
   383                           	opt callstack 0
   384  000008                     LED_Left@b:
   385                           	opt callstack 0
   386  000008                     FRAME_SensorExcitationStatus@message:
   387                           	opt callstack 0
   388  000008                     FRAME_AnalogValue@set:
   389                           	opt callstack 0
   390  000008                     FRAME_AdressOfNeighbors@nrRamki:
   391                           	opt callstack 0
   392  000008                     ___awdiv@divisor:
   393                           	opt callstack 0
   394  000008                     ___lwdiv@divisor:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x7
   398  000008                     	ds	1
   399  000009                     ??_CAN_GenID:
   400  000009                     FRAME_ExcitationMultiplier@i:
   401                           	opt callstack 0
   402                           
   403                           ; 2 bytes @ 0x8
   404  000009                     	ds	1
   405  00000A                     CAN_MoveBuffIntoFrame@i:
   406                           	opt callstack 0
   407  00000A                     LED_Control@color:
   408                           	opt callstack 0
   409  00000A                     ___awdiv@counter:
   410                           	opt callstack 0
   411  00000A                     LED_Right@b:
   412                           	opt callstack 0
   413  00000A                     ___lwdiv@quotient:
   414                           	opt callstack 0
   415                           
   416                           ; 2 bytes @ 0x9
   417  00000A                     	ds	1
   418  00000B                     ___awdiv@sign:
   419                           	opt callstack 0
   420  00000B                     CAN_SendFrame@message:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0xA
   424  00000B                     	ds	1
   425  00000C                     ___lwdiv@counter:
   426                           	opt callstack 0
   427  00000C                     ___awdiv@quotient:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0xB
   431  00000C                     	ds	1
   432  00000D                     ??_CAN_SendFrame:
   433  00000D                     LED_Light_Pos@pos:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0xC
   437  00000D                     	ds	1
   438  00000E                     CAN_TakeFrame@message:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0xD
   442  00000E                     	ds	1
   443  00000F                     LED_Light_Pos@fulfillment:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0xE
   447  00000F                     	ds	1
   448  000010                     ??_CAN_TakeFrame:
   449  000010                     FRAME_HandleCanFrame@message:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0xF
   453  000010                     	ds	1
   454  000011                     LED_Light_Pos@color:
   455                           	opt callstack 0
   456                           
   457                           ; 1 bytes @ 0x10
   458  000011                     	ds	1
   459  000012                     ??_FRAME_HandleCanFrame:
   460  000012                     CAN_TakeFrame@tempCON:
   461                           	opt callstack 0
   462  000012                     LED_Light_Pos@LED_array:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x11
   466  000012                     	ds	1
   467  000013                     CAN_TakeFrame@k:
   468                           	opt callstack 0
   469                           
   470                           ; 1 bytes @ 0x12
   471  000013                     	ds	1
   472  000014                     FRAME_HandleCanFrame@identyfikator:
   473                           	opt callstack 0
   474  000014                     LED_Light_Pos@pos2:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x13
   478  000014                     	ds	1
   479  000015                     TRM_DataTransmition@canMessage:
   480                           	opt callstack 0
   481                           
   482                           ; 17 bytes @ 0x14
   483  000015                     	ds	1
   484  000016                     LED_Light_Pos@flage:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x15
   488  000016                     	ds	2
   489  000018                     
   490                           ; 1 bytes @ 0x17
   491  000018                     	ds	14
   492  000026                     
   493                           ; 1 bytes @ 0x25
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 89 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels required when called:    7
   519 ;; This function calls:
   520 ;;		_INI_All
   521 ;;		_LED_Update
   522 ;;		_TMR1_Update_flag_Get
   523 ;;		_TMR1_Update_flag_Set
   524 ;;		_TRM_DataTransmition
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text0
   531  000E02                     __ptext0:
   532                           	opt callstack 0
   533  000E02                     _main:
   534                           	opt callstack 24
   535                           
   536                           ;main.c: 91:     INI_All();
   537                           
   538                           ;incstack = 0
   539  000E02  EC91  F007         	call	_INI_All	;wreg free
   540                           
   541                           ;main.c: 93:     RCON = 0xFF;
   542  000E06  68D0               	setf	4048,c	;volatile
   543  000E08                     l2721:
   544                           
   545                           ;main.c: 96:     {;main.c: 97:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   546  000E08  B03D               	btfsc	_DetectorLedRadar,0,c
   547                           
   548                           ;main.c: 98:         {;main.c: 99:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   549  000E0A  903D               	bcf	_DetectorLedRadar,0,c
   550                           
   551                           ;main.c: 103:         if(TMR1_Update_flag_Get()==1)
   552  000E0C  ECCA  F007         	call	_TMR1_Update_flag_Get	;wreg free
   553  000E10  0406               	decf	?_TMR1_Update_flag_Get,w,c
   554  000E12  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   555  000E14  A4D8               	btfss	status,2,c
   556  000E16  D008               	goto	l2731
   557                           
   558                           ;main.c: 104:         {;main.c: 105:             LED_Update();
   559  000E18  EC96  F005         	call	_LED_Update	;wreg free
   560                           
   561                           ;main.c: 106:             TMR1_Update_flag_Set(0);
   562  000E1C  0E00               	movlw	0
   563  000E1E  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   564  000E20  0E00               	movlw	0
   565  000E22  6E06               	movwf	TMR1_Update_flag_Set@a,c
   566  000E24  ECC5  F007         	call	_TMR1_Update_flag_Set	;wreg free
   567  000E28                     l2731:
   568                           
   569                           ;main.c: 110:         TRM_DataTransmition();
   570  000E28  EC6B  F005         	call	_TRM_DataTransmition	;wreg free
   571  000E2C  0004               	clrwdt		;# 
   572                           
   573                           ;main.c: 112:     }
   574  000E2E  D7EC               	goto	l2721
   575  000E30                     __end_of_main:
   576                           	opt callstack 0
   577                           
   578 ;; *************** function _TRM_DataTransmition *****************
   579 ;; Defined at:
   580 ;;		line 16 in file "TRM.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  canMessage     17   20[COMRAM] struct .
   585 ;;  i               1    0        unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   596 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   598 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   599 ;;Total ram usage:       17 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    6
   602 ;; This function calls:
   603 ;;		_CAN_TakeFrame
   604 ;;		_FRAME_HandleCanFrame
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text1
   611  000AD6                     __ptext1:
   612                           	opt callstack 0
   613  000AD6                     _TRM_DataTransmition:
   614                           	opt callstack 24
   615                           
   616                           ;TRM.c: 18:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 19:     BYTE i;;TRM.c:
      +                           20:     mID canMessage;;TRM.c: 23:     if(DaneCan.Flags.wyslijRamkeStanu)
   617                           
   618                           ;incstack = 0
   619  000AD6  A037               	btfss	_DaneCan,0,c
   620  000AD8  D013               	goto	l2691
   621                           
   622                           ;TRM.c: 24:     {;TRM.c: 26:         canMessage.message_type = 0x02;
   623  000ADA  0E02               	movlw	2
   624  000ADC  6E16               	movwf	TRM_DataTransmition@canMessage+1,c
   625                           
   626                           ;TRM.c: 27:         canMessage.id.Val = 0;
   627  000ADE  0E00               	movlw	0
   628  000AE0  6E19               	movwf	TRM_DataTransmition@canMessage+4,c
   629  000AE2  0E00               	movlw	0
   630  000AE4  6E1A               	movwf	TRM_DataTransmition@canMessage+5,c
   631  000AE6  0E00               	movlw	0
   632  000AE8  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   633  000AEA  0E00               	movlw	0
   634  000AEC  6E1C               	movwf	TRM_DataTransmition@canMessage+7,c
   635                           
   636                           ;TRM.c: 28:         canMessage.id.v[2] = 0x01 *4;
   637  000AEE  0E04               	movlw	4
   638  000AF0  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   639                           
   640                           ;TRM.c: 29:         FRAME_HandleCanFrame(&canMessage);
   641  000AF2  0E15               	movlw	low TRM_DataTransmition@canMessage
   642  000AF4  6E10               	movwf	FRAME_HandleCanFrame@message,c
   643  000AF6  0E00               	movlw	high TRM_DataTransmition@canMessage
   644  000AF8  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   645  000AFA  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   646                           
   647                           ;TRM.c: 46:         DaneCan.Flags.wyslijRamkeStanu = 0;
   648  000AFE  9037               	bcf	_DaneCan,0,c
   649  000B00                     l2691:
   650                           
   651                           ;TRM.c: 56:     if(CAN_TakeFrame(&canMessage))
   652  000B00  0E15               	movlw	low TRM_DataTransmition@canMessage
   653  000B02  6E0E               	movwf	CAN_TakeFrame@message,c
   654  000B04  0E00               	movlw	high TRM_DataTransmition@canMessage
   655  000B06  6E0F               	movwf	CAN_TakeFrame@message+1,c
   656  000B08  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   657  000B0C  0900               	iorlw	0
   658  000B0E  B4D8               	btfsc	status,2,c
   659  000B10  0012               	return	
   660                           
   661                           ;TRM.c: 57:     {;TRM.c: 58:         if((canMessage.buffer == 0) || (canMessage.buffer =
      +                          = 1))
   662  000B12  5018               	movf	TRM_DataTransmition@canMessage+3,w,c
   663  000B14  B4D8               	btfsc	status,2,c
   664  000B16  D003               	goto	u1320
   665  000B18  0418               	decf	TRM_DataTransmition@canMessage+3,w,c
   666  000B1A  A4D8               	btfss	status,2,c
   667  000B1C  0012               	return	
   668  000B1E                     u1320:
   669                           
   670                           ;TRM.c: 59:         {;TRM.c: 60:             FRAME_HandleCanFrame(&canMessage);
   671  000B1E  0E15               	movlw	low TRM_DataTransmition@canMessage
   672  000B20  6E10               	movwf	FRAME_HandleCanFrame@message,c
   673  000B22  0E00               	movlw	high TRM_DataTransmition@canMessage
   674  000B24  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   675  000B26  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   676                           
   677                           ;TRM.c: 61:         }
   678  000B2A  0012               	return		;funcret
   679  000B2C                     __end_of_TRM_DataTransmition:
   680                           	opt callstack 0
   681                           
   682 ;; *************** function _FRAME_HandleCanFrame *****************
   683 ;; Defined at:
   684 ;;		line 445 in file "FRAME.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  message         2   15[COMRAM] PTR struct .
   687 ;;		 -> TRM_DataTransmition@canMessage(17), 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  identyfikato    1   19[COMRAM] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   702 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   703 ;;Total ram usage:        5 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    5
   706 ;; This function calls:
   707 ;;		_CAN_GenID
   708 ;;		_CAN_SendFrame
   709 ;;		_FRAME_AccelerometerStatus
   710 ;;		_FRAME_AdressOfNeighbors
   711 ;;		_FRAME_AnalogValue
   712 ;;		_FRAME_AveragingTimes
   713 ;;		_FRAME_AxisStatus
   714 ;;		_FRAME_DeviceReset
   715 ;;		_FRAME_ExcitationMultiplier
   716 ;;		_FRAME_ExcitationValue
   717 ;;		_FRAME_MapPosition
   718 ;;		_FRAME_Plot
   719 ;;		_FRAME_SensorExcitationStatus
   720 ;;		_FRAME_SoftwareVersion
   721 ;;		_LED_Clear
   722 ;;		_LED_Error
   723 ;;		___awdiv
   724 ;; This function is called by:
   725 ;;		_TRM_DataTransmition
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text2
   730  0002DC                     __ptext2:
   731                           	opt callstack 0
   732  0002DC                     _FRAME_HandleCanFrame:
   733                           	opt callstack 24
   734                           
   735                           ;FRAME.c: 445: void FRAME_HandleCanFrame(mID * message);FRAME.c: 446: {;FRAME.c: 447:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   736                           
   737                           ;incstack = 0
   738  0002DC  EE20 F006          	lfsr	2,6
   739  0002E0  5010               	movf	FRAME_HandleCanFrame@message,w,c
   740  0002E2  26D9               	addwf	fsr2l,f,c
   741  0002E4  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   742  0002E6  22DA               	addwfc	fsr2h,f,c
   743  0002E8  50DF               	movf	indf2,w,c
   744  0002EA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   745  0002EC  5012               	movf	??_FRAME_HandleCanFrame,w,c
   746  0002EE  6E06               	movwf	___awdiv@dividend,c
   747  0002F0  6A07               	clrf	___awdiv@dividend+1,c
   748  0002F2  0E00               	movlw	0
   749  0002F4  6E09               	movwf	___awdiv@divisor+1,c
   750  0002F6  0E04               	movlw	4
   751  0002F8  6E08               	movwf	___awdiv@divisor,c
   752  0002FA  EC66  F004         	call	___awdiv	;wreg free
   753  0002FE  5006               	movf	?___awdiv,w,c
   754  000300  6E14               	movwf	FRAME_HandleCanFrame@identyfikator,c
   755                           
   756                           ;FRAME.c: 449:     switch(identyfikator)
   757  000302  D060               	goto	l2639
   758  000304                     l2613:
   759                           
   760                           ;FRAME.c: 452:             FRAME_SensorExcitationStatus(message);
   761  000304  C010  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   762  000308  C011  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   763  00030C  EC14  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   764                           
   765                           ;FRAME.c: 453:             break;
   766  000310  D08B               	goto	l2641
   767  000312                     l2615:
   768                           
   769                           ;FRAME.c: 455:             FRAME_AccelerometerStatus(message);
   770  000312  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   771  000316  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   772  00031A  ECCC  F006         	call	_FRAME_AccelerometerStatus	;wreg free
   773                           
   774                           ;FRAME.c: 456:             break;
   775  00031E  D084               	goto	l2641
   776  000320                     l2617:
   777                           
   778                           ;FRAME.c: 458:             FRAME_ExcitationValue(message);
   779  000320  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   780  000324  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   781  000328  EC7B  F006         	call	_FRAME_ExcitationValue	;wreg free
   782                           
   783                           ;FRAME.c: 459:             break;
   784  00032C  D07D               	goto	l2641
   785  00032E                     l2619:
   786                           
   787                           ;FRAME.c: 461:             FRAME_ExcitationMultiplier(message);
   788  00032E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   789  000332  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   790  000336  ECEA  F005         	call	_FRAME_ExcitationMultiplier	;wreg free
   791                           
   792                           ;FRAME.c: 462:             break;
   793  00033A  D076               	goto	l2641
   794  00033C                     l2621:
   795                           
   796                           ;FRAME.c: 464:             FRAME_AveragingTimes(message);
   797  00033C  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   798  000340  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   799  000344  ECB1  F006         	call	_FRAME_AveragingTimes	;wreg free
   800                           
   801                           ;FRAME.c: 465:             break;
   802  000348  D06F               	goto	l2641
   803  00034A                     l2623:
   804                           
   805                           ;FRAME.c: 467:             FRAME_AxisStatus(message);
   806  00034A  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   807  00034E  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   808  000352  EC96  F006         	call	_FRAME_AxisStatus	;wreg free
   809                           
   810                           ;FRAME.c: 468:             break;
   811  000356  D068               	goto	l2641
   812  000358                     l2625:
   813                           
   814                           ;FRAME.c: 470:             FRAME_DeviceReset(message);
   815  000358  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   816  00035C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   817  000360  EC3F  F005         	call	_FRAME_DeviceReset	;wreg free
   818                           
   819                           ;FRAME.c: 471:             break;
   820  000364  D061               	goto	l2641
   821  000366                     l2627:
   822                           
   823                           ;FRAME.c: 473:             FRAME_Plot(message);
   824  000366  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   825  00036A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   826  00036E  EC53  F007         	call	_FRAME_Plot	;wreg free
   827                           
   828                           ;FRAME.c: 474:             break;
   829  000372  D05A               	goto	l2641
   830  000374                     l2629:
   831                           
   832                           ;FRAME.c: 476:             FRAME_MapPosition(message);
   833  000374  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   834  000378  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   835  00037C  ECE0  F007         	call	_FRAME_MapPosition	;wreg free
   836                           
   837                           ;FRAME.c: 477:             break;
   838  000380  D053               	goto	l2641
   839  000382                     l2631:
   840                           
   841                           ;FRAME.c: 479:             FRAME_SoftwareVersion(message);
   842  000382  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   843  000386  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   844  00038A  ECDF  F007         	call	_FRAME_SoftwareVersion	;wreg free
   845                           
   846                           ;FRAME.c: 480:             break;
   847  00038E  D04C               	goto	l2641
   848  000390                     l2633:
   849                           
   850                           ;FRAME.c: 483:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   851  000390  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   852  000394  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   853  000398  0EF4               	movlw	244
   854  00039A  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   855  00039C  6E08               	movwf	FRAME_AnalogValue@set,c
   856  00039E  6A09               	clrf	FRAME_AnalogValue@set+1,c
   857  0003A0  0EFF               	movlw	255
   858  0003A2  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   859  0003A4  ECE1  F007         	call	_FRAME_AnalogValue	;wreg free
   860                           
   861                           ;FRAME.c: 484:             break;
   862  0003A8  D03F               	goto	l2641
   863  0003AA                     l2635:
   864                           
   865                           ;FRAME.c: 487:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   866  0003AA  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   867  0003AE  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   868  0003B2  0EF0               	movlw	240
   869  0003B4  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   870  0003B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   871  0003B8  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   872  0003BA  0EFF               	movlw	255
   873  0003BC  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   874  0003BE  ECE2  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
   875                           
   876                           ;FRAME.c: 488:             break;
   877  0003C2  D032               	goto	l2641
   878  0003C4                     l2639:
   879  0003C4  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   880  0003C6  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   881  0003C8  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   882                           
   883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   884                           ; Switch size 1, requested type "simple"
   885                           ; Number of cases is 1, Range of values is 0 to 0
   886                           ; switch strategies available:
   887                           ; Name         Instructions Cycles
   888                           ; simple_byte            4     3 (average)
   889                           ;	Chosen strategy is simple_byte
   890  0003CA  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
   891  0003CC  0A00               	xorlw	0	; case 0
   892  0003CE  A4D8               	btfss	status,2,c
   893  0003D0  D02B               	goto	l2641
   894                           
   895                           ; Switch size 1, requested type "simple"
   896                           ; Number of cases is 14, Range of values is 1 to 17
   897                           ; switch strategies available:
   898                           ; Name         Instructions Cycles
   899                           ; simple_byte           43    22 (average)
   900                           ;	Chosen strategy is simple_byte
   901  0003D2  5012               	movf	??_FRAME_HandleCanFrame,w,c
   902  0003D4  0A01               	xorlw	1	; case 1
   903  0003D6  B4D8               	btfsc	status,2,c
   904  0003D8  D795               	goto	l2613
   905  0003DA  0A03               	xorlw	3	; case 2
   906  0003DC  B4D8               	btfsc	status,2,c
   907  0003DE  D799               	goto	l2615
   908  0003E0  0A01               	xorlw	1	; case 3
   909  0003E2  B4D8               	btfsc	status,2,c
   910  0003E4  D79D               	goto	l2617
   911  0003E6  0A07               	xorlw	7	; case 4
   912  0003E8  B4D8               	btfsc	status,2,c
   913  0003EA  D7A1               	goto	l2619
   914  0003EC  0A01               	xorlw	1	; case 5
   915  0003EE  B4D8               	btfsc	status,2,c
   916  0003F0  D7A5               	goto	l2621
   917  0003F2  0A03               	xorlw	3	; case 6
   918  0003F4  B4D8               	btfsc	status,2,c
   919  0003F6  D7A9               	goto	l2623
   920  0003F8  0A01               	xorlw	1	; case 7
   921  0003FA  B4D8               	btfsc	status,2,c
   922  0003FC  D7AD               	goto	l2625
   923  0003FE  0A0E               	xorlw	14	; case 9
   924  000400  B4D8               	btfsc	status,2,c
   925  000402  D7B1               	goto	l2627
   926  000404  0A03               	xorlw	3	; case 10
   927  000406  B4D8               	btfsc	status,2,c
   928  000408  D7B5               	goto	l2629
   929  00040A  0A01               	xorlw	1	; case 11
   930  00040C  B4D8               	btfsc	status,2,c
   931  00040E  D7B9               	goto	l2631
   932  000410  0A07               	xorlw	7	; case 12
   933  000412  B4D8               	btfsc	status,2,c
   934  000414  D7BD               	goto	l2633
   935  000416  0A01               	xorlw	1	; case 13
   936  000418  B4D8               	btfsc	status,2,c
   937  00041A  D7BA               	goto	l2633
   938  00041C  0A1D               	xorlw	29	; case 16
   939  00041E  B4D8               	btfsc	status,2,c
   940  000420  D7C4               	goto	l2635
   941  000422  0A01               	xorlw	1	; case 17
   942  000424  B4D8               	btfsc	status,2,c
   943  000426  D7C1               	goto	l2635
   944  000428                     l2641:
   945                           
   946                           ;FRAME.c: 490:     if(message->message_type == 0x02)
   947  000428  EE20 F001          	lfsr	2,1
   948  00042C  5010               	movf	FRAME_HandleCanFrame@message,w,c
   949  00042E  26D9               	addwf	fsr2l,f,c
   950  000430  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   951  000432  22DA               	addwfc	fsr2h,f,c
   952  000434  0E02               	movlw	2
   953  000436  18DE               	xorwf	postinc2,w,c
   954  000438  A4D8               	btfss	status,2,c
   955  00043A  0012               	return	
   956                           
   957                           ;FRAME.c: 491:     {;FRAME.c: 493:         message->frame_type = 0x03;
   958  00043C  EE20 F002          	lfsr	2,2
   959  000440  5010               	movf	FRAME_HandleCanFrame@message,w,c
   960  000442  26D9               	addwf	fsr2l,f,c
   961  000444  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   962  000446  22DA               	addwfc	fsr2h,f,c
   963  000448  0E03               	movlw	3
   964  00044A  6EDF               	movwf	indf2,c
   965                           
   966                           ;FRAME.c: 494:         message->message_type = 0x01;
   967  00044C  EE20 F001          	lfsr	2,1
   968  000450  5010               	movf	FRAME_HandleCanFrame@message,w,c
   969  000452  26D9               	addwf	fsr2l,f,c
   970  000454  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   971  000456  22DA               	addwfc	fsr2h,f,c
   972  000458  0E01               	movlw	1
   973  00045A  6EDF               	movwf	indf2,c
   974                           
   975                           ;FRAME.c: 495:         message->id.Val = 0;
   976  00045C  EE20 F004          	lfsr	2,4
   977  000460  5010               	movf	FRAME_HandleCanFrame@message,w,c
   978  000462  26D9               	addwf	fsr2l,f,c
   979  000464  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   980  000466  22DA               	addwfc	fsr2h,f,c
   981  000468  6ADE               	clrf	postinc2,c
   982  00046A  6ADE               	clrf	postinc2,c
   983  00046C  6ADE               	clrf	postinc2,c
   984  00046E  6ADD               	clrf	postdec2,c
   985                           
   986                           ;FRAME.c: 497:         message->id.v[2] = identyfikator*4;
   987  000470  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   988  000472  0D04               	mullw	4
   989  000474  EE20 F006          	lfsr	2,6
   990  000478  5010               	movf	FRAME_HandleCanFrame@message,w,c
   991  00047A  26D9               	addwf	fsr2l,f,c
   992  00047C  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   993  00047E  22DA               	addwfc	fsr2h,f,c
   994  000480  CFF3 FFDF          	movff	prodl,indf2
   995                           
   996                           ;FRAME.c: 498:         CAN_GenID(message,identyfikator);
   997  000484  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   998  000488  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   999  00048C  C014  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1000  000490  ECDD  F004         	call	_CAN_GenID	;wreg free
  1001                           
  1002                           ;FRAME.c: 499:         CAN_SendFrame(message);
  1003  000494  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1004  000498  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1005  00049C  EC5C  F002         	call	_CAN_SendFrame	;wreg free
  1006                           
  1007                           ;FRAME.c: 510:        while(RXB0CONbits.FILHIT3)
  1008  0004A0  D008               	goto	l2655
  1009  0004A2                     l475:
  1010                           
  1011                           ;FRAME.c: 511:        {;FRAME.c: 512:            if(TXB0CONbits.TXERR == 1){
  1012  0004A2  010F               	movlb	15	; () banked
  1013  0004A4  A940               	btfss	64,4,b	;volatile
  1014  0004A6  D003               	goto	l2653
  1015                           
  1016                           ; BSR set to: 15
  1017                           ;FRAME.c: 513:                LED_Error();
  1018  0004A8  EC64  F007         	call	_LED_Error	;wreg free
  1019                           
  1020                           ;FRAME.c: 514:            }
  1021  0004AC  D002               	goto	l2655
  1022  0004AE                     l2653:
  1023                           
  1024                           ; BSR set to: 15
  1025                           ;FRAME.c: 516:            {;FRAME.c: 517:                LED_Clear();
  1026  0004AE  EC73  F007         	call	_LED_Clear	;wreg free
  1027  0004B2                     l2655:
  1028                           
  1029                           ;FRAME.c: 510:        while(RXB0CONbits.FILHIT3)
  1030  0004B2  A660               	btfss	3936,3,c	;volatile
  1031  0004B4  0012               	return	
  1032  0004B6  D7F5               	goto	l475
  1033  0004B8                     __end_of_FRAME_HandleCanFrame:
  1034                           	opt callstack 0
  1035                           
  1036 ;; *************** function _LED_Error *****************
  1037 ;; Defined at:
  1038 ;;		line 32 in file "LED.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2  251[None  ] unsigned int 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    4
  1059 ;; This function calls:
  1060 ;;		_LED_Control
  1061 ;; This function is called by:
  1062 ;;		_FRAME_HandleCanFrame
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text3
  1067  000EC8                     __ptext3:
  1068                           	opt callstack 0
  1069  000EC8                     _LED_Error:
  1070                           	opt callstack 24
  1071                           
  1072                           ;LED.c: 34:     LED_Control(RED,0b1010101010);
  1073                           
  1074                           ;incstack = 0
  1075  000EC8  0E02               	movlw	2
  1076  000ECA  6E07               	movwf	LED_Control@diode+1,c
  1077  000ECC  0EAA               	movlw	170
  1078  000ECE  6E06               	movwf	LED_Control@diode,c
  1079  000ED0  0E00               	movlw	0
  1080  000ED2  EC13  F003         	call	_LED_Control
  1081                           
  1082                           ;LED.c: 35:     LED_Control(GREEN,0b0000000000);
  1083  000ED6  0E00               	movlw	0
  1084  000ED8  6E07               	movwf	LED_Control@diode+1,c
  1085  000EDA  0E00               	movlw	0
  1086  000EDC  6E06               	movwf	LED_Control@diode,c
  1087  000EDE  0E01               	movlw	1
  1088  000EE0  EC13  F003         	call	_LED_Control
  1089  000EE4  0012               	return		;funcret
  1090  000EE6                     __end_of_LED_Error:
  1091                           	opt callstack 0
  1092                           
  1093 ;; *************** function _LED_Clear *****************
  1094 ;; Defined at:
  1095 ;;		line 39 in file "LED.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2  254[None  ] unsigned int 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    4
  1116 ;; This function calls:
  1117 ;;		_LED_Control
  1118 ;; This function is called by:
  1119 ;;		_FRAME_HandleCanFrame
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text4
  1124  000EE6                     __ptext4:
  1125                           	opt callstack 0
  1126  000EE6                     _LED_Clear:
  1127                           	opt callstack 24
  1128                           
  1129                           ;LED.c: 41:     LED_Control(RED,0b0000000000);
  1130                           
  1131                           ;incstack = 0
  1132  000EE6  0E00               	movlw	0
  1133  000EE8  6E07               	movwf	LED_Control@diode+1,c
  1134  000EEA  0E00               	movlw	0
  1135  000EEC  6E06               	movwf	LED_Control@diode,c
  1136  000EEE  0E00               	movlw	0
  1137  000EF0  EC13  F003         	call	_LED_Control
  1138                           
  1139                           ;LED.c: 42:     LED_Control(GREEN,0b1010101010);
  1140  000EF4  0E02               	movlw	2
  1141  000EF6  6E07               	movwf	LED_Control@diode+1,c
  1142  000EF8  0EAA               	movlw	170
  1143  000EFA  6E06               	movwf	LED_Control@diode,c
  1144  000EFC  0E01               	movlw	1
  1145  000EFE  EC13  F003         	call	_LED_Control
  1146  000F02  0012               	return		;funcret
  1147  000F04                     __end_of_LED_Clear:
  1148                           	opt callstack 0
  1149                           
  1150 ;; *************** function _FRAME_SoftwareVersion *****************
  1151 ;; Defined at:
  1152 ;;		line 349 in file "FRAME.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  message         2    5[COMRAM] PTR struct .
  1155 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		None
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1171 ;;Total ram usage:        2 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    3
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_FRAME_HandleCanFrame
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text5
  1182  000FBE                     __ptext5:
  1183                           	opt callstack 0
  1184  000FBE                     _FRAME_SoftwareVersion:
  1185                           	opt callstack 25
  1186                           
  1187                           ;incstack = 0
  1188  000FBE  0012               	return		;funcret
  1189  000FC0                     __end_of_FRAME_SoftwareVersion:
  1190                           	opt callstack 0
  1191                           
  1192 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1193 ;; Defined at:
  1194 ;;		line 31 in file "FRAME.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  message         2    7[COMRAM] PTR struct .
  1197 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1213 ;;Total ram usage:        3 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    4
  1216 ;; This function calls:
  1217 ;;		_MOC_Aktualna_Temperatura
  1218 ;;		_MOC_Frame_Counter
  1219 ;;		_MOC_NOTWORK
  1220 ;;		_MOC_StanWzbudzenia
  1221 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1222 ;; This function is called by:
  1223 ;;		_FRAME_HandleCanFrame
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text6
  1228  000828                     __ptext6:
  1229                           	opt callstack 0
  1230  000828                     _FRAME_SensorExcitationStatus:
  1231                           	opt callstack 24
  1232                           
  1233                           ;FRAME.c: 31: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 32: {;FRAM
      +                          E.c: 33:     if(message->message_type == 0x02)
  1234                           
  1235                           ;incstack = 0
  1236  000828  EE20 F001          	lfsr	2,1
  1237  00082C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1238  00082E  26D9               	addwf	fsr2l,f,c
  1239  000830  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1240  000832  22DA               	addwfc	fsr2h,f,c
  1241  000834  0E02               	movlw	2
  1242  000836  18DE               	xorwf	postinc2,w,c
  1243  000838  A4D8               	btfss	status,2,c
  1244  00083A  0012               	return	
  1245                           
  1246                           ;FRAME.c: 34:     {;FRAME.c: 35:         message->data_length = 6;
  1247  00083C  EE20 F010          	lfsr	2,16
  1248  000840  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1249  000842  26D9               	addwf	fsr2l,f,c
  1250  000844  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1251  000846  22DA               	addwfc	fsr2h,f,c
  1252  000848  0E06               	movlw	6
  1253  00084A  6EDF               	movwf	indf2,c
  1254                           
  1255                           ;FRAME.c: 41:         message->data[0] = MOC_StanWzbudzenia();
  1256  00084C  EE20 F008          	lfsr	2,8
  1257  000850  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1258  000852  26D9               	addwf	fsr2l,f,c
  1259  000854  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1260  000856  22DA               	addwfc	fsr2h,f,c
  1261  000858  ECB6  F007         	call	_MOC_StanWzbudzenia	;wreg free
  1262  00085C  5006               	movf	?_MOC_StanWzbudzenia,w,c
  1263  00085E  6EDF               	movwf	indf2,c
  1264                           
  1265                           ;FRAME.c: 42:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1266  000860  EE20 F009          	lfsr	2,9
  1267  000864  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1268  000866  26D9               	addwf	fsr2l,f,c
  1269  000868  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1270  00086A  22DA               	addwfc	fsr2h,f,c
  1271  00086C  ECB1  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1272  000870  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1273  000874  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1274  000876  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1275  000878  6EDF               	movwf	indf2,c
  1276                           
  1277                           ;FRAME.c: 43:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1278  00087A  EE20 F00A          	lfsr	2,10
  1279  00087E  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1280  000880  26D9               	addwf	fsr2l,f,c
  1281  000882  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1282  000884  22DA               	addwfc	fsr2h,f,c
  1283  000886  ECB1  F007         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1284  00088A  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1285  00088C  6EDF               	movwf	indf2,c
  1286                           
  1287                           ;FRAME.c: 44:         message->data[3] = MOC_Frame_Counter();
  1288  00088E  EE20 F00B          	lfsr	2,11
  1289  000892  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1290  000894  26D9               	addwf	fsr2l,f,c
  1291  000896  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1292  000898  22DA               	addwfc	fsr2h,f,c
  1293  00089A  ECBB  F007         	call	_MOC_Frame_Counter	;wreg free
  1294  00089E  5006               	movf	?_MOC_Frame_Counter,w,c
  1295  0008A0  6EDF               	movwf	indf2,c
  1296                           
  1297                           ;FRAME.c: 45:         message->data[4] = MOC_Aktualna_Temperatura();
  1298  0008A2  EE20 F00C          	lfsr	2,12
  1299  0008A6  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1300  0008A8  26D9               	addwf	fsr2l,f,c
  1301  0008AA  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1302  0008AC  22DA               	addwfc	fsr2h,f,c
  1303  0008AE  ECC0  F007         	call	_MOC_Aktualna_Temperatura	;wreg free
  1304  0008B2  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1305  0008B4  6EDF               	movwf	indf2,c
  1306                           
  1307                           ;FRAME.c: 46:         message->data[5] = MOC_NOTWORK();
  1308  0008B6  EE20 F00D          	lfsr	2,13
  1309  0008BA  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1310  0008BC  26D9               	addwf	fsr2l,f,c
  1311  0008BE  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1312  0008C0  22DA               	addwfc	fsr2h,f,c
  1313  0008C2  ECD4  F007         	call	_MOC_NOTWORK	;wreg free
  1314  0008C6  5006               	movf	?_MOC_NOTWORK,w,c
  1315  0008C8  6EDF               	movwf	indf2,c
  1316                           
  1317                           ;FRAME.c: 56:     }
  1318  0008CA  0012               	return		;funcret
  1319  0008CC                     __end_of_FRAME_SensorExcitationStatus:
  1320                           	opt callstack 0
  1321                           
  1322 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1323 ;; Defined at:
  1324 ;;		line 28 in file "MOC_Funct.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2    5[COMRAM] unsigned int 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1342 ;;Total ram usage:        2 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    3
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_FRAME_SensorExcitationStatus
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text7
  1353  000F62                     __ptext7:
  1354                           	opt callstack 0
  1355  000F62                     _MOC_Wynikowa_wartosc_roznicowa:
  1356                           	opt callstack 24
  1357                           
  1358                           ;MOC_Funct.c: 30:     return 0x0220;
  1359                           
  1360                           ;incstack = 0
  1361  000F62  0E02               	movlw	2
  1362  000F64  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1363  000F66  0E20               	movlw	32
  1364  000F68  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1365  000F6A  0012               	return		;funcret
  1366  000F6C                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1367                           	opt callstack 0
  1368                           
  1369 ;; *************** function _MOC_StanWzbudzenia *****************
  1370 ;; Defined at:
  1371 ;;		line 23 in file "MOC_Funct.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  2    5[COMRAM] unsigned int 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1389 ;;Total ram usage:        2 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    3
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_FRAME_SensorExcitationStatus
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text8
  1400  000F6C                     __ptext8:
  1401                           	opt callstack 0
  1402  000F6C                     _MOC_StanWzbudzenia:
  1403                           	opt callstack 24
  1404                           
  1405                           ;MOC_Funct.c: 25:     return 1;
  1406                           
  1407                           ;incstack = 0
  1408  000F6C  0E00               	movlw	0
  1409  000F6E  6E07               	movwf	?_MOC_StanWzbudzenia+1,c
  1410  000F70  0E01               	movlw	1
  1411  000F72  6E06               	movwf	?_MOC_StanWzbudzenia,c
  1412  000F74  0012               	return		;funcret
  1413  000F76                     __end_of_MOC_StanWzbudzenia:
  1414                           	opt callstack 0
  1415                           
  1416 ;; *************** function _MOC_NOTWORK *****************
  1417 ;; Defined at:
  1418 ;;		line 41 in file "MOC_Funct.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2    5[COMRAM] unsigned int 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1436 ;;Total ram usage:        2 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    3
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_FRAME_SensorExcitationStatus
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text9
  1447  000FA8                     __ptext9:
  1448                           	opt callstack 0
  1449  000FA8                     _MOC_NOTWORK:
  1450                           	opt callstack 24
  1451                           
  1452                           ;MOC_Funct.c: 43:     return 0xFF;
  1453                           
  1454                           ;incstack = 0
  1455  000FA8  0E00               	movlw	0
  1456  000FAA  6E07               	movwf	?_MOC_NOTWORK+1,c
  1457  000FAC  6806               	setf	?_MOC_NOTWORK,c
  1458  000FAE  0012               	return		;funcret
  1459  000FB0                     __end_of_MOC_NOTWORK:
  1460                           	opt callstack 0
  1461                           
  1462 ;; *************** function _MOC_Frame_Counter *****************
  1463 ;; Defined at:
  1464 ;;		line 33 in file "MOC_Funct.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2    5[COMRAM] unsigned int 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1482 ;;Total ram usage:        2 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    3
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_FRAME_SensorExcitationStatus
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text10
  1493  000F76                     __ptext10:
  1494                           	opt callstack 0
  1495  000F76                     _MOC_Frame_Counter:
  1496                           	opt callstack 24
  1497                           
  1498                           ;MOC_Funct.c: 35:     return 0x47;
  1499                           
  1500                           ;incstack = 0
  1501  000F76  0E00               	movlw	0
  1502  000F78  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1503  000F7A  0E47               	movlw	71
  1504  000F7C  6E06               	movwf	?_MOC_Frame_Counter,c
  1505  000F7E  0012               	return		;funcret
  1506  000F80                     __end_of_MOC_Frame_Counter:
  1507                           	opt callstack 0
  1508                           
  1509 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1510 ;; Defined at:
  1511 ;;		line 37 in file "MOC_Funct.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2    5[COMRAM] unsigned int 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    3
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_FRAME_SensorExcitationStatus
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text11
  1540  000F80                     __ptext11:
  1541                           	opt callstack 0
  1542  000F80                     _MOC_Aktualna_Temperatura:
  1543                           	opt callstack 24
  1544                           
  1545                           ;MOC_Funct.c: 39:     return 0x1B;
  1546                           
  1547                           ;incstack = 0
  1548  000F80  0E00               	movlw	0
  1549  000F82  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1550  000F84  0E1B               	movlw	27
  1551  000F86  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1552  000F88  0012               	return		;funcret
  1553  000F8A                     __end_of_MOC_Aktualna_Temperatura:
  1554                           	opt callstack 0
  1555                           
  1556 ;; *************** function _FRAME_Plot *****************
  1557 ;; Defined at:
  1558 ;;		line 302 in file "FRAME.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  message         2    5[COMRAM] PTR struct .
  1561 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1577 ;;Total ram usage:        2 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    3
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_FRAME_HandleCanFrame
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text12
  1588  000EA6                     __ptext12:
  1589                           	opt callstack 0
  1590  000EA6                     _FRAME_Plot:
  1591                           	opt callstack 25
  1592                           
  1593                           ;FRAME.c: 302: static void FRAME_Plot(mID *message);FRAME.c: 303: {;FRAME.c: 314:     me
      +                          ssage->data_length = 1;
  1594                           
  1595                           ;incstack = 0
  1596  000EA6  EE20 F010          	lfsr	2,16
  1597  000EAA  5006               	movf	FRAME_Plot@message,w,c
  1598  000EAC  26D9               	addwf	fsr2l,f,c
  1599  000EAE  5007               	movf	FRAME_Plot@message+1,w,c
  1600  000EB0  22DA               	addwfc	fsr2h,f,c
  1601  000EB2  0E01               	movlw	1
  1602  000EB4  6EDF               	movwf	indf2,c
  1603                           
  1604                           ;FRAME.c: 315:     message->data[0] = 0xFF;
  1605  000EB6  EE20 F008          	lfsr	2,8
  1606  000EBA  5006               	movf	FRAME_Plot@message,w,c
  1607  000EBC  26D9               	addwf	fsr2l,f,c
  1608  000EBE  5007               	movf	FRAME_Plot@message+1,w,c
  1609  000EC0  22DA               	addwfc	fsr2h,f,c
  1610  000EC2  0EFF               	movlw	255
  1611  000EC4  6EDF               	movwf	indf2,c
  1612  000EC6  0012               	return		;funcret
  1613  000EC8                     __end_of_FRAME_Plot:
  1614                           	opt callstack 0
  1615                           
  1616 ;; *************** function _FRAME_MapPosition *****************
  1617 ;; Defined at:
  1618 ;;		line 324 in file "FRAME.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  message         2    5[COMRAM] PTR struct .
  1621 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		None
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;Total ram usage:        2 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    3
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_FRAME_HandleCanFrame
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text13
  1648  000FC0                     __ptext13:
  1649                           	opt callstack 0
  1650  000FC0                     _FRAME_MapPosition:
  1651                           	opt callstack 25
  1652                           
  1653                           ;incstack = 0
  1654  000FC0  0012               	return		;funcret
  1655  000FC2                     __end_of_FRAME_MapPosition:
  1656                           	opt callstack 0
  1657                           
  1658 ;; *************** function _FRAME_ExcitationValue *****************
  1659 ;; Defined at:
  1660 ;;		line 91 in file "FRAME.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  message         2    5[COMRAM] PTR struct .
  1663 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;Total ram usage:        3 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    3
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_FRAME_HandleCanFrame
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text14
  1690  000CF6                     __ptext14:
  1691                           	opt callstack 0
  1692  000CF6                     _FRAME_ExcitationValue:
  1693                           	opt callstack 25
  1694                           
  1695                           ;FRAME.c: 91: static void FRAME_ExcitationValue(mID *message);FRAME.c: 92: {;FRAME.c: 93
      +                          :     if(message->message_type == 0x02)
  1696                           
  1697                           ;incstack = 0
  1698  000CF6  EE20 F001          	lfsr	2,1
  1699  000CFA  5006               	movf	FRAME_ExcitationValue@message,w,c
  1700  000CFC  26D9               	addwf	fsr2l,f,c
  1701  000CFE  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1702  000D00  22DA               	addwfc	fsr2h,f,c
  1703  000D02  0E02               	movlw	2
  1704  000D04  18DE               	xorwf	postinc2,w,c
  1705  000D06  A4D8               	btfss	status,2,c
  1706  000D08  0012               	return	
  1707                           
  1708                           ;FRAME.c: 94:     {;FRAME.c: 95:         message->data_length = 1;
  1709  000D0A  EE20 F010          	lfsr	2,16
  1710  000D0E  5006               	movf	FRAME_ExcitationValue@message,w,c
  1711  000D10  26D9               	addwf	fsr2l,f,c
  1712  000D12  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1713  000D14  22DA               	addwfc	fsr2h,f,c
  1714  000D16  0E01               	movlw	1
  1715  000D18  6EDF               	movwf	indf2,c
  1716                           
  1717                           ;FRAME.c: 100:         message->data[0] = 0xFF;
  1718  000D1A  EE20 F008          	lfsr	2,8
  1719  000D1E  5006               	movf	FRAME_ExcitationValue@message,w,c
  1720  000D20  26D9               	addwf	fsr2l,f,c
  1721  000D22  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1722  000D24  22DA               	addwfc	fsr2h,f,c
  1723  000D26  0EFF               	movlw	255
  1724  000D28  6EDF               	movwf	indf2,c
  1725                           
  1726                           ;FRAME.c: 101:     }
  1727  000D2A  0012               	return		;funcret
  1728  000D2C                     __end_of_FRAME_ExcitationValue:
  1729                           	opt callstack 0
  1730                           
  1731 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1732 ;; Defined at:
  1733 ;;		line 115 in file "FRAME.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  message         2    5[COMRAM] PTR struct .
  1736 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  i               2    8[COMRAM] unsigned short 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;Total ram usage:        5 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    3
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_FRAME_HandleCanFrame
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text15
  1763  000BD4                     __ptext15:
  1764                           	opt callstack 0
  1765  000BD4                     _FRAME_ExcitationMultiplier:
  1766                           	opt callstack 25
  1767                           
  1768                           ;FRAME.c: 115: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 116: {;FRAM
      +                          E.c: 117:     WORD i;;FRAME.c: 119:     if(message->message_type == 0x02)
  1769                           
  1770                           ;incstack = 0
  1771  000BD4  EE20 F001          	lfsr	2,1
  1772  000BD8  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1773  000BDA  26D9               	addwf	fsr2l,f,c
  1774  000BDC  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1775  000BDE  22DA               	addwfc	fsr2h,f,c
  1776  000BE0  0E02               	movlw	2
  1777  000BE2  18DE               	xorwf	postinc2,w,c
  1778  000BE4  A4D8               	btfss	status,2,c
  1779  000BE6  0012               	return	
  1780                           
  1781                           ;FRAME.c: 120:     {;FRAME.c: 121:         message->data_length = 1;
  1782  000BE8  EE20 F010          	lfsr	2,16
  1783  000BEC  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1784  000BEE  26D9               	addwf	fsr2l,f,c
  1785  000BF0  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1786  000BF2  22DA               	addwfc	fsr2h,f,c
  1787  000BF4  0E01               	movlw	1
  1788  000BF6  6EDF               	movwf	indf2,c
  1789                           
  1790                           ;FRAME.c: 122:         for(i=0; i<3; i++)
  1791  000BF8  0E00               	movlw	0
  1792  000BFA  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1793  000BFC  0E00               	movlw	0
  1794  000BFE  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1795  000C00                     l2377:
  1796                           
  1797                           ;FRAME.c: 123:         {;FRAME.c: 126:         }
  1798  000C00  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1799  000C02  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1800  000C04  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1801  000C06  E104               	bnz	u1040
  1802  000C08  0E03               	movlw	3
  1803  000C0A  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1804  000C0C  A0D8               	btfss	status,0,c
  1805  000C0E  D7F8               	goto	l2377
  1806  000C10                     u1040:
  1807                           
  1808                           ;FRAME.c: 127:         message->data[0] = 0xFF;
  1809  000C10  EE20 F008          	lfsr	2,8
  1810  000C14  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1811  000C16  26D9               	addwf	fsr2l,f,c
  1812  000C18  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1813  000C1A  22DA               	addwfc	fsr2h,f,c
  1814  000C1C  0EFF               	movlw	255
  1815  000C1E  6EDF               	movwf	indf2,c
  1816                           
  1817                           ;FRAME.c: 128:     }
  1818  000C20  0012               	return		;funcret
  1819  000C22                     __end_of_FRAME_ExcitationMultiplier:
  1820                           	opt callstack 0
  1821                           
  1822 ;; *************** function _FRAME_DeviceReset *****************
  1823 ;; Defined at:
  1824 ;;		line 249 in file "FRAME.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  message         2    5[COMRAM] PTR struct .
  1827 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;Total ram usage:        3 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    3
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_FRAME_HandleCanFrame
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text16
  1854  000A7E                     __ptext16:
  1855                           	opt callstack 0
  1856  000A7E                     _FRAME_DeviceReset:
  1857                           	opt callstack 25
  1858                           
  1859                           ;FRAME.c: 249: static void FRAME_DeviceReset(mID *message);FRAME.c: 250: {;FRAME.c: 251:
      +                               if(message->message_type == 0x02)
  1860                           
  1861                           ;incstack = 0
  1862  000A7E  EE20 F001          	lfsr	2,1
  1863  000A82  5006               	movf	FRAME_DeviceReset@message,w,c
  1864  000A84  26D9               	addwf	fsr2l,f,c
  1865  000A86  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1866  000A88  22DA               	addwfc	fsr2h,f,c
  1867  000A8A  0E02               	movlw	2
  1868  000A8C  18DE               	xorwf	postinc2,w,c
  1869  000A8E  A4D8               	btfss	status,2,c
  1870  000A90  D011               	goto	l2395
  1871                           
  1872                           ;FRAME.c: 252:     {;FRAME.c: 253:         message->data_length = 1;
  1873  000A92  EE20 F010          	lfsr	2,16
  1874  000A96  5006               	movf	FRAME_DeviceReset@message,w,c
  1875  000A98  26D9               	addwf	fsr2l,f,c
  1876  000A9A  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1877  000A9C  22DA               	addwfc	fsr2h,f,c
  1878  000A9E  0E01               	movlw	1
  1879  000AA0  6EDF               	movwf	indf2,c
  1880                           
  1881                           ;FRAME.c: 266:         message->data[0] = 0xFF;
  1882  000AA2  EE20 F008          	lfsr	2,8
  1883  000AA6  5006               	movf	FRAME_DeviceReset@message,w,c
  1884  000AA8  26D9               	addwf	fsr2l,f,c
  1885  000AAA  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1886  000AAC  22DA               	addwfc	fsr2h,f,c
  1887  000AAE  0EFF               	movlw	255
  1888  000AB0  6EDF               	movwf	indf2,c
  1889                           
  1890                           ;FRAME.c: 267:     }
  1891  000AB2  0012               	return	
  1892  000AB4                     l2395:
  1893                           
  1894                           ;FRAME.c: 269:     {;FRAME.c: 270:         message->data_length = 1;
  1895  000AB4  EE20 F010          	lfsr	2,16
  1896  000AB8  5006               	movf	FRAME_DeviceReset@message,w,c
  1897  000ABA  26D9               	addwf	fsr2l,f,c
  1898  000ABC  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1899  000ABE  22DA               	addwfc	fsr2h,f,c
  1900  000AC0  0E01               	movlw	1
  1901  000AC2  6EDF               	movwf	indf2,c
  1902                           
  1903                           ;FRAME.c: 292:         message->data[0] = 0xFF;
  1904  000AC4  EE20 F008          	lfsr	2,8
  1905  000AC8  5006               	movf	FRAME_DeviceReset@message,w,c
  1906  000ACA  26D9               	addwf	fsr2l,f,c
  1907  000ACC  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1908  000ACE  22DA               	addwfc	fsr2h,f,c
  1909  000AD0  0EFF               	movlw	255
  1910  000AD2  6EDF               	movwf	indf2,c
  1911  000AD4  0012               	return		;funcret
  1912  000AD6                     __end_of_FRAME_DeviceReset:
  1913                           	opt callstack 0
  1914                           
  1915 ;; *************** function _FRAME_AxisStatus *****************
  1916 ;; Defined at:
  1917 ;;		line 202 in file "FRAME.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  message         2    5[COMRAM] PTR struct .
  1920 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  i               2    0        unsigned short 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;Total ram usage:        3 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    3
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_FRAME_HandleCanFrame
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text17
  1947  000D2C                     __ptext17:
  1948                           	opt callstack 0
  1949  000D2C                     _FRAME_AxisStatus:
  1950                           	opt callstack 25
  1951                           
  1952                           ;FRAME.c: 202: static void FRAME_AxisStatus(mID *message);FRAME.c: 203: {;FRAME.c: 204: 
      +                              WORD i;;FRAME.c: 206:     if(message->message_type == 0x02)
  1953                           
  1954                           ;incstack = 0
  1955  000D2C  EE20 F001          	lfsr	2,1
  1956  000D30  5006               	movf	FRAME_AxisStatus@message,w,c
  1957  000D32  26D9               	addwf	fsr2l,f,c
  1958  000D34  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1959  000D36  22DA               	addwfc	fsr2h,f,c
  1960  000D38  0E02               	movlw	2
  1961  000D3A  18DE               	xorwf	postinc2,w,c
  1962  000D3C  A4D8               	btfss	status,2,c
  1963  000D3E  0012               	return	
  1964                           
  1965                           ;FRAME.c: 207:     {;FRAME.c: 208:         message->data_length = 1;
  1966  000D40  EE20 F010          	lfsr	2,16
  1967  000D44  5006               	movf	FRAME_AxisStatus@message,w,c
  1968  000D46  26D9               	addwf	fsr2l,f,c
  1969  000D48  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1970  000D4A  22DA               	addwfc	fsr2h,f,c
  1971  000D4C  0E01               	movlw	1
  1972  000D4E  6EDF               	movwf	indf2,c
  1973                           
  1974                           ;FRAME.c: 219:         message->data[0] = 0xFF;
  1975  000D50  EE20 F008          	lfsr	2,8
  1976  000D54  5006               	movf	FRAME_AxisStatus@message,w,c
  1977  000D56  26D9               	addwf	fsr2l,f,c
  1978  000D58  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1979  000D5A  22DA               	addwfc	fsr2h,f,c
  1980  000D5C  0EFF               	movlw	255
  1981  000D5E  6EDF               	movwf	indf2,c
  1982                           
  1983                           ;FRAME.c: 220:     }
  1984  000D60  0012               	return		;funcret
  1985  000D62                     __end_of_FRAME_AxisStatus:
  1986                           	opt callstack 0
  1987                           
  1988 ;; *************** function _FRAME_AveragingTimes *****************
  1989 ;; Defined at:
  1990 ;;		line 143 in file "FRAME.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  message         2    5[COMRAM] PTR struct .
  1993 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;Total ram usage:        3 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    3
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_FRAME_HandleCanFrame
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text18
  2020  000D62                     __ptext18:
  2021                           	opt callstack 0
  2022  000D62                     _FRAME_AveragingTimes:
  2023                           	opt callstack 25
  2024                           
  2025                           ;FRAME.c: 143: static void FRAME_AveragingTimes(mID *message);FRAME.c: 144: {;FRAME.c: 1
      +                          45:     if(message->message_type == 0x02)
  2026                           
  2027                           ;incstack = 0
  2028  000D62  EE20 F001          	lfsr	2,1
  2029  000D66  5006               	movf	FRAME_AveragingTimes@message,w,c
  2030  000D68  26D9               	addwf	fsr2l,f,c
  2031  000D6A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2032  000D6C  22DA               	addwfc	fsr2h,f,c
  2033  000D6E  0E02               	movlw	2
  2034  000D70  18DE               	xorwf	postinc2,w,c
  2035  000D72  A4D8               	btfss	status,2,c
  2036  000D74  0012               	return	
  2037                           
  2038                           ;FRAME.c: 146:     {;FRAME.c: 147:         message->data_length = 1;
  2039  000D76  EE20 F010          	lfsr	2,16
  2040  000D7A  5006               	movf	FRAME_AveragingTimes@message,w,c
  2041  000D7C  26D9               	addwf	fsr2l,f,c
  2042  000D7E  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2043  000D80  22DA               	addwfc	fsr2h,f,c
  2044  000D82  0E01               	movlw	1
  2045  000D84  6EDF               	movwf	indf2,c
  2046                           
  2047                           ;FRAME.c: 155:         message->data[0] = 0xFF;
  2048  000D86  EE20 F008          	lfsr	2,8
  2049  000D8A  5006               	movf	FRAME_AveragingTimes@message,w,c
  2050  000D8C  26D9               	addwf	fsr2l,f,c
  2051  000D8E  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2052  000D90  22DA               	addwfc	fsr2h,f,c
  2053  000D92  0EFF               	movlw	255
  2054  000D94  6EDF               	movwf	indf2,c
  2055                           
  2056                           ;FRAME.c: 156:     }
  2057  000D96  0012               	return		;funcret
  2058  000D98                     __end_of_FRAME_AveragingTimes:
  2059                           	opt callstack 0
  2060                           
  2061 ;; *************** function _FRAME_AnalogValue *****************
  2062 ;; Defined at:
  2063 ;;		line 372 in file "FRAME.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  message         2    5[COMRAM] PTR struct .
  2066 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2067 ;;  set             2    7[COMRAM] unsigned short 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  i               2    0        unsigned short 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		None
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2082 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2083 ;;Total ram usage:        4 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    3
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_FRAME_HandleCanFrame
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text19
  2094  000FC2                     __ptext19:
  2095                           	opt callstack 0
  2096  000FC2                     _FRAME_AnalogValue:
  2097                           	opt callstack 25
  2098                           
  2099                           ;incstack = 0
  2100  000FC2  0012               	return		;funcret
  2101  000FC4                     __end_of_FRAME_AnalogValue:
  2102                           	opt callstack 0
  2103                           
  2104 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2105 ;; Defined at:
  2106 ;;		line 415 in file "FRAME.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  message         2    5[COMRAM] PTR struct .
  2109 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2110 ;;  nrRamki         2    7[COMRAM] unsigned short 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  i               2    0        unsigned short 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      void 
  2115 ;; Registers used:
  2116 ;;		None
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;Total ram usage:        4 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_FRAME_HandleCanFrame
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text20
  2137  000FC4                     __ptext20:
  2138                           	opt callstack 0
  2139  000FC4                     _FRAME_AdressOfNeighbors:
  2140                           	opt callstack 25
  2141                           
  2142                           ;incstack = 0
  2143  000FC4  0012               	return		;funcret
  2144  000FC6                     __end_of_FRAME_AdressOfNeighbors:
  2145                           	opt callstack 0
  2146                           
  2147 ;; *************** function _FRAME_AccelerometerStatus *****************
  2148 ;; Defined at:
  2149 ;;		line 69 in file "FRAME.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  message         2    5[COMRAM] PTR struct .
  2152 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;Total ram usage:        3 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    3
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_FRAME_HandleCanFrame
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text21
  2179  000D98                     __ptext21:
  2180                           	opt callstack 0
  2181  000D98                     _FRAME_AccelerometerStatus:
  2182                           	opt callstack 25
  2183                           
  2184                           ;FRAME.c: 69: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 70: {;FRAME.c
      +                          : 71:     if(message->message_type == 0x02)
  2185                           
  2186                           ;incstack = 0
  2187  000D98  EE20 F001          	lfsr	2,1
  2188  000D9C  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2189  000D9E  26D9               	addwf	fsr2l,f,c
  2190  000DA0  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2191  000DA2  22DA               	addwfc	fsr2h,f,c
  2192  000DA4  0E02               	movlw	2
  2193  000DA6  18DE               	xorwf	postinc2,w,c
  2194  000DA8  A4D8               	btfss	status,2,c
  2195  000DAA  0012               	return	
  2196                           
  2197                           ;FRAME.c: 72:     {;FRAME.c: 73:         message->data_length = 1;
  2198  000DAC  EE20 F010          	lfsr	2,16
  2199  000DB0  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2200  000DB2  26D9               	addwf	fsr2l,f,c
  2201  000DB4  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2202  000DB6  22DA               	addwfc	fsr2h,f,c
  2203  000DB8  0E01               	movlw	1
  2204  000DBA  6EDF               	movwf	indf2,c
  2205                           
  2206                           ;FRAME.c: 77:         message->data[0] = 0xFF;
  2207  000DBC  EE20 F008          	lfsr	2,8
  2208  000DC0  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  2209  000DC2  26D9               	addwf	fsr2l,f,c
  2210  000DC4  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  2211  000DC6  22DA               	addwfc	fsr2h,f,c
  2212  000DC8  0EFF               	movlw	255
  2213  000DCA  6EDF               	movwf	indf2,c
  2214                           
  2215                           ;FRAME.c: 78:     }
  2216  000DCC  0012               	return		;funcret
  2217  000DCE                     __end_of_FRAME_AccelerometerStatus:
  2218                           	opt callstack 0
  2219                           
  2220 ;; *************** function _CAN_SendFrame *****************
  2221 ;; Defined at:
  2222 ;;		line 183 in file "CAN.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  message         2   10[COMRAM] PTR struct .
  2225 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;Total ram usage:        5 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    4
  2244 ;; This function calls:
  2245 ;;		_CAN_MoveBuffIntoFrame
  2246 ;; This function is called by:
  2247 ;;		_FRAME_HandleCanFrame
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text22
  2252  0004B8                     __ptext22:
  2253                           	opt callstack 0
  2254  0004B8                     _CAN_SendFrame:
  2255                           	opt callstack 24
  2256                           
  2257                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  2258                           
  2259                           ;incstack = 0
  2260                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  2261  0004B8  0E83               	movlw	131
  2262  0004BA  6E77               	movwf	3959,c	;volatile
  2263                           
  2264                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  2265  0004BC  A660               	btfss	3936,3,c	;volatile
  2266  0004BE  D00A               	goto	l177
  2267                           
  2268                           ;CAN.c: 195:         ECANCON = 0x84;
  2269  0004C0  0E84               	movlw	132
  2270  0004C2  6E77               	movwf	3959,c	;volatile
  2271                           
  2272                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  2273  0004C4  A660               	btfss	3936,3,c	;volatile
  2274  0004C6  D006               	goto	l177
  2275                           
  2276                           ;CAN.c: 201:         ECANCON = 0x85;
  2277  0004C8  0E85               	movlw	133
  2278  0004CA  6E77               	movwf	3959,c	;volatile
  2279                           
  2280                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  2281  0004CC  A660               	btfss	3936,3,c	;volatile
  2282  0004CE  D002               	goto	l177
  2283  0004D0  D7F3               	goto	_CAN_SendFrame
  2284  0004D2                     l178:
  2285  0004D2  00FF               	reset		;# 
  2286  0004D4                     l177:
  2287                           
  2288                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  2289  0004D4  B474               	btfsc	3956,2,c	;volatile
  2290  0004D6  D7FD               	goto	l178
  2291                           
  2292                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  2293  0004D8  0E00               	movlw	0
  2294  0004DA  6E3E               	movwf	_DetectorLedRadar+1,c
  2295                           
  2296                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  2297  0004DC  EE20 F004          	lfsr	2,4
  2298  0004E0  500B               	movf	CAN_SendFrame@message,w,c
  2299  0004E2  26D9               	addwf	fsr2l,f,c
  2300  0004E4  500C               	movf	CAN_SendFrame@message+1,w,c
  2301  0004E6  22DA               	addwfc	fsr2h,f,c
  2302  0004E8  50DF               	movf	indf2,w,c
  2303  0004EA  6E64               	movwf	3940,c	;volatile
  2304                           
  2305                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  2306  0004EC  EE20 F005          	lfsr	2,5
  2307  0004F0  500B               	movf	CAN_SendFrame@message,w,c
  2308  0004F2  26D9               	addwf	fsr2l,f,c
  2309  0004F4  500C               	movf	CAN_SendFrame@message+1,w,c
  2310  0004F6  22DA               	addwfc	fsr2h,f,c
  2311  0004F8  50DF               	movf	indf2,w,c
  2312  0004FA  6E63               	movwf	3939,c	;volatile
  2313                           
  2314                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  2315  0004FC  EE20 F006          	lfsr	2,6
  2316  000500  500B               	movf	CAN_SendFrame@message,w,c
  2317  000502  26D9               	addwf	fsr2l,f,c
  2318  000504  500C               	movf	CAN_SendFrame@message+1,w,c
  2319  000506  22DA               	addwfc	fsr2h,f,c
  2320  000508  50DF               	movf	indf2,w,c
  2321  00050A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2322  00050C  0E03               	movlw	3
  2323  00050E  160D               	andwf	??_CAN_SendFrame,f,c
  2324  000510  EE20 F006          	lfsr	2,6
  2325  000514  500B               	movf	CAN_SendFrame@message,w,c
  2326  000516  26D9               	addwf	fsr2l,f,c
  2327  000518  500C               	movf	CAN_SendFrame@message+1,w,c
  2328  00051A  22DA               	addwfc	fsr2h,f,c
  2329  00051C  50DF               	movf	indf2,w,c
  2330  00051E  0BFC               	andlw	252
  2331  000520  0D08               	mullw	8
  2332  000522  50F3               	movf	prodl,w,c
  2333  000524  100D               	iorwf	??_CAN_SendFrame,w,c
  2334  000526  6E62               	movwf	3938,c	;volatile
  2335                           
  2336                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  2337  000528  8662               	bsf	3938,3,c	;volatile
  2338                           
  2339                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2340  00052A  EE20 F006          	lfsr	2,6
  2341  00052E  500B               	movf	CAN_SendFrame@message,w,c
  2342  000530  26D9               	addwf	fsr2l,f,c
  2343  000532  500C               	movf	CAN_SendFrame@message+1,w,c
  2344  000534  22DA               	addwfc	fsr2h,f,c
  2345  000536  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2346  00053A  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2347  00053E  0E05               	movlw	5
  2348  000540  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2349  000542                     u965:
  2350  000542  90D8               	bcf	status,0,c
  2351  000544  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2352  000546  320D               	rrcf	??_CAN_SendFrame,f,c
  2353  000548  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2354  00054A  D7FB               	goto	u965
  2355  00054C  500D               	movf	??_CAN_SendFrame,w,c
  2356  00054E  6E61               	movwf	3937,c	;volatile
  2357                           
  2358                           ;CAN.c: 220:     RXB0DLC = 0;
  2359  000550  0E00               	movlw	0
  2360  000552  6E65               	movwf	3941,c	;volatile
  2361                           
  2362                           ;CAN.c: 222:     if(message->message_type==0x02)
  2363  000554  EE20 F001          	lfsr	2,1
  2364  000558  500B               	movf	CAN_SendFrame@message,w,c
  2365  00055A  26D9               	addwf	fsr2l,f,c
  2366  00055C  500C               	movf	CAN_SendFrame@message+1,w,c
  2367  00055E  22DA               	addwfc	fsr2h,f,c
  2368  000560  0E02               	movlw	2
  2369  000562  18DE               	xorwf	postinc2,w,c
  2370  000564  A4D8               	btfss	status,2,c
  2371  000566  D002               	goto	l2293
  2372                           
  2373                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2374  000568  8C65               	bsf	3941,6,c	;volatile
  2375                           
  2376                           ;CAN.c: 225:     }
  2377  00056A  D05A               	goto	l2297
  2378  00056C                     l2293:
  2379                           
  2380                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2381  00056C  EE20 F010          	lfsr	2,16
  2382  000570  500B               	movf	CAN_SendFrame@message,w,c
  2383  000572  26D9               	addwf	fsr2l,f,c
  2384  000574  500C               	movf	CAN_SendFrame@message+1,w,c
  2385  000576  22DA               	addwfc	fsr2h,f,c
  2386  000578  50DF               	movf	indf2,w,c
  2387  00057A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2388  00057C  0E0F               	movlw	15
  2389  00057E  160D               	andwf	??_CAN_SendFrame,f,c
  2390  000580  5065               	movf	3941,w,c	;volatile
  2391  000582  180D               	xorwf	??_CAN_SendFrame,w,c
  2392  000584  0BFE               	andlw	-2
  2393  000586  180D               	xorwf	??_CAN_SendFrame,w,c
  2394  000588  6E65               	movwf	3941,c	;volatile
  2395                           
  2396                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2397  00058A  EE20 F010          	lfsr	2,16
  2398  00058E  500B               	movf	CAN_SendFrame@message,w,c
  2399  000590  26D9               	addwf	fsr2l,f,c
  2400  000592  500C               	movf	CAN_SendFrame@message+1,w,c
  2401  000594  22DA               	addwfc	fsr2h,f,c
  2402  000596  50DF               	movf	indf2,w,c
  2403  000598  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2404  00059A  90D8               	bcf	status,0,c
  2405  00059C  320D               	rrcf	??_CAN_SendFrame,f,c
  2406  00059E  0E07               	movlw	7
  2407  0005A0  160D               	andwf	??_CAN_SendFrame,f,c
  2408  0005A2  460D               	rlncf	??_CAN_SendFrame,f,c
  2409  0005A4  5065               	movf	3941,w,c	;volatile
  2410  0005A6  180D               	xorwf	??_CAN_SendFrame,w,c
  2411  0005A8  0BFD               	andlw	-3
  2412  0005AA  180D               	xorwf	??_CAN_SendFrame,w,c
  2413  0005AC  6E65               	movwf	3941,c	;volatile
  2414                           
  2415                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2416  0005AE  EE20 F010          	lfsr	2,16
  2417  0005B2  500B               	movf	CAN_SendFrame@message,w,c
  2418  0005B4  26D9               	addwf	fsr2l,f,c
  2419  0005B6  500C               	movf	CAN_SendFrame@message+1,w,c
  2420  0005B8  22DA               	addwfc	fsr2h,f,c
  2421  0005BA  50DF               	movf	indf2,w,c
  2422  0005BC  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2423  0005BE  90D8               	bcf	status,0,c
  2424  0005C0  320D               	rrcf	??_CAN_SendFrame,f,c
  2425  0005C2  90D8               	bcf	status,0,c
  2426  0005C4  320D               	rrcf	??_CAN_SendFrame,f,c
  2427  0005C6  0E03               	movlw	3
  2428  0005C8  160D               	andwf	??_CAN_SendFrame,f,c
  2429  0005CA  460D               	rlncf	??_CAN_SendFrame,f,c
  2430  0005CC  460D               	rlncf	??_CAN_SendFrame,f,c
  2431  0005CE  5065               	movf	3941,w,c	;volatile
  2432  0005D0  180D               	xorwf	??_CAN_SendFrame,w,c
  2433  0005D2  0BFB               	andlw	-5
  2434  0005D4  180D               	xorwf	??_CAN_SendFrame,w,c
  2435  0005D6  6E65               	movwf	3941,c	;volatile
  2436                           
  2437                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2438  0005D8  EE20 F010          	lfsr	2,16
  2439  0005DC  500B               	movf	CAN_SendFrame@message,w,c
  2440  0005DE  26D9               	addwf	fsr2l,f,c
  2441  0005E0  500C               	movf	CAN_SendFrame@message+1,w,c
  2442  0005E2  22DA               	addwfc	fsr2h,f,c
  2443  0005E4  50DF               	movf	indf2,w,c
  2444  0005E6  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2445  0005E8  90D8               	bcf	status,0,c
  2446  0005EA  320D               	rrcf	??_CAN_SendFrame,f,c
  2447  0005EC  90D8               	bcf	status,0,c
  2448  0005EE  320D               	rrcf	??_CAN_SendFrame,f,c
  2449  0005F0  90D8               	bcf	status,0,c
  2450  0005F2  320D               	rrcf	??_CAN_SendFrame,f,c
  2451  0005F4  0E01               	movlw	1
  2452  0005F6  160D               	andwf	??_CAN_SendFrame,f,c
  2453  0005F8  460D               	rlncf	??_CAN_SendFrame,f,c
  2454  0005FA  460D               	rlncf	??_CAN_SendFrame,f,c
  2455  0005FC  460D               	rlncf	??_CAN_SendFrame,f,c
  2456  0005FE  5065               	movf	3941,w,c	;volatile
  2457  000600  180D               	xorwf	??_CAN_SendFrame,w,c
  2458  000602  0BF7               	andlw	-9
  2459  000604  180D               	xorwf	??_CAN_SendFrame,w,c
  2460  000606  6E65               	movwf	3941,c	;volatile
  2461                           
  2462                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2463  000608  0E66               	movlw	102
  2464  00060A  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2465  00060C  0E0F               	movlw	15
  2466  00060E  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2467  000610  0E08               	movlw	8
  2468  000612  240B               	addwf	CAN_SendFrame@message,w,c
  2469  000614  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2470  000616  0E00               	movlw	0
  2471  000618  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2472  00061A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2473  00061C  EC18  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2474  000620                     l2297:
  2475                           
  2476                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2477  000620  8660               	bsf	3936,3,c	;volatile
  2478                           
  2479                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2480  000622  883D               	bsf	_DetectorLedRadar,4,c
  2481  000624  0012               	return		;funcret
  2482  000626                     __end_of_CAN_SendFrame:
  2483                           	opt callstack 0
  2484                           
  2485 ;; *************** function _CAN_GenID *****************
  2486 ;; Defined at:
  2487 ;;		line 382 in file "CAN.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  message         2    5[COMRAM] PTR struct .
  2490 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2491 ;;  frameID         1    7[COMRAM] unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;Total ram usage:        5 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_FRAME_HandleCanFrame
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text23
  2518  0009BA                     __ptext23:
  2519                           	opt callstack 0
  2520  0009BA                     _CAN_GenID:
  2521                           	opt callstack 25
  2522                           
  2523                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2524                           
  2525                           ;incstack = 0
  2526  0009BA  EE20 F002          	lfsr	2,2
  2527  0009BE  5006               	movf	CAN_GenID@message,w,c
  2528  0009C0  26D9               	addwf	fsr2l,f,c
  2529  0009C2  5007               	movf	CAN_GenID@message+1,w,c
  2530  0009C4  22DA               	addwfc	fsr2h,f,c
  2531  0009C6  0E03               	movlw	3
  2532  0009C8  6EDF               	movwf	indf2,c
  2533                           
  2534                           ;CAN.c: 386:     message->message_type = 0x01;
  2535  0009CA  EE20 F001          	lfsr	2,1
  2536  0009CE  5006               	movf	CAN_GenID@message,w,c
  2537  0009D0  26D9               	addwf	fsr2l,f,c
  2538  0009D2  5007               	movf	CAN_GenID@message+1,w,c
  2539  0009D4  22DA               	addwfc	fsr2h,f,c
  2540  0009D6  0E01               	movlw	1
  2541  0009D8  6EDF               	movwf	indf2,c
  2542                           
  2543                           ;CAN.c: 387:     message->id.w[1] = (WORD)frameID * (WORD)4;
  2544  0009DA  5008               	movf	CAN_GenID@frameID,w,c
  2545  0009DC  6E09               	movwf	??_CAN_GenID& (0+255),c
  2546  0009DE  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  2547  0009E0  90D8               	bcf	status,0,c
  2548  0009E2  3609               	rlcf	??_CAN_GenID,f,c
  2549  0009E4  360A               	rlcf	??_CAN_GenID+1,f,c
  2550  0009E6  90D8               	bcf	status,0,c
  2551  0009E8  3609               	rlcf	??_CAN_GenID,f,c
  2552  0009EA  360A               	rlcf	??_CAN_GenID+1,f,c
  2553  0009EC  EE20 F006          	lfsr	2,6
  2554  0009F0  5006               	movf	CAN_GenID@message,w,c
  2555  0009F2  26D9               	addwf	fsr2l,f,c
  2556  0009F4  5007               	movf	CAN_GenID@message+1,w,c
  2557  0009F6  22DA               	addwfc	fsr2h,f,c
  2558  0009F8  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2559  0009FC  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2560                           
  2561                           ;CAN.c: 388:     message->id.w[0] = DaneCan.adresCAN + 0x0010;
  2562  000A00  0E10               	movlw	16
  2563  000A02  2439               	addwf	_DaneCan+2,w,c
  2564  000A04  6E09               	movwf	??_CAN_GenID& (0+255),c
  2565  000A06  0E00               	movlw	0
  2566  000A08  203A               	addwfc	_DaneCan+3,w,c
  2567  000A0A  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  2568  000A0C  EE20 F004          	lfsr	2,4
  2569  000A10  5006               	movf	CAN_GenID@message,w,c
  2570  000A12  26D9               	addwf	fsr2l,f,c
  2571  000A14  5007               	movf	CAN_GenID@message+1,w,c
  2572  000A16  22DA               	addwfc	fsr2h,f,c
  2573  000A18  C009  FFDE         	movff	??_CAN_GenID,postinc2
  2574  000A1C  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  2575  000A20  0012               	return		;funcret
  2576  000A22                     __end_of_CAN_GenID:
  2577                           	opt callstack 0
  2578                           
  2579 ;; *************** function _CAN_TakeFrame *****************
  2580 ;; Defined at:
  2581 ;;		line 247 in file "CAN.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  message         2   13[COMRAM] PTR struct .
  2584 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  k               1   18[COMRAM] unsigned char 
  2587 ;;  tempCON         1   17[COMRAM] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      enum E10433
  2590 ;; Registers used:
  2591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2601 ;;Total ram usage:        6 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    4
  2604 ;; This function calls:
  2605 ;;		_CAN_MoveBuffIntoFrame
  2606 ;;		___awdiv
  2607 ;; This function is called by:
  2608 ;;		_TRM_DataTransmition
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text24
  2613  000060                     __ptext24:
  2614                           	opt callstack 0
  2615  000060                     _CAN_TakeFrame:
  2616                           	opt callstack 25
  2617                           
  2618                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2619                           
  2620                           ;incstack = 0
  2621  000060  506F               	movf	3951,w,c	;volatile
  2622  000062  0B0F               	andlw	15
  2623  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2624                           
  2625                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2626  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2627  000068  0990               	iorlw	144
  2628  00006A  6E77               	movwf	3959,c	;volatile
  2629                           
  2630                           ;CAN.c: 256:     switch(k)
  2631  00006C  D018               	goto	l2487
  2632  00006E                     l186:
  2633                           
  2634                           ;CAN.c: 259:             tempCON = RXB0CON;
  2635  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2636                           
  2637                           ;CAN.c: 260:             break;
  2638  000072  D035               	goto	l187
  2639  000074                     l188:
  2640                           
  2641                           ;CAN.c: 262:             tempCON = RXB1CON;
  2642  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2643                           
  2644                           ;CAN.c: 263:             break;
  2645  000078  D032               	goto	l187
  2646  00007A                     l189:
  2647                           
  2648                           ;CAN.c: 265:             tempCON = B0CON;
  2649  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2650                           
  2651                           ;CAN.c: 266:             break;
  2652  00007E  D02F               	goto	l187
  2653  000080                     l190:
  2654                           
  2655                           ;CAN.c: 268:             tempCON = B1CON;
  2656  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2657                           
  2658                           ;CAN.c: 269:             break;
  2659  000084  D02C               	goto	l187
  2660  000086                     l191:
  2661                           
  2662                           ;CAN.c: 271:             tempCON = B2CON;
  2663  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2664                           
  2665                           ;CAN.c: 272:             break;
  2666  00008A  D029               	goto	l187
  2667  00008C                     l192:
  2668                           
  2669                           ;CAN.c: 274:             tempCON = B3CON;
  2670  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2671                           
  2672                           ;CAN.c: 275:             break;
  2673  000090  D026               	goto	l187
  2674  000092                     l193:
  2675                           
  2676                           ;CAN.c: 277:             tempCON = B4CON;
  2677  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2678                           
  2679                           ;CAN.c: 278:             break;
  2680  000096  D023               	goto	l187
  2681  000098                     l194:
  2682                           
  2683                           ;CAN.c: 280:             tempCON = B5CON;
  2684  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2685                           
  2686                           ;CAN.c: 281:             break;
  2687  00009C  D020               	goto	l187
  2688  00009E                     l2487:
  2689  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2690  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2691  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2692                           
  2693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2694                           ; Switch size 1, requested type "simple"
  2695                           ; Number of cases is 1, Range of values is 0 to 0
  2696                           ; switch strategies available:
  2697                           ; Name         Instructions Cycles
  2698                           ; simple_byte            4     3 (average)
  2699                           ;	Chosen strategy is simple_byte
  2700  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2701  0000A6  0A00               	xorlw	0	; case 0
  2702  0000A8  A4D8               	btfss	status,2,c
  2703  0000AA  D019               	goto	l187
  2704                           
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 8, Range of values is 0 to 7
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte           25    13 (average)
  2710                           ;	Chosen strategy is simple_byte
  2711  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2712  0000AE  0A00               	xorlw	0	; case 0
  2713  0000B0  B4D8               	btfsc	status,2,c
  2714  0000B2  D7DD               	goto	l186
  2715  0000B4  0A01               	xorlw	1	; case 1
  2716  0000B6  B4D8               	btfsc	status,2,c
  2717  0000B8  D7DD               	goto	l188
  2718  0000BA  0A03               	xorlw	3	; case 2
  2719  0000BC  B4D8               	btfsc	status,2,c
  2720  0000BE  D7DD               	goto	l189
  2721  0000C0  0A01               	xorlw	1	; case 3
  2722  0000C2  B4D8               	btfsc	status,2,c
  2723  0000C4  D7DD               	goto	l190
  2724  0000C6  0A07               	xorlw	7	; case 4
  2725  0000C8  B4D8               	btfsc	status,2,c
  2726  0000CA  D7DD               	goto	l191
  2727  0000CC  0A01               	xorlw	1	; case 5
  2728  0000CE  B4D8               	btfsc	status,2,c
  2729  0000D0  D7DD               	goto	l192
  2730  0000D2  0A03               	xorlw	3	; case 6
  2731  0000D4  B4D8               	btfsc	status,2,c
  2732  0000D6  D7DD               	goto	l193
  2733  0000D8  0A01               	xorlw	1	; case 7
  2734  0000DA  B4D8               	btfsc	status,2,c
  2735  0000DC  D7DD               	goto	l194
  2736  0000DE                     l187:
  2737                           
  2738                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2739  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2740  0000E0  D0A5               	goto	l2523
  2741                           
  2742                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2743  0000E2  EE20 F003          	lfsr	2,3
  2744  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2745  0000E8  26D9               	addwf	fsr2l,f,c
  2746  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2747  0000EC  22DA               	addwfc	fsr2h,f,c
  2748  0000EE  5060               	movf	3936,w,c	;volatile
  2749  0000F0  0B1F               	andlw	31
  2750  0000F2  6EDF               	movwf	indf2,c
  2751                           
  2752                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2753  0000F4  EE20 F004          	lfsr	2,4
  2754  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2755  0000FA  26D9               	addwf	fsr2l,f,c
  2756  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2757  0000FE  22DA               	addwfc	fsr2h,f,c
  2758  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2759                           
  2760                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2761  000104  EE20 F005          	lfsr	2,5
  2762  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2763  00010A  26D9               	addwf	fsr2l,f,c
  2764  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2765  00010E  22DA               	addwfc	fsr2h,f,c
  2766  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2767                           
  2768                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2769  000114  EE20 F006          	lfsr	2,6
  2770  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2771  00011A  26D9               	addwf	fsr2l,f,c
  2772  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2773  00011E  22DA               	addwfc	fsr2h,f,c
  2774  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2775  000124  0E03               	movlw	3
  2776  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2777  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2778  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2779  00012E  0E00               	movlw	0
  2780  000130  6E09               	movwf	___awdiv@divisor+1,c
  2781  000132  0E08               	movlw	8
  2782  000134  6E08               	movwf	___awdiv@divisor,c
  2783  000136  EC66  F004         	call	___awdiv	;wreg free
  2784  00013A  5006               	movf	?___awdiv,w,c
  2785  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2786  00013E  6EDF               	movwf	indf2,c
  2787                           
  2788                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2789  000140  5061               	movf	3937,w,c	;volatile
  2790  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2791  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2792  000146  0E05               	movlw	5
  2793  000148                     u1205:
  2794  000148  90D8               	bcf	status,0,c
  2795  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2796  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2797  00014E  2EE8               	decfsz	wreg,f,c
  2798  000150  D7FB               	goto	u1205
  2799  000152  EE20 F006          	lfsr	2,6
  2800  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2801  000158  26D9               	addwf	fsr2l,f,c
  2802  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2803  00015C  22DA               	addwfc	fsr2h,f,c
  2804  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2805  000160  12DE               	iorwf	postinc2,f,c
  2806  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2807  000164  12DD               	iorwf	postdec2,f,c
  2808                           
  2809                           ;CAN.c: 292:         message->frame_type=0x03;
  2810  000166  EE20 F002          	lfsr	2,2
  2811  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2812  00016C  26D9               	addwf	fsr2l,f,c
  2813  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2814  000170  22DA               	addwfc	fsr2h,f,c
  2815  000172  0E03               	movlw	3
  2816  000174  6EDF               	movwf	indf2,c
  2817                           
  2818                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2819  000176  BC65               	btfsc	3941,6,c	;volatile
  2820  000178  D068               	goto	l2529
  2821                           
  2822                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2823  00017A  EE20 F001          	lfsr	2,1
  2824  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2825  000180  26D9               	addwf	fsr2l,f,c
  2826  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2827  000184  22DA               	addwfc	fsr2h,f,c
  2828  000186  0E01               	movlw	1
  2829  000188  6EDF               	movwf	indf2,c
  2830                           
  2831                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2832  00018A  EE20 F010          	lfsr	2,16
  2833  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2834  000190  26D9               	addwf	fsr2l,f,c
  2835  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2836  000194  22DA               	addwfc	fsr2h,f,c
  2837  000196  5065               	movf	3941,w,c	;volatile
  2838  000198  0B0F               	andlw	15
  2839  00019A  6EDF               	movwf	indf2,c
  2840                           
  2841                           ;CAN.c: 300:             if(message->data_length > 8)
  2842  00019C  EE20 F010          	lfsr	2,16
  2843  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2844  0001A2  26D9               	addwf	fsr2l,f,c
  2845  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2846  0001A6  22DA               	addwfc	fsr2h,f,c
  2847  0001A8  0E08               	movlw	8
  2848  0001AA  64DF               	cpfsgt	indf2,c
  2849  0001AC  D041               	goto	l2527
  2850  0001AE  D01E               	goto	l2521
  2851  0001B0                     l2503:
  2852                           
  2853                           ;CAN.c: 306:                         RXB0CON = 0;
  2854  0001B0  0E00               	movlw	0
  2855  0001B2  6E60               	movwf	3936,c	;volatile
  2856                           
  2857                           ;CAN.c: 307:                         break;
  2858  0001B4  D03B               	goto	l2523
  2859  0001B6                     l2505:
  2860                           
  2861                           ;CAN.c: 309:                         RXB1CON = 0;
  2862  0001B6  0E00               	movlw	0
  2863  0001B8  010F               	movlb	15	; () banked
  2864  0001BA  D00E               	goto	L1
  2865  0001BC                     l2507:
  2866                           
  2867                           ;CAN.c: 312:                         B0CON = 0;
  2868  0001BC  0E00               	movlw	0
  2869  0001BE  010E               	movlb	14	; () banked
  2870  0001C0  6F20               	movwf	32,b	;volatile
  2871                           
  2872                           ;CAN.c: 313:                         break;
  2873  0001C2  D034               	goto	l2523
  2874  0001C4                     l2509:
  2875                           
  2876                           ;CAN.c: 315:                         B1CON = 0;
  2877  0001C4  0E00               	movlw	0
  2878  0001C6  010E               	movlb	14	; () banked
  2879  0001C8  6F30               	movwf	48,b	;volatile
  2880                           
  2881                           ;CAN.c: 316:                         break;
  2882  0001CA  D030               	goto	l2523
  2883  0001CC                     l2511:
  2884                           
  2885                           ;CAN.c: 318:                         B2CON = 0;
  2886  0001CC  0E00               	movlw	0
  2887  0001CE  010E               	movlb	14	; () banked
  2888  0001D0  6F40               	movwf	64,b	;volatile
  2889                           
  2890                           ;CAN.c: 319:                         break;
  2891  0001D2  D02C               	goto	l2523
  2892  0001D4                     l2513:
  2893                           
  2894                           ;CAN.c: 321:                         B3CON = 0;
  2895  0001D4  0E00               	movlw	0
  2896  0001D6  010E               	movlb	14	; () banked
  2897  0001D8                     L1:
  2898  0001D8  6F50               	movwf	80,b	;volatile
  2899                           
  2900                           ;CAN.c: 322:                         break;
  2901  0001DA  D028               	goto	l2523
  2902  0001DC                     l2515:
  2903                           
  2904                           ;CAN.c: 324:                         B4CON = 0;
  2905  0001DC  0E00               	movlw	0
  2906  0001DE  010E               	movlb	14	; () banked
  2907  0001E0  6F60               	movwf	96,b	;volatile
  2908                           
  2909                           ;CAN.c: 325:                         break;
  2910  0001E2  D024               	goto	l2523
  2911  0001E4                     l2517:
  2912                           
  2913                           ;CAN.c: 327:                         B5CON = 0;
  2914  0001E4  0E00               	movlw	0
  2915  0001E6  010E               	movlb	14	; () banked
  2916  0001E8  6F70               	movwf	112,b	;volatile
  2917                           
  2918                           ;CAN.c: 328:                         break;
  2919  0001EA  D020               	goto	l2523
  2920  0001EC                     l2521:
  2921  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2922  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2923  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2924                           
  2925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2926                           ; Switch size 1, requested type "simple"
  2927                           ; Number of cases is 1, Range of values is 0 to 0
  2928                           ; switch strategies available:
  2929                           ; Name         Instructions Cycles
  2930                           ; simple_byte            4     3 (average)
  2931                           ;	Chosen strategy is simple_byte
  2932  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2933  0001F4  0A00               	xorlw	0	; case 0
  2934  0001F6  A4D8               	btfss	status,2,c
  2935  0001F8  D019               	goto	l2523
  2936                           
  2937                           ; Switch size 1, requested type "simple"
  2938                           ; Number of cases is 8, Range of values is 0 to 7
  2939                           ; switch strategies available:
  2940                           ; Name         Instructions Cycles
  2941                           ; simple_byte           25    13 (average)
  2942                           ;	Chosen strategy is simple_byte
  2943  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2944  0001FC  0A00               	xorlw	0	; case 0
  2945  0001FE  B4D8               	btfsc	status,2,c
  2946  000200  D7D7               	goto	l2503
  2947  000202  0A01               	xorlw	1	; case 1
  2948  000204  B4D8               	btfsc	status,2,c
  2949  000206  D7D7               	goto	l2505
  2950  000208  0A03               	xorlw	3	; case 2
  2951  00020A  B4D8               	btfsc	status,2,c
  2952  00020C  D7D7               	goto	l2507
  2953  00020E  0A01               	xorlw	1	; case 3
  2954  000210  B4D8               	btfsc	status,2,c
  2955  000212  D7D8               	goto	l2509
  2956  000214  0A07               	xorlw	7	; case 4
  2957  000216  B4D8               	btfsc	status,2,c
  2958  000218  D7D9               	goto	l2511
  2959  00021A  0A01               	xorlw	1	; case 5
  2960  00021C  B4D8               	btfsc	status,2,c
  2961  00021E  D7DA               	goto	l2513
  2962  000220  0A03               	xorlw	3	; case 6
  2963  000222  B4D8               	btfsc	status,2,c
  2964  000224  D7DB               	goto	l2515
  2965  000226  0A01               	xorlw	1	; case 7
  2966  000228  B4D8               	btfsc	status,2,c
  2967  00022A  D7DC               	goto	l2517
  2968  00022C                     l2523:
  2969                           
  2970                           ;CAN.c: 330:                 return FALSE;
  2971  00022C  0E00               	movlw	0
  2972  00022E  0012               	return	
  2973  000230                     l2527:
  2974                           
  2975                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2976  000230  0E08               	movlw	8
  2977  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  2978  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2979  000236  0E00               	movlw	0
  2980  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2981  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2982  00023C  0E66               	movlw	102
  2983  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2984  000240  0E0F               	movlw	15
  2985  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2986  000244  EC18  F007         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2987                           
  2988                           ;CAN.c: 333:         }
  2989  000248  D027               	goto	l2549
  2990  00024A                     l2529:
  2991                           
  2992                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  2993  00024A  EE20 F001          	lfsr	2,1
  2994  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  2995  000250  26D9               	addwf	fsr2l,f,c
  2996  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  2997  000254  22DA               	addwfc	fsr2h,f,c
  2998  000256  0E02               	movlw	2
  2999  000258  6EDF               	movwf	indf2,c
  3000  00025A  D01E               	goto	l2549
  3001  00025C                     l2531:
  3002                           
  3003                           ;CAN.c: 343:                 RXB0CON = 0;
  3004  00025C  0E00               	movlw	0
  3005  00025E  6E60               	movwf	3936,c	;volatile
  3006                           
  3007                           ;CAN.c: 344:                 break;
  3008  000260  D03B               	goto	l2551
  3009  000262                     l2533:
  3010                           
  3011                           ;CAN.c: 346:                 RXB1CON = 0;
  3012  000262  0E00               	movlw	0
  3013  000264  010F               	movlb	15	; () banked
  3014  000266  D00E               	goto	L2
  3015  000268                     l2535:
  3016                           
  3017                           ;CAN.c: 349:                 B0CON = 0;
  3018  000268  0E00               	movlw	0
  3019  00026A  010E               	movlb	14	; () banked
  3020  00026C  6F20               	movwf	32,b	;volatile
  3021                           
  3022                           ;CAN.c: 350:                 break;
  3023  00026E  D034               	goto	l2551
  3024  000270                     l2537:
  3025                           
  3026                           ;CAN.c: 352:                 B1CON = 0;
  3027  000270  0E00               	movlw	0
  3028  000272  010E               	movlb	14	; () banked
  3029  000274  6F30               	movwf	48,b	;volatile
  3030                           
  3031                           ;CAN.c: 353:                 break;
  3032  000276  D030               	goto	l2551
  3033  000278                     l2539:
  3034                           
  3035                           ;CAN.c: 355:                 B2CON = 0;
  3036  000278  0E00               	movlw	0
  3037  00027A  010E               	movlb	14	; () banked
  3038  00027C  6F40               	movwf	64,b	;volatile
  3039                           
  3040                           ;CAN.c: 356:                 break;
  3041  00027E  D02C               	goto	l2551
  3042  000280                     l2541:
  3043                           
  3044                           ;CAN.c: 358:                 B3CON = 0;
  3045  000280  0E00               	movlw	0
  3046  000282  010E               	movlb	14	; () banked
  3047  000284                     L2:
  3048  000284  6F50               	movwf	80,b	;volatile
  3049                           
  3050                           ;CAN.c: 359:                 break;
  3051  000286  D028               	goto	l2551
  3052  000288                     l2543:
  3053                           
  3054                           ;CAN.c: 361:                 B4CON = 0;
  3055  000288  0E00               	movlw	0
  3056  00028A  010E               	movlb	14	; () banked
  3057  00028C  6F60               	movwf	96,b	;volatile
  3058                           
  3059                           ;CAN.c: 362:                 break;
  3060  00028E  D024               	goto	l2551
  3061  000290                     l2545:
  3062                           
  3063                           ;CAN.c: 364:                 B5CON = 0;
  3064  000290  0E00               	movlw	0
  3065  000292  010E               	movlb	14	; () banked
  3066  000294  6F70               	movwf	112,b	;volatile
  3067                           
  3068                           ;CAN.c: 365:                 break;
  3069  000296  D020               	goto	l2551
  3070  000298                     l2549:
  3071  000298  5013               	movf	CAN_TakeFrame@k,w,c
  3072  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3073  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3074                           
  3075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3076                           ; Switch size 1, requested type "simple"
  3077                           ; Number of cases is 1, Range of values is 0 to 0
  3078                           ; switch strategies available:
  3079                           ; Name         Instructions Cycles
  3080                           ; simple_byte            4     3 (average)
  3081                           ;	Chosen strategy is simple_byte
  3082  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  3083  0002A0  0A00               	xorlw	0	; case 0
  3084  0002A2  A4D8               	btfss	status,2,c
  3085  0002A4  D019               	goto	l2551
  3086                           
  3087                           ; Switch size 1, requested type "simple"
  3088                           ; Number of cases is 8, Range of values is 0 to 7
  3089                           ; switch strategies available:
  3090                           ; Name         Instructions Cycles
  3091                           ; simple_byte           25    13 (average)
  3092                           ;	Chosen strategy is simple_byte
  3093  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  3094  0002A8  0A00               	xorlw	0	; case 0
  3095  0002AA  B4D8               	btfsc	status,2,c
  3096  0002AC  D7D7               	goto	l2531
  3097  0002AE  0A01               	xorlw	1	; case 1
  3098  0002B0  B4D8               	btfsc	status,2,c
  3099  0002B2  D7D7               	goto	l2533
  3100  0002B4  0A03               	xorlw	3	; case 2
  3101  0002B6  B4D8               	btfsc	status,2,c
  3102  0002B8  D7D7               	goto	l2535
  3103  0002BA  0A01               	xorlw	1	; case 3
  3104  0002BC  B4D8               	btfsc	status,2,c
  3105  0002BE  D7D8               	goto	l2537
  3106  0002C0  0A07               	xorlw	7	; case 4
  3107  0002C2  B4D8               	btfsc	status,2,c
  3108  0002C4  D7D9               	goto	l2539
  3109  0002C6  0A01               	xorlw	1	; case 5
  3110  0002C8  B4D8               	btfsc	status,2,c
  3111  0002CA  D7DA               	goto	l2541
  3112  0002CC  0A03               	xorlw	3	; case 6
  3113  0002CE  B4D8               	btfsc	status,2,c
  3114  0002D0  D7DB               	goto	l2543
  3115  0002D2  0A01               	xorlw	1	; case 7
  3116  0002D4  B4D8               	btfsc	status,2,c
  3117  0002D6  D7DC               	goto	l2545
  3118  0002D8                     l2551:
  3119                           
  3120                           ;CAN.c: 367:         return TRUE;
  3121  0002D8  0E01               	movlw	1
  3122  0002DA  0012               	return		;funcret
  3123  0002DC                     __end_of_CAN_TakeFrame:
  3124                           	opt callstack 0
  3125                           
  3126 ;; *************** function ___awdiv *****************
  3127 ;; Defined at:
  3128 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  dividend        2    5[COMRAM] int 
  3131 ;;  divisor         2    7[COMRAM] int 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  quotient        2   11[COMRAM] int 
  3134 ;;  sign            1   10[COMRAM] unsigned char 
  3135 ;;  counter         1    9[COMRAM] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  2    5[COMRAM] int 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3148 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3149 ;;Total ram usage:        8 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    3
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_CAN_TakeFrame
  3156 ;;		_FRAME_HandleCanFrame
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text25
  3161  0008CC                     __ptext25:
  3162                           	opt callstack 0
  3163  0008CC                     ___awdiv:
  3164                           	opt callstack 25
  3165                           
  3166                           ;incstack = 0
  3167  0008CC  0E00               	movlw	0
  3168  0008CE  6E0B               	movwf	___awdiv@sign,c
  3169  0008D0  AE09               	btfss	___awdiv@divisor+1,7,c
  3170  0008D2  D006               	goto	l2407
  3171  0008D4  6C08               	negf	___awdiv@divisor,c
  3172  0008D6  1E09               	comf	___awdiv@divisor+1,f,c
  3173  0008D8  B0D8               	btfsc	status,0,c
  3174  0008DA  2A09               	incf	___awdiv@divisor+1,f,c
  3175  0008DC  0E01               	movlw	1
  3176  0008DE  6E0B               	movwf	___awdiv@sign,c
  3177  0008E0                     l2407:
  3178  0008E0  AE07               	btfss	___awdiv@dividend+1,7,c
  3179  0008E2  D006               	goto	l2413
  3180  0008E4  6C06               	negf	___awdiv@dividend,c
  3181  0008E6  1E07               	comf	___awdiv@dividend+1,f,c
  3182  0008E8  B0D8               	btfsc	status,0,c
  3183  0008EA  2A07               	incf	___awdiv@dividend+1,f,c
  3184  0008EC  0E01               	movlw	1
  3185  0008EE  1A0B               	xorwf	___awdiv@sign,f,c
  3186  0008F0                     l2413:
  3187  0008F0  0E00               	movlw	0
  3188  0008F2  6E0D               	movwf	___awdiv@quotient+1,c
  3189  0008F4  0E00               	movlw	0
  3190  0008F6  6E0C               	movwf	___awdiv@quotient,c
  3191  0008F8  5008               	movf	___awdiv@divisor,w,c
  3192  0008FA  1009               	iorwf	___awdiv@divisor+1,w,c
  3193  0008FC  B4D8               	btfsc	status,2,c
  3194  0008FE  D01C               	goto	l2435
  3195  000900  0E01               	movlw	1
  3196  000902  6E0A               	movwf	___awdiv@counter,c
  3197  000904  D004               	goto	l2421
  3198  000906                     l2419:
  3199  000906  90D8               	bcf	status,0,c
  3200  000908  3608               	rlcf	___awdiv@divisor,f,c
  3201  00090A  3609               	rlcf	___awdiv@divisor+1,f,c
  3202  00090C  2A0A               	incf	___awdiv@counter,f,c
  3203  00090E                     l2421:
  3204  00090E  AE09               	btfss	___awdiv@divisor+1,7,c
  3205  000910  D7FA               	goto	l2419
  3206  000912                     u1110:
  3207  000912  90D8               	bcf	status,0,c
  3208  000914  360C               	rlcf	___awdiv@quotient,f,c
  3209  000916  360D               	rlcf	___awdiv@quotient+1,f,c
  3210  000918  5008               	movf	___awdiv@divisor,w,c
  3211  00091A  5C06               	subwf	___awdiv@dividend,w,c
  3212  00091C  5009               	movf	___awdiv@divisor+1,w,c
  3213  00091E  5807               	subwfb	___awdiv@dividend+1,w,c
  3214  000920  A0D8               	btfss	status,0,c
  3215  000922  D005               	goto	l2431
  3216  000924  5008               	movf	___awdiv@divisor,w,c
  3217  000926  5E06               	subwf	___awdiv@dividend,f,c
  3218  000928  5009               	movf	___awdiv@divisor+1,w,c
  3219  00092A  5A07               	subwfb	___awdiv@dividend+1,f,c
  3220  00092C  800C               	bsf	___awdiv@quotient,0,c
  3221  00092E                     l2431:
  3222  00092E  90D8               	bcf	status,0,c
  3223  000930  3209               	rrcf	___awdiv@divisor+1,f,c
  3224  000932  3208               	rrcf	___awdiv@divisor,f,c
  3225  000934  2E0A               	decfsz	___awdiv@counter,f,c
  3226  000936  D7ED               	goto	u1110
  3227  000938                     l2435:
  3228  000938  500B               	movf	___awdiv@sign,w,c
  3229  00093A  B4D8               	btfsc	status,2,c
  3230  00093C  D004               	goto	l2439
  3231  00093E  6C0C               	negf	___awdiv@quotient,c
  3232  000940  1E0D               	comf	___awdiv@quotient+1,f,c
  3233  000942  B0D8               	btfsc	status,0,c
  3234  000944  2A0D               	incf	___awdiv@quotient+1,f,c
  3235  000946                     l2439:
  3236  000946  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3237  00094A  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3238  00094E  0012               	return		;funcret
  3239  000950                     __end_of___awdiv:
  3240                           	opt callstack 0
  3241                           
  3242 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  3243 ;; Defined at:
  3244 ;;		line 169 in file "CAN.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  3247 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3248 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  3249 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  i               1    9[COMRAM] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3264 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3265 ;;Total ram usage:        5 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    3
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_CAN_SendFrame
  3272 ;;		_CAN_TakeFrame
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text26
  3277  000E30                     __ptext26:
  3278                           	opt callstack 0
  3279  000E30                     _CAN_MoveBuffIntoFrame:
  3280                           	opt callstack 24
  3281                           
  3282                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  3283                           
  3284                           ;incstack = 0
  3285  000E30  0E00               	movlw	0
  3286  000E32  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  3287  000E34                     l2067:
  3288                           
  3289                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  3290  000E34  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3291  000E36  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  3292  000E38  6ED9               	movwf	fsr2l,c
  3293  000E3A  0E00               	movlw	0
  3294  000E3C  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  3295  000E3E  6EDA               	movwf	fsr2h,c
  3296  000E40  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  3297  000E42  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  3298  000E44  6EE1               	movwf	fsr1l,c
  3299  000E46  0E00               	movlw	0
  3300  000E48  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  3301  000E4A  6EE2               	movwf	fsr1h,c
  3302  000E4C  CFDF FFE7          	movff	indf2,indf1
  3303                           
  3304                           ;CAN.c: 175:     }
  3305  000E50  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  3306  000E52  0E07               	movlw	7
  3307  000E54  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  3308  000E56  D7EE               	goto	l2067
  3309  000E58  0012               	return	
  3310  000E5A                     __end_of_CAN_MoveBuffIntoFrame:
  3311                           	opt callstack 0
  3312                           
  3313 ;; *************** function _TMR1_Update_flag_Set *****************
  3314 ;; Defined at:
  3315 ;;		line 32 in file "TMR1.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  a               2    5[COMRAM] unsigned int 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		None
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;Total ram usage:        2 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    3
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text27
  3344  000F8A                     __ptext27:
  3345                           	opt callstack 0
  3346  000F8A                     _TMR1_Update_flag_Set:
  3347                           	opt callstack 27
  3348                           
  3349                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3350                           
  3351                           ;incstack = 0
  3352  000F8A  C006  F03B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3353  000F8E  C007  F03C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3354  000F92  0012               	return		;funcret
  3355  000F94                     __end_of_TMR1_Update_flag_Set:
  3356                           	opt callstack 0
  3357                           
  3358 ;; *************** function _TMR1_Update_flag_Get *****************
  3359 ;; Defined at:
  3360 ;;		line 47 in file "TMR1.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  2    5[COMRAM] unsigned int 
  3367 ;; Registers used:
  3368 ;;		None
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3378 ;;Total ram usage:        2 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    3
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text28
  3389  000F94                     __ptext28:
  3390                           	opt callstack 0
  3391  000F94                     _TMR1_Update_flag_Get:
  3392                           	opt callstack 27
  3393                           
  3394                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3395                           
  3396                           ;incstack = 0
  3397  000F94  C03B  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3398  000F98  C03C  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3399  000F9C  0012               	return		;funcret
  3400  000F9E                     __end_of_TMR1_Update_flag_Get:
  3401                           	opt callstack 0
  3402                           
  3403 ;; *************** function _LED_Update *****************
  3404 ;; Defined at:
  3405 ;;		line 89 in file "LED.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      unsigned char 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    5
  3426 ;; This function calls:
  3427 ;;		_LED_Left
  3428 ;;		_LED_Light_Pos
  3429 ;;		_LED_Right
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text29
  3436  000B2C                     __ptext29:
  3437                           	opt callstack 0
  3438  000B2C                     _LED_Update:
  3439                           	opt callstack 25
  3440                           
  3441                           ;LED.c: 91:     static LED_RGA_type Red = RED;;LED.c: 92:     static LED_RGA_type Green 
      +                          = GREEN;;LED.c: 93:     static UINT pos1 = 0b0000000001;;LED.c: 94:     static UINT pos2
      +                           = 0b0000000001;;LED.c: 97:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3442                           
  3443                           ;incstack = 0
  3444  000B2C  C043  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3445  000B30  C044  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3446  000B34  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3447  000B38  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3448  000B3C  5049               	movf	LED_Update@Green,w,c
  3449  000B3E  ECBC  F003         	call	_LED_Light_Pos
  3450                           
  3451                           ;LED.c: 98:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3452  000B42  C045  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3453  000B46  C046  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3454  000B4A  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3455  000B4E  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3456  000B52  0E00               	movlw	0
  3457  000B54  ECBC  F003         	call	_LED_Light_Pos
  3458                           
  3459                           ;LED.c: 99:     pos1 = LED_Right(pos1);
  3460  000B58  C045  F006         	movff	LED_Update@pos1,LED_Right@a
  3461  000B5C  C046  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3462  000B60  EC11  F006         	call	_LED_Right	;wreg free
  3463  000B64  C006  F045         	movff	?_LED_Right,LED_Update@pos1
  3464  000B68  C007  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  3465                           
  3466                           ;LED.c: 100:     pos2 = LED_Left(pos2);
  3467  000B6C  C043  F006         	movff	LED_Update@pos2,LED_Left@a
  3468  000B70  C044  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3469  000B74  EC5A  F006         	call	_LED_Left	;wreg free
  3470  000B78  C006  F043         	movff	?_LED_Left,LED_Update@pos2
  3471  000B7C  C007  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  3472  000B80  0012               	return		;funcret
  3473  000B82                     __end_of_LED_Update:
  3474                           	opt callstack 0
  3475                           
  3476 ;; *************** function _LED_Light_Pos *****************
  3477 ;; Defined at:
  3478 ;;		line 172 in file "LED.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  color           1    wreg     enum E10641
  3481 ;;  pos             2   12[COMRAM] unsigned int 
  3482 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  color           1   16[COMRAM] enum E10641
  3485 ;;  flage           2   21[COMRAM] unsigned int 
  3486 ;;  pos2            2   19[COMRAM] unsigned int 
  3487 ;;  LED_array       2   17[COMRAM] unsigned int 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  2   12[COMRAM] unsigned int 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;Total ram usage:       11 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    4
  3504 ;; This function calls:
  3505 ;;		_LED_Control
  3506 ;;		_LED_Left
  3507 ;;		_LED_Right
  3508 ;;		___lwdiv
  3509 ;; This function is called by:
  3510 ;;		_LED_Update
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text30
  3515  000778                     __ptext30:
  3516                           	opt callstack 0
  3517  000778                     _LED_Light_Pos:
  3518                           	opt callstack 25
  3519                           
  3520                           ;incstack = 0
  3521                           ;LED_Light_Pos@color stored from wreg
  3522  000778  6E11               	movwf	LED_Light_Pos@color,c
  3523                           
  3524                           ;LED.c: 172: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 17
      +                          3: {;LED.c: 174:     UINT pos2 =pos;
  3525  00077A  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3526  00077E  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3527                           
  3528                           ;LED.c: 175:     UINT LED_array = 0b0000000000;
  3529  000782  0E00               	movlw	0
  3530  000784  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3531  000786  0E00               	movlw	0
  3532  000788  6E12               	movwf	LED_Light_Pos@LED_array,c
  3533                           
  3534                           ;LED.c: 176:     UINT flage = fulfillment/10;
  3535  00078A  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3536  00078E  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3537  000792  0E00               	movlw	0
  3538  000794  6E09               	movwf	___lwdiv@divisor+1,c
  3539  000796  0E0A               	movlw	10
  3540  000798  6E08               	movwf	___lwdiv@divisor,c
  3541  00079A  ECC1  F005         	call	___lwdiv	;wreg free
  3542  00079E  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3543  0007A2  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3544                           
  3545                           ;LED.c: 177:     if(color == RED)
  3546  0007A6  5011               	movf	LED_Light_Pos@color,w,c
  3547  0007A8  B4D8               	btfsc	status,2,c
  3548  0007AA  D017               	goto	l2589
  3549  0007AC  D031               	goto	l2597
  3550  0007AE                     l2583:
  3551                           
  3552                           ;LED.c: 180:         {;LED.c: 181:             LED_array = pos2|LED_array;
  3553  0007AE  5012               	movf	LED_Light_Pos@LED_array,w,c
  3554  0007B0  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3555  0007B2  6E12               	movwf	LED_Light_Pos@LED_array,c
  3556  0007B4  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3557  0007B6  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3558  0007B8  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3559                           
  3560                           ;LED.c: 182:             pos2 = LED_Left(pos2);
  3561  0007BA  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3562  0007BE  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3563  0007C2  EC5A  F006         	call	_LED_Left	;wreg free
  3564  0007C6  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3565  0007CA  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3566                           
  3567                           ;LED.c: 183:             flage = flage - 1;
  3568  0007CE  0EFF               	movlw	255
  3569  0007D0  2416               	addwf	LED_Light_Pos@flage,w,c
  3570  0007D2  6E16               	movwf	LED_Light_Pos@flage,c
  3571  0007D4  0EFF               	movlw	255
  3572  0007D6  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3573  0007D8  6E17               	movwf	LED_Light_Pos@flage+1,c
  3574  0007DA                     l2589:
  3575                           
  3576                           ;LED.c: 179:         while(flage>0)
  3577  0007DA  5016               	movf	LED_Light_Pos@flage,w,c
  3578  0007DC  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3579  0007DE  B4D8               	btfsc	status,2,c
  3580  0007E0  D01B               	goto	u1250
  3581  0007E2  D7E5               	goto	l2583
  3582  0007E4                     l2591:
  3583                           
  3584                           ;LED.c: 189:         {;LED.c: 190:             LED_array = pos2|LED_array;
  3585  0007E4  5012               	movf	LED_Light_Pos@LED_array,w,c
  3586  0007E6  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3587  0007E8  6E12               	movwf	LED_Light_Pos@LED_array,c
  3588  0007EA  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3589  0007EC  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3590  0007EE  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3591                           
  3592                           ;LED.c: 191:             pos2 = LED_Right(pos2);
  3593  0007F0  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3594  0007F4  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3595  0007F8  EC11  F006         	call	_LED_Right	;wreg free
  3596  0007FC  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3597  000800  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3598                           
  3599                           ;LED.c: 192:             flage = flage - 1;
  3600  000804  0EFF               	movlw	255
  3601  000806  2416               	addwf	LED_Light_Pos@flage,w,c
  3602  000808  6E16               	movwf	LED_Light_Pos@flage,c
  3603  00080A  0EFF               	movlw	255
  3604  00080C  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3605  00080E  6E17               	movwf	LED_Light_Pos@flage+1,c
  3606  000810                     l2597:
  3607                           
  3608                           ;LED.c: 188:         while(flage>0)
  3609  000810  5016               	movf	LED_Light_Pos@flage,w,c
  3610  000812  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3611  000814  A4D8               	btfss	status,2,c
  3612  000816  D7E6               	goto	l2591
  3613  000818                     u1250:
  3614                           
  3615                           ;LED.c: 195:     LED_Control(color, LED_array);
  3616  000818  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3617  00081C  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3618  000820  5011               	movf	LED_Light_Pos@color,w,c
  3619  000822  EC13  F003         	call	_LED_Control
  3620  000826  0012               	return		;funcret
  3621  000828                     __end_of_LED_Light_Pos:
  3622                           	opt callstack 0
  3623                           
  3624 ;; *************** function ___lwdiv *****************
  3625 ;; Defined at:
  3626 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  dividend        2    5[COMRAM] unsigned int 
  3629 ;;  divisor         2    7[COMRAM] unsigned int 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  quotient        2    9[COMRAM] unsigned int 
  3632 ;;  counter         1   11[COMRAM] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  2    5[COMRAM] unsigned int 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;Total ram usage:        7 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    3
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_LED_Light_Pos
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text31
  3657  000B82                     __ptext31:
  3658                           	opt callstack 0
  3659  000B82                     ___lwdiv:
  3660                           	opt callstack 25
  3661                           
  3662                           ;incstack = 0
  3663  000B82  0E00               	movlw	0
  3664  000B84  6E0B               	movwf	___lwdiv@quotient+1,c
  3665  000B86  0E00               	movlw	0
  3666  000B88  6E0A               	movwf	___lwdiv@quotient,c
  3667  000B8A  5008               	movf	___lwdiv@divisor,w,c
  3668  000B8C  1009               	iorwf	___lwdiv@divisor+1,w,c
  3669  000B8E  B4D8               	btfsc	status,2,c
  3670  000B90  D01C               	goto	l1081
  3671  000B92  0E01               	movlw	1
  3672  000B94  6E0C               	movwf	___lwdiv@counter,c
  3673  000B96  D004               	goto	l2451
  3674  000B98                     l2449:
  3675  000B98  90D8               	bcf	status,0,c
  3676  000B9A  3608               	rlcf	___lwdiv@divisor,f,c
  3677  000B9C  3609               	rlcf	___lwdiv@divisor+1,f,c
  3678  000B9E  2A0C               	incf	___lwdiv@counter,f,c
  3679  000BA0                     l2451:
  3680  000BA0  AE09               	btfss	___lwdiv@divisor+1,7,c
  3681  000BA2  D7FA               	goto	l2449
  3682  000BA4                     u1150:
  3683  000BA4  90D8               	bcf	status,0,c
  3684  000BA6  360A               	rlcf	___lwdiv@quotient,f,c
  3685  000BA8  360B               	rlcf	___lwdiv@quotient+1,f,c
  3686  000BAA  5008               	movf	___lwdiv@divisor,w,c
  3687  000BAC  5C06               	subwf	___lwdiv@dividend,w,c
  3688  000BAE  5009               	movf	___lwdiv@divisor+1,w,c
  3689  000BB0  5807               	subwfb	___lwdiv@dividend+1,w,c
  3690  000BB2  A0D8               	btfss	status,0,c
  3691  000BB4  D005               	goto	l2461
  3692  000BB6  5008               	movf	___lwdiv@divisor,w,c
  3693  000BB8  5E06               	subwf	___lwdiv@dividend,f,c
  3694  000BBA  5009               	movf	___lwdiv@divisor+1,w,c
  3695  000BBC  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3696  000BBE  800A               	bsf	___lwdiv@quotient,0,c
  3697  000BC0                     l2461:
  3698  000BC0  90D8               	bcf	status,0,c
  3699  000BC2  3209               	rrcf	___lwdiv@divisor+1,f,c
  3700  000BC4  3208               	rrcf	___lwdiv@divisor,f,c
  3701  000BC6  2E0C               	decfsz	___lwdiv@counter,f,c
  3702  000BC8  D7ED               	goto	u1150
  3703  000BCA                     l1081:
  3704  000BCA  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3705  000BCE  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3706  000BD2  0012               	return		;funcret
  3707  000BD4                     __end_of___lwdiv:
  3708                           	opt callstack 0
  3709                           
  3710 ;; *************** function _LED_Right *****************
  3711 ;; Defined at:
  3712 ;;		line 116 in file "LED.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  a               2    5[COMRAM] unsigned int 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  b               2    9[COMRAM] unsigned int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  2    5[COMRAM] unsigned int 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3730 ;;Total ram usage:        6 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    3
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_LED_Update
  3737 ;;		_LED_Light_Pos
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text32
  3742  000C22                     __ptext32:
  3743                           	opt callstack 0
  3744  000C22                     _LED_Right:
  3745                           	opt callstack 26
  3746                           
  3747                           ;LED.c: 116: UINT LED_Right(UINT a);LED.c: 117: {;LED.c: 118:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3748                           
  3749                           ;incstack = 0
  3750  000C22  A006               	btfss	LED_Right@a,0,c
  3751  000C24  D018               	goto	l2321
  3752                           
  3753                           ;LED.c: 119:     {;LED.c: 120:         UINT b = a & 0b1111111110;
  3754  000C26  0EFE               	movlw	254
  3755  000C28  1406               	andwf	LED_Right@a,w,c
  3756  000C2A  6E0A               	movwf	LED_Right@b,c
  3757  000C2C  0E03               	movlw	3
  3758  000C2E  1407               	andwf	LED_Right@a+1,w,c
  3759  000C30  6E0B               	movwf	LED_Right@b+1,c
  3760                           
  3761                           ;LED.c: 121:         b = b >> 1;
  3762  000C32  90D8               	bcf	status,0,c
  3763  000C34  300B               	rrcf	LED_Right@b+1,w,c
  3764  000C36  6E08               	movwf	??_LED_Right& (0+255),c
  3765  000C38  300A               	rrcf	LED_Right@b,w,c
  3766  000C3A  6E0A               	movwf	LED_Right@b,c
  3767  000C3C  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3768                           
  3769                           ;LED.c: 122:         b = b | 0b1000000000;
  3770  000C40  0E00               	movlw	0
  3771  000C42  100A               	iorwf	LED_Right@b,w,c
  3772  000C44  6E0A               	movwf	LED_Right@b,c
  3773  000C46  0E02               	movlw	2
  3774  000C48  100B               	iorwf	LED_Right@b+1,w,c
  3775  000C4A  6E0B               	movwf	LED_Right@b+1,c
  3776                           
  3777                           ;LED.c: 123:         return b;
  3778  000C4C  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3779  000C50  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3780  000C54  0012               	return	
  3781  000C56                     l2321:
  3782                           
  3783                           ;LED.c: 126:     {;LED.c: 127:         a =a >> 1;
  3784  000C56  90D8               	bcf	status,0,c
  3785  000C58  3007               	rrcf	LED_Right@a+1,w,c
  3786  000C5A  6E08               	movwf	??_LED_Right& (0+255),c
  3787  000C5C  3006               	rrcf	LED_Right@a,w,c
  3788  000C5E  6E06               	movwf	LED_Right@a,c
  3789  000C60  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3790                           
  3791                           ;LED.c: 128:         return a;
  3792  000C64  C006  F006         	movff	LED_Right@a,?_LED_Right
  3793  000C68  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3794  000C6C  0012               	return		;funcret
  3795  000C6E                     __end_of_LED_Right:
  3796                           	opt callstack 0
  3797                           
  3798 ;; *************** function _LED_Left *****************
  3799 ;; Defined at:
  3800 ;;		line 143 in file "LED.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  a               2    5[COMRAM] unsigned int 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  b               2    7[COMRAM] unsigned int 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  2    5[COMRAM] unsigned int 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3818 ;;Total ram usage:        4 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    3
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_LED_Update
  3825 ;;		_LED_Light_Pos
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text33
  3830  000CB4                     __ptext33:
  3831                           	opt callstack 0
  3832  000CB4                     _LED_Left:
  3833                           	opt callstack 25
  3834                           
  3835                           ;LED.c: 143: UINT LED_Left(UINT a);LED.c: 144: {;LED.c: 145:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3836                           
  3837                           ;incstack = 0
  3838  000CB4  A207               	btfss	LED_Left@a+1,1,c
  3839  000CB6  D015               	goto	l2337
  3840                           
  3841                           ;LED.c: 146:     {;LED.c: 147:         UINT b = a & 0b0111111111;
  3842  000CB8  0EFF               	movlw	255
  3843  000CBA  1406               	andwf	LED_Left@a,w,c
  3844  000CBC  6E08               	movwf	LED_Left@b,c
  3845  000CBE  0E01               	movlw	1
  3846  000CC0  1407               	andwf	LED_Left@a+1,w,c
  3847  000CC2  6E09               	movwf	LED_Left@b+1,c
  3848                           
  3849                           ;LED.c: 148:         b = b << 1;
  3850  000CC4  90D8               	bcf	status,0,c
  3851  000CC6  3408               	rlcf	LED_Left@b,w,c
  3852  000CC8  6E08               	movwf	LED_Left@b,c
  3853  000CCA  3409               	rlcf	LED_Left@b+1,w,c
  3854  000CCC  6E09               	movwf	LED_Left@b+1,c
  3855                           
  3856                           ;LED.c: 149:         b = b | 0b0000000001;
  3857  000CCE  0E01               	movlw	1
  3858  000CD0  1008               	iorwf	LED_Left@b,w,c
  3859  000CD2  6E08               	movwf	LED_Left@b,c
  3860  000CD4  5009               	movf	LED_Left@b+1,w,c
  3861  000CD6  6E09               	movwf	LED_Left@b+1,c
  3862                           
  3863                           ;LED.c: 150:         return b;
  3864  000CD8  C008  F006         	movff	LED_Left@b,?_LED_Left
  3865  000CDC  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3866  000CE0  0012               	return	
  3867  000CE2                     l2337:
  3868                           
  3869                           ;LED.c: 153:     {;LED.c: 154:         a = a << 1;
  3870  000CE2  90D8               	bcf	status,0,c
  3871  000CE4  3406               	rlcf	LED_Left@a,w,c
  3872  000CE6  6E06               	movwf	LED_Left@a,c
  3873  000CE8  3407               	rlcf	LED_Left@a+1,w,c
  3874  000CEA  6E07               	movwf	LED_Left@a+1,c
  3875                           
  3876                           ;LED.c: 155:         return a;
  3877  000CEC  C006  F006         	movff	LED_Left@a,?_LED_Left
  3878  000CF0  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3879  000CF4  0012               	return		;funcret
  3880  000CF6                     __end_of_LED_Left:
  3881                           	opt callstack 0
  3882                           
  3883 ;; *************** function _INI_All *****************
  3884 ;; Defined at:
  3885 ;;		line 52 in file "INI.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;Total ram usage:        0 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    5
  3906 ;; This function calls:
  3907 ;;		_CAN_Setup
  3908 ;;		_INI_GlobalInterrupt
  3909 ;;		_INI_LED_Start
  3910 ;;		_INI_OUTPUT
  3911 ;;		_INI_Timer
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text34
  3918  000F22                     __ptext34:
  3919                           	opt callstack 0
  3920  000F22                     _INI_All:
  3921                           	opt callstack 25
  3922                           
  3923                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3924                           
  3925                           ;incstack = 0
  3926  000F22  80D1               	bsf	4049,0,c	;volatile
  3927  000F24  0004               	clrwdt		;# 
  3928                           
  3929                           ;INI.c: 64:     INI_OUTPUT();
  3930  000F26  EC82  F007         	call	_INI_OUTPUT	;wreg free
  3931                           
  3932                           ;INI.c: 66:     CAN_Setup();
  3933  000F2A  EC11  F005         	call	_CAN_Setup	;wreg free
  3934                           
  3935                           ;INI.c: 67:     INI_GlobalInterrupt();
  3936  000F2E  ECAA  F007         	call	_INI_GlobalInterrupt	;wreg free
  3937                           
  3938                           ;INI.c: 69:     INI_Timer();
  3939  000F32  EC9E  F007         	call	_INI_Timer	;wreg free
  3940                           
  3941                           ;INI.c: 71:     INI_LED_Start();
  3942  000F36  ECE7  F006         	call	_INI_LED_Start	;wreg free
  3943  000F3A  0012               	return		;funcret
  3944  000F3C                     __end_of_INI_All:
  3945                           	opt callstack 0
  3946                           
  3947 ;; *************** function _INI_Timer *****************
  3948 ;; Defined at:
  3949 ;;		line 92 in file "TMR1.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      unsigned char 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    3
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_INI_All
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text35
  3978  000F3C                     __ptext35:
  3979                           	opt callstack 0
  3980  000F3C                     _INI_Timer:
  3981                           	opt callstack 26
  3982                           
  3983                           ;TMR1.c: 96:     IRCF2 = 1;
  3984                           
  3985                           ;incstack = 0
  3986  000F3C  8CD3               	bsf	4051,6,c	;volatile
  3987                           
  3988                           ;TMR1.c: 97:     IRCF1 = 1;
  3989  000F3E  8AD3               	bsf	4051,5,c	;volatile
  3990                           
  3991                           ;TMR1.c: 98:     IRCF0 = 1;
  3992  000F40  88D3               	bsf	4051,4,c	;volatile
  3993                           
  3994                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3995  000F42  0E3D               	movlw	61
  3996  000F44  6ECD               	movwf	4045,c	;volatile
  3997                           
  3998                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3999  000F46  0E9E               	movlw	158
  4000  000F48  6ECF               	movwf	4047,c	;volatile
  4001                           
  4002                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4003  000F4A  0E57               	movlw	87
  4004  000F4C  6ECE               	movwf	4046,c	;volatile
  4005                           
  4006                           ;TMR1.c: 102:     TMR1IE=1;
  4007  000F4E  809D               	bsf	3997,0,c	;volatile
  4008                           
  4009                           ;TMR1.c: 103:     TMR1ON = 1;
  4010  000F50  80CD               	bsf	4045,0,c	;volatile
  4011  000F52  0012               	return		;funcret
  4012  000F54                     __end_of_INI_Timer:
  4013                           	opt callstack 0
  4014                           
  4015 ;; *************** function _INI_OUTPUT *****************
  4016 ;; Defined at:
  4017 ;;		line 27 in file "INI.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;		None
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4035 ;;Total ram usage:        0 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    3
  4038 ;; This function calls:
  4039 ;;		Nothing
  4040 ;; This function is called by:
  4041 ;;		_INI_All
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text36
  4046  000F04                     __ptext36:
  4047                           	opt callstack 0
  4048  000F04                     _INI_OUTPUT:
  4049                           	opt callstack 26
  4050                           
  4051                           ;INI.c: 31:     LATA = 0;
  4052                           
  4053                           ;incstack = 0
  4054  000F04  0E00               	movlw	0
  4055  000F06  6E89               	movwf	3977,c	;volatile
  4056                           
  4057                           ;INI.c: 32:     LATB = 0;
  4058  000F08  0E00               	movlw	0
  4059  000F0A  6E8A               	movwf	3978,c	;volatile
  4060                           
  4061                           ;INI.c: 33:     LATC = 0;
  4062  000F0C  0E00               	movlw	0
  4063  000F0E  6E8B               	movwf	3979,c	;volatile
  4064                           
  4065                           ;INI.c: 34:     TRISA = 0x0C;
  4066  000F10  0E0C               	movlw	12
  4067  000F12  6E92               	movwf	3986,c	;volatile
  4068                           
  4069                           ;INI.c: 35:     TRISB = 0b10001000;
  4070  000F14  0E88               	movlw	136
  4071  000F16  6E93               	movwf	3987,c	;volatile
  4072                           
  4073                           ;INI.c: 36:     TRISC = 0xBF;
  4074  000F18  0EBF               	movlw	191
  4075  000F1A  6E94               	movwf	3988,c	;volatile
  4076                           
  4077                           ;INI.c: 37:     RCONbits.IPEN = 1;
  4078  000F1C  8ED0               	bsf	4048,7,c	;volatile
  4079                           
  4080                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  4081  000F1E  863D               	bsf	_DetectorLedRadar,3,c
  4082  000F20  0012               	return		;funcret
  4083  000F22                     __end_of_INI_OUTPUT:
  4084                           	opt callstack 0
  4085                           
  4086 ;; *************** function _INI_LED_Start *****************
  4087 ;; Defined at:
  4088 ;;		line 207 in file "LED.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;Total ram usage:        0 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    4
  4109 ;; This function calls:
  4110 ;;		_LED_Control
  4111 ;; This function is called by:
  4112 ;;		_INI_All
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text37
  4117  000DCE                     __ptext37:
  4118                           	opt callstack 0
  4119  000DCE                     _INI_LED_Start:
  4120                           	opt callstack 25
  4121                           
  4122                           ;LED.c: 209:     TRISA = TRISA & 0b00000001;
  4123                           
  4124                           ;incstack = 0
  4125  000DCE  5092               	movf	3986,w,c	;volatile
  4126  000DD0  0B01               	andlw	1
  4127  000DD2  6E92               	movwf	3986,c	;volatile
  4128                           
  4129                           ;LED.c: 210:     TRISB = TRISB & 0b11111100;
  4130  000DD4  5093               	movf	3987,w,c	;volatile
  4131  000DD6  0BFC               	andlw	252
  4132  000DD8  6E93               	movwf	3987,c	;volatile
  4133                           
  4134                           ;LED.c: 211:     TRISE = TRISE & 0b11111000;
  4135  000DDA  5096               	movf	3990,w,c	;volatile
  4136  000DDC  0BF8               	andlw	248
  4137  000DDE  6E96               	movwf	3990,c	;volatile
  4138                           
  4139                           ;LED.c: 212:     TRISD = TRISD & 0b00000000;
  4140  000DE0  0E00               	movlw	0
  4141  000DE2  6E95               	movwf	3989,c	;volatile
  4142                           
  4143                           ;LED.c: 213:     LED_Control(RED,0b0000000000);
  4144  000DE4  0E00               	movlw	0
  4145  000DE6  6E07               	movwf	LED_Control@diode+1,c
  4146  000DE8  0E00               	movlw	0
  4147  000DEA  6E06               	movwf	LED_Control@diode,c
  4148  000DEC  0E00               	movlw	0
  4149  000DEE  EC13  F003         	call	_LED_Control
  4150                           
  4151                           ;LED.c: 214:     LED_Control(GREEN,0b0000000000);
  4152  000DF2  0E00               	movlw	0
  4153  000DF4  6E07               	movwf	LED_Control@diode+1,c
  4154  000DF6  0E00               	movlw	0
  4155  000DF8  6E06               	movwf	LED_Control@diode,c
  4156  000DFA  0E01               	movlw	1
  4157  000DFC  EC13  F003         	call	_LED_Control
  4158  000E00  0012               	return		;funcret
  4159  000E02                     __end_of_INI_LED_Start:
  4160                           	opt callstack 0
  4161                           
  4162 ;; *************** function _LED_Control *****************
  4163 ;; Defined at:
  4164 ;;		line 232 in file "LED.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  color           1    wreg     enum E10641
  4167 ;;  diode           2    5[COMRAM] unsigned int 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  color           1    9[COMRAM] enum E10641
  4170 ;;  cos             2    0        unsigned int 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      unsigned char 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;Total ram usage:        5 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    3
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_LED_Error
  4191 ;;		_LED_Clear
  4192 ;;		_LED_Light_Pos
  4193 ;;		_INI_LED_Start
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text38
  4198  000626                     __ptext38:
  4199                           	opt callstack 0
  4200  000626                     _LED_Control:
  4201                           	opt callstack 24
  4202                           
  4203                           ;incstack = 0
  4204                           ;LED_Control@color stored from wreg
  4205  000626  6E0A               	movwf	LED_Control@color,c
  4206                           
  4207                           ;LED.c: 235:     if(color == RED)
  4208  000628  500A               	movf	LED_Control@color,w,c
  4209  00062A  A4D8               	btfss	status,2,c
  4210  00062C  D050               	goto	l299
  4211                           
  4212                           ;LED.c: 236:     {;LED.c: 238:         if((diode & 0b0000000001)== 0b0000000001)
  4213  00062E  A006               	btfss	LED_Control@diode,0,c
  4214  000630  D003               	goto	l2081
  4215                           
  4216                           ;LED.c: 239:         {;LED.c: 240:             LATD = LATD | ~0b11101111;
  4217  000632  508C               	movf	3980,w,c	;volatile
  4218  000634  0910               	iorlw	16
  4219  000636  D002               	goto	L3
  4220  000638                     l2081:
  4221                           
  4222                           ;LED.c: 243:         {;LED.c: 244:             LATD = LATD &0b11101111;
  4223  000638  508C               	movf	3980,w,c	;volatile
  4224  00063A  0BEF               	andlw	239
  4225  00063C                     L3:
  4226  00063C  6E8C               	movwf	3980,c	;volatile
  4227                           
  4228                           ;LED.c: 247:         if((diode & 0b0000000010) == 0b0000000010)
  4229  00063E  A206               	btfss	LED_Control@diode,1,c
  4230  000640  D003               	goto	l2087
  4231                           
  4232                           ;LED.c: 248:         {;LED.c: 249:             LATD = LATD | ~0b10111111;
  4233  000642  508C               	movf	3980,w,c	;volatile
  4234  000644  0940               	iorlw	64
  4235  000646  D002               	goto	L4
  4236  000648                     l2087:
  4237                           
  4238                           ;LED.c: 252:         {;LED.c: 253:             LATD = LATD & 0b10111111;
  4239  000648  508C               	movf	3980,w,c	;volatile
  4240  00064A  0BBF               	andlw	191
  4241  00064C                     L4:
  4242  00064C  6E8C               	movwf	3980,c	;volatile
  4243                           
  4244                           ;LED.c: 256:         if((diode & 0b0000000100) == 0b0000000100)
  4245  00064E  A406               	btfss	LED_Control@diode,2,c
  4246  000650  D003               	goto	l2093
  4247                           
  4248                           ;LED.c: 257:         {;LED.c: 258:             LATB = LATB | ~0b11111110;
  4249  000652  508A               	movf	3978,w,c	;volatile
  4250  000654  0901               	iorlw	1
  4251  000656  D002               	goto	L5
  4252  000658                     l2093:
  4253                           
  4254                           ;LED.c: 261:         {;LED.c: 262:             LATB = LATB & 0b11111110;
  4255  000658  508A               	movf	3978,w,c	;volatile
  4256  00065A  0BFE               	andlw	254
  4257  00065C                     L5:
  4258  00065C  6E8A               	movwf	3978,c	;volatile
  4259                           
  4260                           ;LED.c: 266:         if((diode & 0b0000001000) == 0b0000001000)
  4261  00065E  A606               	btfss	LED_Control@diode,3,c
  4262  000660  D003               	goto	l2099
  4263                           
  4264                           ;LED.c: 267:         {;LED.c: 268:             LATA = LATA | ~0b11111101;
  4265  000662  5089               	movf	3977,w,c	;volatile
  4266  000664  0902               	iorlw	2
  4267  000666  D002               	goto	L6
  4268  000668                     l2099:
  4269                           
  4270                           ;LED.c: 271:         {;LED.c: 272:             LATA = LATA & 0b11111101;
  4271  000668  5089               	movf	3977,w,c	;volatile
  4272  00066A  0BFD               	andlw	253
  4273  00066C                     L6:
  4274  00066C  6E89               	movwf	3977,c	;volatile
  4275                           
  4276                           ;LED.c: 276:         if((diode & 0b0000010000) == 0b0000010000)
  4277  00066E  A806               	btfss	LED_Control@diode,4,c
  4278  000670  D003               	goto	l2105
  4279                           
  4280                           ;LED.c: 277:         {;LED.c: 278:             LATA = LATA | ~0b11110111;
  4281  000672  5089               	movf	3977,w,c	;volatile
  4282  000674  0908               	iorlw	8
  4283  000676  D002               	goto	L7
  4284  000678                     l2105:
  4285                           
  4286                           ;LED.c: 281:         {;LED.c: 282:             LATA = LATA & 0b11110111;
  4287  000678  5089               	movf	3977,w,c	;volatile
  4288  00067A  0BF7               	andlw	247
  4289  00067C                     L7:
  4290  00067C  6E89               	movwf	3977,c	;volatile
  4291                           
  4292                           ;LED.c: 286:         if((diode & 0b0000100000) == 0b0000100000)
  4293  00067E  AA06               	btfss	LED_Control@diode,5,c
  4294  000680  D003               	goto	l2111
  4295                           
  4296                           ;LED.c: 287:         {;LED.c: 288:             LATA = LATA | ~0b11011111;
  4297  000682  5089               	movf	3977,w,c	;volatile
  4298  000684  0920               	iorlw	32
  4299  000686  D002               	goto	L8
  4300  000688                     l2111:
  4301                           
  4302                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA & 0b11011111;
  4303  000688  5089               	movf	3977,w,c	;volatile
  4304  00068A  0BDF               	andlw	223
  4305  00068C                     L8:
  4306  00068C  6E89               	movwf	3977,c	;volatile
  4307                           
  4308                           ;LED.c: 295:         if((diode & 0b0001000000) == 0b0001000000)
  4309  00068E  AC06               	btfss	LED_Control@diode,6,c
  4310  000690  D003               	goto	l2117
  4311                           
  4312                           ;LED.c: 296:         {;LED.c: 297:             LATE = LATE | ~0b11111101;
  4313  000692  508D               	movf	3981,w,c	;volatile
  4314  000694  0902               	iorlw	2
  4315  000696  D002               	goto	L9
  4316  000698                     l2117:
  4317                           
  4318                           ;LED.c: 300:         {;LED.c: 301:             LATE = LATE & 0b11111101;
  4319  000698  508D               	movf	3981,w,c	;volatile
  4320  00069A  0BFD               	andlw	253
  4321  00069C                     L9:
  4322  00069C  6E8D               	movwf	3981,c	;volatile
  4323                           
  4324                           ;LED.c: 304:         if((diode & 0b0010000000) == 0b0010000000)
  4325  00069E  AE06               	btfss	LED_Control@diode,7,c
  4326  0006A0  D003               	goto	l2123
  4327                           
  4328                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA | ~0b01111111;
  4329  0006A2  5089               	movf	3977,w,c	;volatile
  4330  0006A4  0980               	iorlw	128
  4331  0006A6  D002               	goto	L10
  4332  0006A8                     l2123:
  4333                           
  4334                           ;LED.c: 309:         {;LED.c: 310:             LATA = LATA & 0b01111111;
  4335  0006A8  5089               	movf	3977,w,c	;volatile
  4336  0006AA  0B7F               	andlw	127
  4337  0006AC                     L10:
  4338  0006AC  6E89               	movwf	3977,c	;volatile
  4339                           
  4340                           ;LED.c: 314:         if((diode & 0b0100000000) == 0b0100000000)
  4341  0006AE  A007               	btfss	LED_Control@diode+1,0,c
  4342  0006B0  D003               	goto	l2129
  4343                           
  4344                           ;LED.c: 315:         {;LED.c: 316:             LATD = LATD | ~0b11111110;
  4345  0006B2  508C               	movf	3980,w,c	;volatile
  4346  0006B4  0901               	iorlw	1
  4347  0006B6  D002               	goto	L11
  4348  0006B8                     l2129:
  4349                           
  4350                           ;LED.c: 319:         {;LED.c: 320:             LATD = LATD & 0b11111110;
  4351  0006B8  508C               	movf	3980,w,c	;volatile
  4352  0006BA  0BFE               	andlw	254
  4353  0006BC                     L11:
  4354  0006BC  6E8C               	movwf	3980,c	;volatile
  4355                           
  4356                           ;LED.c: 323:         if((diode & 0b1000000000) == 0b1000000000)
  4357  0006BE  A207               	btfss	LED_Control@diode+1,1,c
  4358  0006C0  D003               	goto	l2135
  4359                           
  4360                           ;LED.c: 324:         {;LED.c: 325:             LATD = LATD | ~0b11111011;
  4361  0006C2  508C               	movf	3980,w,c	;volatile
  4362  0006C4  0904               	iorlw	4
  4363  0006C6  D002               	goto	L12
  4364  0006C8                     l2135:
  4365                           
  4366                           ;LED.c: 328:         {;LED.c: 329:             LATD = LATD & 0b11111011;
  4367  0006C8  508C               	movf	3980,w,c	;volatile
  4368  0006CA  0BFB               	andlw	251
  4369  0006CC                     L12:
  4370  0006CC  6E8C               	movwf	3980,c	;volatile
  4371  0006CE                     l299:
  4372                           
  4373                           ;LED.c: 334:     if(color == GREEN)
  4374  0006CE  040A               	decf	LED_Control@color,w,c
  4375  0006D0  A4D8               	btfss	status,2,c
  4376  0006D2  0012               	return	
  4377                           
  4378                           ;LED.c: 335:     {;LED.c: 337:         if((diode & 0b0000000001) == 0b0000000001)
  4379  0006D4  A006               	btfss	LED_Control@diode,0,c
  4380  0006D6  D003               	goto	l2141
  4381                           
  4382                           ;LED.c: 338:         {;LED.c: 339:             LATD = LATD | ~0b11011111;
  4383  0006D8  508C               	movf	3980,w,c	;volatile
  4384  0006DA  0920               	iorlw	32
  4385  0006DC  D002               	goto	L13
  4386  0006DE                     l2141:
  4387                           
  4388                           ;LED.c: 342:         {;LED.c: 343:             LATD = LATD & 0b11011111;
  4389  0006DE  508C               	movf	3980,w,c	;volatile
  4390  0006E0  0BDF               	andlw	223
  4391  0006E2                     L13:
  4392  0006E2  6E8C               	movwf	3980,c	;volatile
  4393                           
  4394                           ;LED.c: 347:         if((diode & 0b0000000010) == 0b0000000010)
  4395  0006E4  A206               	btfss	LED_Control@diode,1,c
  4396  0006E6  D003               	goto	l2147
  4397                           
  4398                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b01111111;
  4399  0006E8  508C               	movf	3980,w,c	;volatile
  4400  0006EA  0980               	iorlw	128
  4401  0006EC  D002               	goto	L14
  4402  0006EE                     l2147:
  4403                           
  4404                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b01111111;
  4405  0006EE  508C               	movf	3980,w,c	;volatile
  4406  0006F0  0B7F               	andlw	127
  4407  0006F2                     L14:
  4408  0006F2  6E8C               	movwf	3980,c	;volatile
  4409                           
  4410                           ;LED.c: 357:         if((diode & 0b0000000100) == 0b0000000100)
  4411  0006F4  A406               	btfss	LED_Control@diode,2,c
  4412  0006F6  D003               	goto	l2153
  4413                           
  4414                           ;LED.c: 358:         {;LED.c: 359:             LATB = LATB | ~0b11111101;
  4415  0006F8  508A               	movf	3978,w,c	;volatile
  4416  0006FA  0902               	iorlw	2
  4417  0006FC  D002               	goto	L15
  4418  0006FE                     l2153:
  4419                           
  4420                           ;LED.c: 362:         {;LED.c: 363:             LATB = LATB & 0b11111101;
  4421  0006FE  508A               	movf	3978,w,c	;volatile
  4422  000700  0BFD               	andlw	253
  4423  000702                     L15:
  4424  000702  6E8A               	movwf	3978,c	;volatile
  4425                           
  4426                           ;LED.c: 366:         if((diode & 0b0000001000) == 0b0000001000)
  4427  000704  A606               	btfss	LED_Control@diode,3,c
  4428  000706  D003               	goto	l2159
  4429                           
  4430                           ;LED.c: 367:         {;LED.c: 368:             LATA = LATA | ~0b11111011;
  4431  000708  5089               	movf	3977,w,c	;volatile
  4432  00070A  0904               	iorlw	4
  4433  00070C  D002               	goto	L16
  4434  00070E                     l2159:
  4435                           
  4436                           ;LED.c: 371:         {;LED.c: 372:             LATA = LATA & 0b11111011;
  4437  00070E  5089               	movf	3977,w,c	;volatile
  4438  000710  0BFB               	andlw	251
  4439  000712                     L16:
  4440  000712  6E89               	movwf	3977,c	;volatile
  4441                           
  4442                           ;LED.c: 376:         if((diode & 0b0000010000) == 0b0000010000)
  4443  000714  A806               	btfss	LED_Control@diode,4,c
  4444  000716  D003               	goto	l2165
  4445                           
  4446                           ;LED.c: 377:         {;LED.c: 378:             LATA = LATA | ~0b11101111;
  4447  000718  5089               	movf	3977,w,c	;volatile
  4448  00071A  0910               	iorlw	16
  4449  00071C  D002               	goto	L17
  4450  00071E                     l2165:
  4451                           
  4452                           ;LED.c: 381:         {;LED.c: 382:             LATA = LATA & 0b11101111;
  4453  00071E  5089               	movf	3977,w,c	;volatile
  4454  000720  0BEF               	andlw	239
  4455  000722                     L17:
  4456  000722  6E89               	movwf	3977,c	;volatile
  4457                           
  4458                           ;LED.c: 386:         if((diode & 0b0000100000) == 0b0000100000)
  4459  000724  AA06               	btfss	LED_Control@diode,5,c
  4460  000726  D003               	goto	l2171
  4461                           
  4462                           ;LED.c: 387:         {;LED.c: 388:             LATE = LATE | ~0b11111110;
  4463  000728  508D               	movf	3981,w,c	;volatile
  4464  00072A  0901               	iorlw	1
  4465  00072C  D002               	goto	L18
  4466  00072E                     l2171:
  4467                           
  4468                           ;LED.c: 391:         {;LED.c: 392:             LATE = LATE & 0b11111110;
  4469  00072E  508D               	movf	3981,w,c	;volatile
  4470  000730  0BFE               	andlw	254
  4471  000732                     L18:
  4472  000732  6E8D               	movwf	3981,c	;volatile
  4473                           
  4474                           ;LED.c: 396:         if((diode & 0b0001000000) == 0b0001000000)
  4475  000734  AC06               	btfss	LED_Control@diode,6,c
  4476  000736  D003               	goto	l2177
  4477                           
  4478                           ;LED.c: 397:         {;LED.c: 398:             LATE = LATE | ~0b11111011;
  4479  000738  508D               	movf	3981,w,c	;volatile
  4480  00073A  0904               	iorlw	4
  4481  00073C  D002               	goto	L19
  4482  00073E                     l2177:
  4483                           
  4484                           ;LED.c: 401:         {;LED.c: 402:             LATE = LATE & 0b11111011;
  4485  00073E  508D               	movf	3981,w,c	;volatile
  4486  000740  0BFB               	andlw	251
  4487  000742                     L19:
  4488  000742  6E8D               	movwf	3981,c	;volatile
  4489                           
  4490                           ;LED.c: 405:         if((diode & 0b0010000000) == 0b0010000000)
  4491  000744  AE06               	btfss	LED_Control@diode,7,c
  4492  000746  D003               	goto	l2183
  4493                           
  4494                           ;LED.c: 406:         {;LED.c: 407:             LATA = LATA | ~0b10111111;
  4495  000748  5089               	movf	3977,w,c	;volatile
  4496  00074A  0940               	iorlw	64
  4497  00074C  D002               	goto	L20
  4498  00074E                     l2183:
  4499                           
  4500                           ;LED.c: 410:         {;LED.c: 411:             LATA = LATA & 0b10111111;
  4501  00074E  5089               	movf	3977,w,c	;volatile
  4502  000750  0BBF               	andlw	191
  4503  000752                     L20:
  4504  000752  6E89               	movwf	3977,c	;volatile
  4505                           
  4506                           ;LED.c: 414:         if((diode & 0b0100000000) == 0b0100000000)
  4507  000754  A007               	btfss	LED_Control@diode+1,0,c
  4508  000756  D003               	goto	l2189
  4509                           
  4510                           ;LED.c: 415:         {;LED.c: 416:             LATD = LATD | ~0b11111101;
  4511  000758  508C               	movf	3980,w,c	;volatile
  4512  00075A  0902               	iorlw	2
  4513  00075C  D002               	goto	L21
  4514  00075E                     l2189:
  4515                           
  4516                           ;LED.c: 419:         {;LED.c: 420:             LATD = LATD & 0b11111101;
  4517  00075E  508C               	movf	3980,w,c	;volatile
  4518  000760  0BFD               	andlw	253
  4519  000762                     L21:
  4520  000762  6E8C               	movwf	3980,c	;volatile
  4521                           
  4522                           ;LED.c: 423:         if((diode & 0b1000000000) == 0b1000000000)
  4523  000764  A207               	btfss	LED_Control@diode+1,1,c
  4524  000766  D004               	goto	l2195
  4525                           
  4526                           ;LED.c: 424:         {;LED.c: 425:             LATD = LATD | ~0b11110111;
  4527  000768  508C               	movf	3980,w,c	;volatile
  4528  00076A  0908               	iorlw	8
  4529  00076C  6E8C               	movwf	3980,c	;volatile
  4530                           
  4531                           ;LED.c: 426:         }
  4532  00076E  0012               	return	
  4533  000770                     l2195:
  4534                           
  4535                           ;LED.c: 428:         {;LED.c: 429:             LATD = LATD &0b11110111;
  4536  000770  508C               	movf	3980,w,c	;volatile
  4537  000772  0BF7               	andlw	247
  4538  000774  6E8C               	movwf	3980,c	;volatile
  4539  000776  0012               	return		;funcret
  4540  000778                     __end_of_LED_Control:
  4541                           	opt callstack 0
  4542                           
  4543 ;; *************** function _INI_GlobalInterrupt *****************
  4544 ;; Defined at:
  4545 ;;		line 74 in file "INI.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		None
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;Total ram usage:        0 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    3
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_INI_All
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text39
  4574  000F54                     __ptext39:
  4575                           	opt callstack 0
  4576  000F54                     _INI_GlobalInterrupt:
  4577                           	opt callstack 26
  4578                           
  4579                           ;INI.c: 76: INTCONbits.GIEH=1;
  4580                           
  4581                           ;incstack = 0
  4582  000F54  8EF2               	bsf	4082,7,c	;volatile
  4583                           
  4584                           ;INI.c: 77: INTCONbits.GIEL=1;
  4585  000F56  8CF2               	bsf	4082,6,c	;volatile
  4586                           
  4587                           ;INI.c: 78: RCONbits.IPEN=1;
  4588  000F58  8ED0               	bsf	4048,7,c	;volatile
  4589                           
  4590                           ;INI.c: 79: IPEN =1;
  4591  000F5A  8ED0               	bsf	4048,7,c	;volatile
  4592                           
  4593                           ;INI.c: 81: PEIE=1;
  4594  000F5C  8CF2               	bsf	4082,6,c	;volatile
  4595                           
  4596                           ;INI.c: 82: TMR1IP = 0;
  4597  000F5E  909F               	bcf	3999,0,c	;volatile
  4598  000F60  0012               	return		;funcret
  4599  000F62                     __end_of_INI_GlobalInterrupt:
  4600                           	opt callstack 0
  4601                           
  4602 ;; *************** function _CAN_Setup *****************
  4603 ;; Defined at:
  4604 ;;		line 22 in file "CAN.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;		None
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;Total ram usage:        1 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    4
  4625 ;; This function calls:
  4626 ;;		_CAN_SetupClock
  4627 ;;		_CAN_SetupMask
  4628 ;; This function is called by:
  4629 ;;		_INI_All
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text40
  4634  000A22                     __ptext40:
  4635                           	opt callstack 0
  4636  000A22                     _CAN_Setup:
  4637                           	opt callstack 25
  4638                           
  4639                           ;CAN.c: 27:     CANCON = 0x80;
  4640                           
  4641                           ;incstack = 0
  4642  000A22  0E80               	movlw	128
  4643  000A24  6E6F               	movwf	3951,c	;volatile
  4644  000A26                     l2467:
  4645                           
  4646                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4647  000A26  506E               	movf	3950,w,c	;volatile
  4648  000A28  0BE0               	andlw	224
  4649  000A2A  0A80               	xorlw	128
  4650  000A2C  A4D8               	btfss	status,2,c
  4651  000A2E  D7FB               	goto	l2467
  4652                           
  4653                           ;CAN.c: 33:     BSEL0 = 0;
  4654  000A30  0E00               	movlw	0
  4655  000A32  010D               	movlb	13	; () banked
  4656  000A34  6FF8               	movwf	248,b	;volatile
  4657                           
  4658                           ;CAN.c: 34:     TXB0CON = 0;
  4659  000A36  0E00               	movlw	0
  4660  000A38  010F               	movlb	15	; () banked
  4661  000A3A  6F40               	movwf	64,b	;volatile
  4662                           
  4663                           ;CAN.c: 35:     RXB0CON = 0;
  4664  000A3C  0E00               	movlw	0
  4665  000A3E  6E60               	movwf	3936,c	;volatile
  4666                           
  4667                           ;CAN.c: 36:     RXB1CON = 0;
  4668  000A40  0E00               	movlw	0
  4669  000A42  6F50               	movwf	80,b	;volatile
  4670                           
  4671                           ;CAN.c: 37:     B0CON = 0;
  4672  000A44  0E00               	movlw	0
  4673  000A46  010E               	movlb	14	; () banked
  4674  000A48  6F20               	movwf	32,b	;volatile
  4675                           
  4676                           ;CAN.c: 38:     B1CON = 0;
  4677  000A4A  0E00               	movlw	0
  4678  000A4C  6F30               	movwf	48,b	;volatile
  4679                           
  4680                           ;CAN.c: 39:     PIE3 = 0;
  4681  000A4E  0E00               	movlw	0
  4682  000A50  6EA3               	movwf	4003,c	;volatile
  4683                           
  4684                           ; BSR set to: 14
  4685                           ;CAN.c: 40:     IPR3 = 0xFF;
  4686  000A52  68A5               	setf	4005,c	;volatile
  4687                           
  4688                           ;CAN.c: 41:     PIR3 = 0x00;
  4689  000A54  0E00               	movlw	0
  4690  000A56  6EA4               	movwf	4004,c	;volatile
  4691                           
  4692                           ;CAN.c: 42:     BIE0 = 0;
  4693  000A58  0E00               	movlw	0
  4694  000A5A  010D               	movlb	13	; () banked
  4695  000A5C  6FFA               	movwf	250,b	;volatile
  4696                           
  4697                           ;CAN.c: 45:     ECANCON = 0x90;
  4698  000A5E  0E90               	movlw	144
  4699  000A60  6E77               	movwf	3959,c	;volatile
  4700                           
  4701                           ; BSR set to: 13
  4702                           ;CAN.c: 48:     CAN_SetupClock();
  4703  000A62  EC2D  F007         	call	_CAN_SetupClock	;wreg free
  4704                           
  4705                           ;CAN.c: 51:     CAN_SetupMask();
  4706  000A66  ECA8  F004         	call	_CAN_SetupMask	;wreg free
  4707                           
  4708                           ;CAN.c: 53:     CIOCON = 0xff;
  4709  000A6A  6873               	setf	3955,c	;volatile
  4710                           
  4711                           ;CAN.c: 59:     CANCON = 0x00;
  4712  000A6C  0E00               	movlw	0
  4713  000A6E  6E6F               	movwf	3951,c	;volatile
  4714  000A70                     l2481:
  4715                           
  4716                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4717  000A70  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4718  000A74  0EE0               	movlw	224
  4719  000A76  1606               	andwf	??_CAN_Setup,f,c
  4720  000A78  B4D8               	btfsc	status,2,c
  4721  000A7A  0012               	return	
  4722  000A7C  D7F9               	goto	l2481
  4723  000A7E                     __end_of_CAN_Setup:
  4724                           	opt callstack 0
  4725                           
  4726 ;; *************** function _CAN_SetupMask *****************
  4727 ;; Defined at:
  4728 ;;		line 81 in file "CAN.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    3
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_CAN_Setup
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text41
  4757  000950                     __ptext41:
  4758                           	opt callstack 0
  4759  000950                     _CAN_SetupMask:
  4760                           	opt callstack 25
  4761                           
  4762                           ;CAN.c: 83:     MSEL0 = 0x50;
  4763                           
  4764                           ;incstack = 0
  4765  000950  0E50               	movlw	80
  4766  000952  010D               	movlb	13	; () banked
  4767  000954  6FF0               	movwf	240,b	;volatile
  4768                           
  4769                           ;CAN.c: 84:     MSEL1 = 0x55;
  4770  000956  0E55               	movlw	85
  4771  000958  6FF1               	movwf	241,b	;volatile
  4772                           
  4773                           ;CAN.c: 85:     MSEL2 = 0x55;
  4774  00095A  0E55               	movlw	85
  4775  00095C  6FF2               	movwf	242,b	;volatile
  4776                           
  4777                           ;CAN.c: 86:     MSEL3 = 0x55;
  4778  00095E  0E55               	movlw	85
  4779  000960  6FF3               	movwf	243,b	;volatile
  4780                           
  4781                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4782  000962  0E00               	movlw	0
  4783  000964  010F               	movlb	15	; () banked
  4784  000966  6F18               	movwf	24,b	;volatile
  4785                           
  4786                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4787  000968  0E0B               	movlw	11
  4788  00096A  6F19               	movwf	25,b	;volatile
  4789                           
  4790                           ; BSR set to: 15
  4791                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4792  00096C  691A               	setf	26,b	;volatile
  4793                           
  4794                           ; BSR set to: 15
  4795                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4796  00096E  691B               	setf	27,b	;volatile
  4797                           
  4798                           ; BSR set to: 15
  4799                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4800  000970  691C               	setf	28,b	;volatile
  4801                           
  4802                           ; BSR set to: 15
  4803                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4804  000972  691D               	setf	29,b	;volatile
  4805                           
  4806                           ;CAN.c: 97:     RXM1EIDH = 0;
  4807  000974  0E00               	movlw	0
  4808  000976  6F1E               	movwf	30,b	;volatile
  4809                           
  4810                           ;CAN.c: 98:     RXM1EIDL = 0;
  4811  000978  0E00               	movlw	0
  4812  00097A  6F1F               	movwf	31,b	;volatile
  4813                           
  4814                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4815  00097C  0E00               	movlw	0
  4816  00097E  6F00               	movwf	0,b	;volatile
  4817                           
  4818                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4819  000980  0E01               	movlw	1
  4820  000982  6F01               	movwf	1,b	;volatile
  4821                           
  4822                           ; BSR set to: 15
  4823                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4824  000984  8701               	bsf	1,3,b	;volatile
  4825                           
  4826                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4827  000986  503A               	movf	_DaneCan+3,w,c
  4828  000988  6F02               	movwf	2,b	;volatile
  4829                           
  4830                           ; BSR set to: 15
  4831                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4832  00098A  8D02               	bsf	2,6,b	;volatile
  4833                           
  4834                           ; BSR set to: 15
  4835                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4836  00098C  C039  FF03         	movff	_DaneCan+2,3843	;volatile
  4837                           
  4838                           ; BSR set to: 15
  4839                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4840  000990  0E00               	movlw	0
  4841  000992  6F04               	movwf	4,b	;volatile
  4842                           
  4843                           ; BSR set to: 15
  4844                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4845  000994  0E01               	movlw	1
  4846  000996  6F05               	movwf	5,b	;volatile
  4847                           
  4848                           ; BSR set to: 15
  4849                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4850  000998  8705               	bsf	5,3,b	;volatile
  4851                           
  4852                           ; BSR set to: 15
  4853                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4854  00099A  0E7F               	movlw	127
  4855  00099C  6F06               	movwf	6,b	;volatile
  4856                           
  4857                           ; BSR set to: 15
  4858                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4859  00099E  6907               	setf	7,b	;volatile
  4860                           
  4861                           ; BSR set to: 15
  4862                           ;CAN.c: 115:     RXF2SIDH = 0;
  4863  0009A0  0E00               	movlw	0
  4864  0009A2  6F08               	movwf	8,b	;volatile
  4865                           
  4866                           ; BSR set to: 15
  4867                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4868  0009A4  0E20               	movlw	32
  4869  0009A6  6F09               	movwf	9,b	;volatile
  4870                           
  4871                           ; BSR set to: 15
  4872                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4873  0009A8  8709               	bsf	9,3,b	;volatile
  4874                           
  4875                           ; BSR set to: 15
  4876                           ;CAN.c: 118:     RXF2EIDH = 0;
  4877  0009AA  0E00               	movlw	0
  4878  0009AC  6F0A               	movwf	10,b	;volatile
  4879                           
  4880                           ; BSR set to: 15
  4881                           ;CAN.c: 119:     RXF2EIDL = 0;
  4882  0009AE  0E00               	movlw	0
  4883  0009B0  6F0B               	movwf	11,b	;volatile
  4884                           
  4885                           ; BSR set to: 15
  4886                           ;CAN.c: 127:     RXFCON0 = 0x07;
  4887  0009B2  0E07               	movlw	7
  4888  0009B4  010D               	movlb	13	; () banked
  4889  0009B6  6FD4               	movwf	212,b	;volatile
  4890                           
  4891                           ; BSR set to: 13
  4892  0009B8  0012               	return		;funcret
  4893  0009BA                     __end_of_CAN_SetupMask:
  4894                           	opt callstack 0
  4895                           
  4896 ;; *************** function _CAN_SetupClock *****************
  4897 ;; Defined at:
  4898 ;;		line 136 in file "CAN.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		None
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;Total ram usage:        0 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    3
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_CAN_Setup
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text42
  4927  000E5A                     __ptext42:
  4928                           	opt callstack 0
  4929  000E5A                     _CAN_SetupClock:
  4930                           	opt callstack 25
  4931                           
  4932                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4933                           
  4934                           ; BSR set to: 13
  4935                           ;incstack = 0
  4936  000E5A  8070               	bsf	3952,0,c	;volatile
  4937                           
  4938                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4939  000E5C  8270               	bsf	3952,1,c	;volatile
  4940                           
  4941                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4942  000E5E  9470               	bcf	3952,2,c	;volatile
  4943                           
  4944                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4945  000E60  9670               	bcf	3952,3,c	;volatile
  4946                           
  4947                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4948  000E62  9870               	bcf	3952,4,c	;volatile
  4949                           
  4950                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4951  000E64  9A70               	bcf	3952,5,c	;volatile
  4952                           
  4953                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4954  000E66  8C70               	bsf	3952,6,c	;volatile
  4955                           
  4956                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4957  000E68  8E70               	bsf	3952,7,c	;volatile
  4958                           
  4959                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4960  000E6A  8671               	bsf	3953,3,c	;volatile
  4961                           
  4962                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4963  000E6C  8871               	bsf	3953,4,c	;volatile
  4964                           
  4965                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4966  000E6E  8A71               	bsf	3953,5,c	;volatile
  4967                           
  4968                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4969  000E70  8471               	bsf	3953,2,c	;volatile
  4970                           
  4971                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4972  000E72  9271               	bcf	3953,1,c	;volatile
  4973                           
  4974                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4975  000E74  9071               	bcf	3953,0,c	;volatile
  4976                           
  4977                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4978  000E76  8072               	bsf	3954,0,c	;volatile
  4979                           
  4980                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4981  000E78  9272               	bcf	3954,1,c	;volatile
  4982                           
  4983                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  4984  000E7A  8472               	bsf	3954,2,c	;volatile
  4985                           
  4986                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  4987  000E7C  8C71               	bsf	3953,6,c	;volatile
  4988                           
  4989                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  4990  000E7E  8E71               	bsf	3953,7,c	;volatile
  4991  000E80  0012               	return		;funcret
  4992  000E82                     __end_of_CAN_SetupClock:
  4993                           	opt callstack 0
  4994                           
  4995 ;; *************** function _ISR_low *****************
  4996 ;; Defined at:
  4997 ;;		line 16 in file "ISR.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;Total ram usage:        3 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    2
  5018 ;; This function calls:
  5019 ;;		_TMR1_Timer_reset
  5020 ;;		i1_TMR1_Update_flag_Set
  5021 ;; This function is called by:
  5022 ;;		Interrupt level 1
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	intcodelo
  5027  000018                     __pintcodelo:
  5028                           	opt callstack 0
  5029  000018                     _ISR_low:
  5030                           	opt callstack 24
  5031                           
  5032                           ;incstack = 0
  5033  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5034  00001A  CFD8 F003          	movff	status,??_ISR_low
  5035  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  5036  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  5037                           
  5038                           ;ISR.c: 21:     if(TMR1IF==1)
  5039  000026  A09E               	btfss	3998,0,c	;volatile
  5040  000028  D011               	goto	i1l541
  5041                           
  5042                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  5043  00002A  EC41  F007         	call	_TMR1_Timer_reset	;wreg free
  5044                           
  5045                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  5046  00002E  0E00               	movlw	0
  5047  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  5048  000032  0E01               	movlw	1
  5049  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  5050  000036  ECCF  F007         	call	i1_TMR1_Update_flag_Set	;wreg free
  5051                           
  5052                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  5053  00003A  803D               	bsf	_DetectorLedRadar,0,c
  5054                           
  5055                           ;ISR.c: 33:             if(++ramkaStanuU8 > (5*10))
  5056  00003C  2A41               	incf	ISR_low@ramkaStanuU8,f,c
  5057  00003E  0E32               	movlw	50
  5058  000040  6441               	cpfsgt	ISR_low@ramkaStanuU8,c
  5059  000042  D003               	goto	i1l2747
  5060                           
  5061                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  5062  000044  0E00               	movlw	0
  5063  000046  6E41               	movwf	ISR_low@ramkaStanuU8,c
  5064                           
  5065                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  5066  000048  8037               	bsf	_DaneCan,0,c
  5067  00004A                     i1l2747:
  5068                           
  5069                           ;ISR.c: 41:             TMR1IF=0;
  5070  00004A  909E               	bcf	3998,0,c	;volatile
  5071  00004C                     i1l541:
  5072  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  5073  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  5074  000054  C003  FFD8         	movff	??_ISR_low,status
  5075  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5076  00005A  0010               	retfie	
  5077  00005C                     __end_of_ISR_low:
  5078                           	opt callstack 0
  5079                           
  5080 ;; *************** function i1_TMR1_Update_flag_Set *****************
  5081 ;; Defined at:
  5082 ;;		line 32 in file "TMR1.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  a               2    0[COMRAM] unsigned int 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		None
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;Total ram usage:        2 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_ISR_low
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text44
  5111  000F9E                     __ptext44:
  5112                           	opt callstack 0
  5113  000F9E                     i1_TMR1_Update_flag_Set:
  5114                           	opt callstack 24
  5115                           
  5116                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5117                           
  5118                           ;incstack = 0
  5119  000F9E  C001  F03B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5120  000FA2  C002  F03C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5121  000FA6  0012               	return		;funcret
  5122  000FA8                     __end_ofi1_TMR1_Update_flag_Set:
  5123                           	opt callstack 0
  5124                           
  5125 ;; *************** function _TMR1_Timer_reset *****************
  5126 ;; Defined at:
  5127 ;;		line 63 in file "TMR1.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  5132 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      unsigned char 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;Total ram usage:        2 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:    1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_ISR_low
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text45
  5157  000E82                     __ptext45:
  5158                           	opt callstack 0
  5159  000E82                     _TMR1_Timer_reset:
  5160                           	opt callstack 24
  5161                           
  5162                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  5163                           
  5164                           ;incstack = 0
  5165  000E82  0E00               	movlw	0
  5166  000E84  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  5167  000E86  0E00               	movlw	0
  5168  000E88  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  5169                           
  5170                           ;TMR1.c: 70:     t1L = TMR1L;
  5171  000E8A  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  5172                           
  5173                           ;TMR1.c: 71:     t1H = TMR1H;
  5174  000E8E  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  5175                           
  5176                           ;TMR1.c: 72:     __nop();
  5177  000E92  F000               	nop	
  5178                           
  5179                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5180  000E94  0E9E               	movlw	158
  5181  000E96  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  5182                           
  5183                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5184  000E98  0E57               	movlw	87
  5185  000E9A  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  5186                           
  5187                           ;TMR1.c: 75:     TMR1H = t1H;
  5188  000E9C  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  5189                           
  5190                           ;TMR1.c: 76:     TMR1L = 0x5B;
  5191  000EA0  0E5B               	movlw	91
  5192  000EA2  6ECE               	movwf	4046,c	;volatile
  5193  000EA4  0012               	return		;funcret
  5194  000EA6                     __end_of_TMR1_Timer_reset:
  5195                           	opt callstack 0
  5196                           
  5197 ;; *************** function _ISR_high *****************
  5198 ;; Defined at:
  5199 ;;		line 53 in file "ISR.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		None
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;Total ram usage:        0 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		Interrupt level 2
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	intcode
  5227  000008                     __pintcode:
  5228                           	opt callstack 0
  5229  000008                     _ISR_high:
  5230                           	opt callstack 24
  5231                           
  5232                           ;incstack = 0
  5233  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5234  00000A  EDDC  F007         	call	int_func,f	;refresh shadow registers
  5235                           
  5236                           	psect	intcode_body
  5237  000FB8                     __pintcode_body:
  5238                           	opt callstack 24
  5239  000FB8                     int_func:
  5240                           	opt callstack 24
  5241  000FB8  0006               	pop		; remove dummy address from shadow register refresh
  5242  000FBA  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5243  000FBC  0011               	retfie		f
  5244  000FBE                     __end_of_ISR_high:
  5245                           	opt callstack 0
  5246  0000                     
  5247                           	psect	rparam
  5248  0000                     
  5249                           	psect	temp
  5250  00004A                     btemp:
  5251                           	opt callstack 0
  5252  00004A                     	ds	1
  5253  0000                     int$flags	set	btemp
  5254  0000                     wtemp8	set	btemp+1
  5255  0000                     ttemp5	set	btemp+1
  5256  0000                     ttemp6	set	btemp+4
  5257  0000                     ttemp7	set	btemp+8
  5258                           tosu	equ	0xFFF
  5259                           tosh	equ	0xFFE
  5260                           tosl	equ	0xFFD
  5261                           stkptr	equ	0xFFC
  5262                           pclatu	equ	0xFFB
  5263                           pclath	equ	0xFFA
  5264                           pcl	equ	0xFF9
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           indf0	equ	0xFEF
  5272                           postinc0	equ	0xFEE
  5273                           postdec0	equ	0xFED
  5274                           preinc0	equ	0xFEC
  5275                           plusw0	equ	0xFEB
  5276                           fsr0h	equ	0xFEA
  5277                           fsr0l	equ	0xFE9
  5278                           wreg	equ	0xFE8
  5279                           indf1	equ	0xFE7
  5280                           postinc1	equ	0xFE6
  5281                           postdec1	equ	0xFE5
  5282                           preinc1	equ	0xFE4
  5283                           plusw1	equ	0xFE3
  5284                           fsr1h	equ	0xFE2
  5285                           fsr1l	equ	0xFE1
  5286                           bsr	equ	0xFE0
  5287                           indf2	equ	0xFDF
  5288                           postinc2	equ	0xFDE
  5289                           postdec2	equ	0xFDD
  5290                           preinc2	equ	0xFDC
  5291                           plusw2	equ	0xFDB
  5292                           fsr2h	equ	0xFDA
  5293                           fsr2l	equ	0xFD9
  5294                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      73
    BANK0           160      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _LED_Error->_LED_Control
    _LED_Clear->_LED_Control
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_StanWzbudzenia
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14240
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    9045
                                             20 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    7136
                                             15 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Clear
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _LED_Clear                                            0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     279
                                              7 COMRAM     3     1      2
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
                 _MOC_StanWzbudzenia
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_StanWzbudzenia                                   2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     213
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                              6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     316
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    3787
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    3059
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     368
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1206
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1206
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1206
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
       _FRAME_SensorExcitationStatus
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_StanWzbudzenia
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Clear
         _LED_Control
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      55       5       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      49       1       77.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      20        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 18:36:58 2019

              __end_of_FRAME_DeviceReset 0AD6                    ?_FRAME_AveragingTimes 0006  
                           ___awdiv@sign 000B                                       bsr 000FE0  
                            __CFG_BORV$3 000000                        ?_FRAME_AxisStatus 0006  
                      _FRAME_MapPosition 0FC0                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                       __size_of_CAN_GenID 0068  
                                    l190 0080                                      l191 0086  
                                    l192 008C                                      l193 0092  
                                    l177 04D4                                      l194 0098  
                                    l186 006E                                      l178 04D2  
                                    l187 00DE                                      l188 0074  
                                    l189 007A                              ?_LED_Update 0001  
                                    l299 06CE                                      l475 04A2  
                           __CFG_CPB$OFF 000000                       ??_FRAME_AxisStatus 0008  
                           __CFG_CPD$OFF 000000                                      u965 0542  
                     ?_FRAME_MapPosition 0006                       __size_of_CAN_Setup 005C  
                           ?_LED_Control 0006                                      wreg 000FE8  
                  __end_of_CAN_TakeFrame 02DC                              ?_INI_OUTPUT 0001  
                 __size_of_INI_LED_Start 0034                    __end_of_CAN_SendFrame 0626  
                           __CFG_LVP$OFF 000000                TRM_DataTransmition@weWyU8 0040  
           __size_of_INI_GlobalInterrupt 000E                      ??_FRAME_MapPosition 0008  
                           __CFG_WDT$OFF 000000                                     l2111 0688  
                                   l2105 0678                                     l1081 0BCA  
                                   l2123 06A8                                     l2141 06DE  
                                   l2117 0698                                     l2135 06C8  
                                   l2153 06FE                                     l2129 06B8  
                                   l2081 0638                                     l2321 0C56  
                                   l2171 072E                                     l2147 06EE  
                                   l2067 0E34                                     l2165 071E  
                                   l2093 0658                                     l2421 090E  
                                   l2413 08F0                                     l2183 074E  
                                   l2159 070E                                     l2087 0648  
                                   l2431 092E                                     l2407 08E0  
                                   l2511 01CC                                     l2503 01B0  
                                   l2177 073E                                     l2337 0CE2  
                                   l2513 01D4                                     l2505 01B6  
                                   l2521 01EC                                     l2195 0770  
                                   l2099 0668                          __end_of_INI_All 0F3C  
                                   l2451 0BA0                                     l2419 0906  
                                   l2435 0938                                     l2531 025C  
                                   l2515 01DC                                     l2507 01BC  
                                   l2523 022C                                     l2189 075E  
                                   l2461 0BC0                                     l2541 0280  
                                   l2533 0262                                     l2517 01E4  
                                   l2509 01C4                                     l2293 056C  
                                   l2621 033C                                     l2613 0304  
                                   l2439 0946                                     l2543 0288  
                                   l2535 0268                                     l2551 02D8  
                                   l2527 0230                                     l2631 0382  
                                   l2623 034A                                     l2615 0312  
                                   l2481 0A70                                     l2449 0B98  
                                   l2545 0290                                     l2537 0270  
                                   l2529 024A                                     l2297 0620  
                                   l2377 0C00                                     l2633 0390  
                                   l2625 0358                                     l2617 0320  
                                   l2641 0428                                     l2721 0E08  
                                   l2467 0A26                                     l2539 0278  
                                   l2395 0AB4                                     l2635 03AA  
                                   l2627 0366                                     l2619 032E  
                                   l2731 0E28                                     l2549 0298  
                                   l2653 04AE                                     l2629 0374  
                                   l2591 07E4                                     l2583 07AE  
                                   l2487 009E                                     l2655 04B2  
                                   l2639 03C4                                     l2691 0B00  
                                   l2589 07DA                                     l2597 0810  
                                   _BIE0 000DFA                        _MOC_Frame_Counter 0F76  
                                   u1110 0912                                     u1040 0C10  
                                   u1205 0148                                     u1150 0BA4  
                                   u1320 0B1E                                     u1250 0818  
                                   _LATA 000F89                                     _LATB 000F8A  
                                   _LATC 000F8B                                     _LATD 000F8C  
                                   _LATE 000F8D                                     _IPR3 000FA5  
                                   _IPEN 007E87                                     _PIE3 000FA3  
                                   _PEIE 007F96                                     _PIR3 000FA4  
                                   _RCON 000FD0              ??_FRAME_AccelerometerStatus 0008  
                        __end_of_ISR_low 005C                         LED_Control@diode 0006  
                   FRAME_AnalogValue@set 0008                       ?_MOC_Frame_Counter 0006  
                                   _main 0E02                         LED_Control@color 000A  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004A  
                         _CAN_SetupClock 0E5A                       __size_of_LED_Clear 001E  
                                   prodl 000FF3                    __end_of_CAN_SetupMask 09BA  
          __size_of_TMR1_Update_flag_Get 000A                                     start 005C  
          __size_of_TMR1_Update_flag_Set 000A                       __size_of_LED_Error 001E  
                          __CFG_IESO$OFF 000000                       _MOC_StanWzbudzenia 0F6C  
                     __size_of_LED_Right 004C            __size_of_FRAME_HandleCanFrame 01DC  
                          _LED_Light_Pos 0778                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000                      ??_MOC_Frame_Counter 0008  
             ??_MOC_Aktualna_Temperatura 0008        FRAME_HandleCanFrame@identyfikator 0014  
                     __size_of_INI_Timer 0018                __end_of_FRAME_MapPosition 0FC2  
                    ?_MOC_StanWzbudzenia 0006                         __end_of_LED_Left 0CF6  
                                  _B0CON 000E20                                    _B1CON 000E30  
                                  _B2CON 000E40                                    _B3CON 000E50  
                                  _B4CON 000E60                                    _B5CON 000E70  
                                  ?_main 0001                          __end_of___awdiv 0950  
                                  _BSEL0 000DF8                          ___awdiv@divisor 0008  
                                  _T1CON 000FCD                                    _IRCF0 007E9C  
                                  _IRCF1 007E9D        FRAME_ExcitationMultiplier@message 0006  
                                  _IRCF2 007E9E                          __end_of___lwdiv 0BD4  
                                  i1l541 004C                      __size_of_FRAME_Plot 0022  
                        ___awdiv@counter 000A                                    _MSEL0 000DF0  
                                  _MSEL1 000DF1                                    _MSEL2 000DF2  
                                  _MSEL3 000DF3                                    _TMR1H 000FCF  
                                  _TMR1L 000FCE                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                          __CFG_PWRT$OFF 000000                   ?_CAN_MoveBuffIntoFrame 0006  
                          __CFG_WRT0$OFF 000000               __size_of_FRAME_AnalogValue 0002  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                       __end_of_ISR_high 0FBE                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
              __end_of_MOC_Frame_Counter 0F80                           __CFG_EBTRB$OFF 000000  
                i1TMR1_Update_flag_Set@a 0001                             ?_MOC_NOTWORK 0006  
                   ??_MOC_StanWzbudzenia 0008                                    tablat 000FF5  
                 __end_of_CAN_SetupClock 0E82                                    ttemp5 004B  
                                  ttemp6 004E                                    ttemp7 0052  
                                  status 000FD8                                    wtemp8 004B  
                      __end_of_CAN_GenID 0A22                           __CFG_PBADEN$ON 000000  
                    __size_of_LED_Update 0056                           ?_LED_Light_Pos 000D  
                       _TMR1_Timer_reset 0E82                        __end_of_CAN_Setup 0A7E  
                          _INI_LED_Start 0DCE                    _FRAME_ExcitationValue 0CF6  
       FRAME_AccelerometerStatus@message 0006                          __initialization 0C6E  
                    __size_of_INI_OUTPUT 001E                         CAN_GenID@frameID 0008  
                           __end_of_main 0E30                   ??_FRAME_AveragingTimes 0008  
             __size_of_FRAME_DeviceReset 0058                 ?_FRAME_AdressOfNeighbors 0006  
                       CAN_GenID@message 0006                _FRAME_AccelerometerStatus 0D98  
                                 ??_main 0026                   CAN_MoveBuffIntoFrame@i 000A  
                          __activetblptr 000002                         _TMR1_Update_flag 003B  
                      __end_of_LED_Clear 0F04                                ??_INI_All 000B  
                      __end_of_LED_Error 0EE6                        __end_of_LED_Right 0C6E  
                              ??_ISR_low 0003                                   _CANCON 000F6F  
                       ___awdiv@dividend 0006              FRAME_ExcitationMultiplier@i 0009  
                                 _CIOCON 000F73                          __CFG_BBSIZ$1024 000000  
                      __end_of_INI_Timer 0F54                                   i1l2747 004A  
                        ?_CAN_SetupClock 0001                                   _RXB0D0 000F66  
                                 _TMR1IE 007CE8                                   _TMR1IF 007CF0  
                                 _TMR1IP 007CF8                                   _TMR1ON 007E68  
           ??_FRAME_ExcitationMultiplier 0008                           ?_INI_LED_Start 0001  
                         __CFG_XINST$OFF 000000                                ??___awdiv 000A  
                         __CFG_STVREN$ON 000000                         LED_Light_Pos@pos 000D  
             __size_of_FRAME_MapPosition 0002                                ??___lwdiv 000A  
                                 clear_0 0C94                                   clear_1 0CA0  
                       ___awdiv@quotient 000C                 ??i1_TMR1_Update_flag_Set 0003  
                        __CFG_BOREN$BOHW 000000                             __pdataCOMRAM 0043  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8      __size_of_FRAME_ExcitationMultiplier 004E  
             __size_of_MOC_Frame_Counter 000A                     __size_of_LED_Control 0152  
               FRAME_MapPosition@message 0006                    TMR1_Update_flag_Set@a 0006  
                             __accesstop 0060                  __end_of__initialization 0CA6  
                           ??_FRAME_Plot 0008                      ISR_low@ramkaStanuU8 0041  
                              ?_LED_Left 0006                          ??_LED_Light_Pos 0011  
                          ___rparam_used 000001                   ?_FRAME_ExcitationValue 0006  
        __end_of_FRAME_AdressOfNeighbors 0FC6                           __pcstackCOMRAM 0001  
                              LED_Left@a 0006                                LED_Left@b 0008  
                    _INI_GlobalInterrupt 0F54                                ?_ISR_high 0001  
                           ??_LED_Update 0018              __end_of_TRM_DataTransmition 0B2C  
                  _FRAME_SoftwareVersion 0FBE                       __end_of_FRAME_Plot 0EC8  
                           ??_INI_OUTPUT 0006                  FRAME_AxisStatus@message 0006  
                   ?_INI_GlobalInterrupt 0001                __size_of_FRAME_AxisStatus 0036  
                             __pbssBANK0 0060                     __size_of_MOC_NOTWORK 0008  
                        ??_INI_LED_Start 000B                               ??_LED_Left 0008  
                     __end_of_LED_Update 0B82                       __end_of_INI_OUTPUT 0F22  
                             ??_ISR_high 0001                      TMR1_Timer_reset@t1H 0002  
                    TMR1_Timer_reset@t1L 0001                                  _ECANCON 000F77  
                                _CANSTAT 000F6E                  ??_CAN_MoveBuffIntoFrame 000A  
           __end_of_TMR1_Update_flag_Get 0F9E             __end_of_TMR1_Update_flag_Set 0F94  
        __size_ofi1_TMR1_Update_flag_Set 000A             __end_of_FRAME_HandleCanFrame 04B8  
                                _INI_All 0F22                 __end_of_TMR1_Timer_reset 0EA6  
                                _RXB0DLC 000F65                                  _RXB0CON 000F60  
                                _RXB1CON 000F50                    ??_INI_GlobalInterrupt 0006  
                                _TXB0CON 000F40                                  _ISR_low 0018  
                                _RXFCON0 000DD4                                  _DaneCan 0037  
     __end_of_FRAME_ExcitationMultiplier 0C22               _FRAME_ExcitationMultiplier 0BD4  
            FRAME_HandleCanFrame@message 0010                                  __Hparam 0000  
       ??_MOC_Wynikowa_wartosc_roznicowa 0008          ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                __Lparam 0000                   __size_of_CAN_TakeFrame 027C  
                              _CAN_GenID 09BA                                  ___awdiv 08CC  
                              _CAN_Setup 0A22                   __size_of_CAN_SendFrame 016E  
                                ___lwdiv 0B82                        LED_Light_Pos@pos2 0014  
                                __pcinit 0C6E                                  __ramtop 0D00  
                                __ptext0 0E02                                  __ptext1 0AD6  
                                __ptext2 02DC                                  __ptext3 0EC8  
                                __ptext4 0EE6                                  __ptext5 0FBE  
                                __ptext6 0828                                  __ptext7 0F62  
                                __ptext8 0F6C                                  __ptext9 0FA8  
                 ?_FRAME_SoftwareVersion 0006                   __size_of_CAN_SetupMask 006A  
      __size_of_MOC_Aktualna_Temperatura 000A           FRAME_AdressOfNeighbors@nrRamki 0008  
              ?_MOC_Aktualna_Temperatura 0006         __size_of_FRAME_AdressOfNeighbors 0002  
                       ??_CAN_SetupClock 0006           FRAME_AdressOfNeighbors@message 0006  
                              _LED_Clear 0EE6                                _LED_Error 0EC8  
                         __pintcode_body 0FB8                                _LED_Right 0C22  
                   end_of_initialization 0CA6              __size_of_MOC_StanWzbudzenia 000A  
                          __Lmediumconst 0000                                  int_func 0FB8  
                              _INI_Timer 0F3C                   i1_TMR1_Update_flag_Set 0F9E  
       TRM_DataTransmition@czujnikWeWyU8 003F                               ?_CAN_GenID 0006  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                             ?_CAN_Setup 0001            __size_of_FRAME_AveragingTimes 0036  
                   CAN_SendFrame@message 000B                            LED_Update@Red 0042  
                          _CAN_TakeFrame 0060                               ?_LED_Clear 0001  
                          _CAN_SendFrame 04B8                               ?_LED_Error 0001  
                             ?_LED_Right 0006                         _FRAME_AxisStatus 0D2C  
                ??_FRAME_ExcitationValue 0008                               ?_INI_Timer 0001  
                        _ramkaCanRxKarty 0060                     _TMR1_Update_flag_Get 0F94  
                        _ramkaCanTxKarty 0026                     _TMR1_Update_flag_Set 0F8A  
                          _CAN_SetupMask 0950                        __size_of_LED_Left 0042  
                   _FRAME_HandleCanFrame 02DC                           CAN_TakeFrame@k 0013  
                          __pidataCOMRAM 0FB0                        __size_of_ISR_high 0FB6  
                             LED_Right@a 0006                               LED_Right@b 000A  
                          ??_LED_Control 0008                      start_initialization 0C6E  
                         ?_CAN_TakeFrame 000E                           ?_CAN_SendFrame 000B  
                       __CFG_OSC$IRCIO67 000000                    ?_TMR1_Update_flag_Get 0006  
                  ?_TMR1_Update_flag_Set 0006                           ?_CAN_SetupMask 0001  
                  __end_of_LED_Light_Pos 0828                    ?_FRAME_HandleCanFrame 0010  
                            ??_CAN_GenID 0009                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                 CAN_MoveBuffIntoFrame@Buf 0008  
   __end_of_FRAME_SensorExcitationStatus 08CC    __size_of_FRAME_SensorExcitationStatus 00A4  
               CAN_MoveBuffIntoFrame@Ram 0006             _FRAME_SensorExcitationStatus 0828  
         __size_of_CAN_MoveBuffIntoFrame 002A            __end_of_CAN_MoveBuffIntoFrame 0E5A  
                        _Fulfillment_Lvl 0047                              __pbssCOMRAM 0026  
                               ?_INI_All 0001                  _FRAME_AdressOfNeighbors 0FC4  
                      ?_TMR1_Timer_reset 0001                              _BRGCON1bits 000F70  
                            _BRGCON2bits 000F71                              _BRGCON3bits 000F72  
                               ?_ISR_low 0001                              ??_LED_Clear 000B  
                          ??_MOC_NOTWORK 0008                       ??_TMR1_Timer_reset 0001  
                            ??_LED_Error 000B                              ??_LED_Right 0008  
           __size_of_TRM_DataTransmition 0056                      __end_of_LED_Control 0778  
            ?_FRAME_ExcitationMultiplier 0006                              ??_INI_Timer 0006  
                  __end_of_INI_LED_Start 0E02                         ___lwdiv@dividend 0006  
                              __pintcode 0008                                 ?___awdiv 0006  
                ??_FRAME_SoftwareVersion 0008         __end_of_MOC_Aktualna_Temperatura 0F8A  
                               ?___lwdiv 0006                        FRAME_Plot@message 0006  
                            __pintcodelo 0018              __end_of_INI_GlobalInterrupt 0F62  
                        ??_CAN_TakeFrame 0010            ?_FRAME_SensorExcitationStatus 0008  
 __end_of_MOC_Wynikowa_wartosc_roznicowa 0F6C  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
         _MOC_Wynikowa_wartosc_roznicowa 0F62                              _COMSTATbits 000F74  
                        ??_CAN_SendFrame 000D                         ___lwdiv@quotient 000A  
                ?i1_TMR1_Update_flag_Set 0001              FRAME_AveragingTimes@message 0006  
                 ??_TMR1_Update_flag_Get 0008                   ??_TMR1_Update_flag_Set 0008  
                        ??_CAN_SetupMask 0006                                 _LED_Left 0CB4  
                 ??_FRAME_HandleCanFrame 0012                     CAN_TakeFrame@message 000E  
                    __end_of_MOC_NOTWORK 0FB0                     CAN_TakeFrame@tempCON 0012  
                               _RXB0EIDH 000F63                                 _RXB0EIDL 000F64  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                               _RXB0SIDH 000F61                                 _RXB0SIDL 000F62  
                               _RXF0EIDH 000F02                                 _RXF0EIDL 000F03  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXF2EIDH 000F0A                                 _RXF2EIDL 000F0B  
                               _RXF0SIDH 000F00                                 _RXF0SIDL 000F01  
                               _RXF1SIDH 000F04                                 _RXF1SIDL 000F05  
                               _RXF2SIDH 000F08                                 _RXF2SIDL 000F09  
                               _ISR_high 0008                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                                 _RXM1EIDH 000F1E  
                               _RXM1EIDL 000F1F                                 _RXM0SIDH 000F18  
                               _RXM0SIDL 000F19                                 _RXM1SIDH 000F1C  
                               _RXM1SIDL 000F1D                 __end_of_FRAME_AxisStatus 0D62  
              ??_FRAME_AdressOfNeighbors 000A                         _DetectorLedRadar 003D  
                            _LED_Control 0626                         __size_of_INI_All 001A  
           FRAME_ExcitationValue@message 0006               __end_of_MOC_StanWzbudzenia 0F76  
         __end_ofi1_TMR1_Update_flag_Set 0FA8                                copy_data0 0C82  
                       __size_of_ISR_low 0044       __size_of_FRAME_AccelerometerStatus 0036  
           __end_of_FRAME_AveragingTimes 0D98               ?_FRAME_AccelerometerStatus 0006  
         __size_of_FRAME_ExcitationValue 0036            __end_of_FRAME_ExcitationValue 0D2C  
                               __Hrparam 0000                             _RXB0SIDLbits 000F62  
                               __Lrparam 0000                         __size_of___awdiv 0084  
                       __size_of___lwdiv 0052                 _MOC_Aktualna_Temperatura 0F80  
                     LED_Light_Pos@flage 0016                       LED_Light_Pos@color 0011  
                           _RXF0SIDLbits 000F01                 FRAME_AnalogValue@message 0006  
                        ___lwdiv@divisor 0008                             _RXF1SIDLbits 000F05  
                        ___lwdiv@counter 000C                                 __ptext10 0F76  
                               __ptext11 0F80                                 __ptext20 0FC4  
                               __ptext12 0EA6                                 __ptext21 0D98  
                               __ptext13 0FC0                                 __ptext30 0778  
                               __ptext22 04B8                                 __ptext14 0CF6  
                               __ptext31 0B82                                 __ptext23 09BA  
                               __ptext15 0BD4                                 __ptext40 0A22  
                               __ptext32 0C22                                 __ptext24 0060  
                               __ptext16 0A7E                                 __ptext41 0950  
                               __ptext33 0CB4                                 __ptext25 08CC  
                               __ptext17 0D2C                                 __ptext42 0E5A  
                               __ptext34 0F22                                 __ptext26 0E30  
                               __ptext18 0D62                                 __ptext35 0F3C  
                               __ptext27 0F8A                                 __ptext19 0FC2  
                               __ptext44 0F9E                                 __ptext36 0F04  
                               __ptext28 0F94           ??_FRAME_SensorExcitationStatus 000A  
                               __ptext45 0E82                                 __ptext37 0DCE  
                               __ptext29 0B2C                                 __ptext38 0626  
                               __ptext39 0F54            TRM_DataTransmition@canMessage 0015  
                           _RXF2SIDLbits 000F09                              _MOC_NOTWORK 0FA8  
               FRAME_DeviceReset@message 0006        __end_of_FRAME_AccelerometerStatus 0DCE  
                             _FRAME_Plot 0EA6                            __size_of_main 002E  
                __size_of_CAN_SetupClock 0028                                 int$flags 004A  
                    _TRM_DataTransmition 0AD6                              _RXB0DLCbits 000F65  
                             _LED_Update 0B2C                              _RXB0CONbits 000F60  
                             _INTCONbits 000FF2                               _INI_OUTPUT 0F04  
                      _FRAME_AnalogValue 0FC2                     ?_TRM_DataTransmition 0001  
           FRAME_SoftwareVersion@message 0006                                 intlevel1 0000  
                               intlevel2 0000                       ?_FRAME_AnalogValue 0006  
    FRAME_SensorExcitationStatus@message 0008                              _TXB0CONbits 000F40  
                    ??_FRAME_AnalogValue 000A                __size_of_TMR1_Timer_reset 0024  
               LED_Light_Pos@fulfillment 000F                     _FRAME_AveragingTimes 0D62  
         __size_of_FRAME_SoftwareVersion 0002                        _FRAME_DeviceReset 0A7E  
          __end_of_FRAME_SoftwareVersion 0FC0                       ?_FRAME_DeviceReset 0006  
                        LED_Update@Green 0049                __end_of_FRAME_AnalogValue 0FC4  
                 __size_of_LED_Light_Pos 00B0                    _CAN_MoveBuffIntoFrame 0E30  
                             _WDTCONbits 000FD1                      ??_FRAME_DeviceReset 0008  
                  ??_TRM_DataTransmition 0015                   LED_Light_Pos@LED_array 0012  
                         LED_Update@pos1 0045                           LED_Update@pos2 0043  
                            ?_FRAME_Plot 0006  
