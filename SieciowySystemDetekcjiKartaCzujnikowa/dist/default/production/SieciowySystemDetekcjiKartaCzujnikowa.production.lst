

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 31 13:54:00 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4680 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  001B16                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for MOC_Frame_Counter@zeta
   122  001B16  0011               	dw	17
   123                           
   124                           ;initializer for LED_Update@pos2
   125  001B18  0001               	dw	1
   126                           
   127                           ;initializer for LED_Update@pos1
   128  001B1A  0001               	dw	1
   129                           
   130                           ;initializer for _Fulfillment_Lvl
   131  001B1C  0014               	dw	20
   132                           
   133                           ;initializer for LED_Update@Green
   134  001B1E  01                 	db	1
   135                           
   136                           ;initializer for _Init_Data
   137  001B1F  FFFF               	dw	65535
   138                           
   139                           ;initializer for _NeightAdress2
   140  001B21  012A               	dw	298
   141  0000                     _RXF9EIDL	set	3443
   142  0000                     _RXF9EIDH	set	3442
   143  0000                     _RXF9SIDLbits	set	3441
   144  0000                     _RXF9SIDL	set	3441
   145  0000                     _RXF9SIDH	set	3440
   146  0000                     _RXF8EIDL	set	3435
   147  0000                     _RXF8EIDH	set	3434
   148  0000                     _RXF8SIDLbits	set	3433
   149  0000                     _RXF8SIDL	set	3433
   150  0000                     _RXF8SIDH	set	3432
   151  0000                     _RXF7EIDL	set	3431
   152  0000                     _RXF7EIDH	set	3430
   153  0000                     _RXF7SIDLbits	set	3429
   154  0000                     _RXF7SIDL	set	3429
   155  0000                     _RXF7SIDH	set	3428
   156  0000                     _RXF6EIDL	set	3427
   157  0000                     _RXF6EIDH	set	3426
   158  0000                     _RXF6SIDLbits	set	3425
   159  0000                     _RXF6SIDL	set	3425
   160  0000                     _RXF6SIDH	set	3424
   161  0000                     _RXFCON1	set	3541
   162  0000                     _RXFCON0	set	3540
   163  0000                     _RXFBCON4	set	3556
   164  0000                     _RXFBCON3	set	3555
   165  0000                     _RXFBCON2	set	3554
   166  0000                     _RXFBCON1	set	3553
   167  0000                     _RXFBCON0	set	3552
   168  0000                     _MSEL3	set	3571
   169  0000                     _MSEL2	set	3570
   170  0000                     _MSEL1	set	3569
   171  0000                     _MSEL0	set	3568
   172  0000                     _BIE0	set	3578
   173  0000                     _BSEL0	set	3576
   174  0000                     _B5CON	set	3696
   175  0000                     _B4CON	set	3680
   176  0000                     _B3CON	set	3664
   177  0000                     _B2CON	set	3648
   178  0000                     _B1CON	set	3632
   179  0000                     _B0CON	set	3616
   180  0000                     _TXB0CONbits	set	3904
   181  0000                     _RXF5EIDL	set	3863
   182  0000                     _RXF5EIDH	set	3862
   183  0000                     _RXF5SIDLbits	set	3861
   184  0000                     _RXF5SIDL	set	3861
   185  0000                     _RXF5SIDH	set	3860
   186  0000                     _RXF4EIDL	set	3859
   187  0000                     _RXF4EIDH	set	3858
   188  0000                     _RXF4SIDLbits	set	3857
   189  0000                     _RXF4SIDL	set	3857
   190  0000                     _RXF4SIDH	set	3856
   191  0000                     _RXF3EIDL	set	3855
   192  0000                     _RXF3EIDH	set	3854
   193  0000                     _RXF3SIDLbits	set	3853
   194  0000                     _RXF3SIDL	set	3853
   195  0000                     _RXF3SIDH	set	3852
   196  0000                     _RXF2EIDL	set	3851
   197  0000                     _RXF2EIDH	set	3850
   198  0000                     _RXF2SIDLbits	set	3849
   199  0000                     _RXF2SIDL	set	3849
   200  0000                     _RXF2SIDH	set	3848
   201  0000                     _RXF1EIDL	set	3847
   202  0000                     _RXF1EIDH	set	3846
   203  0000                     _RXF1SIDLbits	set	3845
   204  0000                     _RXF1SIDL	set	3845
   205  0000                     _RXF1SIDH	set	3844
   206  0000                     _RXF0EIDL	set	3843
   207  0000                     _RXF0EIDH	set	3842
   208  0000                     _RXF0SIDLbits	set	3841
   209  0000                     _RXF0SIDL	set	3841
   210  0000                     _RXF0SIDH	set	3840
   211  0000                     _RXM1EIDL	set	3871
   212  0000                     _RXM1EIDH	set	3870
   213  0000                     _RXM1SIDL	set	3869
   214  0000                     _RXM1SIDH	set	3868
   215  0000                     _RXM0EIDL	set	3867
   216  0000                     _RXM0EIDH	set	3866
   217  0000                     _RXM0SIDL	set	3865
   218  0000                     _RXM0SIDH	set	3864
   219  0000                     _RXB1CON	set	3920
   220  0000                     _TXB0CON	set	3904
   221  0000                     _TBLPTR	set	4086
   222  0000                     _TABLAT	set	4085
   223  0000                     _EECON2	set	4007
   224  0000                     _EEDATA	set	4008
   225  0000                     _EECON1bits	set	4006
   226  0000                     _EEADR	set	4009
   227  0000                     _EEADRH	set	4010
   228  0000                     _INTCONbits	set	4082
   229  0000                     _WDTCONbits	set	4049
   230  0000                     _RCONbits	set	4048
   231  0000                     _TRISC	set	3988
   232  0000                     _LATC	set	3979
   233  0000                     _T1CON	set	4045
   234  0000                     _TMR1H	set	4047
   235  0000                     _TMR1L	set	4046
   236  0000                     _LATE	set	3981
   237  0000                     _LATA	set	3977
   238  0000                     _LATB	set	3978
   239  0000                     _LATD	set	3980
   240  0000                     _TRISD	set	3989
   241  0000                     _TRISE	set	3990
   242  0000                     _TRISB	set	3987
   243  0000                     _TRISA	set	3986
   244  0000                     _RXB0DLCbits	set	3941
   245  0000                     _RXB0DLC	set	3941
   246  0000                     _RXB0SIDH	set	3937
   247  0000                     _RXB0SIDLbits	set	3938
   248  0000                     _RXB0SIDL	set	3938
   249  0000                     _RXB0EIDH	set	3939
   250  0000                     _RXB0EIDL	set	3940
   251  0000                     _COMSTATbits	set	3956
   252  0000                     _RXB0CONbits	set	3936
   253  0000                     _BRGCON3bits	set	3954
   254  0000                     _BRGCON2bits	set	3953
   255  0000                     _BRGCON1bits	set	3952
   256  0000                     _CIOCON	set	3955
   257  0000                     _ECANCON	set	3959
   258  0000                     _PIR3	set	4004
   259  0000                     _IPR3	set	4005
   260  0000                     _PIE3	set	4003
   261  0000                     _RXB0CON	set	3936
   262  0000                     _CANSTAT	set	3950
   263  0000                     _CANCON	set	3951
   264  0000                     _RCON	set	4048
   265  0000                     _RXB0D0	set	3942
   266  0000                     _TMR1IF	set	31984
   267  0000                     _TMR1IP	set	31992
   268  0000                     _PEIE	set	32662
   269  0000                     _IPEN	set	32391
   270  0000                     _TMR1ON	set	32360
   271  0000                     _TMR1IE	set	31976
   272  0000                     _IRCF0	set	32412
   273  0000                     _IRCF1	set	32413
   274  0000                     _IRCF2	set	32414
   275                           
   276                           ; #config settings
   277  0000                     
   278                           	psect	cinit
   279  00157C                     __pcinit:
   280                           	opt callstack 0
   281  00157C                     start_initialization:
   282                           	opt callstack 0
   283  00157C                     __initialization:
   284                           	opt callstack 0
   285                           
   286                           ; Initialize objects allocated to COMRAM (13 bytes)
   287                           ; load TBLPTR registers with __pidataCOMRAM
   288  00157C  0E16               	movlw	low __pidataCOMRAM
   289  00157E  6EF6               	movwf	tblptrl,c
   290  001580  0E1B               	movlw	high __pidataCOMRAM
   291  001582  6EF7               	movwf	tblptrh,c
   292  001584  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   293  001586  6EF8               	movwf	tblptru,c
   294  001588  EE00  F04D         	lfsr	0,__pdataCOMRAM
   295  00158C  EE10 F00D          	lfsr	1,13
   296  001590                     copy_data0:
   297  001590  0009               	tblrd		*+
   298  001592  CFF5 FFEE          	movff	tablat,postinc0
   299  001596  50E5               	movf	postdec1,w,c
   300  001598  50E1               	movf	fsr1l,w,c
   301  00159A  E1FA               	bnz	copy_data0
   302                           
   303                           ; Clear objects allocated to BIGRAM (544 bytes)
   304  00159C  EE00  F0D4         	lfsr	0,__pbssBIGRAM
   305  0015A0  EE12 F020          	lfsr	1,544
   306  0015A4                     clear_0:
   307  0015A4  6AEE               	clrf	postinc0,c
   308  0015A6  50E5               	movf	postdec1,w,c
   309  0015A8  50E1               	movf	fsr1l,w,c
   310  0015AA  E1FC               	bnz	clear_0
   311  0015AC  50E2               	movf	fsr1h,w,c
   312  0015AE  E1FA               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to BANK0 (114 bytes)
   315  0015B0  EE00  F060         	lfsr	0,__pbssBANK0
   316  0015B4  0E72               	movlw	114
   317  0015B6                     clear_1:
   318  0015B6  6AEE               	clrf	postinc0,c
   319  0015B8  06E8               	decf	wreg,f,c
   320  0015BA  E1FD               	bnz	clear_1
   321                           
   322                           ; Clear objects allocated to COMRAM (34 bytes)
   323  0015BC  EE00  F02B         	lfsr	0,__pbssCOMRAM
   324  0015C0  0E22               	movlw	34
   325  0015C2                     clear_2:
   326  0015C2  6AEE               	clrf	postinc0,c
   327  0015C4  06E8               	decf	wreg,f,c
   328  0015C6  E1FD               	bnz	clear_2
   329  0015C8                     end_of_initialization:
   330                           	opt callstack 0
   331  0015C8                     __end_of__initialization:
   332                           	opt callstack 0
   333  0015C8  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   334  0015CA  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   335  0015CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   336  0015CE  6EF8               	movwf	tblptru,c
   337  0015D0  0100               	movlb	0
   338  0015D2  EF70  F009         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMRAM
   341  00002B                     __pbssCOMRAM:
   342                           	opt callstack 0
   343  00002B                     _DaneCan:
   344                           	opt callstack 0
   345  00002B                     	ds	4
   346  00002F                     _nextEEPosition:
   347                           	opt callstack 0
   348  00002F                     	ds	2
   349  000031                     FRAME_SensorExcitationStatus@statwect:
   350                           	opt callstack 0
   351  000031                     	ds	2
   352  000033                     _TMR1_Update_flag:
   353                           	opt callstack 0
   354  000033                     	ds	2
   355  000035                     WritetoEEPROM@GIE_Status:
   356                           	opt callstack 0
   357  000035                     	ds	1
   358  000036                     	ds	1
   359  000037                     	ds	1
   360  000038                     ISR_low@ramkaStanuU8:
   361                           	opt callstack 0
   362  000038                     	ds	1
   363  000039                     	ds	1
   364  00003A                     _LOCK:
   365                           	opt callstack 0
   366  00003A                     	ds	1
   367  00003B                     _neighborsAdress:
   368                           	opt callstack 0
   369  00003B                     	ds	2
   370  00003D                     _ustawieniaKarty:
   371                           	opt callstack 0
   372  00003D                     	ds	2
   373  00003F                     _NeightAdress8:
   374                           	opt callstack 0
   375  00003F                     	ds	2
   376  000041                     _NeightAdress7:
   377                           	opt callstack 0
   378  000041                     	ds	2
   379  000043                     _NeightAdress6:
   380                           	opt callstack 0
   381  000043                     	ds	2
   382  000045                     _NeightAdress5:
   383                           	opt callstack 0
   384  000045                     	ds	2
   385  000047                     _NeightAdress4:
   386                           	opt callstack 0
   387  000047                     	ds	2
   388  000049                     _NeightAdress3:
   389                           	opt callstack 0
   390  000049                     	ds	2
   391  00004B                     _NeightAdress1:
   392                           	opt callstack 0
   393  00004B                     	ds	2
   394                           
   395                           	psect	dataCOMRAM
   396  00004D                     __pdataCOMRAM:
   397                           	opt callstack 0
   398  00004D                     MOC_Frame_Counter@zeta:
   399                           	opt callstack 0
   400  00004D                     	ds	2
   401  00004F                     LED_Update@pos2:
   402                           	opt callstack 0
   403  00004F                     	ds	2
   404  000051                     LED_Update@pos1:
   405                           	opt callstack 0
   406  000051                     	ds	2
   407  000053                     _Fulfillment_Lvl:
   408                           	opt callstack 0
   409  000053                     	ds	2
   410  000055                     LED_Update@Green:
   411                           	opt callstack 0
   412  000055                     	ds	1
   413  000056                     _Init_Data:
   414                           	opt callstack 0
   415  000056                     	ds	2
   416  000058                     _NeightAdress2:
   417                           	opt callstack 0
   418  000058                     	ds	2
   419                           
   420                           	psect	bssBANK0
   421  000060                     __pbssBANK0:
   422                           	opt callstack 0
   423  000060                     _ramkaCanRxKarty:
   424                           	opt callstack 0
   425  000060                     	ds	85
   426  0000B5                     _ramkaCanTxKarty:
   427                           	opt callstack 0
   428  0000B5                     	ds	17
   429  0000C6                     _Flagi:
   430                           	opt callstack 0
   431  0000C6                     	ds	5
   432  0000CB                     _DetectorLedRadar:
   433                           	opt callstack 0
   434  0000CB                     	ds	3
   435  0000CE                     _czujnikiNaMapie:
   436                           	opt callstack 0
   437  0000CE                     	ds	2
   438  0000D0                     _Dane:
   439                           	opt callstack 0
   440  0000D0                     	ds	2
   441                           
   442                           	psect	bssBIGRAM
   443  0000D4                     __pbssBIGRAM:
   444                           	opt callstack 0
   445  0000D4                     _wartosciSasiada:
   446                           	opt callstack 0
   447  0000D4                     	ds	544
   448                           
   449                           	psect	cstackBANK0
   450  0000D2                     __pcstackBANK0:
   451                           	opt callstack 0
   452  0000D2                     main@adr:
   453                           	opt callstack 0
   454                           
   455                           ; 2 bytes @ 0x0
   456  0000D2                     	ds	2
   457                           
   458                           	psect	cstackCOMRAM
   459  000001                     __pcstackCOMRAM:
   460                           	opt callstack 0
   461  000001                     TMR1_Timer_reset@t1L:
   462                           	opt callstack 0
   463  000001                     i1TMR1_Update_flag_Set@a:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x0
   467  000001                     	ds	1
   468  000002                     TMR1_Timer_reset@t1H:
   469                           	opt callstack 0
   470                           
   471                           ; 1 bytes @ 0x1
   472  000002                     	ds	1
   473  000003                     ??_ISR_low:
   474  000003                     
   475                           ; 1 bytes @ 0x2
   476  000003                     	ds	3
   477  000006                     ??_CAN_Setup:
   478  000006                     ?_FLASH_Read:
   479                           	opt callstack 0
   480  000006                     ?_TMR1_Update_flag_Get:
   481                           	opt callstack 0
   482  000006                     ?_LED_Right:
   483                           	opt callstack 0
   484  000006                     ?_LED_Left:
   485                           	opt callstack 0
   486  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   487                           	opt callstack 0
   488  000006                     ?_MOC_Frame_Counter:
   489                           	opt callstack 0
   490  000006                     ?_MOC_Aktualna_Temperatura:
   491                           	opt callstack 0
   492  000006                     ?_MOC_NOTWORK:
   493                           	opt callstack 0
   494  000006                     ?_IsInNeighbors:
   495                           	opt callstack 0
   496  000006                     ?_MOCK_PrzyspieszenieX:
   497                           	opt callstack 0
   498  000006                     ?_MOCK_PrzyspieszenieY:
   499                           	opt callstack 0
   500  000006                     ?_MOCK_PrzyspieszenieZ:
   501                           	opt callstack 0
   502  000006                     ?_MOCK_Klikniecie_Spadek:
   503                           	opt callstack 0
   504  000006                     ?___awdiv:
   505                           	opt callstack 0
   506  000006                     ?___lwdiv:
   507                           	opt callstack 0
   508  000006                     LOCK_Set@k:
   509                           	opt callstack 0
   510  000006                     CAN_MoveBuffIntoFrame@Ram:
   511                           	opt callstack 0
   512  000006                     CAN_GenID@message:
   513                           	opt callstack 0
   514  000006                     LED_Right@a:
   515                           	opt callstack 0
   516  000006                     LED_Left@a:
   517                           	opt callstack 0
   518  000006                     LED_Control@diode:
   519                           	opt callstack 0
   520  000006                     TMR1_Update_flag_Set@a:
   521                           	opt callstack 0
   522  000006                     IsInNeighbors@message_adress:
   523                           	opt callstack 0
   524  000006                     FRAME_ExcitationValue@message:
   525                           	opt callstack 0
   526  000006                     FRAME_ExcitationMultiplier@message:
   527                           	opt callstack 0
   528  000006                     FRAME_AveragingTimes@message:
   529                           	opt callstack 0
   530  000006                     FRAME_AxisStatus@message:
   531                           	opt callstack 0
   532  000006                     FRAME_DataUpdateAndChangeOption@message:
   533                           	opt callstack 0
   534  000006                     FRAME_MapPosition@message:
   535                           	opt callstack 0
   536  000006                     FRAME_SoftwareVersion@message:
   537                           	opt callstack 0
   538  000006                     FRAME_AnalogValue@message:
   539                           	opt callstack 0
   540  000006                     FRAME_PrzypisanieDokarty@message:
   541                           	opt callstack 0
   542  000006                     FRAME_AdressOfNeighbors@message:
   543                           	opt callstack 0
   544  000006                     NVMalloc@size:
   545                           	opt callstack 0
   546  000006                     ReadfromEEPROM@Address:
   547                           	opt callstack 0
   548  000006                     WritetoEEPROM@Address:
   549                           	opt callstack 0
   550  000006                     ___awdiv@dividend:
   551                           	opt callstack 0
   552  000006                     ___lwdiv@dividend:
   553                           	opt callstack 0
   554  000006                     FLASH_Read@addr:
   555                           	opt callstack 0
   556                           
   557                           ; 4 bytes @ 0x5
   558  000006                     	ds	2
   559  000008                     ??_LED_Right:
   560  000008                     ??_FRAME_DataUpdateAndChangeOption:
   561  000008                     ??_FRAME_PrzypisanieDokarty:
   562  000008                     CAN_GenID@frameID:
   563                           	opt callstack 0
   564  000008                     WritetoEEPROM@Data:
   565                           	opt callstack 0
   566  000008                     CAN_MoveBuffIntoFrame@Buf:
   567                           	opt callstack 0
   568  000008                     LED_Left@b:
   569                           	opt callstack 0
   570  000008                     FRAME_SensorExcitationStatus@message:
   571                           	opt callstack 0
   572  000008                     FRAME_AccelerometerStatus@message:
   573                           	opt callstack 0
   574  000008                     FRAME_AnalogValue@set:
   575                           	opt callstack 0
   576  000008                     FRAME_AdressOfNeighbors@nrRamki:
   577                           	opt callstack 0
   578  000008                     NVMalloc@location:
   579                           	opt callstack 0
   580  000008                     NVMRead@dest:
   581                           	opt callstack 0
   582  000008                     ___awdiv@divisor:
   583                           	opt callstack 0
   584  000008                     ___lwdiv@divisor:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x7
   588  000008                     	ds	1
   589  000009                     ??_CAN_GenID:
   590  000009                     FRAME_ExcitationMultiplier@i:
   591                           	opt callstack 0
   592  000009                     NVMWrite@source:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x8
   596  000009                     	ds	1
   597  00000A                     ??_FRAME_SensorExcitationStatus:
   598  00000A                     ??_FRAME_AdressOfNeighbors:
   599  00000A                     ??_NVMalloc:
   600  00000A                     CAN_MoveBuffIntoFrame@i:
   601                           	opt callstack 0
   602  00000A                     LED_Control@color:
   603                           	opt callstack 0
   604  00000A                     ___awdiv@counter:
   605                           	opt callstack 0
   606  00000A                     ___lwdiv@counter:
   607                           	opt callstack 0
   608  00000A                     LED_Right@b:
   609                           	opt callstack 0
   610  00000A                     NVMRead@addr:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x9
   614  00000A                     	ds	1
   615  00000B                     ___awdiv@sign:
   616                           	opt callstack 0
   617  00000B                     CAN_SendFrame@message:
   618                           	opt callstack 0
   619  00000B                     NVMWrite@addr:
   620                           	opt callstack 0
   621  00000B                     ___lwdiv@quotient:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0xA
   625  00000B                     	ds	1
   626  00000C                     FRAME_SensorExcitationStatus@tru:
   627                           	opt callstack 0
   628  00000C                     NVMRead@count:
   629                           	opt callstack 0
   630  00000C                     ___awdiv@quotient:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0xB
   634  00000C                     	ds	1
   635  00000D                     ??_CAN_SendFrame:
   636  00000D                     LED_Light_Pos@pos:
   637                           	opt callstack 0
   638  00000D                     FRAME_Plot@message:
   639                           	opt callstack 0
   640  00000D                     NVMWrite@count:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0xC
   644  00000D                     	ds	1
   645  00000E                     NVMInit@result:
   646                           	opt callstack 0
   647  00000E                     CAN_TakeFrame@message:
   648                           	opt callstack 0
   649  00000E                     FRAME_AdressOfNeighbors@kier:
   650                           	opt callstack 0
   651                           
   652                           ; 2 bytes @ 0xD
   653  00000E                     	ds	1
   654  00000F                     ??_FRAME_Plot:
   655  00000F                     LED_Light_Pos@fulfillment:
   656                           	opt callstack 0
   657  00000F                     FRAME_DeviceReset@message:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0xE
   661  00000F                     	ds	1
   662  000010                     ??_CAN_TakeFrame:
   663                           
   664                           ; 1 bytes @ 0xF
   665  000010                     	ds	1
   666  000011                     LED_Light_Pos@color:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x10
   670  000011                     	ds	1
   671  000012                     CAN_TakeFrame@tempCON:
   672                           	opt callstack 0
   673  000012                     LED_Light_Pos@LED_array:
   674                           	opt callstack 0
   675  000012                     FRAME_HandleCanFrame@message:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x11
   679  000012                     	ds	1
   680  000013                     CAN_TakeFrame@k:
   681                           	opt callstack 0
   682                           
   683                           ; 1 bytes @ 0x12
   684  000013                     	ds	1
   685  000014                     ??_FRAME_HandleCanFrame:
   686  000014                     LED_Light_Pos@pos2:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x13
   690  000014                     	ds	2
   691  000016                     LED_Light_Pos@flage:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x15
   695  000016                     	ds	1
   696  000017                     FRAME_HandleCanFrame@ident:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x16
   700  000017                     	ds	1
   701  000018                     
   702                           ; 1 bytes @ 0x17
   703  000018                     	ds	1
   704  000019                     FRAME_HandleCanFrame@identyfikator:
   705                           	opt callstack 0
   706                           
   707                           ; 1 bytes @ 0x18
   708  000019                     	ds	1
   709  00001A                     TRM_DataTransmition@canMessage:
   710                           	opt callstack 0
   711                           
   712                           ; 17 bytes @ 0x19
   713  00001A                     	ds	17
   714  00002B                     
   715                           ; 1 bytes @ 0x2A
   716 ;;
   717 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   718 ;;
   719 ;; *************** function _main *****************
   720 ;; Defined at:
   721 ;;		line 100 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  adr             2    0[BANK0 ] int 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   738 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   739 ;;Total ram usage:        2 bytes
   740 ;; Hardware stack levels required when called:    9
   741 ;; This function calls:
   742 ;;		_FLASH_Read
   743 ;;		_INI_All
   744 ;;		_LED_Update
   745 ;;		_TMR1_Update_flag_Get
   746 ;;		_TMR1_Update_flag_Set
   747 ;;		_TRM_DataTransmition
   748 ;; This function is called by:
   749 ;;		Startup code after reset
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text0
   754  0012E0                     __ptext0:
   755                           	opt callstack 0
   756  0012E0                     _main:
   757                           	opt callstack 22
   758                           
   759                           ;main.c: 103: int adr = FLASH_Read(0x200000);
   760                           
   761                           ;incstack = 0
   762  0012E0  0E00               	movlw	0
   763  0012E2  6E06               	movwf	FLASH_Read@addr,c
   764  0012E4  0E00               	movlw	0
   765  0012E6  6E07               	movwf	FLASH_Read@addr+1,c
   766  0012E8  0E20               	movlw	32
   767  0012EA  6E08               	movwf	FLASH_Read@addr+2,c
   768  0012EC  0E00               	movlw	0
   769  0012EE  6E09               	movwf	FLASH_Read@addr+3,c
   770  0012F0  EC69  F00D         	call	_FLASH_Read	;wreg free
   771  0012F4  C006  F0D2         	movff	?_FLASH_Read,main@adr
   772  0012F8  C007  F0D3         	movff	?_FLASH_Read+1,main@adr+1
   773                           
   774                           ;main.c: 104: adr |= FLASH_Read(0x200001)<<8;
   775  0012FC  0E01               	movlw	1
   776  0012FE  6E06               	movwf	FLASH_Read@addr,c
   777  001300  0E00               	movlw	0
   778  001302  6E07               	movwf	FLASH_Read@addr+1,c
   779  001304  0E20               	movlw	32
   780  001306  6E08               	movwf	FLASH_Read@addr+2,c
   781  001308  0E00               	movlw	0
   782  00130A  6E09               	movwf	FLASH_Read@addr+3,c
   783  00130C  EC69  F00D         	call	_FLASH_Read	;wreg free
   784  001310  C006  F007         	movff	?_FLASH_Read,?_FLASH_Read+1
   785  001314  6A06               	clrf	?_FLASH_Read,c
   786  001316  5006               	movf	?_FLASH_Read,w,c
   787  001318  0100               	movlb	0	; () banked
   788  00131A  13D2               	iorwf	main@adr& (0+255),f,b
   789  00131C  5007               	movf	?_FLASH_Read+1,w,c
   790  00131E  13D3               	iorwf	(main@adr+1)& (0+255),f,b
   791                           
   792                           ; BSR set to: 0
   793                           ;main.c: 114: DaneCan.adresCAN = adr;
   794  001320  C0D2  F02D         	movff	main@adr,_DaneCan+2
   795  001324  C0D3  F02E         	movff	main@adr+1,_DaneCan+3
   796                           
   797                           ; BSR set to: 0
   798                           ;main.c: 115: INI_All();
   799  001328  EC2D  F00D         	call	_INI_All	;wreg free
   800                           
   801                           ;main.c: 117: RCON = 0xFF;
   802  00132C  68D0               	setf	4048,c	;volatile
   803  00132E                     l4839:
   804                           
   805                           ;main.c: 120: {;main.c: 121: if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   806  00132E  0100               	movlb	0	; () banked
   807  001330  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   808                           
   809                           ; BSR set to: 0
   810                           ;main.c: 122: {;main.c: 123: DetectorLedRadar.Flags.obsluzWeWy = 0;
   811  001332  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 125: };main.c: 127: if(TMR1_Update_flag_Get()==1)
   815  001334  ECB5  F00D         	call	_TMR1_Update_flag_Get	;wreg free
   816  001338  0406               	decf	?_TMR1_Update_flag_Get,w,c
   817  00133A  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   818  00133C  A4D8               	btfss	status,2,c
   819  00133E  D008               	goto	l4849
   820                           
   821                           ;main.c: 128: {;main.c: 129: LED_Update();
   822  001340  EC33  F009         	call	_LED_Update	;wreg free
   823                           
   824                           ;main.c: 130: TMR1_Update_flag_Set(0);
   825  001344  0E00               	movlw	0
   826  001346  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   827  001348  0E00               	movlw	0
   828  00134A  6E06               	movwf	TMR1_Update_flag_Set@a,c
   829  00134C  ECB0  F00D         	call	_TMR1_Update_flag_Set	;wreg free
   830  001350                     l4849:
   831                           
   832                           ;main.c: 132: };main.c: 135: TRM_DataTransmition();
   833  001350  ECBA  F00B         	call	_TRM_DataTransmition	;wreg free
   834  001354  0004               	clrwdt		;# 
   835                           
   836                           ;main.c: 137: }
   837  001356  D7EB               	goto	l4839
   838  001358                     __end_of_main:
   839                           	opt callstack 0
   840                           
   841 ;; *************** function _TRM_DataTransmition *****************
   842 ;; Defined at:
   843 ;;		line 19 in file "TRM.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  canMessage     17   25[COMRAM] struct .
   848 ;;  i               1    0        unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   859 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   861 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   862 ;;Total ram usage:       17 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    8
   865 ;; This function calls:
   866 ;;		_CAN_TakeFrame
   867 ;;		_FRAME_HandleCanFrame
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text1
   874  001774                     __ptext1:
   875                           	opt callstack 0
   876  001774                     _TRM_DataTransmition:
   877                           	opt callstack 22
   878                           
   879                           ;TRM.c: 21: static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22: BYTE i;;TRM.c: 23: mID
      +                           canMessage;;TRM.c: 26: if(DaneCan.Flags.wyslijRamkeStanu)
   880                           
   881                           ;incstack = 0
   882  001774  A02B               	btfss	_DaneCan,0,c
   883  001776  D013               	goto	l4819
   884                           
   885                           ;TRM.c: 27: {;TRM.c: 29: canMessage.message_type = 0x02;
   886  001778  0E02               	movlw	2
   887  00177A  6E1B               	movwf	TRM_DataTransmition@canMessage+1,c
   888                           
   889                           ;TRM.c: 30: canMessage.id.Val = 0;
   890  00177C  0E00               	movlw	0
   891  00177E  6E1E               	movwf	TRM_DataTransmition@canMessage+4,c
   892  001780  0E00               	movlw	0
   893  001782  6E1F               	movwf	TRM_DataTransmition@canMessage+5,c
   894  001784  0E00               	movlw	0
   895  001786  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   896  001788  0E00               	movlw	0
   897  00178A  6E21               	movwf	TRM_DataTransmition@canMessage+7,c
   898                           
   899                           ;TRM.c: 31: canMessage.id.v[2] = 0x01 *4;
   900  00178C  0E04               	movlw	4
   901  00178E  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   902                           
   903                           ;TRM.c: 32: FRAME_HandleCanFrame(&canMessage);
   904  001790  0E1A               	movlw	low TRM_DataTransmition@canMessage
   905  001792  6E12               	movwf	FRAME_HandleCanFrame@message,c
   906  001794  0E00               	movlw	high TRM_DataTransmition@canMessage
   907  001796  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   908  001798  ECC0  F002         	call	_FRAME_HandleCanFrame	;wreg free
   909                           
   910                           ;TRM.c: 49: DaneCan.Flags.wyslijRamkeStanu = 0;
   911  00179C  902B               	bcf	_DaneCan,0,c
   912  00179E                     l4819:
   913                           
   914                           ;TRM.c: 56: };TRM.c: 59: if(CAN_TakeFrame(&canMessage))
   915  00179E  0E1A               	movlw	low TRM_DataTransmition@canMessage
   916  0017A0  6E0E               	movwf	CAN_TakeFrame@message,c
   917  0017A2  0E00               	movlw	high TRM_DataTransmition@canMessage
   918  0017A4  6E0F               	movwf	CAN_TakeFrame@message+1,c
   919  0017A6  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   920  0017AA  0900               	iorlw	0
   921  0017AC  B4D8               	btfsc	status,2,c
   922  0017AE  0012               	return	
   923                           
   924                           ;TRM.c: 64: {;TRM.c: 66: FRAME_HandleCanFrame(&canMessage);
   925  0017B0  0E1A               	movlw	low TRM_DataTransmition@canMessage
   926  0017B2  6E12               	movwf	FRAME_HandleCanFrame@message,c
   927  0017B4  0E00               	movlw	high TRM_DataTransmition@canMessage
   928  0017B6  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   929  0017B8  ECC0  F002         	call	_FRAME_HandleCanFrame	;wreg free
   930                           
   931                           ;TRM.c: 67: }
   932  0017BC  0012               	return		;funcret
   933  0017BE                     __end_of_TRM_DataTransmition:
   934                           	opt callstack 0
   935                           
   936 ;; *************** function _FRAME_HandleCanFrame *****************
   937 ;; Defined at:
   938 ;;		line 807 in file "FRAME.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  message         2   17[COMRAM] PTR struct .
   941 ;;		 -> TRM_DataTransmition@canMessage(17), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  ident           2   22[COMRAM] unsigned short 
   944 ;;  alfa            2    0        int 
   945 ;;  identyfikato    1   24[COMRAM] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   956 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   958 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   959 ;;Total ram usage:        8 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    7
   962 ;; This function calls:
   963 ;;		_CAN_GenID
   964 ;;		_CAN_SendFrame
   965 ;;		_FRAME_AccelerometerStatus
   966 ;;		_FRAME_AdressOfNeighbors
   967 ;;		_FRAME_AnalogValue
   968 ;;		_FRAME_AveragingTimes
   969 ;;		_FRAME_AxisStatus
   970 ;;		_FRAME_DeviceReset
   971 ;;		_FRAME_ExcitationMultiplier
   972 ;;		_FRAME_ExcitationValue
   973 ;;		_FRAME_MapPosition
   974 ;;		_FRAME_Plot
   975 ;;		_FRAME_PrzypisanieDokarty
   976 ;;		_FRAME_SensorExcitationStatus
   977 ;;		_FRAME_SoftwareVersion
   978 ;;		_LED_Error
   979 ;;		___awdiv
   980 ;; This function is called by:
   981 ;;		_TRM_DataTransmition
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text2
   986  000580                     __ptext2:
   987                           	opt callstack 0
   988  000580                     _FRAME_HandleCanFrame:
   989                           	opt callstack 22
   990                           
   991                           ;FRAME.c: 809: BYTE identyfikator = (BYTE) message->id.v[2]/4;
   992                           
   993                           ;incstack = 0
   994  000580  EE20 F006          	lfsr	2,6
   995  000584  5012               	movf	FRAME_HandleCanFrame@message,w,c
   996  000586  26D9               	addwf	fsr2l,f,c
   997  000588  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
   998  00058A  22DA               	addwfc	fsr2h,f,c
   999  00058C  50DF               	movf	indf2,w,c
  1000  00058E  6E14               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1001  000590  5014               	movf	??_FRAME_HandleCanFrame,w,c
  1002  000592  6E06               	movwf	___awdiv@dividend,c
  1003  000594  6A07               	clrf	___awdiv@dividend+1,c
  1004  000596  0E00               	movlw	0
  1005  000598  6E09               	movwf	___awdiv@divisor+1,c
  1006  00059A  0E04               	movlw	4
  1007  00059C  6E08               	movwf	___awdiv@divisor,c
  1008  00059E  ECF1  F008         	call	___awdiv	;wreg free
  1009  0005A2  5006               	movf	?___awdiv,w,c
  1010  0005A4  6E19               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1011                           
  1012                           ;FRAME.c: 812: if(identyfikator != 0x01)
  1013  0005A6  0419               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1014  0005A8  B4D8               	btfsc	status,2,c
  1015  0005AA  D074               	goto	l4749
  1016                           
  1017                           ;FRAME.c: 813: {;FRAME.c: 814: WORD ident = identyfikator;
  1018  0005AC  C019  F017         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1019  0005B0  6A18               	clrf	FRAME_HandleCanFrame@ident+1,c
  1020  0005B2  D070               	goto	l4749
  1021  0005B4                     l4719:
  1022                           
  1023                           ;FRAME.c: 821: FRAME_SensorExcitationStatus(message);
  1024  0005B4  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1025  0005B8  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1026  0005BC  EC89  F006         	call	_FRAME_SensorExcitationStatus	;wreg free
  1027                           
  1028                           ;FRAME.c: 822: break;
  1029  0005C0  D097               	goto	l4751
  1030  0005C2                     l4721:
  1031                           
  1032                           ;FRAME.c: 824: FRAME_AccelerometerStatus(message);
  1033  0005C2  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1034  0005C6  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1035  0005CA  ECE8  F009         	call	_FRAME_AccelerometerStatus	;wreg free
  1036                           
  1037                           ;FRAME.c: 825: break;
  1038  0005CE  D090               	goto	l4751
  1039  0005D0                     l4723:
  1040                           
  1041                           ;FRAME.c: 827: FRAME_ExcitationValue(message);
  1042  0005D0  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1043  0005D4  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1044  0005D8  EC1D  F00C         	call	_FRAME_ExcitationValue	;wreg free
  1045                           
  1046                           ;FRAME.c: 828: break;
  1047  0005DC  D089               	goto	l4751
  1048  0005DE                     l4725:
  1049                           
  1050                           ;FRAME.c: 830: FRAME_ExcitationMultiplier(message);
  1051  0005DE  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1052  0005E2  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1053  0005E6  EC6D  F00B         	call	_FRAME_ExcitationMultiplier	;wreg free
  1054                           
  1055                           ;FRAME.c: 831: break;
  1056  0005EA  D082               	goto	l4751
  1057  0005EC                     l4727:
  1058                           
  1059                           ;FRAME.c: 833: FRAME_AveragingTimes(message);
  1060  0005EC  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1061  0005F0  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1062  0005F4  EC6E  F00C         	call	_FRAME_AveragingTimes	;wreg free
  1063                           
  1064                           ;FRAME.c: 834: break;
  1065  0005F8  D07B               	goto	l4751
  1066  0005FA                     l4729:
  1067                           
  1068                           ;FRAME.c: 836: FRAME_AxisStatus(message);
  1069  0005FA  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1070  0005FE  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1071  000602  EC53  F00C         	call	_FRAME_AxisStatus	;wreg free
  1072                           
  1073                           ;FRAME.c: 837: break;
  1074  000606  D074               	goto	l4751
  1075  000608                     l4731:
  1076                           
  1077                           ;FRAME.c: 839: FRAME_DeviceReset(message);
  1078  000608  C012  F00F         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1079  00060C  C013  F010         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1080  000610  ECE5  F005         	call	_FRAME_DeviceReset	;wreg free
  1081                           
  1082                           ;FRAME.c: 840: break;
  1083  000614  D06D               	goto	l4751
  1084  000616                     l4733:
  1085                           
  1086                           ;FRAME.c: 842: FRAME_Plot(message);
  1087  000616  C012  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1088  00061A  C013  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1089  00061E  EC18  F00B         	call	_FRAME_Plot	;wreg free
  1090                           
  1091                           ;FRAME.c: 843: break;
  1092  000622  D066               	goto	l4751
  1093  000624                     l4735:
  1094                           
  1095                           ;FRAME.c: 845: FRAME_MapPosition(message);
  1096  000624  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1097  000628  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1098  00062C  ECCC  F00D         	call	_FRAME_MapPosition	;wreg free
  1099                           
  1100                           ;FRAME.c: 846: break;
  1101  000630  D05F               	goto	l4751
  1102  000632                     l4737:
  1103                           
  1104                           ;FRAME.c: 848: FRAME_SoftwareVersion(message);
  1105  000632  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1106  000636  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1107  00063A  EC5D  F00A         	call	_FRAME_SoftwareVersion	;wreg free
  1108                           
  1109                           ;FRAME.c: 849: break;
  1110  00063E  D058               	goto	l4751
  1111  000640                     l4739:
  1112                           
  1113                           ;FRAME.c: 851: case 0x0D:;FRAME.c: 852: FRAME_AnalogValue(message, identyfikator - 0x0C)
      +                          ;
  1114  000640  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1115  000644  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1116  000648  0EF4               	movlw	244
  1117  00064A  2419               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1118  00064C  6E08               	movwf	FRAME_AnalogValue@set,c
  1119  00064E  6A09               	clrf	FRAME_AnalogValue@set+1,c
  1120  000650  0EFF               	movlw	255
  1121  000652  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
  1122  000654  ECCD  F00D         	call	_FRAME_AnalogValue	;wreg free
  1123                           
  1124                           ;FRAME.c: 853: break;
  1125  000658  D04B               	goto	l4751
  1126  00065A                     l4741:
  1127                           
  1128                           ;FRAME.c: 855: FRAME_PrzypisanieDokarty(message);
  1129  00065A  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1130  00065E  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1131  000662  EC57  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1132                           
  1133                           ;FRAME.c: 856: break;
  1134  000666  D044               	goto	l4751
  1135  000668                     l4743:
  1136                           
  1137                           ;FRAME.c: 858: FRAME_AdressOfNeighbors(message,0x10);
  1138  000668  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1139  00066C  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1140  000670  0E00               	movlw	0
  1141  000672  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1142  000674  0E10               	movlw	16
  1143  000676  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1144  000678  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1145                           
  1146                           ;FRAME.c: 859: break;
  1147  00067C  D039               	goto	l4751
  1148  00067E                     l4745:
  1149                           
  1150                           ;FRAME.c: 861: FRAME_AdressOfNeighbors(message,0x11);
  1151  00067E  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1152  000682  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1153  000686  0E00               	movlw	0
  1154  000688  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1155  00068A  0E11               	movlw	17
  1156  00068C  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1157  00068E  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1158                           
  1159                           ;FRAME.c: 862: break;
  1160  000692  D02E               	goto	l4751
  1161  000694                     l4749:
  1162  000694  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1163                           
  1164                           ; Switch size 1, requested type "simple"
  1165                           ; Number of cases is 15, Range of values is 1 to 17
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte           46    24 (average)
  1169                           ;	Chosen strategy is simple_byte
  1170  000696  0A01               	xorlw	1	; case 1
  1171  000698  B4D8               	btfsc	status,2,c
  1172  00069A  D78C               	goto	l4719
  1173  00069C  0A03               	xorlw	3	; case 2
  1174  00069E  B4D8               	btfsc	status,2,c
  1175  0006A0  D790               	goto	l4721
  1176  0006A2  0A01               	xorlw	1	; case 3
  1177  0006A4  B4D8               	btfsc	status,2,c
  1178  0006A6  D794               	goto	l4723
  1179  0006A8  0A07               	xorlw	7	; case 4
  1180  0006AA  B4D8               	btfsc	status,2,c
  1181  0006AC  D798               	goto	l4725
  1182  0006AE  0A01               	xorlw	1	; case 5
  1183  0006B0  B4D8               	btfsc	status,2,c
  1184  0006B2  D79C               	goto	l4727
  1185  0006B4  0A03               	xorlw	3	; case 6
  1186  0006B6  B4D8               	btfsc	status,2,c
  1187  0006B8  D7A0               	goto	l4729
  1188  0006BA  0A01               	xorlw	1	; case 7
  1189  0006BC  B4D8               	btfsc	status,2,c
  1190  0006BE  D7A4               	goto	l4731
  1191  0006C0  0A0E               	xorlw	14	; case 9
  1192  0006C2  B4D8               	btfsc	status,2,c
  1193  0006C4  D7A8               	goto	l4733
  1194  0006C6  0A03               	xorlw	3	; case 10
  1195  0006C8  B4D8               	btfsc	status,2,c
  1196  0006CA  D7AC               	goto	l4735
  1197  0006CC  0A01               	xorlw	1	; case 11
  1198  0006CE  B4D8               	btfsc	status,2,c
  1199  0006D0  D7B0               	goto	l4737
  1200  0006D2  0A07               	xorlw	7	; case 12
  1201  0006D4  B4D8               	btfsc	status,2,c
  1202  0006D6  D7B4               	goto	l4739
  1203  0006D8  0A01               	xorlw	1	; case 13
  1204  0006DA  B4D8               	btfsc	status,2,c
  1205  0006DC  D7B1               	goto	l4739
  1206  0006DE  0A02               	xorlw	2	; case 15
  1207  0006E0  B4D8               	btfsc	status,2,c
  1208  0006E2  D7BB               	goto	l4741
  1209  0006E4  0A1F               	xorlw	31	; case 16
  1210  0006E6  B4D8               	btfsc	status,2,c
  1211  0006E8  D7BF               	goto	l4743
  1212  0006EA  0A01               	xorlw	1	; case 17
  1213  0006EC  B4D8               	btfsc	status,2,c
  1214  0006EE  D7C7               	goto	l4745
  1215  0006F0                     l4751:
  1216                           
  1217                           ;FRAME.c: 871: if(message->message_type == 0x02)
  1218  0006F0  EE20 F001          	lfsr	2,1
  1219  0006F4  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1220  0006F6  26D9               	addwf	fsr2l,f,c
  1221  0006F8  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1222  0006FA  22DA               	addwfc	fsr2h,f,c
  1223  0006FC  0E02               	movlw	2
  1224  0006FE  18DE               	xorwf	postinc2,w,c
  1225  000700  A4D8               	btfss	status,2,c
  1226  000702  0012               	return	
  1227                           
  1228                           ;FRAME.c: 872: {;FRAME.c: 874: message->frame_type = 0x03;
  1229  000704  EE20 F002          	lfsr	2,2
  1230  000708  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1231  00070A  26D9               	addwf	fsr2l,f,c
  1232  00070C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1233  00070E  22DA               	addwfc	fsr2h,f,c
  1234  000710  0E03               	movlw	3
  1235  000712  6EDF               	movwf	indf2,c
  1236                           
  1237                           ;FRAME.c: 875: message->message_type = 0x01;
  1238  000714  EE20 F001          	lfsr	2,1
  1239  000718  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1240  00071A  26D9               	addwf	fsr2l,f,c
  1241  00071C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1242  00071E  22DA               	addwfc	fsr2h,f,c
  1243  000720  0E01               	movlw	1
  1244  000722  6EDF               	movwf	indf2,c
  1245                           
  1246                           ;FRAME.c: 876: message->id.Val = 0;
  1247  000724  EE20 F004          	lfsr	2,4
  1248  000728  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1249  00072A  26D9               	addwf	fsr2l,f,c
  1250  00072C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1251  00072E  22DA               	addwfc	fsr2h,f,c
  1252  000730  6ADE               	clrf	postinc2,c
  1253  000732  6ADE               	clrf	postinc2,c
  1254  000734  6ADE               	clrf	postinc2,c
  1255  000736  6ADD               	clrf	postdec2,c
  1256                           
  1257                           ;FRAME.c: 878: message->id.v[2] = identyfikator*4;
  1258  000738  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1259  00073A  0D04               	mullw	4
  1260  00073C  EE20 F006          	lfsr	2,6
  1261  000740  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1262  000742  26D9               	addwf	fsr2l,f,c
  1263  000744  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1264  000746  22DA               	addwfc	fsr2h,f,c
  1265  000748  CFF3 FFDF          	movff	prodl,indf2
  1266                           
  1267                           ;FRAME.c: 879: CAN_GenID(message,identyfikator);
  1268  00074C  C012  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1269  000750  C013  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1270  000754  C019  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1271  000758  ECAC  F009         	call	_CAN_GenID	;wreg free
  1272                           
  1273                           ;FRAME.c: 880: CAN_SendFrame(message);
  1274  00075C  C012  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1275  000760  C013  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1276  000764  EC83  F004         	call	_CAN_SendFrame	;wreg free
  1277                           
  1278                           ;FRAME.c: 891: while(RXB0CONbits.FILHIT3)
  1279  000768  D004               	goto	l694
  1280  00076A                     l695:
  1281                           
  1282                           ;FRAME.c: 892: {;FRAME.c: 893: if(TXB0CONbits.TXERR == 1){
  1283  00076A  010F               	movlb	15	; () banked
  1284  00076C  B940               	btfsc	64,4,b	;volatile
  1285                           
  1286                           ; BSR set to: 15
  1287                           ;FRAME.c: 894: LED_Error();
  1288  00076E  EC4E  F00D         	call	_LED_Error	;wreg free
  1289  000772                     l694:
  1290  000772  A660               	btfss	3936,3,c	;volatile
  1291  000774  0012               	return	
  1292  000776  D7F9               	goto	l695
  1293  000778                     __end_of_FRAME_HandleCanFrame:
  1294                           	opt callstack 0
  1295                           
  1296 ;; *************** function _LED_Error *****************
  1297 ;; Defined at:
  1298 ;;		line 49 in file "LED.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2  364[None  ] unsigned int 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    4
  1319 ;; This function calls:
  1320 ;;		_LED_Control
  1321 ;; This function is called by:
  1322 ;;		_FRAME_HandleCanFrame
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text3
  1327  001A9C                     __ptext3:
  1328                           	opt callstack 0
  1329  001A9C                     _LED_Error:
  1330                           	opt callstack 24
  1331                           
  1332                           ;LED.c: 51: LED_Control(RED,0b1010101010);
  1333                           
  1334                           ;incstack = 0
  1335  001A9C  0E02               	movlw	2
  1336  001A9E  6E07               	movwf	LED_Control@diode+1,c
  1337  001AA0  0EAA               	movlw	170
  1338  001AA2  6E06               	movwf	LED_Control@diode,c
  1339  001AA4  0E00               	movlw	0
  1340  001AA6  EC3C  F005         	call	_LED_Control
  1341                           
  1342                           ;LED.c: 52: LED_Control(GREEN,0b0000000000);
  1343  001AAA  0E00               	movlw	0
  1344  001AAC  6E07               	movwf	LED_Control@diode+1,c
  1345  001AAE  0E00               	movlw	0
  1346  001AB0  6E06               	movwf	LED_Control@diode,c
  1347  001AB2  0E01               	movlw	1
  1348  001AB4  EC3C  F005         	call	_LED_Control
  1349  001AB8  0012               	return		;funcret
  1350  001ABA                     __end_of_LED_Error:
  1351                           	opt callstack 0
  1352                           
  1353 ;; *************** function _FRAME_SoftwareVersion *****************
  1354 ;; Defined at:
  1355 ;;		line 620 in file "FRAME.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  message         2    5[COMRAM] PTR struct .
  1358 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1373 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1374 ;;Total ram usage:        3 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    3
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_FRAME_HandleCanFrame
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text4
  1385  0014BA                     __ptext4:
  1386                           	opt callstack 0
  1387  0014BA                     _FRAME_SoftwareVersion:
  1388                           	opt callstack 25
  1389                           
  1390                           ;FRAME.c: 623: if(message->message_type == 0x02)
  1391                           
  1392                           ;incstack = 0
  1393  0014BA  EE20 F001          	lfsr	2,1
  1394  0014BE  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1395  0014C0  26D9               	addwf	fsr2l,f,c
  1396  0014C2  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1397  0014C4  22DA               	addwfc	fsr2h,f,c
  1398  0014C6  0E02               	movlw	2
  1399  0014C8  18DE               	xorwf	postinc2,w,c
  1400  0014CA  A4D8               	btfss	status,2,c
  1401  0014CC  0012               	return	
  1402                           
  1403                           ;FRAME.c: 624: {;FRAME.c: 625: message->data_length = 4;
  1404  0014CE  EE20 F010          	lfsr	2,16
  1405  0014D2  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1406  0014D4  26D9               	addwf	fsr2l,f,c
  1407  0014D6  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1408  0014D8  22DA               	addwfc	fsr2h,f,c
  1409  0014DA  0E04               	movlw	4
  1410  0014DC  6EDF               	movwf	indf2,c
  1411                           
  1412                           ;FRAME.c: 626: message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 >> 8);
  1413  0014DE  EE20 F008          	lfsr	2,8
  1414  0014E2  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1415  0014E4  26D9               	addwf	fsr2l,f,c
  1416  0014E6  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1417  0014E8  22DA               	addwfc	fsr2h,f,c
  1418  0014EA  5005               	movf	5,w,c
  1419  0014EC  6EDF               	movwf	indf2,c
  1420                           
  1421                           ;FRAME.c: 627: message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1422  0014EE  EE20 F009          	lfsr	2,9
  1423  0014F2  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1424  0014F4  26D9               	addwf	fsr2l,f,c
  1425  0014F6  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1426  0014F8  22DA               	addwfc	fsr2h,f,c
  1427  0014FA  C004 FFDF          	movff	4,indf2
  1428                           
  1429                           ;FRAME.c: 628: message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1430  0014FE  EE20 F00A          	lfsr	2,10
  1431  001502  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1432  001504  26D9               	addwf	fsr2l,f,c
  1433  001506  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1434  001508  22DA               	addwfc	fsr2h,f,c
  1435  00150A  500B               	movf	11,w,c
  1436  00150C  6EDF               	movwf	indf2,c
  1437                           
  1438                           ;FRAME.c: 629: message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1439  00150E  EE20 F00B          	lfsr	2,11
  1440  001512  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1441  001514  26D9               	addwf	fsr2l,f,c
  1442  001516  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1443  001518  22DA               	addwfc	fsr2h,f,c
  1444  00151A  C00A FFDF          	movff	10,indf2
  1445                           
  1446                           ;FRAME.c: 630: }
  1447  00151E  0012               	return		;funcret
  1448  001520                     __end_of_FRAME_SoftwareVersion:
  1449                           	opt callstack 0
  1450                           
  1451 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1452 ;; Defined at:
  1453 ;;		line 55 in file "FRAME.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  message         2    7[COMRAM] PTR struct .
  1456 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  tru             2   11[COMRAM] unsigned int 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1470 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;Total ram usage:        6 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    4
  1475 ;; This function calls:
  1476 ;;		_IsInNeighbors
  1477 ;;		_LOCK_Get
  1478 ;;		_LOCK_Set
  1479 ;;		_MOC_Aktualna_Temperatura
  1480 ;;		_MOC_Frame_Counter
  1481 ;;		_MOC_NOTWORK
  1482 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1483 ;; This function is called by:
  1484 ;;		_FRAME_HandleCanFrame
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text5
  1489  000D12                     __ptext5:
  1490                           	opt callstack 0
  1491  000D12                     _FRAME_SensorExcitationStatus:
  1492                           	opt callstack 24
  1493                           
  1494                           ;FRAME.c: 58: static UINT statwect = 0b00000000;;FRAME.c: 59: if(message->message_type =
      +                          = 0x02)
  1495                           
  1496                           ;incstack = 0
  1497  000D12  EE20 F001          	lfsr	2,1
  1498  000D16  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1499  000D18  26D9               	addwf	fsr2l,f,c
  1500  000D1A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1501  000D1C  22DA               	addwfc	fsr2h,f,c
  1502  000D1E  0E02               	movlw	2
  1503  000D20  18DE               	xorwf	postinc2,w,c
  1504  000D22  A4D8               	btfss	status,2,c
  1505  000D24  D047               	goto	l4327
  1506                           
  1507                           ;FRAME.c: 60: {;FRAME.c: 61: message->data_length = 6;
  1508  000D26  EE20 F010          	lfsr	2,16
  1509  000D2A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1510  000D2C  26D9               	addwf	fsr2l,f,c
  1511  000D2E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1512  000D30  22DA               	addwfc	fsr2h,f,c
  1513  000D32  0E06               	movlw	6
  1514  000D34  6EDF               	movwf	indf2,c
  1515                           
  1516                           ;FRAME.c: 67: message->data[0] = LOCK_Get();
  1517  000D36  EE20 F008          	lfsr	2,8
  1518  000D3A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1519  000D3C  26D9               	addwf	fsr2l,f,c
  1520  000D3E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1521  000D40  22DA               	addwfc	fsr2h,f,c
  1522  000D42  ECCA  F00D         	call	_LOCK_Get	;wreg free
  1523  000D46  6EDF               	movwf	indf2,c
  1524                           
  1525                           ;FRAME.c: 68: message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1526  000D48  EE20 F009          	lfsr	2,9
  1527  000D4C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1528  000D4E  26D9               	addwf	fsr2l,f,c
  1529  000D50  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1530  000D52  22DA               	addwfc	fsr2h,f,c
  1531  000D54  EC92  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1532  000D58  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1533  000D5C  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1534  000D5E  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1535  000D60  6EDF               	movwf	indf2,c
  1536                           
  1537                           ;FRAME.c: 69: message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1538  000D62  EE20 F00A          	lfsr	2,10
  1539  000D66  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1540  000D68  26D9               	addwf	fsr2l,f,c
  1541  000D6A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1542  000D6C  22DA               	addwfc	fsr2h,f,c
  1543  000D6E  EC92  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1544  000D72  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1545  000D74  6EDF               	movwf	indf2,c
  1546                           
  1547                           ;FRAME.c: 70: message->data[3] = MOC_Frame_Counter();
  1548  000D76  EE20 F00B          	lfsr	2,11
  1549  000D7A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1550  000D7C  26D9               	addwf	fsr2l,f,c
  1551  000D7E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1552  000D80  22DA               	addwfc	fsr2h,f,c
  1553  000D82  EC7D  F00D         	call	_MOC_Frame_Counter	;wreg free
  1554  000D86  5006               	movf	?_MOC_Frame_Counter,w,c
  1555  000D88  6EDF               	movwf	indf2,c
  1556                           
  1557                           ;FRAME.c: 71: message->data[4] = MOC_Aktualna_Temperatura();
  1558  000D8A  EE20 F00C          	lfsr	2,12
  1559  000D8E  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1560  000D90  26D9               	addwf	fsr2l,f,c
  1561  000D92  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1562  000D94  22DA               	addwfc	fsr2h,f,c
  1563  000D96  EC97  F00D         	call	_MOC_Aktualna_Temperatura	;wreg free
  1564  000D9A  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1565  000D9C  6EDF               	movwf	indf2,c
  1566                           
  1567                           ;FRAME.c: 72: message->data[5] = MOC_NOTWORK();
  1568  000D9E  EE20 F00D          	lfsr	2,13
  1569  000DA2  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1570  000DA4  26D9               	addwf	fsr2l,f,c
  1571  000DA6  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1572  000DA8  22DA               	addwfc	fsr2h,f,c
  1573  000DAA  ECBF  F00D         	call	_MOC_NOTWORK	;wreg free
  1574  000DAE  5006               	movf	?_MOC_NOTWORK,w,c
  1575  000DB0  6EDF               	movwf	indf2,c
  1576                           
  1577                           ;FRAME.c: 82: }
  1578  000DB2  0012               	return	
  1579  000DB4                     l4327:
  1580                           
  1581                           ;FRAME.c: 83: else;FRAME.c: 84: {;FRAME.c: 86: UINT tru = IsInNeighbors(message->id.w[0]
      +                          );
  1582  000DB4  EE20 F004          	lfsr	2,4
  1583  000DB8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1584  000DBA  26D9               	addwf	fsr2l,f,c
  1585  000DBC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1586  000DBE  22DA               	addwfc	fsr2h,f,c
  1587  000DC0  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1588  000DC4  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1589  000DC8  EC9A  F007         	call	_IsInNeighbors	;wreg free
  1590  000DCC  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1591  000DD0  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1592                           
  1593                           ;FRAME.c: 89: if(message->data[0]==0)
  1594  000DD4  EE20 F008          	lfsr	2,8
  1595  000DD8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1596  000DDA  26D9               	addwf	fsr2l,f,c
  1597  000DDC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1598  000DDE  22DA               	addwfc	fsr2h,f,c
  1599  000DE0  50DF               	movf	indf2,w,c
  1600  000DE2  A4D8               	btfss	status,2,c
  1601  000DE4  D00A               	goto	l4333
  1602                           
  1603                           ;FRAME.c: 90: {;FRAME.c: 92: statwect = statwect &( ~tru );
  1604  000DE6  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1605  000DE8  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1606  000DEA  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1607  000DEC  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1608  000DEE  5031               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1609  000DF0  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1610  000DF2  6E31               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1611  000DF4  5032               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1612  000DF6  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1613  000DF8  D005               	goto	L1
  1614  000DFA                     l4333:
  1615                           
  1616                           ;FRAME.c: 94: else;FRAME.c: 95: {;FRAME.c: 96: statwect = statwect| tru;
  1617  000DFA  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1618  000DFC  1031               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1619  000DFE  6E31               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1620  000E00  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1621  000E02  1032               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1622  000E04                     L1:
  1623  000E04  6E32               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1624                           
  1625                           ;FRAME.c: 97: };FRAME.c: 99: if(statwect>0)
  1626  000E06  5031               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1627  000E08  1032               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1628  000E0A  B4D8               	btfsc	status,2,c
  1629  000E0C  D00A               	goto	l4341
  1630                           
  1631                           ;FRAME.c: 100: {;FRAME.c: 101: if(1 != LOCK_Get())
  1632  000E0E  ECCA  F00D         	call	_LOCK_Get	;wreg free
  1633  000E12  06E8               	decf	wreg,f,c
  1634  000E14  B4D8               	btfsc	status,2,c
  1635  000E16  0012               	return	
  1636                           
  1637                           ;FRAME.c: 102: {;FRAME.c: 103: DaneCan.Flags.wyslijRamkeStanu = 1;
  1638  000E18  802B               	bsf	_DaneCan,0,c
  1639                           
  1640                           ;FRAME.c: 104: LOCK_Set(1);
  1641  000E1A  0E01               	movlw	1
  1642  000E1C  ECC3  F00D         	call	_LOCK_Set
  1643  000E20  0012               	return	
  1644  000E22                     l4341:
  1645                           
  1646                           ;FRAME.c: 108: else;FRAME.c: 109: {;FRAME.c: 111: if(1 == LOCK_Get())
  1647  000E22  ECCA  F00D         	call	_LOCK_Get	;wreg free
  1648  000E26  06E8               	decf	wreg,f,c
  1649  000E28  A4D8               	btfss	status,2,c
  1650  000E2A  0012               	return	
  1651                           
  1652                           ;FRAME.c: 112: {;FRAME.c: 113: DaneCan.Flags.wyslijRamkeStanu = 1;
  1653  000E2C  802B               	bsf	_DaneCan,0,c
  1654                           
  1655                           ;FRAME.c: 114: LOCK_Set(0);
  1656  000E2E  0E00               	movlw	0
  1657  000E30  ECC3  F00D         	call	_LOCK_Set
  1658  000E34  0012               	return		;funcret
  1659  000E36                     __end_of_FRAME_SensorExcitationStatus:
  1660                           	opt callstack 0
  1661                           
  1662 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1663 ;; Defined at:
  1664 ;;		line 34 in file "MOC_Funct.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2    5[COMRAM] unsigned int 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1682 ;;Total ram usage:        2 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    3
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_FRAME_SensorExcitationStatus
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text6
  1693  001B24                     __ptext6:
  1694                           	opt callstack 0
  1695  001B24                     _MOC_Wynikowa_wartosc_roznicowa:
  1696                           	opt callstack 24
  1697                           
  1698                           ;MOC_Funct.c: 36: return 0x0220;
  1699                           
  1700                           ;incstack = 0
  1701  001B24  0E02               	movlw	2
  1702  001B26  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1703  001B28  0E20               	movlw	32
  1704  001B2A  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1705  001B2C  0012               	return		;funcret
  1706  001B2E                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1707                           	opt callstack 0
  1708                           
  1709 ;; *************** function _MOC_NOTWORK *****************
  1710 ;; Defined at:
  1711 ;;		line 48 in file "MOC_Funct.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  2    5[COMRAM] unsigned int 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;Total ram usage:        2 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    3
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_FRAME_SensorExcitationStatus
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text7
  1740  001B7E                     __ptext7:
  1741                           	opt callstack 0
  1742  001B7E                     _MOC_NOTWORK:
  1743                           	opt callstack 24
  1744                           
  1745                           ;MOC_Funct.c: 50: return 0xFF;
  1746                           
  1747                           ;incstack = 0
  1748  001B7E  0E00               	movlw	0
  1749  001B80  6E07               	movwf	?_MOC_NOTWORK+1,c
  1750  001B82  6806               	setf	?_MOC_NOTWORK,c
  1751  001B84  0012               	return		;funcret
  1752  001B86                     __end_of_MOC_NOTWORK:
  1753                           	opt callstack 0
  1754                           
  1755 ;; *************** function _MOC_Frame_Counter *****************
  1756 ;; Defined at:
  1757 ;;		line 39 in file "MOC_Funct.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2    5[COMRAM] unsigned int 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1775 ;;Total ram usage:        2 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    3
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_FRAME_SensorExcitationStatus
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text8
  1786  001AFA                     __ptext8:
  1787                           	opt callstack 0
  1788  001AFA                     _MOC_Frame_Counter:
  1789                           	opt callstack 24
  1790                           
  1791                           ;MOC_Funct.c: 41: static UINT zeta = 0x11;;MOC_Funct.c: 42: return zeta++;
  1792                           
  1793                           ;incstack = 0
  1794  001AFA  504D               	movf	MOC_Frame_Counter@zeta,w,c
  1795  001AFC  6E06               	movwf	?_MOC_Frame_Counter,c
  1796  001AFE  504E               	movf	MOC_Frame_Counter@zeta+1,w,c
  1797  001B00  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1798  001B02  4A4D               	infsnz	MOC_Frame_Counter@zeta,f,c
  1799  001B04  2A4E               	incf	MOC_Frame_Counter@zeta+1,f,c
  1800  001B06  0012               	return		;funcret
  1801  001B08                     __end_of_MOC_Frame_Counter:
  1802                           	opt callstack 0
  1803                           
  1804 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1805 ;; Defined at:
  1806 ;;		line 44 in file "MOC_Funct.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2    5[COMRAM] unsigned int 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1824 ;;Total ram usage:        2 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    3
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_FRAME_SensorExcitationStatus
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text9
  1835  001B2E                     __ptext9:
  1836                           	opt callstack 0
  1837  001B2E                     _MOC_Aktualna_Temperatura:
  1838                           	opt callstack 24
  1839                           
  1840                           ;MOC_Funct.c: 46: return 0x1B;
  1841                           
  1842                           ;incstack = 0
  1843  001B2E  0E00               	movlw	0
  1844  001B30  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1845  001B32  0E1B               	movlw	27
  1846  001B34  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1847  001B36  0012               	return		;funcret
  1848  001B38                     __end_of_MOC_Aktualna_Temperatura:
  1849                           	opt callstack 0
  1850                           
  1851 ;; *************** function _LOCK_Set *****************
  1852 ;; Defined at:
  1853 ;;		line 84 in file "LED.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  k               1    wreg     unsigned char 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  k               1    5[COMRAM] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1871 ;;Total ram usage:        1 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    3
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_FRAME_SensorExcitationStatus
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text10
  1882  001B86                     __ptext10:
  1883                           	opt callstack 0
  1884  001B86                     _LOCK_Set:
  1885                           	opt callstack 24
  1886                           
  1887                           ;incstack = 0
  1888                           ;LOCK_Set@k stored from wreg
  1889  001B86  6E06               	movwf	LOCK_Set@k,c
  1890                           
  1891                           ;LED.c: 86: LOCK = k;
  1892  001B88  C006  F03A         	movff	LOCK_Set@k,_LOCK
  1893  001B8C  0012               	return		;funcret
  1894  001B8E                     __end_of_LOCK_Set:
  1895                           	opt callstack 0
  1896                           
  1897 ;; *************** function _LOCK_Get *****************
  1898 ;; Defined at:
  1899 ;;		line 100 in file "LED.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      unsigned char 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    3
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_FRAME_SensorExcitationStatus
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text11
  1928  001B94                     __ptext11:
  1929                           	opt callstack 0
  1930  001B94                     _LOCK_Get:
  1931                           	opt callstack 24
  1932                           
  1933                           ;LED.c: 102: return LOCK;
  1934                           
  1935                           ;incstack = 0
  1936  001B94  503A               	movf	_LOCK,w,c
  1937  001B96  0012               	return		;funcret
  1938  001B98                     __end_of_LOCK_Get:
  1939                           	opt callstack 0
  1940                           
  1941 ;; *************** function _IsInNeighbors *****************
  1942 ;; Defined at:
  1943 ;;		line 133 in file "FRAME.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  message_adre    2    5[COMRAM] unsigned int 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  i               2    0        unsigned short 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  2    5[COMRAM] unsigned int 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    3
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_FRAME_SensorExcitationStatus
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text12
  1972  000F34                     __ptext12:
  1973                           	opt callstack 0
  1974  000F34                     _IsInNeighbors:
  1975                           	opt callstack 24
  1976                           
  1977                           ;FRAME.c: 135: WORD i;;FRAME.c: 137: if(NeightAdress1==message_adress)
  1978                           
  1979                           ;incstack = 0
  1980  000F34  5006               	movf	IsInNeighbors@message_adress,w,c
  1981  000F36  184B               	xorwf	_NeightAdress1,w,c	;volatile
  1982  000F38  E109               	bnz	l4089
  1983  000F3A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1984  000F3C  184C               	xorwf	_NeightAdress1+1,w,c	;volatile
  1985  000F3E  A4D8               	btfss	status,2,c
  1986  000F40  D005               	goto	l4089
  1987                           
  1988                           ;FRAME.c: 138: {;FRAME.c: 139: return 0b1;
  1989  000F42  0E00               	movlw	0
  1990  000F44  6E07               	movwf	?_IsInNeighbors+1,c
  1991  000F46  0E01               	movlw	1
  1992  000F48  6E06               	movwf	?_IsInNeighbors,c
  1993  000F4A  0012               	return	
  1994  000F4C                     l4089:
  1995                           
  1996                           ;FRAME.c: 140: };FRAME.c: 141: if(NeightAdress2==message_adress)
  1997  000F4C  5006               	movf	IsInNeighbors@message_adress,w,c
  1998  000F4E  1858               	xorwf	_NeightAdress2,w,c	;volatile
  1999  000F50  E109               	bnz	l4095
  2000  000F52  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2001  000F54  1859               	xorwf	_NeightAdress2+1,w,c	;volatile
  2002  000F56  A4D8               	btfss	status,2,c
  2003  000F58  D005               	goto	l4095
  2004                           
  2005                           ;FRAME.c: 142: {;FRAME.c: 143: return 0b10;
  2006  000F5A  0E00               	movlw	0
  2007  000F5C  6E07               	movwf	?_IsInNeighbors+1,c
  2008  000F5E  0E02               	movlw	2
  2009  000F60  6E06               	movwf	?_IsInNeighbors,c
  2010  000F62  0012               	return	
  2011  000F64                     l4095:
  2012                           
  2013                           ;FRAME.c: 144: };FRAME.c: 145: if(NeightAdress3==message_adress)
  2014  000F64  5006               	movf	IsInNeighbors@message_adress,w,c
  2015  000F66  1849               	xorwf	_NeightAdress3,w,c	;volatile
  2016  000F68  E109               	bnz	l4101
  2017  000F6A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2018  000F6C  184A               	xorwf	_NeightAdress3+1,w,c	;volatile
  2019  000F6E  A4D8               	btfss	status,2,c
  2020  000F70  D005               	goto	l4101
  2021                           
  2022                           ;FRAME.c: 146: {;FRAME.c: 147: return 0b100;
  2023  000F72  0E00               	movlw	0
  2024  000F74  6E07               	movwf	?_IsInNeighbors+1,c
  2025  000F76  0E04               	movlw	4
  2026  000F78  6E06               	movwf	?_IsInNeighbors,c
  2027  000F7A  0012               	return	
  2028  000F7C                     l4101:
  2029                           
  2030                           ;FRAME.c: 148: };FRAME.c: 149: if(NeightAdress4==message_adress)
  2031  000F7C  5006               	movf	IsInNeighbors@message_adress,w,c
  2032  000F7E  1847               	xorwf	_NeightAdress4,w,c	;volatile
  2033  000F80  E109               	bnz	l4107
  2034  000F82  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2035  000F84  1848               	xorwf	_NeightAdress4+1,w,c	;volatile
  2036  000F86  A4D8               	btfss	status,2,c
  2037  000F88  D005               	goto	l4107
  2038                           
  2039                           ;FRAME.c: 150: {;FRAME.c: 151: return 0b1000;
  2040  000F8A  0E00               	movlw	0
  2041  000F8C  6E07               	movwf	?_IsInNeighbors+1,c
  2042  000F8E  0E08               	movlw	8
  2043  000F90  6E06               	movwf	?_IsInNeighbors,c
  2044  000F92  0012               	return	
  2045  000F94                     l4107:
  2046                           
  2047                           ;FRAME.c: 152: };FRAME.c: 153: if(NeightAdress5==message_adress)
  2048  000F94  5006               	movf	IsInNeighbors@message_adress,w,c
  2049  000F96  1845               	xorwf	_NeightAdress5,w,c	;volatile
  2050  000F98  E109               	bnz	l4113
  2051  000F9A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2052  000F9C  1846               	xorwf	_NeightAdress5+1,w,c	;volatile
  2053  000F9E  A4D8               	btfss	status,2,c
  2054  000FA0  D005               	goto	l4113
  2055                           
  2056                           ;FRAME.c: 154: {;FRAME.c: 155: return 0b10000;
  2057  000FA2  0E00               	movlw	0
  2058  000FA4  6E07               	movwf	?_IsInNeighbors+1,c
  2059  000FA6  0E10               	movlw	16
  2060  000FA8  6E06               	movwf	?_IsInNeighbors,c
  2061  000FAA  0012               	return	
  2062  000FAC                     l4113:
  2063                           
  2064                           ;FRAME.c: 156: };FRAME.c: 157: if(NeightAdress6==message_adress)
  2065  000FAC  5006               	movf	IsInNeighbors@message_adress,w,c
  2066  000FAE  1843               	xorwf	_NeightAdress6,w,c	;volatile
  2067  000FB0  E109               	bnz	l4119
  2068  000FB2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2069  000FB4  1844               	xorwf	_NeightAdress6+1,w,c	;volatile
  2070  000FB6  A4D8               	btfss	status,2,c
  2071  000FB8  D005               	goto	l4119
  2072                           
  2073                           ;FRAME.c: 158: {;FRAME.c: 159: return 0b100000;
  2074  000FBA  0E00               	movlw	0
  2075  000FBC  6E07               	movwf	?_IsInNeighbors+1,c
  2076  000FBE  0E20               	movlw	32
  2077  000FC0  6E06               	movwf	?_IsInNeighbors,c
  2078  000FC2  0012               	return	
  2079  000FC4                     l4119:
  2080                           
  2081                           ;FRAME.c: 160: };FRAME.c: 161: if(NeightAdress7==message_adress)
  2082  000FC4  5006               	movf	IsInNeighbors@message_adress,w,c
  2083  000FC6  1841               	xorwf	_NeightAdress7,w,c	;volatile
  2084  000FC8  E109               	bnz	l4125
  2085  000FCA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2086  000FCC  1842               	xorwf	_NeightAdress7+1,w,c	;volatile
  2087  000FCE  A4D8               	btfss	status,2,c
  2088  000FD0  D005               	goto	l4125
  2089                           
  2090                           ;FRAME.c: 162: {;FRAME.c: 163: return 0b1000000;
  2091  000FD2  0E00               	movlw	0
  2092  000FD4  6E07               	movwf	?_IsInNeighbors+1,c
  2093  000FD6  0E40               	movlw	64
  2094  000FD8  6E06               	movwf	?_IsInNeighbors,c
  2095  000FDA  0012               	return	
  2096  000FDC                     l4125:
  2097                           
  2098                           ;FRAME.c: 164: };FRAME.c: 165: if(NeightAdress8==message_adress)
  2099  000FDC  5006               	movf	IsInNeighbors@message_adress,w,c
  2100  000FDE  183F               	xorwf	_NeightAdress8,w,c	;volatile
  2101  000FE0  E109               	bnz	l4131
  2102  000FE2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2103  000FE4  1840               	xorwf	_NeightAdress8+1,w,c	;volatile
  2104  000FE6  A4D8               	btfss	status,2,c
  2105  000FE8  D005               	goto	l4131
  2106                           
  2107                           ;FRAME.c: 166: {;FRAME.c: 167: return 0b10000000;
  2108  000FEA  0E00               	movlw	0
  2109  000FEC  6E07               	movwf	?_IsInNeighbors+1,c
  2110  000FEE  0E80               	movlw	128
  2111  000FF0  6E06               	movwf	?_IsInNeighbors,c
  2112  000FF2  0012               	return	
  2113  000FF4                     l4131:
  2114                           
  2115                           ;FRAME.c: 168: };FRAME.c: 183: return 0;
  2116  000FF4  0E00               	movlw	0
  2117  000FF6  6E07               	movwf	?_IsInNeighbors+1,c
  2118  000FF8  0E00               	movlw	0
  2119  000FFA  6E06               	movwf	?_IsInNeighbors,c
  2120  000FFC  0012               	return		;funcret
  2121  000FFE                     __end_of_IsInNeighbors:
  2122                           	opt callstack 0
  2123                           
  2124 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2125 ;; Defined at:
  2126 ;;		line 679 in file "FRAME.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  message         2    5[COMRAM] PTR struct .
  2129 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;Total ram usage:        6 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    3
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_FRAME_HandleCanFrame
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text13
  2156  0010AE                     __ptext13:
  2157                           	opt callstack 0
  2158  0010AE                     _FRAME_PrzypisanieDokarty:
  2159                           	opt callstack 25
  2160                           
  2161                           ;FRAME.c: 681: if(message->message_type == 0x02)
  2162                           
  2163                           ;incstack = 0
  2164  0010AE  EE20 F001          	lfsr	2,1
  2165  0010B2  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2166  0010B4  26D9               	addwf	fsr2l,f,c
  2167  0010B6  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2168  0010B8  22DA               	addwfc	fsr2h,f,c
  2169  0010BA  0E02               	movlw	2
  2170  0010BC  18DE               	xorwf	postinc2,w,c
  2171  0010BE  A4D8               	btfss	status,2,c
  2172  0010C0  D021               	goto	l4441
  2173                           
  2174                           ;FRAME.c: 682: {;FRAME.c: 683: message->data_length = 3;
  2175  0010C2  EE20 F010          	lfsr	2,16
  2176  0010C6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2177  0010C8  26D9               	addwf	fsr2l,f,c
  2178  0010CA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2179  0010CC  22DA               	addwfc	fsr2h,f,c
  2180  0010CE  0E03               	movlw	3
  2181  0010D0  6EDF               	movwf	indf2,c
  2182                           
  2183                           ;FRAME.c: 684: message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2184  0010D2  EE20 F008          	lfsr	2,8
  2185  0010D6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2186  0010D8  26D9               	addwf	fsr2l,f,c
  2187  0010DA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2188  0010DC  22DA               	addwfc	fsr2h,f,c
  2189  0010DE  0E00               	movlw	0
  2190  0010E0  6EDF               	movwf	indf2,c
  2191                           
  2192                           ;FRAME.c: 685: message->data[1] = (unsigned char)Dane->NrKarty ;
  2193  0010E2  EE20 F009          	lfsr	2,9
  2194  0010E6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2195  0010E8  26D9               	addwf	fsr2l,f,c
  2196  0010EA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2197  0010EC  22DA               	addwfc	fsr2h,f,c
  2198  0010EE  C040 FFDF          	movff	64,indf2
  2199                           
  2200                           ;FRAME.c: 686: message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2201  0010F2  EE20 F00A          	lfsr	2,10
  2202  0010F6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2203  0010F8  26D9               	addwf	fsr2l,f,c
  2204  0010FA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2205  0010FC  22DA               	addwfc	fsr2h,f,c
  2206  0010FE  C042 FFDF          	movff	66,indf2
  2207                           
  2208                           ;FRAME.c: 688: }
  2209  001102  0012               	return	
  2210  001104                     l4441:
  2211                           
  2212                           ;FRAME.c: 689: else;FRAME.c: 690: {;FRAME.c: 691: Dane->NrKarty = (message->data[0] << 8
      +                          ) | (message->data[1]);
  2213  001104  EE20 F008          	lfsr	2,8
  2214  001108  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2215  00110A  26D9               	addwf	fsr2l,f,c
  2216  00110C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2217  00110E  22DA               	addwfc	fsr2h,f,c
  2218  001110  50DF               	movf	indf2,w,c
  2219  001112  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2220  001114  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2221  001116  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2222  001118  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2223  00111A  EE20 F009          	lfsr	2,9
  2224  00111E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2225  001120  26D9               	addwf	fsr2l,f,c
  2226  001122  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2227  001124  22DA               	addwfc	fsr2h,f,c
  2228  001126  50DF               	movf	indf2,w,c
  2229  001128  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2230  00112A  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2231  00112C  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2232  00112E  6E40               	movwf	64,c
  2233  001130  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2234  001132  6E41               	movwf	65,c
  2235                           
  2236                           ;FRAME.c: 692: Dane->Nr_WeWy = (message->data[2]);
  2237  001134  EE20 F00A          	lfsr	2,10
  2238  001138  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2239  00113A  26D9               	addwf	fsr2l,f,c
  2240  00113C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2241  00113E  22DA               	addwfc	fsr2h,f,c
  2242  001140  50DF               	movf	indf2,w,c
  2243  001142  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2244  001144  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2245  001146  6E42               	movwf	66,c
  2246  001148  6A43               	clrf	67,c
  2247  00114A  0012               	return		;funcret
  2248  00114C                     __end_of_FRAME_PrzypisanieDokarty:
  2249                           	opt callstack 0
  2250                           
  2251 ;; *************** function _FRAME_Plot *****************
  2252 ;; Defined at:
  2253 ;;		line 564 in file "FRAME.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  message         2   12[COMRAM] PTR struct .
  2256 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;Total ram usage:        3 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    4
  2275 ;; This function calls:
  2276 ;;		___lwdiv
  2277 ;; This function is called by:
  2278 ;;		_FRAME_HandleCanFrame
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text14
  2283  001630                     __ptext14:
  2284                           	opt callstack 0
  2285  001630                     _FRAME_Plot:
  2286                           	opt callstack 24
  2287                           
  2288                           ;FRAME.c: 567: if(message->message_type == 0x02)
  2289                           
  2290                           ;incstack = 0
  2291  001630  EE20 F001          	lfsr	2,1
  2292  001634  500D               	movf	FRAME_Plot@message,w,c
  2293  001636  26D9               	addwf	fsr2l,f,c
  2294  001638  500E               	movf	FRAME_Plot@message+1,w,c
  2295  00163A  22DA               	addwfc	fsr2h,f,c
  2296  00163C  0E02               	movlw	2
  2297  00163E  18DE               	xorwf	postinc2,w,c
  2298  001640  A4D8               	btfss	status,2,c
  2299  001642  D013               	goto	l4431
  2300                           
  2301                           ;FRAME.c: 568: {;FRAME.c: 569: message->data[0] = (BYTE)(Dane->timerRysowaniaWykresuU16/
      +                          10);
  2302  001644  EE20 F008          	lfsr	2,8
  2303  001648  500D               	movf	FRAME_Plot@message,w,c
  2304  00164A  26D9               	addwf	fsr2l,f,c
  2305  00164C  500E               	movf	FRAME_Plot@message+1,w,c
  2306  00164E  22DA               	addwfc	fsr2h,f,c
  2307  001650  C00C F006          	movff	12,___lwdiv@dividend
  2308  001654  C00D F007          	movff	13,___lwdiv@dividend+1
  2309  001658  0E00               	movlw	0
  2310  00165A  6E09               	movwf	___lwdiv@divisor+1,c
  2311  00165C  0E0A               	movlw	10
  2312  00165E  6E08               	movwf	___lwdiv@divisor,c
  2313  001660  EC44  F00B         	call	___lwdiv	;wreg free
  2314  001664  5006               	movf	?___lwdiv,w,c
  2315  001666  6EDF               	movwf	indf2,c
  2316                           
  2317                           ;FRAME.c: 570: }
  2318  001668  0012               	return	
  2319  00166A                     l4431:
  2320                           
  2321                           ;FRAME.c: 571: else;FRAME.c: 572: {;FRAME.c: 573: Dane->timerRysowaniaWykresuU16 = (WORD
      +                          )message->data[0]*10;
  2322  00166A  EE20 F008          	lfsr	2,8
  2323  00166E  500D               	movf	FRAME_Plot@message,w,c
  2324  001670  26D9               	addwf	fsr2l,f,c
  2325  001672  500E               	movf	FRAME_Plot@message+1,w,c
  2326  001674  22DA               	addwfc	fsr2h,f,c
  2327  001676  50DF               	movf	indf2,w,c
  2328  001678  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2329  00167A  500F               	movf	??_FRAME_Plot,w,c
  2330  00167C  0D0A               	mullw	10
  2331  00167E  CFF3 F00C          	movff	prodl,12
  2332  001682  CFF4 F00D          	movff	prodh,13
  2333  001686  0012               	return		;funcret
  2334  001688                     __end_of_FRAME_Plot:
  2335                           	opt callstack 0
  2336                           
  2337 ;; *************** function _FRAME_MapPosition *****************
  2338 ;; Defined at:
  2339 ;;		line 590 in file "FRAME.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  message         2    5[COMRAM] PTR struct .
  2342 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		None
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2358 ;;Total ram usage:        2 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    3
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_FRAME_HandleCanFrame
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text15
  2369  001B98                     __ptext15:
  2370                           	opt callstack 0
  2371  001B98                     _FRAME_MapPosition:
  2372                           	opt callstack 25
  2373                           
  2374                           ;incstack = 0
  2375  001B98  0012               	return		;funcret
  2376  001B9A                     __end_of_FRAME_MapPosition:
  2377                           	opt callstack 0
  2378                           
  2379 ;; *************** function _FRAME_ExcitationValue *****************
  2380 ;; Defined at:
  2381 ;;		line 228 in file "FRAME.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  message         2    5[COMRAM] PTR struct .
  2384 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2400 ;;Total ram usage:        3 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    3
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_FRAME_HandleCanFrame
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text16
  2411  00183A                     __ptext16:
  2412                           	opt callstack 0
  2413  00183A                     _FRAME_ExcitationValue:
  2414                           	opt callstack 25
  2415                           
  2416                           ;FRAME.c: 230: if(message->message_type == 0x02)
  2417                           
  2418                           ;incstack = 0
  2419  00183A  EE20 F001          	lfsr	2,1
  2420  00183E  5006               	movf	FRAME_ExcitationValue@message,w,c
  2421  001840  26D9               	addwf	fsr2l,f,c
  2422  001842  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2423  001844  22DA               	addwfc	fsr2h,f,c
  2424  001846  0E02               	movlw	2
  2425  001848  18DE               	xorwf	postinc2,w,c
  2426  00184A  A4D8               	btfss	status,2,c
  2427  00184C  0012               	return	
  2428                           
  2429                           ;FRAME.c: 231: {;FRAME.c: 232: message->data_length = 1;
  2430  00184E  EE20 F010          	lfsr	2,16
  2431  001852  5006               	movf	FRAME_ExcitationValue@message,w,c
  2432  001854  26D9               	addwf	fsr2l,f,c
  2433  001856  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2434  001858  22DA               	addwfc	fsr2h,f,c
  2435  00185A  0E01               	movlw	1
  2436  00185C  6EDF               	movwf	indf2,c
  2437                           
  2438                           ;FRAME.c: 237: message->data[0] = 0xFF;
  2439  00185E  EE20 F008          	lfsr	2,8
  2440  001862  5006               	movf	FRAME_ExcitationValue@message,w,c
  2441  001864  26D9               	addwf	fsr2l,f,c
  2442  001866  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2443  001868  22DA               	addwfc	fsr2h,f,c
  2444  00186A  0EFF               	movlw	255
  2445  00186C  6EDF               	movwf	indf2,c
  2446                           
  2447                           ;FRAME.c: 238: }
  2448  00186E  0012               	return		;funcret
  2449  001870                     __end_of_FRAME_ExcitationValue:
  2450                           	opt callstack 0
  2451                           
  2452 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2453 ;; Defined at:
  2454 ;;		line 257 in file "FRAME.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  message         2    5[COMRAM] PTR struct .
  2457 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  i               2    8[COMRAM] unsigned short 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2473 ;;Total ram usage:        5 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_FRAME_HandleCanFrame
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text17
  2484  0016DA                     __ptext17:
  2485                           	opt callstack 0
  2486  0016DA                     _FRAME_ExcitationMultiplier:
  2487                           	opt callstack 25
  2488                           
  2489                           ;FRAME.c: 259: WORD i;;FRAME.c: 261: if(message->message_type == 0x02)
  2490                           
  2491                           ;incstack = 0
  2492  0016DA  EE20 F001          	lfsr	2,1
  2493  0016DE  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2494  0016E0  26D9               	addwf	fsr2l,f,c
  2495  0016E2  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2496  0016E4  22DA               	addwfc	fsr2h,f,c
  2497  0016E6  0E02               	movlw	2
  2498  0016E8  18DE               	xorwf	postinc2,w,c
  2499  0016EA  A4D8               	btfss	status,2,c
  2500  0016EC  0012               	return	
  2501                           
  2502                           ;FRAME.c: 262: {;FRAME.c: 263: message->data_length = 1;
  2503  0016EE  EE20 F010          	lfsr	2,16
  2504  0016F2  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2505  0016F4  26D9               	addwf	fsr2l,f,c
  2506  0016F6  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2507  0016F8  22DA               	addwfc	fsr2h,f,c
  2508  0016FA  0E01               	movlw	1
  2509  0016FC  6EDF               	movwf	indf2,c
  2510                           
  2511                           ;FRAME.c: 264: for(i=0; i<3; i++)
  2512  0016FE  0E00               	movlw	0
  2513  001700  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2514  001702  0E00               	movlw	0
  2515  001704  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2516  001706                     l4373:
  2517                           
  2518                           ;FRAME.c: 265: {
  2519  001706  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2520  001708  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2521  00170A  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2522  00170C  E104               	bnz	u2710
  2523  00170E  0E03               	movlw	3
  2524  001710  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2525  001712  A0D8               	btfss	status,0,c
  2526  001714  D7F8               	goto	l4373
  2527  001716                     u2710:
  2528                           
  2529                           ;FRAME.c: 268: };FRAME.c: 269: message->data[0] = 0xFF;
  2530  001716  EE20 F008          	lfsr	2,8
  2531  00171A  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2532  00171C  26D9               	addwf	fsr2l,f,c
  2533  00171E  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2534  001720  22DA               	addwfc	fsr2h,f,c
  2535  001722  0EFF               	movlw	255
  2536  001724  6EDF               	movwf	indf2,c
  2537                           
  2538                           ;FRAME.c: 270: }
  2539  001726  0012               	return		;funcret
  2540  001728                     __end_of_FRAME_ExcitationMultiplier:
  2541                           	opt callstack 0
  2542                           
  2543 ;; *************** function _FRAME_DeviceReset *****************
  2544 ;; Defined at:
  2545 ;;		line 411 in file "FRAME.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  message         2   14[COMRAM] PTR struct .
  2548 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    6
  2567 ;; This function calls:
  2568 ;;		_FRAME_DataUpdateAndChangeOption
  2569 ;;		_WriteDataToEEPROM
  2570 ;; This function is called by:
  2571 ;;		_FRAME_HandleCanFrame
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text18
  2576  000BCA                     __ptext18:
  2577                           	opt callstack 0
  2578  000BCA                     _FRAME_DeviceReset:
  2579                           	opt callstack 22
  2580                           
  2581                           ;FRAME.c: 413: if(message->message_type == 0x02)
  2582                           
  2583                           ;incstack = 0
  2584  000BCA  EE20 F001          	lfsr	2,1
  2585  000BCE  500F               	movf	FRAME_DeviceReset@message,w,c
  2586  000BD0  26D9               	addwf	fsr2l,f,c
  2587  000BD2  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2588  000BD4  22DA               	addwfc	fsr2h,f,c
  2589  000BD6  0E02               	movlw	2
  2590  000BD8  18DE               	xorwf	postinc2,w,c
  2591  000BDA  A4D8               	btfss	status,2,c
  2592  000BDC  D057               	goto	l4395
  2593                           
  2594                           ;FRAME.c: 414: {;FRAME.c: 415: message->data_length = 1;
  2595  000BDE  EE20 F010          	lfsr	2,16
  2596  000BE2  500F               	movf	FRAME_DeviceReset@message,w,c
  2597  000BE4  26D9               	addwf	fsr2l,f,c
  2598  000BE6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2599  000BE8  22DA               	addwfc	fsr2h,f,c
  2600  000BEA  0E01               	movlw	1
  2601  000BEC  6EDF               	movwf	indf2,c
  2602                           
  2603                           ;FRAME.c: 417: message->data[0] = (RCON>>6) & 0x01;
  2604  000BEE  EE20 F008          	lfsr	2,8
  2605  000BF2  500F               	movf	FRAME_DeviceReset@message,w,c
  2606  000BF4  26D9               	addwf	fsr2l,f,c
  2607  000BF6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2608  000BF8  22DA               	addwfc	fsr2h,f,c
  2609  000BFA  44D0               	rlncf	4048,w,c	;volatile
  2610  000BFC  46E8               	rlncf	wreg,f,c
  2611  000BFE  0B03               	andlw	3
  2612  000C00  0B01               	andlw	1
  2613  000C02  6EDF               	movwf	indf2,c
  2614                           
  2615                           ;FRAME.c: 418: message->data[1] = Flagi.wykonanoZapisDoFlash;
  2616  000C04  EE20 F009          	lfsr	2,9
  2617  000C08  500F               	movf	FRAME_DeviceReset@message,w,c
  2618  000C0A  26D9               	addwf	fsr2l,f,c
  2619  000C0C  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2620  000C0E  22DA               	addwfc	fsr2h,f,c
  2621  000C10  0100               	movlb	0	; () banked
  2622  000C12  A9C6               	btfss	_Flagi& (0+255),4,b
  2623  000C14  D002               	goto	u2750
  2624  000C16  0E01               	movlw	1
  2625  000C18  D001               	goto	u2756
  2626  000C1A                     u2750:
  2627  000C1A  0E00               	movlw	0
  2628  000C1C                     u2756:
  2629  000C1C  6EDF               	movwf	indf2,c
  2630                           
  2631                           ;FRAME.c: 419: message->data[2] = Flagi.pomiarTla;
  2632  000C1E  EE20 F00A          	lfsr	2,10
  2633  000C22  500F               	movf	FRAME_DeviceReset@message,w,c
  2634  000C24  26D9               	addwf	fsr2l,f,c
  2635  000C26  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2636  000C28  22DA               	addwfc	fsr2h,f,c
  2637  000C2A  A1C6               	btfss	_Flagi& (0+255),0,b
  2638  000C2C  D002               	goto	u2760
  2639  000C2E  0E01               	movlw	1
  2640  000C30  D001               	goto	u2766
  2641  000C32                     u2760:
  2642  000C32  0E00               	movlw	0
  2643  000C34                     u2766:
  2644  000C34  6EDF               	movwf	indf2,c
  2645                           
  2646                           ;FRAME.c: 420: message->data[3] = 0;
  2647  000C36  EE20 F00B          	lfsr	2,11
  2648  000C3A  500F               	movf	FRAME_DeviceReset@message,w,c
  2649  000C3C  26D9               	addwf	fsr2l,f,c
  2650  000C3E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2651  000C40  22DA               	addwfc	fsr2h,f,c
  2652  000C42  0E00               	movlw	0
  2653  000C44  6EDF               	movwf	indf2,c
  2654                           
  2655                           ;FRAME.c: 421: message->data[4] = Dane->rokU16;
  2656  000C46  EE20 F00C          	lfsr	2,12
  2657  000C4A  500F               	movf	FRAME_DeviceReset@message,w,c
  2658  000C4C  26D9               	addwf	fsr2l,f,c
  2659  000C4E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2660  000C50  22DA               	addwfc	fsr2h,f,c
  2661  000C52  C036 FFDF          	movff	54,indf2
  2662                           
  2663                           ;FRAME.c: 422: message->data[5] = Dane->miesiacU16;
  2664  000C56  EE20 F00D          	lfsr	2,13
  2665  000C5A  500F               	movf	FRAME_DeviceReset@message,w,c
  2666  000C5C  26D9               	addwf	fsr2l,f,c
  2667  000C5E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2668  000C60  22DA               	addwfc	fsr2h,f,c
  2669  000C62  C038 FFDF          	movff	56,indf2
  2670                           
  2671                           ;FRAME.c: 423: message->data[6] = Dane->dzienU16;
  2672  000C66  EE20 F00E          	lfsr	2,14
  2673  000C6A  500F               	movf	FRAME_DeviceReset@message,w,c
  2674  000C6C  26D9               	addwf	fsr2l,f,c
  2675  000C6E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2676  000C70  22DA               	addwfc	fsr2h,f,c
  2677  000C72  C03A FFDF          	movff	58,indf2
  2678                           
  2679                           ;FRAME.c: 424: message->data[7] = Dane->godzinaU16;
  2680  000C76  EE20 F00F          	lfsr	2,15
  2681  000C7A  500F               	movf	FRAME_DeviceReset@message,w,c
  2682  000C7C  26D9               	addwf	fsr2l,f,c
  2683  000C7E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2684  000C80  22DA               	addwfc	fsr2h,f,c
  2685  000C82  C03C FFDF          	movff	60,indf2
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;FRAME.c: 425: RCON &= ~(1<<6);
  2689  000C86  9CD0               	bcf	4048,6,c	;volatile
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;FRAME.c: 426: Flagi.wykonanoZapisDoFlash = 0;
  2693  000C88  99C6               	bcf	_Flagi& (0+255),4,b
  2694                           
  2695                           ;FRAME.c: 440: }
  2696  000C8A  0012               	return	
  2697  000C8C                     l4395:
  2698                           
  2699                           ;FRAME.c: 441: else;FRAME.c: 442: {;FRAME.c: 443: message->data_length = 1;
  2700  000C8C  EE20 F010          	lfsr	2,16
  2701  000C90  500F               	movf	FRAME_DeviceReset@message,w,c
  2702  000C92  26D9               	addwf	fsr2l,f,c
  2703  000C94  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2704  000C96  22DA               	addwfc	fsr2h,f,c
  2705  000C98  0E01               	movlw	1
  2706  000C9A  6EDF               	movwf	indf2,c
  2707                           
  2708                           ;FRAME.c: 445: if(message->data[2])
  2709  000C9C  EE20 F00A          	lfsr	2,10
  2710  000CA0  500F               	movf	FRAME_DeviceReset@message,w,c
  2711  000CA2  26D9               	addwf	fsr2l,f,c
  2712  000CA4  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2713  000CA6  22DA               	addwfc	fsr2h,f,c
  2714  000CA8  50DF               	movf	indf2,w,c
  2715  000CAA  B4D8               	btfsc	status,2,c
  2716  000CAC  D00F               	goto	l4405
  2717                           
  2718                           ;FRAME.c: 446: {;FRAME.c: 447: Flagi.pomiarTla = 1;
  2719  000CAE  0100               	movlb	0	; () banked
  2720  000CB0  81C6               	bsf	_Flagi& (0+255),0,b
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;FRAME.c: 448: if(message->data[1])
  2724  000CB2  EE20 F009          	lfsr	2,9
  2725  000CB6  500F               	movf	FRAME_DeviceReset@message,w,c
  2726  000CB8  26D9               	addwf	fsr2l,f,c
  2727  000CBA  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2728  000CBC  22DA               	addwfc	fsr2h,f,c
  2729  000CBE  50DF               	movf	indf2,w,c
  2730  000CC0  B4D8               	btfsc	status,2,c
  2731  000CC2  D01E               	goto	l4413
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;FRAME.c: 449: {;FRAME.c: 450: Flagi.zapisDoFlash = 1;
  2735  000CC4  87C6               	bsf	_Flagi& (0+255),3,b
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;FRAME.c: 451: WriteDataToEEPROM();
  2739  000CC6  EC1B  F007         	call	_WriteDataToEEPROM	;wreg free
  2740  000CCA  D01A               	goto	l4413
  2741  000CCC                     l4405:
  2742                           
  2743                           ;FRAME.c: 454: else;FRAME.c: 455: {;FRAME.c: 456: if(message->data[1])
  2744  000CCC  EE20 F009          	lfsr	2,9
  2745  000CD0  500F               	movf	FRAME_DeviceReset@message,w,c
  2746  000CD2  26D9               	addwf	fsr2l,f,c
  2747  000CD4  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2748  000CD6  22DA               	addwfc	fsr2h,f,c
  2749  000CD8  50DF               	movf	indf2,w,c
  2750  000CDA  B4D8               	btfsc	status,2,c
  2751  000CDC  D008               	goto	l4409
  2752                           
  2753                           ;FRAME.c: 457: {;FRAME.c: 458: FRAME_DataUpdateAndChangeOption(message);
  2754  000CDE  C00F  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2755  000CE2  C010  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2756  000CE6  ECEB  F00A         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2757                           
  2758                           ;FRAME.c: 459: WriteDataToEEPROM();
  2759  000CEA  EC1B  F007         	call	_WriteDataToEEPROM	;wreg free
  2760  000CEE                     l4409:
  2761                           
  2762                           ;FRAME.c: 461: };FRAME.c: 462: if(message->data[0])
  2763  000CEE  EE20 F008          	lfsr	2,8
  2764  000CF2  500F               	movf	FRAME_DeviceReset@message,w,c
  2765  000CF4  26D9               	addwf	fsr2l,f,c
  2766  000CF6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2767  000CF8  22DA               	addwfc	fsr2h,f,c
  2768  000CFA  50DF               	movf	indf2,w,c
  2769  000CFC  A4D8               	btfss	status,2,c
  2770  000CFE  00FF               	reset		;# 
  2771  000D00                     l4413:
  2772                           
  2773                           ;FRAME.c: 465: };FRAME.c: 466: };FRAME.c: 467: message->data[0] = 0xFF;
  2774  000D00  EE20 F008          	lfsr	2,8
  2775  000D04  500F               	movf	FRAME_DeviceReset@message,w,c
  2776  000D06  26D9               	addwf	fsr2l,f,c
  2777  000D08  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2778  000D0A  22DA               	addwfc	fsr2h,f,c
  2779  000D0C  0EFF               	movlw	255
  2780  000D0E  6EDF               	movwf	indf2,c
  2781  000D10  0012               	return		;funcret
  2782  000D12                     __end_of_FRAME_DeviceReset:
  2783                           	opt callstack 0
  2784                           
  2785 ;; *************** function _WriteDataToEEPROM *****************
  2786 ;; Defined at:
  2787 ;;		line 539 in file "FRAME.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    5
  2808 ;; This function calls:
  2809 ;;		_NVMWrite
  2810 ;; This function is called by:
  2811 ;;		_FRAME_DeviceReset
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text19
  2816  000E36                     __ptext19:
  2817                           	opt callstack 0
  2818  000E36                     _WriteDataToEEPROM:
  2819                           	opt callstack 22
  2820                           
  2821                           ;FRAME.c: 541: NVMWrite(&Init_Data,10,2);
  2822                           
  2823                           ;incstack = 0
  2824  000E36  0E56               	movlw	low _Init_Data
  2825  000E38  6E09               	movwf	NVMWrite@source,c
  2826  000E3A  0E00               	movlw	high _Init_Data
  2827  000E3C  6E0A               	movwf	NVMWrite@source+1,c
  2828  000E3E  0E00               	movlw	0
  2829  000E40  6E0C               	movwf	NVMWrite@addr+1,c
  2830  000E42  0E0A               	movlw	10
  2831  000E44  6E0B               	movwf	NVMWrite@addr,c
  2832  000E46  0E00               	movlw	0
  2833  000E48  6E0E               	movwf	NVMWrite@count+1,c
  2834  000E4A  0E02               	movlw	2
  2835  000E4C  6E0D               	movwf	NVMWrite@count,c
  2836  000E4E  EC38  F00C         	call	_NVMWrite	;wreg free
  2837                           
  2838                           ;FRAME.c: 542: NVMWrite(&NeightAdress1,13,2);
  2839  000E52  0E4B               	movlw	low _NeightAdress1
  2840  000E54  6E09               	movwf	NVMWrite@source,c
  2841  000E56  0E00               	movlw	high _NeightAdress1
  2842  000E58  6E0A               	movwf	NVMWrite@source+1,c
  2843  000E5A  0E00               	movlw	0
  2844  000E5C  6E0C               	movwf	NVMWrite@addr+1,c
  2845  000E5E  0E0D               	movlw	13
  2846  000E60  6E0B               	movwf	NVMWrite@addr,c
  2847  000E62  0E00               	movlw	0
  2848  000E64  6E0E               	movwf	NVMWrite@count+1,c
  2849  000E66  0E02               	movlw	2
  2850  000E68  6E0D               	movwf	NVMWrite@count,c
  2851  000E6A  EC38  F00C         	call	_NVMWrite	;wreg free
  2852                           
  2853                           ;FRAME.c: 543: NVMWrite(&NeightAdress2,16,2);
  2854  000E6E  0E58               	movlw	low _NeightAdress2
  2855  000E70  6E09               	movwf	NVMWrite@source,c
  2856  000E72  0E00               	movlw	high _NeightAdress2
  2857  000E74  6E0A               	movwf	NVMWrite@source+1,c
  2858  000E76  0E00               	movlw	0
  2859  000E78  6E0C               	movwf	NVMWrite@addr+1,c
  2860  000E7A  0E10               	movlw	16
  2861  000E7C  6E0B               	movwf	NVMWrite@addr,c
  2862  000E7E  0E00               	movlw	0
  2863  000E80  6E0E               	movwf	NVMWrite@count+1,c
  2864  000E82  0E02               	movlw	2
  2865  000E84  6E0D               	movwf	NVMWrite@count,c
  2866  000E86  EC38  F00C         	call	_NVMWrite	;wreg free
  2867                           
  2868                           ;FRAME.c: 544: NVMWrite(&NeightAdress3,19,2);
  2869  000E8A  0E49               	movlw	low _NeightAdress3
  2870  000E8C  6E09               	movwf	NVMWrite@source,c
  2871  000E8E  0E00               	movlw	high _NeightAdress3
  2872  000E90  6E0A               	movwf	NVMWrite@source+1,c
  2873  000E92  0E00               	movlw	0
  2874  000E94  6E0C               	movwf	NVMWrite@addr+1,c
  2875  000E96  0E13               	movlw	19
  2876  000E98  6E0B               	movwf	NVMWrite@addr,c
  2877  000E9A  0E00               	movlw	0
  2878  000E9C  6E0E               	movwf	NVMWrite@count+1,c
  2879  000E9E  0E02               	movlw	2
  2880  000EA0  6E0D               	movwf	NVMWrite@count,c
  2881  000EA2  EC38  F00C         	call	_NVMWrite	;wreg free
  2882                           
  2883                           ;FRAME.c: 545: NVMWrite(&NeightAdress4,22,2);
  2884  000EA6  0E47               	movlw	low _NeightAdress4
  2885  000EA8  6E09               	movwf	NVMWrite@source,c
  2886  000EAA  0E00               	movlw	high _NeightAdress4
  2887  000EAC  6E0A               	movwf	NVMWrite@source+1,c
  2888  000EAE  0E00               	movlw	0
  2889  000EB0  6E0C               	movwf	NVMWrite@addr+1,c
  2890  000EB2  0E16               	movlw	22
  2891  000EB4  6E0B               	movwf	NVMWrite@addr,c
  2892  000EB6  0E00               	movlw	0
  2893  000EB8  6E0E               	movwf	NVMWrite@count+1,c
  2894  000EBA  0E02               	movlw	2
  2895  000EBC  6E0D               	movwf	NVMWrite@count,c
  2896  000EBE  EC38  F00C         	call	_NVMWrite	;wreg free
  2897                           
  2898                           ;FRAME.c: 546: NVMWrite(&NeightAdress5,25,2);
  2899  000EC2  0E45               	movlw	low _NeightAdress5
  2900  000EC4  6E09               	movwf	NVMWrite@source,c
  2901  000EC6  0E00               	movlw	high _NeightAdress5
  2902  000EC8  6E0A               	movwf	NVMWrite@source+1,c
  2903  000ECA  0E00               	movlw	0
  2904  000ECC  6E0C               	movwf	NVMWrite@addr+1,c
  2905  000ECE  0E19               	movlw	25
  2906  000ED0  6E0B               	movwf	NVMWrite@addr,c
  2907  000ED2  0E00               	movlw	0
  2908  000ED4  6E0E               	movwf	NVMWrite@count+1,c
  2909  000ED6  0E02               	movlw	2
  2910  000ED8  6E0D               	movwf	NVMWrite@count,c
  2911  000EDA  EC38  F00C         	call	_NVMWrite	;wreg free
  2912                           
  2913                           ;FRAME.c: 547: NVMWrite(&NeightAdress6,28,2);
  2914  000EDE  0E43               	movlw	low _NeightAdress6
  2915  000EE0  6E09               	movwf	NVMWrite@source,c
  2916  000EE2  0E00               	movlw	high _NeightAdress6
  2917  000EE4  6E0A               	movwf	NVMWrite@source+1,c
  2918  000EE6  0E00               	movlw	0
  2919  000EE8  6E0C               	movwf	NVMWrite@addr+1,c
  2920  000EEA  0E1C               	movlw	28
  2921  000EEC  6E0B               	movwf	NVMWrite@addr,c
  2922  000EEE  0E00               	movlw	0
  2923  000EF0  6E0E               	movwf	NVMWrite@count+1,c
  2924  000EF2  0E02               	movlw	2
  2925  000EF4  6E0D               	movwf	NVMWrite@count,c
  2926  000EF6  EC38  F00C         	call	_NVMWrite	;wreg free
  2927                           
  2928                           ;FRAME.c: 548: NVMWrite(&NeightAdress7,31,2);
  2929  000EFA  0E41               	movlw	low _NeightAdress7
  2930  000EFC  6E09               	movwf	NVMWrite@source,c
  2931  000EFE  0E00               	movlw	high _NeightAdress7
  2932  000F00  6E0A               	movwf	NVMWrite@source+1,c
  2933  000F02  0E00               	movlw	0
  2934  000F04  6E0C               	movwf	NVMWrite@addr+1,c
  2935  000F06  0E1F               	movlw	31
  2936  000F08  6E0B               	movwf	NVMWrite@addr,c
  2937  000F0A  0E00               	movlw	0
  2938  000F0C  6E0E               	movwf	NVMWrite@count+1,c
  2939  000F0E  0E02               	movlw	2
  2940  000F10  6E0D               	movwf	NVMWrite@count,c
  2941  000F12  EC38  F00C         	call	_NVMWrite	;wreg free
  2942                           
  2943                           ;FRAME.c: 549: NVMWrite(&NeightAdress8,34,2);
  2944  000F16  0E3F               	movlw	low _NeightAdress8
  2945  000F18  6E09               	movwf	NVMWrite@source,c
  2946  000F1A  0E00               	movlw	high _NeightAdress8
  2947  000F1C  6E0A               	movwf	NVMWrite@source+1,c
  2948  000F1E  0E00               	movlw	0
  2949  000F20  6E0C               	movwf	NVMWrite@addr+1,c
  2950  000F22  0E22               	movlw	34
  2951  000F24  6E0B               	movwf	NVMWrite@addr,c
  2952  000F26  0E00               	movlw	0
  2953  000F28  6E0E               	movwf	NVMWrite@count+1,c
  2954  000F2A  0E02               	movlw	2
  2955  000F2C  6E0D               	movwf	NVMWrite@count,c
  2956  000F2E  EC38  F00C         	call	_NVMWrite	;wreg free
  2957  000F32  0012               	return		;funcret
  2958  000F34                     __end_of_WriteDataToEEPROM:
  2959                           	opt callstack 0
  2960                           
  2961 ;; *************** function _NVMWrite *****************
  2962 ;; Defined at:
  2963 ;;		line 148 in file "EEPROM.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  source          2    8[COMRAM] PTR unsigned char 
  2966 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  2967 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  2968 ;;		 -> NeightAdress1(2), 
  2969 ;;  addr            2   10[COMRAM] unsigned short 
  2970 ;;  count           2   12[COMRAM] unsigned short 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2982 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;Total ram usage:        6 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    4
  2989 ;; This function calls:
  2990 ;;		_WritetoEEPROM
  2991 ;; This function is called by:
  2992 ;;		_WriteDataToEEPROM
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text20
  2997  001870                     __ptext20:
  2998                           	opt callstack 0
  2999  001870                     _NVMWrite:
  3000                           	opt callstack 22
  3001                           
  3002                           ;EEPROM.c: 150: while(count > 0)
  3003                           
  3004                           ;incstack = 0
  3005  001870  D015               	goto	l3887
  3006  001872                     l935:
  3007  001872  B2A6               	btfsc	4006,1,c	;volsfr
  3008  001874  D7FE               	goto	l935
  3009                           
  3010                           ;EEPROM.c: 153: WritetoEEPROM(addr++,*source);
  3011  001876  C00B  F006         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3012  00187A  C00C  F007         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3013  00187E  C009  FFD9         	movff	NVMWrite@source,fsr2l
  3014  001882  C00A  FFDA         	movff	NVMWrite@source+1,fsr2h
  3015  001886  50DF               	movf	indf2,w,c
  3016  001888  6E08               	movwf	WritetoEEPROM@Data,c
  3017  00188A  ECA4  F00C         	call	_WritetoEEPROM	;wreg free
  3018  00188E  4A0B               	infsnz	NVMWrite@addr,f,c
  3019  001890  2A0C               	incf	NVMWrite@addr+1,f,c
  3020                           
  3021                           ;EEPROM.c: 154: count--;
  3022  001892  060D               	decf	NVMWrite@count,f,c
  3023  001894  A0D8               	btfss	status,0,c
  3024  001896  060E               	decf	NVMWrite@count+1,f,c
  3025                           
  3026                           ;EEPROM.c: 155: source++;
  3027  001898  4A09               	infsnz	NVMWrite@source,f,c
  3028  00189A  2A0A               	incf	NVMWrite@source+1,f,c
  3029  00189C                     l3887:
  3030  00189C  500D               	movf	NVMWrite@count,w,c
  3031  00189E  100E               	iorwf	NVMWrite@count+1,w,c
  3032  0018A0  B4D8               	btfsc	status,2,c
  3033  0018A2  0012               	return	
  3034  0018A4  D7E6               	goto	l935
  3035  0018A6                     __end_of_NVMWrite:
  3036                           	opt callstack 0
  3037                           
  3038 ;; *************** function _WritetoEEPROM *****************
  3039 ;; Defined at:
  3040 ;;		line 95 in file "EEPROM.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  Address         2    5[COMRAM] unsigned short 
  3043 ;;  Data            1    7[COMRAM] unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3055 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;Total ram usage:        3 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    3
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_NVMWrite
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text21
  3070  001948                     __ptext21:
  3071                           	opt callstack 0
  3072  001948                     _WritetoEEPROM:
  3073                           	opt callstack 22
  3074                           
  3075                           ;EEPROM.c: 97: static BYTE GIE_Status;;EEPROM.c: 99: EEADRH = (BYTE)(Address>>8);
  3076                           
  3077                           ;incstack = 0
  3078  001948  5007               	movf	WritetoEEPROM@Address+1,w,c
  3079  00194A  6EAA               	movwf	4010,c	;volatile
  3080                           
  3081                           ;EEPROM.c: 100: EEADR = (BYTE)Address;
  3082  00194C  C006  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3083                           
  3084                           ;EEPROM.c: 101: EEDATA = Data;
  3085  001950  C008  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3086                           
  3087                           ;EEPROM.c: 102: EECON1bits.WREN = 1;
  3088  001954  84A6               	bsf	4006,2,c	;volsfr
  3089                           
  3090                           ;EEPROM.c: 103: GIE_Status = INTCONbits.GIE;
  3091  001956  0E00               	movlw	0
  3092  001958  BEF2               	btfsc	4082,7,c	;volatile
  3093  00195A  0E01               	movlw	1
  3094  00195C  6E35               	movwf	WritetoEEPROM@GIE_Status,c
  3095                           
  3096                           ;EEPROM.c: 104: INTCONbits.GIE = 0;
  3097  00195E  9EF2               	bcf	4082,7,c	;volatile
  3098                           
  3099                           ;EEPROM.c: 105: EECON2 = 0x55;
  3100  001960  0E55               	movlw	85
  3101  001962  6EA7               	movwf	4007,c	;volsfr
  3102                           
  3103                           ;EEPROM.c: 106: EECON2 = 0xAA;
  3104  001964  0EAA               	movlw	170
  3105  001966  6EA7               	movwf	4007,c	;volsfr
  3106                           
  3107                           ;EEPROM.c: 107: EECON1bits.WR = 1;
  3108  001968  82A6               	bsf	4006,1,c	;volsfr
  3109                           
  3110                           ;EEPROM.c: 108: INTCONbits.GIE = GIE_Status;
  3111  00196A  B035               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3112  00196C  D002               	bra	u2175
  3113  00196E  9EF2               	bcf	4082,7,c	;volatile
  3114  001970  D001               	bra	u2176
  3115  001972                     u2175:
  3116  001972  8EF2               	bsf	4082,7,c	;volatile
  3117  001974                     u2176:
  3118                           
  3119                           ;EEPROM.c: 109: EECON1bits.WREN = 0;
  3120  001974  94A6               	bcf	4006,2,c	;volsfr
  3121  001976                     l918:
  3122  001976  B2A6               	btfsc	4006,1,c	;volsfr
  3123  001978  D7FE               	goto	l918
  3124  00197A  0012               	return	
  3125  00197C                     __end_of_WritetoEEPROM:
  3126                           	opt callstack 0
  3127                           
  3128 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3129 ;; Defined at:
  3130 ;;		line 390 in file "FRAME.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  message         2    5[COMRAM] PTR struct .
  3133 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3148 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3149 ;;Total ram usage:        3 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    3
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_FRAME_DeviceReset
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text22
  3160  0015D6                     __ptext22:
  3161                           	opt callstack 0
  3162  0015D6                     _FRAME_DataUpdateAndChangeOption:
  3163                           	opt callstack 24
  3164                           
  3165                           ;FRAME.c: 393: Dane->rokU16 = message->data[4];
  3166                           
  3167                           ;incstack = 0
  3168  0015D6  EE20 F00C          	lfsr	2,12
  3169  0015DA  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3170  0015DC  26D9               	addwf	fsr2l,f,c
  3171  0015DE  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3172  0015E0  22DA               	addwfc	fsr2h,f,c
  3173  0015E2  50DF               	movf	indf2,w,c
  3174  0015E4  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3175  0015E6  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3176  0015E8  6E36               	movwf	54,c
  3177  0015EA  6A37               	clrf	55,c
  3178                           
  3179                           ;FRAME.c: 394: Dane->miesiacU16 = message->data[5];
  3180  0015EC  EE20 F00D          	lfsr	2,13
  3181  0015F0  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3182  0015F2  26D9               	addwf	fsr2l,f,c
  3183  0015F4  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3184  0015F6  22DA               	addwfc	fsr2h,f,c
  3185  0015F8  50DF               	movf	indf2,w,c
  3186  0015FA  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3187  0015FC  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3188  0015FE  6E38               	movwf	56,c
  3189  001600  6A39               	clrf	57,c
  3190                           
  3191                           ;FRAME.c: 395: Dane->dzienU16 = message->data[6];
  3192  001602  EE20 F00E          	lfsr	2,14
  3193  001606  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3194  001608  26D9               	addwf	fsr2l,f,c
  3195  00160A  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3196  00160C  22DA               	addwfc	fsr2h,f,c
  3197  00160E  50DF               	movf	indf2,w,c
  3198  001610  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3199  001612  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3200  001614  6E3A               	movwf	58,c
  3201  001616  6A3B               	clrf	59,c
  3202                           
  3203                           ;FRAME.c: 396: Dane->godzinaU16 = message->data[7];
  3204  001618  EE20 F00F          	lfsr	2,15
  3205  00161C  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3206  00161E  26D9               	addwf	fsr2l,f,c
  3207  001620  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3208  001622  22DA               	addwfc	fsr2h,f,c
  3209  001624  50DF               	movf	indf2,w,c
  3210  001626  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3211  001628  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3212  00162A  6E3C               	movwf	60,c
  3213  00162C  6A3D               	clrf	61,c
  3214  00162E  0012               	return		;funcret
  3215  001630                     __end_of_FRAME_DataUpdateAndChangeOption:
  3216                           	opt callstack 0
  3217                           
  3218 ;; *************** function _FRAME_AxisStatus *****************
  3219 ;; Defined at:
  3220 ;;		line 354 in file "FRAME.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  message         2    5[COMRAM] PTR struct .
  3223 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  i               2    0        unsigned short 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3239 ;;Total ram usage:        3 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    3
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_FRAME_HandleCanFrame
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text23
  3250  0018A6                     __ptext23:
  3251                           	opt callstack 0
  3252  0018A6                     _FRAME_AxisStatus:
  3253                           	opt callstack 25
  3254                           
  3255                           ;FRAME.c: 356: WORD i;;FRAME.c: 358: if(message->message_type == 0x02)
  3256                           
  3257                           ;incstack = 0
  3258  0018A6  EE20 F001          	lfsr	2,1
  3259  0018AA  5006               	movf	FRAME_AxisStatus@message,w,c
  3260  0018AC  26D9               	addwf	fsr2l,f,c
  3261  0018AE  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3262  0018B0  22DA               	addwfc	fsr2h,f,c
  3263  0018B2  0E02               	movlw	2
  3264  0018B4  18DE               	xorwf	postinc2,w,c
  3265  0018B6  A4D8               	btfss	status,2,c
  3266  0018B8  0012               	return	
  3267                           
  3268                           ;FRAME.c: 359: {;FRAME.c: 360: message->data_length = 1;
  3269  0018BA  EE20 F010          	lfsr	2,16
  3270  0018BE  5006               	movf	FRAME_AxisStatus@message,w,c
  3271  0018C0  26D9               	addwf	fsr2l,f,c
  3272  0018C2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3273  0018C4  22DA               	addwfc	fsr2h,f,c
  3274  0018C6  0E01               	movlw	1
  3275  0018C8  6EDF               	movwf	indf2,c
  3276                           
  3277                           ;FRAME.c: 371: message->data[0] = 0xFF;
  3278  0018CA  EE20 F008          	lfsr	2,8
  3279  0018CE  5006               	movf	FRAME_AxisStatus@message,w,c
  3280  0018D0  26D9               	addwf	fsr2l,f,c
  3281  0018D2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3282  0018D4  22DA               	addwfc	fsr2h,f,c
  3283  0018D6  0EFF               	movlw	255
  3284  0018D8  6EDF               	movwf	indf2,c
  3285                           
  3286                           ;FRAME.c: 372: }
  3287  0018DA  0012               	return		;funcret
  3288  0018DC                     __end_of_FRAME_AxisStatus:
  3289                           	opt callstack 0
  3290                           
  3291 ;; *************** function _FRAME_AveragingTimes *****************
  3292 ;; Defined at:
  3293 ;;		line 290 in file "FRAME.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  message         2    5[COMRAM] PTR struct .
  3296 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;Total ram usage:        3 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    3
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_FRAME_HandleCanFrame
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text24
  3323  0018DC                     __ptext24:
  3324                           	opt callstack 0
  3325  0018DC                     _FRAME_AveragingTimes:
  3326                           	opt callstack 25
  3327                           
  3328                           ;FRAME.c: 292: if(message->message_type == 0x02)
  3329                           
  3330                           ;incstack = 0
  3331  0018DC  EE20 F001          	lfsr	2,1
  3332  0018E0  5006               	movf	FRAME_AveragingTimes@message,w,c
  3333  0018E2  26D9               	addwf	fsr2l,f,c
  3334  0018E4  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3335  0018E6  22DA               	addwfc	fsr2h,f,c
  3336  0018E8  0E02               	movlw	2
  3337  0018EA  18DE               	xorwf	postinc2,w,c
  3338  0018EC  A4D8               	btfss	status,2,c
  3339  0018EE  0012               	return	
  3340                           
  3341                           ;FRAME.c: 293: {;FRAME.c: 294: message->data_length = 1;
  3342  0018F0  EE20 F010          	lfsr	2,16
  3343  0018F4  5006               	movf	FRAME_AveragingTimes@message,w,c
  3344  0018F6  26D9               	addwf	fsr2l,f,c
  3345  0018F8  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3346  0018FA  22DA               	addwfc	fsr2h,f,c
  3347  0018FC  0E01               	movlw	1
  3348  0018FE  6EDF               	movwf	indf2,c
  3349                           
  3350                           ;FRAME.c: 302: message->data[0] = 0xFF;
  3351  001900  EE20 F008          	lfsr	2,8
  3352  001904  5006               	movf	FRAME_AveragingTimes@message,w,c
  3353  001906  26D9               	addwf	fsr2l,f,c
  3354  001908  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3355  00190A  22DA               	addwfc	fsr2h,f,c
  3356  00190C  0EFF               	movlw	255
  3357  00190E  6EDF               	movwf	indf2,c
  3358                           
  3359                           ;FRAME.c: 303: }
  3360  001910  0012               	return		;funcret
  3361  001912                     __end_of_FRAME_AveragingTimes:
  3362                           	opt callstack 0
  3363                           
  3364 ;; *************** function _FRAME_AnalogValue *****************
  3365 ;; Defined at:
  3366 ;;		line 648 in file "FRAME.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  message         2    5[COMRAM] PTR struct .
  3369 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3370 ;;  set             2    7[COMRAM] unsigned short 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  i               2    0        unsigned short 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		None
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;Total ram usage:        4 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    3
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_FRAME_HandleCanFrame
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text25
  3397  001B9A                     __ptext25:
  3398                           	opt callstack 0
  3399  001B9A                     _FRAME_AnalogValue:
  3400                           	opt callstack 25
  3401                           
  3402                           ;incstack = 0
  3403  001B9A  0012               	return		;funcret
  3404  001B9C                     __end_of_FRAME_AnalogValue:
  3405                           	opt callstack 0
  3406                           
  3407 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3408 ;; Defined at:
  3409 ;;		line 706 in file "FRAME.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  message         2    5[COMRAM] PTR struct .
  3412 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3413 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  kier            2   13[COMRAM] unsigned short 
  3416 ;;  it              2    0        unsigned short 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3426 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;Total ram usage:       10 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    4
  3433 ;; This function calls:
  3434 ;;		_CAN_SetupFilter_Ne
  3435 ;; This function is called by:
  3436 ;;		_FRAME_HandleCanFrame
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text26
  3441  000062                     __ptext26:
  3442                           	opt callstack 0
  3443  000062                     _FRAME_AdressOfNeighbors:
  3444                           	opt callstack 24
  3445                           
  3446                           ;FRAME.c: 708: WORD it;;FRAME.c: 711: WORD kier = (nrRamki-0x10);
  3447                           
  3448                           ;incstack = 0
  3449  000062  0EF0               	movlw	240
  3450  000064  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3451  000066  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  3452  000068  0EFF               	movlw	255
  3453  00006A  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3454  00006C  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3455                           
  3456                           ;FRAME.c: 712: if(message->message_type == 0x02)
  3457  00006E  EE20 F001          	lfsr	2,1
  3458  000072  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3459  000074  26D9               	addwf	fsr2l,f,c
  3460  000076  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3461  000078  22DA               	addwfc	fsr2h,f,c
  3462  00007A  0E02               	movlw	2
  3463  00007C  18DE               	xorwf	postinc2,w,c
  3464  00007E  A4D8               	btfss	status,2,c
  3465  000080  D08E               	goto	l4455
  3466                           
  3467                           ;FRAME.c: 713: {;FRAME.c: 715: message->data_length = 8;
  3468  000082  EE20 F010          	lfsr	2,16
  3469  000086  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3470  000088  26D9               	addwf	fsr2l,f,c
  3471  00008A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3472  00008C  22DA               	addwfc	fsr2h,f,c
  3473  00008E  0E08               	movlw	8
  3474  000090  6EDF               	movwf	indf2,c
  3475                           
  3476                           ;FRAME.c: 717: if(kier == 0)
  3477  000092  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3478  000094  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3479  000096  A4D8               	btfss	status,2,c
  3480  000098  D041               	goto	l4453
  3481                           
  3482                           ;FRAME.c: 718: {;FRAME.c: 719: message->data[0] = (NeightAdress1>> 8);
  3483  00009A  EE20 F008          	lfsr	2,8
  3484  00009E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3485  0000A0  26D9               	addwf	fsr2l,f,c
  3486  0000A2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3487  0000A4  22DA               	addwfc	fsr2h,f,c
  3488  0000A6  504C               	movf	_NeightAdress1+1,w,c	;volatile
  3489  0000A8  6EDF               	movwf	indf2,c
  3490                           
  3491                           ;FRAME.c: 720: message->data[1] = NeightAdress1 & 0b11111111;
  3492  0000AA  EE20 F009          	lfsr	2,9
  3493  0000AE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3494  0000B0  26D9               	addwf	fsr2l,f,c
  3495  0000B2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3496  0000B4  22DA               	addwfc	fsr2h,f,c
  3497  0000B6  C04B  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3498                           
  3499                           ;FRAME.c: 721: message->data[2] = (NeightAdress2>> 8);
  3500  0000BA  EE20 F00A          	lfsr	2,10
  3501  0000BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3502  0000C0  26D9               	addwf	fsr2l,f,c
  3503  0000C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3504  0000C4  22DA               	addwfc	fsr2h,f,c
  3505  0000C6  5059               	movf	_NeightAdress2+1,w,c	;volatile
  3506  0000C8  6EDF               	movwf	indf2,c
  3507                           
  3508                           ;FRAME.c: 722: message->data[3] = NeightAdress2 & 0b11111111;
  3509  0000CA  EE20 F00B          	lfsr	2,11
  3510  0000CE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3511  0000D0  26D9               	addwf	fsr2l,f,c
  3512  0000D2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3513  0000D4  22DA               	addwfc	fsr2h,f,c
  3514  0000D6  C058  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3515                           
  3516                           ;FRAME.c: 723: message->data[4] = (NeightAdress3>> 8);
  3517  0000DA  EE20 F00C          	lfsr	2,12
  3518  0000DE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3519  0000E0  26D9               	addwf	fsr2l,f,c
  3520  0000E2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3521  0000E4  22DA               	addwfc	fsr2h,f,c
  3522  0000E6  504A               	movf	_NeightAdress3+1,w,c	;volatile
  3523  0000E8  6EDF               	movwf	indf2,c
  3524                           
  3525                           ;FRAME.c: 724: message->data[5] = NeightAdress3 & 0b11111111;
  3526  0000EA  EE20 F00D          	lfsr	2,13
  3527  0000EE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3528  0000F0  26D9               	addwf	fsr2l,f,c
  3529  0000F2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3530  0000F4  22DA               	addwfc	fsr2h,f,c
  3531  0000F6  C049  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3532                           
  3533                           ;FRAME.c: 725: message->data[6] = (NeightAdress4>> 8);
  3534  0000FA  EE20 F00E          	lfsr	2,14
  3535  0000FE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3536  000100  26D9               	addwf	fsr2l,f,c
  3537  000102  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3538  000104  22DA               	addwfc	fsr2h,f,c
  3539  000106  5048               	movf	_NeightAdress4+1,w,c	;volatile
  3540  000108  6EDF               	movwf	indf2,c
  3541                           
  3542                           ;FRAME.c: 726: message->data[7] = NeightAdress4 & 0b11111111;
  3543  00010A  EE20 F00F          	lfsr	2,15
  3544  00010E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3545  000110  26D9               	addwf	fsr2l,f,c
  3546  000112  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3547  000114  22DA               	addwfc	fsr2h,f,c
  3548  000116  C047  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3549                           
  3550                           ;FRAME.c: 727: }
  3551  00011A  0012               	return	
  3552  00011C                     l4453:
  3553                           
  3554                           ;FRAME.c: 728: else;FRAME.c: 729: {;FRAME.c: 730: message->data[0] = (NeightAdress5>> 8)
      +                          ;
  3555  00011C  EE20 F008          	lfsr	2,8
  3556  000120  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3557  000122  26D9               	addwf	fsr2l,f,c
  3558  000124  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3559  000126  22DA               	addwfc	fsr2h,f,c
  3560  000128  5046               	movf	_NeightAdress5+1,w,c	;volatile
  3561  00012A  6EDF               	movwf	indf2,c
  3562                           
  3563                           ;FRAME.c: 731: message->data[1] = NeightAdress5 & 0b11111111;
  3564  00012C  EE20 F009          	lfsr	2,9
  3565  000130  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3566  000132  26D9               	addwf	fsr2l,f,c
  3567  000134  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3568  000136  22DA               	addwfc	fsr2h,f,c
  3569  000138  C045  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3570                           
  3571                           ;FRAME.c: 732: message->data[2] = (NeightAdress6>> 8);
  3572  00013C  EE20 F00A          	lfsr	2,10
  3573  000140  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3574  000142  26D9               	addwf	fsr2l,f,c
  3575  000144  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3576  000146  22DA               	addwfc	fsr2h,f,c
  3577  000148  5044               	movf	_NeightAdress6+1,w,c	;volatile
  3578  00014A  6EDF               	movwf	indf2,c
  3579                           
  3580                           ;FRAME.c: 733: message->data[3] = NeightAdress6 & 0b11111111;
  3581  00014C  EE20 F00B          	lfsr	2,11
  3582  000150  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3583  000152  26D9               	addwf	fsr2l,f,c
  3584  000154  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3585  000156  22DA               	addwfc	fsr2h,f,c
  3586  000158  C043  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3587                           
  3588                           ;FRAME.c: 734: message->data[4] = (NeightAdress7>> 8);
  3589  00015C  EE20 F00C          	lfsr	2,12
  3590  000160  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3591  000162  26D9               	addwf	fsr2l,f,c
  3592  000164  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3593  000166  22DA               	addwfc	fsr2h,f,c
  3594  000168  5042               	movf	_NeightAdress7+1,w,c	;volatile
  3595  00016A  6EDF               	movwf	indf2,c
  3596                           
  3597                           ;FRAME.c: 735: message->data[5] = NeightAdress7 & 0b11111111;
  3598  00016C  EE20 F00D          	lfsr	2,13
  3599  000170  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3600  000172  26D9               	addwf	fsr2l,f,c
  3601  000174  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3602  000176  22DA               	addwfc	fsr2h,f,c
  3603  000178  C041  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3604                           
  3605                           ;FRAME.c: 736: message->data[6] = (NeightAdress8>> 8);
  3606  00017C  EE20 F00E          	lfsr	2,14
  3607  000180  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3608  000182  26D9               	addwf	fsr2l,f,c
  3609  000184  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3610  000186  22DA               	addwfc	fsr2h,f,c
  3611  000188  5040               	movf	_NeightAdress8+1,w,c	;volatile
  3612  00018A  6EDF               	movwf	indf2,c
  3613                           
  3614                           ;FRAME.c: 737: message->data[7] = NeightAdress8 & 0b11111111;
  3615  00018C  EE20 F00F          	lfsr	2,15
  3616  000190  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3617  000192  26D9               	addwf	fsr2l,f,c
  3618  000194  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3619  000196  22DA               	addwfc	fsr2h,f,c
  3620  000198  C03F  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3621  00019C  0012               	return	
  3622  00019E                     l4455:
  3623                           
  3624                           ;FRAME.c: 743: else;FRAME.c: 744: {;FRAME.c: 747: if(kier == 0)
  3625  00019E  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3626  0001A0  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3627  0001A2  A4D8               	btfss	status,2,c
  3628  0001A4  D063               	goto	l4461
  3629                           
  3630                           ;FRAME.c: 748: {;FRAME.c: 749: NeightAdress1 = (message->data[0] << 8)| message->data[1]
      +                          ;
  3631  0001A6  EE20 F008          	lfsr	2,8
  3632  0001AA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3633  0001AC  26D9               	addwf	fsr2l,f,c
  3634  0001AE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3635  0001B0  22DA               	addwfc	fsr2h,f,c
  3636  0001B2  50DF               	movf	indf2,w,c
  3637  0001B4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3638  0001B6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3639  0001B8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3640  0001BA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3641  0001BC  EE20 F009          	lfsr	2,9
  3642  0001C0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3643  0001C2  26D9               	addwf	fsr2l,f,c
  3644  0001C4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3645  0001C6  22DA               	addwfc	fsr2h,f,c
  3646  0001C8  50DF               	movf	indf2,w,c
  3647  0001CA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3648  0001CC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3649  0001CE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3650  0001D0  6E4B               	movwf	_NeightAdress1,c	;volatile
  3651  0001D2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3652  0001D4  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  3653                           
  3654                           ;FRAME.c: 750: NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3655  0001D6  EE20 F00A          	lfsr	2,10
  3656  0001DA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3657  0001DC  26D9               	addwf	fsr2l,f,c
  3658  0001DE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3659  0001E0  22DA               	addwfc	fsr2h,f,c
  3660  0001E2  50DF               	movf	indf2,w,c
  3661  0001E4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3662  0001E6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3663  0001E8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3664  0001EA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3665  0001EC  EE20 F00B          	lfsr	2,11
  3666  0001F0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3667  0001F2  26D9               	addwf	fsr2l,f,c
  3668  0001F4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3669  0001F6  22DA               	addwfc	fsr2h,f,c
  3670  0001F8  50DF               	movf	indf2,w,c
  3671  0001FA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3672  0001FC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3673  0001FE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3674  000200  6E58               	movwf	_NeightAdress2,c	;volatile
  3675  000202  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3676  000204  6E59               	movwf	_NeightAdress2+1,c	;volatile
  3677                           
  3678                           ;FRAME.c: 751: NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3679  000206  EE20 F00C          	lfsr	2,12
  3680  00020A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3681  00020C  26D9               	addwf	fsr2l,f,c
  3682  00020E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3683  000210  22DA               	addwfc	fsr2h,f,c
  3684  000212  50DF               	movf	indf2,w,c
  3685  000214  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3686  000216  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3687  000218  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3688  00021A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3689  00021C  EE20 F00D          	lfsr	2,13
  3690  000220  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3691  000222  26D9               	addwf	fsr2l,f,c
  3692  000224  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3693  000226  22DA               	addwfc	fsr2h,f,c
  3694  000228  50DF               	movf	indf2,w,c
  3695  00022A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3696  00022C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3697  00022E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3698  000230  6E49               	movwf	_NeightAdress3,c	;volatile
  3699  000232  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3700  000234  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  3701                           
  3702                           ;FRAME.c: 752: NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3703  000236  EE20 F00E          	lfsr	2,14
  3704  00023A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3705  00023C  26D9               	addwf	fsr2l,f,c
  3706  00023E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3707  000240  22DA               	addwfc	fsr2h,f,c
  3708  000242  50DF               	movf	indf2,w,c
  3709  000244  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3710  000246  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3711  000248  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3712  00024A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3713  00024C  EE20 F00F          	lfsr	2,15
  3714  000250  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3715  000252  26D9               	addwf	fsr2l,f,c
  3716  000254  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3717  000256  22DA               	addwfc	fsr2h,f,c
  3718  000258  50DF               	movf	indf2,w,c
  3719  00025A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3720  00025C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3721  00025E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3722  000260  6E47               	movwf	_NeightAdress4,c	;volatile
  3723  000262  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3724  000264  6E48               	movwf	_NeightAdress4+1,c	;volatile
  3725  000266                     l4459:
  3726                           
  3727                           ;FRAME.c: 753: CAN_SetupFilter_Ne();
  3728  000266  ECA6  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  3729                           
  3730                           ;FRAME.c: 756: }
  3731  00026A  0012               	return	
  3732  00026C                     l4461:
  3733                           
  3734                           ;FRAME.c: 757: else;FRAME.c: 758: {;FRAME.c: 759: NeightAdress5 = (message->data[0] << 8
      +                          )| message->data[1];
  3735  00026C  EE20 F008          	lfsr	2,8
  3736  000270  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3737  000272  26D9               	addwf	fsr2l,f,c
  3738  000274  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3739  000276  22DA               	addwfc	fsr2h,f,c
  3740  000278  50DF               	movf	indf2,w,c
  3741  00027A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3742  00027C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3743  00027E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3744  000280  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3745  000282  EE20 F009          	lfsr	2,9
  3746  000286  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3747  000288  26D9               	addwf	fsr2l,f,c
  3748  00028A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3749  00028C  22DA               	addwfc	fsr2h,f,c
  3750  00028E  50DF               	movf	indf2,w,c
  3751  000290  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3752  000292  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3753  000294  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3754  000296  6E45               	movwf	_NeightAdress5,c	;volatile
  3755  000298  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3756  00029A  6E46               	movwf	_NeightAdress5+1,c	;volatile
  3757                           
  3758                           ;FRAME.c: 760: NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3759  00029C  EE20 F00A          	lfsr	2,10
  3760  0002A0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3761  0002A2  26D9               	addwf	fsr2l,f,c
  3762  0002A4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3763  0002A6  22DA               	addwfc	fsr2h,f,c
  3764  0002A8  50DF               	movf	indf2,w,c
  3765  0002AA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3766  0002AC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3767  0002AE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3768  0002B0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3769  0002B2  EE20 F00B          	lfsr	2,11
  3770  0002B6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3771  0002B8  26D9               	addwf	fsr2l,f,c
  3772  0002BA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3773  0002BC  22DA               	addwfc	fsr2h,f,c
  3774  0002BE  50DF               	movf	indf2,w,c
  3775  0002C0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3776  0002C2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3777  0002C4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3778  0002C6  6E43               	movwf	_NeightAdress6,c	;volatile
  3779  0002C8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3780  0002CA  6E44               	movwf	_NeightAdress6+1,c	;volatile
  3781                           
  3782                           ;FRAME.c: 761: NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3783  0002CC  EE20 F00C          	lfsr	2,12
  3784  0002D0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3785  0002D2  26D9               	addwf	fsr2l,f,c
  3786  0002D4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3787  0002D6  22DA               	addwfc	fsr2h,f,c
  3788  0002D8  50DF               	movf	indf2,w,c
  3789  0002DA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3790  0002DC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3791  0002DE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3792  0002E0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3793  0002E2  EE20 F00D          	lfsr	2,13
  3794  0002E6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3795  0002E8  26D9               	addwf	fsr2l,f,c
  3796  0002EA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3797  0002EC  22DA               	addwfc	fsr2h,f,c
  3798  0002EE  50DF               	movf	indf2,w,c
  3799  0002F0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3800  0002F2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3801  0002F4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3802  0002F6  6E41               	movwf	_NeightAdress7,c	;volatile
  3803  0002F8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3804  0002FA  6E42               	movwf	_NeightAdress7+1,c	;volatile
  3805                           
  3806                           ;FRAME.c: 762: NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3807  0002FC  EE20 F00E          	lfsr	2,14
  3808  000300  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3809  000302  26D9               	addwf	fsr2l,f,c
  3810  000304  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3811  000306  22DA               	addwfc	fsr2h,f,c
  3812  000308  50DF               	movf	indf2,w,c
  3813  00030A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3814  00030C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3815  00030E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3816  000310  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3817  000312  EE20 F00F          	lfsr	2,15
  3818  000316  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3819  000318  26D9               	addwf	fsr2l,f,c
  3820  00031A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3821  00031C  22DA               	addwfc	fsr2h,f,c
  3822  00031E  50DF               	movf	indf2,w,c
  3823  000320  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3824  000322  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3825  000324  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3826  000326  6E3F               	movwf	_NeightAdress8,c	;volatile
  3827  000328  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3828  00032A  6E40               	movwf	_NeightAdress8+1,c	;volatile
  3829  00032C  D79C               	goto	l4459
  3830  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function _FRAME_AccelerometerStatus *****************
  3834 ;; Defined at:
  3835 ;;		line 197 in file "FRAME.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  message         2    7[COMRAM] PTR struct .
  3838 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;Total ram usage:        3 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    4
  3857 ;; This function calls:
  3858 ;;		_MOCK_Klikniecie_Spadek
  3859 ;;		_MOCK_PrzyspieszenieX
  3860 ;;		_MOCK_PrzyspieszenieY
  3861 ;;		_MOCK_PrzyspieszenieZ
  3862 ;; This function is called by:
  3863 ;;		_FRAME_HandleCanFrame
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text27
  3868  0013D0                     __ptext27:
  3869                           	opt callstack 0
  3870  0013D0                     _FRAME_AccelerometerStatus:
  3871                           	opt callstack 24
  3872                           
  3873                           ;FRAME.c: 199: if(message->message_type == 0x02)
  3874                           
  3875                           ;incstack = 0
  3876  0013D0  EE20 F001          	lfsr	2,1
  3877  0013D4  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3878  0013D6  26D9               	addwf	fsr2l,f,c
  3879  0013D8  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3880  0013DA  22DA               	addwfc	fsr2h,f,c
  3881  0013DC  0E02               	movlw	2
  3882  0013DE  18DE               	xorwf	postinc2,w,c
  3883  0013E0  A4D8               	btfss	status,2,c
  3884  0013E2  0012               	return	
  3885                           
  3886                           ;FRAME.c: 200: {;FRAME.c: 201: message->data_length = 4;
  3887  0013E4  EE20 F010          	lfsr	2,16
  3888  0013E8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3889  0013EA  26D9               	addwf	fsr2l,f,c
  3890  0013EC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3891  0013EE  22DA               	addwfc	fsr2h,f,c
  3892  0013F0  0E04               	movlw	4
  3893  0013F2  6EDF               	movwf	indf2,c
  3894                           
  3895                           ;FRAME.c: 205: message->data[0] = MOCK_PrzyspieszenieX();
  3896  0013F4  EE20 F008          	lfsr	2,8
  3897  0013F8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3898  0013FA  26D9               	addwf	fsr2l,f,c
  3899  0013FC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3900  0013FE  22DA               	addwfc	fsr2h,f,c
  3901  001400  ECA6  F00D         	call	_MOCK_PrzyspieszenieX	;wreg free
  3902  001404  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3903  001406  6EDF               	movwf	indf2,c
  3904                           
  3905                           ;FRAME.c: 206: message->data[1] = MOCK_PrzyspieszenieY();
  3906  001408  EE20 F009          	lfsr	2,9
  3907  00140C  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3908  00140E  26D9               	addwf	fsr2l,f,c
  3909  001410  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3910  001412  22DA               	addwfc	fsr2h,f,c
  3911  001414  ECA1  F00D         	call	_MOCK_PrzyspieszenieY	;wreg free
  3912  001418  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3913  00141A  6EDF               	movwf	indf2,c
  3914                           
  3915                           ;FRAME.c: 207: message->data[2] = MOCK_PrzyspieszenieZ();
  3916  00141C  EE20 F00A          	lfsr	2,10
  3917  001420  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3918  001422  26D9               	addwf	fsr2l,f,c
  3919  001424  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3920  001426  22DA               	addwfc	fsr2h,f,c
  3921  001428  EC9C  F00D         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3922  00142C  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3923  00142E  6EDF               	movwf	indf2,c
  3924                           
  3925                           ;FRAME.c: 208: message->data[3] = MOCK_Klikniecie_Spadek();
  3926  001430  EE20 F00B          	lfsr	2,11
  3927  001434  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3928  001436  26D9               	addwf	fsr2l,f,c
  3929  001438  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3930  00143A  22DA               	addwfc	fsr2h,f,c
  3931  00143C  ECAB  F00D         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3932  001440  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3933  001442  6EDF               	movwf	indf2,c
  3934                           
  3935                           ;FRAME.c: 209: }
  3936  001444  0012               	return		;funcret
  3937  001446                     __end_of_FRAME_AccelerometerStatus:
  3938                           	opt callstack 0
  3939                           
  3940 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3941 ;; Defined at:
  3942 ;;		line 73 in file "MOC_Funct.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  2    5[COMRAM] unsigned int 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3960 ;;Total ram usage:        2 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    3
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_FRAME_AccelerometerStatus
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text28
  3971  001B38                     __ptext28:
  3972                           	opt callstack 0
  3973  001B38                     _MOCK_PrzyspieszenieZ:
  3974                           	opt callstack 24
  3975                           
  3976                           ;MOC_Funct.c: 75: return 0xFE;
  3977                           
  3978                           ;incstack = 0
  3979  001B38  0E00               	movlw	0
  3980  001B3A  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3981  001B3C  0EFE               	movlw	254
  3982  001B3E  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3983  001B40  0012               	return		;funcret
  3984  001B42                     __end_of_MOCK_PrzyspieszenieZ:
  3985                           	opt callstack 0
  3986                           
  3987 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3988 ;; Defined at:
  3989 ;;		line 69 in file "MOC_Funct.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2    5[COMRAM] unsigned int 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;Total ram usage:        2 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    3
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_FRAME_AccelerometerStatus
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           	psect	text29
  4018  001B42                     __ptext29:
  4019                           	opt callstack 0
  4020  001B42                     _MOCK_PrzyspieszenieY:
  4021                           	opt callstack 24
  4022                           
  4023                           ;MOC_Funct.c: 71: return 0xFE;
  4024                           
  4025                           ;incstack = 0
  4026  001B42  0E00               	movlw	0
  4027  001B44  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  4028  001B46  0EFE               	movlw	254
  4029  001B48  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  4030  001B4A  0012               	return		;funcret
  4031  001B4C                     __end_of_MOCK_PrzyspieszenieY:
  4032                           	opt callstack 0
  4033                           
  4034 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4035 ;; Defined at:
  4036 ;;		line 64 in file "MOC_Funct.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;		None
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  2    5[COMRAM] unsigned int 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;Total ram usage:        2 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    3
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_FRAME_AccelerometerStatus
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text30
  4065  001B4C                     __ptext30:
  4066                           	opt callstack 0
  4067  001B4C                     _MOCK_PrzyspieszenieX:
  4068                           	opt callstack 24
  4069                           
  4070                           ;MOC_Funct.c: 66: return 0xFE;
  4071                           
  4072                           ;incstack = 0
  4073  001B4C  0E00               	movlw	0
  4074  001B4E  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4075  001B50  0EFE               	movlw	254
  4076  001B52  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  4077  001B54  0012               	return		;funcret
  4078  001B56                     __end_of_MOCK_PrzyspieszenieX:
  4079                           	opt callstack 0
  4080                           
  4081 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4082 ;; Defined at:
  4083 ;;		line 77 in file "MOC_Funct.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  2    5[COMRAM] unsigned int 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;Total ram usage:        2 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    3
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_FRAME_AccelerometerStatus
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text31
  4112  001B56                     __ptext31:
  4113                           	opt callstack 0
  4114  001B56                     _MOCK_Klikniecie_Spadek:
  4115                           	opt callstack 24
  4116                           
  4117                           ;MOC_Funct.c: 79: return 0b00000000;
  4118                           
  4119                           ;incstack = 0
  4120  001B56  0E00               	movlw	0
  4121  001B58  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4122  001B5A  0E00               	movlw	0
  4123  001B5C  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  4124  001B5E  0012               	return		;funcret
  4125  001B60                     __end_of_MOCK_Klikniecie_Spadek:
  4126                           	opt callstack 0
  4127                           
  4128 ;; *************** function _CAN_SendFrame *****************
  4129 ;; Defined at:
  4130 ;;		line 247 in file "CAN.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  message         2   10[COMRAM] PTR struct .
  4133 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;Total ram usage:        5 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    4
  4152 ;; This function calls:
  4153 ;;		_CAN_MoveBuffIntoFrame
  4154 ;; This function is called by:
  4155 ;;		_FRAME_HandleCanFrame
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text32
  4160  000906                     __ptext32:
  4161                           	opt callstack 0
  4162  000906                     _CAN_SendFrame:
  4163                           	opt callstack 24
  4164                           
  4165                           ;CAN.c: 252: {;CAN.c: 253: ECANCON = 0x83;
  4166                           
  4167                           ;incstack = 0
  4168                           ;CAN.c: 251: for(;;)
  4169  000906  0E83               	movlw	131
  4170  000908  6E77               	movwf	3959,c	;volatile
  4171                           
  4172                           ;CAN.c: 254: if(!RXB0CONbits.FILHIT3)
  4173  00090A  A660               	btfss	3936,3,c	;volatile
  4174  00090C  D00A               	goto	l288
  4175                           
  4176                           ;CAN.c: 258: };CAN.c: 259: ECANCON = 0x84;
  4177  00090E  0E84               	movlw	132
  4178  000910  6E77               	movwf	3959,c	;volatile
  4179                           
  4180                           ;CAN.c: 260: if(!RXB0CONbits.FILHIT3)
  4181  000912  A660               	btfss	3936,3,c	;volatile
  4182  000914  D006               	goto	l288
  4183                           
  4184                           ;CAN.c: 264: };CAN.c: 265: ECANCON = 0x85;
  4185  000916  0E85               	movlw	133
  4186  000918  6E77               	movwf	3959,c	;volatile
  4187                           
  4188                           ;CAN.c: 266: if(!RXB0CONbits.FILHIT3)
  4189  00091A  A660               	btfss	3936,3,c	;volatile
  4190  00091C  D002               	goto	l288
  4191  00091E  D7F3               	goto	_CAN_SendFrame
  4192  000920                     l289:
  4193  000920  00FF               	reset		;# 
  4194  000922                     l288:
  4195  000922  B474               	btfsc	3956,2,c	;volatile
  4196  000924  D7FD               	goto	l289
  4197                           
  4198                           ;CAN.c: 276: };CAN.c: 277: DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4199  000926  0E00               	movlw	0
  4200  000928  0100               	movlb	0	; () banked
  4201  00092A  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;CAN.c: 278: RXB0EIDL = message->id.v[0];
  4205  00092C  EE20 F004          	lfsr	2,4
  4206  000930  500B               	movf	CAN_SendFrame@message,w,c
  4207  000932  26D9               	addwf	fsr2l,f,c
  4208  000934  500C               	movf	CAN_SendFrame@message+1,w,c
  4209  000936  22DA               	addwfc	fsr2h,f,c
  4210  000938  50DF               	movf	indf2,w,c
  4211  00093A  6E64               	movwf	3940,c	;volatile
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;CAN.c: 279: RXB0EIDH = message->id.v[1];
  4215  00093C  EE20 F005          	lfsr	2,5
  4216  000940  500B               	movf	CAN_SendFrame@message,w,c
  4217  000942  26D9               	addwf	fsr2l,f,c
  4218  000944  500C               	movf	CAN_SendFrame@message+1,w,c
  4219  000946  22DA               	addwfc	fsr2h,f,c
  4220  000948  50DF               	movf	indf2,w,c
  4221  00094A  6E63               	movwf	3939,c	;volatile
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;CAN.c: 280: RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4225  00094C  EE20 F006          	lfsr	2,6
  4226  000950  500B               	movf	CAN_SendFrame@message,w,c
  4227  000952  26D9               	addwf	fsr2l,f,c
  4228  000954  500C               	movf	CAN_SendFrame@message+1,w,c
  4229  000956  22DA               	addwfc	fsr2h,f,c
  4230  000958  50DF               	movf	indf2,w,c
  4231  00095A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4232  00095C  0E03               	movlw	3
  4233  00095E  160D               	andwf	??_CAN_SendFrame,f,c
  4234  000960  EE20 F006          	lfsr	2,6
  4235  000964  500B               	movf	CAN_SendFrame@message,w,c
  4236  000966  26D9               	addwf	fsr2l,f,c
  4237  000968  500C               	movf	CAN_SendFrame@message+1,w,c
  4238  00096A  22DA               	addwfc	fsr2h,f,c
  4239  00096C  50DF               	movf	indf2,w,c
  4240  00096E  0BFC               	andlw	252
  4241  000970  0D08               	mullw	8
  4242  000972  50F3               	movf	prodl,w,c
  4243  000974  100D               	iorwf	??_CAN_SendFrame,w,c
  4244  000976  6E62               	movwf	3938,c	;volatile
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;CAN.c: 281: RXB0SIDLbits.EXID = 1;
  4248  000978  8662               	bsf	3938,3,c	;volatile
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;CAN.c: 282: RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4252  00097A  EE20 F006          	lfsr	2,6
  4253  00097E  500B               	movf	CAN_SendFrame@message,w,c
  4254  000980  26D9               	addwf	fsr2l,f,c
  4255  000982  500C               	movf	CAN_SendFrame@message+1,w,c
  4256  000984  22DA               	addwfc	fsr2h,f,c
  4257  000986  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  4258  00098A  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  4259  00098E  0E05               	movlw	5
  4260  000990  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4261  000992                     u2595:
  4262  000992  90D8               	bcf	status,0,c
  4263  000994  320E               	rrcf	??_CAN_SendFrame+1,f,c
  4264  000996  320D               	rrcf	??_CAN_SendFrame,f,c
  4265  000998  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4266  00099A  D7FB               	goto	u2595
  4267  00099C  500D               	movf	??_CAN_SendFrame,w,c
  4268  00099E  6E61               	movwf	3937,c	;volatile
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;CAN.c: 284: RXB0DLC = 0;
  4272  0009A0  0E00               	movlw	0
  4273  0009A2  6E65               	movwf	3941,c	;volatile
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;CAN.c: 286: if(message->message_type==0x02)
  4277  0009A4  EE20 F001          	lfsr	2,1
  4278  0009A8  500B               	movf	CAN_SendFrame@message,w,c
  4279  0009AA  26D9               	addwf	fsr2l,f,c
  4280  0009AC  500C               	movf	CAN_SendFrame@message+1,w,c
  4281  0009AE  22DA               	addwfc	fsr2h,f,c
  4282  0009B0  0E02               	movlw	2
  4283  0009B2  18DE               	xorwf	postinc2,w,c
  4284  0009B4  A4D8               	btfss	status,2,c
  4285  0009B6  D002               	goto	l4265
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;CAN.c: 287: {;CAN.c: 288: RXB0DLCbits.RXRTR = 1;
  4289  0009B8  8C65               	bsf	3941,6,c	;volatile
  4290                           
  4291                           ;CAN.c: 289: }
  4292  0009BA  D05A               	goto	l4269
  4293  0009BC                     l4265:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;CAN.c: 290: else;CAN.c: 291: {;CAN.c: 292: RXB0DLCbits.DLC0 = (message->data_length & 0
      +                          x0F);
  4297  0009BC  EE20 F010          	lfsr	2,16
  4298  0009C0  500B               	movf	CAN_SendFrame@message,w,c
  4299  0009C2  26D9               	addwf	fsr2l,f,c
  4300  0009C4  500C               	movf	CAN_SendFrame@message+1,w,c
  4301  0009C6  22DA               	addwfc	fsr2h,f,c
  4302  0009C8  50DF               	movf	indf2,w,c
  4303  0009CA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4304  0009CC  0E0F               	movlw	15
  4305  0009CE  160D               	andwf	??_CAN_SendFrame,f,c
  4306  0009D0  5065               	movf	3941,w,c	;volatile
  4307  0009D2  180D               	xorwf	??_CAN_SendFrame,w,c
  4308  0009D4  0BFE               	andlw	-2
  4309  0009D6  180D               	xorwf	??_CAN_SendFrame,w,c
  4310  0009D8  6E65               	movwf	3941,c	;volatile
  4311                           
  4312                           ;CAN.c: 293: RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4313  0009DA  EE20 F010          	lfsr	2,16
  4314  0009DE  500B               	movf	CAN_SendFrame@message,w,c
  4315  0009E0  26D9               	addwf	fsr2l,f,c
  4316  0009E2  500C               	movf	CAN_SendFrame@message+1,w,c
  4317  0009E4  22DA               	addwfc	fsr2h,f,c
  4318  0009E6  50DF               	movf	indf2,w,c
  4319  0009E8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4320  0009EA  90D8               	bcf	status,0,c
  4321  0009EC  320D               	rrcf	??_CAN_SendFrame,f,c
  4322  0009EE  0E07               	movlw	7
  4323  0009F0  160D               	andwf	??_CAN_SendFrame,f,c
  4324  0009F2  460D               	rlncf	??_CAN_SendFrame,f,c
  4325  0009F4  5065               	movf	3941,w,c	;volatile
  4326  0009F6  180D               	xorwf	??_CAN_SendFrame,w,c
  4327  0009F8  0BFD               	andlw	-3
  4328  0009FA  180D               	xorwf	??_CAN_SendFrame,w,c
  4329  0009FC  6E65               	movwf	3941,c	;volatile
  4330                           
  4331                           ;CAN.c: 294: RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4332  0009FE  EE20 F010          	lfsr	2,16
  4333  000A02  500B               	movf	CAN_SendFrame@message,w,c
  4334  000A04  26D9               	addwf	fsr2l,f,c
  4335  000A06  500C               	movf	CAN_SendFrame@message+1,w,c
  4336  000A08  22DA               	addwfc	fsr2h,f,c
  4337  000A0A  50DF               	movf	indf2,w,c
  4338  000A0C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4339  000A0E  90D8               	bcf	status,0,c
  4340  000A10  320D               	rrcf	??_CAN_SendFrame,f,c
  4341  000A12  90D8               	bcf	status,0,c
  4342  000A14  320D               	rrcf	??_CAN_SendFrame,f,c
  4343  000A16  0E03               	movlw	3
  4344  000A18  160D               	andwf	??_CAN_SendFrame,f,c
  4345  000A1A  460D               	rlncf	??_CAN_SendFrame,f,c
  4346  000A1C  460D               	rlncf	??_CAN_SendFrame,f,c
  4347  000A1E  5065               	movf	3941,w,c	;volatile
  4348  000A20  180D               	xorwf	??_CAN_SendFrame,w,c
  4349  000A22  0BFB               	andlw	-5
  4350  000A24  180D               	xorwf	??_CAN_SendFrame,w,c
  4351  000A26  6E65               	movwf	3941,c	;volatile
  4352                           
  4353                           ;CAN.c: 295: RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4354  000A28  EE20 F010          	lfsr	2,16
  4355  000A2C  500B               	movf	CAN_SendFrame@message,w,c
  4356  000A2E  26D9               	addwf	fsr2l,f,c
  4357  000A30  500C               	movf	CAN_SendFrame@message+1,w,c
  4358  000A32  22DA               	addwfc	fsr2h,f,c
  4359  000A34  50DF               	movf	indf2,w,c
  4360  000A36  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4361  000A38  90D8               	bcf	status,0,c
  4362  000A3A  320D               	rrcf	??_CAN_SendFrame,f,c
  4363  000A3C  90D8               	bcf	status,0,c
  4364  000A3E  320D               	rrcf	??_CAN_SendFrame,f,c
  4365  000A40  90D8               	bcf	status,0,c
  4366  000A42  320D               	rrcf	??_CAN_SendFrame,f,c
  4367  000A44  0E01               	movlw	1
  4368  000A46  160D               	andwf	??_CAN_SendFrame,f,c
  4369  000A48  460D               	rlncf	??_CAN_SendFrame,f,c
  4370  000A4A  460D               	rlncf	??_CAN_SendFrame,f,c
  4371  000A4C  460D               	rlncf	??_CAN_SendFrame,f,c
  4372  000A4E  5065               	movf	3941,w,c	;volatile
  4373  000A50  180D               	xorwf	??_CAN_SendFrame,w,c
  4374  000A52  0BF7               	andlw	-9
  4375  000A54  180D               	xorwf	??_CAN_SendFrame,w,c
  4376  000A56  6E65               	movwf	3941,c	;volatile
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;CAN.c: 297: CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4380  000A58  0E66               	movlw	102
  4381  000A5A  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4382  000A5C  0E0F               	movlw	15
  4383  000A5E  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4384  000A60  0E08               	movlw	8
  4385  000A62  240B               	addwf	CAN_SendFrame@message,w,c
  4386  000A64  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4387  000A66  0E00               	movlw	0
  4388  000A68  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4389  000A6A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4390  000A6C  ECF2  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4391  000A70                     l4269:
  4392                           
  4393                           ;CAN.c: 298: };CAN.c: 300: RXB0CONbits.FILHIT3 = 1;
  4394  000A70  8660               	bsf	3936,3,c	;volatile
  4395                           
  4396                           ;CAN.c: 302: DetectorLedRadar.Flags.ramkaTx = 1;
  4397  000A72  0100               	movlb	0	; () banked
  4398  000A74  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4399                           
  4400                           ; BSR set to: 0
  4401  000A76  0012               	return		;funcret
  4402  000A78                     __end_of_CAN_SendFrame:
  4403                           	opt callstack 0
  4404                           
  4405 ;; *************** function _CAN_GenID *****************
  4406 ;; Defined at:
  4407 ;;		line 446 in file "CAN.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  message         2    5[COMRAM] PTR struct .
  4410 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4411 ;;  frameID         1    7[COMRAM] unsigned char 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4423 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;Total ram usage:        5 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    3
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_FRAME_HandleCanFrame
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text33
  4438  001358                     __ptext33:
  4439                           	opt callstack 0
  4440  001358                     _CAN_GenID:
  4441                           	opt callstack 25
  4442                           
  4443                           ;CAN.c: 449: message->frame_type = 0x03;
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;incstack = 0
  4447  001358  EE20 F002          	lfsr	2,2
  4448  00135C  5006               	movf	CAN_GenID@message,w,c
  4449  00135E  26D9               	addwf	fsr2l,f,c
  4450  001360  5007               	movf	CAN_GenID@message+1,w,c
  4451  001362  22DA               	addwfc	fsr2h,f,c
  4452  001364  0E03               	movlw	3
  4453  001366  6EDF               	movwf	indf2,c
  4454                           
  4455                           ;CAN.c: 450: message->message_type = 0x01;
  4456  001368  EE20 F001          	lfsr	2,1
  4457  00136C  5006               	movf	CAN_GenID@message,w,c
  4458  00136E  26D9               	addwf	fsr2l,f,c
  4459  001370  5007               	movf	CAN_GenID@message+1,w,c
  4460  001372  22DA               	addwfc	fsr2h,f,c
  4461  001374  0E01               	movlw	1
  4462  001376  6EDF               	movwf	indf2,c
  4463                           
  4464                           ;CAN.c: 451: message->id.w[1] = (WORD)frameID * (WORD)4;
  4465  001378  5008               	movf	CAN_GenID@frameID,w,c
  4466  00137A  6E09               	movwf	??_CAN_GenID& (0+255),c
  4467  00137C  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4468  00137E  90D8               	bcf	status,0,c
  4469  001380  3609               	rlcf	??_CAN_GenID,f,c
  4470  001382  360A               	rlcf	??_CAN_GenID+1,f,c
  4471  001384  90D8               	bcf	status,0,c
  4472  001386  3609               	rlcf	??_CAN_GenID,f,c
  4473  001388  360A               	rlcf	??_CAN_GenID+1,f,c
  4474  00138A  EE20 F006          	lfsr	2,6
  4475  00138E  5006               	movf	CAN_GenID@message,w,c
  4476  001390  26D9               	addwf	fsr2l,f,c
  4477  001392  5007               	movf	CAN_GenID@message+1,w,c
  4478  001394  22DA               	addwfc	fsr2h,f,c
  4479  001396  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4480  00139A  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4481                           
  4482                           ;CAN.c: 452: message->id.w[0] = DaneCan.adresCAN;
  4483  00139E  EE20 F004          	lfsr	2,4
  4484  0013A2  5006               	movf	CAN_GenID@message,w,c
  4485  0013A4  26D9               	addwf	fsr2l,f,c
  4486  0013A6  5007               	movf	CAN_GenID@message+1,w,c
  4487  0013A8  22DA               	addwfc	fsr2h,f,c
  4488  0013AA  C02D  FFDE         	movff	_DaneCan+2,postinc2
  4489  0013AE  C02E  FFDD         	movff	_DaneCan+3,postdec2
  4490                           
  4491                           ;CAN.c: 455: message ->id.bits.b16 = 0;
  4492  0013B2  EE20 F006          	lfsr	2,6
  4493  0013B6  5006               	movf	CAN_GenID@message,w,c
  4494  0013B8  26D9               	addwf	fsr2l,f,c
  4495  0013BA  5007               	movf	CAN_GenID@message+1,w,c
  4496  0013BC  22DA               	addwfc	fsr2h,f,c
  4497  0013BE  90DF               	bcf	indf2,0,c
  4498                           
  4499                           ;CAN.c: 456: message ->id.bits.b17 = 0;
  4500  0013C0  EE20 F006          	lfsr	2,6
  4501  0013C4  5006               	movf	CAN_GenID@message,w,c
  4502  0013C6  26D9               	addwf	fsr2l,f,c
  4503  0013C8  5007               	movf	CAN_GenID@message+1,w,c
  4504  0013CA  22DA               	addwfc	fsr2h,f,c
  4505  0013CC  92DF               	bcf	indf2,1,c
  4506  0013CE  0012               	return		;funcret
  4507  0013D0                     __end_of_CAN_GenID:
  4508                           	opt callstack 0
  4509                           
  4510 ;; *************** function _CAN_TakeFrame *****************
  4511 ;; Defined at:
  4512 ;;		line 311 in file "CAN.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  message         2   13[COMRAM] PTR struct .
  4515 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  k               1   18[COMRAM] unsigned char 
  4518 ;;  tempCON         1   17[COMRAM] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      enum E10294
  4521 ;; Registers used:
  4522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;Total ram usage:        6 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    4
  4535 ;; This function calls:
  4536 ;;		_CAN_MoveBuffIntoFrame
  4537 ;;		___awdiv
  4538 ;; This function is called by:
  4539 ;;		_TRM_DataTransmition
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text34
  4544  00032E                     __ptext34:
  4545                           	opt callstack 0
  4546  00032E                     _CAN_TakeFrame:
  4547                           	opt callstack 25
  4548                           
  4549                           ;CAN.c: 313: BYTE k, tempCON;;CAN.c: 315: k = CANCON&0x0F;
  4550                           
  4551                           ;incstack = 0
  4552  00032E  506F               	movf	3951,w,c	;volatile
  4553  000330  0B0F               	andlw	15
  4554  000332  6E13               	movwf	CAN_TakeFrame@k,c
  4555                           
  4556                           ;CAN.c: 317: ECANCON = 0x90 | k;
  4557  000334  5013               	movf	CAN_TakeFrame@k,w,c
  4558  000336  0990               	iorlw	144
  4559  000338  6E77               	movwf	3959,c	;volatile
  4560                           
  4561                           ;CAN.c: 320: switch(k)
  4562  00033A  D018               	goto	l4543
  4563  00033C                     l297:
  4564                           
  4565                           ;CAN.c: 323: tempCON = RXB0CON;
  4566  00033C  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4567                           
  4568                           ;CAN.c: 324: break;
  4569  000340  D02E               	goto	l298
  4570  000342                     l299:
  4571                           
  4572                           ;CAN.c: 326: tempCON = RXB1CON;
  4573  000342  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4574                           
  4575                           ;CAN.c: 327: break;
  4576  000346  D02B               	goto	l298
  4577  000348                     l300:
  4578                           
  4579                           ;CAN.c: 329: tempCON = B0CON;
  4580  000348  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4581                           
  4582                           ;CAN.c: 330: break;
  4583  00034C  D028               	goto	l298
  4584  00034E                     l301:
  4585                           
  4586                           ;CAN.c: 332: tempCON = B1CON;
  4587  00034E  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4588                           
  4589                           ;CAN.c: 333: break;
  4590  000352  D025               	goto	l298
  4591  000354                     l302:
  4592                           
  4593                           ;CAN.c: 335: tempCON = B2CON;
  4594  000354  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4595                           
  4596                           ;CAN.c: 336: break;
  4597  000358  D022               	goto	l298
  4598  00035A                     l303:
  4599                           
  4600                           ;CAN.c: 338: tempCON = B3CON;
  4601  00035A  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4602                           
  4603                           ;CAN.c: 339: break;
  4604  00035E  D01F               	goto	l298
  4605  000360                     l304:
  4606                           
  4607                           ;CAN.c: 341: tempCON = B4CON;
  4608  000360  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4609                           
  4610                           ;CAN.c: 342: break;
  4611  000364  D01C               	goto	l298
  4612  000366                     l305:
  4613                           
  4614                           ;CAN.c: 344: tempCON = B5CON;
  4615  000366  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4616                           
  4617                           ;CAN.c: 345: break;
  4618  00036A  D019               	goto	l298
  4619  00036C                     l4543:
  4620  00036C  5013               	movf	CAN_TakeFrame@k,w,c
  4621                           
  4622                           ; Switch size 1, requested type "simple"
  4623                           ; Number of cases is 8, Range of values is 0 to 7
  4624                           ; switch strategies available:
  4625                           ; Name         Instructions Cycles
  4626                           ; simple_byte           25    13 (average)
  4627                           ;	Chosen strategy is simple_byte
  4628  00036E  0A00               	xorlw	0	; case 0
  4629  000370  B4D8               	btfsc	status,2,c
  4630  000372  D7E4               	goto	l297
  4631  000374  0A01               	xorlw	1	; case 1
  4632  000376  B4D8               	btfsc	status,2,c
  4633  000378  D7E4               	goto	l299
  4634  00037A  0A03               	xorlw	3	; case 2
  4635  00037C  B4D8               	btfsc	status,2,c
  4636  00037E  D7E4               	goto	l300
  4637  000380  0A01               	xorlw	1	; case 3
  4638  000382  B4D8               	btfsc	status,2,c
  4639  000384  D7E4               	goto	l301
  4640  000386  0A07               	xorlw	7	; case 4
  4641  000388  B4D8               	btfsc	status,2,c
  4642  00038A  D7E4               	goto	l302
  4643  00038C  0A01               	xorlw	1	; case 5
  4644  00038E  B4D8               	btfsc	status,2,c
  4645  000390  D7E4               	goto	l303
  4646  000392  0A03               	xorlw	3	; case 6
  4647  000394  B4D8               	btfsc	status,2,c
  4648  000396  D7E4               	goto	l304
  4649  000398  0A01               	xorlw	1	; case 7
  4650  00039A  B4D8               	btfsc	status,2,c
  4651  00039C  D7E4               	goto	l305
  4652  00039E                     l298:
  4653                           
  4654                           ;CAN.c: 349: if((tempCON & 0x80) > 0)
  4655  00039E  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4656  0003A0  D09E               	goto	l4579
  4657                           
  4658                           ;CAN.c: 350: {;CAN.c: 351: message->buffer = RXB0CON & 0x1F;
  4659  0003A2  EE20 F003          	lfsr	2,3
  4660  0003A6  500E               	movf	CAN_TakeFrame@message,w,c
  4661  0003A8  26D9               	addwf	fsr2l,f,c
  4662  0003AA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4663  0003AC  22DA               	addwfc	fsr2h,f,c
  4664  0003AE  5060               	movf	3936,w,c	;volatile
  4665  0003B0  0B1F               	andlw	31
  4666  0003B2  6EDF               	movwf	indf2,c
  4667                           
  4668                           ;CAN.c: 352: message->id.v[0] = RXB0EIDL;
  4669  0003B4  EE20 F004          	lfsr	2,4
  4670  0003B8  500E               	movf	CAN_TakeFrame@message,w,c
  4671  0003BA  26D9               	addwf	fsr2l,f,c
  4672  0003BC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4673  0003BE  22DA               	addwfc	fsr2h,f,c
  4674  0003C0  CF64 FFDF          	movff	3940,indf2	;volatile
  4675                           
  4676                           ;CAN.c: 353: message->id.v[1] = RXB0EIDH;
  4677  0003C4  EE20 F005          	lfsr	2,5
  4678  0003C8  500E               	movf	CAN_TakeFrame@message,w,c
  4679  0003CA  26D9               	addwf	fsr2l,f,c
  4680  0003CC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4681  0003CE  22DA               	addwfc	fsr2h,f,c
  4682  0003D0  CF63 FFDF          	movff	3939,indf2	;volatile
  4683                           
  4684                           ;CAN.c: 354: message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4685  0003D4  EE20 F006          	lfsr	2,6
  4686  0003D8  500E               	movf	CAN_TakeFrame@message,w,c
  4687  0003DA  26D9               	addwf	fsr2l,f,c
  4688  0003DC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4689  0003DE  22DA               	addwfc	fsr2h,f,c
  4690  0003E0  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4691  0003E4  0E03               	movlw	3
  4692  0003E6  1610               	andwf	??_CAN_TakeFrame,f,c
  4693  0003E8  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4694  0003EC  6A07               	clrf	___awdiv@dividend+1,c
  4695  0003EE  0E00               	movlw	0
  4696  0003F0  6E09               	movwf	___awdiv@divisor+1,c
  4697  0003F2  0E08               	movlw	8
  4698  0003F4  6E08               	movwf	___awdiv@divisor,c
  4699  0003F6  ECF1  F008         	call	___awdiv	;wreg free
  4700  0003FA  5006               	movf	?___awdiv,w,c
  4701  0003FC  1010               	iorwf	??_CAN_TakeFrame,w,c
  4702  0003FE  6EDF               	movwf	indf2,c
  4703                           
  4704                           ;CAN.c: 355: message->id.w[1] |= (WORD)RXB0SIDH*32;
  4705  000400  5061               	movf	3937,w,c	;volatile
  4706  000402  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4707  000404  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4708  000406  0E05               	movlw	5
  4709  000408                     u2995:
  4710  000408  90D8               	bcf	status,0,c
  4711  00040A  3610               	rlcf	??_CAN_TakeFrame,f,c
  4712  00040C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4713  00040E  2EE8               	decfsz	wreg,f,c
  4714  000410  D7FB               	goto	u2995
  4715  000412  EE20 F006          	lfsr	2,6
  4716  000416  500E               	movf	CAN_TakeFrame@message,w,c
  4717  000418  26D9               	addwf	fsr2l,f,c
  4718  00041A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4719  00041C  22DA               	addwfc	fsr2h,f,c
  4720  00041E  5010               	movf	??_CAN_TakeFrame,w,c
  4721  000420  12DE               	iorwf	postinc2,f,c
  4722  000422  5011               	movf	??_CAN_TakeFrame+1,w,c
  4723  000424  12DD               	iorwf	postdec2,f,c
  4724                           
  4725                           ;CAN.c: 356: message->frame_type=0x03;
  4726  000426  EE20 F002          	lfsr	2,2
  4727  00042A  500E               	movf	CAN_TakeFrame@message,w,c
  4728  00042C  26D9               	addwf	fsr2l,f,c
  4729  00042E  500F               	movf	CAN_TakeFrame@message+1,w,c
  4730  000430  22DA               	addwfc	fsr2h,f,c
  4731  000432  0E03               	movlw	3
  4732  000434  6EDF               	movwf	indf2,c
  4733                           
  4734                           ;CAN.c: 360: if(RXB0DLCbits.RXRTR == 0)
  4735  000436  BC65               	btfsc	3941,6,c	;volatile
  4736  000438  D061               	goto	l4585
  4737                           
  4738                           ;CAN.c: 361: {;CAN.c: 362: message->message_type = 0x01;
  4739  00043A  EE20 F001          	lfsr	2,1
  4740  00043E  500E               	movf	CAN_TakeFrame@message,w,c
  4741  000440  26D9               	addwf	fsr2l,f,c
  4742  000442  500F               	movf	CAN_TakeFrame@message+1,w,c
  4743  000444  22DA               	addwfc	fsr2h,f,c
  4744  000446  0E01               	movlw	1
  4745  000448  6EDF               	movwf	indf2,c
  4746                           
  4747                           ;CAN.c: 363: message->data_length= RXB0DLC & 0x0F;
  4748  00044A  EE20 F010          	lfsr	2,16
  4749  00044E  500E               	movf	CAN_TakeFrame@message,w,c
  4750  000450  26D9               	addwf	fsr2l,f,c
  4751  000452  500F               	movf	CAN_TakeFrame@message+1,w,c
  4752  000454  22DA               	addwfc	fsr2h,f,c
  4753  000456  5065               	movf	3941,w,c	;volatile
  4754  000458  0B0F               	andlw	15
  4755  00045A  6EDF               	movwf	indf2,c
  4756                           
  4757                           ;CAN.c: 364: if(message->data_length > 8)
  4758  00045C  EE20 F010          	lfsr	2,16
  4759  000460  500E               	movf	CAN_TakeFrame@message,w,c
  4760  000462  26D9               	addwf	fsr2l,f,c
  4761  000464  500F               	movf	CAN_TakeFrame@message+1,w,c
  4762  000466  22DA               	addwfc	fsr2h,f,c
  4763  000468  0E08               	movlw	8
  4764  00046A  64DF               	cpfsgt	indf2,c
  4765  00046C  D03A               	goto	l4583
  4766  00046E  D01E               	goto	l4577
  4767  000470                     l4559:
  4768                           
  4769                           ;CAN.c: 370: RXB0CON = 0;
  4770  000470  0E00               	movlw	0
  4771  000472  6E60               	movwf	3936,c	;volatile
  4772                           
  4773                           ;CAN.c: 371: break;
  4774  000474  D034               	goto	l4579
  4775  000476                     l4561:
  4776                           
  4777                           ;CAN.c: 373: RXB1CON = 0;
  4778  000476  0E00               	movlw	0
  4779  000478  010F               	movlb	15	; () banked
  4780  00047A  D00E               	goto	L2
  4781  00047C                     l4563:
  4782                           
  4783                           ;CAN.c: 376: B0CON = 0;
  4784  00047C  0E00               	movlw	0
  4785  00047E  010E               	movlb	14	; () banked
  4786  000480  6F20               	movwf	32,b	;volatile
  4787                           
  4788                           ;CAN.c: 377: break;
  4789  000482  D02D               	goto	l4579
  4790  000484                     l4565:
  4791                           
  4792                           ;CAN.c: 379: B1CON = 0;
  4793  000484  0E00               	movlw	0
  4794  000486  010E               	movlb	14	; () banked
  4795  000488  6F30               	movwf	48,b	;volatile
  4796                           
  4797                           ;CAN.c: 380: break;
  4798  00048A  D029               	goto	l4579
  4799  00048C                     l4567:
  4800                           
  4801                           ;CAN.c: 382: B2CON = 0;
  4802  00048C  0E00               	movlw	0
  4803  00048E  010E               	movlb	14	; () banked
  4804  000490  6F40               	movwf	64,b	;volatile
  4805                           
  4806                           ;CAN.c: 383: break;
  4807  000492  D025               	goto	l4579
  4808  000494                     l4569:
  4809                           
  4810                           ;CAN.c: 385: B3CON = 0;
  4811  000494  0E00               	movlw	0
  4812  000496  010E               	movlb	14	; () banked
  4813  000498                     L2:
  4814  000498  6F50               	movwf	80,b	;volatile
  4815                           
  4816                           ;CAN.c: 386: break;
  4817  00049A  D021               	goto	l4579
  4818  00049C                     l4571:
  4819                           
  4820                           ;CAN.c: 388: B4CON = 0;
  4821  00049C  0E00               	movlw	0
  4822  00049E  010E               	movlb	14	; () banked
  4823  0004A0  6F60               	movwf	96,b	;volatile
  4824                           
  4825                           ;CAN.c: 389: break;
  4826  0004A2  D01D               	goto	l4579
  4827  0004A4                     l4573:
  4828                           
  4829                           ;CAN.c: 391: B5CON = 0;
  4830  0004A4  0E00               	movlw	0
  4831  0004A6  010E               	movlb	14	; () banked
  4832  0004A8  6F70               	movwf	112,b	;volatile
  4833                           
  4834                           ;CAN.c: 392: break;
  4835  0004AA  D019               	goto	l4579
  4836  0004AC                     l4577:
  4837  0004AC  5013               	movf	CAN_TakeFrame@k,w,c
  4838                           
  4839                           ; Switch size 1, requested type "simple"
  4840                           ; Number of cases is 8, Range of values is 0 to 7
  4841                           ; switch strategies available:
  4842                           ; Name         Instructions Cycles
  4843                           ; simple_byte           25    13 (average)
  4844                           ;	Chosen strategy is simple_byte
  4845  0004AE  0A00               	xorlw	0	; case 0
  4846  0004B0  B4D8               	btfsc	status,2,c
  4847  0004B2  D7DE               	goto	l4559
  4848  0004B4  0A01               	xorlw	1	; case 1
  4849  0004B6  B4D8               	btfsc	status,2,c
  4850  0004B8  D7DE               	goto	l4561
  4851  0004BA  0A03               	xorlw	3	; case 2
  4852  0004BC  B4D8               	btfsc	status,2,c
  4853  0004BE  D7DE               	goto	l4563
  4854  0004C0  0A01               	xorlw	1	; case 3
  4855  0004C2  B4D8               	btfsc	status,2,c
  4856  0004C4  D7DF               	goto	l4565
  4857  0004C6  0A07               	xorlw	7	; case 4
  4858  0004C8  B4D8               	btfsc	status,2,c
  4859  0004CA  D7E0               	goto	l4567
  4860  0004CC  0A01               	xorlw	1	; case 5
  4861  0004CE  B4D8               	btfsc	status,2,c
  4862  0004D0  D7E1               	goto	l4569
  4863  0004D2  0A03               	xorlw	3	; case 6
  4864  0004D4  B4D8               	btfsc	status,2,c
  4865  0004D6  D7E2               	goto	l4571
  4866  0004D8  0A01               	xorlw	1	; case 7
  4867  0004DA  B4D8               	btfsc	status,2,c
  4868  0004DC  D7E3               	goto	l4573
  4869  0004DE                     l4579:
  4870                           
  4871                           ;CAN.c: 394: return FALSE;
  4872  0004DE  0E00               	movlw	0
  4873  0004E0  0012               	return	
  4874  0004E2                     l4583:
  4875                           
  4876                           ;CAN.c: 395: };CAN.c: 396: CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4877  0004E2  0E08               	movlw	8
  4878  0004E4  240E               	addwf	CAN_TakeFrame@message,w,c
  4879  0004E6  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4880  0004E8  0E00               	movlw	0
  4881  0004EA  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4882  0004EC  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4883  0004EE  0E66               	movlw	102
  4884  0004F0  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4885  0004F2  0E0F               	movlw	15
  4886  0004F4  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4887  0004F6  ECF2  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4888                           
  4889                           ;CAN.c: 397: }
  4890  0004FA  D027               	goto	l4605
  4891  0004FC                     l4585:
  4892                           
  4893                           ;CAN.c: 399: else;CAN.c: 400: {;CAN.c: 401: message->message_type=0x02;
  4894  0004FC  EE20 F001          	lfsr	2,1
  4895  000500  500E               	movf	CAN_TakeFrame@message,w,c
  4896  000502  26D9               	addwf	fsr2l,f,c
  4897  000504  500F               	movf	CAN_TakeFrame@message+1,w,c
  4898  000506  22DA               	addwfc	fsr2h,f,c
  4899  000508  0E02               	movlw	2
  4900  00050A  6EDF               	movwf	indf2,c
  4901  00050C  D01E               	goto	l4605
  4902  00050E                     l4587:
  4903                           
  4904                           ;CAN.c: 407: RXB0CON = 0;
  4905  00050E  0E00               	movlw	0
  4906  000510  6E60               	movwf	3936,c	;volatile
  4907                           
  4908                           ;CAN.c: 408: break;
  4909  000512  D034               	goto	l4607
  4910  000514                     l4589:
  4911                           
  4912                           ;CAN.c: 410: RXB1CON = 0;
  4913  000514  0E00               	movlw	0
  4914  000516  010F               	movlb	15	; () banked
  4915  000518  D00E               	goto	L3
  4916  00051A                     l4591:
  4917                           
  4918                           ;CAN.c: 413: B0CON = 0;
  4919  00051A  0E00               	movlw	0
  4920  00051C  010E               	movlb	14	; () banked
  4921  00051E  6F20               	movwf	32,b	;volatile
  4922                           
  4923                           ;CAN.c: 414: break;
  4924  000520  D02D               	goto	l4607
  4925  000522                     l4593:
  4926                           
  4927                           ;CAN.c: 416: B1CON = 0;
  4928  000522  0E00               	movlw	0
  4929  000524  010E               	movlb	14	; () banked
  4930  000526  6F30               	movwf	48,b	;volatile
  4931                           
  4932                           ;CAN.c: 417: break;
  4933  000528  D029               	goto	l4607
  4934  00052A                     l4595:
  4935                           
  4936                           ;CAN.c: 419: B2CON = 0;
  4937  00052A  0E00               	movlw	0
  4938  00052C  010E               	movlb	14	; () banked
  4939  00052E  6F40               	movwf	64,b	;volatile
  4940                           
  4941                           ;CAN.c: 420: break;
  4942  000530  D025               	goto	l4607
  4943  000532                     l4597:
  4944                           
  4945                           ;CAN.c: 422: B3CON = 0;
  4946  000532  0E00               	movlw	0
  4947  000534  010E               	movlb	14	; () banked
  4948  000536                     L3:
  4949  000536  6F50               	movwf	80,b	;volatile
  4950                           
  4951                           ;CAN.c: 423: break;
  4952  000538  D021               	goto	l4607
  4953  00053A                     l4599:
  4954                           
  4955                           ;CAN.c: 425: B4CON = 0;
  4956  00053A  0E00               	movlw	0
  4957  00053C  010E               	movlb	14	; () banked
  4958  00053E  6F60               	movwf	96,b	;volatile
  4959                           
  4960                           ;CAN.c: 426: break;
  4961  000540  D01D               	goto	l4607
  4962  000542                     l4601:
  4963                           
  4964                           ;CAN.c: 428: B5CON = 0;
  4965  000542  0E00               	movlw	0
  4966  000544  010E               	movlb	14	; () banked
  4967  000546  6F70               	movwf	112,b	;volatile
  4968                           
  4969                           ;CAN.c: 429: break;
  4970  000548  D019               	goto	l4607
  4971  00054A                     l4605:
  4972  00054A  5013               	movf	CAN_TakeFrame@k,w,c
  4973                           
  4974                           ; Switch size 1, requested type "simple"
  4975                           ; Number of cases is 8, Range of values is 0 to 7
  4976                           ; switch strategies available:
  4977                           ; Name         Instructions Cycles
  4978                           ; simple_byte           25    13 (average)
  4979                           ;	Chosen strategy is simple_byte
  4980  00054C  0A00               	xorlw	0	; case 0
  4981  00054E  B4D8               	btfsc	status,2,c
  4982  000550  D7DE               	goto	l4587
  4983  000552  0A01               	xorlw	1	; case 1
  4984  000554  B4D8               	btfsc	status,2,c
  4985  000556  D7DE               	goto	l4589
  4986  000558  0A03               	xorlw	3	; case 2
  4987  00055A  B4D8               	btfsc	status,2,c
  4988  00055C  D7DE               	goto	l4591
  4989  00055E  0A01               	xorlw	1	; case 3
  4990  000560  B4D8               	btfsc	status,2,c
  4991  000562  D7DF               	goto	l4593
  4992  000564  0A07               	xorlw	7	; case 4
  4993  000566  B4D8               	btfsc	status,2,c
  4994  000568  D7E0               	goto	l4595
  4995  00056A  0A01               	xorlw	1	; case 5
  4996  00056C  B4D8               	btfsc	status,2,c
  4997  00056E  D7E1               	goto	l4597
  4998  000570  0A03               	xorlw	3	; case 6
  4999  000572  B4D8               	btfsc	status,2,c
  5000  000574  D7E2               	goto	l4599
  5001  000576  0A01               	xorlw	1	; case 7
  5002  000578  B4D8               	btfsc	status,2,c
  5003  00057A  D7E3               	goto	l4601
  5004  00057C                     l4607:
  5005                           
  5006                           ;CAN.c: 431: return TRUE;
  5007  00057C  0E01               	movlw	1
  5008  00057E  0012               	return		;funcret
  5009  000580                     __end_of_CAN_TakeFrame:
  5010                           	opt callstack 0
  5011                           
  5012 ;; *************** function ___awdiv *****************
  5013 ;; Defined at:
  5014 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  dividend        2    5[COMRAM] int 
  5017 ;;  divisor         2    7[COMRAM] int 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  quotient        2   11[COMRAM] int 
  5020 ;;  sign            1   10[COMRAM] unsigned char 
  5021 ;;  counter         1    9[COMRAM] unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  2    5[COMRAM] int 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;Total ram usage:        8 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    3
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_CAN_TakeFrame
  5042 ;;		_FRAME_HandleCanFrame
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text35
  5047  0011E2                     __ptext35:
  5048                           	opt callstack 0
  5049  0011E2                     ___awdiv:
  5050                           	opt callstack 25
  5051                           
  5052                           ;incstack = 0
  5053  0011E2  0E00               	movlw	0
  5054  0011E4  6E0B               	movwf	___awdiv@sign,c
  5055  0011E6  AE09               	btfss	___awdiv@divisor+1,7,c
  5056  0011E8  D006               	goto	l4487
  5057  0011EA  6C08               	negf	___awdiv@divisor,c
  5058  0011EC  1E09               	comf	___awdiv@divisor+1,f,c
  5059  0011EE  B0D8               	btfsc	status,0,c
  5060  0011F0  2A09               	incf	___awdiv@divisor+1,f,c
  5061  0011F2  0E01               	movlw	1
  5062  0011F4  6E0B               	movwf	___awdiv@sign,c
  5063  0011F6                     l4487:
  5064  0011F6  AE07               	btfss	___awdiv@dividend+1,7,c
  5065  0011F8  D006               	goto	l4493
  5066  0011FA  6C06               	negf	___awdiv@dividend,c
  5067  0011FC  1E07               	comf	___awdiv@dividend+1,f,c
  5068  0011FE  B0D8               	btfsc	status,0,c
  5069  001200  2A07               	incf	___awdiv@dividend+1,f,c
  5070  001202  0E01               	movlw	1
  5071  001204  1A0B               	xorwf	___awdiv@sign,f,c
  5072  001206                     l4493:
  5073  001206  0E00               	movlw	0
  5074  001208  6E0D               	movwf	___awdiv@quotient+1,c
  5075  00120A  0E00               	movlw	0
  5076  00120C  6E0C               	movwf	___awdiv@quotient,c
  5077  00120E  5008               	movf	___awdiv@divisor,w,c
  5078  001210  1009               	iorwf	___awdiv@divisor+1,w,c
  5079  001212  B4D8               	btfsc	status,2,c
  5080  001214  D01C               	goto	l4515
  5081  001216  0E01               	movlw	1
  5082  001218  6E0A               	movwf	___awdiv@counter,c
  5083  00121A  D004               	goto	l4501
  5084  00121C                     l4499:
  5085  00121C  90D8               	bcf	status,0,c
  5086  00121E  3608               	rlcf	___awdiv@divisor,f,c
  5087  001220  3609               	rlcf	___awdiv@divisor+1,f,c
  5088  001222  2A0A               	incf	___awdiv@counter,f,c
  5089  001224                     l4501:
  5090  001224  AE09               	btfss	___awdiv@divisor+1,7,c
  5091  001226  D7FA               	goto	l4499
  5092  001228                     u2930:
  5093  001228  90D8               	bcf	status,0,c
  5094  00122A  360C               	rlcf	___awdiv@quotient,f,c
  5095  00122C  360D               	rlcf	___awdiv@quotient+1,f,c
  5096  00122E  5008               	movf	___awdiv@divisor,w,c
  5097  001230  5C06               	subwf	___awdiv@dividend,w,c
  5098  001232  5009               	movf	___awdiv@divisor+1,w,c
  5099  001234  5807               	subwfb	___awdiv@dividend+1,w,c
  5100  001236  A0D8               	btfss	status,0,c
  5101  001238  D005               	goto	l4511
  5102  00123A  5008               	movf	___awdiv@divisor,w,c
  5103  00123C  5E06               	subwf	___awdiv@dividend,f,c
  5104  00123E  5009               	movf	___awdiv@divisor+1,w,c
  5105  001240  5A07               	subwfb	___awdiv@dividend+1,f,c
  5106  001242  800C               	bsf	___awdiv@quotient,0,c
  5107  001244                     l4511:
  5108  001244  90D8               	bcf	status,0,c
  5109  001246  3209               	rrcf	___awdiv@divisor+1,f,c
  5110  001248  3208               	rrcf	___awdiv@divisor,f,c
  5111  00124A  2E0A               	decfsz	___awdiv@counter,f,c
  5112  00124C  D7ED               	goto	u2930
  5113  00124E                     l4515:
  5114  00124E  500B               	movf	___awdiv@sign,w,c
  5115  001250  B4D8               	btfsc	status,2,c
  5116  001252  D004               	goto	l4519
  5117  001254  6C0C               	negf	___awdiv@quotient,c
  5118  001256  1E0D               	comf	___awdiv@quotient+1,f,c
  5119  001258  B0D8               	btfsc	status,0,c
  5120  00125A  2A0D               	incf	___awdiv@quotient+1,f,c
  5121  00125C                     l4519:
  5122  00125C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5123  001260  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5124  001264  0012               	return		;funcret
  5125  001266                     __end_of___awdiv:
  5126                           	opt callstack 0
  5127                           
  5128 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5129 ;; Defined at:
  5130 ;;		line 233 in file "CAN.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5133 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5134 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5135 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  i               1    9[COMRAM] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:        5 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    3
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_CAN_SendFrame
  5158 ;;		_CAN_TakeFrame
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text36
  5163  0019E4                     __ptext36:
  5164                           	opt callstack 0
  5165  0019E4                     _CAN_MoveBuffIntoFrame:
  5166                           	opt callstack 24
  5167                           
  5168                           ;CAN.c: 235: BYTE i;;CAN.c: 236: for(i=0; i<8; ++i)
  5169                           
  5170                           ;incstack = 0
  5171  0019E4  0E00               	movlw	0
  5172  0019E6  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  5173  0019E8                     l3929:
  5174                           
  5175                           ;CAN.c: 237: {;CAN.c: 238: Ram[i]=(*(Buf+i));
  5176  0019E8  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5177  0019EA  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5178  0019EC  6ED9               	movwf	fsr2l,c
  5179  0019EE  0E00               	movlw	0
  5180  0019F0  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5181  0019F2  6EDA               	movwf	fsr2h,c
  5182  0019F4  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5183  0019F6  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5184  0019F8  6EE1               	movwf	fsr1l,c
  5185  0019FA  0E00               	movlw	0
  5186  0019FC  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5187  0019FE  6EE2               	movwf	fsr1h,c
  5188  001A00  CFDF FFE7          	movff	indf2,indf1
  5189  001A04  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5190  001A06  0E07               	movlw	7
  5191  001A08  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5192  001A0A  D7EE               	goto	l3929
  5193  001A0C  0012               	return	
  5194  001A0E                     __end_of_CAN_MoveBuffIntoFrame:
  5195                           	opt callstack 0
  5196                           
  5197 ;; *************** function _TMR1_Update_flag_Set *****************
  5198 ;; Defined at:
  5199 ;;		line 32 in file "TMR1.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  a               2    5[COMRAM] unsigned int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		None
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;Total ram usage:        2 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    3
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_main
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text37
  5228  001B60                     __ptext37:
  5229                           	opt callstack 0
  5230  001B60                     _TMR1_Update_flag_Set:
  5231                           	opt callstack 27
  5232                           
  5233                           ;TMR1.c: 34: TMR1_Update_flag = a;
  5234                           
  5235                           ;incstack = 0
  5236  001B60  C006  F033         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5237  001B64  C007  F034         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5238  001B68  0012               	return		;funcret
  5239  001B6A                     __end_of_TMR1_Update_flag_Set:
  5240                           	opt callstack 0
  5241                           
  5242 ;; *************** function _TMR1_Update_flag_Get *****************
  5243 ;; Defined at:
  5244 ;;		line 47 in file "TMR1.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  2    5[COMRAM] unsigned int 
  5251 ;; Registers used:
  5252 ;;		None
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;Total ram usage:        2 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    3
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_main
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text38
  5273  001B6A                     __ptext38:
  5274                           	opt callstack 0
  5275  001B6A                     _TMR1_Update_flag_Get:
  5276                           	opt callstack 27
  5277                           
  5278                           ;TMR1.c: 49: return TMR1_Update_flag;
  5279                           
  5280                           ;incstack = 0
  5281  001B6A  C033  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5282  001B6E  C034  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5283  001B72  0012               	return		;funcret
  5284  001B74                     __end_of_TMR1_Update_flag_Get:
  5285                           	opt callstack 0
  5286                           
  5287 ;; *************** function _LED_Update *****************
  5288 ;; Defined at:
  5289 ;;		line 148 in file "LED.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;		None
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;		None
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  1    wreg      unsigned char 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0, cstack
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;Total ram usage:        0 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    5
  5310 ;; This function calls:
  5311 ;;		_LED_Control
  5312 ;;		_LED_Left
  5313 ;;		_LED_Light_Pos
  5314 ;;		_LED_Right
  5315 ;; This function is called by:
  5316 ;;		_main
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text39
  5321  001266                     __ptext39:
  5322                           	opt callstack 0
  5323  001266                     _LED_Update:
  5324                           	opt callstack 25
  5325                           
  5326                           ;LED.c: 150: static LED_RGA_type Red = RED;;LED.c: 151: static LED_RGA_type Green = GREE
      +                          N;;LED.c: 152: static UINT pos1 = 0b0000000001;;LED.c: 153: static UINT pos2 = 0b0000000
      +                          001;;LED.c: 155: if(LOCK == 0)
  5327                           
  5328                           ;incstack = 0
  5329  001266  503A               	movf	_LOCK,w,c
  5330  001268  A4D8               	btfss	status,2,c
  5331  00126A  D013               	goto	l4803
  5332                           
  5333                           ;LED.c: 156: {;LED.c: 157: LED_Control(RED,0b0000000000);
  5334  00126C  0E00               	movlw	0
  5335  00126E  6E07               	movwf	LED_Control@diode+1,c
  5336  001270  0E00               	movlw	0
  5337  001272  6E06               	movwf	LED_Control@diode,c
  5338  001274  0E00               	movlw	0
  5339  001276  EC3C  F005         	call	_LED_Control
  5340                           
  5341                           ;LED.c: 158: LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5342  00127A  C04F  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5343  00127E  C050  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5344  001282  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5345  001286  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5346  00128A  5055               	movf	LED_Update@Green,w,c
  5347  00128C  ECFF  F007         	call	_LED_Light_Pos
  5348                           
  5349                           ;LED.c: 160: }
  5350  001290  D012               	goto	l392
  5351  001292                     l4803:
  5352                           
  5353                           ;LED.c: 161: else;LED.c: 162: {;LED.c: 163: LED_Control(Green,0b0000000000);
  5354  001292  0E00               	movlw	0
  5355  001294  6E07               	movwf	LED_Control@diode+1,c
  5356  001296  0E00               	movlw	0
  5357  001298  6E06               	movwf	LED_Control@diode,c
  5358  00129A  5055               	movf	LED_Update@Green,w,c
  5359  00129C  EC3C  F005         	call	_LED_Control
  5360                           
  5361                           ;LED.c: 164: LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5362  0012A0  C051  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5363  0012A4  C052  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5364  0012A8  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5365  0012AC  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5366  0012B0  0E00               	movlw	0
  5367  0012B2  ECFF  F007         	call	_LED_Light_Pos
  5368  0012B6                     l392:
  5369                           
  5370                           ;LED.c: 165: };LED.c: 166: pos1 = LED_Right(pos1);
  5371  0012B6  C051  F006         	movff	LED_Update@pos1,LED_Right@a
  5372  0012BA  C052  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5373  0012BE  EC94  F00B         	call	_LED_Right	;wreg free
  5374  0012C2  C006  F051         	movff	?_LED_Right,LED_Update@pos1
  5375  0012C6  C007  F052         	movff	?_LED_Right+1,LED_Update@pos1+1
  5376                           
  5377                           ;LED.c: 167: pos2 = LED_Left(pos2);
  5378  0012CA  C04F  F006         	movff	LED_Update@pos2,LED_Left@a
  5379  0012CE  C050  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5380  0012D2  ECDF  F00B         	call	_LED_Left	;wreg free
  5381  0012D6  C006  F04F         	movff	?_LED_Left,LED_Update@pos2
  5382  0012DA  C007  F050         	movff	?_LED_Left+1,LED_Update@pos2+1
  5383  0012DE  0012               	return		;funcret
  5384  0012E0                     __end_of_LED_Update:
  5385                           	opt callstack 0
  5386                           
  5387 ;; *************** function _LED_Light_Pos *****************
  5388 ;; Defined at:
  5389 ;;		line 239 in file "LED.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  color           1    wreg     enum E10511
  5392 ;;  pos             2   12[COMRAM] unsigned int 
  5393 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  color           1   16[COMRAM] enum E10511
  5396 ;;  flage           2   21[COMRAM] unsigned int 
  5397 ;;  pos2            2   19[COMRAM] unsigned int 
  5398 ;;  LED_array       2   17[COMRAM] unsigned int 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  2   12[COMRAM] unsigned int 
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;Total ram usage:       11 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    4
  5415 ;; This function calls:
  5416 ;;		_LED_Control
  5417 ;;		_LED_Left
  5418 ;;		_LED_Right
  5419 ;;		___lwdiv
  5420 ;; This function is called by:
  5421 ;;		_LED_Update
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text40
  5426  000FFE                     __ptext40:
  5427                           	opt callstack 0
  5428  000FFE                     _LED_Light_Pos:
  5429                           	opt callstack 25
  5430                           
  5431                           ;incstack = 0
  5432                           ;LED_Light_Pos@color stored from wreg
  5433  000FFE  6E11               	movwf	LED_Light_Pos@color,c
  5434                           
  5435                           ;LED.c: 241: UINT pos2 =pos;
  5436  001000  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5437  001004  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5438                           
  5439                           ;LED.c: 242: UINT LED_array = 0b0000000000;
  5440  001008  0E00               	movlw	0
  5441  00100A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5442  00100C  0E00               	movlw	0
  5443  00100E  6E12               	movwf	LED_Light_Pos@LED_array,c
  5444                           
  5445                           ;LED.c: 243: UINT flage = fulfillment/10;
  5446  001010  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5447  001014  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5448  001018  0E00               	movlw	0
  5449  00101A  6E09               	movwf	___lwdiv@divisor+1,c
  5450  00101C  0E0A               	movlw	10
  5451  00101E  6E08               	movwf	___lwdiv@divisor,c
  5452  001020  EC44  F00B         	call	___lwdiv	;wreg free
  5453  001024  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5454  001028  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5455                           
  5456                           ;LED.c: 244: if(color == RED)
  5457  00102C  5011               	movf	LED_Light_Pos@color,w,c
  5458  00102E  B4D8               	btfsc	status,2,c
  5459  001030  D017               	goto	l4633
  5460  001032  D031               	goto	l4641
  5461  001034                     l4627:
  5462                           
  5463                           ;LED.c: 247: {;LED.c: 248: LED_array = pos2|LED_array;
  5464  001034  5012               	movf	LED_Light_Pos@LED_array,w,c
  5465  001036  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5466  001038  6E12               	movwf	LED_Light_Pos@LED_array,c
  5467  00103A  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5468  00103C  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5469  00103E  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5470                           
  5471                           ;LED.c: 249: pos2 = LED_Left(pos2);
  5472  001040  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5473  001044  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5474  001048  ECDF  F00B         	call	_LED_Left	;wreg free
  5475  00104C  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5476  001050  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5477                           
  5478                           ;LED.c: 250: flage = flage - 1;
  5479  001054  0EFF               	movlw	255
  5480  001056  2416               	addwf	LED_Light_Pos@flage,w,c
  5481  001058  6E16               	movwf	LED_Light_Pos@flage,c
  5482  00105A  0EFF               	movlw	255
  5483  00105C  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5484  00105E  6E17               	movwf	LED_Light_Pos@flage+1,c
  5485  001060                     l4633:
  5486  001060  5016               	movf	LED_Light_Pos@flage,w,c
  5487  001062  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5488  001064  B4D8               	btfsc	status,2,c
  5489  001066  D01B               	goto	u3040
  5490  001068  D7E5               	goto	l4627
  5491  00106A                     l4635:
  5492                           
  5493                           ;LED.c: 256: {;LED.c: 257: LED_array = pos2|LED_array;
  5494  00106A  5012               	movf	LED_Light_Pos@LED_array,w,c
  5495  00106C  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5496  00106E  6E12               	movwf	LED_Light_Pos@LED_array,c
  5497  001070  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5498  001072  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5499  001074  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5500                           
  5501                           ;LED.c: 258: pos2 = LED_Right(pos2);
  5502  001076  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5503  00107A  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5504  00107E  EC94  F00B         	call	_LED_Right	;wreg free
  5505  001082  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5506  001086  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5507                           
  5508                           ;LED.c: 259: flage = flage - 1;
  5509  00108A  0EFF               	movlw	255
  5510  00108C  2416               	addwf	LED_Light_Pos@flage,w,c
  5511  00108E  6E16               	movwf	LED_Light_Pos@flage,c
  5512  001090  0EFF               	movlw	255
  5513  001092  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5514  001094  6E17               	movwf	LED_Light_Pos@flage+1,c
  5515  001096                     l4641:
  5516  001096  5016               	movf	LED_Light_Pos@flage,w,c
  5517  001098  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5518  00109A  A4D8               	btfss	status,2,c
  5519  00109C  D7E6               	goto	l4635
  5520  00109E                     u3040:
  5521                           
  5522                           ;LED.c: 260: };LED.c: 261: };LED.c: 262: LED_Control(color, LED_array);
  5523  00109E  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5524  0010A2  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5525  0010A6  5011               	movf	LED_Light_Pos@color,w,c
  5526  0010A8  EC3C  F005         	call	_LED_Control
  5527  0010AC  0012               	return		;funcret
  5528  0010AE                     __end_of_LED_Light_Pos:
  5529                           	opt callstack 0
  5530                           
  5531 ;; *************** function ___lwdiv *****************
  5532 ;; Defined at:
  5533 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  dividend        2    5[COMRAM] unsigned int 
  5536 ;;  divisor         2    7[COMRAM] unsigned int 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  quotient        2   10[COMRAM] unsigned int 
  5539 ;;  counter         1    9[COMRAM] unsigned char 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  2    5[COMRAM] unsigned int 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5550 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;Total ram usage:        7 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    3
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_LED_Light_Pos
  5560 ;;		_FRAME_Plot
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text41
  5565  001688                     __ptext41:
  5566                           	opt callstack 0
  5567  001688                     ___lwdiv:
  5568                           	opt callstack 24
  5569                           
  5570                           ;incstack = 0
  5571  001688  0E00               	movlw	0
  5572  00168A  6E0C               	movwf	___lwdiv@quotient+1,c
  5573  00168C  0E00               	movlw	0
  5574  00168E  6E0B               	movwf	___lwdiv@quotient,c
  5575  001690  5008               	movf	___lwdiv@divisor,w,c
  5576  001692  1009               	iorwf	___lwdiv@divisor+1,w,c
  5577  001694  B4D8               	btfsc	status,2,c
  5578  001696  D01C               	goto	l1437
  5579  001698  0E01               	movlw	1
  5580  00169A  6E0A               	movwf	___lwdiv@counter,c
  5581  00169C  D004               	goto	l4175
  5582  00169E                     l4173:
  5583  00169E  90D8               	bcf	status,0,c
  5584  0016A0  3608               	rlcf	___lwdiv@divisor,f,c
  5585  0016A2  3609               	rlcf	___lwdiv@divisor+1,f,c
  5586  0016A4  2A0A               	incf	___lwdiv@counter,f,c
  5587  0016A6                     l4175:
  5588  0016A6  AE09               	btfss	___lwdiv@divisor+1,7,c
  5589  0016A8  D7FA               	goto	l4173
  5590  0016AA                     u2530:
  5591  0016AA  90D8               	bcf	status,0,c
  5592  0016AC  360B               	rlcf	___lwdiv@quotient,f,c
  5593  0016AE  360C               	rlcf	___lwdiv@quotient+1,f,c
  5594  0016B0  5008               	movf	___lwdiv@divisor,w,c
  5595  0016B2  5C06               	subwf	___lwdiv@dividend,w,c
  5596  0016B4  5009               	movf	___lwdiv@divisor+1,w,c
  5597  0016B6  5807               	subwfb	___lwdiv@dividend+1,w,c
  5598  0016B8  A0D8               	btfss	status,0,c
  5599  0016BA  D005               	goto	l4185
  5600  0016BC  5008               	movf	___lwdiv@divisor,w,c
  5601  0016BE  5E06               	subwf	___lwdiv@dividend,f,c
  5602  0016C0  5009               	movf	___lwdiv@divisor+1,w,c
  5603  0016C2  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5604  0016C4  800B               	bsf	___lwdiv@quotient,0,c
  5605  0016C6                     l4185:
  5606  0016C6  90D8               	bcf	status,0,c
  5607  0016C8  3209               	rrcf	___lwdiv@divisor+1,f,c
  5608  0016CA  3208               	rrcf	___lwdiv@divisor,f,c
  5609  0016CC  2E0A               	decfsz	___lwdiv@counter,f,c
  5610  0016CE  D7ED               	goto	u2530
  5611  0016D0                     l1437:
  5612  0016D0  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5613  0016D4  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5614  0016D8  0012               	return		;funcret
  5615  0016DA                     __end_of___lwdiv:
  5616                           	opt callstack 0
  5617                           
  5618 ;; *************** function _LED_Right *****************
  5619 ;; Defined at:
  5620 ;;		line 183 in file "LED.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  a               2    5[COMRAM] unsigned int 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  b               2    9[COMRAM] unsigned int 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  2    5[COMRAM] unsigned int 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;Total ram usage:        6 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    3
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		_LED_Update
  5645 ;;		_LED_Light_Pos
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text42
  5650  001728                     __ptext42:
  5651                           	opt callstack 0
  5652  001728                     _LED_Right:
  5653                           	opt callstack 26
  5654                           
  5655                           ;LED.c: 185: if ((a & 0b0000000001) == 0b0000000001)
  5656                           
  5657                           ;incstack = 0
  5658  001728  A006               	btfss	LED_Right@a,0,c
  5659  00172A  D018               	goto	l4289
  5660                           
  5661                           ;LED.c: 186: {;LED.c: 187: UINT b = a & 0b1111111110;
  5662  00172C  0EFE               	movlw	254
  5663  00172E  1406               	andwf	LED_Right@a,w,c
  5664  001730  6E0A               	movwf	LED_Right@b,c
  5665  001732  0E03               	movlw	3
  5666  001734  1407               	andwf	LED_Right@a+1,w,c
  5667  001736  6E0B               	movwf	LED_Right@b+1,c
  5668                           
  5669                           ;LED.c: 188: b = b >> 1;
  5670  001738  90D8               	bcf	status,0,c
  5671  00173A  300B               	rrcf	LED_Right@b+1,w,c
  5672  00173C  6E08               	movwf	??_LED_Right& (0+255),c
  5673  00173E  300A               	rrcf	LED_Right@b,w,c
  5674  001740  6E0A               	movwf	LED_Right@b,c
  5675  001742  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5676                           
  5677                           ;LED.c: 189: b = b | 0b1000000000;
  5678  001746  0E00               	movlw	0
  5679  001748  100A               	iorwf	LED_Right@b,w,c
  5680  00174A  6E0A               	movwf	LED_Right@b,c
  5681  00174C  0E02               	movlw	2
  5682  00174E  100B               	iorwf	LED_Right@b+1,w,c
  5683  001750  6E0B               	movwf	LED_Right@b+1,c
  5684                           
  5685                           ;LED.c: 190: return b;
  5686  001752  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5687  001756  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5688  00175A  0012               	return	
  5689  00175C                     l4289:
  5690                           
  5691                           ;LED.c: 192: else;LED.c: 193: {;LED.c: 194: a =a >> 1;
  5692  00175C  90D8               	bcf	status,0,c
  5693  00175E  3007               	rrcf	LED_Right@a+1,w,c
  5694  001760  6E08               	movwf	??_LED_Right& (0+255),c
  5695  001762  3006               	rrcf	LED_Right@a,w,c
  5696  001764  6E06               	movwf	LED_Right@a,c
  5697  001766  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5698                           
  5699                           ;LED.c: 195: return a;
  5700  00176A  C006  F006         	movff	LED_Right@a,?_LED_Right
  5701  00176E  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5702  001772  0012               	return		;funcret
  5703  001774                     __end_of_LED_Right:
  5704                           	opt callstack 0
  5705                           
  5706 ;; *************** function _LED_Left *****************
  5707 ;; Defined at:
  5708 ;;		line 210 in file "LED.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  a               2    5[COMRAM] unsigned int 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  b               2    7[COMRAM] unsigned int 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  2    5[COMRAM] unsigned int 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;Total ram usage:        4 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    3
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_LED_Update
  5733 ;;		_LED_Light_Pos
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text43
  5738  0017BE                     __ptext43:
  5739                           	opt callstack 0
  5740  0017BE                     _LED_Left:
  5741                           	opt callstack 25
  5742                           
  5743                           ;LED.c: 212: if ((a & 0b1000000000) == 0b1000000000)
  5744                           
  5745                           ;incstack = 0
  5746  0017BE  A207               	btfss	LED_Left@a+1,1,c
  5747  0017C0  D015               	goto	l4305
  5748                           
  5749                           ;LED.c: 213: {;LED.c: 214: UINT b = a & 0b0111111111;
  5750  0017C2  0EFF               	movlw	255
  5751  0017C4  1406               	andwf	LED_Left@a,w,c
  5752  0017C6  6E08               	movwf	LED_Left@b,c
  5753  0017C8  0E01               	movlw	1
  5754  0017CA  1407               	andwf	LED_Left@a+1,w,c
  5755  0017CC  6E09               	movwf	LED_Left@b+1,c
  5756                           
  5757                           ;LED.c: 215: b = b << 1;
  5758  0017CE  90D8               	bcf	status,0,c
  5759  0017D0  3408               	rlcf	LED_Left@b,w,c
  5760  0017D2  6E08               	movwf	LED_Left@b,c
  5761  0017D4  3409               	rlcf	LED_Left@b+1,w,c
  5762  0017D6  6E09               	movwf	LED_Left@b+1,c
  5763                           
  5764                           ;LED.c: 216: b = b | 0b0000000001;
  5765  0017D8  0E01               	movlw	1
  5766  0017DA  1008               	iorwf	LED_Left@b,w,c
  5767  0017DC  6E08               	movwf	LED_Left@b,c
  5768  0017DE  5009               	movf	LED_Left@b+1,w,c
  5769  0017E0  6E09               	movwf	LED_Left@b+1,c
  5770                           
  5771                           ;LED.c: 217: return b;
  5772  0017E2  C008  F006         	movff	LED_Left@b,?_LED_Left
  5773  0017E6  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5774  0017EA  0012               	return	
  5775  0017EC                     l4305:
  5776                           
  5777                           ;LED.c: 219: else;LED.c: 220: {;LED.c: 221: a = a << 1;
  5778  0017EC  90D8               	bcf	status,0,c
  5779  0017EE  3406               	rlcf	LED_Left@a,w,c
  5780  0017F0  6E06               	movwf	LED_Left@a,c
  5781  0017F2  3407               	rlcf	LED_Left@a+1,w,c
  5782  0017F4  6E07               	movwf	LED_Left@a+1,c
  5783                           
  5784                           ;LED.c: 222: return a;
  5785  0017F6  C006  F006         	movff	LED_Left@a,?_LED_Left
  5786  0017FA  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5787  0017FE  0012               	return		;funcret
  5788  001800                     __end_of_LED_Left:
  5789                           	opt callstack 0
  5790                           
  5791 ;; *************** function _INI_All *****************
  5792 ;; Defined at:
  5793 ;;		line 54 in file "INI.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;Total ram usage:        0 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    6
  5814 ;; This function calls:
  5815 ;;		_CAN_Setup
  5816 ;;		_INI_GlobalInterrupt
  5817 ;;		_INI_LED_Start
  5818 ;;		_INI_OUTPUT
  5819 ;;		_INI_Timer
  5820 ;;		_NVMInit
  5821 ;;		_ReadDataToEEPROM
  5822 ;; This function is called by:
  5823 ;;		_main
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text44
  5828  001A5A                     __ptext44:
  5829                           	opt callstack 0
  5830  001A5A                     _INI_All:
  5831                           	opt callstack 24
  5832                           
  5833                           ;INI.c: 57: WDTCONbits.SWDTEN = 1;
  5834                           
  5835                           ;incstack = 0
  5836  001A5A  80D1               	bsf	4049,0,c	;volatile
  5837                           
  5838                           ;INI.c: 60: NVMInit();
  5839  001A5C  EC00  F00C         	call	_NVMInit	;wreg free
  5840                           
  5841                           ;INI.c: 62: ReadDataToEEPROM();
  5842  001A60  ECBC  F003         	call	_ReadDataToEEPROM	;wreg free
  5843  001A64  0004               	clrwdt		;# 
  5844                           
  5845                           ;INI.c: 66: INI_OUTPUT();
  5846  001A66  EC3E  F00D         	call	_INI_OUTPUT	;wreg free
  5847                           
  5848                           ;INI.c: 68: CAN_Setup();
  5849  001A6A  EC90  F00A         	call	_CAN_Setup	;wreg free
  5850                           
  5851                           ;INI.c: 69: INI_GlobalInterrupt();
  5852  001A6E  EC84  F00D         	call	_INI_GlobalInterrupt	;wreg free
  5853                           
  5854                           ;INI.c: 71: INI_Timer();
  5855  001A72  EC5D  F00D         	call	_INI_Timer	;wreg free
  5856                           
  5857                           ;INI.c: 73: INI_LED_Start();
  5858  001A76  ECD8  F00C         	call	_INI_LED_Start	;wreg free
  5859  001A7A  0012               	return		;funcret
  5860  001A7C                     __end_of_INI_All:
  5861                           	opt callstack 0
  5862                           
  5863 ;; *************** function _ReadDataToEEPROM *****************
  5864 ;; Defined at:
  5865 ;;		line 481 in file "FRAME.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;		None
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;		None
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1    wreg      void 
  5872 ;; Registers used:
  5873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5883 ;;Total ram usage:        0 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:    5
  5886 ;; This function calls:
  5887 ;;		_NVMRead
  5888 ;; This function is called by:
  5889 ;;		_INI_All
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text45
  5894  000778                     __ptext45:
  5895                           	opt callstack 0
  5896  000778                     _ReadDataToEEPROM:
  5897                           	opt callstack 24
  5898                           
  5899                           ;FRAME.c: 484: NVMRead(&Init_Data,10,2);
  5900                           
  5901                           ;incstack = 0
  5902  000778  0E56               	movlw	low _Init_Data
  5903  00077A  6E08               	movwf	NVMRead@dest,c
  5904  00077C  0E00               	movlw	high _Init_Data
  5905  00077E  6E09               	movwf	NVMRead@dest+1,c
  5906  000780  0E00               	movlw	0
  5907  000782  6E0B               	movwf	NVMRead@addr+1,c
  5908  000784  0E0A               	movlw	10
  5909  000786  6E0A               	movwf	NVMRead@addr,c
  5910  000788  0E00               	movlw	0
  5911  00078A  6E0D               	movwf	NVMRead@count+1,c
  5912  00078C  0E02               	movlw	2
  5913  00078E  6E0C               	movwf	NVMRead@count,c
  5914  000790  ECBE  F00C         	call	_NVMRead	;wreg free
  5915                           
  5916                           ;FRAME.c: 485: NVMRead(&NeightAdress1,13,2);
  5917  000794  0E4B               	movlw	low _NeightAdress1
  5918  000796  6E08               	movwf	NVMRead@dest,c
  5919  000798  0E00               	movlw	high _NeightAdress1
  5920  00079A  6E09               	movwf	NVMRead@dest+1,c
  5921  00079C  0E00               	movlw	0
  5922  00079E  6E0B               	movwf	NVMRead@addr+1,c
  5923  0007A0  0E0D               	movlw	13
  5924  0007A2  6E0A               	movwf	NVMRead@addr,c
  5925  0007A4  0E00               	movlw	0
  5926  0007A6  6E0D               	movwf	NVMRead@count+1,c
  5927  0007A8  0E02               	movlw	2
  5928  0007AA  6E0C               	movwf	NVMRead@count,c
  5929  0007AC  ECBE  F00C         	call	_NVMRead	;wreg free
  5930                           
  5931                           ;FRAME.c: 486: if(NeightAdress1==0xFFFF)
  5932  0007B0  284B               	incf	_NeightAdress1,w,c	;volatile
  5933  0007B2  E107               	bnz	l4671
  5934  0007B4  284C               	incf	_NeightAdress1+1,w,c	;volatile
  5935  0007B6  A4D8               	btfss	status,2,c
  5936  0007B8  D004               	goto	l4671
  5937                           
  5938                           ;FRAME.c: 487: {;FRAME.c: 488: NeightAdress1=0x0000;
  5939  0007BA  0E00               	movlw	0
  5940  0007BC  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  5941  0007BE  0E00               	movlw	0
  5942  0007C0  6E4B               	movwf	_NeightAdress1,c	;volatile
  5943  0007C2                     l4671:
  5944                           
  5945                           ;FRAME.c: 489: };FRAME.c: 490: NVMRead(&NeightAdress2,16,2);
  5946  0007C2  0E58               	movlw	low _NeightAdress2
  5947  0007C4  6E08               	movwf	NVMRead@dest,c
  5948  0007C6  0E00               	movlw	high _NeightAdress2
  5949  0007C8  6E09               	movwf	NVMRead@dest+1,c
  5950  0007CA  0E00               	movlw	0
  5951  0007CC  6E0B               	movwf	NVMRead@addr+1,c
  5952  0007CE  0E10               	movlw	16
  5953  0007D0  6E0A               	movwf	NVMRead@addr,c
  5954  0007D2  0E00               	movlw	0
  5955  0007D4  6E0D               	movwf	NVMRead@count+1,c
  5956  0007D6  0E02               	movlw	2
  5957  0007D8  6E0C               	movwf	NVMRead@count,c
  5958  0007DA  ECBE  F00C         	call	_NVMRead	;wreg free
  5959                           
  5960                           ;FRAME.c: 491: if(NeightAdress2==0xFFFF)
  5961  0007DE  2858               	incf	_NeightAdress2,w,c	;volatile
  5962  0007E0  E107               	bnz	l4677
  5963  0007E2  2859               	incf	_NeightAdress2+1,w,c	;volatile
  5964  0007E4  A4D8               	btfss	status,2,c
  5965  0007E6  D004               	goto	l4677
  5966                           
  5967                           ;FRAME.c: 492: {;FRAME.c: 493: NeightAdress2=0x0000;
  5968  0007E8  0E00               	movlw	0
  5969  0007EA  6E59               	movwf	_NeightAdress2+1,c	;volatile
  5970  0007EC  0E00               	movlw	0
  5971  0007EE  6E58               	movwf	_NeightAdress2,c	;volatile
  5972  0007F0                     l4677:
  5973                           
  5974                           ;FRAME.c: 494: };FRAME.c: 495: NVMRead(&NeightAdress3,19,2);
  5975  0007F0  0E49               	movlw	low _NeightAdress3
  5976  0007F2  6E08               	movwf	NVMRead@dest,c
  5977  0007F4  0E00               	movlw	high _NeightAdress3
  5978  0007F6  6E09               	movwf	NVMRead@dest+1,c
  5979  0007F8  0E00               	movlw	0
  5980  0007FA  6E0B               	movwf	NVMRead@addr+1,c
  5981  0007FC  0E13               	movlw	19
  5982  0007FE  6E0A               	movwf	NVMRead@addr,c
  5983  000800  0E00               	movlw	0
  5984  000802  6E0D               	movwf	NVMRead@count+1,c
  5985  000804  0E02               	movlw	2
  5986  000806  6E0C               	movwf	NVMRead@count,c
  5987  000808  ECBE  F00C         	call	_NVMRead	;wreg free
  5988                           
  5989                           ;FRAME.c: 496: if(NeightAdress3==0xFFFF)
  5990  00080C  2849               	incf	_NeightAdress3,w,c	;volatile
  5991  00080E  E107               	bnz	l4683
  5992  000810  284A               	incf	_NeightAdress3+1,w,c	;volatile
  5993  000812  A4D8               	btfss	status,2,c
  5994  000814  D004               	goto	l4683
  5995                           
  5996                           ;FRAME.c: 497: {;FRAME.c: 498: NeightAdress3=0x0000;
  5997  000816  0E00               	movlw	0
  5998  000818  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  5999  00081A  0E00               	movlw	0
  6000  00081C  6E49               	movwf	_NeightAdress3,c	;volatile
  6001  00081E                     l4683:
  6002                           
  6003                           ;FRAME.c: 499: };FRAME.c: 500: NVMRead(&NeightAdress4,22,2);
  6004  00081E  0E47               	movlw	low _NeightAdress4
  6005  000820  6E08               	movwf	NVMRead@dest,c
  6006  000822  0E00               	movlw	high _NeightAdress4
  6007  000824  6E09               	movwf	NVMRead@dest+1,c
  6008  000826  0E00               	movlw	0
  6009  000828  6E0B               	movwf	NVMRead@addr+1,c
  6010  00082A  0E16               	movlw	22
  6011  00082C  6E0A               	movwf	NVMRead@addr,c
  6012  00082E  0E00               	movlw	0
  6013  000830  6E0D               	movwf	NVMRead@count+1,c
  6014  000832  0E02               	movlw	2
  6015  000834  6E0C               	movwf	NVMRead@count,c
  6016  000836  ECBE  F00C         	call	_NVMRead	;wreg free
  6017                           
  6018                           ;FRAME.c: 501: if(NeightAdress4==0xFFFF)
  6019  00083A  2847               	incf	_NeightAdress4,w,c	;volatile
  6020  00083C  E107               	bnz	l4689
  6021  00083E  2848               	incf	_NeightAdress4+1,w,c	;volatile
  6022  000840  A4D8               	btfss	status,2,c
  6023  000842  D004               	goto	l4689
  6024                           
  6025                           ;FRAME.c: 502: {;FRAME.c: 503: NeightAdress4=0x0000;
  6026  000844  0E00               	movlw	0
  6027  000846  6E48               	movwf	_NeightAdress4+1,c	;volatile
  6028  000848  0E00               	movlw	0
  6029  00084A  6E47               	movwf	_NeightAdress4,c	;volatile
  6030  00084C                     l4689:
  6031                           
  6032                           ;FRAME.c: 504: };FRAME.c: 505: NVMRead(&NeightAdress5,25,2);
  6033  00084C  0E45               	movlw	low _NeightAdress5
  6034  00084E  6E08               	movwf	NVMRead@dest,c
  6035  000850  0E00               	movlw	high _NeightAdress5
  6036  000852  6E09               	movwf	NVMRead@dest+1,c
  6037  000854  0E00               	movlw	0
  6038  000856  6E0B               	movwf	NVMRead@addr+1,c
  6039  000858  0E19               	movlw	25
  6040  00085A  6E0A               	movwf	NVMRead@addr,c
  6041  00085C  0E00               	movlw	0
  6042  00085E  6E0D               	movwf	NVMRead@count+1,c
  6043  000860  0E02               	movlw	2
  6044  000862  6E0C               	movwf	NVMRead@count,c
  6045  000864  ECBE  F00C         	call	_NVMRead	;wreg free
  6046                           
  6047                           ;FRAME.c: 506: if(NeightAdress5==0xFFFF)
  6048  000868  2845               	incf	_NeightAdress5,w,c	;volatile
  6049  00086A  E107               	bnz	l4695
  6050  00086C  2846               	incf	_NeightAdress5+1,w,c	;volatile
  6051  00086E  A4D8               	btfss	status,2,c
  6052  000870  D004               	goto	l4695
  6053                           
  6054                           ;FRAME.c: 507: {;FRAME.c: 508: NeightAdress5=0x0000;
  6055  000872  0E00               	movlw	0
  6056  000874  6E46               	movwf	_NeightAdress5+1,c	;volatile
  6057  000876  0E00               	movlw	0
  6058  000878  6E45               	movwf	_NeightAdress5,c	;volatile
  6059  00087A                     l4695:
  6060                           
  6061                           ;FRAME.c: 509: };FRAME.c: 510: NVMRead(&NeightAdress6,28,2);
  6062  00087A  0E43               	movlw	low _NeightAdress6
  6063  00087C  6E08               	movwf	NVMRead@dest,c
  6064  00087E  0E00               	movlw	high _NeightAdress6
  6065  000880  6E09               	movwf	NVMRead@dest+1,c
  6066  000882  0E00               	movlw	0
  6067  000884  6E0B               	movwf	NVMRead@addr+1,c
  6068  000886  0E1C               	movlw	28
  6069  000888  6E0A               	movwf	NVMRead@addr,c
  6070  00088A  0E00               	movlw	0
  6071  00088C  6E0D               	movwf	NVMRead@count+1,c
  6072  00088E  0E02               	movlw	2
  6073  000890  6E0C               	movwf	NVMRead@count,c
  6074  000892  ECBE  F00C         	call	_NVMRead	;wreg free
  6075                           
  6076                           ;FRAME.c: 511: if(NeightAdress6==0xFFFF)
  6077  000896  2843               	incf	_NeightAdress6,w,c	;volatile
  6078  000898  E107               	bnz	l4701
  6079  00089A  2844               	incf	_NeightAdress6+1,w,c	;volatile
  6080  00089C  A4D8               	btfss	status,2,c
  6081  00089E  D004               	goto	l4701
  6082                           
  6083                           ;FRAME.c: 512: {;FRAME.c: 513: NeightAdress6=0x0000;
  6084  0008A0  0E00               	movlw	0
  6085  0008A2  6E44               	movwf	_NeightAdress6+1,c	;volatile
  6086  0008A4  0E00               	movlw	0
  6087  0008A6  6E43               	movwf	_NeightAdress6,c	;volatile
  6088  0008A8                     l4701:
  6089                           
  6090                           ;FRAME.c: 514: };FRAME.c: 515: NVMRead(&NeightAdress7,31,2);
  6091  0008A8  0E41               	movlw	low _NeightAdress7
  6092  0008AA  6E08               	movwf	NVMRead@dest,c
  6093  0008AC  0E00               	movlw	high _NeightAdress7
  6094  0008AE  6E09               	movwf	NVMRead@dest+1,c
  6095  0008B0  0E00               	movlw	0
  6096  0008B2  6E0B               	movwf	NVMRead@addr+1,c
  6097  0008B4  0E1F               	movlw	31
  6098  0008B6  6E0A               	movwf	NVMRead@addr,c
  6099  0008B8  0E00               	movlw	0
  6100  0008BA  6E0D               	movwf	NVMRead@count+1,c
  6101  0008BC  0E02               	movlw	2
  6102  0008BE  6E0C               	movwf	NVMRead@count,c
  6103  0008C0  ECBE  F00C         	call	_NVMRead	;wreg free
  6104                           
  6105                           ;FRAME.c: 516: if(NeightAdress7==0xFFFF)
  6106  0008C4  2841               	incf	_NeightAdress7,w,c	;volatile
  6107  0008C6  E107               	bnz	l4707
  6108  0008C8  2842               	incf	_NeightAdress7+1,w,c	;volatile
  6109  0008CA  A4D8               	btfss	status,2,c
  6110  0008CC  D004               	goto	l4707
  6111                           
  6112                           ;FRAME.c: 517: {;FRAME.c: 518: NeightAdress7=0x0000;
  6113  0008CE  0E00               	movlw	0
  6114  0008D0  6E42               	movwf	_NeightAdress7+1,c	;volatile
  6115  0008D2  0E00               	movlw	0
  6116  0008D4  6E41               	movwf	_NeightAdress7,c	;volatile
  6117  0008D6                     l4707:
  6118                           
  6119                           ;FRAME.c: 519: };FRAME.c: 520: NVMRead(&NeightAdress8,34,2);
  6120  0008D6  0E3F               	movlw	low _NeightAdress8
  6121  0008D8  6E08               	movwf	NVMRead@dest,c
  6122  0008DA  0E00               	movlw	high _NeightAdress8
  6123  0008DC  6E09               	movwf	NVMRead@dest+1,c
  6124  0008DE  0E00               	movlw	0
  6125  0008E0  6E0B               	movwf	NVMRead@addr+1,c
  6126  0008E2  0E22               	movlw	34
  6127  0008E4  6E0A               	movwf	NVMRead@addr,c
  6128  0008E6  0E00               	movlw	0
  6129  0008E8  6E0D               	movwf	NVMRead@count+1,c
  6130  0008EA  0E02               	movlw	2
  6131  0008EC  6E0C               	movwf	NVMRead@count,c
  6132  0008EE  ECBE  F00C         	call	_NVMRead	;wreg free
  6133                           
  6134                           ;FRAME.c: 521: if(NeightAdress8==0xFFFF)
  6135  0008F2  283F               	incf	_NeightAdress8,w,c	;volatile
  6136  0008F4  E107               	bnz	l639
  6137  0008F6  2840               	incf	_NeightAdress8+1,w,c	;volatile
  6138  0008F8  A4D8               	btfss	status,2,c
  6139  0008FA  0012               	return	
  6140                           
  6141                           ;FRAME.c: 522: {;FRAME.c: 523: NeightAdress8=0x0000;
  6142  0008FC  0E00               	movlw	0
  6143  0008FE  6E40               	movwf	_NeightAdress8+1,c	;volatile
  6144  000900  0E00               	movlw	0
  6145  000902  6E3F               	movwf	_NeightAdress8,c	;volatile
  6146  000904                     l639:
  6147  000904  0012               	return		;funcret
  6148  000906                     __end_of_ReadDataToEEPROM:
  6149                           	opt callstack 0
  6150                           
  6151 ;; *************** function _NVMRead *****************
  6152 ;; Defined at:
  6153 ;;		line 125 in file "EEPROM.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6156 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  6157 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  6158 ;;		 -> NeightAdress1(2), 
  6159 ;;  addr            2    9[COMRAM] unsigned short 
  6160 ;;  count           2   11[COMRAM] unsigned short 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;		None
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1    wreg      void 
  6165 ;; Registers used:
  6166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6172 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6175 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6176 ;;Total ram usage:        6 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; Hardware stack levels required when called:    4
  6179 ;; This function calls:
  6180 ;;		_ReadfromEEPROM
  6181 ;; This function is called by:
  6182 ;;		_ReadDataToEEPROM
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text46
  6187  00197C                     __ptext46:
  6188                           	opt callstack 0
  6189  00197C                     _NVMRead:
  6190                           	opt callstack 24
  6191                           
  6192                           ;EEPROM.c: 127: while( count > 0 )
  6193                           
  6194                           ;incstack = 0
  6195  00197C  D014               	goto	l4425
  6196  00197E                     l926:
  6197  00197E  B2A6               	btfsc	4006,1,c	;volsfr
  6198  001980  D7FE               	goto	l926
  6199                           
  6200                           ;EEPROM.c: 130: *dest++ = ReadfromEEPROM(addr++);
  6201  001982  C00A  F006         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6202  001986  C00B  F007         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6203  00198A  EC74  F00D         	call	_ReadfromEEPROM	;wreg free
  6204  00198E  C008  FFD9         	movff	NVMRead@dest,fsr2l
  6205  001992  C009  FFDA         	movff	NVMRead@dest+1,fsr2h
  6206  001996  6EDF               	movwf	indf2,c
  6207  001998  4A0A               	infsnz	NVMRead@addr,f,c
  6208  00199A  2A0B               	incf	NVMRead@addr+1,f,c
  6209  00199C  4A08               	infsnz	NVMRead@dest,f,c
  6210  00199E  2A09               	incf	NVMRead@dest+1,f,c
  6211                           
  6212                           ;EEPROM.c: 131: count--;
  6213  0019A0  060C               	decf	NVMRead@count,f,c
  6214  0019A2  A0D8               	btfss	status,0,c
  6215  0019A4  060D               	decf	NVMRead@count+1,f,c
  6216  0019A6                     l4425:
  6217  0019A6  500C               	movf	NVMRead@count,w,c
  6218  0019A8  100D               	iorwf	NVMRead@count+1,w,c
  6219  0019AA  B4D8               	btfsc	status,2,c
  6220  0019AC  0012               	return	
  6221  0019AE  D7E7               	goto	l926
  6222  0019B0                     __end_of_NVMRead:
  6223                           	opt callstack 0
  6224                           
  6225 ;; *************** function _ReadfromEEPROM *****************
  6226 ;; Defined at:
  6227 ;;		line 73 in file "EEPROM.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  Address         2    5[COMRAM] unsigned short 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      unsigned char 
  6234 ;; Registers used:
  6235 ;;		wreg, status,2
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;Total ram usage:        2 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    3
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		_NVMRead
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text47
  6256  001AE8                     __ptext47:
  6257                           	opt callstack 0
  6258  001AE8                     _ReadfromEEPROM:
  6259                           	opt callstack 24
  6260                           
  6261                           ;EEPROM.c: 75: EEADRH = (BYTE)(Address>>8);
  6262                           
  6263                           ;incstack = 0
  6264  001AE8  5007               	movf	ReadfromEEPROM@Address+1,w,c
  6265  001AEA  6EAA               	movwf	4010,c	;volatile
  6266                           
  6267                           ;EEPROM.c: 76: EEADR = (BYTE)Address;
  6268  001AEC  C006  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6269                           
  6270                           ;EEPROM.c: 77: EECON1bits.RD = 1;
  6271  001AF0  80A6               	bsf	4006,0,c	;volsfr
  6272                           
  6273                           ;EEPROM.c: 78: EECON1bits.EEPGD = 0;
  6274  001AF2  9EA6               	bcf	4006,7,c	;volsfr
  6275                           
  6276                           ;EEPROM.c: 79: EECON1bits.CFGS = 0;
  6277  001AF4  9CA6               	bcf	4006,6,c	;volsfr
  6278                           
  6279                           ;EEPROM.c: 80: return EEDATA;
  6280  001AF6  50A8               	movf	4008,w,c	;volatile
  6281  001AF8  0012               	return		;funcret
  6282  001AFA                     __end_of_ReadfromEEPROM:
  6283                           	opt callstack 0
  6284                           
  6285 ;; *************** function _NVMInit *****************
  6286 ;; Defined at:
  6287 ;;		line 49 in file "EEPROM.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;		None
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  NeightAdress    2    0        unsigned int 
  6292 ;;  result          1   13[COMRAM] enum E10294
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      enum E10294
  6295 ;; Registers used:
  6296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;Total ram usage:        3 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    4
  6309 ;; This function calls:
  6310 ;;		_NVMalloc
  6311 ;; This function is called by:
  6312 ;;		_INI_All
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text48
  6317  001800                     __ptext48:
  6318                           	opt callstack 0
  6319  001800                     _NVMInit:
  6320                           	opt callstack 25
  6321                           
  6322                           ;EEPROM.c: 51: BOOL result = TRUE;
  6323                           
  6324                           ;incstack = 0
  6325  001800  0E01               	movlw	1
  6326  001802  6E0E               	movwf	NVMInit@result,c
  6327                           
  6328                           ;EEPROM.c: 53: nextEEPosition = 0;
  6329  001804  0E00               	movlw	0
  6330  001806  6E30               	movwf	_nextEEPosition+1,c
  6331  001808  0E00               	movlw	0
  6332  00180A  6E2F               	movwf	_nextEEPosition,c
  6333                           
  6334                           ;EEPROM.c: 55: result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6335  00180C  0E00               	movlw	0
  6336  00180E  6E07               	movwf	NVMalloc@size+1,c
  6337  001810  0E03               	movlw	3
  6338  001812  6E06               	movwf	NVMalloc@size,c
  6339  001814  0E3D               	movlw	low _ustawieniaKarty
  6340  001816  6E08               	movwf	NVMalloc@location,c
  6341  001818  0E00               	movlw	high _ustawieniaKarty
  6342  00181A  6E09               	movwf	NVMalloc@location+1,c
  6343  00181C  EC89  F00C         	call	_NVMalloc	;wreg free
  6344  001820  160E               	andwf	NVMInit@result,f,c
  6345                           
  6346                           ;EEPROM.c: 56: result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  6347  001822  0E00               	movlw	0
  6348  001824  6E07               	movwf	NVMalloc@size+1,c
  6349  001826  0E10               	movlw	16
  6350  001828  6E06               	movwf	NVMalloc@size,c
  6351  00182A  0E3B               	movlw	low _neighborsAdress
  6352  00182C  6E08               	movwf	NVMalloc@location,c
  6353  00182E  0E00               	movlw	high _neighborsAdress
  6354  001830  6E09               	movwf	NVMalloc@location+1,c
  6355  001832  EC89  F00C         	call	_NVMalloc	;wreg free
  6356  001836  160E               	andwf	NVMInit@result,f,c
  6357  001838  0012               	return		;funcret
  6358  00183A                     __end_of_NVMInit:
  6359                           	opt callstack 0
  6360                           
  6361 ;; *************** function _NVMalloc *****************
  6362 ;; Defined at:
  6363 ;;		line 24 in file "EEPROM.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  size            2    5[COMRAM] unsigned short 
  6366 ;;  location        2    7[COMRAM] PTR unsigned short 
  6367 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      enum E10294
  6372 ;; Registers used:
  6373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;Total ram usage:        6 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    3
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_NVMInit
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text49
  6394  001912                     __ptext49:
  6395                           	opt callstack 0
  6396  001912                     _NVMalloc:
  6397                           	opt callstack 25
  6398                           
  6399                           ;EEPROM.c: 28: if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6400                           
  6401                           ;incstack = 0
  6402  001912  5006               	movf	NVMalloc@size,w,c
  6403  001914  242F               	addwf	_nextEEPosition,w,c
  6404  001916  6E0A               	movwf	??_NVMalloc& (0+255),c
  6405  001918  5007               	movf	NVMalloc@size+1,w,c
  6406  00191A  2030               	addwfc	_nextEEPosition+1,w,c
  6407  00191C  6E0B               	movwf	(??_NVMalloc+1)& (0+255),c
  6408  00191E  040A               	decf	??_NVMalloc,w,c
  6409  001920  0E04               	movlw	4
  6410  001922  580B               	subwfb	??_NVMalloc+1,w,c
  6411  001924  A0D8               	btfss	status,0,c
  6412  001926  D002               	goto	l4471
  6413                           
  6414                           ;EEPROM.c: 29: {;EEPROM.c: 30: return FALSE;
  6415  001928  0E00               	movlw	0
  6416  00192A  0012               	return	
  6417  00192C                     l4471:
  6418                           
  6419                           ;EEPROM.c: 31: };EEPROM.c: 33: *location = nextEEPosition;
  6420  00192C  C008  FFD9         	movff	NVMalloc@location,fsr2l
  6421  001930  C009  FFDA         	movff	NVMalloc@location+1,fsr2h
  6422  001934  C02F  FFDE         	movff	_nextEEPosition,postinc2
  6423  001938  C030  FFDD         	movff	_nextEEPosition+1,postdec2
  6424                           
  6425                           ;EEPROM.c: 34: nextEEPosition += size;
  6426  00193C  5006               	movf	NVMalloc@size,w,c
  6427  00193E  262F               	addwf	_nextEEPosition,f,c
  6428  001940  5007               	movf	NVMalloc@size+1,w,c
  6429  001942  2230               	addwfc	_nextEEPosition+1,f,c
  6430                           
  6431                           ;EEPROM.c: 35: return TRUE;
  6432  001944  0E01               	movlw	1
  6433  001946  0012               	return		;funcret
  6434  001948                     __end_of_NVMalloc:
  6435                           	opt callstack 0
  6436                           
  6437 ;; *************** function _INI_Timer *****************
  6438 ;; Defined at:
  6439 ;;		line 92 in file "TMR1.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      unsigned char 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;Total ram usage:        0 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    3
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_INI_All
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text50
  6468  001ABA                     __ptext50:
  6469                           	opt callstack 0
  6470  001ABA                     _INI_Timer:
  6471                           	opt callstack 26
  6472                           
  6473                           ;TMR1.c: 96: IRCF2 = 1;
  6474                           
  6475                           ;incstack = 0
  6476  001ABA  8CD3               	bsf	4051,6,c	;volatile
  6477                           
  6478                           ;TMR1.c: 97: IRCF1 = 1;
  6479  001ABC  8AD3               	bsf	4051,5,c	;volatile
  6480                           
  6481                           ;TMR1.c: 98: IRCF0 = 1;
  6482  001ABE  88D3               	bsf	4051,4,c	;volatile
  6483                           
  6484                           ;TMR1.c: 99: T1CON = 0b00111101;
  6485  001AC0  0E3D               	movlw	61
  6486  001AC2  6ECD               	movwf	4045,c	;volatile
  6487                           
  6488                           ;TMR1.c: 100: TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6489  001AC4  0E9E               	movlw	158
  6490  001AC6  6ECF               	movwf	4047,c	;volatile
  6491                           
  6492                           ;TMR1.c: 101: TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6493  001AC8  0E57               	movlw	87
  6494  001ACA  6ECE               	movwf	4046,c	;volatile
  6495                           
  6496                           ;TMR1.c: 102: TMR1IE=1;
  6497  001ACC  809D               	bsf	3997,0,c	;volatile
  6498                           
  6499                           ;TMR1.c: 103: TMR1ON = 1;
  6500  001ACE  80CD               	bsf	4045,0,c	;volatile
  6501  001AD0  0012               	return		;funcret
  6502  001AD2                     __end_of_INI_Timer:
  6503                           	opt callstack 0
  6504                           
  6505 ;; *************** function _INI_OUTPUT *****************
  6506 ;; Defined at:
  6507 ;;		line 29 in file "INI.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    3
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_INI_All
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text51
  6536  001A7C                     __ptext51:
  6537                           	opt callstack 0
  6538  001A7C                     _INI_OUTPUT:
  6539                           	opt callstack 26
  6540                           
  6541                           ;INI.c: 33: LATA = 0;
  6542                           
  6543                           ;incstack = 0
  6544  001A7C  0E00               	movlw	0
  6545  001A7E  6E89               	movwf	3977,c	;volatile
  6546                           
  6547                           ;INI.c: 34: LATB = 0;
  6548  001A80  0E00               	movlw	0
  6549  001A82  6E8A               	movwf	3978,c	;volatile
  6550                           
  6551                           ;INI.c: 35: LATC = 0;
  6552  001A84  0E00               	movlw	0
  6553  001A86  6E8B               	movwf	3979,c	;volatile
  6554                           
  6555                           ;INI.c: 36: TRISA = 0x0C;
  6556  001A88  0E0C               	movlw	12
  6557  001A8A  6E92               	movwf	3986,c	;volatile
  6558                           
  6559                           ;INI.c: 37: TRISB = 0b10001000;
  6560  001A8C  0E88               	movlw	136
  6561  001A8E  6E93               	movwf	3987,c	;volatile
  6562                           
  6563                           ;INI.c: 38: TRISC = 0xBF;
  6564  001A90  0EBF               	movlw	191
  6565  001A92  6E94               	movwf	3988,c	;volatile
  6566                           
  6567                           ;INI.c: 39: RCONbits.IPEN = 1;
  6568  001A94  8ED0               	bsf	4048,7,c	;volatile
  6569                           
  6570                           ;INI.c: 42: DetectorLedRadar.Flags.inicjalizacja = 1;
  6571  001A96  0100               	movlb	0	; () banked
  6572  001A98  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6573                           
  6574                           ; BSR set to: 0
  6575  001A9A  0012               	return		;funcret
  6576  001A9C                     __end_of_INI_OUTPUT:
  6577                           	opt callstack 0
  6578                           
  6579 ;; *************** function _INI_LED_Start *****************
  6580 ;; Defined at:
  6581 ;;		line 274 in file "LED.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;		None
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;Total ram usage:        0 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    4
  6602 ;; This function calls:
  6603 ;;		_LED_Control
  6604 ;; This function is called by:
  6605 ;;		_INI_All
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text52
  6610  0019B0                     __ptext52:
  6611                           	opt callstack 0
  6612  0019B0                     _INI_LED_Start:
  6613                           	opt callstack 25
  6614                           
  6615                           ;LED.c: 276: TRISA = TRISA & 0b00000001;
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;incstack = 0
  6619  0019B0  5092               	movf	3986,w,c	;volatile
  6620  0019B2  0B01               	andlw	1
  6621  0019B4  6E92               	movwf	3986,c	;volatile
  6622                           
  6623                           ;LED.c: 277: TRISB = TRISB & 0b11111100;
  6624  0019B6  5093               	movf	3987,w,c	;volatile
  6625  0019B8  0BFC               	andlw	252
  6626  0019BA  6E93               	movwf	3987,c	;volatile
  6627                           
  6628                           ;LED.c: 278: TRISE = TRISE & 0b11111000;
  6629  0019BC  5096               	movf	3990,w,c	;volatile
  6630  0019BE  0BF8               	andlw	248
  6631  0019C0  6E96               	movwf	3990,c	;volatile
  6632                           
  6633                           ;LED.c: 279: TRISD = TRISD & 0b00000000;
  6634  0019C2  0E00               	movlw	0
  6635  0019C4  6E95               	movwf	3989,c	;volatile
  6636                           
  6637                           ;LED.c: 280: LED_Control(RED,0b0000000000);
  6638  0019C6  0E00               	movlw	0
  6639  0019C8  6E07               	movwf	LED_Control@diode+1,c
  6640  0019CA  0E00               	movlw	0
  6641  0019CC  6E06               	movwf	LED_Control@diode,c
  6642  0019CE  0E00               	movlw	0
  6643  0019D0  EC3C  F005         	call	_LED_Control
  6644                           
  6645                           ;LED.c: 281: LED_Control(GREEN,0b0000000000);
  6646  0019D4  0E00               	movlw	0
  6647  0019D6  6E07               	movwf	LED_Control@diode+1,c
  6648  0019D8  0E00               	movlw	0
  6649  0019DA  6E06               	movwf	LED_Control@diode,c
  6650  0019DC  0E01               	movlw	1
  6651  0019DE  EC3C  F005         	call	_LED_Control
  6652  0019E2  0012               	return		;funcret
  6653  0019E4                     __end_of_INI_LED_Start:
  6654                           	opt callstack 0
  6655                           
  6656 ;; *************** function _LED_Control *****************
  6657 ;; Defined at:
  6658 ;;		line 299 in file "LED.c"
  6659 ;; Parameters:    Size  Location     Type
  6660 ;;  color           1    wreg     enum E10511
  6661 ;;  diode           2    5[COMRAM] unsigned int 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  color           1    9[COMRAM] enum E10511
  6664 ;;  cos             2    0        unsigned int 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      unsigned char 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;Total ram usage:        5 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:    3
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_LED_Error
  6685 ;;		_LED_Update
  6686 ;;		_LED_Light_Pos
  6687 ;;		_INI_LED_Start
  6688 ;;		_LED_Clear
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text53
  6693  000A78                     __ptext53:
  6694                           	opt callstack 0
  6695  000A78                     _LED_Control:
  6696                           	opt callstack 24
  6697                           
  6698                           ;incstack = 0
  6699                           ;LED_Control@color stored from wreg
  6700  000A78  6E0A               	movwf	LED_Control@color,c
  6701                           
  6702                           ;LED.c: 302: if(color == RED)
  6703  000A7A  500A               	movf	LED_Control@color,w,c
  6704  000A7C  A4D8               	btfss	status,2,c
  6705  000A7E  D050               	goto	l420
  6706                           
  6707                           ;LED.c: 303: {;LED.c: 305: if((diode & 0b0000000001)== 0b0000000001)
  6708  000A80  A006               	btfss	LED_Control@diode,0,c
  6709  000A82  D003               	goto	l3943
  6710                           
  6711                           ;LED.c: 306: {;LED.c: 307: LATD = LATD | ~0b11101111;
  6712  000A84  508C               	movf	3980,w,c	;volatile
  6713  000A86  0910               	iorlw	16
  6714  000A88  D002               	goto	L4
  6715  000A8A                     l3943:
  6716                           
  6717                           ;LED.c: 309: else;LED.c: 310: {;LED.c: 311: LATD = LATD &0b11101111;
  6718  000A8A  508C               	movf	3980,w,c	;volatile
  6719  000A8C  0BEF               	andlw	239
  6720  000A8E                     L4:
  6721  000A8E  6E8C               	movwf	3980,c	;volatile
  6722                           
  6723                           ;LED.c: 312: };LED.c: 314: if((diode & 0b0000000010) == 0b0000000010)
  6724  000A90  A206               	btfss	LED_Control@diode,1,c
  6725  000A92  D003               	goto	l3949
  6726                           
  6727                           ;LED.c: 315: {;LED.c: 316: LATD = LATD | ~0b10111111;
  6728  000A94  508C               	movf	3980,w,c	;volatile
  6729  000A96  0940               	iorlw	64
  6730  000A98  D002               	goto	L5
  6731  000A9A                     l3949:
  6732                           
  6733                           ;LED.c: 318: else;LED.c: 319: {;LED.c: 320: LATD = LATD & 0b10111111;
  6734  000A9A  508C               	movf	3980,w,c	;volatile
  6735  000A9C  0BBF               	andlw	191
  6736  000A9E                     L5:
  6737  000A9E  6E8C               	movwf	3980,c	;volatile
  6738                           
  6739                           ;LED.c: 321: };LED.c: 323: if((diode & 0b0000000100) == 0b0000000100)
  6740  000AA0  A406               	btfss	LED_Control@diode,2,c
  6741  000AA2  D003               	goto	l3955
  6742                           
  6743                           ;LED.c: 324: {;LED.c: 325: LATB = LATB | ~0b11111110;
  6744  000AA4  508A               	movf	3978,w,c	;volatile
  6745  000AA6  0901               	iorlw	1
  6746  000AA8  D002               	goto	L6
  6747  000AAA                     l3955:
  6748                           
  6749                           ;LED.c: 327: else;LED.c: 328: {;LED.c: 329: LATB = LATB & 0b11111110;
  6750  000AAA  508A               	movf	3978,w,c	;volatile
  6751  000AAC  0BFE               	andlw	254
  6752  000AAE                     L6:
  6753  000AAE  6E8A               	movwf	3978,c	;volatile
  6754                           
  6755                           ;LED.c: 330: };LED.c: 333: if((diode & 0b0000001000) == 0b0000001000)
  6756  000AB0  A606               	btfss	LED_Control@diode,3,c
  6757  000AB2  D003               	goto	l3961
  6758                           
  6759                           ;LED.c: 334: {;LED.c: 335: LATA = LATA | ~0b11111101;
  6760  000AB4  5089               	movf	3977,w,c	;volatile
  6761  000AB6  0902               	iorlw	2
  6762  000AB8  D002               	goto	L7
  6763  000ABA                     l3961:
  6764                           
  6765                           ;LED.c: 337: else;LED.c: 338: {;LED.c: 339: LATA = LATA & 0b11111101;
  6766  000ABA  5089               	movf	3977,w,c	;volatile
  6767  000ABC  0BFD               	andlw	253
  6768  000ABE                     L7:
  6769  000ABE  6E89               	movwf	3977,c	;volatile
  6770                           
  6771                           ;LED.c: 340: };LED.c: 343: if((diode & 0b0000010000) == 0b0000010000)
  6772  000AC0  A806               	btfss	LED_Control@diode,4,c
  6773  000AC2  D003               	goto	l3967
  6774                           
  6775                           ;LED.c: 344: {;LED.c: 345: LATA = LATA | ~0b11110111;
  6776  000AC4  5089               	movf	3977,w,c	;volatile
  6777  000AC6  0908               	iorlw	8
  6778  000AC8  D002               	goto	L8
  6779  000ACA                     l3967:
  6780                           
  6781                           ;LED.c: 347: else;LED.c: 348: {;LED.c: 349: LATA = LATA & 0b11110111;
  6782  000ACA  5089               	movf	3977,w,c	;volatile
  6783  000ACC  0BF7               	andlw	247
  6784  000ACE                     L8:
  6785  000ACE  6E89               	movwf	3977,c	;volatile
  6786                           
  6787                           ;LED.c: 350: };LED.c: 353: if((diode & 0b0000100000) == 0b0000100000)
  6788  000AD0  AA06               	btfss	LED_Control@diode,5,c
  6789  000AD2  D003               	goto	l3973
  6790                           
  6791                           ;LED.c: 354: {;LED.c: 355: LATA = LATA | ~0b11011111;
  6792  000AD4  5089               	movf	3977,w,c	;volatile
  6793  000AD6  0920               	iorlw	32
  6794  000AD8  D002               	goto	L9
  6795  000ADA                     l3973:
  6796                           
  6797                           ;LED.c: 357: else;LED.c: 358: {;LED.c: 359: LATA = LATA & 0b11011111;
  6798  000ADA  5089               	movf	3977,w,c	;volatile
  6799  000ADC  0BDF               	andlw	223
  6800  000ADE                     L9:
  6801  000ADE  6E89               	movwf	3977,c	;volatile
  6802                           
  6803                           ;LED.c: 360: };LED.c: 362: if((diode & 0b0001000000) == 0b0001000000)
  6804  000AE0  AC06               	btfss	LED_Control@diode,6,c
  6805  000AE2  D003               	goto	l3979
  6806                           
  6807                           ;LED.c: 363: {;LED.c: 364: LATE = LATE | ~0b11111101;
  6808  000AE4  508D               	movf	3981,w,c	;volatile
  6809  000AE6  0902               	iorlw	2
  6810  000AE8  D002               	goto	L10
  6811  000AEA                     l3979:
  6812                           
  6813                           ;LED.c: 366: else;LED.c: 367: {;LED.c: 368: LATE = LATE & 0b11111101;
  6814  000AEA  508D               	movf	3981,w,c	;volatile
  6815  000AEC  0BFD               	andlw	253
  6816  000AEE                     L10:
  6817  000AEE  6E8D               	movwf	3981,c	;volatile
  6818                           
  6819                           ;LED.c: 369: };LED.c: 371: if((diode & 0b0010000000) == 0b0010000000)
  6820  000AF0  AE06               	btfss	LED_Control@diode,7,c
  6821  000AF2  D003               	goto	l3985
  6822                           
  6823                           ;LED.c: 372: {;LED.c: 373: LATA = LATA | ~0b01111111;
  6824  000AF4  5089               	movf	3977,w,c	;volatile
  6825  000AF6  0980               	iorlw	128
  6826  000AF8  D002               	goto	L11
  6827  000AFA                     l3985:
  6828                           
  6829                           ;LED.c: 375: else;LED.c: 376: {;LED.c: 377: LATA = LATA & 0b01111111;
  6830  000AFA  5089               	movf	3977,w,c	;volatile
  6831  000AFC  0B7F               	andlw	127
  6832  000AFE                     L11:
  6833  000AFE  6E89               	movwf	3977,c	;volatile
  6834                           
  6835                           ;LED.c: 378: };LED.c: 381: if((diode & 0b0100000000) == 0b0100000000)
  6836  000B00  A007               	btfss	LED_Control@diode+1,0,c
  6837  000B02  D003               	goto	l3991
  6838                           
  6839                           ;LED.c: 382: {;LED.c: 383: LATD = LATD | ~0b11111110;
  6840  000B04  508C               	movf	3980,w,c	;volatile
  6841  000B06  0901               	iorlw	1
  6842  000B08  D002               	goto	L12
  6843  000B0A                     l3991:
  6844                           
  6845                           ;LED.c: 385: else;LED.c: 386: {;LED.c: 387: LATD = LATD & 0b11111110;
  6846  000B0A  508C               	movf	3980,w,c	;volatile
  6847  000B0C  0BFE               	andlw	254
  6848  000B0E                     L12:
  6849  000B0E  6E8C               	movwf	3980,c	;volatile
  6850                           
  6851                           ;LED.c: 388: };LED.c: 390: if((diode & 0b1000000000) == 0b1000000000)
  6852  000B10  A207               	btfss	LED_Control@diode+1,1,c
  6853  000B12  D003               	goto	l3997
  6854                           
  6855                           ;LED.c: 391: {;LED.c: 392: LATD = LATD | ~0b11111011;
  6856  000B14  508C               	movf	3980,w,c	;volatile
  6857  000B16  0904               	iorlw	4
  6858  000B18  D002               	goto	L13
  6859  000B1A                     l3997:
  6860                           
  6861                           ;LED.c: 394: else;LED.c: 395: {;LED.c: 396: LATD = LATD & 0b11111011;
  6862  000B1A  508C               	movf	3980,w,c	;volatile
  6863  000B1C  0BFB               	andlw	251
  6864  000B1E                     L13:
  6865  000B1E  6E8C               	movwf	3980,c	;volatile
  6866  000B20                     l420:
  6867                           
  6868                           ;LED.c: 397: };LED.c: 399: };LED.c: 401: if(color == GREEN)
  6869  000B20  040A               	decf	LED_Control@color,w,c
  6870  000B22  A4D8               	btfss	status,2,c
  6871  000B24  0012               	return	
  6872                           
  6873                           ;LED.c: 402: {;LED.c: 404: if((diode & 0b0000000001) == 0b0000000001)
  6874  000B26  A006               	btfss	LED_Control@diode,0,c
  6875  000B28  D003               	goto	l4003
  6876                           
  6877                           ;LED.c: 405: {;LED.c: 406: LATD = LATD | ~0b11011111;
  6878  000B2A  508C               	movf	3980,w,c	;volatile
  6879  000B2C  0920               	iorlw	32
  6880  000B2E  D002               	goto	L14
  6881  000B30                     l4003:
  6882                           
  6883                           ;LED.c: 408: else;LED.c: 409: {;LED.c: 410: LATD = LATD & 0b11011111;
  6884  000B30  508C               	movf	3980,w,c	;volatile
  6885  000B32  0BDF               	andlw	223
  6886  000B34                     L14:
  6887  000B34  6E8C               	movwf	3980,c	;volatile
  6888                           
  6889                           ;LED.c: 411: };LED.c: 414: if((diode & 0b0000000010) == 0b0000000010)
  6890  000B36  A206               	btfss	LED_Control@diode,1,c
  6891  000B38  D003               	goto	l4009
  6892                           
  6893                           ;LED.c: 415: {;LED.c: 416: LATD = LATD | ~0b01111111;
  6894  000B3A  508C               	movf	3980,w,c	;volatile
  6895  000B3C  0980               	iorlw	128
  6896  000B3E  D002               	goto	L15
  6897  000B40                     l4009:
  6898                           
  6899                           ;LED.c: 418: else;LED.c: 419: {;LED.c: 420: LATD = LATD & 0b01111111;
  6900  000B40  508C               	movf	3980,w,c	;volatile
  6901  000B42  0B7F               	andlw	127
  6902  000B44                     L15:
  6903  000B44  6E8C               	movwf	3980,c	;volatile
  6904                           
  6905                           ;LED.c: 421: };LED.c: 424: if((diode & 0b0000000100) == 0b0000000100)
  6906  000B46  A406               	btfss	LED_Control@diode,2,c
  6907  000B48  D003               	goto	l4015
  6908                           
  6909                           ;LED.c: 425: {;LED.c: 426: LATB = LATB | ~0b11111101;
  6910  000B4A  508A               	movf	3978,w,c	;volatile
  6911  000B4C  0902               	iorlw	2
  6912  000B4E  D002               	goto	L16
  6913  000B50                     l4015:
  6914                           
  6915                           ;LED.c: 428: else;LED.c: 429: {;LED.c: 430: LATB = LATB & 0b11111101;
  6916  000B50  508A               	movf	3978,w,c	;volatile
  6917  000B52  0BFD               	andlw	253
  6918  000B54                     L16:
  6919  000B54  6E8A               	movwf	3978,c	;volatile
  6920                           
  6921                           ;LED.c: 431: };LED.c: 433: if((diode & 0b0000001000) == 0b0000001000)
  6922  000B56  A606               	btfss	LED_Control@diode,3,c
  6923  000B58  D003               	goto	l4021
  6924                           
  6925                           ;LED.c: 434: {;LED.c: 435: LATA = LATA | ~0b11111011;
  6926  000B5A  5089               	movf	3977,w,c	;volatile
  6927  000B5C  0904               	iorlw	4
  6928  000B5E  D002               	goto	L17
  6929  000B60                     l4021:
  6930                           
  6931                           ;LED.c: 437: else;LED.c: 438: {;LED.c: 439: LATA = LATA & 0b11111011;
  6932  000B60  5089               	movf	3977,w,c	;volatile
  6933  000B62  0BFB               	andlw	251
  6934  000B64                     L17:
  6935  000B64  6E89               	movwf	3977,c	;volatile
  6936                           
  6937                           ;LED.c: 440: };LED.c: 443: if((diode & 0b0000010000) == 0b0000010000)
  6938  000B66  A806               	btfss	LED_Control@diode,4,c
  6939  000B68  D003               	goto	l4027
  6940                           
  6941                           ;LED.c: 444: {;LED.c: 445: LATA = LATA | ~0b11101111;
  6942  000B6A  5089               	movf	3977,w,c	;volatile
  6943  000B6C  0910               	iorlw	16
  6944  000B6E  D002               	goto	L18
  6945  000B70                     l4027:
  6946                           
  6947                           ;LED.c: 447: else;LED.c: 448: {;LED.c: 449: LATA = LATA & 0b11101111;
  6948  000B70  5089               	movf	3977,w,c	;volatile
  6949  000B72  0BEF               	andlw	239
  6950  000B74                     L18:
  6951  000B74  6E89               	movwf	3977,c	;volatile
  6952                           
  6953                           ;LED.c: 450: };LED.c: 453: if((diode & 0b0000100000) == 0b0000100000)
  6954  000B76  AA06               	btfss	LED_Control@diode,5,c
  6955  000B78  D003               	goto	l4033
  6956                           
  6957                           ;LED.c: 454: {;LED.c: 455: LATE = LATE | ~0b11111110;
  6958  000B7A  508D               	movf	3981,w,c	;volatile
  6959  000B7C  0901               	iorlw	1
  6960  000B7E  D002               	goto	L19
  6961  000B80                     l4033:
  6962                           
  6963                           ;LED.c: 457: else;LED.c: 458: {;LED.c: 459: LATE = LATE & 0b11111110;
  6964  000B80  508D               	movf	3981,w,c	;volatile
  6965  000B82  0BFE               	andlw	254
  6966  000B84                     L19:
  6967  000B84  6E8D               	movwf	3981,c	;volatile
  6968                           
  6969                           ;LED.c: 460: };LED.c: 463: if((diode & 0b0001000000) == 0b0001000000)
  6970  000B86  AC06               	btfss	LED_Control@diode,6,c
  6971  000B88  D003               	goto	l4039
  6972                           
  6973                           ;LED.c: 464: {;LED.c: 465: LATE = LATE | ~0b11111011;
  6974  000B8A  508D               	movf	3981,w,c	;volatile
  6975  000B8C  0904               	iorlw	4
  6976  000B8E  D002               	goto	L20
  6977  000B90                     l4039:
  6978                           
  6979                           ;LED.c: 467: else;LED.c: 468: {;LED.c: 469: LATE = LATE & 0b11111011;
  6980  000B90  508D               	movf	3981,w,c	;volatile
  6981  000B92  0BFB               	andlw	251
  6982  000B94                     L20:
  6983  000B94  6E8D               	movwf	3981,c	;volatile
  6984                           
  6985                           ;LED.c: 470: };LED.c: 472: if((diode & 0b0010000000) == 0b0010000000)
  6986  000B96  AE06               	btfss	LED_Control@diode,7,c
  6987  000B98  D003               	goto	l4045
  6988                           
  6989                           ;LED.c: 473: {;LED.c: 474: LATA = LATA | ~0b10111111;
  6990  000B9A  5089               	movf	3977,w,c	;volatile
  6991  000B9C  0940               	iorlw	64
  6992  000B9E  D002               	goto	L21
  6993  000BA0                     l4045:
  6994                           
  6995                           ;LED.c: 476: else;LED.c: 477: {;LED.c: 478: LATA = LATA & 0b10111111;
  6996  000BA0  5089               	movf	3977,w,c	;volatile
  6997  000BA2  0BBF               	andlw	191
  6998  000BA4                     L21:
  6999  000BA4  6E89               	movwf	3977,c	;volatile
  7000                           
  7001                           ;LED.c: 479: };LED.c: 481: if((diode & 0b0100000000) == 0b0100000000)
  7002  000BA6  A007               	btfss	LED_Control@diode+1,0,c
  7003  000BA8  D003               	goto	l4051
  7004                           
  7005                           ;LED.c: 482: {;LED.c: 483: LATD = LATD | ~0b11111101;
  7006  000BAA  508C               	movf	3980,w,c	;volatile
  7007  000BAC  0902               	iorlw	2
  7008  000BAE  D002               	goto	L22
  7009  000BB0                     l4051:
  7010                           
  7011                           ;LED.c: 485: else;LED.c: 486: {;LED.c: 487: LATD = LATD & 0b11111101;
  7012  000BB0  508C               	movf	3980,w,c	;volatile
  7013  000BB2  0BFD               	andlw	253
  7014  000BB4                     L22:
  7015  000BB4  6E8C               	movwf	3980,c	;volatile
  7016                           
  7017                           ;LED.c: 488: };LED.c: 490: if((diode & 0b1000000000) == 0b1000000000)
  7018  000BB6  A207               	btfss	LED_Control@diode+1,1,c
  7019  000BB8  D004               	goto	l4057
  7020                           
  7021                           ;LED.c: 491: {;LED.c: 492: LATD = LATD | ~0b11110111;
  7022  000BBA  508C               	movf	3980,w,c	;volatile
  7023  000BBC  0908               	iorlw	8
  7024  000BBE  6E8C               	movwf	3980,c	;volatile
  7025                           
  7026                           ;LED.c: 493: }
  7027  000BC0  0012               	return	
  7028  000BC2                     l4057:
  7029                           
  7030                           ;LED.c: 494: else;LED.c: 495: {;LED.c: 496: LATD = LATD &0b11110111;
  7031  000BC2  508C               	movf	3980,w,c	;volatile
  7032  000BC4  0BF7               	andlw	247
  7033  000BC6  6E8C               	movwf	3980,c	;volatile
  7034  000BC8  0012               	return		;funcret
  7035  000BCA                     __end_of_LED_Control:
  7036                           	opt callstack 0
  7037                           
  7038 ;; *************** function _INI_GlobalInterrupt *****************
  7039 ;; Defined at:
  7040 ;;		line 78 in file "INI.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;		None
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;		None
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      void 
  7047 ;; Registers used:
  7048 ;;		None
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;Total ram usage:        0 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    3
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_INI_All
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text54
  7069  001B08                     __ptext54:
  7070                           	opt callstack 0
  7071  001B08                     _INI_GlobalInterrupt:
  7072                           	opt callstack 26
  7073                           
  7074                           ;INI.c: 80: INTCONbits.GIEH=1;
  7075                           
  7076                           ;incstack = 0
  7077  001B08  8EF2               	bsf	4082,7,c	;volatile
  7078                           
  7079                           ;INI.c: 81: INTCONbits.GIEL=1;
  7080  001B0A  8CF2               	bsf	4082,6,c	;volatile
  7081                           
  7082                           ;INI.c: 82: RCONbits.IPEN=1;
  7083  001B0C  8ED0               	bsf	4048,7,c	;volatile
  7084                           
  7085                           ;INI.c: 83: IPEN =1;
  7086  001B0E  8ED0               	bsf	4048,7,c	;volatile
  7087                           
  7088                           ;INI.c: 85: PEIE=1;
  7089  001B10  8CF2               	bsf	4082,6,c	;volatile
  7090                           
  7091                           ;INI.c: 86: TMR1IP = 0;
  7092  001B12  909F               	bcf	3999,0,c	;volatile
  7093  001B14  0012               	return		;funcret
  7094  001B16                     __end_of_INI_GlobalInterrupt:
  7095                           	opt callstack 0
  7096                           
  7097 ;; *************** function _CAN_Setup *****************
  7098 ;; Defined at:
  7099 ;;		line 24 in file "CAN.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;		None
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;		None
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      void 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2, status,0, cstack
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;Total ram usage:        1 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; Hardware stack levels required when called:    5
  7120 ;; This function calls:
  7121 ;;		_CAN_SetupClock
  7122 ;;		_CAN_SetupMask
  7123 ;; This function is called by:
  7124 ;;		_INI_All
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text55
  7129  001520                     __ptext55:
  7130                           	opt callstack 0
  7131  001520                     _CAN_Setup:
  7132                           	opt callstack 24
  7133                           
  7134                           ;CAN.c: 29: CANCON = 0x80;
  7135                           
  7136                           ;incstack = 0
  7137  001520  0E80               	movlw	128
  7138  001522  6E6F               	movwf	3951,c	;volatile
  7139  001524                     l4525:
  7140  001524  506E               	movf	3950,w,c	;volatile
  7141  001526  0BE0               	andlw	224
  7142  001528  0A80               	xorlw	128
  7143  00152A  A4D8               	btfss	status,2,c
  7144  00152C  D7FB               	goto	l4525
  7145                           
  7146                           ;CAN.c: 33: };CAN.c: 35: BSEL0 = 0;
  7147  00152E  0E00               	movlw	0
  7148  001530  010D               	movlb	13	; () banked
  7149  001532  6FF8               	movwf	248,b	;volatile
  7150                           
  7151                           ;CAN.c: 36: TXB0CON = 0;
  7152  001534  0E00               	movlw	0
  7153  001536  010F               	movlb	15	; () banked
  7154  001538  6F40               	movwf	64,b	;volatile
  7155                           
  7156                           ;CAN.c: 37: RXB0CON = 0;
  7157  00153A  0E00               	movlw	0
  7158  00153C  6E60               	movwf	3936,c	;volatile
  7159                           
  7160                           ;CAN.c: 38: RXB1CON = 0;
  7161  00153E  0E00               	movlw	0
  7162  001540  6F50               	movwf	80,b	;volatile
  7163                           
  7164                           ;CAN.c: 39: B0CON = 0;
  7165  001542  0E00               	movlw	0
  7166  001544  010E               	movlb	14	; () banked
  7167  001546  6F20               	movwf	32,b	;volatile
  7168                           
  7169                           ;CAN.c: 40: B1CON = 0;
  7170  001548  0E00               	movlw	0
  7171  00154A  6F30               	movwf	48,b	;volatile
  7172                           
  7173                           ;CAN.c: 41: PIE3 = 0;
  7174  00154C  0E00               	movlw	0
  7175  00154E  6EA3               	movwf	4003,c	;volatile
  7176                           
  7177                           ; BSR set to: 14
  7178                           ;CAN.c: 42: IPR3 = 0xFF;
  7179  001550  68A5               	setf	4005,c	;volatile
  7180                           
  7181                           ;CAN.c: 43: PIR3 = 0x00;
  7182  001552  0E00               	movlw	0
  7183  001554  6EA4               	movwf	4004,c	;volatile
  7184                           
  7185                           ;CAN.c: 44: BIE0 = 0;
  7186  001556  0E00               	movlw	0
  7187  001558  010D               	movlb	13	; () banked
  7188  00155A  6FFA               	movwf	250,b	;volatile
  7189                           
  7190                           ;CAN.c: 48: ECANCON = 0x90;
  7191  00155C  0E90               	movlw	144
  7192  00155E  6E77               	movwf	3959,c	;volatile
  7193                           
  7194                           ; BSR set to: 13
  7195                           ;CAN.c: 51: CAN_SetupClock();
  7196  001560  EC07  F00D         	call	_CAN_SetupClock	;wreg free
  7197                           
  7198                           ;CAN.c: 54: CAN_SetupMask();
  7199  001564  EC23  F00A         	call	_CAN_SetupMask	;wreg free
  7200                           
  7201                           ;CAN.c: 56: CIOCON = 0xff;
  7202  001568  6873               	setf	3955,c	;volatile
  7203                           
  7204                           ;CAN.c: 62: CANCON = 0x00;
  7205  00156A  0E00               	movlw	0
  7206  00156C  6E6F               	movwf	3951,c	;volatile
  7207  00156E                     l4537:
  7208  00156E  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  7209  001572  0EE0               	movlw	224
  7210  001574  1606               	andwf	??_CAN_Setup,f,c
  7211  001576  B4D8               	btfsc	status,2,c
  7212  001578  0012               	return	
  7213  00157A  D7F9               	goto	l4537
  7214  00157C                     __end_of_CAN_Setup:
  7215                           	opt callstack 0
  7216                           
  7217 ;; *************** function _CAN_SetupMask *****************
  7218 ;; Defined at:
  7219 ;;		line 84 in file "CAN.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;		None
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;		None
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      void 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7237 ;;Total ram usage:        0 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    4
  7240 ;; This function calls:
  7241 ;;		_CAN_SetupFilter_Ne
  7242 ;; This function is called by:
  7243 ;;		_CAN_Setup
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text56
  7248  001446                     __ptext56:
  7249                           	opt callstack 0
  7250  001446                     _CAN_SetupMask:
  7251                           	opt callstack 24
  7252                           
  7253                           ;CAN.c: 86: MSEL0 = 0x50;
  7254                           
  7255                           ;incstack = 0
  7256  001446  0E50               	movlw	80
  7257  001448  010D               	movlb	13	; () banked
  7258  00144A  6FF0               	movwf	240,b	;volatile
  7259                           
  7260                           ;CAN.c: 87: MSEL1 = 0x55;
  7261  00144C  0E55               	movlw	85
  7262  00144E  6FF1               	movwf	241,b	;volatile
  7263                           
  7264                           ;CAN.c: 88: MSEL2 = 0x55;
  7265  001450  0E55               	movlw	85
  7266  001452  6FF2               	movwf	242,b	;volatile
  7267                           
  7268                           ;CAN.c: 89: MSEL3 = 0x55;
  7269  001454  0E55               	movlw	85
  7270  001456  6FF3               	movwf	243,b	;volatile
  7271                           
  7272                           ;CAN.c: 92: RXM0SIDH = 0b00000000;
  7273  001458  0E00               	movlw	0
  7274  00145A  010F               	movlb	15	; () banked
  7275  00145C  6F18               	movwf	24,b	;volatile
  7276                           
  7277                           ;CAN.c: 93: RXM0SIDL = 0b00001011;
  7278  00145E  0E0B               	movlw	11
  7279  001460  6F19               	movwf	25,b	;volatile
  7280                           
  7281                           ; BSR set to: 15
  7282                           ;CAN.c: 94: RXM0EIDH = 0xFF;
  7283  001462  691A               	setf	26,b	;volatile
  7284                           
  7285                           ; BSR set to: 15
  7286                           ;CAN.c: 95: RXM0EIDL = 0xFF;
  7287  001464  691B               	setf	27,b	;volatile
  7288                           
  7289                           ; BSR set to: 15
  7290                           ;CAN.c: 98: RXM1SIDH = 0xFF;
  7291  001466  691C               	setf	28,b	;volatile
  7292                           
  7293                           ; BSR set to: 15
  7294                           ;CAN.c: 99: RXM1SIDL = 0xFF;
  7295  001468  691D               	setf	29,b	;volatile
  7296                           
  7297                           ; BSR set to: 15
  7298                           ;CAN.c: 100: RXM1EIDH = 0xFF;
  7299  00146A  691E               	setf	30,b	;volatile
  7300                           
  7301                           ; BSR set to: 15
  7302                           ;CAN.c: 101: RXM1EIDL = 0xFF;
  7303  00146C  691F               	setf	31,b	;volatile
  7304                           
  7305                           ;CAN.c: 104: RXM0SIDH = 0x00;
  7306  00146E  0E00               	movlw	0
  7307  001470  6F18               	movwf	24,b	;volatile
  7308                           
  7309                           ;CAN.c: 105: RXM0SIDL = 0x00;
  7310  001472  0E00               	movlw	0
  7311  001474  6F19               	movwf	25,b	;volatile
  7312                           
  7313                           ;CAN.c: 110: RXF0SIDH = 0x00;
  7314  001476  0E00               	movlw	0
  7315  001478  6F00               	movwf	0,b	;volatile
  7316                           
  7317                           ;CAN.c: 111: RXF0SIDL = 0x01;
  7318  00147A  0E01               	movlw	1
  7319  00147C  6F01               	movwf	1,b	;volatile
  7320                           
  7321                           ; BSR set to: 15
  7322                           ;CAN.c: 112: RXF0SIDLbits.EXIDEN = 1;
  7323  00147E  8701               	bsf	1,3,b	;volatile
  7324                           
  7325                           ;CAN.c: 113: RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7326  001480  502E               	movf	_DaneCan+3,w,c
  7327  001482  6F02               	movwf	2,b	;volatile
  7328                           
  7329                           ; BSR set to: 15
  7330                           ;CAN.c: 115: RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7331  001484  C02D  FF03         	movff	_DaneCan+2,3843	;volatile
  7332                           
  7333                           ;CAN.c: 117: RXF1SIDH = 0x00;
  7334  001488  0E00               	movlw	0
  7335  00148A  6F04               	movwf	4,b	;volatile
  7336                           
  7337                           ;CAN.c: 118: RXF1SIDL = 0x01;
  7338  00148C  0E01               	movlw	1
  7339  00148E  6F05               	movwf	5,b	;volatile
  7340                           
  7341                           ; BSR set to: 15
  7342                           ;CAN.c: 119: RXF1SIDLbits.EXIDEN = 1;
  7343  001490  8705               	bsf	5,3,b	;volatile
  7344                           
  7345                           ;CAN.c: 120: RXF1EIDH = 0x7F;
  7346  001492  0E7F               	movlw	127
  7347  001494  6F06               	movwf	6,b	;volatile
  7348                           
  7349                           ; BSR set to: 15
  7350                           ;CAN.c: 121: RXF1EIDL = 0xFF;
  7351  001496  6907               	setf	7,b	;volatile
  7352                           
  7353                           ; BSR set to: 15
  7354                           ;CAN.c: 123: CAN_SetupFilter_Ne();
  7355  001498  ECA6  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  7356                           
  7357                           ;CAN.c: 126: RXFBCON0 = 0b00000000;
  7358  00149C  0E00               	movlw	0
  7359  00149E  010D               	movlb	13	; () banked
  7360  0014A0  6FE0               	movwf	224,b	;volatile
  7361                           
  7362                           ; BSR set to: 13
  7363                           ;CAN.c: 128: RXFBCON1 = 0b00010001;
  7364  0014A2  0E11               	movlw	17
  7365  0014A4  6FE1               	movwf	225,b	;volatile
  7366                           
  7367                           ; BSR set to: 13
  7368                           ;CAN.c: 130: RXFBCON2 = 0b00010001;
  7369  0014A6  0E11               	movlw	17
  7370  0014A8  6FE2               	movwf	226,b	;volatile
  7371                           
  7372                           ; BSR set to: 13
  7373                           ;CAN.c: 132: RXFBCON3 = 0b00010001;
  7374  0014AA  0E11               	movlw	17
  7375  0014AC  6FE3               	movwf	227,b	;volatile
  7376                           
  7377                           ; BSR set to: 13
  7378                           ;CAN.c: 134: RXFBCON4 = 0b00010001;
  7379  0014AE  0E11               	movlw	17
  7380  0014B0  6FE4               	movwf	228,b	;volatile
  7381                           
  7382                           ; BSR set to: 13
  7383                           ;CAN.c: 136: RXFCON0 = 0b11111111;
  7384  0014B2  69D4               	setf	212,b	;volatile
  7385                           
  7386                           ; BSR set to: 13
  7387                           ;CAN.c: 137: RXFCON1 = 0b00000011;
  7388  0014B4  0E03               	movlw	3
  7389  0014B6  6FD5               	movwf	213,b	;volatile
  7390                           
  7391                           ; BSR set to: 13
  7392  0014B8  0012               	return		;funcret
  7393  0014BA                     __end_of_CAN_SetupMask:
  7394                           	opt callstack 0
  7395                           
  7396 ;; *************** function _CAN_SetupFilter_Ne *****************
  7397 ;; Defined at:
  7398 ;;		line 141 in file "CAN.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, status,2
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;Total ram usage:        0 bytes
  7417 ;; Hardware stack levels used:    1
  7418 ;; Hardware stack levels required when called:    3
  7419 ;; This function calls:
  7420 ;;		Nothing
  7421 ;; This function is called by:
  7422 ;;		_CAN_SetupMask
  7423 ;;		_FRAME_AdressOfNeighbors
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text57
  7428  00114C                     __ptext57:
  7429                           	opt callstack 0
  7430  00114C                     _CAN_SetupFilter_Ne:
  7431                           	opt callstack 24
  7432                           
  7433                           ;CAN.c: 145: RXF2SIDH = 0;
  7434                           
  7435                           ; BSR set to: 13
  7436                           ;incstack = 0
  7437  00114C  0E00               	movlw	0
  7438  00114E  010F               	movlb	15	; () banked
  7439  001150  6F08               	movwf	8,b	;volatile
  7440                           
  7441                           ;CAN.c: 146: RXF2SIDL = 0x20;
  7442  001152  0E20               	movlw	32
  7443  001154  6F09               	movwf	9,b	;volatile
  7444                           
  7445                           ; BSR set to: 15
  7446                           ;CAN.c: 147: RXF2SIDLbits.EXIDEN = 1;
  7447  001156  8709               	bsf	9,3,b	;volatile
  7448                           
  7449                           ;CAN.c: 148: RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7450  001158  504C               	movf	_NeightAdress1+1,w,c	;volatile
  7451  00115A  6F0A               	movwf	10,b	;volatile
  7452                           
  7453                           ; BSR set to: 15
  7454                           ;CAN.c: 149: RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7455  00115C  C04B  FF0B         	movff	_NeightAdress1,3851	;volatile
  7456                           
  7457                           ;CAN.c: 152: RXF3SIDH = 0;
  7458  001160  0E00               	movlw	0
  7459  001162  6F0C               	movwf	12,b	;volatile
  7460                           
  7461                           ;CAN.c: 153: RXF3SIDL = 0x20;
  7462  001164  0E20               	movlw	32
  7463  001166  6F0D               	movwf	13,b	;volatile
  7464                           
  7465                           ; BSR set to: 15
  7466                           ;CAN.c: 154: RXF3SIDLbits.EXIDEN = 1;
  7467  001168  870D               	bsf	13,3,b	;volatile
  7468                           
  7469                           ;CAN.c: 155: RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7470  00116A  5059               	movf	_NeightAdress2+1,w,c	;volatile
  7471  00116C  6F0E               	movwf	14,b	;volatile
  7472                           
  7473                           ; BSR set to: 15
  7474                           ;CAN.c: 156: RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7475  00116E  C058  FF0F         	movff	_NeightAdress2,3855	;volatile
  7476                           
  7477                           ;CAN.c: 158: RXF4SIDH = 0;
  7478  001172  0E00               	movlw	0
  7479  001174  6F10               	movwf	16,b	;volatile
  7480                           
  7481                           ;CAN.c: 159: RXF4SIDL = 0x20;
  7482  001176  0E20               	movlw	32
  7483  001178  6F11               	movwf	17,b	;volatile
  7484                           
  7485                           ; BSR set to: 15
  7486                           ;CAN.c: 160: RXF4SIDLbits.EXIDEN = 1;
  7487  00117A  8711               	bsf	17,3,b	;volatile
  7488                           
  7489                           ;CAN.c: 161: RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7490  00117C  504A               	movf	_NeightAdress3+1,w,c	;volatile
  7491  00117E  6F12               	movwf	18,b	;volatile
  7492                           
  7493                           ; BSR set to: 15
  7494                           ;CAN.c: 162: RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7495  001180  C049  FF13         	movff	_NeightAdress3,3859	;volatile
  7496                           
  7497                           ;CAN.c: 164: RXF5SIDH = 0;
  7498  001184  0E00               	movlw	0
  7499  001186  6F14               	movwf	20,b	;volatile
  7500                           
  7501                           ;CAN.c: 165: RXF5SIDL = 0x20;
  7502  001188  0E20               	movlw	32
  7503  00118A  6F15               	movwf	21,b	;volatile
  7504                           
  7505                           ; BSR set to: 15
  7506                           ;CAN.c: 166: RXF5SIDLbits.EXIDEN = 1;
  7507  00118C  8715               	bsf	21,3,b	;volatile
  7508                           
  7509                           ;CAN.c: 167: RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7510  00118E  5048               	movf	_NeightAdress4+1,w,c	;volatile
  7511  001190  6F16               	movwf	22,b	;volatile
  7512                           
  7513                           ; BSR set to: 15
  7514                           ;CAN.c: 168: RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7515  001192  C047  FF17         	movff	_NeightAdress4,3863	;volatile
  7516                           
  7517                           ;CAN.c: 170: RXF6SIDH = 0;
  7518  001196  0E00               	movlw	0
  7519  001198  010D               	movlb	13	; () banked
  7520  00119A  6F60               	movwf	96,b	;volatile
  7521                           
  7522                           ;CAN.c: 171: RXF6SIDL = 0x20;
  7523  00119C  0E20               	movlw	32
  7524  00119E  6F61               	movwf	97,b	;volatile
  7525                           
  7526                           ; BSR set to: 13
  7527                           ;CAN.c: 172: RXF6SIDLbits.EXIDEN = 1;
  7528  0011A0  8761               	bsf	97,3,b	;volatile
  7529                           
  7530                           ;CAN.c: 173: RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7531  0011A2  5046               	movf	_NeightAdress5+1,w,c	;volatile
  7532  0011A4  6F62               	movwf	98,b	;volatile
  7533                           
  7534                           ; BSR set to: 13
  7535                           ;CAN.c: 174: RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7536  0011A6  C045  FD63         	movff	_NeightAdress5,3427	;volatile
  7537                           
  7538                           ;CAN.c: 176: RXF7SIDH = 0;
  7539  0011AA  0E00               	movlw	0
  7540  0011AC  6F64               	movwf	100,b	;volatile
  7541                           
  7542                           ;CAN.c: 177: RXF7SIDL = 0x20;
  7543  0011AE  0E20               	movlw	32
  7544  0011B0  6F65               	movwf	101,b	;volatile
  7545                           
  7546                           ; BSR set to: 13
  7547                           ;CAN.c: 178: RXF7SIDLbits.EXIDEN = 1;
  7548  0011B2  8765               	bsf	101,3,b	;volatile
  7549                           
  7550                           ;CAN.c: 179: RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7551  0011B4  5044               	movf	_NeightAdress6+1,w,c	;volatile
  7552  0011B6  6F66               	movwf	102,b	;volatile
  7553                           
  7554                           ; BSR set to: 13
  7555                           ;CAN.c: 180: RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7556  0011B8  C043  FD67         	movff	_NeightAdress6,3431	;volatile
  7557                           
  7558                           ;CAN.c: 182: RXF8SIDH = 0;
  7559  0011BC  0E00               	movlw	0
  7560  0011BE  6F68               	movwf	104,b	;volatile
  7561                           
  7562                           ;CAN.c: 183: RXF8SIDL = 0x20;
  7563  0011C0  0E20               	movlw	32
  7564  0011C2  6F69               	movwf	105,b	;volatile
  7565                           
  7566                           ; BSR set to: 13
  7567                           ;CAN.c: 184: RXF8SIDLbits.EXIDEN = 1;
  7568  0011C4  8769               	bsf	105,3,b	;volatile
  7569                           
  7570                           ;CAN.c: 185: RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7571  0011C6  5042               	movf	_NeightAdress7+1,w,c	;volatile
  7572  0011C8  6F6A               	movwf	106,b	;volatile
  7573                           
  7574                           ; BSR set to: 13
  7575                           ;CAN.c: 186: RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7576  0011CA  C041  FD6B         	movff	_NeightAdress7,3435	;volatile
  7577                           
  7578                           ;CAN.c: 188: RXF9SIDH = 0;
  7579  0011CE  0E00               	movlw	0
  7580  0011D0  6F70               	movwf	112,b	;volatile
  7581                           
  7582                           ;CAN.c: 189: RXF9SIDL = 0x20;
  7583  0011D2  0E20               	movlw	32
  7584  0011D4  6F71               	movwf	113,b	;volatile
  7585                           
  7586                           ; BSR set to: 13
  7587                           ;CAN.c: 190: RXF9SIDLbits.EXIDEN = 1;
  7588  0011D6  8771               	bsf	113,3,b	;volatile
  7589                           
  7590                           ;CAN.c: 191: RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7591  0011D8  5040               	movf	_NeightAdress8+1,w,c	;volatile
  7592  0011DA  6F72               	movwf	114,b	;volatile
  7593                           
  7594                           ; BSR set to: 13
  7595                           ;CAN.c: 192: RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7596  0011DC  C03F  FD73         	movff	_NeightAdress8,3443	;volatile
  7597                           
  7598                           ; BSR set to: 13
  7599  0011E0  0012               	return		;funcret
  7600  0011E2                     __end_of_CAN_SetupFilter_Ne:
  7601                           	opt callstack 0
  7602                           
  7603 ;; *************** function _CAN_SetupClock *****************
  7604 ;; Defined at:
  7605 ;;		line 200 in file "CAN.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;		None
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  1    wreg      void 
  7612 ;; Registers used:
  7613 ;;		None
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;Total ram usage:        0 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    3
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_CAN_Setup
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text58
  7634  001A0E                     __ptext58:
  7635                           	opt callstack 0
  7636  001A0E                     _CAN_SetupClock:
  7637                           	opt callstack 25
  7638                           
  7639                           ;CAN.c: 202: BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7640                           
  7641                           ; BSR set to: 13
  7642                           ;incstack = 0
  7643  001A0E  8070               	bsf	3952,0,c	;volatile
  7644                           
  7645                           ;CAN.c: 203: BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7646  001A10  8270               	bsf	3952,1,c	;volatile
  7647                           
  7648                           ;CAN.c: 204: BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7649  001A12  9470               	bcf	3952,2,c	;volatile
  7650                           
  7651                           ;CAN.c: 205: BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7652  001A14  9670               	bcf	3952,3,c	;volatile
  7653                           
  7654                           ;CAN.c: 206: BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7655  001A16  9870               	bcf	3952,4,c	;volatile
  7656                           
  7657                           ;CAN.c: 207: BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7658  001A18  9A70               	bcf	3952,5,c	;volatile
  7659                           
  7660                           ;CAN.c: 209: BRGCON1bits.SJW0 = 1;
  7661  001A1A  8C70               	bsf	3952,6,c	;volatile
  7662                           
  7663                           ;CAN.c: 210: BRGCON1bits.SJW1 = 1;
  7664  001A1C  8E70               	bsf	3952,7,c	;volatile
  7665                           
  7666                           ;CAN.c: 212: BRGCON2bits.SEG1PH0 = 1;
  7667  001A1E  8671               	bsf	3953,3,c	;volatile
  7668                           
  7669                           ;CAN.c: 213: BRGCON2bits.SEG1PH1 = 1;
  7670  001A20  8871               	bsf	3953,4,c	;volatile
  7671                           
  7672                           ;CAN.c: 214: BRGCON2bits.SEG1PH2 = 1;
  7673  001A22  8A71               	bsf	3953,5,c	;volatile
  7674                           
  7675                           ;CAN.c: 216: BRGCON2bits.PRSEG2 = 1;
  7676  001A24  8471               	bsf	3953,2,c	;volatile
  7677                           
  7678                           ;CAN.c: 217: BRGCON2bits.PRSEG1 = 0;
  7679  001A26  9271               	bcf	3953,1,c	;volatile
  7680                           
  7681                           ;CAN.c: 218: BRGCON2bits.PRSEG0 = 0;
  7682  001A28  9071               	bcf	3953,0,c	;volatile
  7683                           
  7684                           ;CAN.c: 220: BRGCON3bits.SEG2PH0 = 1;
  7685  001A2A  8072               	bsf	3954,0,c	;volatile
  7686                           
  7687                           ;CAN.c: 221: BRGCON3bits.SEG2PH1 = 0;
  7688  001A2C  9272               	bcf	3954,1,c	;volatile
  7689                           
  7690                           ;CAN.c: 222: BRGCON3bits.SEG2PH2 = 1;
  7691  001A2E  8472               	bsf	3954,2,c	;volatile
  7692                           
  7693                           ;CAN.c: 224: BRGCON2bits.SAM = 1;
  7694  001A30  8C71               	bsf	3953,6,c	;volatile
  7695                           
  7696                           ;CAN.c: 225: BRGCON2bits.SEG2PHTS = 1;
  7697  001A32  8E71               	bsf	3953,7,c	;volatile
  7698  001A34  0012               	return		;funcret
  7699  001A36                     __end_of_CAN_SetupClock:
  7700                           	opt callstack 0
  7701                           
  7702 ;; *************** function _FLASH_Read *****************
  7703 ;; Defined at:
  7704 ;;		line 28 in file "FLASH.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  addr            4    5[COMRAM] long 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;		None
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  2    5[COMRAM] unsigned int 
  7711 ;; Registers used:
  7712 ;;		None
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;Total ram usage:        4 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:    3
  7725 ;; This function calls:
  7726 ;;		Nothing
  7727 ;; This function is called by:
  7728 ;;		_main
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	text59
  7733  001AD2                     __ptext59:
  7734                           	opt callstack 0
  7735  001AD2                     _FLASH_Read:
  7736                           	opt callstack 27
  7737                           
  7738                           ;FLASH.c: 30: TBLPTR = addr;
  7739                           
  7740                           ;incstack = 0
  7741  001AD2  C006  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  7742  001AD6  C007  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  7743  001ADA  C008  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  7744  001ADE  0008               	tblrd		*	; ;# 
  7745                           
  7746                           ;FLASH.c: 32: return TABLAT;
  7747  001AE0  CFF5 F006          	movff	tablat,?_FLASH_Read	;volatile
  7748  001AE4  6A07               	clrf	?_FLASH_Read+1,c
  7749  001AE6  0012               	return		;funcret
  7750  001AE8                     __end_of_FLASH_Read:
  7751                           	opt callstack 0
  7752                           
  7753 ;; *************** function _ISR_low *****************
  7754 ;; Defined at:
  7755 ;;		line 16 in file "ISR.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;		None
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		wreg, status,2, status,0, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7771 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7773 ;;Total ram usage:        3 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; Hardware stack levels required when called:    2
  7776 ;; This function calls:
  7777 ;;		_TMR1_Timer_reset
  7778 ;;		i1_TMR1_Update_flag_Set
  7779 ;; This function is called by:
  7780 ;;		Interrupt level 1
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           	psect	intcodelo
  7785  000018                     __pintcodelo:
  7786                           	opt callstack 0
  7787  000018                     _ISR_low:
  7788                           	opt callstack 22
  7789                           
  7790                           ;incstack = 0
  7791  000018  805A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7792  00001A  CFD8 F003          	movff	status,??_ISR_low
  7793  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  7794  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  7795                           
  7796                           ;ISR.c: 21: if(TMR1IF==1)
  7797  000026  A09E               	btfss	3998,0,c	;volatile
  7798  000028  D012               	goto	i1l781
  7799                           
  7800                           ;ISR.c: 22: {;ISR.c: 23: TMR1_Timer_reset();
  7801  00002A  EC1B  F00D         	call	_TMR1_Timer_reset	;wreg free
  7802                           
  7803                           ;ISR.c: 26: static BYTE ramkaStanuU8=0;;ISR.c: 29: TMR1_Update_flag_Set(1);
  7804  00002E  0E00               	movlw	0
  7805  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  7806  000032  0E01               	movlw	1
  7807  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  7808  000036  ECBA  F00D         	call	i1_TMR1_Update_flag_Set	;wreg free
  7809                           
  7810                           ;ISR.c: 31: DetectorLedRadar.Flags.obsluzWeWy = 1;
  7811  00003A  0100               	movlb	0	; () banked
  7812  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;ISR.c: 33: if(++ramkaStanuU8 > (2*10))
  7816  00003E  2A38               	incf	ISR_low@ramkaStanuU8,f,c
  7817  000040  0E14               	movlw	20
  7818  000042  6438               	cpfsgt	ISR_low@ramkaStanuU8,c
  7819  000044  D003               	goto	i1l3853
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;ISR.c: 34: {;ISR.c: 35: ramkaStanuU8 = 0;
  7823  000046  0E00               	movlw	0
  7824  000048  6E38               	movwf	ISR_low@ramkaStanuU8,c
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;ISR.c: 36: DaneCan.Flags.wyslijRamkeStanu = 1;
  7828  00004A  802B               	bsf	_DaneCan,0,c
  7829  00004C                     i1l3853:
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;ISR.c: 37: };ISR.c: 41: TMR1IF=0;
  7833  00004C  909E               	bcf	3998,0,c	;volatile
  7834  00004E                     i1l781:
  7835  00004E  C005  FFE0         	movff	??_ISR_low+2,bsr
  7836  000052  C004  FFE8         	movff	??_ISR_low+1,wreg
  7837  000056  C003  FFD8         	movff	??_ISR_low,status
  7838  00005A  905A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7839  00005C  0010               	retfie	
  7840  00005E                     __end_of_ISR_low:
  7841                           	opt callstack 0
  7842                           
  7843 ;; *************** function i1_TMR1_Update_flag_Set *****************
  7844 ;; Defined at:
  7845 ;;		line 32 in file "TMR1.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  a               2    0[COMRAM] unsigned int 
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		None
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;Total ram usage:        2 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    1
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_ISR_low
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text61
  7874  001B74                     __ptext61:
  7875                           	opt callstack 0
  7876  001B74                     i1_TMR1_Update_flag_Set:
  7877                           	opt callstack 22
  7878                           
  7879                           ;TMR1.c: 34: TMR1_Update_flag = a;
  7880                           
  7881                           ;incstack = 0
  7882  001B74  C001  F033         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  7883  001B78  C002  F034         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  7884  001B7C  0012               	return		;funcret
  7885  001B7E                     __end_ofi1_TMR1_Update_flag_Set:
  7886                           	opt callstack 0
  7887                           
  7888 ;; *************** function _TMR1_Timer_reset *****************
  7889 ;; Defined at:
  7890 ;;		line 63 in file "TMR1.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  7895 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      unsigned char 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;Total ram usage:        2 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    1
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_ISR_low
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text62
  7920  001A36                     __ptext62:
  7921                           	opt callstack 0
  7922  001A36                     _TMR1_Timer_reset:
  7923                           	opt callstack 22
  7924                           
  7925                           ;TMR1.c: 69: volatile BYTE t1L = 0, t1H = 0;
  7926                           
  7927                           ;incstack = 0
  7928  001A36  0E00               	movlw	0
  7929  001A38  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  7930  001A3A  0E00               	movlw	0
  7931  001A3C  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  7932                           
  7933                           ;TMR1.c: 70: t1L = TMR1L;
  7934  001A3E  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  7935                           
  7936                           ;TMR1.c: 71: t1H = TMR1H;
  7937  001A42  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  7938                           
  7939                           ;TMR1.c: 72: __nop();
  7940  001A46  F000               	nop	
  7941                           
  7942                           ;TMR1.c: 73: t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  7943  001A48  0E9E               	movlw	158
  7944  001A4A  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  7945                           
  7946                           ;TMR1.c: 74: t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  7947  001A4C  0E57               	movlw	87
  7948  001A4E  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  7949                           
  7950                           ;TMR1.c: 75: TMR1H = t1H;
  7951  001A50  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  7952                           
  7953                           ;TMR1.c: 76: TMR1L = 0x5B;
  7954  001A54  0E5B               	movlw	91
  7955  001A56  6ECE               	movwf	4046,c	;volatile
  7956  001A58  0012               	return		;funcret
  7957  001A5A                     __end_of_TMR1_Timer_reset:
  7958                           	opt callstack 0
  7959                           
  7960 ;; *************** function _ISR_high *****************
  7961 ;; Defined at:
  7962 ;;		line 53 in file "ISR.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;		None
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;		None
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		None
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;Total ram usage:        0 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		Interrupt level 2
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	intcode
  7990  000008                     __pintcode:
  7991                           	opt callstack 0
  7992  000008                     _ISR_high:
  7993                           	opt callstack 22
  7994                           
  7995                           ;incstack = 0
  7996  000008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7997  00000A  EDC7  F00D         	call	int_func,f	;refresh shadow registers
  7998                           
  7999                           	psect	intcode_body
  8000  001B8E                     __pintcode_body:
  8001                           	opt callstack 22
  8002  001B8E                     int_func:
  8003                           	opt callstack 22
  8004  001B8E  0006               	pop		; remove dummy address from shadow register refresh
  8005  001B90  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8006  001B92  0011               	retfie		f
  8007  001B94                     __end_of_ISR_high:
  8008                           	opt callstack 0
  8009  0000                     
  8010                           	psect	rparam
  8011  0000                     
  8012                           	psect	temp
  8013  00005A                     btemp:
  8014                           	opt callstack 0
  8015  00005A                     	ds	1
  8016  0000                     int$flags	set	btemp
  8017  0000                     wtemp8	set	btemp+1
  8018  0000                     ttemp5	set	btemp+1
  8019  0000                     ttemp6	set	btemp+4
  8020  0000                     ttemp7	set	btemp+8
  8021                           tosu	equ	0xFFF
  8022                           tosh	equ	0xFFE
  8023                           tosl	equ	0xFFD
  8024                           stkptr	equ	0xFFC
  8025                           pclatu	equ	0xFFB
  8026                           pclath	equ	0xFFA
  8027                           pcl	equ	0xFF9
  8028                           tblptru	equ	0xFF8
  8029                           tblptrh	equ	0xFF7
  8030                           tblptrl	equ	0xFF6
  8031                           tablat	equ	0xFF5
  8032                           prodh	equ	0xFF4
  8033                           prodl	equ	0xFF3
  8034                           indf0	equ	0xFEF
  8035                           postinc0	equ	0xFEE
  8036                           postdec0	equ	0xFED
  8037                           preinc0	equ	0xFEC
  8038                           plusw0	equ	0xFEB
  8039                           fsr0h	equ	0xFEA
  8040                           fsr0l	equ	0xFE9
  8041                           wreg	equ	0xFE8
  8042                           indf1	equ	0xFE7
  8043                           postinc1	equ	0xFE6
  8044                           postdec1	equ	0xFE5
  8045                           preinc1	equ	0xFE4
  8046                           plusw1	equ	0xFE3
  8047                           fsr1h	equ	0xFE2
  8048                           fsr1l	equ	0xFE1
  8049                           bsr	equ	0xFE0
  8050                           indf2	equ	0xFDF
  8051                           postinc2	equ	0xFDE
  8052                           postdec2	equ	0xFDD
  8053                           preinc2	equ	0xFDC
  8054                           plusw2	equ	0xFDB
  8055                           fsr2h	equ	0xFDA
  8056                           fsr2l	equ	0xFD9
  8057                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         692
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      89
    BANK0           160      2     116
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_All->_NVMInit
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   32150
                                              0 BANK0      2     2      0
                         _FLASH_Read
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18698
                                             25 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 8     6      2   15647
                                             17 COMRAM     8     6      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4535
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3646
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3646
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     234
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    7072
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4382
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     467
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     467
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    5840
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    3496
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    3496
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     181
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     588
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     569
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     269
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      74       5       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      59       1       94.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CD      20        0.0%
DATA                 0      0     2ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 31 13:54:00 2019

               __end_of_FRAME_DeviceReset 0D12                     ?_FRAME_AveragingTimes 0006  
                            ___awdiv@sign 000B                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0006  
                       _FRAME_MapPosition 1B98                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 000C                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 0008                        __size_of_CAN_GenID 0078  
                                     l300 0348                                       l301 034E  
                                     l302 0354                                       l303 035A  
                                     l304 0360                                       l305 0366  
                                     l420 0B20                                       l392 12B6  
                                     l288 0922                               ?_LED_Update 0001  
                                     l297 033C                                       l289 0920  
                                     l298 039E                                       l299 0342  
                                     l639 0904                                       l926 197E  
                                     l918 1976                                       l694 0772  
                                     l935 1872                                       l695 076A  
                            __CFG_CPB$OFF 000000                        ??_FRAME_AxisStatus 0008  
                            __CFG_CPD$OFF 000000                        ?_FRAME_MapPosition 0006  
                      __size_of_CAN_Setup 005C                              ?_LED_Control 0006  
                                     wreg 000FE8                     __end_of_CAN_TakeFrame 0580  
                             ?_INI_OUTPUT 0001                    __size_of_INI_LED_Start 0034  
                           NVMInit@result 000E                  ??_MOCK_Klikniecie_Spadek 0008  
                   __end_of_CAN_SendFrame 0A78                              __CFG_LVP$OFF 000000  
                         _neighborsAdress 003B                 TRM_DataTransmition@weWyU8 0037  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 0008  
                            __CFG_WDT$OFF 000000                                      l4003 0B30  
                                    l4021 0B60                                      l1437 16D0  
                                    l4101 0F7C                                      l4015 0B50  
                                    l4033 0B80                                      l4009 0B40  
                                    l4113 0FAC                                      l4051 0BB0  
                                    l4027 0B70                           __end_of_INI_All 1A7C  
                                    l4131 0FF4                                      l4107 0F94  
                                    l4045 0BA0                                      l4125 0FDC  
                                    l4039 0B90                                      l4119 0FC4  
                                    l4057 0BC2                                      l4305 17EC  
                                    l4173 169E                                      l4501 1224  
                                    l4413 0D00                                      l4405 0CCC  
                                    l4341 0E22                                      l4333 0DFA  
                                    l4175 16A6                                      l4511 1244  
                                    l4431 166A                                      l4095 0F64  
                                    l4327 0DB4                                      l4425 19A6  
                                    l4185 16C6                                      l4601 0542  
                                    l4265 09BC                                      l4409 0CEE  
                                    l4441 1104                                      l4089 0F4C  
                                    l4515 124E                                      l4525 1524  
                                    l4701 08A8                                      l4605 054A  
                                    l4269 0A70                                      l4461 026C  
                                    l4453 011C                                      l4373 1706  
                                    l4471 192C                                      l4519 125C  
                                    l4607 057C                                      l4543 036C  
                                    l4455 019E                                      l4537 156E  
                                    l4289 175C                                      l4633 1060  
                                    l4641 1096                                      l4561 0476  
                                    l4721 05C2                                      l4707 08D6  
                                    l4635 106A                                      l4627 1034  
                                    l4803 1292                                      l4571 049C  
                                    l4563 047C                                      l4459 0266  
                                    l4395 0C8C                                      l4731 0608  
                                    l4723 05D0                                      l4493 1206  
                                    l4573 04A4                                      l4565 0484  
                                    l4741 065A                                      l4733 0616  
                                    l4725 05DE                                      l3943 0A8A  
                                    l4671 07C2                                      l4487 11F6  
                                    l4591 051A                                      l4567 048C  
                                    l4559 0470                                      l4583 04E2  
                                    l4743 0668                                      l4735 0624  
                                    l4727 05EC                                      l4751 06F0  
                                    l4719 05B4                                      l3961 0ABA  
                                    l3929 19E8                                      l4593 0522  
                                    l4569 0494                                      l4577 04AC  
                                    l4585 04FC                                      l4745 067E  
                                    l4737 0632                                      l4729 05FA  
                                    l3955 0AAA                                      l4683 081E  
                                    l4499 121C                                      l4595 052A  
                                    l4587 050E                                      l4579 04DE  
                                    l4739 0640                                      l4819 179E  
                                    l3973 0ADA                                      l3949 0A9A  
                                    l4677 07F0                                      l4597 0532  
                                    l4589 0514                                      l4749 0694  
                                    _BIE0 000DFA                                      l3991 0B0A  
                                    l3967 0ACA                                      l4695 087A  
                                    l4599 053A                                      l3887 189C  
                                    l4839 132E                                      l3985 0AFA  
                                    l4689 084C                                      l4849 1350  
                                    l3979 0AEA                                      l3997 0B1A  
                       _MOC_Frame_Counter 1AFA                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    u3040 109E                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u2175 1972  
                                    u2176 1974                                      u2530 16AA  
                                    u2710 1716                                      _IPR3 000FA5  
                                    _IPEN 007E87                                      _PIE3 000FA3  
                                    u2750 0C1A                                      u2760 0C32  
                                    u2930 1228                                      u2595 0992  
                                    _PEIE 007F96                                      u2756 0C1C  
                                    _LOCK 003A                                      u2766 0C34  
                                    u2995 0408                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 000A  
                                    _Dane 00D0                           __end_of_ISR_low 005E  
                        LED_Control@diode 0006                      FRAME_AnalogValue@set 0008  
                      ?_MOC_Frame_Counter 0006                                      _main 12E0  
                        LED_Control@color 000A                           __end_of_NVMInit 183A  
                         __end_of_NVMRead 19B0                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005A  
                          _CAN_SetupClock 1A0E                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 14BA  
           __size_of_TMR1_Update_flag_Get 000A                                      start 005E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_LED_Error 001E  
                           __CFG_IESO$OFF 000000                        __size_of_LED_Right 004C  
           __size_of_FRAME_HandleCanFrame 01F8                             _LED_Light_Pos 0FFE  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                     ??_MOC_Frame_Counter 0008                ??_MOC_Aktualna_Temperatura 0008  
       FRAME_HandleCanFrame@identyfikator 0019                       __size_of_FLASH_Read 0016  
                      __size_of_INI_Timer 0018                 __end_of_FRAME_MapPosition 1B9A  
                           _NeightAdress1 004B                             _NeightAdress2 0058  
                           _NeightAdress3 0049                             _NeightAdress4 0047  
                           _NeightAdress5 0045                             _NeightAdress6 0043  
                           _NeightAdress7 0041                             _NeightAdress8 003F  
                        __end_of_LED_Left 1800             __size_of_MOCK_PrzyspieszenieX 000A  
           __size_of_MOCK_PrzyspieszenieY 000A             __size_of_MOCK_PrzyspieszenieZ 000A  
                   ReadfromEEPROM@Address 0006                                     _B0CON 000E20  
                                   _B1CON 000E30                                     _B2CON 000E40  
                                   _B3CON 000E50                                     _B4CON 000E60  
                                   _B5CON 000E70                          __end_of_LOCK_Get 1B98  
                                   ?_main 0001                          __end_of_LOCK_Set 1B8E  
                         __end_of___awdiv 1266                                     _EEADR 000FA9  
                                   _BSEL0 000DF8                           ___awdiv@divisor 0008  
                                   _T1CON 000FCD                                     _IRCF0 007E9C  
                                   _IRCF1 007E9D         FRAME_ExcitationMultiplier@message 0006  
                                   _IRCF2 007E9E                           __end_of___lwdiv 16DA  
                                   i1l781 004E                       __size_of_FRAME_Plot 0058  
                         ___awdiv@counter 000A                                     _MSEL0 000DF0  
                                   _MSEL1 000DF1                                     _MSEL2 000DF2  
                                   _MSEL3 000DF3                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_PWRT$OFF 000000                                     _Flagi 00C6  
                  ?_CAN_MoveBuffIntoFrame 0006                             __CFG_WRT0$OFF 000000  
              __size_of_FRAME_AnalogValue 0002                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_ISR_high 1B94  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                 __end_of_MOC_Frame_Counter 1B08  
                          __CFG_EBTRB$OFF 000000                   i1TMR1_Update_flag_Set@a 0001  
                            ?_MOC_NOTWORK 0006                 __size_of_ReadDataToEEPROM 018E  
                        __end_of_NVMWrite 18A6                          __end_of_NVMalloc 1948  
                                   tablat 000FF5                    __end_of_CAN_SetupClock 1A36  
                                   ttemp5 005B                                     ttemp6 005E  
                                   ttemp7 0062                                     status 000FD8  
                                   wtemp8 005B                         __end_of_CAN_GenID 13D0  
                          __CFG_PBADEN$ON 000000                       __size_of_LED_Update 007A  
                          ?_LED_Light_Pos 000D                          _TMR1_Timer_reset 1A36  
                       __end_of_CAN_Setup 157C                             _INI_LED_Start 19B0  
                   _FRAME_ExcitationValue 183A          FRAME_AccelerometerStatus@message 0008  
                         __initialization 157C                       __size_of_INI_OUTPUT 0020  
                        CAN_GenID@frameID 0008                              __end_of_main 1358  
                  ??_FRAME_AveragingTimes 0008                __size_of_FRAME_DeviceReset 0148  
                ?_FRAME_AdressOfNeighbors 0006                    __size_of_WritetoEEPROM 0034  
                        CAN_GenID@message 0006                 _FRAME_AccelerometerStatus 13D0  
                                  ??_main 002B                    CAN_MoveBuffIntoFrame@i 000A  
                           __activetblptr 000002                              NVMWrite@addr 000B  
                        _TMR1_Update_flag 0033                   WritetoEEPROM@GIE_Status 0035  
                   __end_of_IsInNeighbors 0FFE                           _wartosciSasiada 00D4  
                               ??_INI_All 000F                         __end_of_LED_Error 1ABA  
                       __end_of_LED_Right 1774                      WritetoEEPROM@Address 0006  
         __size_of_MOCK_Klikniecie_Spadek 000A                                 ??_ISR_low 0003  
                               ??_NVMInit 000C                                 ??_NVMRead 000E  
                                  _CANCON 000F6F                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 0006               FRAME_ExcitationMultiplier@i 0009  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 1AD2                                    i1l3853 004C  
                                  _TABLAT 000FF5                           ?_CAN_SetupClock 0001  
                                  _TBLPTR 000FF6                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 0008                            ?_INI_LED_Start 0001  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 000A  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 000D  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 000A  
                                  clear_0 15A4                                    clear_1 15B6  
                                  clear_2 15C2                          ___awdiv@quotient 000C  
                            NVMalloc@size 0006                ??_FRAME_PrzypisanieDokarty 0008  
                ??i1_TMR1_Update_flag_Set 0003                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 004D  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                              ??_FLASH_Read 000A  
     __size_of_FRAME_ExcitationMultiplier 004E                __size_of_MOC_Frame_Counter 000E  
                    __size_of_LED_Control 0152                             _WritetoEEPROM 1948  
                FRAME_MapPosition@message 0006                            FLASH_Read@addr 0006  
                   TMR1_Update_flag_Set@a 0006                                __accesstop 0060  
                 __end_of__initialization 15C8                              ??_FRAME_Plot 000F  
                     ISR_low@ramkaStanuU8 0038                                 ?_LED_Left 0006  
                         ??_LED_Light_Pos 0011                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 0006                                 ?_LOCK_Get 0001  
                               ?_LOCK_Set 0001           __end_of_FRAME_AdressOfNeighbors 032E  
                  _MOCK_Klikniecie_Spadek 1B56                            __pcstackCOMRAM 0001  
                               LED_Left@a 0006                                 LED_Left@b 0008  
                     _INI_GlobalInterrupt 1B08                                 ?_ISR_high 0001  
                      __end_of_FLASH_Read 1AE8                                 ?_NVMWrite 0009  
                               ?_NVMalloc 0006                              ??_LED_Update 0018  
             __end_of_TRM_DataTransmition 17BE                     _FRAME_SoftwareVersion 14BA  
                      __end_of_FRAME_Plot 1688                              ??_INI_OUTPUT 0006  
                               LOCK_Set@k 0006                   FRAME_AxisStatus@message 0006  
             IsInNeighbors@message_adress 0006                            ?_WritetoEEPROM 0006  
                    ?_INI_GlobalInterrupt 0001                          _ReadDataToEEPROM 0778  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                             NVMWrite@count 000D  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 000B  
                              ??_LED_Left 0008                                ??_LOCK_Get 0006  
                              ??_LOCK_Set 0006                        __end_of_LED_Update 12E0  
                      __end_of_INI_OUTPUT 1A9C                                ??_ISR_high 0001  
                     TMR1_Timer_reset@t1H 0002                       TMR1_Timer_reset@t1L 0001  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 000F                   ??_CAN_MoveBuffIntoFrame 000A  
                              ??_NVMalloc 000A              __end_of_TMR1_Update_flag_Get 1B74  
            __end_of_TMR1_Update_flag_Set 1B6A           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 0778                                   _INI_All 1A5A  
                __end_of_TMR1_Timer_reset 1A5A                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0006                                   _TXB0CON 000F40  
                                 _ISR_low 0018                                   _RXFCON0 000DD4  
                                 _RXFCON1 000DD5                                   _NVMInit 1800  
                                 _NVMRead 197C                                   _DaneCan 002B  
            __end_of_MOCK_PrzyspieszenieX 1B56              __end_of_MOCK_PrzyspieszenieY 1B4C  
            __end_of_MOCK_PrzyspieszenieZ 1B42        __end_of_FRAME_ExcitationMultiplier 1728  
              _FRAME_ExcitationMultiplier 16DA               FRAME_HandleCanFrame@message 0012  
                                 __Hparam 0000          ??_MOC_Wynikowa_wartosc_roznicowa 0008  
         ?_MOC_Wynikowa_wartosc_roznicowa 0006                                   __Lparam 0000  
                  __size_of_CAN_TakeFrame 0252                                 _CAN_GenID 1358  
                                 ___awdiv 11E2                                 _CAN_Setup 1520  
                  __size_of_CAN_SendFrame 0172                                   ___lwdiv 1688  
                       LED_Light_Pos@pos2 0014                                   __pcinit 157C  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 0006  
                                 __ptext0 12E0                                   __ptext1 1774  
                                 __ptext2 0580                                   __ptext3 1A9C  
                                 __ptext4 14BA                                   __ptext5 0D12  
                                 __ptext6 1B24                                   __ptext7 1B7E  
                                 __ptext8 1AFA                                   __ptext9 1B2E  
                  ?_FRAME_SoftwareVersion 0006                            _ReadfromEEPROM 1AE8  
                         ??_WritetoEEPROM 0009                    __size_of_CAN_SetupMask 0074  
       __size_of_MOC_Aktualna_Temperatura 000A            FRAME_AdressOfNeighbors@nrRamki 0008  
               ?_MOC_Aktualna_Temperatura 0006          __size_of_FRAME_AdressOfNeighbors 02CC  
                        ??_CAN_SetupClock 0006            FRAME_AdressOfNeighbors@message 0006  
                                 main@adr 00D2                                 _LED_Error 1A9C  
                          __pintcode_body 1B8E                                 _LED_Right 1728  
                    end_of_initialization 15C8      FRAME_SensorExcitationStatus@statwect 0031  
                           __Lmediumconst 0000                                   int_func 1B8E  
                               _INI_Timer 1ABA                    i1_TMR1_Update_flag_Set 1B74  
        TRM_DataTransmition@czujnikWeWyU8 0036                                ?_CAN_GenID 0006  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              ?_CAN_Setup 0001             __size_of_FRAME_AveragingTimes 0036  
                  __end_of_ReadfromEEPROM 1AFA                      CAN_SendFrame@message 000B  
                        NVMalloc@location 0008                             LED_Update@Red 0039  
                           _CAN_TakeFrame 032E                               NVMRead@addr 000A  
                           _CAN_SendFrame 0906                                ?_LED_Error 0001  
                             NVMRead@dest 0008               FRAME_AdressOfNeighbors@kier 000E  
                              ?_LED_Right 0006                          _FRAME_AxisStatus 18A6  
                 ??_FRAME_ExcitationValue 0008                                ?_INI_Timer 0001  
                 ?_MOCK_Klikniecie_Spadek 0006                           _ramkaCanRxKarty 0060  
                    _TMR1_Update_flag_Get 1B6A                           _ramkaCanTxKarty 00B5  
                    _TMR1_Update_flag_Set 1B60                             _CAN_SetupMask 1446  
                       __size_of_LED_Left 0042                      _FRAME_HandleCanFrame 0580  
                  __size_of_IsInNeighbors 00CA                         __size_of_LOCK_Get 0004  
                       __size_of_LOCK_Set 0008                         _WriteDataToEEPROM 0E36  
                __end_of_ReadDataToEEPROM 0906                            CAN_TakeFrame@k 0013  
                      ?_WriteDataToEEPROM 0001                           ?_ReadfromEEPROM 0006  
                           __pidataCOMRAM 1B16                         __size_of_ISR_high 1B8C  
                    _MOCK_PrzyspieszenieX 1B4C                      _MOCK_PrzyspieszenieY 1B42  
                    _MOCK_PrzyspieszenieZ 1B38                                LED_Right@a 0006  
                              LED_Right@b 000A                     MOC_Frame_Counter@zeta 004D  
                       __size_of_NVMWrite 0036                             ??_LED_Control 0008  
                     ??_WriteDataToEEPROM 000F                         __size_of_NVMalloc 0036  
                     start_initialization 157C                            ?_CAN_TakeFrame 000E  
                               _Init_Data 0056                            ?_CAN_SendFrame 000B  
         FRAME_SensorExcitationStatus@tru 000C            __end_of_MOCK_Klikniecie_Spadek 1B60  
                        __CFG_OSC$IRCIO67 000000         __size_of_FRAME_PrzypisanieDokarty 009E  
               ?_FRAME_PrzypisanieDokarty 0006                     ?_TMR1_Update_flag_Get 0006  
                   ?_TMR1_Update_flag_Set 0006                            ?_CAN_SetupMask 0001  
                   __end_of_LED_Light_Pos 10AE                     ?_FRAME_HandleCanFrame 0012  
               __end_of_WriteDataToEEPROM 0F34                               ??_CAN_GenID 0009  
                             ??_CAN_Setup 0006                          __CFG_LPT1OSC$OFF 000000  
                   ?_MOCK_PrzyspieszenieX 0006                     ?_MOCK_PrzyspieszenieY 0006  
                   ?_MOCK_PrzyspieszenieZ 0006                  CAN_MoveBuffIntoFrame@Buf 0008  
    __end_of_FRAME_SensorExcitationStatus 0E36     __size_of_FRAME_SensorExcitationStatus 0124  
                CAN_MoveBuffIntoFrame@Ram 0006              _FRAME_SensorExcitationStatus 0D12  
          __size_of_CAN_MoveBuffIntoFrame 002A                               __pbssBIGRAM 00D4  
           __end_of_CAN_MoveBuffIntoFrame 1A0E                           _Fulfillment_Lvl 0053  
                             __pbssCOMRAM 002B                                  ?_INI_All 0001  
                 _FRAME_AdressOfNeighbors 0062                             __pcstackBANK0 00D2  
                           _IsInNeighbors 0F34                         ?_TMR1_Timer_reset 0001  
                         _ustawieniaKarty 003D                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0001   __end_of_FRAME_DataUpdateAndChangeOption 1630  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 0008  
        ?_FRAME_DataUpdateAndChangeOption 0006           _FRAME_DataUpdateAndChangeOption 15D6  
                           ??_MOC_NOTWORK 0008                __end_of_CAN_SetupFilter_Ne 11E2  
                                ?_NVMInit 0001                                  ?_NVMRead 0008  
                      ??_TMR1_Timer_reset 0001                               ??_LED_Error 000B  
                          NVMWrite@source 0009                               ??_LED_Right 0008  
            __size_of_TRM_DataTransmition 004A                       __end_of_LED_Control 0BCA  
             ?_FRAME_ExcitationMultiplier 0006                               ??_INI_Timer 0006  
                   __end_of_INI_LED_Start 19E4                          ___lwdiv@dividend 0006  
                               __pintcode 0008                                  ?___awdiv 0006  
                 ??_FRAME_SoftwareVersion 0008          __end_of_MOC_Aktualna_Temperatura 1B38  
                                ?___lwdiv 0006                         FRAME_Plot@message 000D  
                             __pintcodelo 0018               __end_of_INI_GlobalInterrupt 1B16  
                         ??_CAN_TakeFrame 0010             ?_FRAME_SensorExcitationStatus 0008  
  __end_of_MOC_Wynikowa_wartosc_roznicowa 1B2E   __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
          _MOC_Wynikowa_wartosc_roznicowa 1B24                               _COMSTATbits 000F74  
                          ?_IsInNeighbors 0006                           ??_CAN_SendFrame 000D  
                        ___lwdiv@quotient 000B                   ?i1_TMR1_Update_flag_Set 0001  
             FRAME_AveragingTimes@message 0006                    ??_TMR1_Update_flag_Get 0008  
                  ??_TMR1_Update_flag_Set 0008                           ??_CAN_SetupMask 0006  
                                _LED_Left 17BE                    ??_FRAME_HandleCanFrame 0014  
                    CAN_TakeFrame@message 000E                       __end_of_MOC_NOTWORK 1B86  
                                _LOCK_Get 1B94                      CAN_TakeFrame@tempCON 0012  
                                _LOCK_Set 1B86                __size_of_WriteDataToEEPROM 00FE  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _RXB0SIDH 000F61                                  _RXB0SIDL 000F62  
                                _RXF0EIDH 000F02                                  _RXF0EIDL 000F03  
                                _RXF1EIDH 000F06                                  _RXF1EIDL 000F07  
                                _RXF2EIDH 000F0A                                  _RXF2EIDL 000F0B  
                                _RXF3EIDH 000F0E                                  _RXF3EIDL 000F0F  
                                _RXF4EIDH 000F12                                  _RXF4EIDL 000F13  
                                _RXF5EIDH 000F16                                  _RXF5EIDL 000F17  
                                _RXF6EIDH 000D62                                  _RXF6EIDL 000D63  
                                _RXF0SIDH 000F00                                  _RXF7EIDH 000D66  
                                _RXF0SIDL 000F01                                  _RXF7EIDL 000D67  
                                _RXF1SIDH 000F04                                  _RXF8EIDH 000D6A  
                                _RXF1SIDL 000F05                                  _RXF8EIDL 000D6B  
                                _RXF2SIDH 000F08                                  _RXF9EIDH 000D72  
                                _RXF2SIDL 000F09                                  _RXF9EIDL 000D73  
                                _RXF3SIDH 000F0C                                  _RXF3SIDL 000F0D  
                                _ISR_high 0008                                  _RXF4SIDH 000F10  
                                _RXF4SIDL 000F11                                  _RXF5SIDH 000F14  
                                _RXF5SIDL 000F15                                  _RXF6SIDH 000D60  
                                _RXF6SIDL 000D61                                  _RXM0EIDH 000F1A  
                                _RXF7SIDH 000D64                                  _RXM0EIDL 000F1B  
                                _RXF7SIDL 000D65                                  _RXM1EIDH 000F1E  
                                _RXF8SIDH 000D68                                  _RXM1EIDL 000F1F  
                                _RXF8SIDL 000D69                                  _RXF9SIDH 000D70  
                  ??_MOCK_PrzyspieszenieX 0008                    ??_MOCK_PrzyspieszenieY 0008  
                                _RXF9SIDL 000D71                    ??_MOCK_PrzyspieszenieZ 0008  
                                _RXFBCON0 000DE0                                  _RXFBCON1 000DE1  
                                _RXFBCON2 000DE2                                  _RXFBCON3 000DE3  
                                _RXFBCON4 000DE4                                  _RXM0SIDH 000F18  
                                _RXM0SIDL 000F19                                  _RXM1SIDH 000F1C  
                                _RXM1SIDL 000F1D                  __end_of_FRAME_AxisStatus 18DC  
                                _NVMWrite 1870                                  _NVMalloc 1912  
               ??_FRAME_AdressOfNeighbors 000A                          _DetectorLedRadar 00CB  
                             _LED_Control 0A78                          __size_of_INI_All 0022  
            FRAME_ExcitationValue@message 0006                     __end_of_WritetoEEPROM 197C  
          __end_ofi1_TMR1_Update_flag_Set 1B7E                            _nextEEPosition 002F  
                               copy_data0 1590                          __size_of_ISR_low 0046  
      __size_of_FRAME_AccelerometerStatus 0076              __end_of_FRAME_AveragingTimes 1912  
                        __size_of_NVMInit 003A                          __size_of_NVMRead 0034  
              ?_FRAME_AccelerometerStatus 0008            __size_of_FRAME_ExcitationValue 0036  
           __end_of_FRAME_ExcitationValue 1870                                _EECON1bits 000FA6  
                                __Hrparam 0000                              _RXB0SIDLbits 000F62  
                        ??_ReadfromEEPROM 0008                                  __Lrparam 0000  
                       ?_ReadDataToEEPROM 0001                          __size_of___awdiv 0084  
                        __size_of___lwdiv 0052                        ??_ReadDataToEEPROM 000E  
                         ??_IsInNeighbors 0008                  _MOC_Aktualna_Temperatura 1B2E  
         FRAME_PrzypisanieDokarty@message 0006                        LED_Light_Pos@flage 0016  
                      LED_Light_Pos@color 0011          __end_of_FRAME_PrzypisanieDokarty 114C  
                            _RXF0SIDLbits 000F01                  FRAME_AnalogValue@message 0006  
                         ___lwdiv@divisor 0008                              _RXF1SIDLbits 000F05  
                              _FLASH_Read 1AD2                           ___lwdiv@counter 000A  
                                __ptext10 1B86                                  __ptext11 1B94  
                                __ptext20 1870                                  __ptext12 0F34  
                                __ptext21 1948                                  __ptext13 10AE  
                                __ptext30 1B4C                                  __ptext22 15D6  
                                __ptext14 1630                                  __ptext31 1B56  
                                __ptext23 18A6                                  __ptext15 1B98  
                                __ptext40 0FFE                                  __ptext32 0906  
                                __ptext24 18DC                                  __ptext16 183A  
                                __ptext41 1688                                  __ptext33 1358  
                                __ptext25 1B9A                                  __ptext17 16DA  
                                __ptext50 1ABA                                  __ptext42 1728  
                                __ptext34 032E                                  __ptext26 0062  
                                __ptext18 0BCA                                  __ptext51 1A7C  
                                __ptext43 17BE                                  __ptext35 11E2  
                                __ptext27 13D0                                  __ptext19 0E36  
                                __ptext52 19B0                                  __ptext44 1A5A  
                                __ptext36 19E4                                  __ptext28 1B38  
          ??_FRAME_SensorExcitationStatus 000A                                  __ptext61 1B74  
                                __ptext53 0A78                                  __ptext45 0778  
                                __ptext37 1B60                                  __ptext29 1B42  
                                __ptext62 1A36                                  __ptext54 1B08  
                                __ptext46 197C                                  __ptext38 1B6A  
                                __ptext55 1520                                  __ptext47 1AE8  
                                __ptext39 1266                                  __ptext56 1446  
                                __ptext48 1800                                  __ptext57 114C  
                                __ptext49 1912                                  __ptext58 1A0E  
                                __ptext59 1AD2             TRM_DataTransmition@canMessage 001A  
                            _RXF2SIDLbits 000F09                               _MOC_NOTWORK 1B7E  
                            _RXF3SIDLbits 000F0D                 FRAME_HandleCanFrame@ident 0017  
                            _RXF4SIDLbits 000F11                  FRAME_DeviceReset@message 000F  
       __end_of_FRAME_AccelerometerStatus 1446                              _RXF5SIDLbits 000F15  
                              _FRAME_Plot 1630                             __size_of_main 0078  
                            _RXF6SIDLbits 000D61                              _RXF7SIDLbits 000D65  
                 __size_of_CAN_SetupClock 0028                              _RXF8SIDLbits 000D69  
                            _RXF9SIDLbits 000D71                                  int$flags 005A  
                     _TRM_DataTransmition 1774                               _RXB0DLCbits 000F65  
                              _LED_Update 1266                               _RXB0CONbits 000F60  
                              _INTCONbits 000FF2                                _INI_OUTPUT 1A7C  
                       _FRAME_AnalogValue 1B9A                      ?_TRM_DataTransmition 0001  
            FRAME_SoftwareVersion@message 0006                                  intlevel1 0000  
                                intlevel2 0000                           _czujnikiNaMapie 00CE  
                      ?_FRAME_AnalogValue 0006       FRAME_SensorExcitationStatus@message 0008  
                             _TXB0CONbits 000F40                       ??_FRAME_AnalogValue 000A  
               __size_of_TMR1_Timer_reset 0024                        _CAN_SetupFilter_Ne 114C  
                LED_Light_Pos@fulfillment 000F                      _FRAME_AveragingTimes 18DC  
                     ?_CAN_SetupFilter_Ne 0001            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0BCA             __end_of_FRAME_SoftwareVersion 1520  
                      ?_FRAME_DeviceReset 000F                           LED_Update@Green 0055  
               __end_of_FRAME_AnalogValue 1B9C                    __size_of_LED_Light_Pos 00B0  
                             ?_FLASH_Read 0006                     _CAN_MoveBuffIntoFrame 19E4  
                              _WDTCONbits 000FD1                       ??_FRAME_DeviceReset 0011  
                   ??_TRM_DataTransmition 001A                  _FRAME_PrzypisanieDokarty 10AE  
                  LED_Light_Pos@LED_array 0012                      ??_CAN_SetupFilter_Ne 0006  
                          LED_Update@pos1 0051                            LED_Update@pos2 004F  
                             ?_FRAME_Plot 000D  
