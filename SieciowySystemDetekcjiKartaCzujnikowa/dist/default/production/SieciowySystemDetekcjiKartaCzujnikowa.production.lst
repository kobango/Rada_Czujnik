

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 15 15:21:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           ; Version 2.05
    58                           ; Generated 20/12/2018 GMT
    59                           ; 
    60                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4680 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  000F1E                     __pidataCOMRAM:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for LED_Update@pos2
    97  000F1E  0001               	dw	1
    98                           
    99                           ;initializer for LED_Update@pos1
   100  000F20  0001               	dw	1
   101                           
   102                           ;initializer for _Fulfillment_Lvl
   103  000F22  0014               	dw	20
   104                           
   105                           ;initializer for LED_Update@Green
   106  000F24  01                 	db	1
   107  0000                     _RXFCON0	set	3540
   108  0000                     _MSEL3	set	3571
   109  0000                     _MSEL2	set	3570
   110  0000                     _MSEL1	set	3569
   111  0000                     _MSEL0	set	3568
   112  0000                     _BIE0	set	3578
   113  0000                     _BSEL0	set	3576
   114  0000                     _B5CON	set	3696
   115  0000                     _B4CON	set	3680
   116  0000                     _B3CON	set	3664
   117  0000                     _B2CON	set	3648
   118  0000                     _B1CON	set	3632
   119  0000                     _B0CON	set	3616
   120  0000                     _TXB0CONbits	set	3904
   121  0000                     _RXF2EIDL	set	3851
   122  0000                     _RXF2EIDH	set	3850
   123  0000                     _RXF2SIDLbits	set	3849
   124  0000                     _RXF2SIDL	set	3849
   125  0000                     _RXF2SIDH	set	3848
   126  0000                     _RXF1EIDL	set	3847
   127  0000                     _RXF1EIDH	set	3846
   128  0000                     _RXF1SIDLbits	set	3845
   129  0000                     _RXF1SIDL	set	3845
   130  0000                     _RXF1SIDH	set	3844
   131  0000                     _RXF0EIDL	set	3843
   132  0000                     _RXF0EIDH	set	3842
   133  0000                     _RXF0SIDLbits	set	3841
   134  0000                     _RXF0SIDL	set	3841
   135  0000                     _RXF0SIDH	set	3840
   136  0000                     _RXM1EIDL	set	3871
   137  0000                     _RXM1EIDH	set	3870
   138  0000                     _RXM1SIDL	set	3869
   139  0000                     _RXM1SIDH	set	3868
   140  0000                     _RXM0EIDL	set	3867
   141  0000                     _RXM0EIDH	set	3866
   142  0000                     _RXM0SIDL	set	3865
   143  0000                     _RXM0SIDH	set	3864
   144  0000                     _RXB1CON	set	3920
   145  0000                     _TXB0CON	set	3904
   146  0000                     _INTCONbits	set	4082
   147  0000                     _WDTCONbits	set	4049
   148  0000                     _RCONbits	set	4048
   149  0000                     _TRISC	set	3988
   150  0000                     _LATC	set	3979
   151  0000                     _T1CON	set	4045
   152  0000                     _TMR1H	set	4047
   153  0000                     _TMR1L	set	4046
   154  0000                     _LATE	set	3981
   155  0000                     _LATA	set	3977
   156  0000                     _LATB	set	3978
   157  0000                     _LATD	set	3980
   158  0000                     _TRISD	set	3989
   159  0000                     _TRISE	set	3990
   160  0000                     _TRISB	set	3987
   161  0000                     _TRISA	set	3986
   162  0000                     _RXB0DLCbits	set	3941
   163  0000                     _RXB0DLC	set	3941
   164  0000                     _RXB0SIDH	set	3937
   165  0000                     _RXB0SIDLbits	set	3938
   166  0000                     _RXB0SIDL	set	3938
   167  0000                     _RXB0EIDH	set	3939
   168  0000                     _RXB0EIDL	set	3940
   169  0000                     _COMSTATbits	set	3956
   170  0000                     _RXB0CONbits	set	3936
   171  0000                     _BRGCON3bits	set	3954
   172  0000                     _BRGCON2bits	set	3953
   173  0000                     _BRGCON1bits	set	3952
   174  0000                     _CIOCON	set	3955
   175  0000                     _ECANCON	set	3959
   176  0000                     _PIR3	set	4004
   177  0000                     _IPR3	set	4005
   178  0000                     _PIE3	set	4003
   179  0000                     _RXB0CON	set	3936
   180  0000                     _CANSTAT	set	3950
   181  0000                     _CANCON	set	3951
   182  0000                     _RCON	set	4048
   183  0000                     _RXB0D0	set	3942
   184  0000                     _TMR1IF	set	31984
   185  0000                     _TMR1IP	set	31992
   186  0000                     _PEIE	set	32662
   187  0000                     _IPEN	set	32391
   188  0000                     _TMR1ON	set	32360
   189  0000                     _TMR1IE	set	31976
   190  0000                     _IRCF0	set	32412
   191  0000                     _IRCF1	set	32413
   192  0000                     _IRCF2	set	32414
   193                           
   194                           ; #config settings
   195  0000                     
   196                           	psect	cinit
   197  000C2A                     __pcinit:
   198                           	opt callstack 0
   199  000C2A                     start_initialization:
   200                           	opt callstack 0
   201  000C2A                     __initialization:
   202                           	opt callstack 0
   203                           
   204                           ; Initialize objects allocated to COMRAM (7 bytes)
   205                           ; load TBLPTR registers with __pidataCOMRAM
   206  000C2A  0E1E               	movlw	low __pidataCOMRAM
   207  000C2C  6EF6               	movwf	tblptrl,c
   208  000C2E  0E0F               	movlw	high __pidataCOMRAM
   209  000C30  6EF7               	movwf	tblptrh,c
   210  000C32  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   211  000C34  6EF8               	movwf	tblptru,c
   212  000C36  EE00  F043         	lfsr	0,__pdataCOMRAM
   213  000C3A  EE10 F007          	lfsr	1,7
   214  000C3E                     copy_data0:
   215  000C3E  0009               	tblrd		*+
   216  000C40  CFF5 FFEE          	movff	tablat,postinc0
   217  000C44  50E5               	movf	postdec1,w,c
   218  000C46  50E1               	movf	fsr1l,w,c
   219  000C48  E1FA               	bnz	copy_data0
   220                           
   221                           ; Clear objects allocated to BANK0 (85 bytes)
   222  000C4A  EE00  F060         	lfsr	0,__pbssBANK0
   223  000C4E  0E55               	movlw	85
   224  000C50                     clear_0:
   225  000C50  6AEE               	clrf	postinc0,c
   226  000C52  06E8               	decf	wreg,f,c
   227  000C54  E1FD               	bnz	clear_0
   228                           
   229                           ; Clear objects allocated to COMRAM (29 bytes)
   230  000C56  EE00  F026         	lfsr	0,__pbssCOMRAM
   231  000C5A  0E1D               	movlw	29
   232  000C5C                     clear_1:
   233  000C5C  6AEE               	clrf	postinc0,c
   234  000C5E  06E8               	decf	wreg,f,c
   235  000C60  E1FD               	bnz	clear_1
   236  000C62                     end_of_initialization:
   237                           	opt callstack 0
   238  000C62                     __end_of__initialization:
   239                           	opt callstack 0
   240  000C62  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   241  000C64  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   242  000C66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   243  000C68  6EF8               	movwf	tblptru,c
   244  000C6A  0100               	movlb	0
   245  000C6C  EFDF  F006         	goto	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMRAM
   248  000026                     __pbssCOMRAM:
   249                           	opt callstack 0
   250  000026                     _ramkaCanTxKarty:
   251                           	opt callstack 0
   252  000026                     	ds	17
   253  000037                     _DaneCan:
   254                           	opt callstack 0
   255  000037                     	ds	4
   256  00003B                     _TMR1_Update_flag:
   257                           	opt callstack 0
   258  00003B                     	ds	2
   259  00003D                     _DetectorLedRadar:
   260                           	opt callstack 0
   261  00003D                     	ds	2
   262  00003F                     	ds	1
   263  000040                     	ds	1
   264  000041                     ISR_low@ramkaStanuU8:
   265                           	opt callstack 0
   266  000041                     	ds	1
   267  000042                     	ds	1
   268                           
   269                           	psect	dataCOMRAM
   270  000043                     __pdataCOMRAM:
   271                           	opt callstack 0
   272  000043                     LED_Update@pos2:
   273                           	opt callstack 0
   274  000043                     	ds	2
   275  000045                     LED_Update@pos1:
   276                           	opt callstack 0
   277  000045                     	ds	2
   278  000047                     _Fulfillment_Lvl:
   279                           	opt callstack 0
   280  000047                     	ds	2
   281  000049                     LED_Update@Green:
   282                           	opt callstack 0
   283  000049                     	ds	1
   284                           
   285                           	psect	bssBANK0
   286  000060                     __pbssBANK0:
   287                           	opt callstack 0
   288  000060                     _ramkaCanRxKarty:
   289                           	opt callstack 0
   290  000060                     	ds	85
   291                           
   292                           	psect	cstackCOMRAM
   293  000001                     __pcstackCOMRAM:
   294                           	opt callstack 0
   295  000001                     TMR1_Timer_reset@t1L:
   296                           	opt callstack 0
   297  000001                     i1TMR1_Update_flag_Set@a:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0x0
   301  000001                     	ds	1
   302  000002                     TMR1_Timer_reset@t1H:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0x1
   306  000002                     	ds	1
   307  000003                     ??_ISR_low:
   308  000003                     
   309                           ; 1 bytes @ 0x2
   310  000003                     	ds	3
   311  000006                     ??_CAN_Setup:
   312  000006                     ?_TMR1_Update_flag_Get:
   313                           	opt callstack 0
   314  000006                     ?_LED_Right:
   315                           	opt callstack 0
   316  000006                     ?_LED_Left:
   317                           	opt callstack 0
   318  000006                     ?___awdiv:
   319                           	opt callstack 0
   320  000006                     ?___lwdiv:
   321                           	opt callstack 0
   322  000006                     CAN_MoveBuffIntoFrame@Ram:
   323                           	opt callstack 0
   324  000006                     CAN_GenID@message:
   325                           	opt callstack 0
   326  000006                     LED_Right@a:
   327                           	opt callstack 0
   328  000006                     LED_Left@a:
   329                           	opt callstack 0
   330  000006                     LED_Control@diode:
   331                           	opt callstack 0
   332  000006                     TMR1_Update_flag_Set@a:
   333                           	opt callstack 0
   334  000006                     FRAME_SensorExcitationStatus@message:
   335                           	opt callstack 0
   336  000006                     FRAME_AccelerometerStatus@message:
   337                           	opt callstack 0
   338  000006                     FRAME_ExcitationValue@message:
   339                           	opt callstack 0
   340  000006                     FRAME_ExcitationMultiplier@message:
   341                           	opt callstack 0
   342  000006                     FRAME_AveragingTimes@message:
   343                           	opt callstack 0
   344  000006                     FRAME_AxisStatus@message:
   345                           	opt callstack 0
   346  000006                     FRAME_DeviceReset@message:
   347                           	opt callstack 0
   348  000006                     FRAME_Plot@message:
   349                           	opt callstack 0
   350  000006                     FRAME_MapPosition@message:
   351                           	opt callstack 0
   352  000006                     FRAME_SoftwareVersion@message:
   353                           	opt callstack 0
   354  000006                     FRAME_AnalogValue@message:
   355                           	opt callstack 0
   356  000006                     FRAME_AdressOfNeighbors@message:
   357                           	opt callstack 0
   358  000006                     ___awdiv@dividend:
   359                           	opt callstack 0
   360  000006                     ___lwdiv@dividend:
   361                           	opt callstack 0
   362                           
   363                           ; 2 bytes @ 0x5
   364  000006                     	ds	2
   365  000008                     ??_LED_Right:
   366  000008                     CAN_GenID@frameID:
   367                           	opt callstack 0
   368  000008                     CAN_MoveBuffIntoFrame@Buf:
   369                           	opt callstack 0
   370  000008                     LED_Left@b:
   371                           	opt callstack 0
   372  000008                     FRAME_AnalogValue@set:
   373                           	opt callstack 0
   374  000008                     FRAME_AdressOfNeighbors@nrRamki:
   375                           	opt callstack 0
   376  000008                     ___awdiv@divisor:
   377                           	opt callstack 0
   378  000008                     ___lwdiv@divisor:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x7
   382  000008                     	ds	1
   383  000009                     FRAME_ExcitationMultiplier@i:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x8
   387  000009                     	ds	1
   388  00000A                     CAN_MoveBuffIntoFrame@i:
   389                           	opt callstack 0
   390  00000A                     LED_Control@color:
   391                           	opt callstack 0
   392  00000A                     ___awdiv@counter:
   393                           	opt callstack 0
   394  00000A                     LED_Right@b:
   395                           	opt callstack 0
   396  00000A                     ___lwdiv@quotient:
   397                           	opt callstack 0
   398                           
   399                           ; 2 bytes @ 0x9
   400  00000A                     	ds	1
   401  00000B                     ___awdiv@sign:
   402                           	opt callstack 0
   403  00000B                     CAN_SendFrame@message:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0xA
   407  00000B                     	ds	1
   408  00000C                     ___lwdiv@counter:
   409                           	opt callstack 0
   410  00000C                     ___awdiv@quotient:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0xB
   414  00000C                     	ds	1
   415  00000D                     ??_CAN_SendFrame:
   416  00000D                     LED_Light_Pos@pos:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0xC
   420  00000D                     	ds	1
   421  00000E                     CAN_TakeFrame@message:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0xD
   425  00000E                     	ds	1
   426  00000F                     LED_Light_Pos@fulfillment:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0xE
   430  00000F                     	ds	1
   431  000010                     ??_CAN_TakeFrame:
   432  000010                     FRAME_HandleCanFrame@message:
   433                           	opt callstack 0
   434                           
   435                           ; 2 bytes @ 0xF
   436  000010                     	ds	1
   437  000011                     LED_Light_Pos@color:
   438                           	opt callstack 0
   439                           
   440                           ; 1 bytes @ 0x10
   441  000011                     	ds	1
   442  000012                     ??_FRAME_HandleCanFrame:
   443  000012                     CAN_TakeFrame@tempCON:
   444                           	opt callstack 0
   445  000012                     LED_Light_Pos@LED_array:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x11
   449  000012                     	ds	1
   450  000013                     CAN_TakeFrame@k:
   451                           	opt callstack 0
   452                           
   453                           ; 1 bytes @ 0x12
   454  000013                     	ds	1
   455  000014                     FRAME_HandleCanFrame@identyfikator:
   456                           	opt callstack 0
   457  000014                     LED_Light_Pos@pos2:
   458                           	opt callstack 0
   459                           
   460                           ; 2 bytes @ 0x13
   461  000014                     	ds	1
   462  000015                     TRM_DataTransmition@canMessage:
   463                           	opt callstack 0
   464                           
   465                           ; 17 bytes @ 0x14
   466  000015                     	ds	1
   467  000016                     LED_Light_Pos@flage:
   468                           	opt callstack 0
   469                           
   470                           ; 2 bytes @ 0x15
   471  000016                     	ds	2
   472  000018                     
   473                           ; 1 bytes @ 0x17
   474  000018                     	ds	14
   475  000026                     
   476                           ; 1 bytes @ 0x25
   477 ;;
   478 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   479 ;;
   480 ;; *************** function _main *****************
   481 ;; Defined at:
   482 ;;		line 89 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels required when called:    7
   502 ;; This function calls:
   503 ;;		_INI_All
   504 ;;		_LED_Update
   505 ;;		_TMR1_Update_flag_Get
   506 ;;		_TMR1_Update_flag_Set
   507 ;;		_TRM_DataTransmition
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text0
   514  000DBE                     __ptext0:
   515                           	opt callstack 0
   516  000DBE                     _main:
   517                           	opt callstack 24
   518                           
   519                           ;main.c: 91:     INI_All();
   520                           
   521                           ;incstack = 0
   522  000DBE  EC60  F007         	call	_INI_All	;wreg free
   523                           
   524                           ;main.c: 93:     RCON = 0xFF;
   525  000DC2  68D0               	setf	4048,c	;volatile
   526  000DC4                     l2639:
   527                           
   528                           ;main.c: 96:     {;main.c: 97:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   529  000DC4  B03D               	btfsc	_DetectorLedRadar,0,c
   530                           
   531                           ;main.c: 98:         {;main.c: 99:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   532  000DC6  903D               	bcf	_DetectorLedRadar,0,c
   533                           
   534                           ;main.c: 103:         if(TMR1_Update_flag_Get()==1)
   535  000DC8  EC85  F007         	call	_TMR1_Update_flag_Get	;wreg free
   536  000DCC  0406               	decf	?_TMR1_Update_flag_Get,w,c
   537  000DCE  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   538  000DD0  A4D8               	btfss	status,2,c
   539  000DD2  D008               	goto	l2649
   540                           
   541                           ;main.c: 104:         {;main.c: 105:             LED_Update();
   542  000DD4  EC74  F005         	call	_LED_Update	;wreg free
   543                           
   544                           ;main.c: 106:             TMR1_Update_flag_Set(0);
   545  000DD8  0E00               	movlw	0
   546  000DDA  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   547  000DDC  0E00               	movlw	0
   548  000DDE  6E06               	movwf	TMR1_Update_flag_Set@a,c
   549  000DE0  EC80  F007         	call	_TMR1_Update_flag_Set	;wreg free
   550  000DE4                     l2649:
   551                           
   552                           ;main.c: 110:         TRM_DataTransmition();
   553  000DE4  EC49  F005         	call	_TRM_DataTransmition	;wreg free
   554  000DE8  0004               	clrwdt		;# 
   555                           
   556                           ;main.c: 112:     }
   557  000DEA  D7EC               	goto	l2639
   558  000DEC                     __end_of_main:
   559                           	opt callstack 0
   560                           
   561 ;; *************** function _TRM_DataTransmition *****************
   562 ;; Defined at:
   563 ;;		line 16 in file "TRM.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  canMessage     17   20[COMRAM] struct .
   568 ;;  i               1    0        unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   579 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   581 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   582 ;;Total ram usage:       17 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    6
   585 ;; This function calls:
   586 ;;		_CAN_TakeFrame
   587 ;;		_FRAME_HandleCanFrame
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text1
   594  000A92                     __ptext1:
   595                           	opt callstack 0
   596  000A92                     _TRM_DataTransmition:
   597                           	opt callstack 24
   598                           
   599                           ;TRM.c: 18:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 19:     BYTE i;;TRM.c:
      +                           20:     mID canMessage;;TRM.c: 23:     if(DaneCan.Flags.wyslijRamkeStanu)
   600                           
   601                           ;incstack = 0
   602  000A92  A037               	btfss	_DaneCan,0,c
   603  000A94  D013               	goto	l2609
   604                           
   605                           ;TRM.c: 24:     {;TRM.c: 26:         canMessage.message_type = 0x02;
   606  000A96  0E02               	movlw	2
   607  000A98  6E16               	movwf	TRM_DataTransmition@canMessage+1,c
   608                           
   609                           ;TRM.c: 27:         canMessage.id.Val = 0;
   610  000A9A  0E00               	movlw	0
   611  000A9C  6E19               	movwf	TRM_DataTransmition@canMessage+4,c
   612  000A9E  0E00               	movlw	0
   613  000AA0  6E1A               	movwf	TRM_DataTransmition@canMessage+5,c
   614  000AA2  0E00               	movlw	0
   615  000AA4  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   616  000AA6  0E00               	movlw	0
   617  000AA8  6E1C               	movwf	TRM_DataTransmition@canMessage+7,c
   618                           
   619                           ;TRM.c: 28:         canMessage.id.v[2] = 0x01 *4;
   620  000AAA  0E04               	movlw	4
   621  000AAC  6E1B               	movwf	TRM_DataTransmition@canMessage+6,c
   622                           
   623                           ;TRM.c: 29:         FRAME_HandleCanFrame(&canMessage);
   624  000AAE  0E15               	movlw	low TRM_DataTransmition@canMessage
   625  000AB0  6E10               	movwf	FRAME_HandleCanFrame@message,c
   626  000AB2  0E00               	movlw	high TRM_DataTransmition@canMessage
   627  000AB4  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   628  000AB6  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   629                           
   630                           ;TRM.c: 46:         DaneCan.Flags.wyslijRamkeStanu = 0;
   631  000ABA  9037               	bcf	_DaneCan,0,c
   632  000ABC                     l2609:
   633                           
   634                           ;TRM.c: 56:     if(CAN_TakeFrame(&canMessage))
   635  000ABC  0E15               	movlw	low TRM_DataTransmition@canMessage
   636  000ABE  6E0E               	movwf	CAN_TakeFrame@message,c
   637  000AC0  0E00               	movlw	high TRM_DataTransmition@canMessage
   638  000AC2  6E0F               	movwf	CAN_TakeFrame@message+1,c
   639  000AC4  EC30  F000         	call	_CAN_TakeFrame	;wreg free
   640  000AC8  0900               	iorlw	0
   641  000ACA  B4D8               	btfsc	status,2,c
   642  000ACC  0012               	return	
   643                           
   644                           ;TRM.c: 57:     {;TRM.c: 58:         if((canMessage.buffer == 0) || (canMessage.buffer =
      +                          = 1))
   645  000ACE  5018               	movf	TRM_DataTransmition@canMessage+3,w,c
   646  000AD0  B4D8               	btfsc	status,2,c
   647  000AD2  D003               	goto	u1320
   648  000AD4  0418               	decf	TRM_DataTransmition@canMessage+3,w,c
   649  000AD6  A4D8               	btfss	status,2,c
   650  000AD8  0012               	return	
   651  000ADA                     u1320:
   652                           
   653                           ;TRM.c: 59:         {;TRM.c: 60:             FRAME_HandleCanFrame(&canMessage);
   654  000ADA  0E15               	movlw	low TRM_DataTransmition@canMessage
   655  000ADC  6E10               	movwf	FRAME_HandleCanFrame@message,c
   656  000ADE  0E00               	movlw	high TRM_DataTransmition@canMessage
   657  000AE0  6E11               	movwf	FRAME_HandleCanFrame@message+1,c
   658  000AE2  EC6E  F001         	call	_FRAME_HandleCanFrame	;wreg free
   659                           
   660                           ;TRM.c: 61:         }
   661  000AE6  0012               	return		;funcret
   662  000AE8                     __end_of_TRM_DataTransmition:
   663                           	opt callstack 0
   664                           
   665 ;; *************** function _FRAME_HandleCanFrame *****************
   666 ;; Defined at:
   667 ;;		line 445 in file "FRAME.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  message         2   15[COMRAM] PTR struct .
   670 ;;		 -> TRM_DataTransmition@canMessage(17), 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  identyfikato    1   19[COMRAM] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   686 ;;Total ram usage:        5 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; Hardware stack levels required when called:    5
   689 ;; This function calls:
   690 ;;		_CAN_GenID
   691 ;;		_CAN_SendFrame
   692 ;;		_FRAME_AccelerometerStatus
   693 ;;		_FRAME_AdressOfNeighbors
   694 ;;		_FRAME_AnalogValue
   695 ;;		_FRAME_AveragingTimes
   696 ;;		_FRAME_AxisStatus
   697 ;;		_FRAME_DeviceReset
   698 ;;		_FRAME_ExcitationMultiplier
   699 ;;		_FRAME_ExcitationValue
   700 ;;		_FRAME_MapPosition
   701 ;;		_FRAME_Plot
   702 ;;		_FRAME_SensorExcitationStatus
   703 ;;		_FRAME_SoftwareVersion
   704 ;;		_LED_Error
   705 ;;		___awdiv
   706 ;; This function is called by:
   707 ;;		_TRM_DataTransmition
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text2
   712  0002DC                     __ptext2:
   713                           	opt callstack 0
   714  0002DC                     _FRAME_HandleCanFrame:
   715                           	opt callstack 24
   716                           
   717                           ;FRAME.c: 445: void FRAME_HandleCanFrame(mID * message);FRAME.c: 446: {;FRAME.c: 447:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   718                           
   719                           ;incstack = 0
   720  0002DC  EE20 F006          	lfsr	2,6
   721  0002E0  5010               	movf	FRAME_HandleCanFrame@message,w,c
   722  0002E2  26D9               	addwf	fsr2l,f,c
   723  0002E4  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   724  0002E6  22DA               	addwfc	fsr2h,f,c
   725  0002E8  50DF               	movf	indf2,w,c
   726  0002EA  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   727  0002EC  5012               	movf	??_FRAME_HandleCanFrame,w,c
   728  0002EE  6E06               	movwf	___awdiv@dividend,c
   729  0002F0  6A07               	clrf	___awdiv@dividend+1,c
   730  0002F2  0E00               	movlw	0
   731  0002F4  6E09               	movwf	___awdiv@divisor+1,c
   732  0002F6  0E04               	movlw	4
   733  0002F8  6E08               	movwf	___awdiv@divisor,c
   734  0002FA  EC10  F004         	call	___awdiv	;wreg free
   735  0002FE  5006               	movf	?___awdiv,w,c
   736  000300  6E14               	movwf	FRAME_HandleCanFrame@identyfikator,c
   737                           
   738                           ;FRAME.c: 449:     switch(identyfikator)
   739  000302  D060               	goto	l2559
   740  000304                     l2533:
   741                           
   742                           ;FRAME.c: 452:             FRAME_SensorExcitationStatus(message);
   743  000304  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   744  000308  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   745  00030C  EC52  F004         	call	_FRAME_SensorExcitationStatus	;wreg free
   746                           
   747                           ;FRAME.c: 453:             break;
   748  000310  D08B               	goto	l2561
   749  000312                     l2535:
   750                           
   751                           ;FRAME.c: 455:             FRAME_AccelerometerStatus(message);
   752  000312  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   753  000316  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   754  00031A  ECAA  F006         	call	_FRAME_AccelerometerStatus	;wreg free
   755                           
   756                           ;FRAME.c: 456:             break;
   757  00031E  D084               	goto	l2561
   758  000320                     l2537:
   759                           
   760                           ;FRAME.c: 458:             FRAME_ExcitationValue(message);
   761  000320  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   762  000324  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   763  000328  EC59  F006         	call	_FRAME_ExcitationValue	;wreg free
   764                           
   765                           ;FRAME.c: 459:             break;
   766  00032C  D07D               	goto	l2561
   767  00032E                     l2539:
   768                           
   769                           ;FRAME.c: 461:             FRAME_ExcitationMultiplier(message);
   770  00032E  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   771  000332  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   772  000336  ECC8  F005         	call	_FRAME_ExcitationMultiplier	;wreg free
   773                           
   774                           ;FRAME.c: 462:             break;
   775  00033A  D076               	goto	l2561
   776  00033C                     l2541:
   777                           
   778                           ;FRAME.c: 464:             FRAME_AveragingTimes(message);
   779  00033C  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   780  000340  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   781  000344  EC8F  F006         	call	_FRAME_AveragingTimes	;wreg free
   782                           
   783                           ;FRAME.c: 465:             break;
   784  000348  D06F               	goto	l2561
   785  00034A                     l2543:
   786                           
   787                           ;FRAME.c: 467:             FRAME_AxisStatus(message);
   788  00034A  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   789  00034E  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   790  000352  EC74  F006         	call	_FRAME_AxisStatus	;wreg free
   791                           
   792                           ;FRAME.c: 468:             break;
   793  000356  D068               	goto	l2561
   794  000358                     l2545:
   795                           
   796                           ;FRAME.c: 470:             FRAME_DeviceReset(message);
   797  000358  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   798  00035C  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   799  000360  EC1D  F005         	call	_FRAME_DeviceReset	;wreg free
   800                           
   801                           ;FRAME.c: 471:             break;
   802  000364  D061               	goto	l2561
   803  000366                     l2547:
   804                           
   805                           ;FRAME.c: 473:             FRAME_Plot(message);
   806  000366  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   807  00036A  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   808  00036E  EC31  F007         	call	_FRAME_Plot	;wreg free
   809                           
   810                           ;FRAME.c: 474:             break;
   811  000372  D05A               	goto	l2561
   812  000374                     l2549:
   813                           
   814                           ;FRAME.c: 476:             FRAME_MapPosition(message);
   815  000374  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   816  000378  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   817  00037C  EC97  F007         	call	_FRAME_MapPosition	;wreg free
   818                           
   819                           ;FRAME.c: 477:             break;
   820  000380  D053               	goto	l2561
   821  000382                     l2551:
   822                           
   823                           ;FRAME.c: 479:             FRAME_SoftwareVersion(message);
   824  000382  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   825  000386  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   826  00038A  EC96  F007         	call	_FRAME_SoftwareVersion	;wreg free
   827                           
   828                           ;FRAME.c: 480:             break;
   829  00038E  D04C               	goto	l2561
   830  000390                     l2553:
   831                           
   832                           ;FRAME.c: 483:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   833  000390  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   834  000394  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   835  000398  0EF4               	movlw	244
   836  00039A  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   837  00039C  6E08               	movwf	FRAME_AnalogValue@set,c
   838  00039E  6A09               	clrf	FRAME_AnalogValue@set+1,c
   839  0003A0  0EFF               	movlw	255
   840  0003A2  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   841  0003A4  EC98  F007         	call	_FRAME_AnalogValue	;wreg free
   842                           
   843                           ;FRAME.c: 484:             break;
   844  0003A8  D03F               	goto	l2561
   845  0003AA                     l2555:
   846                           
   847                           ;FRAME.c: 487:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   848  0003AA  C010  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   849  0003AE  C011  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   850  0003B2  0EF0               	movlw	240
   851  0003B4  2414               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   852  0003B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   853  0003B8  6A09               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   854  0003BA  0EFF               	movlw	255
   855  0003BC  2209               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   856  0003BE  EC99  F007         	call	_FRAME_AdressOfNeighbors	;wreg free
   857                           
   858                           ;FRAME.c: 488:             break;
   859  0003C2  D032               	goto	l2561
   860  0003C4                     l2559:
   861  0003C4  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   862  0003C6  6E12               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   863  0003C8  6A13               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   864                           
   865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   866                           ; Switch size 1, requested type "simple"
   867                           ; Number of cases is 1, Range of values is 0 to 0
   868                           ; switch strategies available:
   869                           ; Name         Instructions Cycles
   870                           ; simple_byte            4     3 (average)
   871                           ;	Chosen strategy is simple_byte
   872  0003CA  5013               	movf	??_FRAME_HandleCanFrame+1,w,c
   873  0003CC  0A00               	xorlw	0	; case 0
   874  0003CE  A4D8               	btfss	status,2,c
   875  0003D0  D02B               	goto	l2561
   876                           
   877                           ; Switch size 1, requested type "simple"
   878                           ; Number of cases is 14, Range of values is 1 to 17
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; simple_byte           43    22 (average)
   882                           ;	Chosen strategy is simple_byte
   883  0003D2  5012               	movf	??_FRAME_HandleCanFrame,w,c
   884  0003D4  0A01               	xorlw	1	; case 1
   885  0003D6  B4D8               	btfsc	status,2,c
   886  0003D8  D795               	goto	l2533
   887  0003DA  0A03               	xorlw	3	; case 2
   888  0003DC  B4D8               	btfsc	status,2,c
   889  0003DE  D799               	goto	l2535
   890  0003E0  0A01               	xorlw	1	; case 3
   891  0003E2  B4D8               	btfsc	status,2,c
   892  0003E4  D79D               	goto	l2537
   893  0003E6  0A07               	xorlw	7	; case 4
   894  0003E8  B4D8               	btfsc	status,2,c
   895  0003EA  D7A1               	goto	l2539
   896  0003EC  0A01               	xorlw	1	; case 5
   897  0003EE  B4D8               	btfsc	status,2,c
   898  0003F0  D7A5               	goto	l2541
   899  0003F2  0A03               	xorlw	3	; case 6
   900  0003F4  B4D8               	btfsc	status,2,c
   901  0003F6  D7A9               	goto	l2543
   902  0003F8  0A01               	xorlw	1	; case 7
   903  0003FA  B4D8               	btfsc	status,2,c
   904  0003FC  D7AD               	goto	l2545
   905  0003FE  0A0E               	xorlw	14	; case 9
   906  000400  B4D8               	btfsc	status,2,c
   907  000402  D7B1               	goto	l2547
   908  000404  0A03               	xorlw	3	; case 10
   909  000406  B4D8               	btfsc	status,2,c
   910  000408  D7B5               	goto	l2549
   911  00040A  0A01               	xorlw	1	; case 11
   912  00040C  B4D8               	btfsc	status,2,c
   913  00040E  D7B9               	goto	l2551
   914  000410  0A07               	xorlw	7	; case 12
   915  000412  B4D8               	btfsc	status,2,c
   916  000414  D7BD               	goto	l2553
   917  000416  0A01               	xorlw	1	; case 13
   918  000418  B4D8               	btfsc	status,2,c
   919  00041A  D7BA               	goto	l2553
   920  00041C  0A1D               	xorlw	29	; case 16
   921  00041E  B4D8               	btfsc	status,2,c
   922  000420  D7C4               	goto	l2555
   923  000422  0A01               	xorlw	1	; case 17
   924  000424  B4D8               	btfsc	status,2,c
   925  000426  D7C1               	goto	l2555
   926  000428                     l2561:
   927                           
   928                           ;FRAME.c: 490:     if(message->message_type == 0x02)
   929  000428  EE20 F001          	lfsr	2,1
   930  00042C  5010               	movf	FRAME_HandleCanFrame@message,w,c
   931  00042E  26D9               	addwf	fsr2l,f,c
   932  000430  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   933  000432  22DA               	addwfc	fsr2h,f,c
   934  000434  0E02               	movlw	2
   935  000436  18DE               	xorwf	postinc2,w,c
   936  000438  A4D8               	btfss	status,2,c
   937  00043A  0012               	return	
   938                           
   939                           ;FRAME.c: 491:     {;FRAME.c: 493:         message->frame_type = 0x03;
   940  00043C  EE20 F002          	lfsr	2,2
   941  000440  5010               	movf	FRAME_HandleCanFrame@message,w,c
   942  000442  26D9               	addwf	fsr2l,f,c
   943  000444  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   944  000446  22DA               	addwfc	fsr2h,f,c
   945  000448  0E03               	movlw	3
   946  00044A  6EDF               	movwf	indf2,c
   947                           
   948                           ;FRAME.c: 494:         message->message_type = 0x01;
   949  00044C  EE20 F001          	lfsr	2,1
   950  000450  5010               	movf	FRAME_HandleCanFrame@message,w,c
   951  000452  26D9               	addwf	fsr2l,f,c
   952  000454  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   953  000456  22DA               	addwfc	fsr2h,f,c
   954  000458  0E01               	movlw	1
   955  00045A  6EDF               	movwf	indf2,c
   956                           
   957                           ;FRAME.c: 495:         message->id.Val = 0;
   958  00045C  EE20 F004          	lfsr	2,4
   959  000460  5010               	movf	FRAME_HandleCanFrame@message,w,c
   960  000462  26D9               	addwf	fsr2l,f,c
   961  000464  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   962  000466  22DA               	addwfc	fsr2h,f,c
   963  000468  6ADE               	clrf	postinc2,c
   964  00046A  6ADE               	clrf	postinc2,c
   965  00046C  6ADE               	clrf	postinc2,c
   966  00046E  6ADD               	clrf	postdec2,c
   967                           
   968                           ;FRAME.c: 497:         message->id.v[2] = identyfikator*4;
   969  000470  5014               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   970  000472  0D04               	mullw	4
   971  000474  EE20 F006          	lfsr	2,6
   972  000478  5010               	movf	FRAME_HandleCanFrame@message,w,c
   973  00047A  26D9               	addwf	fsr2l,f,c
   974  00047C  5011               	movf	FRAME_HandleCanFrame@message+1,w,c
   975  00047E  22DA               	addwfc	fsr2h,f,c
   976  000480  CFF3 FFDF          	movff	prodl,indf2
   977                           
   978                           ;FRAME.c: 498:         CAN_GenID(message,identyfikator);
   979  000484  C010  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
   980  000488  C011  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
   981  00048C  C014  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
   982  000490  ECF0  F004         	call	_CAN_GenID	;wreg free
   983                           
   984                           ;FRAME.c: 499:         CAN_SendFrame(message);
   985  000494  C010  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
   986  000498  C011  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
   987  00049C  EC58  F002         	call	_CAN_SendFrame	;wreg free
   988                           
   989                           ;FRAME.c: 508:        while(RXB0CONbits.FILHIT3)
   990  0004A0  D004               	goto	l2573
   991  0004A2                     l460:
   992                           
   993                           ;FRAME.c: 509:        {;FRAME.c: 510:            if(TXB0CONbits.TXERR == 1){
   994  0004A2  010F               	movlb	15	; () banked
   995  0004A4  B940               	btfsc	64,4,b	;volatile
   996                           
   997                           ; BSR set to: 15
   998                           ;FRAME.c: 511:                LED_Error();
   999  0004A6  EC42  F007         	call	_LED_Error	;wreg free
  1000  0004AA                     l2573:
  1001                           
  1002                           ;FRAME.c: 508:        while(RXB0CONbits.FILHIT3)
  1003  0004AA  A660               	btfss	3936,3,c	;volatile
  1004  0004AC  0012               	return	
  1005  0004AE  D7F9               	goto	l460
  1006  0004B0                     __end_of_FRAME_HandleCanFrame:
  1007                           	opt callstack 0
  1008                           
  1009 ;; *************** function _LED_Error *****************
  1010 ;; Defined at:
  1011 ;;		line 31 in file "LED.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  2  251[None  ] unsigned int 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1029 ;;Total ram usage:        0 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    4
  1032 ;; This function calls:
  1033 ;;		_LED_Control
  1034 ;; This function is called by:
  1035 ;;		_FRAME_HandleCanFrame
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text3
  1040  000E84                     __ptext3:
  1041                           	opt callstack 0
  1042  000E84                     _LED_Error:
  1043                           	opt callstack 24
  1044                           
  1045                           ;LED.c: 33:     LED_Control(RED,0b1010101010);
  1046                           
  1047                           ;incstack = 0
  1048  000E84  0E02               	movlw	2
  1049  000E86  6E07               	movwf	LED_Control@diode+1,c
  1050  000E88  0EAA               	movlw	170
  1051  000E8A  6E06               	movwf	LED_Control@diode,c
  1052  000E8C  0E00               	movlw	0
  1053  000E8E  EC0F  F003         	call	_LED_Control
  1054                           
  1055                           ;LED.c: 34:     LED_Control(GREEN,0b0000000000);
  1056  000E92  0E00               	movlw	0
  1057  000E94  6E07               	movwf	LED_Control@diode+1,c
  1058  000E96  0E00               	movlw	0
  1059  000E98  6E06               	movwf	LED_Control@diode,c
  1060  000E9A  0E01               	movlw	1
  1061  000E9C  EC0F  F003         	call	_LED_Control
  1062  000EA0  0012               	return		;funcret
  1063  000EA2                     __end_of_LED_Error:
  1064                           	opt callstack 0
  1065                           
  1066 ;; *************** function _FRAME_SoftwareVersion *****************
  1067 ;; Defined at:
  1068 ;;		line 349 in file "FRAME.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  message         2    5[COMRAM] PTR struct .
  1071 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		None
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1087 ;;Total ram usage:        2 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    3
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_FRAME_HandleCanFrame
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text4
  1098  000F2C                     __ptext4:
  1099                           	opt callstack 0
  1100  000F2C                     _FRAME_SoftwareVersion:
  1101                           	opt callstack 25
  1102                           
  1103                           ;incstack = 0
  1104  000F2C  0012               	return		;funcret
  1105  000F2E                     __end_of_FRAME_SoftwareVersion:
  1106                           	opt callstack 0
  1107                           
  1108 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1109 ;; Defined at:
  1110 ;;		line 31 in file "FRAME.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  message         2    5[COMRAM] PTR struct .
  1113 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1127 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1128 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1129 ;;Total ram usage:        3 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    3
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_FRAME_HandleCanFrame
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text5
  1140  0008A4                     __ptext5:
  1141                           	opt callstack 0
  1142  0008A4                     _FRAME_SensorExcitationStatus:
  1143                           	opt callstack 25
  1144                           
  1145                           ;FRAME.c: 31: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 32: {;FRAM
      +                          E.c: 33:     if(message->message_type == 0x02)
  1146                           
  1147                           ;incstack = 0
  1148  0008A4  EE20 F001          	lfsr	2,1
  1149  0008A8  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1150  0008AA  26D9               	addwf	fsr2l,f,c
  1151  0008AC  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1152  0008AE  22DA               	addwfc	fsr2h,f,c
  1153  0008B0  0E02               	movlw	2
  1154  0008B2  18DE               	xorwf	postinc2,w,c
  1155  0008B4  A4D8               	btfss	status,2,c
  1156  0008B6  0012               	return	
  1157                           
  1158                           ;FRAME.c: 34:     {;FRAME.c: 35:         message->data_length = 5;
  1159  0008B8  EE20 F010          	lfsr	2,16
  1160  0008BC  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1161  0008BE  26D9               	addwf	fsr2l,f,c
  1162  0008C0  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1163  0008C2  22DA               	addwfc	fsr2h,f,c
  1164  0008C4  0E05               	movlw	5
  1165  0008C6  6EDF               	movwf	indf2,c
  1166                           
  1167                           ;FRAME.c: 49:         message->data[0] = 0x00;
  1168  0008C8  EE20 F008          	lfsr	2,8
  1169  0008CC  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1170  0008CE  26D9               	addwf	fsr2l,f,c
  1171  0008D0  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1172  0008D2  22DA               	addwfc	fsr2h,f,c
  1173  0008D4  0E00               	movlw	0
  1174  0008D6  6EDF               	movwf	indf2,c
  1175                           
  1176                           ;FRAME.c: 50:         message->data[1] = 0x88;
  1177  0008D8  EE20 F009          	lfsr	2,9
  1178  0008DC  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1179  0008DE  26D9               	addwf	fsr2l,f,c
  1180  0008E0  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1181  0008E2  22DA               	addwfc	fsr2h,f,c
  1182  0008E4  0E88               	movlw	136
  1183  0008E6  6EDF               	movwf	indf2,c
  1184                           
  1185                           ;FRAME.c: 51:         message->data[2] = 0x88;
  1186  0008E8  EE20 F00A          	lfsr	2,10
  1187  0008EC  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1188  0008EE  26D9               	addwf	fsr2l,f,c
  1189  0008F0  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1190  0008F2  22DA               	addwfc	fsr2h,f,c
  1191  0008F4  0E88               	movlw	136
  1192  0008F6  6EDF               	movwf	indf2,c
  1193                           
  1194                           ;FRAME.c: 52:         message->data[3] = 0x00;
  1195  0008F8  EE20 F00B          	lfsr	2,11
  1196  0008FC  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1197  0008FE  26D9               	addwf	fsr2l,f,c
  1198  000900  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1199  000902  22DA               	addwfc	fsr2h,f,c
  1200  000904  0E00               	movlw	0
  1201  000906  6EDF               	movwf	indf2,c
  1202                           
  1203                           ;FRAME.c: 53:         message->data[4] = 0x00;
  1204  000908  EE20 F00C          	lfsr	2,12
  1205  00090C  5006               	movf	FRAME_SensorExcitationStatus@message,w,c
  1206  00090E  26D9               	addwf	fsr2l,f,c
  1207  000910  5007               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1208  000912  22DA               	addwfc	fsr2h,f,c
  1209  000914  0E00               	movlw	0
  1210  000916  6EDF               	movwf	indf2,c
  1211                           
  1212                           ;FRAME.c: 56:     }
  1213  000918  0012               	return		;funcret
  1214  00091A                     __end_of_FRAME_SensorExcitationStatus:
  1215                           	opt callstack 0
  1216                           
  1217 ;; *************** function _FRAME_Plot *****************
  1218 ;; Defined at:
  1219 ;;		line 302 in file "FRAME.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  message         2    5[COMRAM] PTR struct .
  1222 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1238 ;;Total ram usage:        2 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    3
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_FRAME_HandleCanFrame
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text6
  1249  000E62                     __ptext6:
  1250                           	opt callstack 0
  1251  000E62                     _FRAME_Plot:
  1252                           	opt callstack 25
  1253                           
  1254                           ;FRAME.c: 302: static void FRAME_Plot(mID *message);FRAME.c: 303: {;FRAME.c: 314:     me
      +                          ssage->data_length = 1;
  1255                           
  1256                           ;incstack = 0
  1257  000E62  EE20 F010          	lfsr	2,16
  1258  000E66  5006               	movf	FRAME_Plot@message,w,c
  1259  000E68  26D9               	addwf	fsr2l,f,c
  1260  000E6A  5007               	movf	FRAME_Plot@message+1,w,c
  1261  000E6C  22DA               	addwfc	fsr2h,f,c
  1262  000E6E  0E01               	movlw	1
  1263  000E70  6EDF               	movwf	indf2,c
  1264                           
  1265                           ;FRAME.c: 315:     message->data[0] = 0xFF;
  1266  000E72  EE20 F008          	lfsr	2,8
  1267  000E76  5006               	movf	FRAME_Plot@message,w,c
  1268  000E78  26D9               	addwf	fsr2l,f,c
  1269  000E7A  5007               	movf	FRAME_Plot@message+1,w,c
  1270  000E7C  22DA               	addwfc	fsr2h,f,c
  1271  000E7E  0EFF               	movlw	255
  1272  000E80  6EDF               	movwf	indf2,c
  1273  000E82  0012               	return		;funcret
  1274  000E84                     __end_of_FRAME_Plot:
  1275                           	opt callstack 0
  1276                           
  1277 ;; *************** function _FRAME_MapPosition *****************
  1278 ;; Defined at:
  1279 ;;		line 324 in file "FRAME.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  message         2    5[COMRAM] PTR struct .
  1282 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		None
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    3
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_FRAME_HandleCanFrame
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text7
  1309  000F2E                     __ptext7:
  1310                           	opt callstack 0
  1311  000F2E                     _FRAME_MapPosition:
  1312                           	opt callstack 25
  1313                           
  1314                           ;incstack = 0
  1315  000F2E  0012               	return		;funcret
  1316  000F30                     __end_of_FRAME_MapPosition:
  1317                           	opt callstack 0
  1318                           
  1319 ;; *************** function _FRAME_ExcitationValue *****************
  1320 ;; Defined at:
  1321 ;;		line 91 in file "FRAME.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  message         2    5[COMRAM] PTR struct .
  1324 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1340 ;;Total ram usage:        3 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    3
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_FRAME_HandleCanFrame
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text8
  1351  000CB2                     __ptext8:
  1352                           	opt callstack 0
  1353  000CB2                     _FRAME_ExcitationValue:
  1354                           	opt callstack 25
  1355                           
  1356                           ;FRAME.c: 91: static void FRAME_ExcitationValue(mID *message);FRAME.c: 92: {;FRAME.c: 93
      +                          :     if(message->message_type == 0x02)
  1357                           
  1358                           ;incstack = 0
  1359  000CB2  EE20 F001          	lfsr	2,1
  1360  000CB6  5006               	movf	FRAME_ExcitationValue@message,w,c
  1361  000CB8  26D9               	addwf	fsr2l,f,c
  1362  000CBA  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1363  000CBC  22DA               	addwfc	fsr2h,f,c
  1364  000CBE  0E02               	movlw	2
  1365  000CC0  18DE               	xorwf	postinc2,w,c
  1366  000CC2  A4D8               	btfss	status,2,c
  1367  000CC4  0012               	return	
  1368                           
  1369                           ;FRAME.c: 94:     {;FRAME.c: 95:         message->data_length = 1;
  1370  000CC6  EE20 F010          	lfsr	2,16
  1371  000CCA  5006               	movf	FRAME_ExcitationValue@message,w,c
  1372  000CCC  26D9               	addwf	fsr2l,f,c
  1373  000CCE  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1374  000CD0  22DA               	addwfc	fsr2h,f,c
  1375  000CD2  0E01               	movlw	1
  1376  000CD4  6EDF               	movwf	indf2,c
  1377                           
  1378                           ;FRAME.c: 100:         message->data[0] = 0xFF;
  1379  000CD6  EE20 F008          	lfsr	2,8
  1380  000CDA  5006               	movf	FRAME_ExcitationValue@message,w,c
  1381  000CDC  26D9               	addwf	fsr2l,f,c
  1382  000CDE  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  1383  000CE0  22DA               	addwfc	fsr2h,f,c
  1384  000CE2  0EFF               	movlw	255
  1385  000CE4  6EDF               	movwf	indf2,c
  1386                           
  1387                           ;FRAME.c: 101:     }
  1388  000CE6  0012               	return		;funcret
  1389  000CE8                     __end_of_FRAME_ExcitationValue:
  1390                           	opt callstack 0
  1391                           
  1392 ;; *************** function _FRAME_ExcitationMultiplier *****************
  1393 ;; Defined at:
  1394 ;;		line 115 in file "FRAME.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  message         2    5[COMRAM] PTR struct .
  1397 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  i               2    8[COMRAM] unsigned short 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1412 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;Total ram usage:        5 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    3
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_FRAME_HandleCanFrame
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text9
  1424  000B90                     __ptext9:
  1425                           	opt callstack 0
  1426  000B90                     _FRAME_ExcitationMultiplier:
  1427                           	opt callstack 25
  1428                           
  1429                           ;FRAME.c: 115: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 116: {;FRAM
      +                          E.c: 117:     WORD i;;FRAME.c: 119:     if(message->message_type == 0x02)
  1430                           
  1431                           ;incstack = 0
  1432  000B90  EE20 F001          	lfsr	2,1
  1433  000B94  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1434  000B96  26D9               	addwf	fsr2l,f,c
  1435  000B98  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1436  000B9A  22DA               	addwfc	fsr2h,f,c
  1437  000B9C  0E02               	movlw	2
  1438  000B9E  18DE               	xorwf	postinc2,w,c
  1439  000BA0  A4D8               	btfss	status,2,c
  1440  000BA2  0012               	return	
  1441                           
  1442                           ;FRAME.c: 120:     {;FRAME.c: 121:         message->data_length = 1;
  1443  000BA4  EE20 F010          	lfsr	2,16
  1444  000BA8  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1445  000BAA  26D9               	addwf	fsr2l,f,c
  1446  000BAC  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1447  000BAE  22DA               	addwfc	fsr2h,f,c
  1448  000BB0  0E01               	movlw	1
  1449  000BB2  6EDF               	movwf	indf2,c
  1450                           
  1451                           ;FRAME.c: 122:         for(i=0; i<3; i++)
  1452  000BB4  0E00               	movlw	0
  1453  000BB6  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  1454  000BB8  0E00               	movlw	0
  1455  000BBA  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  1456  000BBC                     l2297:
  1457                           
  1458                           ;FRAME.c: 123:         {;FRAME.c: 126:         }
  1459  000BBC  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  1460  000BBE  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  1461  000BC0  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  1462  000BC2  E104               	bnz	u1040
  1463  000BC4  0E03               	movlw	3
  1464  000BC6  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  1465  000BC8  A0D8               	btfss	status,0,c
  1466  000BCA  D7F8               	goto	l2297
  1467  000BCC                     u1040:
  1468                           
  1469                           ;FRAME.c: 127:         message->data[0] = 0xFF;
  1470  000BCC  EE20 F008          	lfsr	2,8
  1471  000BD0  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  1472  000BD2  26D9               	addwf	fsr2l,f,c
  1473  000BD4  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  1474  000BD6  22DA               	addwfc	fsr2h,f,c
  1475  000BD8  0EFF               	movlw	255
  1476  000BDA  6EDF               	movwf	indf2,c
  1477                           
  1478                           ;FRAME.c: 128:     }
  1479  000BDC  0012               	return		;funcret
  1480  000BDE                     __end_of_FRAME_ExcitationMultiplier:
  1481                           	opt callstack 0
  1482                           
  1483 ;; *************** function _FRAME_DeviceReset *****************
  1484 ;; Defined at:
  1485 ;;		line 249 in file "FRAME.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  message         2    5[COMRAM] PTR struct .
  1488 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;Total ram usage:        3 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    3
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_FRAME_HandleCanFrame
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text10
  1515  000A3A                     __ptext10:
  1516                           	opt callstack 0
  1517  000A3A                     _FRAME_DeviceReset:
  1518                           	opt callstack 25
  1519                           
  1520                           ;FRAME.c: 249: static void FRAME_DeviceReset(mID *message);FRAME.c: 250: {;FRAME.c: 251:
      +                               if(message->message_type == 0x02)
  1521                           
  1522                           ;incstack = 0
  1523  000A3A  EE20 F001          	lfsr	2,1
  1524  000A3E  5006               	movf	FRAME_DeviceReset@message,w,c
  1525  000A40  26D9               	addwf	fsr2l,f,c
  1526  000A42  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1527  000A44  22DA               	addwfc	fsr2h,f,c
  1528  000A46  0E02               	movlw	2
  1529  000A48  18DE               	xorwf	postinc2,w,c
  1530  000A4A  A4D8               	btfss	status,2,c
  1531  000A4C  D011               	goto	l2315
  1532                           
  1533                           ;FRAME.c: 252:     {;FRAME.c: 253:         message->data_length = 1;
  1534  000A4E  EE20 F010          	lfsr	2,16
  1535  000A52  5006               	movf	FRAME_DeviceReset@message,w,c
  1536  000A54  26D9               	addwf	fsr2l,f,c
  1537  000A56  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1538  000A58  22DA               	addwfc	fsr2h,f,c
  1539  000A5A  0E01               	movlw	1
  1540  000A5C  6EDF               	movwf	indf2,c
  1541                           
  1542                           ;FRAME.c: 266:         message->data[0] = 0xFF;
  1543  000A5E  EE20 F008          	lfsr	2,8
  1544  000A62  5006               	movf	FRAME_DeviceReset@message,w,c
  1545  000A64  26D9               	addwf	fsr2l,f,c
  1546  000A66  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1547  000A68  22DA               	addwfc	fsr2h,f,c
  1548  000A6A  0EFF               	movlw	255
  1549  000A6C  6EDF               	movwf	indf2,c
  1550                           
  1551                           ;FRAME.c: 267:     }
  1552  000A6E  0012               	return	
  1553  000A70                     l2315:
  1554                           
  1555                           ;FRAME.c: 269:     {;FRAME.c: 270:         message->data_length = 1;
  1556  000A70  EE20 F010          	lfsr	2,16
  1557  000A74  5006               	movf	FRAME_DeviceReset@message,w,c
  1558  000A76  26D9               	addwf	fsr2l,f,c
  1559  000A78  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1560  000A7A  22DA               	addwfc	fsr2h,f,c
  1561  000A7C  0E01               	movlw	1
  1562  000A7E  6EDF               	movwf	indf2,c
  1563                           
  1564                           ;FRAME.c: 292:         message->data[0] = 0xFF;
  1565  000A80  EE20 F008          	lfsr	2,8
  1566  000A84  5006               	movf	FRAME_DeviceReset@message,w,c
  1567  000A86  26D9               	addwf	fsr2l,f,c
  1568  000A88  5007               	movf	FRAME_DeviceReset@message+1,w,c
  1569  000A8A  22DA               	addwfc	fsr2h,f,c
  1570  000A8C  0EFF               	movlw	255
  1571  000A8E  6EDF               	movwf	indf2,c
  1572  000A90  0012               	return		;funcret
  1573  000A92                     __end_of_FRAME_DeviceReset:
  1574                           	opt callstack 0
  1575                           
  1576 ;; *************** function _FRAME_AxisStatus *****************
  1577 ;; Defined at:
  1578 ;;		line 202 in file "FRAME.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  message         2    5[COMRAM] PTR struct .
  1581 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  i               2    0        unsigned short 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;Total ram usage:        3 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    3
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_FRAME_HandleCanFrame
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text11
  1608  000CE8                     __ptext11:
  1609                           	opt callstack 0
  1610  000CE8                     _FRAME_AxisStatus:
  1611                           	opt callstack 25
  1612                           
  1613                           ;FRAME.c: 202: static void FRAME_AxisStatus(mID *message);FRAME.c: 203: {;FRAME.c: 204: 
      +                              WORD i;;FRAME.c: 206:     if(message->message_type == 0x02)
  1614                           
  1615                           ;incstack = 0
  1616  000CE8  EE20 F001          	lfsr	2,1
  1617  000CEC  5006               	movf	FRAME_AxisStatus@message,w,c
  1618  000CEE  26D9               	addwf	fsr2l,f,c
  1619  000CF0  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1620  000CF2  22DA               	addwfc	fsr2h,f,c
  1621  000CF4  0E02               	movlw	2
  1622  000CF6  18DE               	xorwf	postinc2,w,c
  1623  000CF8  A4D8               	btfss	status,2,c
  1624  000CFA  0012               	return	
  1625                           
  1626                           ;FRAME.c: 207:     {;FRAME.c: 208:         message->data_length = 1;
  1627  000CFC  EE20 F010          	lfsr	2,16
  1628  000D00  5006               	movf	FRAME_AxisStatus@message,w,c
  1629  000D02  26D9               	addwf	fsr2l,f,c
  1630  000D04  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1631  000D06  22DA               	addwfc	fsr2h,f,c
  1632  000D08  0E01               	movlw	1
  1633  000D0A  6EDF               	movwf	indf2,c
  1634                           
  1635                           ;FRAME.c: 219:         message->data[0] = 0xFF;
  1636  000D0C  EE20 F008          	lfsr	2,8
  1637  000D10  5006               	movf	FRAME_AxisStatus@message,w,c
  1638  000D12  26D9               	addwf	fsr2l,f,c
  1639  000D14  5007               	movf	FRAME_AxisStatus@message+1,w,c
  1640  000D16  22DA               	addwfc	fsr2h,f,c
  1641  000D18  0EFF               	movlw	255
  1642  000D1A  6EDF               	movwf	indf2,c
  1643                           
  1644                           ;FRAME.c: 220:     }
  1645  000D1C  0012               	return		;funcret
  1646  000D1E                     __end_of_FRAME_AxisStatus:
  1647                           	opt callstack 0
  1648                           
  1649 ;; *************** function _FRAME_AveragingTimes *****************
  1650 ;; Defined at:
  1651 ;;		line 143 in file "FRAME.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  message         2    5[COMRAM] PTR struct .
  1654 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;Total ram usage:        3 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    3
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_FRAME_HandleCanFrame
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text12
  1681  000D1E                     __ptext12:
  1682                           	opt callstack 0
  1683  000D1E                     _FRAME_AveragingTimes:
  1684                           	opt callstack 25
  1685                           
  1686                           ;FRAME.c: 143: static void FRAME_AveragingTimes(mID *message);FRAME.c: 144: {;FRAME.c: 1
      +                          45:     if(message->message_type == 0x02)
  1687                           
  1688                           ;incstack = 0
  1689  000D1E  EE20 F001          	lfsr	2,1
  1690  000D22  5006               	movf	FRAME_AveragingTimes@message,w,c
  1691  000D24  26D9               	addwf	fsr2l,f,c
  1692  000D26  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1693  000D28  22DA               	addwfc	fsr2h,f,c
  1694  000D2A  0E02               	movlw	2
  1695  000D2C  18DE               	xorwf	postinc2,w,c
  1696  000D2E  A4D8               	btfss	status,2,c
  1697  000D30  0012               	return	
  1698                           
  1699                           ;FRAME.c: 146:     {;FRAME.c: 147:         message->data_length = 1;
  1700  000D32  EE20 F010          	lfsr	2,16
  1701  000D36  5006               	movf	FRAME_AveragingTimes@message,w,c
  1702  000D38  26D9               	addwf	fsr2l,f,c
  1703  000D3A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1704  000D3C  22DA               	addwfc	fsr2h,f,c
  1705  000D3E  0E01               	movlw	1
  1706  000D40  6EDF               	movwf	indf2,c
  1707                           
  1708                           ;FRAME.c: 155:         message->data[0] = 0xFF;
  1709  000D42  EE20 F008          	lfsr	2,8
  1710  000D46  5006               	movf	FRAME_AveragingTimes@message,w,c
  1711  000D48  26D9               	addwf	fsr2l,f,c
  1712  000D4A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  1713  000D4C  22DA               	addwfc	fsr2h,f,c
  1714  000D4E  0EFF               	movlw	255
  1715  000D50  6EDF               	movwf	indf2,c
  1716                           
  1717                           ;FRAME.c: 156:     }
  1718  000D52  0012               	return		;funcret
  1719  000D54                     __end_of_FRAME_AveragingTimes:
  1720                           	opt callstack 0
  1721                           
  1722 ;; *************** function _FRAME_AnalogValue *****************
  1723 ;; Defined at:
  1724 ;;		line 372 in file "FRAME.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  message         2    5[COMRAM] PTR struct .
  1727 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1728 ;;  set             2    7[COMRAM] unsigned short 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  i               2    0        unsigned short 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		None
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;Total ram usage:        4 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    3
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_FRAME_HandleCanFrame
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text13
  1755  000F30                     __ptext13:
  1756                           	opt callstack 0
  1757  000F30                     _FRAME_AnalogValue:
  1758                           	opt callstack 25
  1759                           
  1760                           ;incstack = 0
  1761  000F30  0012               	return		;funcret
  1762  000F32                     __end_of_FRAME_AnalogValue:
  1763                           	opt callstack 0
  1764                           
  1765 ;; *************** function _FRAME_AdressOfNeighbors *****************
  1766 ;; Defined at:
  1767 ;;		line 415 in file "FRAME.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  message         2    5[COMRAM] PTR struct .
  1770 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1771 ;;  nrRamki         2    7[COMRAM] unsigned short 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  i               2    0        unsigned short 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;Total ram usage:        4 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    3
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_FRAME_HandleCanFrame
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text14
  1798  000F32                     __ptext14:
  1799                           	opt callstack 0
  1800  000F32                     _FRAME_AdressOfNeighbors:
  1801                           	opt callstack 25
  1802                           
  1803                           ;incstack = 0
  1804  000F32  0012               	return		;funcret
  1805  000F34                     __end_of_FRAME_AdressOfNeighbors:
  1806                           	opt callstack 0
  1807                           
  1808 ;; *************** function _FRAME_AccelerometerStatus *****************
  1809 ;; Defined at:
  1810 ;;		line 69 in file "FRAME.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  message         2    5[COMRAM] PTR struct .
  1813 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1829 ;;Total ram usage:        3 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    3
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_FRAME_HandleCanFrame
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text15
  1840  000D54                     __ptext15:
  1841                           	opt callstack 0
  1842  000D54                     _FRAME_AccelerometerStatus:
  1843                           	opt callstack 25
  1844                           
  1845                           ;FRAME.c: 69: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 70: {;FRAME.c
      +                          : 71:     if(message->message_type == 0x02)
  1846                           
  1847                           ;incstack = 0
  1848  000D54  EE20 F001          	lfsr	2,1
  1849  000D58  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1850  000D5A  26D9               	addwf	fsr2l,f,c
  1851  000D5C  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1852  000D5E  22DA               	addwfc	fsr2h,f,c
  1853  000D60  0E02               	movlw	2
  1854  000D62  18DE               	xorwf	postinc2,w,c
  1855  000D64  A4D8               	btfss	status,2,c
  1856  000D66  0012               	return	
  1857                           
  1858                           ;FRAME.c: 72:     {;FRAME.c: 73:         message->data_length = 1;
  1859  000D68  EE20 F010          	lfsr	2,16
  1860  000D6C  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1861  000D6E  26D9               	addwf	fsr2l,f,c
  1862  000D70  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1863  000D72  22DA               	addwfc	fsr2h,f,c
  1864  000D74  0E01               	movlw	1
  1865  000D76  6EDF               	movwf	indf2,c
  1866                           
  1867                           ;FRAME.c: 77:         message->data[0] = 0xFF;
  1868  000D78  EE20 F008          	lfsr	2,8
  1869  000D7C  5006               	movf	FRAME_AccelerometerStatus@message,w,c
  1870  000D7E  26D9               	addwf	fsr2l,f,c
  1871  000D80  5007               	movf	FRAME_AccelerometerStatus@message+1,w,c
  1872  000D82  22DA               	addwfc	fsr2h,f,c
  1873  000D84  0EFF               	movlw	255
  1874  000D86  6EDF               	movwf	indf2,c
  1875                           
  1876                           ;FRAME.c: 78:     }
  1877  000D88  0012               	return		;funcret
  1878  000D8A                     __end_of_FRAME_AccelerometerStatus:
  1879                           	opt callstack 0
  1880                           
  1881 ;; *************** function _CAN_SendFrame *****************
  1882 ;; Defined at:
  1883 ;;		line 183 in file "CAN.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  message         2   10[COMRAM] PTR struct .
  1886 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;Total ram usage:        5 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    4
  1905 ;; This function calls:
  1906 ;;		_CAN_MoveBuffIntoFrame
  1907 ;; This function is called by:
  1908 ;;		_FRAME_HandleCanFrame
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text16
  1913  0004B0                     __ptext16:
  1914                           	opt callstack 0
  1915  0004B0                     _CAN_SendFrame:
  1916                           	opt callstack 24
  1917                           
  1918                           ;CAN.c: 188:     {;CAN.c: 189:         ECANCON = 0x83;
  1919                           
  1920                           ;incstack = 0
  1921                           ;CAN.c: 183: void CAN_SendFrame(mID * message);CAN.c: 184: {;CAN.c: 187:     for(;;)
  1922  0004B0  0E83               	movlw	131
  1923  0004B2  6E77               	movwf	3959,c	;volatile
  1924                           
  1925                           ;CAN.c: 190:         if(!RXB0CONbits.FILHIT3)
  1926  0004B4  A660               	btfss	3936,3,c	;volatile
  1927  0004B6  D00A               	goto	l177
  1928                           
  1929                           ;CAN.c: 195:         ECANCON = 0x84;
  1930  0004B8  0E84               	movlw	132
  1931  0004BA  6E77               	movwf	3959,c	;volatile
  1932                           
  1933                           ;CAN.c: 196:         if(!RXB0CONbits.FILHIT3)
  1934  0004BC  A660               	btfss	3936,3,c	;volatile
  1935  0004BE  D006               	goto	l177
  1936                           
  1937                           ;CAN.c: 201:         ECANCON = 0x85;
  1938  0004C0  0E85               	movlw	133
  1939  0004C2  6E77               	movwf	3959,c	;volatile
  1940                           
  1941                           ;CAN.c: 202:         if(!RXB0CONbits.FILHIT3)
  1942  0004C4  A660               	btfss	3936,3,c	;volatile
  1943  0004C6  D002               	goto	l177
  1944  0004C8  D7F3               	goto	_CAN_SendFrame
  1945  0004CA                     l178:
  1946  0004CA  00FF               	reset		;# 
  1947  0004CC                     l177:
  1948                           
  1949                           ;CAN.c: 209:     while(COMSTATbits.TXWARN)
  1950  0004CC  B474               	btfsc	3956,2,c	;volatile
  1951  0004CE  D7FD               	goto	l178
  1952                           
  1953                           ;CAN.c: 213:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  1954  0004D0  0E00               	movlw	0
  1955  0004D2  6E3E               	movwf	_DetectorLedRadar+1,c
  1956                           
  1957                           ;CAN.c: 214:     RXB0EIDL = message->id.v[0];
  1958  0004D4  EE20 F004          	lfsr	2,4
  1959  0004D8  500B               	movf	CAN_SendFrame@message,w,c
  1960  0004DA  26D9               	addwf	fsr2l,f,c
  1961  0004DC  500C               	movf	CAN_SendFrame@message+1,w,c
  1962  0004DE  22DA               	addwfc	fsr2h,f,c
  1963  0004E0  50DF               	movf	indf2,w,c
  1964  0004E2  6E64               	movwf	3940,c	;volatile
  1965                           
  1966                           ;CAN.c: 215:     RXB0EIDH = message->id.v[1];
  1967  0004E4  EE20 F005          	lfsr	2,5
  1968  0004E8  500B               	movf	CAN_SendFrame@message,w,c
  1969  0004EA  26D9               	addwf	fsr2l,f,c
  1970  0004EC  500C               	movf	CAN_SendFrame@message+1,w,c
  1971  0004EE  22DA               	addwfc	fsr2h,f,c
  1972  0004F0  50DF               	movf	indf2,w,c
  1973  0004F2  6E63               	movwf	3939,c	;volatile
  1974                           
  1975                           ;CAN.c: 216:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  1976  0004F4  EE20 F006          	lfsr	2,6
  1977  0004F8  500B               	movf	CAN_SendFrame@message,w,c
  1978  0004FA  26D9               	addwf	fsr2l,f,c
  1979  0004FC  500C               	movf	CAN_SendFrame@message+1,w,c
  1980  0004FE  22DA               	addwfc	fsr2h,f,c
  1981  000500  50DF               	movf	indf2,w,c
  1982  000502  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  1983  000504  0E03               	movlw	3
  1984  000506  160D               	andwf	??_CAN_SendFrame,f,c
  1985  000508  EE20 F006          	lfsr	2,6
  1986  00050C  500B               	movf	CAN_SendFrame@message,w,c
  1987  00050E  26D9               	addwf	fsr2l,f,c
  1988  000510  500C               	movf	CAN_SendFrame@message+1,w,c
  1989  000512  22DA               	addwfc	fsr2h,f,c
  1990  000514  50DF               	movf	indf2,w,c
  1991  000516  0BFC               	andlw	252
  1992  000518  0D08               	mullw	8
  1993  00051A  50F3               	movf	prodl,w,c
  1994  00051C  100D               	iorwf	??_CAN_SendFrame,w,c
  1995  00051E  6E62               	movwf	3938,c	;volatile
  1996                           
  1997                           ;CAN.c: 217:     RXB0SIDLbits.EXID = 1;
  1998  000520  8662               	bsf	3938,3,c	;volatile
  1999                           
  2000                           ;CAN.c: 218:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  2001  000522  EE20 F006          	lfsr	2,6
  2002  000526  500B               	movf	CAN_SendFrame@message,w,c
  2003  000528  26D9               	addwf	fsr2l,f,c
  2004  00052A  500C               	movf	CAN_SendFrame@message+1,w,c
  2005  00052C  22DA               	addwfc	fsr2h,f,c
  2006  00052E  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  2007  000532  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  2008  000536  0E05               	movlw	5
  2009  000538  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  2010  00053A                     u965:
  2011  00053A  90D8               	bcf	status,0,c
  2012  00053C  320E               	rrcf	??_CAN_SendFrame+1,f,c
  2013  00053E  320D               	rrcf	??_CAN_SendFrame,f,c
  2014  000540  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  2015  000542  D7FB               	goto	u965
  2016  000544  500D               	movf	??_CAN_SendFrame,w,c
  2017  000546  6E61               	movwf	3937,c	;volatile
  2018                           
  2019                           ;CAN.c: 220:     RXB0DLC = 0;
  2020  000548  0E00               	movlw	0
  2021  00054A  6E65               	movwf	3941,c	;volatile
  2022                           
  2023                           ;CAN.c: 222:     if(message->message_type==0x02)
  2024  00054C  EE20 F001          	lfsr	2,1
  2025  000550  500B               	movf	CAN_SendFrame@message,w,c
  2026  000552  26D9               	addwf	fsr2l,f,c
  2027  000554  500C               	movf	CAN_SendFrame@message+1,w,c
  2028  000556  22DA               	addwfc	fsr2h,f,c
  2029  000558  0E02               	movlw	2
  2030  00055A  18DE               	xorwf	postinc2,w,c
  2031  00055C  A4D8               	btfss	status,2,c
  2032  00055E  D002               	goto	l2229
  2033                           
  2034                           ;CAN.c: 223:     {;CAN.c: 224:         RXB0DLCbits.RXRTR = 1;
  2035  000560  8C65               	bsf	3941,6,c	;volatile
  2036                           
  2037                           ;CAN.c: 225:     }
  2038  000562  D05A               	goto	l2233
  2039  000564                     l2229:
  2040                           
  2041                           ;CAN.c: 227:     {;CAN.c: 228:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  2042  000564  EE20 F010          	lfsr	2,16
  2043  000568  500B               	movf	CAN_SendFrame@message,w,c
  2044  00056A  26D9               	addwf	fsr2l,f,c
  2045  00056C  500C               	movf	CAN_SendFrame@message+1,w,c
  2046  00056E  22DA               	addwfc	fsr2h,f,c
  2047  000570  50DF               	movf	indf2,w,c
  2048  000572  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2049  000574  0E0F               	movlw	15
  2050  000576  160D               	andwf	??_CAN_SendFrame,f,c
  2051  000578  5065               	movf	3941,w,c	;volatile
  2052  00057A  180D               	xorwf	??_CAN_SendFrame,w,c
  2053  00057C  0BFE               	andlw	-2
  2054  00057E  180D               	xorwf	??_CAN_SendFrame,w,c
  2055  000580  6E65               	movwf	3941,c	;volatile
  2056                           
  2057                           ;CAN.c: 229:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  2058  000582  EE20 F010          	lfsr	2,16
  2059  000586  500B               	movf	CAN_SendFrame@message,w,c
  2060  000588  26D9               	addwf	fsr2l,f,c
  2061  00058A  500C               	movf	CAN_SendFrame@message+1,w,c
  2062  00058C  22DA               	addwfc	fsr2h,f,c
  2063  00058E  50DF               	movf	indf2,w,c
  2064  000590  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2065  000592  90D8               	bcf	status,0,c
  2066  000594  320D               	rrcf	??_CAN_SendFrame,f,c
  2067  000596  0E07               	movlw	7
  2068  000598  160D               	andwf	??_CAN_SendFrame,f,c
  2069  00059A  460D               	rlncf	??_CAN_SendFrame,f,c
  2070  00059C  5065               	movf	3941,w,c	;volatile
  2071  00059E  180D               	xorwf	??_CAN_SendFrame,w,c
  2072  0005A0  0BFD               	andlw	-3
  2073  0005A2  180D               	xorwf	??_CAN_SendFrame,w,c
  2074  0005A4  6E65               	movwf	3941,c	;volatile
  2075                           
  2076                           ;CAN.c: 230:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  2077  0005A6  EE20 F010          	lfsr	2,16
  2078  0005AA  500B               	movf	CAN_SendFrame@message,w,c
  2079  0005AC  26D9               	addwf	fsr2l,f,c
  2080  0005AE  500C               	movf	CAN_SendFrame@message+1,w,c
  2081  0005B0  22DA               	addwfc	fsr2h,f,c
  2082  0005B2  50DF               	movf	indf2,w,c
  2083  0005B4  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2084  0005B6  90D8               	bcf	status,0,c
  2085  0005B8  320D               	rrcf	??_CAN_SendFrame,f,c
  2086  0005BA  90D8               	bcf	status,0,c
  2087  0005BC  320D               	rrcf	??_CAN_SendFrame,f,c
  2088  0005BE  0E03               	movlw	3
  2089  0005C0  160D               	andwf	??_CAN_SendFrame,f,c
  2090  0005C2  460D               	rlncf	??_CAN_SendFrame,f,c
  2091  0005C4  460D               	rlncf	??_CAN_SendFrame,f,c
  2092  0005C6  5065               	movf	3941,w,c	;volatile
  2093  0005C8  180D               	xorwf	??_CAN_SendFrame,w,c
  2094  0005CA  0BFB               	andlw	-5
  2095  0005CC  180D               	xorwf	??_CAN_SendFrame,w,c
  2096  0005CE  6E65               	movwf	3941,c	;volatile
  2097                           
  2098                           ;CAN.c: 231:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  2099  0005D0  EE20 F010          	lfsr	2,16
  2100  0005D4  500B               	movf	CAN_SendFrame@message,w,c
  2101  0005D6  26D9               	addwf	fsr2l,f,c
  2102  0005D8  500C               	movf	CAN_SendFrame@message+1,w,c
  2103  0005DA  22DA               	addwfc	fsr2h,f,c
  2104  0005DC  50DF               	movf	indf2,w,c
  2105  0005DE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  2106  0005E0  90D8               	bcf	status,0,c
  2107  0005E2  320D               	rrcf	??_CAN_SendFrame,f,c
  2108  0005E4  90D8               	bcf	status,0,c
  2109  0005E6  320D               	rrcf	??_CAN_SendFrame,f,c
  2110  0005E8  90D8               	bcf	status,0,c
  2111  0005EA  320D               	rrcf	??_CAN_SendFrame,f,c
  2112  0005EC  0E01               	movlw	1
  2113  0005EE  160D               	andwf	??_CAN_SendFrame,f,c
  2114  0005F0  460D               	rlncf	??_CAN_SendFrame,f,c
  2115  0005F2  460D               	rlncf	??_CAN_SendFrame,f,c
  2116  0005F4  460D               	rlncf	??_CAN_SendFrame,f,c
  2117  0005F6  5065               	movf	3941,w,c	;volatile
  2118  0005F8  180D               	xorwf	??_CAN_SendFrame,w,c
  2119  0005FA  0BF7               	andlw	-9
  2120  0005FC  180D               	xorwf	??_CAN_SendFrame,w,c
  2121  0005FE  6E65               	movwf	3941,c	;volatile
  2122                           
  2123                           ;CAN.c: 233:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  2124  000600  0E66               	movlw	102
  2125  000602  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2126  000604  0E0F               	movlw	15
  2127  000606  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2128  000608  0E08               	movlw	8
  2129  00060A  240B               	addwf	CAN_SendFrame@message,w,c
  2130  00060C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2131  00060E  0E00               	movlw	0
  2132  000610  200C               	addwfc	CAN_SendFrame@message+1,w,c
  2133  000612  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2134  000614  ECF6  F006         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2135  000618                     l2233:
  2136                           
  2137                           ;CAN.c: 236:     RXB0CONbits.FILHIT3 = 1;
  2138  000618  8660               	bsf	3936,3,c	;volatile
  2139                           
  2140                           ;CAN.c: 238:     DetectorLedRadar.Flags.ramkaTx = 1;
  2141  00061A  883D               	bsf	_DetectorLedRadar,4,c
  2142  00061C  0012               	return		;funcret
  2143  00061E                     __end_of_CAN_SendFrame:
  2144                           	opt callstack 0
  2145                           
  2146 ;; *************** function _CAN_GenID *****************
  2147 ;; Defined at:
  2148 ;;		line 382 in file "CAN.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  message         2    5[COMRAM] PTR struct .
  2151 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2152 ;;  frameID         1    7[COMRAM] unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2164 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;Total ram usage:        3 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    3
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_FRAME_HandleCanFrame
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text17
  2179  0009E0                     __ptext17:
  2180                           	opt callstack 0
  2181  0009E0                     _CAN_GenID:
  2182                           	opt callstack 25
  2183                           
  2184                           ;CAN.c: 382: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 383: {;CAN.c: 385:     m
      +                          essage->frame_type = 0x03;
  2185                           
  2186                           ;incstack = 0
  2187  0009E0  EE20 F002          	lfsr	2,2
  2188  0009E4  5006               	movf	CAN_GenID@message,w,c
  2189  0009E6  26D9               	addwf	fsr2l,f,c
  2190  0009E8  5007               	movf	CAN_GenID@message+1,w,c
  2191  0009EA  22DA               	addwfc	fsr2h,f,c
  2192  0009EC  0E03               	movlw	3
  2193  0009EE  6EDF               	movwf	indf2,c
  2194                           
  2195                           ;CAN.c: 386:     message->message_type = 0x01;
  2196  0009F0  EE20 F001          	lfsr	2,1
  2197  0009F4  5006               	movf	CAN_GenID@message,w,c
  2198  0009F6  26D9               	addwf	fsr2l,f,c
  2199  0009F8  5007               	movf	CAN_GenID@message+1,w,c
  2200  0009FA  22DA               	addwfc	fsr2h,f,c
  2201  0009FC  0E01               	movlw	1
  2202  0009FE  6EDF               	movwf	indf2,c
  2203                           
  2204                           ;CAN.c: 387:     message->id.w[1] = 0x0025;
  2205  000A00  EE20 F006          	lfsr	2,6
  2206  000A04  5006               	movf	CAN_GenID@message,w,c
  2207  000A06  26D9               	addwf	fsr2l,f,c
  2208  000A08  5007               	movf	CAN_GenID@message+1,w,c
  2209  000A0A  22DA               	addwfc	fsr2h,f,c
  2210  000A0C  0E25               	movlw	37
  2211  000A0E  6EDE               	movwf	postinc2,c
  2212  000A10  0E00               	movlw	0
  2213  000A12  6EDD               	movwf	postdec2,c
  2214                           
  2215                           ;CAN.c: 388:     message->id.w[0] = 0x8006;
  2216  000A14  EE20 F004          	lfsr	2,4
  2217  000A18  5006               	movf	CAN_GenID@message,w,c
  2218  000A1A  26D9               	addwf	fsr2l,f,c
  2219  000A1C  5007               	movf	CAN_GenID@message+1,w,c
  2220  000A1E  22DA               	addwfc	fsr2h,f,c
  2221  000A20  0E06               	movlw	6
  2222  000A22  6EDE               	movwf	postinc2,c
  2223  000A24  0E80               	movlw	128
  2224  000A26  6EDD               	movwf	postdec2,c
  2225                           
  2226                           ;CAN.c: 389:     message->id.v[2] |= 0x01;
  2227  000A28  EE20 F006          	lfsr	2,6
  2228  000A2C  5006               	movf	CAN_GenID@message,w,c
  2229  000A2E  26D9               	addwf	fsr2l,f,c
  2230  000A30  5007               	movf	CAN_GenID@message+1,w,c
  2231  000A32  22DA               	addwfc	fsr2h,f,c
  2232  000A34  0E00               	movlw	0
  2233  000A36  80DB               	bsf	plusw2,0,c
  2234  000A38  0012               	return		;funcret
  2235  000A3A                     __end_of_CAN_GenID:
  2236                           	opt callstack 0
  2237                           
  2238 ;; *************** function _CAN_TakeFrame *****************
  2239 ;; Defined at:
  2240 ;;		line 247 in file "CAN.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  message         2   13[COMRAM] PTR struct .
  2243 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  k               1   18[COMRAM] unsigned char 
  2246 ;;  tempCON         1   17[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      enum E10433
  2249 ;; Registers used:
  2250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;Total ram usage:        6 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    4
  2263 ;; This function calls:
  2264 ;;		_CAN_MoveBuffIntoFrame
  2265 ;;		___awdiv
  2266 ;; This function is called by:
  2267 ;;		_TRM_DataTransmition
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text18
  2272  000060                     __ptext18:
  2273                           	opt callstack 0
  2274  000060                     _CAN_TakeFrame:
  2275                           	opt callstack 25
  2276                           
  2277                           ;CAN.c: 247: BOOL CAN_TakeFrame(mID * message);CAN.c: 248: {;CAN.c: 249:     BYTE k, tem
      +                          pCON;;CAN.c: 251:     k = CANCON&0x0F;
  2278                           
  2279                           ;incstack = 0
  2280  000060  506F               	movf	3951,w,c	;volatile
  2281  000062  0B0F               	andlw	15
  2282  000064  6E13               	movwf	CAN_TakeFrame@k,c
  2283                           
  2284                           ;CAN.c: 253:     ECANCON = 0x90 | k;
  2285  000066  5013               	movf	CAN_TakeFrame@k,w,c
  2286  000068  0990               	iorlw	144
  2287  00006A  6E77               	movwf	3959,c	;volatile
  2288                           
  2289                           ;CAN.c: 256:     switch(k)
  2290  00006C  D018               	goto	l2407
  2291  00006E                     l186:
  2292                           
  2293                           ;CAN.c: 259:             tempCON = RXB0CON;
  2294  00006E  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  2295                           
  2296                           ;CAN.c: 260:             break;
  2297  000072  D035               	goto	l187
  2298  000074                     l188:
  2299                           
  2300                           ;CAN.c: 262:             tempCON = RXB1CON;
  2301  000074  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  2302                           
  2303                           ;CAN.c: 263:             break;
  2304  000078  D032               	goto	l187
  2305  00007A                     l189:
  2306                           
  2307                           ;CAN.c: 265:             tempCON = B0CON;
  2308  00007A  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  2309                           
  2310                           ;CAN.c: 266:             break;
  2311  00007E  D02F               	goto	l187
  2312  000080                     l190:
  2313                           
  2314                           ;CAN.c: 268:             tempCON = B1CON;
  2315  000080  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  2316                           
  2317                           ;CAN.c: 269:             break;
  2318  000084  D02C               	goto	l187
  2319  000086                     l191:
  2320                           
  2321                           ;CAN.c: 271:             tempCON = B2CON;
  2322  000086  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  2323                           
  2324                           ;CAN.c: 272:             break;
  2325  00008A  D029               	goto	l187
  2326  00008C                     l192:
  2327                           
  2328                           ;CAN.c: 274:             tempCON = B3CON;
  2329  00008C  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  2330                           
  2331                           ;CAN.c: 275:             break;
  2332  000090  D026               	goto	l187
  2333  000092                     l193:
  2334                           
  2335                           ;CAN.c: 277:             tempCON = B4CON;
  2336  000092  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  2337                           
  2338                           ;CAN.c: 278:             break;
  2339  000096  D023               	goto	l187
  2340  000098                     l194:
  2341                           
  2342                           ;CAN.c: 280:             tempCON = B5CON;
  2343  000098  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  2344                           
  2345                           ;CAN.c: 281:             break;
  2346  00009C  D020               	goto	l187
  2347  00009E                     l2407:
  2348  00009E  5013               	movf	CAN_TakeFrame@k,w,c
  2349  0000A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2350  0000A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2351                           
  2352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2353                           ; Switch size 1, requested type "simple"
  2354                           ; Number of cases is 1, Range of values is 0 to 0
  2355                           ; switch strategies available:
  2356                           ; Name         Instructions Cycles
  2357                           ; simple_byte            4     3 (average)
  2358                           ;	Chosen strategy is simple_byte
  2359  0000A4  5011               	movf	??_CAN_TakeFrame+1,w,c
  2360  0000A6  0A00               	xorlw	0	; case 0
  2361  0000A8  A4D8               	btfss	status,2,c
  2362  0000AA  D019               	goto	l187
  2363                           
  2364                           ; Switch size 1, requested type "simple"
  2365                           ; Number of cases is 8, Range of values is 0 to 7
  2366                           ; switch strategies available:
  2367                           ; Name         Instructions Cycles
  2368                           ; simple_byte           25    13 (average)
  2369                           ;	Chosen strategy is simple_byte
  2370  0000AC  5010               	movf	??_CAN_TakeFrame,w,c
  2371  0000AE  0A00               	xorlw	0	; case 0
  2372  0000B0  B4D8               	btfsc	status,2,c
  2373  0000B2  D7DD               	goto	l186
  2374  0000B4  0A01               	xorlw	1	; case 1
  2375  0000B6  B4D8               	btfsc	status,2,c
  2376  0000B8  D7DD               	goto	l188
  2377  0000BA  0A03               	xorlw	3	; case 2
  2378  0000BC  B4D8               	btfsc	status,2,c
  2379  0000BE  D7DD               	goto	l189
  2380  0000C0  0A01               	xorlw	1	; case 3
  2381  0000C2  B4D8               	btfsc	status,2,c
  2382  0000C4  D7DD               	goto	l190
  2383  0000C6  0A07               	xorlw	7	; case 4
  2384  0000C8  B4D8               	btfsc	status,2,c
  2385  0000CA  D7DD               	goto	l191
  2386  0000CC  0A01               	xorlw	1	; case 5
  2387  0000CE  B4D8               	btfsc	status,2,c
  2388  0000D0  D7DD               	goto	l192
  2389  0000D2  0A03               	xorlw	3	; case 6
  2390  0000D4  B4D8               	btfsc	status,2,c
  2391  0000D6  D7DD               	goto	l193
  2392  0000D8  0A01               	xorlw	1	; case 7
  2393  0000DA  B4D8               	btfsc	status,2,c
  2394  0000DC  D7DD               	goto	l194
  2395  0000DE                     l187:
  2396                           
  2397                           ;CAN.c: 285:     if((tempCON & 0x80) > 0)
  2398  0000DE  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  2399  0000E0  D0A5               	goto	l2443
  2400                           
  2401                           ;CAN.c: 286:     {;CAN.c: 287:         message->buffer = RXB0CON & 0x1F;
  2402  0000E2  EE20 F003          	lfsr	2,3
  2403  0000E6  500E               	movf	CAN_TakeFrame@message,w,c
  2404  0000E8  26D9               	addwf	fsr2l,f,c
  2405  0000EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  2406  0000EC  22DA               	addwfc	fsr2h,f,c
  2407  0000EE  5060               	movf	3936,w,c	;volatile
  2408  0000F0  0B1F               	andlw	31
  2409  0000F2  6EDF               	movwf	indf2,c
  2410                           
  2411                           ;CAN.c: 288:         message->id.v[0] = RXB0EIDL;
  2412  0000F4  EE20 F004          	lfsr	2,4
  2413  0000F8  500E               	movf	CAN_TakeFrame@message,w,c
  2414  0000FA  26D9               	addwf	fsr2l,f,c
  2415  0000FC  500F               	movf	CAN_TakeFrame@message+1,w,c
  2416  0000FE  22DA               	addwfc	fsr2h,f,c
  2417  000100  CF64 FFDF          	movff	3940,indf2	;volatile
  2418                           
  2419                           ;CAN.c: 289:         message->id.v[1] = RXB0EIDH;
  2420  000104  EE20 F005          	lfsr	2,5
  2421  000108  500E               	movf	CAN_TakeFrame@message,w,c
  2422  00010A  26D9               	addwf	fsr2l,f,c
  2423  00010C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2424  00010E  22DA               	addwfc	fsr2h,f,c
  2425  000110  CF63 FFDF          	movff	3939,indf2	;volatile
  2426                           
  2427                           ;CAN.c: 290:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  2428  000114  EE20 F006          	lfsr	2,6
  2429  000118  500E               	movf	CAN_TakeFrame@message,w,c
  2430  00011A  26D9               	addwf	fsr2l,f,c
  2431  00011C  500F               	movf	CAN_TakeFrame@message+1,w,c
  2432  00011E  22DA               	addwfc	fsr2h,f,c
  2433  000120  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  2434  000124  0E03               	movlw	3
  2435  000126  1610               	andwf	??_CAN_TakeFrame,f,c
  2436  000128  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  2437  00012C  6A07               	clrf	___awdiv@dividend+1,c
  2438  00012E  0E00               	movlw	0
  2439  000130  6E09               	movwf	___awdiv@divisor+1,c
  2440  000132  0E08               	movlw	8
  2441  000134  6E08               	movwf	___awdiv@divisor,c
  2442  000136  EC10  F004         	call	___awdiv	;wreg free
  2443  00013A  5006               	movf	?___awdiv,w,c
  2444  00013C  1010               	iorwf	??_CAN_TakeFrame,w,c
  2445  00013E  6EDF               	movwf	indf2,c
  2446                           
  2447                           ;CAN.c: 291:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  2448  000140  5061               	movf	3937,w,c	;volatile
  2449  000142  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2450  000144  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2451  000146  0E05               	movlw	5
  2452  000148                     u1205:
  2453  000148  90D8               	bcf	status,0,c
  2454  00014A  3610               	rlcf	??_CAN_TakeFrame,f,c
  2455  00014C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  2456  00014E  2EE8               	decfsz	wreg,f,c
  2457  000150  D7FB               	goto	u1205
  2458  000152  EE20 F006          	lfsr	2,6
  2459  000156  500E               	movf	CAN_TakeFrame@message,w,c
  2460  000158  26D9               	addwf	fsr2l,f,c
  2461  00015A  500F               	movf	CAN_TakeFrame@message+1,w,c
  2462  00015C  22DA               	addwfc	fsr2h,f,c
  2463  00015E  5010               	movf	??_CAN_TakeFrame,w,c
  2464  000160  12DE               	iorwf	postinc2,f,c
  2465  000162  5011               	movf	??_CAN_TakeFrame+1,w,c
  2466  000164  12DD               	iorwf	postdec2,f,c
  2467                           
  2468                           ;CAN.c: 292:         message->frame_type=0x03;
  2469  000166  EE20 F002          	lfsr	2,2
  2470  00016A  500E               	movf	CAN_TakeFrame@message,w,c
  2471  00016C  26D9               	addwf	fsr2l,f,c
  2472  00016E  500F               	movf	CAN_TakeFrame@message+1,w,c
  2473  000170  22DA               	addwfc	fsr2h,f,c
  2474  000172  0E03               	movlw	3
  2475  000174  6EDF               	movwf	indf2,c
  2476                           
  2477                           ;CAN.c: 296:         if(RXB0DLCbits.RXRTR == 0)
  2478  000176  BC65               	btfsc	3941,6,c	;volatile
  2479  000178  D068               	goto	l2449
  2480                           
  2481                           ;CAN.c: 297:         {;CAN.c: 298:             message->message_type = 0x01;
  2482  00017A  EE20 F001          	lfsr	2,1
  2483  00017E  500E               	movf	CAN_TakeFrame@message,w,c
  2484  000180  26D9               	addwf	fsr2l,f,c
  2485  000182  500F               	movf	CAN_TakeFrame@message+1,w,c
  2486  000184  22DA               	addwfc	fsr2h,f,c
  2487  000186  0E01               	movlw	1
  2488  000188  6EDF               	movwf	indf2,c
  2489                           
  2490                           ;CAN.c: 299:             message->data_length= RXB0DLC & 0x0F;
  2491  00018A  EE20 F010          	lfsr	2,16
  2492  00018E  500E               	movf	CAN_TakeFrame@message,w,c
  2493  000190  26D9               	addwf	fsr2l,f,c
  2494  000192  500F               	movf	CAN_TakeFrame@message+1,w,c
  2495  000194  22DA               	addwfc	fsr2h,f,c
  2496  000196  5065               	movf	3941,w,c	;volatile
  2497  000198  0B0F               	andlw	15
  2498  00019A  6EDF               	movwf	indf2,c
  2499                           
  2500                           ;CAN.c: 300:             if(message->data_length > 8)
  2501  00019C  EE20 F010          	lfsr	2,16
  2502  0001A0  500E               	movf	CAN_TakeFrame@message,w,c
  2503  0001A2  26D9               	addwf	fsr2l,f,c
  2504  0001A4  500F               	movf	CAN_TakeFrame@message+1,w,c
  2505  0001A6  22DA               	addwfc	fsr2h,f,c
  2506  0001A8  0E08               	movlw	8
  2507  0001AA  64DF               	cpfsgt	indf2,c
  2508  0001AC  D041               	goto	l2447
  2509  0001AE  D01E               	goto	l2441
  2510  0001B0                     l2423:
  2511                           
  2512                           ;CAN.c: 306:                         RXB0CON = 0;
  2513  0001B0  0E00               	movlw	0
  2514  0001B2  6E60               	movwf	3936,c	;volatile
  2515                           
  2516                           ;CAN.c: 307:                         break;
  2517  0001B4  D03B               	goto	l2443
  2518  0001B6                     l2425:
  2519                           
  2520                           ;CAN.c: 309:                         RXB1CON = 0;
  2521  0001B6  0E00               	movlw	0
  2522  0001B8  010F               	movlb	15	; () banked
  2523  0001BA  D00E               	goto	L1
  2524  0001BC                     l2427:
  2525                           
  2526                           ;CAN.c: 312:                         B0CON = 0;
  2527  0001BC  0E00               	movlw	0
  2528  0001BE  010E               	movlb	14	; () banked
  2529  0001C0  6F20               	movwf	32,b	;volatile
  2530                           
  2531                           ;CAN.c: 313:                         break;
  2532  0001C2  D034               	goto	l2443
  2533  0001C4                     l2429:
  2534                           
  2535                           ;CAN.c: 315:                         B1CON = 0;
  2536  0001C4  0E00               	movlw	0
  2537  0001C6  010E               	movlb	14	; () banked
  2538  0001C8  6F30               	movwf	48,b	;volatile
  2539                           
  2540                           ;CAN.c: 316:                         break;
  2541  0001CA  D030               	goto	l2443
  2542  0001CC                     l2431:
  2543                           
  2544                           ;CAN.c: 318:                         B2CON = 0;
  2545  0001CC  0E00               	movlw	0
  2546  0001CE  010E               	movlb	14	; () banked
  2547  0001D0  6F40               	movwf	64,b	;volatile
  2548                           
  2549                           ;CAN.c: 319:                         break;
  2550  0001D2  D02C               	goto	l2443
  2551  0001D4                     l2433:
  2552                           
  2553                           ;CAN.c: 321:                         B3CON = 0;
  2554  0001D4  0E00               	movlw	0
  2555  0001D6  010E               	movlb	14	; () banked
  2556  0001D8                     L1:
  2557  0001D8  6F50               	movwf	80,b	;volatile
  2558                           
  2559                           ;CAN.c: 322:                         break;
  2560  0001DA  D028               	goto	l2443
  2561  0001DC                     l2435:
  2562                           
  2563                           ;CAN.c: 324:                         B4CON = 0;
  2564  0001DC  0E00               	movlw	0
  2565  0001DE  010E               	movlb	14	; () banked
  2566  0001E0  6F60               	movwf	96,b	;volatile
  2567                           
  2568                           ;CAN.c: 325:                         break;
  2569  0001E2  D024               	goto	l2443
  2570  0001E4                     l2437:
  2571                           
  2572                           ;CAN.c: 327:                         B5CON = 0;
  2573  0001E4  0E00               	movlw	0
  2574  0001E6  010E               	movlb	14	; () banked
  2575  0001E8  6F70               	movwf	112,b	;volatile
  2576                           
  2577                           ;CAN.c: 328:                         break;
  2578  0001EA  D020               	goto	l2443
  2579  0001EC                     l2441:
  2580  0001EC  5013               	movf	CAN_TakeFrame@k,w,c
  2581  0001EE  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2582  0001F0  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2583                           
  2584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2585                           ; Switch size 1, requested type "simple"
  2586                           ; Number of cases is 1, Range of values is 0 to 0
  2587                           ; switch strategies available:
  2588                           ; Name         Instructions Cycles
  2589                           ; simple_byte            4     3 (average)
  2590                           ;	Chosen strategy is simple_byte
  2591  0001F2  5011               	movf	??_CAN_TakeFrame+1,w,c
  2592  0001F4  0A00               	xorlw	0	; case 0
  2593  0001F6  A4D8               	btfss	status,2,c
  2594  0001F8  D019               	goto	l2443
  2595                           
  2596                           ; Switch size 1, requested type "simple"
  2597                           ; Number of cases is 8, Range of values is 0 to 7
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte           25    13 (average)
  2601                           ;	Chosen strategy is simple_byte
  2602  0001FA  5010               	movf	??_CAN_TakeFrame,w,c
  2603  0001FC  0A00               	xorlw	0	; case 0
  2604  0001FE  B4D8               	btfsc	status,2,c
  2605  000200  D7D7               	goto	l2423
  2606  000202  0A01               	xorlw	1	; case 1
  2607  000204  B4D8               	btfsc	status,2,c
  2608  000206  D7D7               	goto	l2425
  2609  000208  0A03               	xorlw	3	; case 2
  2610  00020A  B4D8               	btfsc	status,2,c
  2611  00020C  D7D7               	goto	l2427
  2612  00020E  0A01               	xorlw	1	; case 3
  2613  000210  B4D8               	btfsc	status,2,c
  2614  000212  D7D8               	goto	l2429
  2615  000214  0A07               	xorlw	7	; case 4
  2616  000216  B4D8               	btfsc	status,2,c
  2617  000218  D7D9               	goto	l2431
  2618  00021A  0A01               	xorlw	1	; case 5
  2619  00021C  B4D8               	btfsc	status,2,c
  2620  00021E  D7DA               	goto	l2433
  2621  000220  0A03               	xorlw	3	; case 6
  2622  000222  B4D8               	btfsc	status,2,c
  2623  000224  D7DB               	goto	l2435
  2624  000226  0A01               	xorlw	1	; case 7
  2625  000228  B4D8               	btfsc	status,2,c
  2626  00022A  D7DC               	goto	l2437
  2627  00022C                     l2443:
  2628                           
  2629                           ;CAN.c: 330:                 return FALSE;
  2630  00022C  0E00               	movlw	0
  2631  00022E  0012               	return	
  2632  000230                     l2447:
  2633                           
  2634                           ;CAN.c: 332:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  2635  000230  0E08               	movlw	8
  2636  000232  240E               	addwf	CAN_TakeFrame@message,w,c
  2637  000234  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  2638  000236  0E00               	movlw	0
  2639  000238  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  2640  00023A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  2641  00023C  0E66               	movlw	102
  2642  00023E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  2643  000240  0E0F               	movlw	15
  2644  000242  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  2645  000244  ECF6  F006         	call	_CAN_MoveBuffIntoFrame	;wreg free
  2646                           
  2647                           ;CAN.c: 333:         }
  2648  000248  D027               	goto	l2469
  2649  00024A                     l2449:
  2650                           
  2651                           ;CAN.c: 336:         {;CAN.c: 337:             message->message_type=0x02;
  2652  00024A  EE20 F001          	lfsr	2,1
  2653  00024E  500E               	movf	CAN_TakeFrame@message,w,c
  2654  000250  26D9               	addwf	fsr2l,f,c
  2655  000252  500F               	movf	CAN_TakeFrame@message+1,w,c
  2656  000254  22DA               	addwfc	fsr2h,f,c
  2657  000256  0E02               	movlw	2
  2658  000258  6EDF               	movwf	indf2,c
  2659  00025A  D01E               	goto	l2469
  2660  00025C                     l2451:
  2661                           
  2662                           ;CAN.c: 343:                 RXB0CON = 0;
  2663  00025C  0E00               	movlw	0
  2664  00025E  6E60               	movwf	3936,c	;volatile
  2665                           
  2666                           ;CAN.c: 344:                 break;
  2667  000260  D03B               	goto	l2471
  2668  000262                     l2453:
  2669                           
  2670                           ;CAN.c: 346:                 RXB1CON = 0;
  2671  000262  0E00               	movlw	0
  2672  000264  010F               	movlb	15	; () banked
  2673  000266  D00E               	goto	L2
  2674  000268                     l2455:
  2675                           
  2676                           ;CAN.c: 349:                 B0CON = 0;
  2677  000268  0E00               	movlw	0
  2678  00026A  010E               	movlb	14	; () banked
  2679  00026C  6F20               	movwf	32,b	;volatile
  2680                           
  2681                           ;CAN.c: 350:                 break;
  2682  00026E  D034               	goto	l2471
  2683  000270                     l2457:
  2684                           
  2685                           ;CAN.c: 352:                 B1CON = 0;
  2686  000270  0E00               	movlw	0
  2687  000272  010E               	movlb	14	; () banked
  2688  000274  6F30               	movwf	48,b	;volatile
  2689                           
  2690                           ;CAN.c: 353:                 break;
  2691  000276  D030               	goto	l2471
  2692  000278                     l2459:
  2693                           
  2694                           ;CAN.c: 355:                 B2CON = 0;
  2695  000278  0E00               	movlw	0
  2696  00027A  010E               	movlb	14	; () banked
  2697  00027C  6F40               	movwf	64,b	;volatile
  2698                           
  2699                           ;CAN.c: 356:                 break;
  2700  00027E  D02C               	goto	l2471
  2701  000280                     l2461:
  2702                           
  2703                           ;CAN.c: 358:                 B3CON = 0;
  2704  000280  0E00               	movlw	0
  2705  000282  010E               	movlb	14	; () banked
  2706  000284                     L2:
  2707  000284  6F50               	movwf	80,b	;volatile
  2708                           
  2709                           ;CAN.c: 359:                 break;
  2710  000286  D028               	goto	l2471
  2711  000288                     l2463:
  2712                           
  2713                           ;CAN.c: 361:                 B4CON = 0;
  2714  000288  0E00               	movlw	0
  2715  00028A  010E               	movlb	14	; () banked
  2716  00028C  6F60               	movwf	96,b	;volatile
  2717                           
  2718                           ;CAN.c: 362:                 break;
  2719  00028E  D024               	goto	l2471
  2720  000290                     l2465:
  2721                           
  2722                           ;CAN.c: 364:                 B5CON = 0;
  2723  000290  0E00               	movlw	0
  2724  000292  010E               	movlb	14	; () banked
  2725  000294  6F70               	movwf	112,b	;volatile
  2726                           
  2727                           ;CAN.c: 365:                 break;
  2728  000296  D020               	goto	l2471
  2729  000298                     l2469:
  2730  000298  5013               	movf	CAN_TakeFrame@k,w,c
  2731  00029A  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  2732  00029C  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  2733                           
  2734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2735                           ; Switch size 1, requested type "simple"
  2736                           ; Number of cases is 1, Range of values is 0 to 0
  2737                           ; switch strategies available:
  2738                           ; Name         Instructions Cycles
  2739                           ; simple_byte            4     3 (average)
  2740                           ;	Chosen strategy is simple_byte
  2741  00029E  5011               	movf	??_CAN_TakeFrame+1,w,c
  2742  0002A0  0A00               	xorlw	0	; case 0
  2743  0002A2  A4D8               	btfss	status,2,c
  2744  0002A4  D019               	goto	l2471
  2745                           
  2746                           ; Switch size 1, requested type "simple"
  2747                           ; Number of cases is 8, Range of values is 0 to 7
  2748                           ; switch strategies available:
  2749                           ; Name         Instructions Cycles
  2750                           ; simple_byte           25    13 (average)
  2751                           ;	Chosen strategy is simple_byte
  2752  0002A6  5010               	movf	??_CAN_TakeFrame,w,c
  2753  0002A8  0A00               	xorlw	0	; case 0
  2754  0002AA  B4D8               	btfsc	status,2,c
  2755  0002AC  D7D7               	goto	l2451
  2756  0002AE  0A01               	xorlw	1	; case 1
  2757  0002B0  B4D8               	btfsc	status,2,c
  2758  0002B2  D7D7               	goto	l2453
  2759  0002B4  0A03               	xorlw	3	; case 2
  2760  0002B6  B4D8               	btfsc	status,2,c
  2761  0002B8  D7D7               	goto	l2455
  2762  0002BA  0A01               	xorlw	1	; case 3
  2763  0002BC  B4D8               	btfsc	status,2,c
  2764  0002BE  D7D8               	goto	l2457
  2765  0002C0  0A07               	xorlw	7	; case 4
  2766  0002C2  B4D8               	btfsc	status,2,c
  2767  0002C4  D7D9               	goto	l2459
  2768  0002C6  0A01               	xorlw	1	; case 5
  2769  0002C8  B4D8               	btfsc	status,2,c
  2770  0002CA  D7DA               	goto	l2461
  2771  0002CC  0A03               	xorlw	3	; case 6
  2772  0002CE  B4D8               	btfsc	status,2,c
  2773  0002D0  D7DB               	goto	l2463
  2774  0002D2  0A01               	xorlw	1	; case 7
  2775  0002D4  B4D8               	btfsc	status,2,c
  2776  0002D6  D7DC               	goto	l2465
  2777  0002D8                     l2471:
  2778                           
  2779                           ;CAN.c: 367:         return TRUE;
  2780  0002D8  0E01               	movlw	1
  2781  0002DA  0012               	return		;funcret
  2782  0002DC                     __end_of_CAN_TakeFrame:
  2783                           	opt callstack 0
  2784                           
  2785 ;; *************** function ___awdiv *****************
  2786 ;; Defined at:
  2787 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  dividend        2    5[COMRAM] int 
  2790 ;;  divisor         2    7[COMRAM] int 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  quotient        2   11[COMRAM] int 
  2793 ;;  sign            1   10[COMRAM] unsigned char 
  2794 ;;  counter         1    9[COMRAM] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  2    5[COMRAM] int 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;Total ram usage:        8 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    3
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_CAN_TakeFrame
  2815 ;;		_FRAME_HandleCanFrame
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text19
  2820  000820                     __ptext19:
  2821                           	opt callstack 0
  2822  000820                     ___awdiv:
  2823                           	opt callstack 25
  2824                           
  2825                           ;incstack = 0
  2826  000820  0E00               	movlw	0
  2827  000822  6E0B               	movwf	___awdiv@sign,c
  2828  000824  AE09               	btfss	___awdiv@divisor+1,7,c
  2829  000826  D006               	goto	l2327
  2830  000828  6C08               	negf	___awdiv@divisor,c
  2831  00082A  1E09               	comf	___awdiv@divisor+1,f,c
  2832  00082C  B0D8               	btfsc	status,0,c
  2833  00082E  2A09               	incf	___awdiv@divisor+1,f,c
  2834  000830  0E01               	movlw	1
  2835  000832  6E0B               	movwf	___awdiv@sign,c
  2836  000834                     l2327:
  2837  000834  AE07               	btfss	___awdiv@dividend+1,7,c
  2838  000836  D006               	goto	l2333
  2839  000838  6C06               	negf	___awdiv@dividend,c
  2840  00083A  1E07               	comf	___awdiv@dividend+1,f,c
  2841  00083C  B0D8               	btfsc	status,0,c
  2842  00083E  2A07               	incf	___awdiv@dividend+1,f,c
  2843  000840  0E01               	movlw	1
  2844  000842  1A0B               	xorwf	___awdiv@sign,f,c
  2845  000844                     l2333:
  2846  000844  0E00               	movlw	0
  2847  000846  6E0D               	movwf	___awdiv@quotient+1,c
  2848  000848  0E00               	movlw	0
  2849  00084A  6E0C               	movwf	___awdiv@quotient,c
  2850  00084C  5008               	movf	___awdiv@divisor,w,c
  2851  00084E  1009               	iorwf	___awdiv@divisor+1,w,c
  2852  000850  B4D8               	btfsc	status,2,c
  2853  000852  D01C               	goto	l2355
  2854  000854  0E01               	movlw	1
  2855  000856  6E0A               	movwf	___awdiv@counter,c
  2856  000858  D004               	goto	l2341
  2857  00085A                     l2339:
  2858  00085A  90D8               	bcf	status,0,c
  2859  00085C  3608               	rlcf	___awdiv@divisor,f,c
  2860  00085E  3609               	rlcf	___awdiv@divisor+1,f,c
  2861  000860  2A0A               	incf	___awdiv@counter,f,c
  2862  000862                     l2341:
  2863  000862  AE09               	btfss	___awdiv@divisor+1,7,c
  2864  000864  D7FA               	goto	l2339
  2865  000866                     u1110:
  2866  000866  90D8               	bcf	status,0,c
  2867  000868  360C               	rlcf	___awdiv@quotient,f,c
  2868  00086A  360D               	rlcf	___awdiv@quotient+1,f,c
  2869  00086C  5008               	movf	___awdiv@divisor,w,c
  2870  00086E  5C06               	subwf	___awdiv@dividend,w,c
  2871  000870  5009               	movf	___awdiv@divisor+1,w,c
  2872  000872  5807               	subwfb	___awdiv@dividend+1,w,c
  2873  000874  A0D8               	btfss	status,0,c
  2874  000876  D005               	goto	l2351
  2875  000878  5008               	movf	___awdiv@divisor,w,c
  2876  00087A  5E06               	subwf	___awdiv@dividend,f,c
  2877  00087C  5009               	movf	___awdiv@divisor+1,w,c
  2878  00087E  5A07               	subwfb	___awdiv@dividend+1,f,c
  2879  000880  800C               	bsf	___awdiv@quotient,0,c
  2880  000882                     l2351:
  2881  000882  90D8               	bcf	status,0,c
  2882  000884  3209               	rrcf	___awdiv@divisor+1,f,c
  2883  000886  3208               	rrcf	___awdiv@divisor,f,c
  2884  000888  2E0A               	decfsz	___awdiv@counter,f,c
  2885  00088A  D7ED               	goto	u1110
  2886  00088C                     l2355:
  2887  00088C  500B               	movf	___awdiv@sign,w,c
  2888  00088E  B4D8               	btfsc	status,2,c
  2889  000890  D004               	goto	l2359
  2890  000892  6C0C               	negf	___awdiv@quotient,c
  2891  000894  1E0D               	comf	___awdiv@quotient+1,f,c
  2892  000896  B0D8               	btfsc	status,0,c
  2893  000898  2A0D               	incf	___awdiv@quotient+1,f,c
  2894  00089A                     l2359:
  2895  00089A  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  2896  00089E  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  2897  0008A2  0012               	return		;funcret
  2898  0008A4                     __end_of___awdiv:
  2899                           	opt callstack 0
  2900                           
  2901 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  2902 ;; Defined at:
  2903 ;;		line 169 in file "CAN.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  2906 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2907 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  2908 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  i               1    9[COMRAM] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;Total ram usage:        5 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    3
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_CAN_SendFrame
  2931 ;;		_CAN_TakeFrame
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text20
  2936  000DEC                     __ptext20:
  2937                           	opt callstack 0
  2938  000DEC                     _CAN_MoveBuffIntoFrame:
  2939                           	opt callstack 24
  2940                           
  2941                           ;CAN.c: 169: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 170: {;CAN.c
      +                          : 171:     BYTE i;;CAN.c: 172:     for(i=0; i<8; ++i)
  2942                           
  2943                           ;incstack = 0
  2944  000DEC  0E00               	movlw	0
  2945  000DEE  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  2946  000DF0                     l2023:
  2947                           
  2948                           ;CAN.c: 173:     {;CAN.c: 174:         Ram[i]=(*(Buf+i));
  2949  000DF0  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2950  000DF2  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  2951  000DF4  6ED9               	movwf	fsr2l,c
  2952  000DF6  0E00               	movlw	0
  2953  000DF8  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  2954  000DFA  6EDA               	movwf	fsr2h,c
  2955  000DFC  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  2956  000DFE  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  2957  000E00  6EE1               	movwf	fsr1l,c
  2958  000E02  0E00               	movlw	0
  2959  000E04  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  2960  000E06  6EE2               	movwf	fsr1h,c
  2961  000E08  CFDF FFE7          	movff	indf2,indf1
  2962                           
  2963                           ;CAN.c: 175:     }
  2964  000E0C  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  2965  000E0E  0E07               	movlw	7
  2966  000E10  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  2967  000E12  D7EE               	goto	l2023
  2968  000E14  0012               	return	
  2969  000E16                     __end_of_CAN_MoveBuffIntoFrame:
  2970                           	opt callstack 0
  2971                           
  2972 ;; *************** function _TMR1_Update_flag_Set *****************
  2973 ;; Defined at:
  2974 ;;		line 32 in file "TMR1.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  a               2    5[COMRAM] unsigned int 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		None
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    3
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text21
  3003  000F00                     __ptext21:
  3004                           	opt callstack 0
  3005  000F00                     _TMR1_Update_flag_Set:
  3006                           	opt callstack 27
  3007                           
  3008                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  3009                           
  3010                           ;incstack = 0
  3011  000F00  C006  F03B         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  3012  000F04  C007  F03C         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  3013  000F08  0012               	return		;funcret
  3014  000F0A                     __end_of_TMR1_Update_flag_Set:
  3015                           	opt callstack 0
  3016                           
  3017 ;; *************** function _TMR1_Update_flag_Get *****************
  3018 ;; Defined at:
  3019 ;;		line 47 in file "TMR1.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2    5[COMRAM] unsigned int 
  3026 ;; Registers used:
  3027 ;;		None
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;Total ram usage:        2 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    3
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text22
  3048  000F0A                     __ptext22:
  3049                           	opt callstack 0
  3050  000F0A                     _TMR1_Update_flag_Get:
  3051                           	opt callstack 27
  3052                           
  3053                           ;TMR1.c: 49:     return TMR1_Update_flag;
  3054                           
  3055                           ;incstack = 0
  3056  000F0A  C03B  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  3057  000F0E  C03C  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  3058  000F12  0012               	return		;funcret
  3059  000F14                     __end_of_TMR1_Update_flag_Get:
  3060                           	opt callstack 0
  3061                           
  3062 ;; *************** function _LED_Update *****************
  3063 ;; Defined at:
  3064 ;;		line 81 in file "LED.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      unsigned char 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3082 ;;Total ram usage:        0 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    5
  3085 ;; This function calls:
  3086 ;;		_LED_Left
  3087 ;;		_LED_Light_Pos
  3088 ;;		_LED_Right
  3089 ;; This function is called by:
  3090 ;;		_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text23
  3095  000AE8                     __ptext23:
  3096                           	opt callstack 0
  3097  000AE8                     _LED_Update:
  3098                           	opt callstack 25
  3099                           
  3100                           ;LED.c: 83:     static LED_RGA_type Red = RED;;LED.c: 84:     static LED_RGA_type Green 
      +                          = GREEN;;LED.c: 85:     static UINT pos1 = 0b0000000001;;LED.c: 86:     static UINT pos2
      +                           = 0b0000000001;;LED.c: 89:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  3101                           
  3102                           ;incstack = 0
  3103  000AE8  C043  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  3104  000AEC  C044  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  3105  000AF0  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3106  000AF4  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3107  000AF8  5049               	movf	LED_Update@Green,w,c
  3108  000AFA  ECB8  F003         	call	_LED_Light_Pos
  3109                           
  3110                           ;LED.c: 90:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  3111  000AFE  C045  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  3112  000B02  C046  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  3113  000B06  C047  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  3114  000B0A  C048  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  3115  000B0E  0E00               	movlw	0
  3116  000B10  ECB8  F003         	call	_LED_Light_Pos
  3117                           
  3118                           ;LED.c: 91:     pos1 = LED_Right(pos1);
  3119  000B14  C045  F006         	movff	LED_Update@pos1,LED_Right@a
  3120  000B18  C046  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  3121  000B1C  ECEF  F005         	call	_LED_Right	;wreg free
  3122  000B20  C006  F045         	movff	?_LED_Right,LED_Update@pos1
  3123  000B24  C007  F046         	movff	?_LED_Right+1,LED_Update@pos1+1
  3124                           
  3125                           ;LED.c: 92:     pos2 = LED_Left(pos2);
  3126  000B28  C043  F006         	movff	LED_Update@pos2,LED_Left@a
  3127  000B2C  C044  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  3128  000B30  EC38  F006         	call	_LED_Left	;wreg free
  3129  000B34  C006  F043         	movff	?_LED_Left,LED_Update@pos2
  3130  000B38  C007  F044         	movff	?_LED_Left+1,LED_Update@pos2+1
  3131  000B3C  0012               	return		;funcret
  3132  000B3E                     __end_of_LED_Update:
  3133                           	opt callstack 0
  3134                           
  3135 ;; *************** function _LED_Light_Pos *****************
  3136 ;; Defined at:
  3137 ;;		line 164 in file "LED.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  color           1    wreg     enum E10640
  3140 ;;  pos             2   12[COMRAM] unsigned int 
  3141 ;;  fulfillment     2   14[COMRAM] unsigned int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  color           1   16[COMRAM] enum E10640
  3144 ;;  flage           2   21[COMRAM] unsigned int 
  3145 ;;  pos2            2   19[COMRAM] unsigned int 
  3146 ;;  LED_array       2   17[COMRAM] unsigned int 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2   12[COMRAM] unsigned int 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;Total ram usage:       11 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    4
  3163 ;; This function calls:
  3164 ;;		_LED_Control
  3165 ;;		_LED_Left
  3166 ;;		_LED_Right
  3167 ;;		___lwdiv
  3168 ;; This function is called by:
  3169 ;;		_LED_Update
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text24
  3174  000770                     __ptext24:
  3175                           	opt callstack 0
  3176  000770                     _LED_Light_Pos:
  3177                           	opt callstack 25
  3178                           
  3179                           ;incstack = 0
  3180                           ;LED_Light_Pos@color stored from wreg
  3181  000770  6E11               	movwf	LED_Light_Pos@color,c
  3182                           
  3183                           ;LED.c: 164: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 16
      +                          5: {;LED.c: 166:     UINT pos2 =pos;
  3184  000772  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  3185  000776  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  3186                           
  3187                           ;LED.c: 167:     UINT LED_array = 0b0000000000;
  3188  00077A  0E00               	movlw	0
  3189  00077C  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3190  00077E  0E00               	movlw	0
  3191  000780  6E12               	movwf	LED_Light_Pos@LED_array,c
  3192                           
  3193                           ;LED.c: 168:     UINT flage = fulfillment/10;
  3194  000782  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  3195  000786  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  3196  00078A  0E00               	movlw	0
  3197  00078C  6E09               	movwf	___lwdiv@divisor+1,c
  3198  00078E  0E0A               	movlw	10
  3199  000790  6E08               	movwf	___lwdiv@divisor,c
  3200  000792  EC9F  F005         	call	___lwdiv	;wreg free
  3201  000796  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  3202  00079A  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  3203                           
  3204                           ;LED.c: 169:     if(color == RED)
  3205  00079E  5011               	movf	LED_Light_Pos@color,w,c
  3206  0007A0  B4D8               	btfsc	status,2,c
  3207  0007A2  D017               	goto	l2509
  3208  0007A4  D031               	goto	l2517
  3209  0007A6                     l2503:
  3210                           
  3211                           ;LED.c: 172:         {;LED.c: 173:             LED_array = pos2|LED_array;
  3212  0007A6  5012               	movf	LED_Light_Pos@LED_array,w,c
  3213  0007A8  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3214  0007AA  6E12               	movwf	LED_Light_Pos@LED_array,c
  3215  0007AC  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3216  0007AE  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3217  0007B0  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3218                           
  3219                           ;LED.c: 174:             pos2 = LED_Left(pos2);
  3220  0007B2  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  3221  0007B6  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  3222  0007BA  EC38  F006         	call	_LED_Left	;wreg free
  3223  0007BE  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  3224  0007C2  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  3225                           
  3226                           ;LED.c: 175:             flage = flage - 1;
  3227  0007C6  0EFF               	movlw	255
  3228  0007C8  2416               	addwf	LED_Light_Pos@flage,w,c
  3229  0007CA  6E16               	movwf	LED_Light_Pos@flage,c
  3230  0007CC  0EFF               	movlw	255
  3231  0007CE  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3232  0007D0  6E17               	movwf	LED_Light_Pos@flage+1,c
  3233  0007D2                     l2509:
  3234                           
  3235                           ;LED.c: 171:         while(flage>0)
  3236  0007D2  5016               	movf	LED_Light_Pos@flage,w,c
  3237  0007D4  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3238  0007D6  B4D8               	btfsc	status,2,c
  3239  0007D8  D01B               	goto	u1250
  3240  0007DA  D7E5               	goto	l2503
  3241  0007DC                     l2511:
  3242                           
  3243                           ;LED.c: 181:         {;LED.c: 182:             LED_array = pos2|LED_array;
  3244  0007DC  5012               	movf	LED_Light_Pos@LED_array,w,c
  3245  0007DE  1014               	iorwf	LED_Light_Pos@pos2,w,c
  3246  0007E0  6E12               	movwf	LED_Light_Pos@LED_array,c
  3247  0007E2  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  3248  0007E4  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  3249  0007E6  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  3250                           
  3251                           ;LED.c: 183:             pos2 = LED_Right(pos2);
  3252  0007E8  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  3253  0007EC  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  3254  0007F0  ECEF  F005         	call	_LED_Right	;wreg free
  3255  0007F4  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  3256  0007F8  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  3257                           
  3258                           ;LED.c: 184:             flage = flage - 1;
  3259  0007FC  0EFF               	movlw	255
  3260  0007FE  2416               	addwf	LED_Light_Pos@flage,w,c
  3261  000800  6E16               	movwf	LED_Light_Pos@flage,c
  3262  000802  0EFF               	movlw	255
  3263  000804  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  3264  000806  6E17               	movwf	LED_Light_Pos@flage+1,c
  3265  000808                     l2517:
  3266                           
  3267                           ;LED.c: 180:         while(flage>0)
  3268  000808  5016               	movf	LED_Light_Pos@flage,w,c
  3269  00080A  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  3270  00080C  A4D8               	btfss	status,2,c
  3271  00080E  D7E6               	goto	l2511
  3272  000810                     u1250:
  3273                           
  3274                           ;LED.c: 187:     LED_Control(color, LED_array);
  3275  000810  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  3276  000814  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  3277  000818  5011               	movf	LED_Light_Pos@color,w,c
  3278  00081A  EC0F  F003         	call	_LED_Control
  3279  00081E  0012               	return		;funcret
  3280  000820                     __end_of_LED_Light_Pos:
  3281                           	opt callstack 0
  3282                           
  3283 ;; *************** function ___lwdiv *****************
  3284 ;; Defined at:
  3285 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  dividend        2    5[COMRAM] unsigned int 
  3288 ;;  divisor         2    7[COMRAM] unsigned int 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  quotient        2    9[COMRAM] unsigned int 
  3291 ;;  counter         1   11[COMRAM] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  2    5[COMRAM] unsigned int 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3304 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3305 ;;Total ram usage:        7 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    3
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_LED_Light_Pos
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text25
  3316  000B3E                     __ptext25:
  3317                           	opt callstack 0
  3318  000B3E                     ___lwdiv:
  3319                           	opt callstack 25
  3320                           
  3321                           ;incstack = 0
  3322  000B3E  0E00               	movlw	0
  3323  000B40  6E0B               	movwf	___lwdiv@quotient+1,c
  3324  000B42  0E00               	movlw	0
  3325  000B44  6E0A               	movwf	___lwdiv@quotient,c
  3326  000B46  5008               	movf	___lwdiv@divisor,w,c
  3327  000B48  1009               	iorwf	___lwdiv@divisor+1,w,c
  3328  000B4A  B4D8               	btfsc	status,2,c
  3329  000B4C  D01C               	goto	l1065
  3330  000B4E  0E01               	movlw	1
  3331  000B50  6E0C               	movwf	___lwdiv@counter,c
  3332  000B52  D004               	goto	l2371
  3333  000B54                     l2369:
  3334  000B54  90D8               	bcf	status,0,c
  3335  000B56  3608               	rlcf	___lwdiv@divisor,f,c
  3336  000B58  3609               	rlcf	___lwdiv@divisor+1,f,c
  3337  000B5A  2A0C               	incf	___lwdiv@counter,f,c
  3338  000B5C                     l2371:
  3339  000B5C  AE09               	btfss	___lwdiv@divisor+1,7,c
  3340  000B5E  D7FA               	goto	l2369
  3341  000B60                     u1150:
  3342  000B60  90D8               	bcf	status,0,c
  3343  000B62  360A               	rlcf	___lwdiv@quotient,f,c
  3344  000B64  360B               	rlcf	___lwdiv@quotient+1,f,c
  3345  000B66  5008               	movf	___lwdiv@divisor,w,c
  3346  000B68  5C06               	subwf	___lwdiv@dividend,w,c
  3347  000B6A  5009               	movf	___lwdiv@divisor+1,w,c
  3348  000B6C  5807               	subwfb	___lwdiv@dividend+1,w,c
  3349  000B6E  A0D8               	btfss	status,0,c
  3350  000B70  D005               	goto	l2381
  3351  000B72  5008               	movf	___lwdiv@divisor,w,c
  3352  000B74  5E06               	subwf	___lwdiv@dividend,f,c
  3353  000B76  5009               	movf	___lwdiv@divisor+1,w,c
  3354  000B78  5A07               	subwfb	___lwdiv@dividend+1,f,c
  3355  000B7A  800A               	bsf	___lwdiv@quotient,0,c
  3356  000B7C                     l2381:
  3357  000B7C  90D8               	bcf	status,0,c
  3358  000B7E  3209               	rrcf	___lwdiv@divisor+1,f,c
  3359  000B80  3208               	rrcf	___lwdiv@divisor,f,c
  3360  000B82  2E0C               	decfsz	___lwdiv@counter,f,c
  3361  000B84  D7ED               	goto	u1150
  3362  000B86                     l1065:
  3363  000B86  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  3364  000B8A  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3365  000B8E  0012               	return		;funcret
  3366  000B90                     __end_of___lwdiv:
  3367                           	opt callstack 0
  3368                           
  3369 ;; *************** function _LED_Right *****************
  3370 ;; Defined at:
  3371 ;;		line 108 in file "LED.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  a               2    5[COMRAM] unsigned int 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  b               2    9[COMRAM] unsigned int 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  2    5[COMRAM] unsigned int 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;Total ram usage:        6 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    3
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_LED_Update
  3396 ;;		_LED_Light_Pos
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text26
  3401  000BDE                     __ptext26:
  3402                           	opt callstack 0
  3403  000BDE                     _LED_Right:
  3404                           	opt callstack 26
  3405                           
  3406                           ;LED.c: 108: UINT LED_Right(UINT a);LED.c: 109: {;LED.c: 110:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  3407                           
  3408                           ;incstack = 0
  3409  000BDE  A006               	btfss	LED_Right@a,0,c
  3410  000BE0  D018               	goto	l2253
  3411                           
  3412                           ;LED.c: 111:     {;LED.c: 112:         UINT b = a & 0b1111111110;
  3413  000BE2  0EFE               	movlw	254
  3414  000BE4  1406               	andwf	LED_Right@a,w,c
  3415  000BE6  6E0A               	movwf	LED_Right@b,c
  3416  000BE8  0E03               	movlw	3
  3417  000BEA  1407               	andwf	LED_Right@a+1,w,c
  3418  000BEC  6E0B               	movwf	LED_Right@b+1,c
  3419                           
  3420                           ;LED.c: 113:         b = b >> 1;
  3421  000BEE  90D8               	bcf	status,0,c
  3422  000BF0  300B               	rrcf	LED_Right@b+1,w,c
  3423  000BF2  6E08               	movwf	??_LED_Right& (0+255),c
  3424  000BF4  300A               	rrcf	LED_Right@b,w,c
  3425  000BF6  6E0A               	movwf	LED_Right@b,c
  3426  000BF8  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  3427                           
  3428                           ;LED.c: 114:         b = b | 0b1000000000;
  3429  000BFC  0E00               	movlw	0
  3430  000BFE  100A               	iorwf	LED_Right@b,w,c
  3431  000C00  6E0A               	movwf	LED_Right@b,c
  3432  000C02  0E02               	movlw	2
  3433  000C04  100B               	iorwf	LED_Right@b+1,w,c
  3434  000C06  6E0B               	movwf	LED_Right@b+1,c
  3435                           
  3436                           ;LED.c: 115:         return b;
  3437  000C08  C00A  F006         	movff	LED_Right@b,?_LED_Right
  3438  000C0C  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  3439  000C10  0012               	return	
  3440  000C12                     l2253:
  3441                           
  3442                           ;LED.c: 118:     {;LED.c: 119:         a =a >> 1;
  3443  000C12  90D8               	bcf	status,0,c
  3444  000C14  3007               	rrcf	LED_Right@a+1,w,c
  3445  000C16  6E08               	movwf	??_LED_Right& (0+255),c
  3446  000C18  3006               	rrcf	LED_Right@a,w,c
  3447  000C1A  6E06               	movwf	LED_Right@a,c
  3448  000C1C  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  3449                           
  3450                           ;LED.c: 120:         return a;
  3451  000C20  C006  F006         	movff	LED_Right@a,?_LED_Right
  3452  000C24  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  3453  000C28  0012               	return		;funcret
  3454  000C2A                     __end_of_LED_Right:
  3455                           	opt callstack 0
  3456                           
  3457 ;; *************** function _LED_Left *****************
  3458 ;; Defined at:
  3459 ;;		line 135 in file "LED.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  a               2    5[COMRAM] unsigned int 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  b               2    7[COMRAM] unsigned int 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  2    5[COMRAM] unsigned int 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;Total ram usage:        4 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    3
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_LED_Update
  3484 ;;		_LED_Light_Pos
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text27
  3489  000C70                     __ptext27:
  3490                           	opt callstack 0
  3491  000C70                     _LED_Left:
  3492                           	opt callstack 25
  3493                           
  3494                           ;LED.c: 135: UINT LED_Left(UINT a);LED.c: 136: {;LED.c: 137:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  3495                           
  3496                           ;incstack = 0
  3497  000C70  A207               	btfss	LED_Left@a+1,1,c
  3498  000C72  D015               	goto	l2269
  3499                           
  3500                           ;LED.c: 138:     {;LED.c: 139:         UINT b = a & 0b0111111111;
  3501  000C74  0EFF               	movlw	255
  3502  000C76  1406               	andwf	LED_Left@a,w,c
  3503  000C78  6E08               	movwf	LED_Left@b,c
  3504  000C7A  0E01               	movlw	1
  3505  000C7C  1407               	andwf	LED_Left@a+1,w,c
  3506  000C7E  6E09               	movwf	LED_Left@b+1,c
  3507                           
  3508                           ;LED.c: 140:         b = b << 1;
  3509  000C80  90D8               	bcf	status,0,c
  3510  000C82  3408               	rlcf	LED_Left@b,w,c
  3511  000C84  6E08               	movwf	LED_Left@b,c
  3512  000C86  3409               	rlcf	LED_Left@b+1,w,c
  3513  000C88  6E09               	movwf	LED_Left@b+1,c
  3514                           
  3515                           ;LED.c: 141:         b = b | 0b0000000001;
  3516  000C8A  0E01               	movlw	1
  3517  000C8C  1008               	iorwf	LED_Left@b,w,c
  3518  000C8E  6E08               	movwf	LED_Left@b,c
  3519  000C90  5009               	movf	LED_Left@b+1,w,c
  3520  000C92  6E09               	movwf	LED_Left@b+1,c
  3521                           
  3522                           ;LED.c: 142:         return b;
  3523  000C94  C008  F006         	movff	LED_Left@b,?_LED_Left
  3524  000C98  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  3525  000C9C  0012               	return	
  3526  000C9E                     l2269:
  3527                           
  3528                           ;LED.c: 145:     {;LED.c: 146:         a = a << 1;
  3529  000C9E  90D8               	bcf	status,0,c
  3530  000CA0  3406               	rlcf	LED_Left@a,w,c
  3531  000CA2  6E06               	movwf	LED_Left@a,c
  3532  000CA4  3407               	rlcf	LED_Left@a+1,w,c
  3533  000CA6  6E07               	movwf	LED_Left@a+1,c
  3534                           
  3535                           ;LED.c: 147:         return a;
  3536  000CA8  C006  F006         	movff	LED_Left@a,?_LED_Left
  3537  000CAC  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  3538  000CB0  0012               	return		;funcret
  3539  000CB2                     __end_of_LED_Left:
  3540                           	opt callstack 0
  3541                           
  3542 ;; *************** function _INI_All *****************
  3543 ;; Defined at:
  3544 ;;		line 52 in file "INI.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    5
  3565 ;; This function calls:
  3566 ;;		_CAN_Setup
  3567 ;;		_INI_GlobalInterrupt
  3568 ;;		_INI_LED_Start
  3569 ;;		_INI_OUTPUT
  3570 ;;		_INI_Timer
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text28
  3577  000EC0                     __ptext28:
  3578                           	opt callstack 0
  3579  000EC0                     _INI_All:
  3580                           	opt callstack 25
  3581                           
  3582                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  3583                           
  3584                           ;incstack = 0
  3585  000EC0  80D1               	bsf	4049,0,c	;volatile
  3586  000EC2  0004               	clrwdt		;# 
  3587                           
  3588                           ;INI.c: 64:     INI_OUTPUT();
  3589  000EC4  EC51  F007         	call	_INI_OUTPUT	;wreg free
  3590                           
  3591                           ;INI.c: 66:     CAN_Setup();
  3592  000EC8  ECC2  F004         	call	_CAN_Setup	;wreg free
  3593                           
  3594                           ;INI.c: 67:     INI_GlobalInterrupt();
  3595  000ECC  EC79  F007         	call	_INI_GlobalInterrupt	;wreg free
  3596                           
  3597                           ;INI.c: 69:     INI_Timer();
  3598  000ED0  EC6D  F007         	call	_INI_Timer	;wreg free
  3599                           
  3600                           ;INI.c: 71:     INI_LED_Start();
  3601  000ED4  ECC5  F006         	call	_INI_LED_Start	;wreg free
  3602  000ED8  0012               	return		;funcret
  3603  000EDA                     __end_of_INI_All:
  3604                           	opt callstack 0
  3605                           
  3606 ;; *************** function _INI_Timer *****************
  3607 ;; Defined at:
  3608 ;;		line 92 in file "TMR1.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      unsigned char 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    3
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_INI_All
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text29
  3637  000EDA                     __ptext29:
  3638                           	opt callstack 0
  3639  000EDA                     _INI_Timer:
  3640                           	opt callstack 26
  3641                           
  3642                           ;TMR1.c: 96:     IRCF2 = 1;
  3643                           
  3644                           ;incstack = 0
  3645  000EDA  8CD3               	bsf	4051,6,c	;volatile
  3646                           
  3647                           ;TMR1.c: 97:     IRCF1 = 1;
  3648  000EDC  8AD3               	bsf	4051,5,c	;volatile
  3649                           
  3650                           ;TMR1.c: 98:     IRCF0 = 1;
  3651  000EDE  88D3               	bsf	4051,4,c	;volatile
  3652                           
  3653                           ;TMR1.c: 99:     T1CON = 0b00111101;
  3654  000EE0  0E3D               	movlw	61
  3655  000EE2  6ECD               	movwf	4045,c	;volatile
  3656                           
  3657                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  3658  000EE4  0E9E               	movlw	158
  3659  000EE6  6ECF               	movwf	4047,c	;volatile
  3660                           
  3661                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  3662  000EE8  0E57               	movlw	87
  3663  000EEA  6ECE               	movwf	4046,c	;volatile
  3664                           
  3665                           ;TMR1.c: 102:     TMR1IE=1;
  3666  000EEC  809D               	bsf	3997,0,c	;volatile
  3667                           
  3668                           ;TMR1.c: 103:     TMR1ON = 1;
  3669  000EEE  80CD               	bsf	4045,0,c	;volatile
  3670  000EF0  0012               	return		;funcret
  3671  000EF2                     __end_of_INI_Timer:
  3672                           	opt callstack 0
  3673                           
  3674 ;; *************** function _INI_OUTPUT *****************
  3675 ;; Defined at:
  3676 ;;		line 27 in file "INI.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    3
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_INI_All
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text30
  3705  000EA2                     __ptext30:
  3706                           	opt callstack 0
  3707  000EA2                     _INI_OUTPUT:
  3708                           	opt callstack 26
  3709                           
  3710                           ;INI.c: 31:     LATA = 0;
  3711                           
  3712                           ;incstack = 0
  3713  000EA2  0E00               	movlw	0
  3714  000EA4  6E89               	movwf	3977,c	;volatile
  3715                           
  3716                           ;INI.c: 32:     LATB = 0;
  3717  000EA6  0E00               	movlw	0
  3718  000EA8  6E8A               	movwf	3978,c	;volatile
  3719                           
  3720                           ;INI.c: 33:     LATC = 0;
  3721  000EAA  0E00               	movlw	0
  3722  000EAC  6E8B               	movwf	3979,c	;volatile
  3723                           
  3724                           ;INI.c: 34:     TRISA = 0x0C;
  3725  000EAE  0E0C               	movlw	12
  3726  000EB0  6E92               	movwf	3986,c	;volatile
  3727                           
  3728                           ;INI.c: 35:     TRISB = 0b10001000;
  3729  000EB2  0E88               	movlw	136
  3730  000EB4  6E93               	movwf	3987,c	;volatile
  3731                           
  3732                           ;INI.c: 36:     TRISC = 0xBF;
  3733  000EB6  0EBF               	movlw	191
  3734  000EB8  6E94               	movwf	3988,c	;volatile
  3735                           
  3736                           ;INI.c: 37:     RCONbits.IPEN = 1;
  3737  000EBA  8ED0               	bsf	4048,7,c	;volatile
  3738                           
  3739                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  3740  000EBC  863D               	bsf	_DetectorLedRadar,3,c
  3741  000EBE  0012               	return		;funcret
  3742  000EC0                     __end_of_INI_OUTPUT:
  3743                           	opt callstack 0
  3744                           
  3745 ;; *************** function _INI_LED_Start *****************
  3746 ;; Defined at:
  3747 ;;		line 199 in file "LED.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    4
  3768 ;; This function calls:
  3769 ;;		_LED_Control
  3770 ;; This function is called by:
  3771 ;;		_INI_All
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text31
  3776  000D8A                     __ptext31:
  3777                           	opt callstack 0
  3778  000D8A                     _INI_LED_Start:
  3779                           	opt callstack 25
  3780                           
  3781                           ;LED.c: 201:     TRISA = TRISA & 0b00000001;
  3782                           
  3783                           ;incstack = 0
  3784  000D8A  5092               	movf	3986,w,c	;volatile
  3785  000D8C  0B01               	andlw	1
  3786  000D8E  6E92               	movwf	3986,c	;volatile
  3787                           
  3788                           ;LED.c: 202:     TRISB = TRISB & 0b11111100;
  3789  000D90  5093               	movf	3987,w,c	;volatile
  3790  000D92  0BFC               	andlw	252
  3791  000D94  6E93               	movwf	3987,c	;volatile
  3792                           
  3793                           ;LED.c: 203:     TRISE = TRISE & 0b11111000;
  3794  000D96  5096               	movf	3990,w,c	;volatile
  3795  000D98  0BF8               	andlw	248
  3796  000D9A  6E96               	movwf	3990,c	;volatile
  3797                           
  3798                           ;LED.c: 204:     TRISD = TRISD & 0b00000000;
  3799  000D9C  0E00               	movlw	0
  3800  000D9E  6E95               	movwf	3989,c	;volatile
  3801                           
  3802                           ;LED.c: 205:     LED_Control(RED,0b0000000000);
  3803  000DA0  0E00               	movlw	0
  3804  000DA2  6E07               	movwf	LED_Control@diode+1,c
  3805  000DA4  0E00               	movlw	0
  3806  000DA6  6E06               	movwf	LED_Control@diode,c
  3807  000DA8  0E00               	movlw	0
  3808  000DAA  EC0F  F003         	call	_LED_Control
  3809                           
  3810                           ;LED.c: 206:     LED_Control(GREEN,0b0000000000);
  3811  000DAE  0E00               	movlw	0
  3812  000DB0  6E07               	movwf	LED_Control@diode+1,c
  3813  000DB2  0E00               	movlw	0
  3814  000DB4  6E06               	movwf	LED_Control@diode,c
  3815  000DB6  0E01               	movlw	1
  3816  000DB8  EC0F  F003         	call	_LED_Control
  3817  000DBC  0012               	return		;funcret
  3818  000DBE                     __end_of_INI_LED_Start:
  3819                           	opt callstack 0
  3820                           
  3821 ;; *************** function _LED_Control *****************
  3822 ;; Defined at:
  3823 ;;		line 224 in file "LED.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  color           1    wreg     enum E10640
  3826 ;;  diode           2    5[COMRAM] unsigned int 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  color           1    9[COMRAM] enum E10640
  3829 ;;  cos             2    0        unsigned int 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      unsigned char 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3842 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;Total ram usage:        5 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    3
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_LED_Error
  3850 ;;		_LED_Light_Pos
  3851 ;;		_INI_LED_Start
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text32
  3856  00061E                     __ptext32:
  3857                           	opt callstack 0
  3858  00061E                     _LED_Control:
  3859                           	opt callstack 24
  3860                           
  3861                           ;incstack = 0
  3862                           ;LED_Control@color stored from wreg
  3863  00061E  6E0A               	movwf	LED_Control@color,c
  3864                           
  3865                           ;LED.c: 227:     if(color == RED)
  3866  000620  500A               	movf	LED_Control@color,w,c
  3867  000622  A4D8               	btfss	status,2,c
  3868  000624  D050               	goto	l296
  3869                           
  3870                           ;LED.c: 228:     {;LED.c: 230:         if((diode & 0b0000000001)== 0b0000000001)
  3871  000626  A006               	btfss	LED_Control@diode,0,c
  3872  000628  D003               	goto	l2037
  3873                           
  3874                           ;LED.c: 231:         {;LED.c: 232:             LATD = LATD | ~0b11101111;
  3875  00062A  508C               	movf	3980,w,c	;volatile
  3876  00062C  0910               	iorlw	16
  3877  00062E  D002               	goto	L3
  3878  000630                     l2037:
  3879                           
  3880                           ;LED.c: 235:         {;LED.c: 236:             LATD = LATD &0b11101111;
  3881  000630  508C               	movf	3980,w,c	;volatile
  3882  000632  0BEF               	andlw	239
  3883  000634                     L3:
  3884  000634  6E8C               	movwf	3980,c	;volatile
  3885                           
  3886                           ;LED.c: 239:         if((diode & 0b0000000010) == 0b0000000010)
  3887  000636  A206               	btfss	LED_Control@diode,1,c
  3888  000638  D003               	goto	l2043
  3889                           
  3890                           ;LED.c: 240:         {;LED.c: 241:             LATD = LATD | ~0b10111111;
  3891  00063A  508C               	movf	3980,w,c	;volatile
  3892  00063C  0940               	iorlw	64
  3893  00063E  D002               	goto	L4
  3894  000640                     l2043:
  3895                           
  3896                           ;LED.c: 244:         {;LED.c: 245:             LATD = LATD & 0b10111111;
  3897  000640  508C               	movf	3980,w,c	;volatile
  3898  000642  0BBF               	andlw	191
  3899  000644                     L4:
  3900  000644  6E8C               	movwf	3980,c	;volatile
  3901                           
  3902                           ;LED.c: 248:         if((diode & 0b0000000100) == 0b0000000100)
  3903  000646  A406               	btfss	LED_Control@diode,2,c
  3904  000648  D003               	goto	l2049
  3905                           
  3906                           ;LED.c: 249:         {;LED.c: 250:             LATB = LATB | ~0b11111110;
  3907  00064A  508A               	movf	3978,w,c	;volatile
  3908  00064C  0901               	iorlw	1
  3909  00064E  D002               	goto	L5
  3910  000650                     l2049:
  3911                           
  3912                           ;LED.c: 253:         {;LED.c: 254:             LATB = LATB & 0b11111110;
  3913  000650  508A               	movf	3978,w,c	;volatile
  3914  000652  0BFE               	andlw	254
  3915  000654                     L5:
  3916  000654  6E8A               	movwf	3978,c	;volatile
  3917                           
  3918                           ;LED.c: 258:         if((diode & 0b0000001000) == 0b0000001000)
  3919  000656  A606               	btfss	LED_Control@diode,3,c
  3920  000658  D003               	goto	l2055
  3921                           
  3922                           ;LED.c: 259:         {;LED.c: 260:             LATA = LATA | ~0b11111101;
  3923  00065A  5089               	movf	3977,w,c	;volatile
  3924  00065C  0902               	iorlw	2
  3925  00065E  D002               	goto	L6
  3926  000660                     l2055:
  3927                           
  3928                           ;LED.c: 263:         {;LED.c: 264:             LATA = LATA & 0b11111101;
  3929  000660  5089               	movf	3977,w,c	;volatile
  3930  000662  0BFD               	andlw	253
  3931  000664                     L6:
  3932  000664  6E89               	movwf	3977,c	;volatile
  3933                           
  3934                           ;LED.c: 268:         if((diode & 0b0000010000) == 0b0000010000)
  3935  000666  A806               	btfss	LED_Control@diode,4,c
  3936  000668  D003               	goto	l2061
  3937                           
  3938                           ;LED.c: 269:         {;LED.c: 270:             LATA = LATA | ~0b11110111;
  3939  00066A  5089               	movf	3977,w,c	;volatile
  3940  00066C  0908               	iorlw	8
  3941  00066E  D002               	goto	L7
  3942  000670                     l2061:
  3943                           
  3944                           ;LED.c: 273:         {;LED.c: 274:             LATA = LATA & 0b11110111;
  3945  000670  5089               	movf	3977,w,c	;volatile
  3946  000672  0BF7               	andlw	247
  3947  000674                     L7:
  3948  000674  6E89               	movwf	3977,c	;volatile
  3949                           
  3950                           ;LED.c: 278:         if((diode & 0b0000100000) == 0b0000100000)
  3951  000676  AA06               	btfss	LED_Control@diode,5,c
  3952  000678  D003               	goto	l2067
  3953                           
  3954                           ;LED.c: 279:         {;LED.c: 280:             LATA = LATA | ~0b11011111;
  3955  00067A  5089               	movf	3977,w,c	;volatile
  3956  00067C  0920               	iorlw	32
  3957  00067E  D002               	goto	L8
  3958  000680                     l2067:
  3959                           
  3960                           ;LED.c: 283:         {;LED.c: 284:             LATA = LATA & 0b11011111;
  3961  000680  5089               	movf	3977,w,c	;volatile
  3962  000682  0BDF               	andlw	223
  3963  000684                     L8:
  3964  000684  6E89               	movwf	3977,c	;volatile
  3965                           
  3966                           ;LED.c: 287:         if((diode & 0b0001000000) == 0b0001000000)
  3967  000686  AC06               	btfss	LED_Control@diode,6,c
  3968  000688  D003               	goto	l2073
  3969                           
  3970                           ;LED.c: 288:         {;LED.c: 289:             LATE = LATE | ~0b11111101;
  3971  00068A  508D               	movf	3981,w,c	;volatile
  3972  00068C  0902               	iorlw	2
  3973  00068E  D002               	goto	L9
  3974  000690                     l2073:
  3975                           
  3976                           ;LED.c: 292:         {;LED.c: 293:             LATE = LATE & 0b11111101;
  3977  000690  508D               	movf	3981,w,c	;volatile
  3978  000692  0BFD               	andlw	253
  3979  000694                     L9:
  3980  000694  6E8D               	movwf	3981,c	;volatile
  3981                           
  3982                           ;LED.c: 296:         if((diode & 0b0010000000) == 0b0010000000)
  3983  000696  AE06               	btfss	LED_Control@diode,7,c
  3984  000698  D003               	goto	l2079
  3985                           
  3986                           ;LED.c: 297:         {;LED.c: 298:             LATA = LATA | ~0b01111111;
  3987  00069A  5089               	movf	3977,w,c	;volatile
  3988  00069C  0980               	iorlw	128
  3989  00069E  D002               	goto	L10
  3990  0006A0                     l2079:
  3991                           
  3992                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA & 0b01111111;
  3993  0006A0  5089               	movf	3977,w,c	;volatile
  3994  0006A2  0B7F               	andlw	127
  3995  0006A4                     L10:
  3996  0006A4  6E89               	movwf	3977,c	;volatile
  3997                           
  3998                           ;LED.c: 306:         if((diode & 0b0100000000) == 0b0100000000)
  3999  0006A6  A007               	btfss	LED_Control@diode+1,0,c
  4000  0006A8  D003               	goto	l2085
  4001                           
  4002                           ;LED.c: 307:         {;LED.c: 308:             LATD = LATD | ~0b11111110;
  4003  0006AA  508C               	movf	3980,w,c	;volatile
  4004  0006AC  0901               	iorlw	1
  4005  0006AE  D002               	goto	L11
  4006  0006B0                     l2085:
  4007                           
  4008                           ;LED.c: 311:         {;LED.c: 312:             LATD = LATD & 0b11111110;
  4009  0006B0  508C               	movf	3980,w,c	;volatile
  4010  0006B2  0BFE               	andlw	254
  4011  0006B4                     L11:
  4012  0006B4  6E8C               	movwf	3980,c	;volatile
  4013                           
  4014                           ;LED.c: 315:         if((diode & 0b1000000000) == 0b1000000000)
  4015  0006B6  A207               	btfss	LED_Control@diode+1,1,c
  4016  0006B8  D003               	goto	l2091
  4017                           
  4018                           ;LED.c: 316:         {;LED.c: 317:             LATD = LATD | ~0b11111011;
  4019  0006BA  508C               	movf	3980,w,c	;volatile
  4020  0006BC  0904               	iorlw	4
  4021  0006BE  D002               	goto	L12
  4022  0006C0                     l2091:
  4023                           
  4024                           ;LED.c: 320:         {;LED.c: 321:             LATD = LATD & 0b11111011;
  4025  0006C0  508C               	movf	3980,w,c	;volatile
  4026  0006C2  0BFB               	andlw	251
  4027  0006C4                     L12:
  4028  0006C4  6E8C               	movwf	3980,c	;volatile
  4029  0006C6                     l296:
  4030                           
  4031                           ;LED.c: 326:     if(color == GREEN)
  4032  0006C6  040A               	decf	LED_Control@color,w,c
  4033  0006C8  A4D8               	btfss	status,2,c
  4034  0006CA  0012               	return	
  4035                           
  4036                           ;LED.c: 327:     {;LED.c: 329:         if((diode & 0b0000000001) == 0b0000000001)
  4037  0006CC  A006               	btfss	LED_Control@diode,0,c
  4038  0006CE  D003               	goto	l2097
  4039                           
  4040                           ;LED.c: 330:         {;LED.c: 331:             LATD = LATD | ~0b11011111;
  4041  0006D0  508C               	movf	3980,w,c	;volatile
  4042  0006D2  0920               	iorlw	32
  4043  0006D4  D002               	goto	L13
  4044  0006D6                     l2097:
  4045                           
  4046                           ;LED.c: 334:         {;LED.c: 335:             LATD = LATD & 0b11011111;
  4047  0006D6  508C               	movf	3980,w,c	;volatile
  4048  0006D8  0BDF               	andlw	223
  4049  0006DA                     L13:
  4050  0006DA  6E8C               	movwf	3980,c	;volatile
  4051                           
  4052                           ;LED.c: 339:         if((diode & 0b0000000010) == 0b0000000010)
  4053  0006DC  A206               	btfss	LED_Control@diode,1,c
  4054  0006DE  D003               	goto	l2103
  4055                           
  4056                           ;LED.c: 340:         {;LED.c: 341:             LATD = LATD | ~0b01111111;
  4057  0006E0  508C               	movf	3980,w,c	;volatile
  4058  0006E2  0980               	iorlw	128
  4059  0006E4  D002               	goto	L14
  4060  0006E6                     l2103:
  4061                           
  4062                           ;LED.c: 344:         {;LED.c: 345:             LATD = LATD & 0b01111111;
  4063  0006E6  508C               	movf	3980,w,c	;volatile
  4064  0006E8  0B7F               	andlw	127
  4065  0006EA                     L14:
  4066  0006EA  6E8C               	movwf	3980,c	;volatile
  4067                           
  4068                           ;LED.c: 349:         if((diode & 0b0000000100) == 0b0000000100)
  4069  0006EC  A406               	btfss	LED_Control@diode,2,c
  4070  0006EE  D003               	goto	l2109
  4071                           
  4072                           ;LED.c: 350:         {;LED.c: 351:             LATB = LATB | ~0b11111101;
  4073  0006F0  508A               	movf	3978,w,c	;volatile
  4074  0006F2  0902               	iorlw	2
  4075  0006F4  D002               	goto	L15
  4076  0006F6                     l2109:
  4077                           
  4078                           ;LED.c: 354:         {;LED.c: 355:             LATB = LATB & 0b11111101;
  4079  0006F6  508A               	movf	3978,w,c	;volatile
  4080  0006F8  0BFD               	andlw	253
  4081  0006FA                     L15:
  4082  0006FA  6E8A               	movwf	3978,c	;volatile
  4083                           
  4084                           ;LED.c: 358:         if((diode & 0b0000001000) == 0b0000001000)
  4085  0006FC  A606               	btfss	LED_Control@diode,3,c
  4086  0006FE  D003               	goto	l2115
  4087                           
  4088                           ;LED.c: 359:         {;LED.c: 360:             LATA = LATA | ~0b11111011;
  4089  000700  5089               	movf	3977,w,c	;volatile
  4090  000702  0904               	iorlw	4
  4091  000704  D002               	goto	L16
  4092  000706                     l2115:
  4093                           
  4094                           ;LED.c: 363:         {;LED.c: 364:             LATA = LATA & 0b11111011;
  4095  000706  5089               	movf	3977,w,c	;volatile
  4096  000708  0BFB               	andlw	251
  4097  00070A                     L16:
  4098  00070A  6E89               	movwf	3977,c	;volatile
  4099                           
  4100                           ;LED.c: 368:         if((diode & 0b0000010000) == 0b0000010000)
  4101  00070C  A806               	btfss	LED_Control@diode,4,c
  4102  00070E  D003               	goto	l2121
  4103                           
  4104                           ;LED.c: 369:         {;LED.c: 370:             LATA = LATA | ~0b11101111;
  4105  000710  5089               	movf	3977,w,c	;volatile
  4106  000712  0910               	iorlw	16
  4107  000714  D002               	goto	L17
  4108  000716                     l2121:
  4109                           
  4110                           ;LED.c: 373:         {;LED.c: 374:             LATA = LATA & 0b11101111;
  4111  000716  5089               	movf	3977,w,c	;volatile
  4112  000718  0BEF               	andlw	239
  4113  00071A                     L17:
  4114  00071A  6E89               	movwf	3977,c	;volatile
  4115                           
  4116                           ;LED.c: 378:         if((diode & 0b0000100000) == 0b0000100000)
  4117  00071C  AA06               	btfss	LED_Control@diode,5,c
  4118  00071E  D003               	goto	l2127
  4119                           
  4120                           ;LED.c: 379:         {;LED.c: 380:             LATE = LATE | ~0b11111110;
  4121  000720  508D               	movf	3981,w,c	;volatile
  4122  000722  0901               	iorlw	1
  4123  000724  D002               	goto	L18
  4124  000726                     l2127:
  4125                           
  4126                           ;LED.c: 383:         {;LED.c: 384:             LATE = LATE & 0b11111110;
  4127  000726  508D               	movf	3981,w,c	;volatile
  4128  000728  0BFE               	andlw	254
  4129  00072A                     L18:
  4130  00072A  6E8D               	movwf	3981,c	;volatile
  4131                           
  4132                           ;LED.c: 388:         if((diode & 0b0001000000) == 0b0001000000)
  4133  00072C  AC06               	btfss	LED_Control@diode,6,c
  4134  00072E  D003               	goto	l2133
  4135                           
  4136                           ;LED.c: 389:         {;LED.c: 390:             LATE = LATE | ~0b11111011;
  4137  000730  508D               	movf	3981,w,c	;volatile
  4138  000732  0904               	iorlw	4
  4139  000734  D002               	goto	L19
  4140  000736                     l2133:
  4141                           
  4142                           ;LED.c: 393:         {;LED.c: 394:             LATE = LATE & 0b11111011;
  4143  000736  508D               	movf	3981,w,c	;volatile
  4144  000738  0BFB               	andlw	251
  4145  00073A                     L19:
  4146  00073A  6E8D               	movwf	3981,c	;volatile
  4147                           
  4148                           ;LED.c: 397:         if((diode & 0b0010000000) == 0b0010000000)
  4149  00073C  AE06               	btfss	LED_Control@diode,7,c
  4150  00073E  D003               	goto	l2139
  4151                           
  4152                           ;LED.c: 398:         {;LED.c: 399:             LATA = LATA | ~0b10111111;
  4153  000740  5089               	movf	3977,w,c	;volatile
  4154  000742  0940               	iorlw	64
  4155  000744  D002               	goto	L20
  4156  000746                     l2139:
  4157                           
  4158                           ;LED.c: 402:         {;LED.c: 403:             LATA = LATA & 0b10111111;
  4159  000746  5089               	movf	3977,w,c	;volatile
  4160  000748  0BBF               	andlw	191
  4161  00074A                     L20:
  4162  00074A  6E89               	movwf	3977,c	;volatile
  4163                           
  4164                           ;LED.c: 406:         if((diode & 0b0100000000) == 0b0100000000)
  4165  00074C  A007               	btfss	LED_Control@diode+1,0,c
  4166  00074E  D003               	goto	l2145
  4167                           
  4168                           ;LED.c: 407:         {;LED.c: 408:             LATD = LATD | ~0b11111101;
  4169  000750  508C               	movf	3980,w,c	;volatile
  4170  000752  0902               	iorlw	2
  4171  000754  D002               	goto	L21
  4172  000756                     l2145:
  4173                           
  4174                           ;LED.c: 411:         {;LED.c: 412:             LATD = LATD & 0b11111101;
  4175  000756  508C               	movf	3980,w,c	;volatile
  4176  000758  0BFD               	andlw	253
  4177  00075A                     L21:
  4178  00075A  6E8C               	movwf	3980,c	;volatile
  4179                           
  4180                           ;LED.c: 415:         if((diode & 0b1000000000) == 0b1000000000)
  4181  00075C  A207               	btfss	LED_Control@diode+1,1,c
  4182  00075E  D004               	goto	l2151
  4183                           
  4184                           ;LED.c: 416:         {;LED.c: 417:             LATD = LATD | ~0b11110111;
  4185  000760  508C               	movf	3980,w,c	;volatile
  4186  000762  0908               	iorlw	8
  4187  000764  6E8C               	movwf	3980,c	;volatile
  4188                           
  4189                           ;LED.c: 418:         }
  4190  000766  0012               	return	
  4191  000768                     l2151:
  4192                           
  4193                           ;LED.c: 420:         {;LED.c: 421:             LATD = LATD &0b11110111;
  4194  000768  508C               	movf	3980,w,c	;volatile
  4195  00076A  0BF7               	andlw	247
  4196  00076C  6E8C               	movwf	3980,c	;volatile
  4197  00076E  0012               	return		;funcret
  4198  000770                     __end_of_LED_Control:
  4199                           	opt callstack 0
  4200                           
  4201 ;; *************** function _INI_GlobalInterrupt *****************
  4202 ;; Defined at:
  4203 ;;		line 74 in file "INI.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		None
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    3
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_INI_All
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text33
  4232  000EF2                     __ptext33:
  4233                           	opt callstack 0
  4234  000EF2                     _INI_GlobalInterrupt:
  4235                           	opt callstack 26
  4236                           
  4237                           ;INI.c: 76: INTCONbits.GIEH=1;
  4238                           
  4239                           ;incstack = 0
  4240  000EF2  8EF2               	bsf	4082,7,c	;volatile
  4241                           
  4242                           ;INI.c: 77: INTCONbits.GIEL=1;
  4243  000EF4  8CF2               	bsf	4082,6,c	;volatile
  4244                           
  4245                           ;INI.c: 78: RCONbits.IPEN=1;
  4246  000EF6  8ED0               	bsf	4048,7,c	;volatile
  4247                           
  4248                           ;INI.c: 79: IPEN =1;
  4249  000EF8  8ED0               	bsf	4048,7,c	;volatile
  4250                           
  4251                           ;INI.c: 81: PEIE=1;
  4252  000EFA  8CF2               	bsf	4082,6,c	;volatile
  4253                           
  4254                           ;INI.c: 82: TMR1IP = 0;
  4255  000EFC  909F               	bcf	3999,0,c	;volatile
  4256  000EFE  0012               	return		;funcret
  4257  000F00                     __end_of_INI_GlobalInterrupt:
  4258                           	opt callstack 0
  4259                           
  4260 ;; *************** function _CAN_Setup *****************
  4261 ;; Defined at:
  4262 ;;		line 22 in file "CAN.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;		None
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;Total ram usage:        1 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    4
  4283 ;; This function calls:
  4284 ;;		_CAN_SetupClock
  4285 ;;		_CAN_SetupMask
  4286 ;; This function is called by:
  4287 ;;		_INI_All
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text34
  4292  000984                     __ptext34:
  4293                           	opt callstack 0
  4294  000984                     _CAN_Setup:
  4295                           	opt callstack 25
  4296                           
  4297                           ;CAN.c: 27:     CANCON = 0x80;
  4298                           
  4299                           ;incstack = 0
  4300  000984  0E80               	movlw	128
  4301  000986  6E6F               	movwf	3951,c	;volatile
  4302  000988                     l2387:
  4303                           
  4304                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  4305  000988  506E               	movf	3950,w,c	;volatile
  4306  00098A  0BE0               	andlw	224
  4307  00098C  0A80               	xorlw	128
  4308  00098E  A4D8               	btfss	status,2,c
  4309  000990  D7FB               	goto	l2387
  4310                           
  4311                           ;CAN.c: 33:     BSEL0 = 0;
  4312  000992  0E00               	movlw	0
  4313  000994  010D               	movlb	13	; () banked
  4314  000996  6FF8               	movwf	248,b	;volatile
  4315                           
  4316                           ;CAN.c: 34:     TXB0CON = 0;
  4317  000998  0E00               	movlw	0
  4318  00099A  010F               	movlb	15	; () banked
  4319  00099C  6F40               	movwf	64,b	;volatile
  4320                           
  4321                           ;CAN.c: 35:     RXB0CON = 0;
  4322  00099E  0E00               	movlw	0
  4323  0009A0  6E60               	movwf	3936,c	;volatile
  4324                           
  4325                           ;CAN.c: 36:     RXB1CON = 0;
  4326  0009A2  0E00               	movlw	0
  4327  0009A4  6F50               	movwf	80,b	;volatile
  4328                           
  4329                           ;CAN.c: 37:     B0CON = 0;
  4330  0009A6  0E00               	movlw	0
  4331  0009A8  010E               	movlb	14	; () banked
  4332  0009AA  6F20               	movwf	32,b	;volatile
  4333                           
  4334                           ;CAN.c: 38:     B1CON = 0;
  4335  0009AC  0E00               	movlw	0
  4336  0009AE  6F30               	movwf	48,b	;volatile
  4337                           
  4338                           ;CAN.c: 39:     PIE3 = 0;
  4339  0009B0  0E00               	movlw	0
  4340  0009B2  6EA3               	movwf	4003,c	;volatile
  4341                           
  4342                           ; BSR set to: 14
  4343                           ;CAN.c: 40:     IPR3 = 0xFF;
  4344  0009B4  68A5               	setf	4005,c	;volatile
  4345                           
  4346                           ;CAN.c: 41:     PIR3 = 0x00;
  4347  0009B6  0E00               	movlw	0
  4348  0009B8  6EA4               	movwf	4004,c	;volatile
  4349                           
  4350                           ;CAN.c: 42:     BIE0 = 0;
  4351  0009BA  0E00               	movlw	0
  4352  0009BC  010D               	movlb	13	; () banked
  4353  0009BE  6FFA               	movwf	250,b	;volatile
  4354                           
  4355                           ;CAN.c: 45:     ECANCON = 0x90;
  4356  0009C0  0E90               	movlw	144
  4357  0009C2  6E77               	movwf	3959,c	;volatile
  4358                           
  4359                           ; BSR set to: 13
  4360                           ;CAN.c: 48:     CAN_SetupClock();
  4361  0009C4  EC0B  F007         	call	_CAN_SetupClock	;wreg free
  4362                           
  4363                           ;CAN.c: 51:     CAN_SetupMask();
  4364  0009C8  EC8D  F004         	call	_CAN_SetupMask	;wreg free
  4365                           
  4366                           ;CAN.c: 53:     CIOCON = 0xff;
  4367  0009CC  6873               	setf	3955,c	;volatile
  4368                           
  4369                           ;CAN.c: 59:     CANCON = 0x00;
  4370  0009CE  0E00               	movlw	0
  4371  0009D0  6E6F               	movwf	3951,c	;volatile
  4372  0009D2                     l2401:
  4373                           
  4374                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  4375  0009D2  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  4376  0009D6  0EE0               	movlw	224
  4377  0009D8  1606               	andwf	??_CAN_Setup,f,c
  4378  0009DA  B4D8               	btfsc	status,2,c
  4379  0009DC  0012               	return	
  4380  0009DE  D7F9               	goto	l2401
  4381  0009E0                     __end_of_CAN_Setup:
  4382                           	opt callstack 0
  4383                           
  4384 ;; *************** function _CAN_SetupMask *****************
  4385 ;; Defined at:
  4386 ;;		line 81 in file "CAN.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;Total ram usage:        0 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    3
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_CAN_Setup
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text35
  4415  00091A                     __ptext35:
  4416                           	opt callstack 0
  4417  00091A                     _CAN_SetupMask:
  4418                           	opt callstack 25
  4419                           
  4420                           ;CAN.c: 83:     MSEL0 = 0x50;
  4421                           
  4422                           ;incstack = 0
  4423  00091A  0E50               	movlw	80
  4424  00091C  010D               	movlb	13	; () banked
  4425  00091E  6FF0               	movwf	240,b	;volatile
  4426                           
  4427                           ;CAN.c: 84:     MSEL1 = 0x55;
  4428  000920  0E55               	movlw	85
  4429  000922  6FF1               	movwf	241,b	;volatile
  4430                           
  4431                           ;CAN.c: 85:     MSEL2 = 0x55;
  4432  000924  0E55               	movlw	85
  4433  000926  6FF2               	movwf	242,b	;volatile
  4434                           
  4435                           ;CAN.c: 86:     MSEL3 = 0x55;
  4436  000928  0E55               	movlw	85
  4437  00092A  6FF3               	movwf	243,b	;volatile
  4438                           
  4439                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  4440  00092C  0E00               	movlw	0
  4441  00092E  010F               	movlb	15	; () banked
  4442  000930  6F18               	movwf	24,b	;volatile
  4443                           
  4444                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  4445  000932  0E0B               	movlw	11
  4446  000934  6F19               	movwf	25,b	;volatile
  4447                           
  4448                           ; BSR set to: 15
  4449                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  4450  000936  691A               	setf	26,b	;volatile
  4451                           
  4452                           ; BSR set to: 15
  4453                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  4454  000938  691B               	setf	27,b	;volatile
  4455                           
  4456                           ; BSR set to: 15
  4457                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  4458  00093A  691C               	setf	28,b	;volatile
  4459                           
  4460                           ; BSR set to: 15
  4461                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  4462  00093C  691D               	setf	29,b	;volatile
  4463                           
  4464                           ;CAN.c: 97:     RXM1EIDH = 0;
  4465  00093E  0E00               	movlw	0
  4466  000940  6F1E               	movwf	30,b	;volatile
  4467                           
  4468                           ;CAN.c: 98:     RXM1EIDL = 0;
  4469  000942  0E00               	movlw	0
  4470  000944  6F1F               	movwf	31,b	;volatile
  4471                           
  4472                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  4473  000946  0E00               	movlw	0
  4474  000948  6F00               	movwf	0,b	;volatile
  4475                           
  4476                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  4477  00094A  0E01               	movlw	1
  4478  00094C  6F01               	movwf	1,b	;volatile
  4479                           
  4480                           ; BSR set to: 15
  4481                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  4482  00094E  8701               	bsf	1,3,b	;volatile
  4483                           
  4484                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  4485  000950  503A               	movf	_DaneCan+3,w,c
  4486  000952  6F02               	movwf	2,b	;volatile
  4487                           
  4488                           ; BSR set to: 15
  4489                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  4490  000954  8D02               	bsf	2,6,b	;volatile
  4491                           
  4492                           ; BSR set to: 15
  4493                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  4494  000956  C039  FF03         	movff	_DaneCan+2,3843	;volatile
  4495                           
  4496                           ; BSR set to: 15
  4497                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  4498  00095A  0E00               	movlw	0
  4499  00095C  6F04               	movwf	4,b	;volatile
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  4503  00095E  0E01               	movlw	1
  4504  000960  6F05               	movwf	5,b	;volatile
  4505                           
  4506                           ; BSR set to: 15
  4507                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  4508  000962  8705               	bsf	5,3,b	;volatile
  4509                           
  4510                           ; BSR set to: 15
  4511                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  4512  000964  0E7F               	movlw	127
  4513  000966  6F06               	movwf	6,b	;volatile
  4514                           
  4515                           ; BSR set to: 15
  4516                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  4517  000968  6907               	setf	7,b	;volatile
  4518                           
  4519                           ; BSR set to: 15
  4520                           ;CAN.c: 115:     RXF2SIDH = 0;
  4521  00096A  0E00               	movlw	0
  4522  00096C  6F08               	movwf	8,b	;volatile
  4523                           
  4524                           ; BSR set to: 15
  4525                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  4526  00096E  0E20               	movlw	32
  4527  000970  6F09               	movwf	9,b	;volatile
  4528                           
  4529                           ; BSR set to: 15
  4530                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  4531  000972  8709               	bsf	9,3,b	;volatile
  4532                           
  4533                           ; BSR set to: 15
  4534                           ;CAN.c: 118:     RXF2EIDH = 0;
  4535  000974  0E00               	movlw	0
  4536  000976  6F0A               	movwf	10,b	;volatile
  4537                           
  4538                           ; BSR set to: 15
  4539                           ;CAN.c: 119:     RXF2EIDL = 0;
  4540  000978  0E00               	movlw	0
  4541  00097A  6F0B               	movwf	11,b	;volatile
  4542                           
  4543                           ; BSR set to: 15
  4544                           ;CAN.c: 127:     RXFCON0 = 0x07;
  4545  00097C  0E07               	movlw	7
  4546  00097E  010D               	movlb	13	; () banked
  4547  000980  6FD4               	movwf	212,b	;volatile
  4548                           
  4549                           ; BSR set to: 13
  4550  000982  0012               	return		;funcret
  4551  000984                     __end_of_CAN_SetupMask:
  4552                           	opt callstack 0
  4553                           
  4554 ;; *************** function _CAN_SetupClock *****************
  4555 ;; Defined at:
  4556 ;;		line 136 in file "CAN.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		None
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    3
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_CAN_Setup
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text36
  4585  000E16                     __ptext36:
  4586                           	opt callstack 0
  4587  000E16                     _CAN_SetupClock:
  4588                           	opt callstack 25
  4589                           
  4590                           ;CAN.c: 138:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  4591                           
  4592                           ; BSR set to: 13
  4593                           ;incstack = 0
  4594  000E16  8070               	bsf	3952,0,c	;volatile
  4595                           
  4596                           ;CAN.c: 139:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  4597  000E18  8270               	bsf	3952,1,c	;volatile
  4598                           
  4599                           ;CAN.c: 140:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  4600  000E1A  9470               	bcf	3952,2,c	;volatile
  4601                           
  4602                           ;CAN.c: 141:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  4603  000E1C  9670               	bcf	3952,3,c	;volatile
  4604                           
  4605                           ;CAN.c: 142:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  4606  000E1E  9870               	bcf	3952,4,c	;volatile
  4607                           
  4608                           ;CAN.c: 143:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  4609  000E20  9A70               	bcf	3952,5,c	;volatile
  4610                           
  4611                           ;CAN.c: 145:     BRGCON1bits.SJW0 = 1;
  4612  000E22  8C70               	bsf	3952,6,c	;volatile
  4613                           
  4614                           ;CAN.c: 146:     BRGCON1bits.SJW1 = 1;
  4615  000E24  8E70               	bsf	3952,7,c	;volatile
  4616                           
  4617                           ;CAN.c: 148:     BRGCON2bits.SEG1PH0 = 1;
  4618  000E26  8671               	bsf	3953,3,c	;volatile
  4619                           
  4620                           ;CAN.c: 149:     BRGCON2bits.SEG1PH1 = 1;
  4621  000E28  8871               	bsf	3953,4,c	;volatile
  4622                           
  4623                           ;CAN.c: 150:     BRGCON2bits.SEG1PH2 = 1;
  4624  000E2A  8A71               	bsf	3953,5,c	;volatile
  4625                           
  4626                           ;CAN.c: 152:     BRGCON2bits.PRSEG2 = 1;
  4627  000E2C  8471               	bsf	3953,2,c	;volatile
  4628                           
  4629                           ;CAN.c: 153:     BRGCON2bits.PRSEG1 = 0;
  4630  000E2E  9271               	bcf	3953,1,c	;volatile
  4631                           
  4632                           ;CAN.c: 154:     BRGCON2bits.PRSEG0 = 0;
  4633  000E30  9071               	bcf	3953,0,c	;volatile
  4634                           
  4635                           ;CAN.c: 156:     BRGCON3bits.SEG2PH0 = 1;
  4636  000E32  8072               	bsf	3954,0,c	;volatile
  4637                           
  4638                           ;CAN.c: 157:     BRGCON3bits.SEG2PH1 = 0;
  4639  000E34  9272               	bcf	3954,1,c	;volatile
  4640                           
  4641                           ;CAN.c: 158:     BRGCON3bits.SEG2PH2 = 1;
  4642  000E36  8472               	bsf	3954,2,c	;volatile
  4643                           
  4644                           ;CAN.c: 160:     BRGCON2bits.SAM = 1;
  4645  000E38  8C71               	bsf	3953,6,c	;volatile
  4646                           
  4647                           ;CAN.c: 161:     BRGCON2bits.SEG2PHTS = 1;
  4648  000E3A  8E71               	bsf	3953,7,c	;volatile
  4649  000E3C  0012               	return		;funcret
  4650  000E3E                     __end_of_CAN_SetupClock:
  4651                           	opt callstack 0
  4652                           
  4653 ;; *************** function _ISR_low *****************
  4654 ;; Defined at:
  4655 ;;		line 16 in file "ISR.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;Total ram usage:        3 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    2
  4676 ;; This function calls:
  4677 ;;		_TMR1_Timer_reset
  4678 ;;		i1_TMR1_Update_flag_Set
  4679 ;; This function is called by:
  4680 ;;		Interrupt level 1
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	intcodelo
  4685  000018                     __pintcodelo:
  4686                           	opt callstack 0
  4687  000018                     _ISR_low:
  4688                           	opt callstack 24
  4689                           
  4690                           ;incstack = 0
  4691  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4692  00001A  CFD8 F003          	movff	status,??_ISR_low
  4693  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  4694  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  4695                           
  4696                           ;ISR.c: 21:     if(TMR1IF==1)
  4697  000026  A09E               	btfss	3998,0,c	;volatile
  4698  000028  D011               	goto	i1l525
  4699                           
  4700                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  4701  00002A  EC1F  F007         	call	_TMR1_Timer_reset	;wreg free
  4702                           
  4703                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  4704  00002E  0E00               	movlw	0
  4705  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  4706  000032  0E01               	movlw	1
  4707  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  4708  000036  EC8A  F007         	call	i1_TMR1_Update_flag_Set	;wreg free
  4709                           
  4710                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  4711  00003A  803D               	bsf	_DetectorLedRadar,0,c
  4712                           
  4713                           ;ISR.c: 33:             if(++ramkaStanuU8 > (5*10))
  4714  00003C  2A41               	incf	ISR_low@ramkaStanuU8,f,c
  4715  00003E  0E32               	movlw	50
  4716  000040  6441               	cpfsgt	ISR_low@ramkaStanuU8,c
  4717  000042  D003               	goto	i1l2665
  4718                           
  4719                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  4720  000044  0E00               	movlw	0
  4721  000046  6E41               	movwf	ISR_low@ramkaStanuU8,c
  4722                           
  4723                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  4724  000048  8037               	bsf	_DaneCan,0,c
  4725  00004A                     i1l2665:
  4726                           
  4727                           ;ISR.c: 41:             TMR1IF=0;
  4728  00004A  909E               	bcf	3998,0,c	;volatile
  4729  00004C                     i1l525:
  4730  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  4731  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  4732  000054  C003  FFD8         	movff	??_ISR_low,status
  4733  000058  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4734  00005A  0010               	retfie	
  4735  00005C                     __end_of_ISR_low:
  4736                           	opt callstack 0
  4737                           
  4738 ;; *************** function i1_TMR1_Update_flag_Set *****************
  4739 ;; Defined at:
  4740 ;;		line 32 in file "TMR1.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  a               2    0[COMRAM] unsigned int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      void 
  4747 ;; Registers used:
  4748 ;;		None
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:        2 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    1
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_ISR_low
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text38
  4769  000F14                     __ptext38:
  4770                           	opt callstack 0
  4771  000F14                     i1_TMR1_Update_flag_Set:
  4772                           	opt callstack 24
  4773                           
  4774                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4775                           
  4776                           ;incstack = 0
  4777  000F14  C001  F03B         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4778  000F18  C002  F03C         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4779  000F1C  0012               	return		;funcret
  4780  000F1E                     __end_ofi1_TMR1_Update_flag_Set:
  4781                           	opt callstack 0
  4782                           
  4783 ;; *************** function _TMR1_Timer_reset *****************
  4784 ;; Defined at:
  4785 ;;		line 63 in file "TMR1.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  4790 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      unsigned char 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4801 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4804 ;;Total ram usage:        2 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    1
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_ISR_low
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text39
  4815  000E3E                     __ptext39:
  4816                           	opt callstack 0
  4817  000E3E                     _TMR1_Timer_reset:
  4818                           	opt callstack 24
  4819                           
  4820                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  4821                           
  4822                           ;incstack = 0
  4823  000E3E  0E00               	movlw	0
  4824  000E40  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  4825  000E42  0E00               	movlw	0
  4826  000E44  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  4827                           
  4828                           ;TMR1.c: 70:     t1L = TMR1L;
  4829  000E46  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  4830                           
  4831                           ;TMR1.c: 71:     t1H = TMR1H;
  4832  000E4A  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  4833                           
  4834                           ;TMR1.c: 72:     __nop();
  4835  000E4E  F000               	nop	
  4836                           
  4837                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  4838  000E50  0E9E               	movlw	158
  4839  000E52  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  4840                           
  4841                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  4842  000E54  0E57               	movlw	87
  4843  000E56  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  4844                           
  4845                           ;TMR1.c: 75:     TMR1H = t1H;
  4846  000E58  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  4847                           
  4848                           ;TMR1.c: 76:     TMR1L = 0x5B;
  4849  000E5C  0E5B               	movlw	91
  4850  000E5E  6ECE               	movwf	4046,c	;volatile
  4851  000E60  0012               	return		;funcret
  4852  000E62                     __end_of_TMR1_Timer_reset:
  4853                           	opt callstack 0
  4854                           
  4855 ;; *************** function _ISR_high *****************
  4856 ;; Defined at:
  4857 ;;		line 53 in file "ISR.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      void 
  4864 ;; Registers used:
  4865 ;;		None
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		Interrupt level 2
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	intcode
  4885  000008                     __pintcode:
  4886                           	opt callstack 0
  4887  000008                     _ISR_high:
  4888                           	opt callstack 24
  4889                           
  4890                           ;incstack = 0
  4891  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4892  00000A  ED93  F007         	call	int_func,f	;refresh shadow registers
  4893                           
  4894                           	psect	intcode_body
  4895  000F26                     __pintcode_body:
  4896                           	opt callstack 24
  4897  000F26                     int_func:
  4898                           	opt callstack 24
  4899  000F26  0006               	pop		; remove dummy address from shadow register refresh
  4900  000F28  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4901  000F2A  0011               	retfie		f
  4902  000F2C                     __end_of_ISR_high:
  4903                           	opt callstack 0
  4904  0000                     
  4905                           	psect	rparam
  4906  0000                     
  4907                           	psect	temp
  4908  00004A                     btemp:
  4909                           	opt callstack 0
  4910  00004A                     	ds	1
  4911  0000                     int$flags	set	btemp
  4912  0000                     wtemp8	set	btemp+1
  4913  0000                     ttemp5	set	btemp+1
  4914  0000                     ttemp6	set	btemp+4
  4915  0000                     ttemp7	set	btemp+8
  4916                           tosu	equ	0xFFF
  4917                           tosh	equ	0xFFE
  4918                           tosl	equ	0xFFD
  4919                           stkptr	equ	0xFFC
  4920                           pclatu	equ	0xFFB
  4921                           pclath	equ	0xFFA
  4922                           pcl	equ	0xFF9
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           prodh	equ	0xFF4
  4928                           prodl	equ	0xFF3
  4929                           indf0	equ	0xFEF
  4930                           postinc0	equ	0xFEE
  4931                           postdec0	equ	0xFED
  4932                           preinc0	equ	0xFEC
  4933                           plusw0	equ	0xFEB
  4934                           fsr0h	equ	0xFEA
  4935                           fsr0l	equ	0xFE9
  4936                           wreg	equ	0xFE8
  4937                           indf1	equ	0xFE7
  4938                           postinc1	equ	0xFE6
  4939                           postdec1	equ	0xFE5
  4940                           preinc1	equ	0xFE4
  4941                           plusw1	equ	0xFE3
  4942                           fsr1h	equ	0xFE2
  4943                           fsr1l	equ	0xFE1
  4944                           bsr	equ	0xFE0
  4945                           indf2	equ	0xFDF
  4946                           postinc2	equ	0xFDE
  4947                           postdec2	equ	0xFDD
  4948                           preinc2	equ	0xFDC
  4949                           plusw2	equ	0xFDB
  4950                           fsr2h	equ	0xFDA
  4951                           fsr2l	equ	0xFD9
  4952                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      73
    BANK0           160      0      85
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_CAN_SendFrame
    _LED_Error->_LED_Control
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12394
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0    7611
                                             20 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2    5702
                                             15 COMRAM     5     3      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1000
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         3     1      2     257
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     103
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     215
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2     213
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                              6     2      4     206
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     169
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2     891
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            3     0      3     316
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    1622
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     612
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     546
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    3581
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    2853
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     368
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    1000
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1000
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1000
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (6) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
   _LED_Update
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
       _FRAME_AdressOfNeighbors
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
       _FRAME_SensorExcitationStatus
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      55       5       53.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      49       1       77.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      20        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 15 15:21:47 2019

            __end_of_FRAME_DeviceReset 0A92                  ?_FRAME_AveragingTimes 0006  
                         ___awdiv@sign 000B                                     bsr 000FE0  
                          __CFG_BORV$3 000000                      ?_FRAME_AxisStatus 0006  
                    _FRAME_MapPosition 0F2E                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                     __size_of_CAN_GenID 005A  
                                  l190 0080                                    l191 0086  
                                  l192 008C                                    l193 0092  
                                  l177 04CC                                    l194 0098  
                                  l186 006E                                    l178 04CA  
                                  l187 00DE                                    l188 0074  
                                  l460 04A2                                    l189 007A  
                                  l296 06C6                            ?_LED_Update 0001  
                         __CFG_CPB$OFF 000000                     ??_FRAME_AxisStatus 0008  
                         __CFG_CPD$OFF 000000                                    u965 053A  
                   ?_FRAME_MapPosition 0006                     __size_of_CAN_Setup 005C  
                         ?_LED_Control 0006                                    wreg 000FE8  
                __end_of_CAN_TakeFrame 02DC                            ?_INI_OUTPUT 0001  
               __size_of_INI_LED_Start 0034                  __end_of_CAN_SendFrame 061E  
                         __CFG_LVP$OFF 000000              TRM_DataTransmition@weWyU8 0040  
         __size_of_INI_GlobalInterrupt 000E                    ??_FRAME_MapPosition 0008  
                         __CFG_WDT$OFF 000000                                   l2103 06E6  
                                 l2023 0DF0                                   l2121 0716  
                                 l1065 0B86                                   l2115 0706  
                                 l2043 0640                                   l2133 0736  
                                 l2109 06F6                                   l2061 0670  
                                 l2037 0630                                   l2151 0768  
                                 l2127 0726                                   l2055 0660  
                                 l2401 09D2                                   l2145 0756  
                                 l2073 0690                                   l2049 0650  
                                 l2233 0618                                   l2139 0746  
                                 l2091 06C0                                   l2067 0680  
                                 l2315 0A70                                   l2085 06B0  
                                 l2253 0C12                                   l2341 0862  
                                 l2333 0844                                   l2229 0564  
                                 l2079 06A0                                   l2511 07DC  
                                 l2503 07A6                                   l2351 0882  
                                 l2327 0834                                   l2431 01CC  
                                 l2423 01B0                                   l2407 009E  
                                 l2097 06D6                                   l2433 01D4  
                                 l2425 01B6                                   l2441 01EC  
                      __end_of_INI_All 0EDA                                   l2371 0B5C  
                                 l2339 085A                                   l2355 088C  
                                 l2451 025C                                   l2435 01DC  
                                 l2427 01BC                                   l2443 022C  
                                 l2269 0C9E                                   l2381 0B7C  
                                 l2509 07D2                                   l2517 0808  
                                 l2461 0280                                   l2453 0262  
                                 l2437 01E4                                   l2429 01C4  
                                 l2541 033C                                   l2533 0304  
                                 l2359 089A                                   l2463 0288  
                                 l2455 0268                                   l2471 02D8  
                                 l2447 0230                                   l2551 0382  
                                 l2543 034A                                   l2535 0312  
                                 l2369 0B54                                   l2465 0290  
                                 l2457 0270                                   l2449 024A  
                                 l2297 0BBC                                   l2553 0390  
                                 l2545 0358                                   l2537 0320  
                                 l2561 0428                                   l2609 0ABC  
                                 l2387 0988                                   l2459 0278  
                                 l2555 03AA                                   l2547 0366  
                                 l2539 032E                                   l2469 0298  
                                 l2573 04AA                                   l2549 0374  
                                 l2559 03C4                                   l2639 0DC4  
                                 l2649 0DE4                                   _BIE0 000DFA  
                                 u1110 0866                                   u1040 0BCC  
                                 u1205 0148                                   u1150 0B60  
                                 u1320 0ADA                                   u1250 0810  
                                 _LATA 000F89                                   _LATB 000F8A  
                                 _LATC 000F8B                                   _LATD 000F8C  
                                 _LATE 000F8D                                   _IPR3 000FA5  
                                 _IPEN 007E87                                   _PIE3 000FA3  
                                 _PEIE 007F96                                   _PIR3 000FA4  
                                 _RCON 000FD0            ??_FRAME_AccelerometerStatus 0008  
                      __end_of_ISR_low 005C                       LED_Control@diode 0006  
                 FRAME_AnalogValue@set 0008                                   _main 0DBE  
                     LED_Control@color 000A                                   fsr2h 000FDA  
                                 indf1 000FE7                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 004A                         _CAN_SetupClock 0E16  
                                 prodl 000FF3                  __end_of_CAN_SetupMask 0984  
        __size_of_TMR1_Update_flag_Get 000A                                   start 005C  
        __size_of_TMR1_Update_flag_Set 000A                     __size_of_LED_Error 001E  
                        __CFG_IESO$OFF 000000                     __size_of_LED_Right 004C  
        __size_of_FRAME_HandleCanFrame 01D4                          _LED_Light_Pos 0770  
                        __CFG_MCLRE$ON 000000                           ___param_bank 000000  
    FRAME_HandleCanFrame@identyfikator 0014                     __size_of_INI_Timer 0018  
            __end_of_FRAME_MapPosition 0F30                       __end_of_LED_Left 0CB2  
                                _B0CON 000E20                                  _B1CON 000E30  
                                _B2CON 000E40                                  _B3CON 000E50  
                                _B4CON 000E60                                  _B5CON 000E70  
                                ?_main 0001                        __end_of___awdiv 08A4  
                                _BSEL0 000DF8                        ___awdiv@divisor 0008  
                                _T1CON 000FCD                                  _IRCF0 007E9C  
                                _IRCF1 007E9D      FRAME_ExcitationMultiplier@message 0006  
                                _IRCF2 007E9E                        __end_of___lwdiv 0B90  
                                i1l525 004C                    __size_of_FRAME_Plot 0022  
                      ___awdiv@counter 000A                                  _MSEL0 000DF0  
                                _MSEL1 000DF1                                  _MSEL2 000DF2  
                                _MSEL3 000DF3                                  _TMR1H 000FCF  
                                _TMR1L 000FCE                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TRISD 000F95                                  _TRISE 000F96  
                        __CFG_PWRT$OFF 000000                 ?_CAN_MoveBuffIntoFrame 0006  
                        __CFG_WRT0$OFF 000000             __size_of_FRAME_AnalogValue 0002  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                     __end_of_ISR_high 0F2C                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                i1TMR1_Update_flag_Set@a 0001  
                                tablat 000FF5                 __end_of_CAN_SetupClock 0E3E  
                                plusw2 000FDB                                  ttemp5 004B  
                                ttemp6 004E                                  ttemp7 0052  
                                status 000FD8                                  wtemp8 004B  
                    __end_of_CAN_GenID 0A3A                         __CFG_PBADEN$ON 000000  
                  __size_of_LED_Update 0056                         ?_LED_Light_Pos 000D  
                     _TMR1_Timer_reset 0E3E                      __end_of_CAN_Setup 09E0  
                        _INI_LED_Start 0D8A                  _FRAME_ExcitationValue 0CB2  
     FRAME_AccelerometerStatus@message 0006                        __initialization 0C2A  
                  __size_of_INI_OUTPUT 001E                       CAN_GenID@frameID 0008  
                         __end_of_main 0DEC                 ??_FRAME_AveragingTimes 0008  
           __size_of_FRAME_DeviceReset 0058               ?_FRAME_AdressOfNeighbors 0006  
                     CAN_GenID@message 0006              _FRAME_AccelerometerStatus 0D54  
                               ??_main 0026                 CAN_MoveBuffIntoFrame@i 000A  
                        __activetblptr 000002                       _TMR1_Update_flag 003B  
                            ??_INI_All 000B                      __end_of_LED_Error 0EA2  
                    __end_of_LED_Right 0C2A                              ??_ISR_low 0003  
                               _CANCON 000F6F                       ___awdiv@dividend 0006  
          FRAME_ExcitationMultiplier@i 0009                                 _CIOCON 000F73  
                      __CFG_BBSIZ$1024 000000                      __end_of_INI_Timer 0EF2  
                               i1l2665 004A                        ?_CAN_SetupClock 0001  
                               _RXB0D0 000F66                                 _TMR1IE 007CE8  
                               _TMR1IF 007CF0                                 _TMR1IP 007CF8  
                               _TMR1ON 007E68           ??_FRAME_ExcitationMultiplier 0008  
                       ?_INI_LED_Start 0001                         __CFG_XINST$OFF 000000  
                            ??___awdiv 000A                         __CFG_STVREN$ON 000000  
                     LED_Light_Pos@pos 000D             __size_of_FRAME_MapPosition 0002  
                            ??___lwdiv 000A                                 clear_0 0C50  
                               clear_1 0C5C                       ___awdiv@quotient 000C  
             ??i1_TMR1_Update_flag_Set 0003                        __CFG_BOREN$BOHW 000000  
                         __pdataCOMRAM 0043                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
  __size_of_FRAME_ExcitationMultiplier 004E                   __size_of_LED_Control 0152  
             FRAME_MapPosition@message 0006                  TMR1_Update_flag_Set@a 0006  
                           __accesstop 0060                __end_of__initialization 0C62  
                         ??_FRAME_Plot 0008                    ISR_low@ramkaStanuU8 0041  
                            ?_LED_Left 0006                        ??_LED_Light_Pos 0011  
                        ___rparam_used 000001                 ?_FRAME_ExcitationValue 0006  
      __end_of_FRAME_AdressOfNeighbors 0F34                         __pcstackCOMRAM 0001  
                            LED_Left@a 0006                              LED_Left@b 0008  
                  _INI_GlobalInterrupt 0EF2                              ?_ISR_high 0001  
                         ??_LED_Update 0018            __end_of_TRM_DataTransmition 0AE8  
                _FRAME_SoftwareVersion 0F2C                     __end_of_FRAME_Plot 0E84  
                         ??_INI_OUTPUT 0006                FRAME_AxisStatus@message 0006  
                 ?_INI_GlobalInterrupt 0001              __size_of_FRAME_AxisStatus 0036  
                           __pbssBANK0 0060                        ??_INI_LED_Start 000B  
                           ??_LED_Left 0008                     __end_of_LED_Update 0B3E  
                   __end_of_INI_OUTPUT 0EC0                             ??_ISR_high 0001  
                  TMR1_Timer_reset@t1H 0002                    TMR1_Timer_reset@t1L 0001  
                              _ECANCON 000F77                                _CANSTAT 000F6E  
              ??_CAN_MoveBuffIntoFrame 000A           __end_of_TMR1_Update_flag_Get 0F14  
         __end_of_TMR1_Update_flag_Set 0F0A        __size_ofi1_TMR1_Update_flag_Set 000A  
         __end_of_FRAME_HandleCanFrame 04B0                                _INI_All 0EC0  
             __end_of_TMR1_Timer_reset 0E62                                _RXB0DLC 000F65  
                              _RXB0CON 000F60                                _RXB1CON 000F50  
                ??_INI_GlobalInterrupt 0006                                _TXB0CON 000F40  
                              _ISR_low 0018                                _RXFCON0 000DD4  
                              _DaneCan 0037     __end_of_FRAME_ExcitationMultiplier 0BDE  
           _FRAME_ExcitationMultiplier 0B90            FRAME_HandleCanFrame@message 0010  
                              __Hparam 0000                                __Lparam 0000  
               __size_of_CAN_TakeFrame 027C                              _CAN_GenID 09E0  
                              ___awdiv 0820                              _CAN_Setup 0984  
               __size_of_CAN_SendFrame 016E                                ___lwdiv 0B3E  
                    LED_Light_Pos@pos2 0014                                __pcinit 0C2A  
                              __ramtop 0D00                                __ptext0 0DBE  
                              __ptext1 0A92                                __ptext2 02DC  
                              __ptext3 0E84                                __ptext4 0F2C  
                              __ptext5 08A4                                __ptext6 0E62  
                              __ptext7 0F2E                                __ptext8 0CB2  
                              __ptext9 0B90                 ?_FRAME_SoftwareVersion 0006  
               __size_of_CAN_SetupMask 006A         FRAME_AdressOfNeighbors@nrRamki 0008  
     __size_of_FRAME_AdressOfNeighbors 0002                       ??_CAN_SetupClock 0006  
       FRAME_AdressOfNeighbors@message 0006                              _LED_Error 0E84  
                       __pintcode_body 0F26                              _LED_Right 0BDE  
                 end_of_initialization 0C62                          __Lmediumconst 0000  
                              int_func 0F26                              _INI_Timer 0EDA  
               i1_TMR1_Update_flag_Set 0F14       TRM_DataTransmition@czujnikWeWyU8 003F  
                           ?_CAN_GenID 0006                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                             ?_CAN_Setup 0001  
        __size_of_FRAME_AveragingTimes 0036                   CAN_SendFrame@message 000B  
                        LED_Update@Red 0042                          _CAN_TakeFrame 0060  
                        _CAN_SendFrame 04B0                             ?_LED_Error 0001  
                           ?_LED_Right 0006                       _FRAME_AxisStatus 0CE8  
              ??_FRAME_ExcitationValue 0008                             ?_INI_Timer 0001  
                      _ramkaCanRxKarty 0060                   _TMR1_Update_flag_Get 0F0A  
                      _ramkaCanTxKarty 0026                   _TMR1_Update_flag_Set 0F00  
                        _CAN_SetupMask 091A                      __size_of_LED_Left 0042  
                 _FRAME_HandleCanFrame 02DC                         CAN_TakeFrame@k 0013  
                        __pidataCOMRAM 0F1E                      __size_of_ISR_high 0F24  
                           LED_Right@a 0006                             LED_Right@b 000A  
                        ??_LED_Control 0008                    start_initialization 0C2A  
                       ?_CAN_TakeFrame 000E                         ?_CAN_SendFrame 000B  
                     __CFG_OSC$IRCIO67 000000                  ?_TMR1_Update_flag_Get 0006  
                ?_TMR1_Update_flag_Set 0006                         ?_CAN_SetupMask 0001  
                __end_of_LED_Light_Pos 0820                  ?_FRAME_HandleCanFrame 0010  
                          ??_CAN_GenID 0009                            ??_CAN_Setup 0006  
                     __CFG_LPT1OSC$OFF 000000               CAN_MoveBuffIntoFrame@Buf 0008  
 __end_of_FRAME_SensorExcitationStatus 091A  __size_of_FRAME_SensorExcitationStatus 0076  
             CAN_MoveBuffIntoFrame@Ram 0006           _FRAME_SensorExcitationStatus 08A4  
       __size_of_CAN_MoveBuffIntoFrame 002A          __end_of_CAN_MoveBuffIntoFrame 0E16  
                      _Fulfillment_Lvl 0047                            __pbssCOMRAM 0026  
                             ?_INI_All 0001                _FRAME_AdressOfNeighbors 0F32  
                    ?_TMR1_Timer_reset 0001                            _BRGCON1bits 000F70  
                          _BRGCON2bits 000F71                            _BRGCON3bits 000F72  
                             ?_ISR_low 0001                     ??_TMR1_Timer_reset 0001  
                          ??_LED_Error 000B                            ??_LED_Right 0008  
         __size_of_TRM_DataTransmition 0056                    __end_of_LED_Control 0770  
          ?_FRAME_ExcitationMultiplier 0006                            ??_INI_Timer 0006  
                __end_of_INI_LED_Start 0DBE                       ___lwdiv@dividend 0006  
                            __pintcode 0008                               ?___awdiv 0006  
              ??_FRAME_SoftwareVersion 0008                               ?___lwdiv 0006  
                    FRAME_Plot@message 0006                            __pintcodelo 0018  
          __end_of_INI_GlobalInterrupt 0F00                        ??_CAN_TakeFrame 0010  
        ?_FRAME_SensorExcitationStatus 0006                            _COMSTATbits 000F74  
                      ??_CAN_SendFrame 000D                       ___lwdiv@quotient 000A  
              ?i1_TMR1_Update_flag_Set 0001            FRAME_AveragingTimes@message 0006  
               ??_TMR1_Update_flag_Get 0008                 ??_TMR1_Update_flag_Set 0008  
                      ??_CAN_SetupMask 0006                               _LED_Left 0C70  
               ??_FRAME_HandleCanFrame 0012                   CAN_TakeFrame@message 000E  
                 CAN_TakeFrame@tempCON 0012                               _RXB0EIDH 000F63  
                             _RXB0EIDL 000F64                               _RCONbits 000FD0  
                     __CFG_WDTPS$32768 000000                               _RXB0SIDH 000F61  
                             _RXB0SIDL 000F62                               _RXF0EIDH 000F02  
                             _RXF0EIDL 000F03                               _RXF1EIDH 000F06  
                             _RXF1EIDL 000F07                               _RXF2EIDH 000F0A  
                             _RXF2EIDL 000F0B                               _RXF0SIDH 000F00  
                             _RXF0SIDL 000F01                               _RXF1SIDH 000F04  
                             _RXF1SIDL 000F05                               _RXF2SIDH 000F08  
                             _RXF2SIDL 000F09                               _ISR_high 0008  
                             _RXM0EIDH 000F1A                               _RXM0EIDL 000F1B  
                             _RXM1EIDH 000F1E                               _RXM1EIDL 000F1F  
                             _RXM0SIDH 000F18                               _RXM0SIDL 000F19  
                             _RXM1SIDH 000F1C                               _RXM1SIDL 000F1D  
             __end_of_FRAME_AxisStatus 0D1E              ??_FRAME_AdressOfNeighbors 000A  
                     _DetectorLedRadar 003D                            _LED_Control 061E  
                     __size_of_INI_All 001A           FRAME_ExcitationValue@message 0006  
       __end_ofi1_TMR1_Update_flag_Set 0F1E                              copy_data0 0C3E  
                     __size_of_ISR_low 0044     __size_of_FRAME_AccelerometerStatus 0036  
         __end_of_FRAME_AveragingTimes 0D54             ?_FRAME_AccelerometerStatus 0006  
       __size_of_FRAME_ExcitationValue 0036          __end_of_FRAME_ExcitationValue 0CE8  
                             __Hrparam 0000                           _RXB0SIDLbits 000F62  
                             __Lrparam 0000                       __size_of___awdiv 0084  
                     __size_of___lwdiv 0052                     LED_Light_Pos@flage 0016  
                   LED_Light_Pos@color 0011                           _RXF0SIDLbits 000F01  
             FRAME_AnalogValue@message 0006                        ___lwdiv@divisor 0008  
                         _RXF1SIDLbits 000F05                        ___lwdiv@counter 000C  
                             __ptext10 0A3A                               __ptext11 0CE8  
                             __ptext20 0DEC                               __ptext12 0D1E  
                             __ptext21 0F00                               __ptext13 0F30  
                             __ptext30 0EA2                               __ptext22 0F0A  
                             __ptext14 0F32                               __ptext31 0D8A  
                             __ptext23 0AE8                               __ptext15 0D54  
                             __ptext32 061E                               __ptext24 0770  
                             __ptext16 04B0                               __ptext33 0EF2  
                             __ptext25 0B3E                               __ptext17 09E0  
                             __ptext34 0984                               __ptext26 0BDE  
                             __ptext18 0060                               __ptext35 091A  
                             __ptext27 0C70                               __ptext19 0820  
                             __ptext36 0E16                               __ptext28 0EC0  
       ??_FRAME_SensorExcitationStatus 0008                               __ptext29 0EDA  
                             __ptext38 0F14                               __ptext39 0E3E  
        TRM_DataTransmition@canMessage 0015                           _RXF2SIDLbits 000F09  
             FRAME_DeviceReset@message 0006      __end_of_FRAME_AccelerometerStatus 0D8A  
                           _FRAME_Plot 0E62                          __size_of_main 002E  
              __size_of_CAN_SetupClock 0028                               int$flags 004A  
                  _TRM_DataTransmition 0A92                            _RXB0DLCbits 000F65  
                           _LED_Update 0AE8                            _RXB0CONbits 000F60  
                           _INTCONbits 000FF2                             _INI_OUTPUT 0EA2  
                    _FRAME_AnalogValue 0F30                   ?_TRM_DataTransmition 0001  
         FRAME_SoftwareVersion@message 0006                               intlevel1 0000  
                             intlevel2 0000                     ?_FRAME_AnalogValue 0006  
  FRAME_SensorExcitationStatus@message 0006                            _TXB0CONbits 000F40  
                  ??_FRAME_AnalogValue 000A              __size_of_TMR1_Timer_reset 0024  
             LED_Light_Pos@fulfillment 000F                   _FRAME_AveragingTimes 0D1E  
       __size_of_FRAME_SoftwareVersion 0002                      _FRAME_DeviceReset 0A3A  
        __end_of_FRAME_SoftwareVersion 0F2E                     ?_FRAME_DeviceReset 0006  
                      LED_Update@Green 0049              __end_of_FRAME_AnalogValue 0F32  
               __size_of_LED_Light_Pos 00B0                  _CAN_MoveBuffIntoFrame 0DEC  
                           _WDTCONbits 000FD1                    ??_FRAME_DeviceReset 0008  
                ??_TRM_DataTransmition 0015                 LED_Light_Pos@LED_array 0012  
                       LED_Update@pos1 0045                         LED_Update@pos2 0043  
                          ?_FRAME_Plot 0006  
