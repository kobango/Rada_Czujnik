

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Aug 05 14:31:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84  0000                     
    85                           ; Version 2.05
    86                           ; Generated 20/12/2018 GMT
    87                           ; 
    88                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4680 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataCOMRAM
   121  002994                     __pidataCOMRAM:
   122                           	opt callstack 0
   123                           
   124                           ;initializer for _MaxAdres
   125  002994  FFFF               	dw	65535
   126                           
   127                           ;initializer for LED_Update@pos2
   128  002996  0001               	dw	1
   129                           
   130                           ;initializer for LED_Update@pos1
   131  002998  0001               	dw	1
   132                           
   133                           ;initializer for _Fulfillment_Lvl
   134  00299A  0014               	dw	20
   135                           
   136                           ;initializer for LED_Update@Green
   137  00299C  01                 	db	1
   138                           
   139                           ;initializer for _Init_Data
   140  00299D  FFFF               	dw	65535
   141                           
   142                           ;initializer for _NeightAdress2
   143  00299F  012A               	dw	298
   144                           
   145                           	psect	idataBANK0
   146  002A22                     __pidataBANK0:
   147                           	opt callstack 0
   148                           
   149                           ;initializer for MOC_Frame_Counter@zeta
   150  002A22  0011               	dw	17
   151  0000                     _RXF9EIDL	set	3443
   152  0000                     _RXF9EIDH	set	3442
   153  0000                     _RXF9SIDLbits	set	3441
   154  0000                     _RXF9SIDL	set	3441
   155  0000                     _RXF9SIDH	set	3440
   156  0000                     _RXF8EIDL	set	3435
   157  0000                     _RXF8EIDH	set	3434
   158  0000                     _RXF8SIDLbits	set	3433
   159  0000                     _RXF8SIDL	set	3433
   160  0000                     _RXF8SIDH	set	3432
   161  0000                     _RXF7EIDL	set	3431
   162  0000                     _RXF7EIDH	set	3430
   163  0000                     _RXF7SIDLbits	set	3429
   164  0000                     _RXF7SIDL	set	3429
   165  0000                     _RXF7SIDH	set	3428
   166  0000                     _RXF6EIDL	set	3427
   167  0000                     _RXF6EIDH	set	3426
   168  0000                     _RXF6SIDLbits	set	3425
   169  0000                     _RXF6SIDL	set	3425
   170  0000                     _RXF6SIDH	set	3424
   171  0000                     _RXFCON1	set	3541
   172  0000                     _RXFCON0	set	3540
   173  0000                     _RXFBCON4	set	3556
   174  0000                     _RXFBCON3	set	3555
   175  0000                     _RXFBCON2	set	3554
   176  0000                     _RXFBCON1	set	3553
   177  0000                     _RXFBCON0	set	3552
   178  0000                     _MSEL3	set	3571
   179  0000                     _MSEL2	set	3570
   180  0000                     _MSEL1	set	3569
   181  0000                     _MSEL0	set	3568
   182  0000                     _BIE0	set	3578
   183  0000                     _BSEL0	set	3576
   184  0000                     _B5CON	set	3696
   185  0000                     _B4CON	set	3680
   186  0000                     _B3CON	set	3664
   187  0000                     _B2CON	set	3648
   188  0000                     _B1CON	set	3632
   189  0000                     _B0CON	set	3616
   190  0000                     _TXB0CONbits	set	3904
   191  0000                     _RXF5EIDL	set	3863
   192  0000                     _RXF5EIDH	set	3862
   193  0000                     _RXF5SIDLbits	set	3861
   194  0000                     _RXF5SIDL	set	3861
   195  0000                     _RXF5SIDH	set	3860
   196  0000                     _RXF4EIDL	set	3859
   197  0000                     _RXF4EIDH	set	3858
   198  0000                     _RXF4SIDLbits	set	3857
   199  0000                     _RXF4SIDL	set	3857
   200  0000                     _RXF4SIDH	set	3856
   201  0000                     _RXF3EIDL	set	3855
   202  0000                     _RXF3EIDH	set	3854
   203  0000                     _RXF3SIDLbits	set	3853
   204  0000                     _RXF3SIDL	set	3853
   205  0000                     _RXF3SIDH	set	3852
   206  0000                     _RXF2EIDL	set	3851
   207  0000                     _RXF2EIDH	set	3850
   208  0000                     _RXF2SIDLbits	set	3849
   209  0000                     _RXF2SIDL	set	3849
   210  0000                     _RXF2SIDH	set	3848
   211  0000                     _RXF1EIDL	set	3847
   212  0000                     _RXF1EIDH	set	3846
   213  0000                     _RXF1SIDLbits	set	3845
   214  0000                     _RXF1SIDL	set	3845
   215  0000                     _RXF1SIDH	set	3844
   216  0000                     _RXF0EIDL	set	3843
   217  0000                     _RXF0EIDH	set	3842
   218  0000                     _RXF0SIDLbits	set	3841
   219  0000                     _RXF0SIDL	set	3841
   220  0000                     _RXF0SIDH	set	3840
   221  0000                     _RXM1EIDL	set	3871
   222  0000                     _RXM1EIDH	set	3870
   223  0000                     _RXM1SIDL	set	3869
   224  0000                     _RXM1SIDH	set	3868
   225  0000                     _RXM0EIDL	set	3867
   226  0000                     _RXM0EIDH	set	3866
   227  0000                     _RXM0SIDL	set	3865
   228  0000                     _RXM0SIDH	set	3864
   229  0000                     _RXB1CON	set	3920
   230  0000                     _TXB0CON	set	3904
   231  0000                     _TBLPTR	set	4086
   232  0000                     _TABLAT	set	4085
   233  0000                     _EECON2	set	4007
   234  0000                     _EEDATA	set	4008
   235  0000                     _EECON1bits	set	4006
   236  0000                     _EEADR	set	4009
   237  0000                     _EEADRH	set	4010
   238  0000                     _INTCONbits	set	4082
   239  0000                     _WDTCONbits	set	4049
   240  0000                     _RCONbits	set	4048
   241  0000                     _TRISC	set	3988
   242  0000                     _LATC	set	3979
   243  0000                     _T1CON	set	4045
   244  0000                     _TMR1H	set	4047
   245  0000                     _TMR1L	set	4046
   246  0000                     _LATE	set	3981
   247  0000                     _LATA	set	3977
   248  0000                     _LATB	set	3978
   249  0000                     _LATD	set	3980
   250  0000                     _TRISD	set	3989
   251  0000                     _TRISE	set	3990
   252  0000                     _TRISB	set	3987
   253  0000                     _TRISA	set	3986
   254  0000                     _RXB0DLCbits	set	3941
   255  0000                     _RXB0DLC	set	3941
   256  0000                     _RXB0SIDH	set	3937
   257  0000                     _RXB0SIDLbits	set	3938
   258  0000                     _RXB0SIDL	set	3938
   259  0000                     _RXB0EIDH	set	3939
   260  0000                     _RXB0EIDL	set	3940
   261  0000                     _COMSTATbits	set	3956
   262  0000                     _RXB0CONbits	set	3936
   263  0000                     _BRGCON3bits	set	3954
   264  0000                     _BRGCON2bits	set	3953
   265  0000                     _BRGCON1bits	set	3952
   266  0000                     _CIOCON	set	3955
   267  0000                     _ECANCON	set	3959
   268  0000                     _PIR3	set	4004
   269  0000                     _IPR3	set	4005
   270  0000                     _PIE3	set	4003
   271  0000                     _RXB0CON	set	3936
   272  0000                     _CANSTAT	set	3950
   273  0000                     _CANCON	set	3951
   274  0000                     _RCON	set	4048
   275  0000                     _RXB0D0	set	3942
   276  0000                     _TMR1IF	set	31984
   277  0000                     _TMR1IP	set	31992
   278  0000                     _PEIE	set	32662
   279  0000                     _IPEN	set	32391
   280  0000                     _TMR1ON	set	32360
   281  0000                     _TMR1IE	set	31976
   282  0000                     _IRCF0	set	32412
   283  0000                     _IRCF1	set	32413
   284  0000                     _IRCF2	set	32414
   285                           
   286                           ; #config settings
   287  0000                     
   288                           	psect	cinit
   289  00231E                     __pcinit:
   290                           	opt callstack 0
   291  00231E                     start_initialization:
   292                           	opt callstack 0
   293  00231E                     __initialization:
   294                           	opt callstack 0
   295                           
   296                           ; Initialize objects allocated to BANK0 (2 bytes)
   297                           ; load TBLPTR registers with __pidataBANK0
   298  00231E  0E22               	movlw	low __pidataBANK0
   299  002320  6EF6               	movwf	tblptrl,c
   300  002322  0E2A               	movlw	high __pidataBANK0
   301  002324  6EF7               	movwf	tblptrh,c
   302  002326  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   303  002328  6EF8               	movwf	tblptru,c
   304  00232A  0009               	tblrd		*+	;fetch initializer
   305  00232C  CFF5 F0D6          	movff	tablat,__pdataBANK0
   306  002330  0009               	tblrd		*+	;fetch initializer
   307  002332  CFF5 F0D7          	movff	tablat,__pdataBANK0+1
   308                           
   309                           ; Initialize objects allocated to COMRAM (13 bytes)
   310                           ; load TBLPTR registers with __pidataCOMRAM
   311  002336  0E94               	movlw	low __pidataCOMRAM
   312  002338  6EF6               	movwf	tblptrl,c
   313  00233A  0E29               	movlw	high __pidataCOMRAM
   314  00233C  6EF7               	movwf	tblptrh,c
   315  00233E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   316  002340  6EF8               	movwf	tblptru,c
   317  002342  EE00  F04D         	lfsr	0,__pdataCOMRAM
   318  002346  EE10 F00D          	lfsr	1,13
   319  00234A                     copy_data0:
   320  00234A  0009               	tblrd		*+
   321  00234C  CFF5 FFEE          	movff	tablat,postinc0
   322  002350  50E5               	movf	postdec1,w,c
   323  002352  50E1               	movf	fsr1l,w,c
   324  002354  E1FA               	bnz	copy_data0
   325                           
   326                           ; Clear objects allocated to BIGRAM (544 bytes)
   327  002356  EE00  F0DA         	lfsr	0,__pbssBIGRAM
   328  00235A  EE12 F020          	lfsr	1,544
   329  00235E                     clear_0:
   330  00235E  6AEE               	clrf	postinc0,c
   331  002360  50E5               	movf	postdec1,w,c
   332  002362  50E1               	movf	fsr1l,w,c
   333  002364  E1FC               	bnz	clear_0
   334  002366  50E2               	movf	fsr1h,w,c
   335  002368  E1FA               	bnz	clear_0
   336                           
   337                           ; Clear objects allocated to BANK0 (118 bytes)
   338  00236A  EE00  F060         	lfsr	0,__pbssBANK0
   339  00236E  0E76               	movlw	118
   340  002370                     clear_1:
   341  002370  6AEE               	clrf	postinc0,c
   342  002372  06E8               	decf	wreg,f,c
   343  002374  E1FD               	bnz	clear_1
   344                           
   345                           ; Clear objects allocated to COMRAM (32 bytes)
   346  002376  EE00  F02D         	lfsr	0,__pbssCOMRAM
   347  00237A  0E20               	movlw	32
   348  00237C                     clear_2:
   349  00237C  6AEE               	clrf	postinc0,c
   350  00237E  06E8               	decf	wreg,f,c
   351  002380  E1FD               	bnz	clear_2
   352  002382                     end_of_initialization:
   353                           	opt callstack 0
   354  002382                     __end_of__initialization:
   355                           	opt callstack 0
   356  002382  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   357  002384  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   358  002386  0E00               	movlw	low (__Lmediumconst shr (0+16))
   359  002388  6EF8               	movwf	tblptru,c
   360  00238A  0100               	movlb	0
   361  00238C  EF63  F010         	goto	_main	;jump to C main() function
   362                           
   363                           	psect	bssCOMRAM
   364  00002D                     __pbssCOMRAM:
   365                           	opt callstack 0
   366  00002D                     _DaneCan:
   367                           	opt callstack 0
   368  00002D                     	ds	4
   369  000031                     _nextEEPosition:
   370                           	opt callstack 0
   371  000031                     	ds	2
   372  000033                     FRAME_SensorExcitationStatus@statwect:
   373                           	opt callstack 0
   374  000033                     	ds	2
   375  000035                     _MinAdres:
   376                           	opt callstack 0
   377  000035                     	ds	2
   378  000037                     _TMR1_Update_flag:
   379                           	opt callstack 0
   380  000037                     	ds	2
   381  000039                     WritetoEEPROM@GIE_Status:
   382                           	opt callstack 0
   383  000039                     	ds	1
   384  00003A                     	ds	1
   385  00003B                     	ds	1
   386  00003C                     ISR_low@ramkaStanuU8:
   387                           	opt callstack 0
   388  00003C                     	ds	1
   389  00003D                     	ds	1
   390  00003E                     _LOCK:
   391                           	opt callstack 0
   392  00003E                     	ds	1
   393  00003F                     _NeightAdress8:
   394                           	opt callstack 0
   395  00003F                     	ds	2
   396  000041                     _NeightAdress7:
   397                           	opt callstack 0
   398  000041                     	ds	2
   399  000043                     _NeightAdress6:
   400                           	opt callstack 0
   401  000043                     	ds	2
   402  000045                     _NeightAdress5:
   403                           	opt callstack 0
   404  000045                     	ds	2
   405  000047                     _NeightAdress4:
   406                           	opt callstack 0
   407  000047                     	ds	2
   408  000049                     _NeightAdress3:
   409                           	opt callstack 0
   410  000049                     	ds	2
   411  00004B                     _NeightAdress1:
   412                           	opt callstack 0
   413  00004B                     	ds	2
   414                           
   415                           	psect	dataCOMRAM
   416  00004D                     __pdataCOMRAM:
   417                           	opt callstack 0
   418  00004D                     _MaxAdres:
   419                           	opt callstack 0
   420  00004D                     	ds	2
   421  00004F                     LED_Update@pos2:
   422                           	opt callstack 0
   423  00004F                     	ds	2
   424  000051                     LED_Update@pos1:
   425                           	opt callstack 0
   426  000051                     	ds	2
   427  000053                     _Fulfillment_Lvl:
   428                           	opt callstack 0
   429  000053                     	ds	2
   430  000055                     LED_Update@Green:
   431                           	opt callstack 0
   432  000055                     	ds	1
   433  000056                     _Init_Data:
   434                           	opt callstack 0
   435  000056                     	ds	2
   436  000058                     _NeightAdress2:
   437                           	opt callstack 0
   438  000058                     	ds	2
   439                           
   440                           	psect	bssBANK0
   441  000060                     __pbssBANK0:
   442                           	opt callstack 0
   443  000060                     _ramkaCanRxKarty:
   444                           	opt callstack 0
   445  000060                     	ds	85
   446  0000B5                     _ramkaCanTxKarty:
   447                           	opt callstack 0
   448  0000B5                     	ds	17
   449  0000C6                     _Flagi:
   450                           	opt callstack 0
   451  0000C6                     	ds	5
   452  0000CB                     _DetectorLedRadar:
   453                           	opt callstack 0
   454  0000CB                     	ds	3
   455  0000CE                     _czujnikiNaMapie:
   456                           	opt callstack 0
   457  0000CE                     	ds	2
   458  0000D0                     _Dane:
   459                           	opt callstack 0
   460  0000D0                     	ds	2
   461  0000D2                     _neighborsAdress:
   462                           	opt callstack 0
   463  0000D2                     	ds	2
   464  0000D4                     _ustawieniaKarty:
   465                           	opt callstack 0
   466  0000D4                     	ds	2
   467                           
   468                           	psect	dataBANK0
   469  0000D6                     __pdataBANK0:
   470                           	opt callstack 0
   471  0000D6                     MOC_Frame_Counter@zeta:
   472                           	opt callstack 0
   473  0000D6                     	ds	2
   474                           
   475                           	psect	bssBIGRAM
   476  0000DA                     __pbssBIGRAM:
   477                           	opt callstack 0
   478  0000DA                     _wartosciSasiada:
   479                           	opt callstack 0
   480  0000DA                     	ds	544
   481                           
   482                           	psect	cstackBANK0
   483  0000D8                     __pcstackBANK0:
   484                           	opt callstack 0
   485  0000D8                     main@adr:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x0
   489  0000D8                     	ds	2
   490                           
   491                           	psect	cstackCOMRAM
   492  000001                     __pcstackCOMRAM:
   493                           	opt callstack 0
   494  000001                     TMR1_Timer_reset@t1L:
   495                           	opt callstack 0
   496  000001                     i1TMR1_Update_flag_Set@a:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x0
   500  000001                     	ds	1
   501  000002                     TMR1_Timer_reset@t1H:
   502                           	opt callstack 0
   503                           
   504                           ; 1 bytes @ 0x1
   505  000002                     	ds	1
   506  000003                     ??_ISR_low:
   507  000003                     
   508                           ; 1 bytes @ 0x2
   509  000003                     	ds	3
   510  000006                     ??_CAN_Setup:
   511  000006                     ?_FLASH_Read:
   512                           	opt callstack 0
   513  000006                     ?_TMR1_Update_flag_Get:
   514                           	opt callstack 0
   515  000006                     ?_LED_Right:
   516                           	opt callstack 0
   517  000006                     ?_LED_Left:
   518                           	opt callstack 0
   519  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   520                           	opt callstack 0
   521  000006                     ?_MOC_Frame_Counter:
   522                           	opt callstack 0
   523  000006                     ?_MOC_Aktualna_Temperatura:
   524                           	opt callstack 0
   525  000006                     ?_MOC_NOTWORK:
   526                           	opt callstack 0
   527  000006                     ?_IsInNeighbors:
   528                           	opt callstack 0
   529  000006                     ?_MOCK_PrzyspieszenieX:
   530                           	opt callstack 0
   531  000006                     ?_MOCK_PrzyspieszenieY:
   532                           	opt callstack 0
   533  000006                     ?_MOCK_PrzyspieszenieZ:
   534                           	opt callstack 0
   535  000006                     ?_MOCK_Klikniecie_Spadek:
   536                           	opt callstack 0
   537  000006                     ?___awdiv:
   538                           	opt callstack 0
   539  000006                     ?___lwdiv:
   540                           	opt callstack 0
   541  000006                     LOCK_Set@k:
   542                           	opt callstack 0
   543  000006                     CAN_MoveBuffIntoFrame@Ram:
   544                           	opt callstack 0
   545  000006                     CAN_GenID@message:
   546                           	opt callstack 0
   547  000006                     LED_Right@a:
   548                           	opt callstack 0
   549  000006                     LED_Left@a:
   550                           	opt callstack 0
   551  000006                     LED_Control@diode:
   552                           	opt callstack 0
   553  000006                     TMR1_Update_flag_Set@a:
   554                           	opt callstack 0
   555  000006                     IsInNeighbors@message_adress:
   556                           	opt callstack 0
   557  000006                     FRAME_ExcitationValue@message:
   558                           	opt callstack 0
   559  000006                     FRAME_ExcitationMultiplier@message:
   560                           	opt callstack 0
   561  000006                     FRAME_AveragingTimes@message:
   562                           	opt callstack 0
   563  000006                     FRAME_AxisStatus@message:
   564                           	opt callstack 0
   565  000006                     FRAME_DataUpdateAndChangeOption@message:
   566                           	opt callstack 0
   567  000006                     FRAME_MapPosition@message:
   568                           	opt callstack 0
   569  000006                     FRAME_SoftwareVersion@message:
   570                           	opt callstack 0
   571  000006                     FRAME_AnalogValue@message:
   572                           	opt callstack 0
   573  000006                     FRAME_PrzypisanieDokarty@message:
   574                           	opt callstack 0
   575  000006                     FRAME_AdressOfNeighbors@message:
   576                           	opt callstack 0
   577  000006                     NVMalloc@size:
   578                           	opt callstack 0
   579  000006                     ReadfromEEPROM@Address:
   580                           	opt callstack 0
   581  000006                     WritetoEEPROM@Address:
   582                           	opt callstack 0
   583  000006                     ___awdiv@dividend:
   584                           	opt callstack 0
   585  000006                     ___lwdiv@dividend:
   586                           	opt callstack 0
   587  000006                     FLASH_Read@addr:
   588                           	opt callstack 0
   589                           
   590                           ; 4 bytes @ 0x5
   591  000006                     	ds	2
   592  000008                     ??_LED_Right:
   593  000008                     ??_FRAME_DataUpdateAndChangeOption:
   594  000008                     ??_FRAME_PrzypisanieDokarty:
   595  000008                     CAN_GenID@frameID:
   596                           	opt callstack 0
   597  000008                     WritetoEEPROM@Data:
   598                           	opt callstack 0
   599  000008                     CAN_MoveBuffIntoFrame@Buf:
   600                           	opt callstack 0
   601  000008                     LED_Left@b:
   602                           	opt callstack 0
   603  000008                     FRAME_SensorExcitationStatus@message:
   604                           	opt callstack 0
   605  000008                     FRAME_AccelerometerStatus@message:
   606                           	opt callstack 0
   607  000008                     FRAME_AnalogValue@set:
   608                           	opt callstack 0
   609  000008                     FRAME_AdressOfNeighbors@nrRamki:
   610                           	opt callstack 0
   611  000008                     NVMalloc@location:
   612                           	opt callstack 0
   613  000008                     NVMRead@dest:
   614                           	opt callstack 0
   615  000008                     ___awdiv@divisor:
   616                           	opt callstack 0
   617  000008                     ___lwdiv@divisor:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x7
   621  000008                     	ds	1
   622  000009                     ??_CAN_GenID:
   623  000009                     FRAME_ExcitationMultiplier@i:
   624                           	opt callstack 0
   625  000009                     NVMWrite@source:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x8
   629  000009                     	ds	1
   630  00000A                     ??_FRAME_SensorExcitationStatus:
   631  00000A                     ??_FRAME_AdressOfNeighbors:
   632  00000A                     ??_NVMalloc:
   633  00000A                     CAN_MoveBuffIntoFrame@i:
   634                           	opt callstack 0
   635  00000A                     LED_Control@color:
   636                           	opt callstack 0
   637  00000A                     ___awdiv@counter:
   638                           	opt callstack 0
   639  00000A                     ___lwdiv@counter:
   640                           	opt callstack 0
   641  00000A                     LED_Right@b:
   642                           	opt callstack 0
   643  00000A                     NVMRead@addr:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x9
   647  00000A                     	ds	1
   648  00000B                     ___awdiv@sign:
   649                           	opt callstack 0
   650  00000B                     CAN_SendFrame@message:
   651                           	opt callstack 0
   652  00000B                     NVMWrite@addr:
   653                           	opt callstack 0
   654  00000B                     ___lwdiv@quotient:
   655                           	opt callstack 0
   656                           
   657                           ; 2 bytes @ 0xA
   658  00000B                     	ds	1
   659  00000C                     FRAME_SensorExcitationStatus@tru:
   660                           	opt callstack 0
   661  00000C                     NVMRead@count:
   662                           	opt callstack 0
   663  00000C                     ___awdiv@quotient:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0xB
   667  00000C                     	ds	1
   668  00000D                     ??_CAN_SendFrame:
   669  00000D                     LED_Light_Pos@pos:
   670                           	opt callstack 0
   671  00000D                     FRAME_Plot@message:
   672                           	opt callstack 0
   673  00000D                     NVMWrite@count:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0xC
   677  00000D                     	ds	1
   678  00000E                     ??_ReadDataToEEPROM:
   679  00000E                     NVMInit@result:
   680                           	opt callstack 0
   681  00000E                     CAN_TakeFrame@message:
   682                           	opt callstack 0
   683  00000E                     FRAME_AdressOfNeighbors@kier:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0xD
   687  00000E                     	ds	1
   688  00000F                     ??_WriteDataToEEPROM:
   689  00000F                     ??_FRAME_Plot:
   690  00000F                     LED_Light_Pos@fulfillment:
   691                           	opt callstack 0
   692                           
   693                           ; 2 bytes @ 0xE
   694  00000F                     	ds	1
   695  000010                     ??_CAN_TakeFrame:
   696                           
   697                           ; 1 bytes @ 0xF
   698  000010                     	ds	1
   699  000011                     LED_Light_Pos@color:
   700                           	opt callstack 0
   701  000011                     FRAME_DeviceReset@message:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x10
   705  000011                     	ds	1
   706  000012                     CAN_TakeFrame@tempCON:
   707                           	opt callstack 0
   708  000012                     LED_Light_Pos@LED_array:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x11
   712  000012                     	ds	1
   713  000013                     CAN_TakeFrame@k:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x12
   717  000013                     	ds	1
   718  000014                     LED_Light_Pos@pos2:
   719                           	opt callstack 0
   720  000014                     FRAME_HandleCanFrame@message:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x13
   724  000014                     	ds	2
   725  000016                     ??_FRAME_HandleCanFrame:
   726  000016                     LED_Light_Pos@flage:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0x15
   730  000016                     	ds	2
   731  000018                     
   732                           ; 1 bytes @ 0x17
   733  000018                     	ds	1
   734  000019                     FRAME_HandleCanFrame@ident:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x18
   738  000019                     	ds	2
   739  00001B                     FRAME_HandleCanFrame@identyfikator:
   740                           	opt callstack 0
   741                           
   742                           ; 1 bytes @ 0x1A
   743  00001B                     	ds	1
   744  00001C                     TRM_DataTransmition@canMessage:
   745                           	opt callstack 0
   746                           
   747                           ; 17 bytes @ 0x1B
   748  00001C                     	ds	17
   749  00002D                     
   750                           ; 1 bytes @ 0x2C
   751 ;;
   752 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   753 ;;
   754 ;; *************** function _main *****************
   755 ;; Defined at:
   756 ;;		line 103 in file "main.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  adr             2    0[BANK0 ] int 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   773 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   774 ;;Total ram usage:        2 bytes
   775 ;; Hardware stack levels required when called:    9
   776 ;; This function calls:
   777 ;;		_FLASH_Read
   778 ;;		_INI_All
   779 ;;		_LED_Update
   780 ;;		_RADAR_Use
   781 ;;		_TMR1_Update_flag_Get
   782 ;;		_TMR1_Update_flag_Set
   783 ;;		_TRM_DataTransmition
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text0
   790  0020C6                     __ptext0:
   791                           	opt callstack 0
   792  0020C6                     _main:
   793                           	opt callstack 22
   794                           
   795                           ;main.c: 106: int adr = FLASH_Read(0x200000);
   796                           
   797                           ;incstack = 0
   798  0020C6  0E00               	movlw	0
   799  0020C8  6E06               	movwf	FLASH_Read@addr,c
   800  0020CA  0E00               	movlw	0
   801  0020CC  6E07               	movwf	FLASH_Read@addr+1,c
   802  0020CE  0E20               	movlw	32
   803  0020D0  6E08               	movwf	FLASH_Read@addr+2,c
   804  0020D2  0E00               	movlw	0
   805  0020D4  6E09               	movwf	FLASH_Read@addr+3,c
   806  0020D6  ECA7  F014         	call	_FLASH_Read	;wreg free
   807  0020DA  C006  F0D8         	movff	?_FLASH_Read,main@adr
   808  0020DE  C007  F0D9         	movff	?_FLASH_Read+1,main@adr+1
   809                           
   810                           ;main.c: 107: adr |= FLASH_Read(0x200001)<<8;
   811  0020E2  0E01               	movlw	1
   812  0020E4  6E06               	movwf	FLASH_Read@addr,c
   813  0020E6  0E00               	movlw	0
   814  0020E8  6E07               	movwf	FLASH_Read@addr+1,c
   815  0020EA  0E20               	movlw	32
   816  0020EC  6E08               	movwf	FLASH_Read@addr+2,c
   817  0020EE  0E00               	movlw	0
   818  0020F0  6E09               	movwf	FLASH_Read@addr+3,c
   819  0020F2  ECA7  F014         	call	_FLASH_Read	;wreg free
   820  0020F6  C006  F007         	movff	?_FLASH_Read,?_FLASH_Read+1
   821  0020FA  6A06               	clrf	?_FLASH_Read,c
   822  0020FC  5006               	movf	?_FLASH_Read,w,c
   823  0020FE  0100               	movlb	0	; () banked
   824  002100  13D8               	iorwf	main@adr& (0+255),f,b
   825  002102  5007               	movf	?_FLASH_Read+1,w,c
   826  002104  13D9               	iorwf	(main@adr+1)& (0+255),f,b
   827                           
   828                           ; BSR set to: 0
   829                           ;main.c: 117: DaneCan.adresCAN = adr;
   830  002106  C0D8  F02F         	movff	main@adr,_DaneCan+2
   831  00210A  C0D9  F030         	movff	main@adr+1,_DaneCan+3
   832                           
   833                           ; BSR set to: 0
   834                           ;main.c: 118: INI_All();
   835  00210E  EC6B  F014         	call	_INI_All	;wreg free
   836                           
   837                           ;main.c: 120: RCON = 0xFF;
   838  002112  68D0               	setf	4048,c	;volatile
   839  002114                     l5083:
   840                           
   841                           ;main.c: 123: {;main.c: 124: if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   842  002114  0100               	movlb	0	; () banked
   843  002116  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   844                           
   845                           ; BSR set to: 0
   846                           ;main.c: 125: {;main.c: 126: DetectorLedRadar.Flags.obsluzWeWy = 0;
   847  002118  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   848                           
   849                           ; BSR set to: 0
   850                           ;main.c: 128: };main.c: 130: if(TMR1_Update_flag_Get()==1)
   851  00211A  ECFA  F014         	call	_TMR1_Update_flag_Get	;wreg free
   852  00211E  0406               	decf	?_TMR1_Update_flag_Get,w,c
   853  002120  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   854  002122  A4D8               	btfss	status,2,c
   855  002124  D008               	goto	l5093
   856                           
   857                           ;main.c: 131: {;main.c: 132: LED_Update();
   858  002126  ECA1  F010         	call	_LED_Update	;wreg free
   859                           
   860                           ;main.c: 133: TMR1_Update_flag_Set(0);
   861  00212A  0E00               	movlw	0
   862  00212C  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   863  00212E  0E00               	movlw	0
   864  002130  6E06               	movwf	TMR1_Update_flag_Set@a,c
   865  002132  ECF5  F014         	call	_TMR1_Update_flag_Set	;wreg free
   866  002136                     l5093:
   867                           
   868                           ;main.c: 135: };main.c: 138: TRM_DataTransmition();
   869  002136  ECF8  F012         	call	_TRM_DataTransmition	;wreg free
   870                           
   871                           ;main.c: 139: RADAR_Use();
   872  00213A  ECD1  F014         	call	_RADAR_Use	;wreg free
   873  00213E  0004               	clrwdt		;# 
   874                           
   875                           ;main.c: 141: }
   876  002140  D7E9               	goto	l5083
   877  002142                     __end_of_main:
   878                           	opt callstack 0
   879                           
   880 ;; *************** function _TRM_DataTransmition *****************
   881 ;; Defined at:
   882 ;;		line 19 in file "TRM.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  canMessage     17   27[COMRAM] struct .
   887 ;;  i               1    0        unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   898 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   900 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   901 ;;Total ram usage:       17 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    8
   904 ;; This function calls:
   905 ;;		_CAN_TakeFrame
   906 ;;		_FRAME_HandleCanFrame
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text1
   913  0025F0                     __ptext1:
   914                           	opt callstack 0
   915  0025F0                     _TRM_DataTransmition:
   916                           	opt callstack 22
   917                           
   918                           ;TRM.c: 21: static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22: BYTE i;;TRM.c: 23: mID
      +                           canMessage;;TRM.c: 26: if(DaneCan.Flags.wyslijRamkeStanu)
   919                           
   920                           ;incstack = 0
   921  0025F0  A02D               	btfss	_DaneCan,0,c
   922  0025F2  D013               	goto	l5059
   923                           
   924                           ;TRM.c: 27: {;TRM.c: 29: canMessage.message_type = 0x02;
   925  0025F4  0E02               	movlw	2
   926  0025F6  6E1D               	movwf	TRM_DataTransmition@canMessage+1,c
   927                           
   928                           ;TRM.c: 30: canMessage.id.Val = 0;
   929  0025F8  0E00               	movlw	0
   930  0025FA  6E20               	movwf	TRM_DataTransmition@canMessage+4,c
   931  0025FC  0E00               	movlw	0
   932  0025FE  6E21               	movwf	TRM_DataTransmition@canMessage+5,c
   933  002600  0E00               	movlw	0
   934  002602  6E22               	movwf	TRM_DataTransmition@canMessage+6,c
   935  002604  0E00               	movlw	0
   936  002606  6E23               	movwf	TRM_DataTransmition@canMessage+7,c
   937                           
   938                           ;TRM.c: 31: canMessage.id.v[2] = 0x01 *4;
   939  002608  0E04               	movlw	4
   940  00260A  6E22               	movwf	TRM_DataTransmition@canMessage+6,c
   941                           
   942                           ;TRM.c: 32: FRAME_HandleCanFrame(&canMessage);
   943  00260C  0E1C               	movlw	low TRM_DataTransmition@canMessage
   944  00260E  6E14               	movwf	FRAME_HandleCanFrame@message,c
   945  002610  0E00               	movlw	high TRM_DataTransmition@canMessage
   946  002612  6E15               	movwf	FRAME_HandleCanFrame@message+1,c
   947  002614  EC36  F00B         	call	_FRAME_HandleCanFrame	;wreg free
   948                           
   949                           ;TRM.c: 49: DaneCan.Flags.wyslijRamkeStanu = 0;
   950  002618  902D               	bcf	_DaneCan,0,c
   951  00261A                     l5059:
   952                           
   953                           ;TRM.c: 56: };TRM.c: 59: if(CAN_TakeFrame(&canMessage))
   954  00261A  0E1C               	movlw	low TRM_DataTransmition@canMessage
   955  00261C  6E0E               	movwf	CAN_TakeFrame@message,c
   956  00261E  0E00               	movlw	high TRM_DataTransmition@canMessage
   957  002620  6E0F               	movwf	CAN_TakeFrame@message+1,c
   958  002622  ECE6  F008         	call	_CAN_TakeFrame	;wreg free
   959  002626  0900               	iorlw	0
   960  002628  B4D8               	btfsc	status,2,c
   961  00262A  0012               	return	
   962                           
   963                           ;TRM.c: 64: {;TRM.c: 66: FRAME_HandleCanFrame(&canMessage);
   964  00262C  0E1C               	movlw	low TRM_DataTransmition@canMessage
   965  00262E  6E14               	movwf	FRAME_HandleCanFrame@message,c
   966  002630  0E00               	movlw	high TRM_DataTransmition@canMessage
   967  002632  6E15               	movwf	FRAME_HandleCanFrame@message+1,c
   968  002634  EC36  F00B         	call	_FRAME_HandleCanFrame	;wreg free
   969                           
   970                           ;TRM.c: 67: }
   971  002638  0012               	return		;funcret
   972  00263A                     __end_of_TRM_DataTransmition:
   973                           	opt callstack 0
   974                           
   975 ;; *************** function _FRAME_HandleCanFrame *****************
   976 ;; Defined at:
   977 ;;		line 842 in file "FRAME.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  message         2   19[COMRAM] PTR struct .
   980 ;;		 -> TRM_DataTransmition@canMessage(17), 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  ident           2   24[COMRAM] unsigned short 
   983 ;;  alfa            2    0        int 
   984 ;;  identyfikato    1   26[COMRAM] unsigned char 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   995 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   997 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;Total ram usage:        8 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    7
  1001 ;; This function calls:
  1002 ;;		_CAN_GenID
  1003 ;;		_CAN_SendFrame
  1004 ;;		_FRAME_AccelerometerStatus
  1005 ;;		_FRAME_AdressOfNeighbors
  1006 ;;		_FRAME_AnalogValue
  1007 ;;		_FRAME_AveragingTimes
  1008 ;;		_FRAME_AxisStatus
  1009 ;;		_FRAME_DeviceReset
  1010 ;;		_FRAME_ExcitationMultiplier
  1011 ;;		_FRAME_ExcitationValue
  1012 ;;		_FRAME_MapPosition
  1013 ;;		_FRAME_Plot
  1014 ;;		_FRAME_PrzypisanieDokarty
  1015 ;;		_FRAME_SensorExcitationStatus
  1016 ;;		_FRAME_SoftwareVersion
  1017 ;;		_LED_Error
  1018 ;;		___awdiv
  1019 ;; This function is called by:
  1020 ;;		_TRM_DataTransmition
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text2
  1025  00166C                     __ptext2:
  1026                           	opt callstack 0
  1027  00166C                     _FRAME_HandleCanFrame:
  1028                           	opt callstack 22
  1029                           
  1030                           ;FRAME.c: 844: BYTE identyfikator = (BYTE) message->id.v[2]/4;
  1031                           
  1032                           ;incstack = 0
  1033  00166C  EE20 F006          	lfsr	2,6
  1034  001670  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1035  001672  26D9               	addwf	fsr2l,f,c
  1036  001674  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1037  001676  22DA               	addwfc	fsr2h,f,c
  1038  001678  50DF               	movf	indf2,w,c
  1039  00167A  6E16               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1040  00167C  5016               	movf	??_FRAME_HandleCanFrame,w,c
  1041  00167E  6E06               	movwf	___awdiv@dividend,c
  1042  001680  6A07               	clrf	___awdiv@dividend+1,c
  1043  001682  0E00               	movlw	0
  1044  001684  6E09               	movwf	___awdiv@divisor+1,c
  1045  001686  0E04               	movlw	4
  1046  001688  6E08               	movwf	___awdiv@divisor,c
  1047  00168A  EC21  F010         	call	___awdiv	;wreg free
  1048  00168E  5006               	movf	?___awdiv,w,c
  1049  001690  6E1B               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1050                           
  1051                           ;FRAME.c: 847: if(identyfikator != 0x01)
  1052  001692  041B               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1053  001694  B4D8               	btfsc	status,2,c
  1054  001696  D074               	goto	l4989
  1055                           
  1056                           ;FRAME.c: 848: {;FRAME.c: 849: WORD ident = identyfikator;
  1057  001698  C01B  F019         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1058  00169C  6A1A               	clrf	FRAME_HandleCanFrame@ident+1,c
  1059  00169E  D070               	goto	l4989
  1060  0016A0                     l4959:
  1061                           
  1062                           ;FRAME.c: 856: FRAME_SensorExcitationStatus(message);
  1063  0016A0  C014  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1064  0016A4  C015  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1065  0016A8  EC38  F00E         	call	_FRAME_SensorExcitationStatus	;wreg free
  1066                           
  1067                           ;FRAME.c: 857: break;
  1068  0016AC  D097               	goto	l4991
  1069  0016AE                     l4961:
  1070                           
  1071                           ;FRAME.c: 859: FRAME_AccelerometerStatus(message);
  1072  0016AE  C014  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1073  0016B2  C015  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1074  0016B6  EC1A  F011         	call	_FRAME_AccelerometerStatus	;wreg free
  1075                           
  1076                           ;FRAME.c: 860: break;
  1077  0016BA  D090               	goto	l4991
  1078  0016BC                     l4963:
  1079                           
  1080                           ;FRAME.c: 862: FRAME_ExcitationValue(message);
  1081  0016BC  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1082  0016C0  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1083  0016C4  EC5B  F013         	call	_FRAME_ExcitationValue	;wreg free
  1084                           
  1085                           ;FRAME.c: 863: break;
  1086  0016C8  D089               	goto	l4991
  1087  0016CA                     l4965:
  1088                           
  1089                           ;FRAME.c: 865: FRAME_ExcitationMultiplier(message);
  1090  0016CA  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1091  0016CE  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1092  0016D2  ECAB  F012         	call	_FRAME_ExcitationMultiplier	;wreg free
  1093                           
  1094                           ;FRAME.c: 866: break;
  1095  0016D6  D082               	goto	l4991
  1096  0016D8                     l4967:
  1097                           
  1098                           ;FRAME.c: 868: FRAME_AveragingTimes(message);
  1099  0016D8  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1100  0016DC  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1101  0016E0  ECAC  F013         	call	_FRAME_AveragingTimes	;wreg free
  1102                           
  1103                           ;FRAME.c: 869: break;
  1104  0016E4  D07B               	goto	l4991
  1105  0016E6                     l4969:
  1106                           
  1107                           ;FRAME.c: 871: FRAME_AxisStatus(message);
  1108  0016E6  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1109  0016EA  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1110  0016EE  EC91  F013         	call	_FRAME_AxisStatus	;wreg free
  1111                           
  1112                           ;FRAME.c: 872: break;
  1113  0016F2  D074               	goto	l4991
  1114  0016F4                     l4971:
  1115                           
  1116                           ;FRAME.c: 874: FRAME_DeviceReset(message);
  1117  0016F4  C014  F011         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1118  0016F8  C015  F012         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1119  0016FC  EC94  F00D         	call	_FRAME_DeviceReset	;wreg free
  1120                           
  1121                           ;FRAME.c: 875: break;
  1122  001700  D06D               	goto	l4991
  1123  001702                     l4973:
  1124                           
  1125                           ;FRAME.c: 877: FRAME_Plot(message);
  1126  001702  C014  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1127  001706  C015  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1128  00170A  EC56  F012         	call	_FRAME_Plot	;wreg free
  1129                           
  1130                           ;FRAME.c: 878: break;
  1131  00170E  D066               	goto	l4991
  1132  001710                     l4975:
  1133                           
  1134                           ;FRAME.c: 880: FRAME_MapPosition(message);
  1135  001710  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1136  001714  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1137  001718  EC12  F015         	call	_FRAME_MapPosition	;wreg free
  1138                           
  1139                           ;FRAME.c: 881: break;
  1140  00171C  D05F               	goto	l4991
  1141  00171E                     l4977:
  1142                           
  1143                           ;FRAME.c: 883: FRAME_SoftwareVersion(message);
  1144  00171E  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1145  001722  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1146  001726  ECC8  F011         	call	_FRAME_SoftwareVersion	;wreg free
  1147                           
  1148                           ;FRAME.c: 884: break;
  1149  00172A  D058               	goto	l4991
  1150  00172C                     l4979:
  1151                           
  1152                           ;FRAME.c: 886: case 0x0D:;FRAME.c: 887: FRAME_AnalogValue(message, identyfikator - 0x0C)
      +                          ;
  1153  00172C  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1154  001730  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1155  001734  0EF4               	movlw	244
  1156  001736  241B               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1157  001738  6E08               	movwf	FRAME_AnalogValue@set,c
  1158  00173A  6A09               	clrf	FRAME_AnalogValue@set+1,c
  1159  00173C  0EFF               	movlw	255
  1160  00173E  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
  1161  001740  EC13  F015         	call	_FRAME_AnalogValue	;wreg free
  1162                           
  1163                           ;FRAME.c: 888: break;
  1164  001744  D04B               	goto	l4991
  1165  001746                     l4981:
  1166                           
  1167                           ;FRAME.c: 890: FRAME_PrzypisanieDokarty(message);
  1168  001746  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1169  00174A  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1170  00174E  EC87  F00F         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1171                           
  1172                           ;FRAME.c: 891: break;
  1173  001752  D044               	goto	l4991
  1174  001754                     l4983:
  1175                           
  1176                           ;FRAME.c: 893: FRAME_AdressOfNeighbors(message,0x10);
  1177  001754  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1178  001758  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1179  00175C  0E00               	movlw	0
  1180  00175E  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1181  001760  0E10               	movlw	16
  1182  001762  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1183  001764  EC31  F006         	call	_FRAME_AdressOfNeighbors	;wreg free
  1184                           
  1185                           ;FRAME.c: 894: break;
  1186  001768  D039               	goto	l4991
  1187  00176A                     l4985:
  1188                           
  1189                           ;FRAME.c: 896: FRAME_AdressOfNeighbors(message,0x11);
  1190  00176A  C014  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1191  00176E  C015  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1192  001772  0E00               	movlw	0
  1193  001774  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1194  001776  0E11               	movlw	17
  1195  001778  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1196  00177A  EC31  F006         	call	_FRAME_AdressOfNeighbors	;wreg free
  1197                           
  1198                           ;FRAME.c: 897: break;
  1199  00177E  D02E               	goto	l4991
  1200  001780                     l4989:
  1201  001780  501B               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1202                           
  1203                           ; Switch size 1, requested type "simple"
  1204                           ; Number of cases is 15, Range of values is 1 to 17
  1205                           ; switch strategies available:
  1206                           ; Name         Instructions Cycles
  1207                           ; simple_byte           46    24 (average)
  1208                           ;	Chosen strategy is simple_byte
  1209  001782  0A01               	xorlw	1	; case 1
  1210  001784  B4D8               	btfsc	status,2,c
  1211  001786  D78C               	goto	l4959
  1212  001788  0A03               	xorlw	3	; case 2
  1213  00178A  B4D8               	btfsc	status,2,c
  1214  00178C  D790               	goto	l4961
  1215  00178E  0A01               	xorlw	1	; case 3
  1216  001790  B4D8               	btfsc	status,2,c
  1217  001792  D794               	goto	l4963
  1218  001794  0A07               	xorlw	7	; case 4
  1219  001796  B4D8               	btfsc	status,2,c
  1220  001798  D798               	goto	l4965
  1221  00179A  0A01               	xorlw	1	; case 5
  1222  00179C  B4D8               	btfsc	status,2,c
  1223  00179E  D79C               	goto	l4967
  1224  0017A0  0A03               	xorlw	3	; case 6
  1225  0017A2  B4D8               	btfsc	status,2,c
  1226  0017A4  D7A0               	goto	l4969
  1227  0017A6  0A01               	xorlw	1	; case 7
  1228  0017A8  B4D8               	btfsc	status,2,c
  1229  0017AA  D7A4               	goto	l4971
  1230  0017AC  0A0E               	xorlw	14	; case 9
  1231  0017AE  B4D8               	btfsc	status,2,c
  1232  0017B0  D7A8               	goto	l4973
  1233  0017B2  0A03               	xorlw	3	; case 10
  1234  0017B4  B4D8               	btfsc	status,2,c
  1235  0017B6  D7AC               	goto	l4975
  1236  0017B8  0A01               	xorlw	1	; case 11
  1237  0017BA  B4D8               	btfsc	status,2,c
  1238  0017BC  D7B0               	goto	l4977
  1239  0017BE  0A07               	xorlw	7	; case 12
  1240  0017C0  B4D8               	btfsc	status,2,c
  1241  0017C2  D7B4               	goto	l4979
  1242  0017C4  0A01               	xorlw	1	; case 13
  1243  0017C6  B4D8               	btfsc	status,2,c
  1244  0017C8  D7B1               	goto	l4979
  1245  0017CA  0A02               	xorlw	2	; case 15
  1246  0017CC  B4D8               	btfsc	status,2,c
  1247  0017CE  D7BB               	goto	l4981
  1248  0017D0  0A1F               	xorlw	31	; case 16
  1249  0017D2  B4D8               	btfsc	status,2,c
  1250  0017D4  D7BF               	goto	l4983
  1251  0017D6  0A01               	xorlw	1	; case 17
  1252  0017D8  B4D8               	btfsc	status,2,c
  1253  0017DA  D7C7               	goto	l4985
  1254  0017DC                     l4991:
  1255                           
  1256                           ;FRAME.c: 906: if(message->message_type == 0x02)
  1257  0017DC  EE20 F001          	lfsr	2,1
  1258  0017E0  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1259  0017E2  26D9               	addwf	fsr2l,f,c
  1260  0017E4  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1261  0017E6  22DA               	addwfc	fsr2h,f,c
  1262  0017E8  0E02               	movlw	2
  1263  0017EA  18DE               	xorwf	postinc2,w,c
  1264  0017EC  A4D8               	btfss	status,2,c
  1265  0017EE  0012               	return	
  1266                           
  1267                           ;FRAME.c: 907: {;FRAME.c: 909: message->frame_type = 0x03;
  1268  0017F0  EE20 F002          	lfsr	2,2
  1269  0017F4  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1270  0017F6  26D9               	addwf	fsr2l,f,c
  1271  0017F8  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1272  0017FA  22DA               	addwfc	fsr2h,f,c
  1273  0017FC  0E03               	movlw	3
  1274  0017FE  6EDF               	movwf	indf2,c
  1275                           
  1276                           ;FRAME.c: 910: message->message_type = 0x01;
  1277  001800  EE20 F001          	lfsr	2,1
  1278  001804  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1279  001806  26D9               	addwf	fsr2l,f,c
  1280  001808  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1281  00180A  22DA               	addwfc	fsr2h,f,c
  1282  00180C  0E01               	movlw	1
  1283  00180E  6EDF               	movwf	indf2,c
  1284                           
  1285                           ;FRAME.c: 911: message->id.Val = 0;
  1286  001810  EE20 F004          	lfsr	2,4
  1287  001814  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1288  001816  26D9               	addwf	fsr2l,f,c
  1289  001818  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1290  00181A  22DA               	addwfc	fsr2h,f,c
  1291  00181C  6ADE               	clrf	postinc2,c
  1292  00181E  6ADE               	clrf	postinc2,c
  1293  001820  6ADE               	clrf	postinc2,c
  1294  001822  6ADD               	clrf	postdec2,c
  1295                           
  1296                           ;FRAME.c: 913: message->id.v[2] = identyfikator*4;
  1297  001824  501B               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1298  001826  0D04               	mullw	4
  1299  001828  EE20 F006          	lfsr	2,6
  1300  00182C  5014               	movf	FRAME_HandleCanFrame@message,w,c
  1301  00182E  26D9               	addwf	fsr2l,f,c
  1302  001830  5015               	movf	FRAME_HandleCanFrame@message+1,w,c
  1303  001832  22DA               	addwfc	fsr2h,f,c
  1304  001834  CFF3 FFDF          	movff	prodl,indf2
  1305                           
  1306                           ;FRAME.c: 914: CAN_GenID(message,identyfikator);
  1307  001838  C014  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1308  00183C  C015  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1309  001840  C01B  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1310  001844  ECDE  F010         	call	_CAN_GenID	;wreg free
  1311                           
  1312                           ;FRAME.c: 915: CAN_SendFrame(message);
  1313  001848  C014  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1314  00184C  C015  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1315  001850  EC32  F00C         	call	_CAN_SendFrame	;wreg free
  1316                           
  1317                           ;FRAME.c: 926: while(RXB0CONbits.FILHIT3)
  1318  001854  D004               	goto	l724
  1319  001856                     l725:
  1320                           
  1321                           ;FRAME.c: 927: {;FRAME.c: 928: if(TXB0CONbits.TXERR == 1){
  1322  001856  010F               	movlb	15	; () banked
  1323  001858  B940               	btfsc	64,4,b	;volatile
  1324                           
  1325                           ; BSR set to: 15
  1326                           ;FRAME.c: 929: LED_Error();
  1327  00185A  EC8C  F014         	call	_LED_Error	;wreg free
  1328  00185E                     l724:
  1329  00185E  A660               	btfss	3936,3,c	;volatile
  1330  001860  0012               	return	
  1331  001862  D7F9               	goto	l725
  1332  001864                     __end_of_FRAME_HandleCanFrame:
  1333                           	opt callstack 0
  1334                           
  1335 ;; *************** function _LED_Error *****************
  1336 ;; Defined at:
  1337 ;;		line 49 in file "LED.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2  366[None  ] unsigned int 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    4
  1358 ;; This function calls:
  1359 ;;		_LED_Control
  1360 ;; This function is called by:
  1361 ;;		_FRAME_HandleCanFrame
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text3
  1366  002918                     __ptext3:
  1367                           	opt callstack 0
  1368  002918                     _LED_Error:
  1369                           	opt callstack 24
  1370                           
  1371                           ;LED.c: 51: LED_Control(RED,0b1010101010);
  1372                           
  1373                           ;incstack = 0
  1374  002918  0E02               	movlw	2
  1375  00291A  6E07               	movwf	LED_Control@diode+1,c
  1376  00291C  0EAA               	movlw	170
  1377  00291E  6E06               	movwf	LED_Control@diode,c
  1378  002920  0E00               	movlw	0
  1379  002922  ECEB  F00C         	call	_LED_Control
  1380                           
  1381                           ;LED.c: 52: LED_Control(GREEN,0b0000000000);
  1382  002926  0E00               	movlw	0
  1383  002928  6E07               	movwf	LED_Control@diode+1,c
  1384  00292A  0E00               	movlw	0
  1385  00292C  6E06               	movwf	LED_Control@diode,c
  1386  00292E  0E01               	movlw	1
  1387  002930  ECEB  F00C         	call	_LED_Control
  1388  002934  0012               	return		;funcret
  1389  002936                     __end_of_LED_Error:
  1390                           	opt callstack 0
  1391                           
  1392 ;; *************** function _FRAME_SoftwareVersion *****************
  1393 ;; Defined at:
  1394 ;;		line 655 in file "FRAME.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  message         2    5[COMRAM] PTR struct .
  1397 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1412 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;Total ram usage:        3 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    3
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_FRAME_HandleCanFrame
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text4
  1424  002390                     __ptext4:
  1425                           	opt callstack 0
  1426  002390                     _FRAME_SoftwareVersion:
  1427                           	opt callstack 25
  1428                           
  1429                           ;FRAME.c: 658: if(message->message_type == 0x02)
  1430                           
  1431                           ;incstack = 0
  1432  002390  EE20 F001          	lfsr	2,1
  1433  002394  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1434  002396  26D9               	addwf	fsr2l,f,c
  1435  002398  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1436  00239A  22DA               	addwfc	fsr2h,f,c
  1437  00239C  0E02               	movlw	2
  1438  00239E  18DE               	xorwf	postinc2,w,c
  1439  0023A0  A4D8               	btfss	status,2,c
  1440  0023A2  0012               	return	
  1441                           
  1442                           ;FRAME.c: 659: {;FRAME.c: 660: message->data_length = 4;
  1443  0023A4  EE20 F010          	lfsr	2,16
  1444  0023A8  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1445  0023AA  26D9               	addwf	fsr2l,f,c
  1446  0023AC  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1447  0023AE  22DA               	addwfc	fsr2h,f,c
  1448  0023B0  0E04               	movlw	4
  1449  0023B2  6EDF               	movwf	indf2,c
  1450                           
  1451                           ;FRAME.c: 661: message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 >> 8);
  1452  0023B4  EE20 F008          	lfsr	2,8
  1453  0023B8  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1454  0023BA  26D9               	addwf	fsr2l,f,c
  1455  0023BC  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1456  0023BE  22DA               	addwfc	fsr2h,f,c
  1457  0023C0  5005               	movf	5,w,c
  1458  0023C2  6EDF               	movwf	indf2,c
  1459                           
  1460                           ;FRAME.c: 662: message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1461  0023C4  EE20 F009          	lfsr	2,9
  1462  0023C8  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1463  0023CA  26D9               	addwf	fsr2l,f,c
  1464  0023CC  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1465  0023CE  22DA               	addwfc	fsr2h,f,c
  1466  0023D0  C004 FFDF          	movff	4,indf2
  1467                           
  1468                           ;FRAME.c: 663: message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1469  0023D4  EE20 F00A          	lfsr	2,10
  1470  0023D8  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1471  0023DA  26D9               	addwf	fsr2l,f,c
  1472  0023DC  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1473  0023DE  22DA               	addwfc	fsr2h,f,c
  1474  0023E0  500B               	movf	11,w,c
  1475  0023E2  6EDF               	movwf	indf2,c
  1476                           
  1477                           ;FRAME.c: 664: message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1478  0023E4  EE20 F00B          	lfsr	2,11
  1479  0023E8  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1480  0023EA  26D9               	addwf	fsr2l,f,c
  1481  0023EC  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1482  0023EE  22DA               	addwfc	fsr2h,f,c
  1483  0023F0  C00A FFDF          	movff	10,indf2
  1484                           
  1485                           ;FRAME.c: 665: }
  1486  0023F4  0012               	return		;funcret
  1487  0023F6                     __end_of_FRAME_SoftwareVersion:
  1488                           	opt callstack 0
  1489                           
  1490 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1491 ;; Defined at:
  1492 ;;		line 58 in file "FRAME.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  message         2    7[COMRAM] PTR struct .
  1495 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  tru             2   11[COMRAM] unsigned int 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1510 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1511 ;;Total ram usage:        6 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    4
  1514 ;; This function calls:
  1515 ;;		_IsInNeighbors
  1516 ;;		_LOCK_Get
  1517 ;;		_LOCK_Set
  1518 ;;		_MOC_Aktualna_Temperatura
  1519 ;;		_MOC_Frame_Counter
  1520 ;;		_MOC_NOTWORK
  1521 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1522 ;; This function is called by:
  1523 ;;		_FRAME_HandleCanFrame
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text5
  1528  001C70                     __ptext5:
  1529                           	opt callstack 0
  1530  001C70                     _FRAME_SensorExcitationStatus:
  1531                           	opt callstack 24
  1532                           
  1533                           ;FRAME.c: 61: static UINT statwect = 0b00000000;;FRAME.c: 62: if(message->message_type =
      +                          = 0x02)
  1534                           
  1535                           ;incstack = 0
  1536  001C70  EE20 F001          	lfsr	2,1
  1537  001C74  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1538  001C76  26D9               	addwf	fsr2l,f,c
  1539  001C78  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1540  001C7A  22DA               	addwfc	fsr2h,f,c
  1541  001C7C  0E02               	movlw	2
  1542  001C7E  18DE               	xorwf	postinc2,w,c
  1543  001C80  A4D8               	btfss	status,2,c
  1544  001C82  D047               	goto	l4551
  1545                           
  1546                           ;FRAME.c: 63: {;FRAME.c: 64: message->data_length = 6;
  1547  001C84  EE20 F010          	lfsr	2,16
  1548  001C88  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1549  001C8A  26D9               	addwf	fsr2l,f,c
  1550  001C8C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1551  001C8E  22DA               	addwfc	fsr2h,f,c
  1552  001C90  0E06               	movlw	6
  1553  001C92  6EDF               	movwf	indf2,c
  1554                           
  1555                           ;FRAME.c: 70: message->data[0] = LOCK_Get();
  1556  001C94  EE20 F008          	lfsr	2,8
  1557  001C98  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1558  001C9A  26D9               	addwf	fsr2l,f,c
  1559  001C9C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1560  001C9E  22DA               	addwfc	fsr2h,f,c
  1561  001CA0  EC0F  F015         	call	_LOCK_Get	;wreg free
  1562  001CA4  6EDF               	movwf	indf2,c
  1563                           
  1564                           ;FRAME.c: 71: message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1565  001CA6  EE20 F009          	lfsr	2,9
  1566  001CAA  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1567  001CAC  26D9               	addwf	fsr2l,f,c
  1568  001CAE  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1569  001CB0  22DA               	addwfc	fsr2h,f,c
  1570  001CB2  ECD7  F014         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1571  001CB6  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1572  001CBA  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1573  001CBC  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1574  001CBE  6EDF               	movwf	indf2,c
  1575                           
  1576                           ;FRAME.c: 72: message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1577  001CC0  EE20 F00A          	lfsr	2,10
  1578  001CC4  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1579  001CC6  26D9               	addwf	fsr2l,f,c
  1580  001CC8  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1581  001CCA  22DA               	addwfc	fsr2h,f,c
  1582  001CCC  ECD7  F014         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1583  001CD0  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1584  001CD2  6EDF               	movwf	indf2,c
  1585                           
  1586                           ;FRAME.c: 73: message->data[3] = MOC_Frame_Counter();
  1587  001CD4  EE20 F00B          	lfsr	2,11
  1588  001CD8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1589  001CDA  26D9               	addwf	fsr2l,f,c
  1590  001CDC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1591  001CDE  22DA               	addwfc	fsr2h,f,c
  1592  001CE0  ECBB  F014         	call	_MOC_Frame_Counter	;wreg free
  1593  001CE4  5006               	movf	?_MOC_Frame_Counter,w,c
  1594  001CE6  6EDF               	movwf	indf2,c
  1595                           
  1596                           ;FRAME.c: 74: message->data[4] = MOC_Aktualna_Temperatura();
  1597  001CE8  EE20 F00C          	lfsr	2,12
  1598  001CEC  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1599  001CEE  26D9               	addwf	fsr2l,f,c
  1600  001CF0  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1601  001CF2  22DA               	addwfc	fsr2h,f,c
  1602  001CF4  ECDC  F014         	call	_MOC_Aktualna_Temperatura	;wreg free
  1603  001CF8  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1604  001CFA  6EDF               	movwf	indf2,c
  1605                           
  1606                           ;FRAME.c: 75: message->data[5] = MOC_NOTWORK();
  1607  001CFC  EE20 F00D          	lfsr	2,13
  1608  001D00  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1609  001D02  26D9               	addwf	fsr2l,f,c
  1610  001D04  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1611  001D06  22DA               	addwfc	fsr2h,f,c
  1612  001D08  EC04  F015         	call	_MOC_NOTWORK	;wreg free
  1613  001D0C  5006               	movf	?_MOC_NOTWORK,w,c
  1614  001D0E  6EDF               	movwf	indf2,c
  1615                           
  1616                           ;FRAME.c: 85: }
  1617  001D10  0012               	return	
  1618  001D12                     l4551:
  1619                           
  1620                           ;FRAME.c: 86: else;FRAME.c: 87: {;FRAME.c: 89: UINT tru = IsInNeighbors(message->id.w[0]
      +                          );
  1621  001D12  EE20 F004          	lfsr	2,4
  1622  001D16  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1623  001D18  26D9               	addwf	fsr2l,f,c
  1624  001D1A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1625  001D1C  22DA               	addwfc	fsr2h,f,c
  1626  001D1E  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1627  001D22  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1628  001D26  ECCA  F00E         	call	_IsInNeighbors	;wreg free
  1629  001D2A  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1630  001D2E  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1631                           
  1632                           ;FRAME.c: 92: if(message->data[0]==0)
  1633  001D32  EE20 F008          	lfsr	2,8
  1634  001D36  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1635  001D38  26D9               	addwf	fsr2l,f,c
  1636  001D3A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1637  001D3C  22DA               	addwfc	fsr2h,f,c
  1638  001D3E  50DF               	movf	indf2,w,c
  1639  001D40  A4D8               	btfss	status,2,c
  1640  001D42  D00A               	goto	l4557
  1641                           
  1642                           ;FRAME.c: 93: {;FRAME.c: 95: statwect = statwect &( ~tru );
  1643  001D44  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1644  001D46  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1645  001D48  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1646  001D4A  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1647  001D4C  5033               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1648  001D4E  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1649  001D50  6E33               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1650  001D52  5034               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1651  001D54  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1652  001D56  D005               	goto	L1
  1653  001D58                     l4557:
  1654                           
  1655                           ;FRAME.c: 97: else;FRAME.c: 98: {;FRAME.c: 99: statwect = statwect| tru;
  1656  001D58  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1657  001D5A  1033               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1658  001D5C  6E33               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1659  001D5E  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1660  001D60  1034               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1661  001D62                     L1:
  1662  001D62  6E34               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1663                           
  1664                           ;FRAME.c: 100: };FRAME.c: 102: if(statwect>0)
  1665  001D64  5033               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1666  001D66  1034               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1667  001D68  B4D8               	btfsc	status,2,c
  1668  001D6A  D00A               	goto	l4565
  1669                           
  1670                           ;FRAME.c: 103: {;FRAME.c: 104: if(1 != LOCK_Get())
  1671  001D6C  EC0F  F015         	call	_LOCK_Get	;wreg free
  1672  001D70  06E8               	decf	wreg,f,c
  1673  001D72  B4D8               	btfsc	status,2,c
  1674  001D74  0012               	return	
  1675                           
  1676                           ;FRAME.c: 105: {;FRAME.c: 106: DaneCan.Flags.wyslijRamkeStanu = 1;
  1677  001D76  802D               	bsf	_DaneCan,0,c
  1678                           
  1679                           ;FRAME.c: 107: LOCK_Set(1);
  1680  001D78  0E01               	movlw	1
  1681  001D7A  EC08  F015         	call	_LOCK_Set
  1682  001D7E  0012               	return	
  1683  001D80                     l4565:
  1684                           
  1685                           ;FRAME.c: 111: else;FRAME.c: 112: {;FRAME.c: 114: if(1 == LOCK_Get())
  1686  001D80  EC0F  F015         	call	_LOCK_Get	;wreg free
  1687  001D84  06E8               	decf	wreg,f,c
  1688  001D86  A4D8               	btfss	status,2,c
  1689  001D88  0012               	return	
  1690                           
  1691                           ;FRAME.c: 115: {;FRAME.c: 116: DaneCan.Flags.wyslijRamkeStanu = 1;
  1692  001D8A  802D               	bsf	_DaneCan,0,c
  1693                           
  1694                           ;FRAME.c: 117: LOCK_Set(0);
  1695  001D8C  0E00               	movlw	0
  1696  001D8E  EC08  F015         	call	_LOCK_Set
  1697  001D92  0012               	return		;funcret
  1698  001D94                     __end_of_FRAME_SensorExcitationStatus:
  1699                           	opt callstack 0
  1700                           
  1701 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1702 ;; Defined at:
  1703 ;;		line 34 in file "MOC_Funct.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  2    5[COMRAM] unsigned int 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1721 ;;Total ram usage:        2 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    3
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_FRAME_SensorExcitationStatus
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text6
  1732  0029AE                     __ptext6:
  1733                           	opt callstack 0
  1734  0029AE                     _MOC_Wynikowa_wartosc_roznicowa:
  1735                           	opt callstack 24
  1736                           
  1737                           ;MOC_Funct.c: 36: return 0x0220;
  1738                           
  1739                           ;incstack = 0
  1740  0029AE  0E02               	movlw	2
  1741  0029B0  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1742  0029B2  0E20               	movlw	32
  1743  0029B4  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1744  0029B6  0012               	return		;funcret
  1745  0029B8                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1746                           	opt callstack 0
  1747                           
  1748 ;; *************** function _MOC_NOTWORK *****************
  1749 ;; Defined at:
  1750 ;;		line 48 in file "MOC_Funct.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2    5[COMRAM] unsigned int 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;Total ram usage:        2 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    3
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_FRAME_SensorExcitationStatus
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text7
  1779  002A08                     __ptext7:
  1780                           	opt callstack 0
  1781  002A08                     _MOC_NOTWORK:
  1782                           	opt callstack 24
  1783                           
  1784                           ;MOC_Funct.c: 50: return 0xFF;
  1785                           
  1786                           ;incstack = 0
  1787  002A08  0E00               	movlw	0
  1788  002A0A  6E07               	movwf	?_MOC_NOTWORK+1,c
  1789  002A0C  6806               	setf	?_MOC_NOTWORK,c
  1790  002A0E  0012               	return		;funcret
  1791  002A10                     __end_of_MOC_NOTWORK:
  1792                           	opt callstack 0
  1793                           
  1794 ;; *************** function _MOC_Frame_Counter *****************
  1795 ;; Defined at:
  1796 ;;		line 39 in file "MOC_Funct.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  2    5[COMRAM] unsigned int 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;Total ram usage:        2 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    3
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_FRAME_SensorExcitationStatus
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text8
  1825  002976                     __ptext8:
  1826                           	opt callstack 0
  1827  002976                     _MOC_Frame_Counter:
  1828                           	opt callstack 24
  1829                           
  1830                           ;MOC_Funct.c: 41: static UINT zeta = 0x11;;MOC_Funct.c: 42: return zeta++;
  1831                           
  1832                           ;incstack = 0
  1833  002976  0100               	movlb	0	; () banked
  1834  002978  51D6               	movf	MOC_Frame_Counter@zeta& (0+255),w,b
  1835  00297A  6E06               	movwf	?_MOC_Frame_Counter,c
  1836  00297C  51D7               	movf	(MOC_Frame_Counter@zeta+1)& (0+255),w,b
  1837  00297E  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1838  002980  4BD6               	infsnz	MOC_Frame_Counter@zeta& (0+255),f,b
  1839  002982  2BD7               	incf	(MOC_Frame_Counter@zeta+1)& (0+255),f,b
  1840                           
  1841                           ; BSR set to: 0
  1842  002984  0012               	return		;funcret
  1843  002986                     __end_of_MOC_Frame_Counter:
  1844                           	opt callstack 0
  1845                           
  1846 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1847 ;; Defined at:
  1848 ;;		line 44 in file "MOC_Funct.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2    5[COMRAM] unsigned int 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1866 ;;Total ram usage:        2 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    3
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_FRAME_SensorExcitationStatus
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text9
  1877  0029B8                     __ptext9:
  1878                           	opt callstack 0
  1879  0029B8                     _MOC_Aktualna_Temperatura:
  1880                           	opt callstack 24
  1881                           
  1882                           ;MOC_Funct.c: 46: return 0x1B;
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;incstack = 0
  1886  0029B8  0E00               	movlw	0
  1887  0029BA  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1888  0029BC  0E1B               	movlw	27
  1889  0029BE  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1890  0029C0  0012               	return		;funcret
  1891  0029C2                     __end_of_MOC_Aktualna_Temperatura:
  1892                           	opt callstack 0
  1893                           
  1894 ;; *************** function _LOCK_Set *****************
  1895 ;; Defined at:
  1896 ;;		line 84 in file "LED.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  k               1    wreg     unsigned char 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  k               1    5[COMRAM] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;Total ram usage:        1 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_FRAME_SensorExcitationStatus
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text10
  1925  002A10                     __ptext10:
  1926                           	opt callstack 0
  1927  002A10                     _LOCK_Set:
  1928                           	opt callstack 24
  1929                           
  1930                           ;incstack = 0
  1931                           ;LOCK_Set@k stored from wreg
  1932  002A10  6E06               	movwf	LOCK_Set@k,c
  1933                           
  1934                           ;LED.c: 86: LOCK = k;
  1935  002A12  C006  F03E         	movff	LOCK_Set@k,_LOCK
  1936  002A16  0012               	return		;funcret
  1937  002A18                     __end_of_LOCK_Set:
  1938                           	opt callstack 0
  1939                           
  1940 ;; *************** function _LOCK_Get *****************
  1941 ;; Defined at:
  1942 ;;		line 100 in file "LED.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      unsigned char 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    3
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_FRAME_SensorExcitationStatus
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text11
  1971  002A1E                     __ptext11:
  1972                           	opt callstack 0
  1973  002A1E                     _LOCK_Get:
  1974                           	opt callstack 24
  1975                           
  1976                           ;LED.c: 102: return LOCK;
  1977                           
  1978                           ;incstack = 0
  1979  002A1E  503E               	movf	_LOCK,w,c
  1980  002A20  0012               	return		;funcret
  1981  002A22                     __end_of_LOCK_Get:
  1982                           	opt callstack 0
  1983                           
  1984 ;; *************** function _IsInNeighbors *****************
  1985 ;; Defined at:
  1986 ;;		line 136 in file "FRAME.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  message_adre    2    5[COMRAM] unsigned int 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  i               2    0        unsigned short 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  2    5[COMRAM] unsigned int 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2004 ;;Total ram usage:        2 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    3
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_FRAME_SensorExcitationStatus
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text12
  2015  001D94                     __ptext12:
  2016                           	opt callstack 0
  2017  001D94                     _IsInNeighbors:
  2018                           	opt callstack 24
  2019                           
  2020                           ;FRAME.c: 138: WORD i;;FRAME.c: 140: if(NeightAdress1==message_adress)
  2021                           
  2022                           ;incstack = 0
  2023  001D94  5006               	movf	IsInNeighbors@message_adress,w,c
  2024  001D96  184B               	xorwf	_NeightAdress1,w,c	;volatile
  2025  001D98  E109               	bnz	l4265
  2026  001D9A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2027  001D9C  184C               	xorwf	_NeightAdress1+1,w,c	;volatile
  2028  001D9E  A4D8               	btfss	status,2,c
  2029  001DA0  D005               	goto	l4265
  2030                           
  2031                           ;FRAME.c: 141: {;FRAME.c: 142: return 0b1;
  2032  001DA2  0E00               	movlw	0
  2033  001DA4  6E07               	movwf	?_IsInNeighbors+1,c
  2034  001DA6  0E01               	movlw	1
  2035  001DA8  6E06               	movwf	?_IsInNeighbors,c
  2036  001DAA  0012               	return	
  2037  001DAC                     l4265:
  2038                           
  2039                           ;FRAME.c: 143: };FRAME.c: 144: if(NeightAdress2==message_adress)
  2040  001DAC  5006               	movf	IsInNeighbors@message_adress,w,c
  2041  001DAE  1858               	xorwf	_NeightAdress2,w,c	;volatile
  2042  001DB0  E109               	bnz	l4271
  2043  001DB2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2044  001DB4  1859               	xorwf	_NeightAdress2+1,w,c	;volatile
  2045  001DB6  A4D8               	btfss	status,2,c
  2046  001DB8  D005               	goto	l4271
  2047                           
  2048                           ;FRAME.c: 145: {;FRAME.c: 146: return 0b10;
  2049  001DBA  0E00               	movlw	0
  2050  001DBC  6E07               	movwf	?_IsInNeighbors+1,c
  2051  001DBE  0E02               	movlw	2
  2052  001DC0  6E06               	movwf	?_IsInNeighbors,c
  2053  001DC2  0012               	return	
  2054  001DC4                     l4271:
  2055                           
  2056                           ;FRAME.c: 147: };FRAME.c: 148: if(NeightAdress3==message_adress)
  2057  001DC4  5006               	movf	IsInNeighbors@message_adress,w,c
  2058  001DC6  1849               	xorwf	_NeightAdress3,w,c	;volatile
  2059  001DC8  E109               	bnz	l4277
  2060  001DCA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2061  001DCC  184A               	xorwf	_NeightAdress3+1,w,c	;volatile
  2062  001DCE  A4D8               	btfss	status,2,c
  2063  001DD0  D005               	goto	l4277
  2064                           
  2065                           ;FRAME.c: 149: {;FRAME.c: 150: return 0b100;
  2066  001DD2  0E00               	movlw	0
  2067  001DD4  6E07               	movwf	?_IsInNeighbors+1,c
  2068  001DD6  0E04               	movlw	4
  2069  001DD8  6E06               	movwf	?_IsInNeighbors,c
  2070  001DDA  0012               	return	
  2071  001DDC                     l4277:
  2072                           
  2073                           ;FRAME.c: 151: };FRAME.c: 152: if(NeightAdress4==message_adress)
  2074  001DDC  5006               	movf	IsInNeighbors@message_adress,w,c
  2075  001DDE  1847               	xorwf	_NeightAdress4,w,c	;volatile
  2076  001DE0  E109               	bnz	l4283
  2077  001DE2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2078  001DE4  1848               	xorwf	_NeightAdress4+1,w,c	;volatile
  2079  001DE6  A4D8               	btfss	status,2,c
  2080  001DE8  D005               	goto	l4283
  2081                           
  2082                           ;FRAME.c: 153: {;FRAME.c: 154: return 0b1000;
  2083  001DEA  0E00               	movlw	0
  2084  001DEC  6E07               	movwf	?_IsInNeighbors+1,c
  2085  001DEE  0E08               	movlw	8
  2086  001DF0  6E06               	movwf	?_IsInNeighbors,c
  2087  001DF2  0012               	return	
  2088  001DF4                     l4283:
  2089                           
  2090                           ;FRAME.c: 155: };FRAME.c: 156: if(NeightAdress5==message_adress)
  2091  001DF4  5006               	movf	IsInNeighbors@message_adress,w,c
  2092  001DF6  1845               	xorwf	_NeightAdress5,w,c	;volatile
  2093  001DF8  E109               	bnz	l4289
  2094  001DFA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2095  001DFC  1846               	xorwf	_NeightAdress5+1,w,c	;volatile
  2096  001DFE  A4D8               	btfss	status,2,c
  2097  001E00  D005               	goto	l4289
  2098                           
  2099                           ;FRAME.c: 157: {;FRAME.c: 158: return 0b10000;
  2100  001E02  0E00               	movlw	0
  2101  001E04  6E07               	movwf	?_IsInNeighbors+1,c
  2102  001E06  0E10               	movlw	16
  2103  001E08  6E06               	movwf	?_IsInNeighbors,c
  2104  001E0A  0012               	return	
  2105  001E0C                     l4289:
  2106                           
  2107                           ;FRAME.c: 159: };FRAME.c: 160: if(NeightAdress6==message_adress)
  2108  001E0C  5006               	movf	IsInNeighbors@message_adress,w,c
  2109  001E0E  1843               	xorwf	_NeightAdress6,w,c	;volatile
  2110  001E10  E109               	bnz	l4295
  2111  001E12  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2112  001E14  1844               	xorwf	_NeightAdress6+1,w,c	;volatile
  2113  001E16  A4D8               	btfss	status,2,c
  2114  001E18  D005               	goto	l4295
  2115                           
  2116                           ;FRAME.c: 161: {;FRAME.c: 162: return 0b100000;
  2117  001E1A  0E00               	movlw	0
  2118  001E1C  6E07               	movwf	?_IsInNeighbors+1,c
  2119  001E1E  0E20               	movlw	32
  2120  001E20  6E06               	movwf	?_IsInNeighbors,c
  2121  001E22  0012               	return	
  2122  001E24                     l4295:
  2123                           
  2124                           ;FRAME.c: 163: };FRAME.c: 164: if(NeightAdress7==message_adress)
  2125  001E24  5006               	movf	IsInNeighbors@message_adress,w,c
  2126  001E26  1841               	xorwf	_NeightAdress7,w,c	;volatile
  2127  001E28  E109               	bnz	l4301
  2128  001E2A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2129  001E2C  1842               	xorwf	_NeightAdress7+1,w,c	;volatile
  2130  001E2E  A4D8               	btfss	status,2,c
  2131  001E30  D005               	goto	l4301
  2132                           
  2133                           ;FRAME.c: 165: {;FRAME.c: 166: return 0b1000000;
  2134  001E32  0E00               	movlw	0
  2135  001E34  6E07               	movwf	?_IsInNeighbors+1,c
  2136  001E36  0E40               	movlw	64
  2137  001E38  6E06               	movwf	?_IsInNeighbors,c
  2138  001E3A  0012               	return	
  2139  001E3C                     l4301:
  2140                           
  2141                           ;FRAME.c: 167: };FRAME.c: 168: if(NeightAdress8==message_adress)
  2142  001E3C  5006               	movf	IsInNeighbors@message_adress,w,c
  2143  001E3E  183F               	xorwf	_NeightAdress8,w,c	;volatile
  2144  001E40  E109               	bnz	l4307
  2145  001E42  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2146  001E44  1840               	xorwf	_NeightAdress8+1,w,c	;volatile
  2147  001E46  A4D8               	btfss	status,2,c
  2148  001E48  D005               	goto	l4307
  2149                           
  2150                           ;FRAME.c: 169: {;FRAME.c: 170: return 0b10000000;
  2151  001E4A  0E00               	movlw	0
  2152  001E4C  6E07               	movwf	?_IsInNeighbors+1,c
  2153  001E4E  0E80               	movlw	128
  2154  001E50  6E06               	movwf	?_IsInNeighbors,c
  2155  001E52  0012               	return	
  2156  001E54                     l4307:
  2157                           
  2158                           ;FRAME.c: 171: };FRAME.c: 186: return 0;
  2159  001E54  0E00               	movlw	0
  2160  001E56  6E07               	movwf	?_IsInNeighbors+1,c
  2161  001E58  0E00               	movlw	0
  2162  001E5A  6E06               	movwf	?_IsInNeighbors,c
  2163  001E5C  0012               	return		;funcret
  2164  001E5E                     __end_of_IsInNeighbors:
  2165                           	opt callstack 0
  2166                           
  2167 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2168 ;; Defined at:
  2169 ;;		line 714 in file "FRAME.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  message         2    5[COMRAM] PTR struct .
  2172 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2186 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2187 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2188 ;;Total ram usage:        6 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    3
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_FRAME_HandleCanFrame
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text13
  2199  001F0E                     __ptext13:
  2200                           	opt callstack 0
  2201  001F0E                     _FRAME_PrzypisanieDokarty:
  2202                           	opt callstack 25
  2203                           
  2204                           ;FRAME.c: 716: if(message->message_type == 0x02)
  2205                           
  2206                           ;incstack = 0
  2207  001F0E  EE20 F001          	lfsr	2,1
  2208  001F12  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2209  001F14  26D9               	addwf	fsr2l,f,c
  2210  001F16  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2211  001F18  22DA               	addwfc	fsr2h,f,c
  2212  001F1A  0E02               	movlw	2
  2213  001F1C  18DE               	xorwf	postinc2,w,c
  2214  001F1E  A4D8               	btfss	status,2,c
  2215  001F20  D021               	goto	l4665
  2216                           
  2217                           ;FRAME.c: 717: {;FRAME.c: 718: message->data_length = 3;
  2218  001F22  EE20 F010          	lfsr	2,16
  2219  001F26  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2220  001F28  26D9               	addwf	fsr2l,f,c
  2221  001F2A  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2222  001F2C  22DA               	addwfc	fsr2h,f,c
  2223  001F2E  0E03               	movlw	3
  2224  001F30  6EDF               	movwf	indf2,c
  2225                           
  2226                           ;FRAME.c: 719: message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2227  001F32  EE20 F008          	lfsr	2,8
  2228  001F36  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2229  001F38  26D9               	addwf	fsr2l,f,c
  2230  001F3A  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2231  001F3C  22DA               	addwfc	fsr2h,f,c
  2232  001F3E  0E00               	movlw	0
  2233  001F40  6EDF               	movwf	indf2,c
  2234                           
  2235                           ;FRAME.c: 720: message->data[1] = (unsigned char)Dane->NrKarty ;
  2236  001F42  EE20 F009          	lfsr	2,9
  2237  001F46  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2238  001F48  26D9               	addwf	fsr2l,f,c
  2239  001F4A  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2240  001F4C  22DA               	addwfc	fsr2h,f,c
  2241  001F4E  C040 FFDF          	movff	64,indf2
  2242                           
  2243                           ;FRAME.c: 721: message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2244  001F52  EE20 F00A          	lfsr	2,10
  2245  001F56  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2246  001F58  26D9               	addwf	fsr2l,f,c
  2247  001F5A  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2248  001F5C  22DA               	addwfc	fsr2h,f,c
  2249  001F5E  C042 FFDF          	movff	66,indf2
  2250                           
  2251                           ;FRAME.c: 723: }
  2252  001F62  0012               	return	
  2253  001F64                     l4665:
  2254                           
  2255                           ;FRAME.c: 724: else;FRAME.c: 725: {;FRAME.c: 726: Dane->NrKarty = (message->data[0] << 8
      +                          ) | (message->data[1]);
  2256  001F64  EE20 F008          	lfsr	2,8
  2257  001F68  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2258  001F6A  26D9               	addwf	fsr2l,f,c
  2259  001F6C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2260  001F6E  22DA               	addwfc	fsr2h,f,c
  2261  001F70  50DF               	movf	indf2,w,c
  2262  001F72  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2263  001F74  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2264  001F76  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2265  001F78  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2266  001F7A  EE20 F009          	lfsr	2,9
  2267  001F7E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2268  001F80  26D9               	addwf	fsr2l,f,c
  2269  001F82  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2270  001F84  22DA               	addwfc	fsr2h,f,c
  2271  001F86  50DF               	movf	indf2,w,c
  2272  001F88  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2273  001F8A  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2274  001F8C  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2275  001F8E  6E40               	movwf	64,c
  2276  001F90  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2277  001F92  6E41               	movwf	65,c
  2278                           
  2279                           ;FRAME.c: 727: Dane->Nr_WeWy = (message->data[2]);
  2280  001F94  EE20 F00A          	lfsr	2,10
  2281  001F98  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2282  001F9A  26D9               	addwf	fsr2l,f,c
  2283  001F9C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2284  001F9E  22DA               	addwfc	fsr2h,f,c
  2285  001FA0  50DF               	movf	indf2,w,c
  2286  001FA2  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2287  001FA4  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2288  001FA6  6E42               	movwf	66,c
  2289  001FA8  6A43               	clrf	67,c
  2290  001FAA  0012               	return		;funcret
  2291  001FAC                     __end_of_FRAME_PrzypisanieDokarty:
  2292                           	opt callstack 0
  2293                           
  2294 ;; *************** function _FRAME_Plot *****************
  2295 ;; Defined at:
  2296 ;;		line 599 in file "FRAME.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  message         2   12[COMRAM] PTR struct .
  2299 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;Total ram usage:        3 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    4
  2318 ;; This function calls:
  2319 ;;		___lwdiv
  2320 ;; This function is called by:
  2321 ;;		_FRAME_HandleCanFrame
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text14
  2326  0024AC                     __ptext14:
  2327                           	opt callstack 0
  2328  0024AC                     _FRAME_Plot:
  2329                           	opt callstack 24
  2330                           
  2331                           ;FRAME.c: 602: if(message->message_type == 0x02)
  2332                           
  2333                           ;incstack = 0
  2334  0024AC  EE20 F001          	lfsr	2,1
  2335  0024B0  500D               	movf	FRAME_Plot@message,w,c
  2336  0024B2  26D9               	addwf	fsr2l,f,c
  2337  0024B4  500E               	movf	FRAME_Plot@message+1,w,c
  2338  0024B6  22DA               	addwfc	fsr2h,f,c
  2339  0024B8  0E02               	movlw	2
  2340  0024BA  18DE               	xorwf	postinc2,w,c
  2341  0024BC  A4D8               	btfss	status,2,c
  2342  0024BE  D013               	goto	l4655
  2343                           
  2344                           ;FRAME.c: 603: {;FRAME.c: 604: message->data[0] = (BYTE)(Dane->timerRysowaniaWykresuU16/
      +                          10);
  2345  0024C0  EE20 F008          	lfsr	2,8
  2346  0024C4  500D               	movf	FRAME_Plot@message,w,c
  2347  0024C6  26D9               	addwf	fsr2l,f,c
  2348  0024C8  500E               	movf	FRAME_Plot@message+1,w,c
  2349  0024CA  22DA               	addwfc	fsr2h,f,c
  2350  0024CC  C00C F006          	movff	12,___lwdiv@dividend
  2351  0024D0  C00D F007          	movff	13,___lwdiv@dividend+1
  2352  0024D4  0E00               	movlw	0
  2353  0024D6  6E09               	movwf	___lwdiv@divisor+1,c
  2354  0024D8  0E0A               	movlw	10
  2355  0024DA  6E08               	movwf	___lwdiv@divisor,c
  2356  0024DC  EC82  F012         	call	___lwdiv	;wreg free
  2357  0024E0  5006               	movf	?___lwdiv,w,c
  2358  0024E2  6EDF               	movwf	indf2,c
  2359                           
  2360                           ;FRAME.c: 605: }
  2361  0024E4  0012               	return	
  2362  0024E6                     l4655:
  2363                           
  2364                           ;FRAME.c: 606: else;FRAME.c: 607: {;FRAME.c: 608: Dane->timerRysowaniaWykresuU16 = (WORD
      +                          )message->data[0]*10;
  2365  0024E6  EE20 F008          	lfsr	2,8
  2366  0024EA  500D               	movf	FRAME_Plot@message,w,c
  2367  0024EC  26D9               	addwf	fsr2l,f,c
  2368  0024EE  500E               	movf	FRAME_Plot@message+1,w,c
  2369  0024F0  22DA               	addwfc	fsr2h,f,c
  2370  0024F2  50DF               	movf	indf2,w,c
  2371  0024F4  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2372  0024F6  500F               	movf	??_FRAME_Plot,w,c
  2373  0024F8  0D0A               	mullw	10
  2374  0024FA  CFF3 F00C          	movff	prodl,12
  2375  0024FE  CFF4 F00D          	movff	prodh,13
  2376  002502  0012               	return		;funcret
  2377  002504                     __end_of_FRAME_Plot:
  2378                           	opt callstack 0
  2379                           
  2380 ;; *************** function _FRAME_MapPosition *****************
  2381 ;; Defined at:
  2382 ;;		line 625 in file "FRAME.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  message         2    5[COMRAM] PTR struct .
  2385 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		None
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2401 ;;Total ram usage:        2 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    3
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_FRAME_HandleCanFrame
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text15
  2412  002A24                     __ptext15:
  2413                           	opt callstack 0
  2414  002A24                     _FRAME_MapPosition:
  2415                           	opt callstack 25
  2416                           
  2417                           ;incstack = 0
  2418  002A24  0012               	return		;funcret
  2419  002A26                     __end_of_FRAME_MapPosition:
  2420                           	opt callstack 0
  2421                           
  2422 ;; *************** function _FRAME_ExcitationValue *****************
  2423 ;; Defined at:
  2424 ;;		line 231 in file "FRAME.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  message         2    5[COMRAM] PTR struct .
  2427 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;Total ram usage:        3 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    3
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_FRAME_HandleCanFrame
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text16
  2454  0026B6                     __ptext16:
  2455                           	opt callstack 0
  2456  0026B6                     _FRAME_ExcitationValue:
  2457                           	opt callstack 25
  2458                           
  2459                           ;FRAME.c: 233: if(message->message_type == 0x02)
  2460                           
  2461                           ;incstack = 0
  2462  0026B6  EE20 F001          	lfsr	2,1
  2463  0026BA  5006               	movf	FRAME_ExcitationValue@message,w,c
  2464  0026BC  26D9               	addwf	fsr2l,f,c
  2465  0026BE  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2466  0026C0  22DA               	addwfc	fsr2h,f,c
  2467  0026C2  0E02               	movlw	2
  2468  0026C4  18DE               	xorwf	postinc2,w,c
  2469  0026C6  A4D8               	btfss	status,2,c
  2470  0026C8  0012               	return	
  2471                           
  2472                           ;FRAME.c: 234: {;FRAME.c: 235: message->data_length = 1;
  2473  0026CA  EE20 F010          	lfsr	2,16
  2474  0026CE  5006               	movf	FRAME_ExcitationValue@message,w,c
  2475  0026D0  26D9               	addwf	fsr2l,f,c
  2476  0026D2  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2477  0026D4  22DA               	addwfc	fsr2h,f,c
  2478  0026D6  0E01               	movlw	1
  2479  0026D8  6EDF               	movwf	indf2,c
  2480                           
  2481                           ;FRAME.c: 240: message->data[0] = 0xFF;
  2482  0026DA  EE20 F008          	lfsr	2,8
  2483  0026DE  5006               	movf	FRAME_ExcitationValue@message,w,c
  2484  0026E0  26D9               	addwf	fsr2l,f,c
  2485  0026E2  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2486  0026E4  22DA               	addwfc	fsr2h,f,c
  2487  0026E6  0EFF               	movlw	255
  2488  0026E8  6EDF               	movwf	indf2,c
  2489                           
  2490                           ;FRAME.c: 241: }
  2491  0026EA  0012               	return		;funcret
  2492  0026EC                     __end_of_FRAME_ExcitationValue:
  2493                           	opt callstack 0
  2494                           
  2495 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2496 ;; Defined at:
  2497 ;;		line 260 in file "FRAME.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  message         2    5[COMRAM] PTR struct .
  2500 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  i               2    8[COMRAM] unsigned short 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;Total ram usage:        5 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    3
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_FRAME_HandleCanFrame
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text17
  2527  002556                     __ptext17:
  2528                           	opt callstack 0
  2529  002556                     _FRAME_ExcitationMultiplier:
  2530                           	opt callstack 25
  2531                           
  2532                           ;FRAME.c: 262: WORD i;;FRAME.c: 264: if(message->message_type == 0x02)
  2533                           
  2534                           ;incstack = 0
  2535  002556  EE20 F001          	lfsr	2,1
  2536  00255A  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2537  00255C  26D9               	addwf	fsr2l,f,c
  2538  00255E  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2539  002560  22DA               	addwfc	fsr2h,f,c
  2540  002562  0E02               	movlw	2
  2541  002564  18DE               	xorwf	postinc2,w,c
  2542  002566  A4D8               	btfss	status,2,c
  2543  002568  0012               	return	
  2544                           
  2545                           ;FRAME.c: 265: {;FRAME.c: 266: message->data_length = 1;
  2546  00256A  EE20 F010          	lfsr	2,16
  2547  00256E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2548  002570  26D9               	addwf	fsr2l,f,c
  2549  002572  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2550  002574  22DA               	addwfc	fsr2h,f,c
  2551  002576  0E01               	movlw	1
  2552  002578  6EDF               	movwf	indf2,c
  2553                           
  2554                           ;FRAME.c: 267: for(i=0; i<3; i++)
  2555  00257A  0E00               	movlw	0
  2556  00257C  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2557  00257E  0E00               	movlw	0
  2558  002580  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2559  002582                     l4597:
  2560                           
  2561                           ;FRAME.c: 268: {
  2562  002582  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2563  002584  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2564  002586  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2565  002588  E104               	bnz	u3930
  2566  00258A  0E03               	movlw	3
  2567  00258C  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2568  00258E  A0D8               	btfss	status,0,c
  2569  002590  D7F8               	goto	l4597
  2570  002592                     u3930:
  2571                           
  2572                           ;FRAME.c: 271: };FRAME.c: 272: message->data[0] = 0xFF;
  2573  002592  EE20 F008          	lfsr	2,8
  2574  002596  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2575  002598  26D9               	addwf	fsr2l,f,c
  2576  00259A  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2577  00259C  22DA               	addwfc	fsr2h,f,c
  2578  00259E  0EFF               	movlw	255
  2579  0025A0  6EDF               	movwf	indf2,c
  2580                           
  2581                           ;FRAME.c: 273: }
  2582  0025A2  0012               	return		;funcret
  2583  0025A4                     __end_of_FRAME_ExcitationMultiplier:
  2584                           	opt callstack 0
  2585                           
  2586 ;; *************** function _FRAME_DeviceReset *****************
  2587 ;; Defined at:
  2588 ;;		line 414 in file "FRAME.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  message         2   16[COMRAM] PTR struct .
  2591 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2606 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2607 ;;Total ram usage:        3 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    6
  2610 ;; This function calls:
  2611 ;;		_FRAME_DataUpdateAndChangeOption
  2612 ;;		_WriteDataToEEPROM
  2613 ;; This function is called by:
  2614 ;;		_FRAME_HandleCanFrame
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text18
  2619  001B28                     __ptext18:
  2620                           	opt callstack 0
  2621  001B28                     _FRAME_DeviceReset:
  2622                           	opt callstack 22
  2623                           
  2624                           ;FRAME.c: 416: if(message->message_type == 0x02)
  2625                           
  2626                           ;incstack = 0
  2627  001B28  EE20 F001          	lfsr	2,1
  2628  001B2C  5011               	movf	FRAME_DeviceReset@message,w,c
  2629  001B2E  26D9               	addwf	fsr2l,f,c
  2630  001B30  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2631  001B32  22DA               	addwfc	fsr2h,f,c
  2632  001B34  0E02               	movlw	2
  2633  001B36  18DE               	xorwf	postinc2,w,c
  2634  001B38  A4D8               	btfss	status,2,c
  2635  001B3A  D057               	goto	l4619
  2636                           
  2637                           ;FRAME.c: 417: {;FRAME.c: 418: message->data_length = 8;
  2638  001B3C  EE20 F010          	lfsr	2,16
  2639  001B40  5011               	movf	FRAME_DeviceReset@message,w,c
  2640  001B42  26D9               	addwf	fsr2l,f,c
  2641  001B44  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2642  001B46  22DA               	addwfc	fsr2h,f,c
  2643  001B48  0E08               	movlw	8
  2644  001B4A  6EDF               	movwf	indf2,c
  2645                           
  2646                           ;FRAME.c: 420: message->data[0] = (RCON>>6) & 0x01;
  2647  001B4C  EE20 F008          	lfsr	2,8
  2648  001B50  5011               	movf	FRAME_DeviceReset@message,w,c
  2649  001B52  26D9               	addwf	fsr2l,f,c
  2650  001B54  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2651  001B56  22DA               	addwfc	fsr2h,f,c
  2652  001B58  44D0               	rlncf	4048,w,c	;volatile
  2653  001B5A  46E8               	rlncf	wreg,f,c
  2654  001B5C  0B03               	andlw	3
  2655  001B5E  0B01               	andlw	1
  2656  001B60  6EDF               	movwf	indf2,c
  2657                           
  2658                           ;FRAME.c: 421: message->data[1] = Flagi.wykonanoZapisDoFlash;
  2659  001B62  EE20 F009          	lfsr	2,9
  2660  001B66  5011               	movf	FRAME_DeviceReset@message,w,c
  2661  001B68  26D9               	addwf	fsr2l,f,c
  2662  001B6A  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2663  001B6C  22DA               	addwfc	fsr2h,f,c
  2664  001B6E  0100               	movlb	0	; () banked
  2665  001B70  A9C6               	btfss	_Flagi& (0+255),4,b
  2666  001B72  D002               	goto	u3970
  2667  001B74  0E01               	movlw	1
  2668  001B76  D001               	goto	u3976
  2669  001B78                     u3970:
  2670  001B78  0E00               	movlw	0
  2671  001B7A                     u3976:
  2672  001B7A  6EDF               	movwf	indf2,c
  2673                           
  2674                           ;FRAME.c: 422: message->data[2] = Flagi.pomiarTla;
  2675  001B7C  EE20 F00A          	lfsr	2,10
  2676  001B80  5011               	movf	FRAME_DeviceReset@message,w,c
  2677  001B82  26D9               	addwf	fsr2l,f,c
  2678  001B84  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2679  001B86  22DA               	addwfc	fsr2h,f,c
  2680  001B88  A1C6               	btfss	_Flagi& (0+255),0,b
  2681  001B8A  D002               	goto	u3980
  2682  001B8C  0E01               	movlw	1
  2683  001B8E  D001               	goto	u3986
  2684  001B90                     u3980:
  2685  001B90  0E00               	movlw	0
  2686  001B92                     u3986:
  2687  001B92  6EDF               	movwf	indf2,c
  2688                           
  2689                           ;FRAME.c: 423: message->data[3] = 0;
  2690  001B94  EE20 F00B          	lfsr	2,11
  2691  001B98  5011               	movf	FRAME_DeviceReset@message,w,c
  2692  001B9A  26D9               	addwf	fsr2l,f,c
  2693  001B9C  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2694  001B9E  22DA               	addwfc	fsr2h,f,c
  2695  001BA0  0E00               	movlw	0
  2696  001BA2  6EDF               	movwf	indf2,c
  2697                           
  2698                           ;FRAME.c: 424: message->data[4] = Dane->rokU16;
  2699  001BA4  EE20 F00C          	lfsr	2,12
  2700  001BA8  5011               	movf	FRAME_DeviceReset@message,w,c
  2701  001BAA  26D9               	addwf	fsr2l,f,c
  2702  001BAC  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2703  001BAE  22DA               	addwfc	fsr2h,f,c
  2704  001BB0  C036 FFDF          	movff	54,indf2
  2705                           
  2706                           ;FRAME.c: 425: message->data[5] = Dane->miesiacU16;
  2707  001BB4  EE20 F00D          	lfsr	2,13
  2708  001BB8  5011               	movf	FRAME_DeviceReset@message,w,c
  2709  001BBA  26D9               	addwf	fsr2l,f,c
  2710  001BBC  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2711  001BBE  22DA               	addwfc	fsr2h,f,c
  2712  001BC0  C038 FFDF          	movff	56,indf2
  2713                           
  2714                           ;FRAME.c: 426: message->data[6] = Dane->dzienU16;
  2715  001BC4  EE20 F00E          	lfsr	2,14
  2716  001BC8  5011               	movf	FRAME_DeviceReset@message,w,c
  2717  001BCA  26D9               	addwf	fsr2l,f,c
  2718  001BCC  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2719  001BCE  22DA               	addwfc	fsr2h,f,c
  2720  001BD0  C03A FFDF          	movff	58,indf2
  2721                           
  2722                           ;FRAME.c: 427: message->data[7] = Dane->godzinaU16;
  2723  001BD4  EE20 F00F          	lfsr	2,15
  2724  001BD8  5011               	movf	FRAME_DeviceReset@message,w,c
  2725  001BDA  26D9               	addwf	fsr2l,f,c
  2726  001BDC  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2727  001BDE  22DA               	addwfc	fsr2h,f,c
  2728  001BE0  C03C FFDF          	movff	60,indf2
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;FRAME.c: 428: RCON &= ~(1<<6);
  2732  001BE4  9CD0               	bcf	4048,6,c	;volatile
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;FRAME.c: 429: Flagi.wykonanoZapisDoFlash = 0;
  2736  001BE6  99C6               	bcf	_Flagi& (0+255),4,b
  2737                           
  2738                           ;FRAME.c: 443: }
  2739  001BE8  0012               	return	
  2740  001BEA                     l4619:
  2741                           
  2742                           ;FRAME.c: 444: else;FRAME.c: 445: {;FRAME.c: 446: message->data_length = 1;
  2743  001BEA  EE20 F010          	lfsr	2,16
  2744  001BEE  5011               	movf	FRAME_DeviceReset@message,w,c
  2745  001BF0  26D9               	addwf	fsr2l,f,c
  2746  001BF2  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2747  001BF4  22DA               	addwfc	fsr2h,f,c
  2748  001BF6  0E01               	movlw	1
  2749  001BF8  6EDF               	movwf	indf2,c
  2750                           
  2751                           ;FRAME.c: 448: if(message->data[2])
  2752  001BFA  EE20 F00A          	lfsr	2,10
  2753  001BFE  5011               	movf	FRAME_DeviceReset@message,w,c
  2754  001C00  26D9               	addwf	fsr2l,f,c
  2755  001C02  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2756  001C04  22DA               	addwfc	fsr2h,f,c
  2757  001C06  50DF               	movf	indf2,w,c
  2758  001C08  B4D8               	btfsc	status,2,c
  2759  001C0A  D00F               	goto	l4629
  2760                           
  2761                           ;FRAME.c: 449: {;FRAME.c: 450: Flagi.pomiarTla = 1;
  2762  001C0C  0100               	movlb	0	; () banked
  2763  001C0E  81C6               	bsf	_Flagi& (0+255),0,b
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;FRAME.c: 451: if(message->data[1])
  2767  001C10  EE20 F009          	lfsr	2,9
  2768  001C14  5011               	movf	FRAME_DeviceReset@message,w,c
  2769  001C16  26D9               	addwf	fsr2l,f,c
  2770  001C18  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2771  001C1A  22DA               	addwfc	fsr2h,f,c
  2772  001C1C  50DF               	movf	indf2,w,c
  2773  001C1E  B4D8               	btfsc	status,2,c
  2774  001C20  D01E               	goto	l4637
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;FRAME.c: 452: {;FRAME.c: 453: Flagi.zapisDoFlash = 1;
  2778  001C22  87C6               	bsf	_Flagi& (0+255),3,b
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;FRAME.c: 454: WriteDataToEEPROM();
  2782  001C24  EC0F  F00A         	call	_WriteDataToEEPROM	;wreg free
  2783  001C28  D01A               	goto	l4637
  2784  001C2A                     l4629:
  2785                           
  2786                           ;FRAME.c: 457: else;FRAME.c: 458: {;FRAME.c: 459: if(message->data[1])
  2787  001C2A  EE20 F009          	lfsr	2,9
  2788  001C2E  5011               	movf	FRAME_DeviceReset@message,w,c
  2789  001C30  26D9               	addwf	fsr2l,f,c
  2790  001C32  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2791  001C34  22DA               	addwfc	fsr2h,f,c
  2792  001C36  50DF               	movf	indf2,w,c
  2793  001C38  B4D8               	btfsc	status,2,c
  2794  001C3A  D008               	goto	l4633
  2795                           
  2796                           ;FRAME.c: 460: {;FRAME.c: 461: FRAME_DataUpdateAndChangeOption(message);
  2797  001C3C  C011  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2798  001C40  C012  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2799  001C44  EC29  F012         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2800                           
  2801                           ;FRAME.c: 462: WriteDataToEEPROM();
  2802  001C48  EC0F  F00A         	call	_WriteDataToEEPROM	;wreg free
  2803  001C4C                     l4633:
  2804                           
  2805                           ;FRAME.c: 464: };FRAME.c: 465: if(message->data[0])
  2806  001C4C  EE20 F008          	lfsr	2,8
  2807  001C50  5011               	movf	FRAME_DeviceReset@message,w,c
  2808  001C52  26D9               	addwf	fsr2l,f,c
  2809  001C54  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2810  001C56  22DA               	addwfc	fsr2h,f,c
  2811  001C58  50DF               	movf	indf2,w,c
  2812  001C5A  A4D8               	btfss	status,2,c
  2813  001C5C  00FF               	reset		;# 
  2814  001C5E                     l4637:
  2815                           
  2816                           ;FRAME.c: 468: };FRAME.c: 469: };FRAME.c: 470: message->data[0] = 0xFF;
  2817  001C5E  EE20 F008          	lfsr	2,8
  2818  001C62  5011               	movf	FRAME_DeviceReset@message,w,c
  2819  001C64  26D9               	addwf	fsr2l,f,c
  2820  001C66  5012               	movf	FRAME_DeviceReset@message+1,w,c
  2821  001C68  22DA               	addwfc	fsr2h,f,c
  2822  001C6A  0EFF               	movlw	255
  2823  001C6C  6EDF               	movwf	indf2,c
  2824  001C6E  0012               	return		;funcret
  2825  001C70                     __end_of_FRAME_DeviceReset:
  2826                           	opt callstack 0
  2827                           
  2828 ;; *************** function _WriteDataToEEPROM *****************
  2829 ;; Defined at:
  2830 ;;		line 542 in file "FRAME.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;Total ram usage:        2 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    5
  2851 ;; This function calls:
  2852 ;;		_NVMWrite
  2853 ;; This function is called by:
  2854 ;;		_FRAME_DeviceReset
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text19
  2859  00141E                     __ptext19:
  2860                           	opt callstack 0
  2861  00141E                     _WriteDataToEEPROM:
  2862                           	opt callstack 22
  2863                           
  2864                           ;FRAME.c: 544: NVMWrite(&Init_Data,110,2);
  2865                           
  2866                           ;incstack = 0
  2867  00141E  0E56               	movlw	low _Init_Data
  2868  001420  6E09               	movwf	NVMWrite@source,c
  2869  001422  0E00               	movlw	high _Init_Data
  2870  001424  6E0A               	movwf	NVMWrite@source+1,c
  2871  001426  0E00               	movlw	0
  2872  001428  6E0C               	movwf	NVMWrite@addr+1,c
  2873  00142A  0E6E               	movlw	110
  2874  00142C  6E0B               	movwf	NVMWrite@addr,c
  2875  00142E  0E00               	movlw	0
  2876  001430  6E0E               	movwf	NVMWrite@count+1,c
  2877  001432  0E02               	movlw	2
  2878  001434  6E0D               	movwf	NVMWrite@count,c
  2879  001436  EC76  F013         	call	_NVMWrite	;wreg free
  2880                           
  2881                           ;FRAME.c: 545: if(MinAdres>NeightAdress1>MaxAdres)
  2882  00143A  5035               	movf	_MinAdres,w,c	;volatile
  2883  00143C  5C4B               	subwf	_NeightAdress1,w,c	;volatile
  2884  00143E  5036               	movf	_MinAdres+1,w,c	;volatile
  2885  001440  584C               	subwfb	_NeightAdress1+1,w,c	;volatile
  2886  001442  B0D8               	btfsc	status,0,c
  2887  001444  D002               	goto	u3500
  2888  001446  0E01               	movlw	1
  2889  001448  D001               	goto	u3510
  2890  00144A                     u3500:
  2891  00144A  0E00               	movlw	0
  2892  00144C                     u3510:
  2893  00144C  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  2894  00144E  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  2895  001450  500F               	movf	??_WriteDataToEEPROM,w,c
  2896  001452  5C4D               	subwf	_MaxAdres,w,c	;volatile
  2897  001454  5010               	movf	??_WriteDataToEEPROM+1,w,c
  2898  001456  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  2899  001458  B0D8               	btfsc	status,0,c
  2900  00145A  D004               	goto	l4335
  2901                           
  2902                           ;FRAME.c: 546: {;FRAME.c: 547: NeightAdress1=0x0000;
  2903  00145C  0E00               	movlw	0
  2904  00145E  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  2905  001460  0E00               	movlw	0
  2906  001462  6E4B               	movwf	_NeightAdress1,c	;volatile
  2907  001464                     l4335:
  2908                           
  2909                           ;FRAME.c: 548: };FRAME.c: 549: NVMWrite(&NeightAdress1,113,2);
  2910  001464  0E4B               	movlw	low _NeightAdress1
  2911  001466  6E09               	movwf	NVMWrite@source,c
  2912  001468  0E00               	movlw	high _NeightAdress1
  2913  00146A  6E0A               	movwf	NVMWrite@source+1,c
  2914  00146C  0E00               	movlw	0
  2915  00146E  6E0C               	movwf	NVMWrite@addr+1,c
  2916  001470  0E71               	movlw	113
  2917  001472  6E0B               	movwf	NVMWrite@addr,c
  2918  001474  0E00               	movlw	0
  2919  001476  6E0E               	movwf	NVMWrite@count+1,c
  2920  001478  0E02               	movlw	2
  2921  00147A  6E0D               	movwf	NVMWrite@count,c
  2922  00147C  EC76  F013         	call	_NVMWrite	;wreg free
  2923                           
  2924                           ;FRAME.c: 550: if(MinAdres>NeightAdress2>MaxAdres)
  2925  001480  5035               	movf	_MinAdres,w,c	;volatile
  2926  001482  5C58               	subwf	_NeightAdress2,w,c	;volatile
  2927  001484  5036               	movf	_MinAdres+1,w,c	;volatile
  2928  001486  5859               	subwfb	_NeightAdress2+1,w,c	;volatile
  2929  001488  B0D8               	btfsc	status,0,c
  2930  00148A  D002               	goto	u3530
  2931  00148C  0E01               	movlw	1
  2932  00148E  D001               	goto	u3540
  2933  001490                     u3530:
  2934  001490  0E00               	movlw	0
  2935  001492                     u3540:
  2936  001492  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  2937  001494  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  2938  001496  500F               	movf	??_WriteDataToEEPROM,w,c
  2939  001498  5C4D               	subwf	_MaxAdres,w,c	;volatile
  2940  00149A  5010               	movf	??_WriteDataToEEPROM+1,w,c
  2941  00149C  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  2942  00149E  B0D8               	btfsc	status,0,c
  2943  0014A0  D004               	goto	l4341
  2944                           
  2945                           ;FRAME.c: 551: {;FRAME.c: 552: NeightAdress2=0x0000;
  2946  0014A2  0E00               	movlw	0
  2947  0014A4  6E59               	movwf	_NeightAdress2+1,c	;volatile
  2948  0014A6  0E00               	movlw	0
  2949  0014A8  6E58               	movwf	_NeightAdress2,c	;volatile
  2950  0014AA                     l4341:
  2951                           
  2952                           ;FRAME.c: 553: };FRAME.c: 554: NVMWrite(&NeightAdress2,116,2);
  2953  0014AA  0E58               	movlw	low _NeightAdress2
  2954  0014AC  6E09               	movwf	NVMWrite@source,c
  2955  0014AE  0E00               	movlw	high _NeightAdress2
  2956  0014B0  6E0A               	movwf	NVMWrite@source+1,c
  2957  0014B2  0E00               	movlw	0
  2958  0014B4  6E0C               	movwf	NVMWrite@addr+1,c
  2959  0014B6  0E74               	movlw	116
  2960  0014B8  6E0B               	movwf	NVMWrite@addr,c
  2961  0014BA  0E00               	movlw	0
  2962  0014BC  6E0E               	movwf	NVMWrite@count+1,c
  2963  0014BE  0E02               	movlw	2
  2964  0014C0  6E0D               	movwf	NVMWrite@count,c
  2965  0014C2  EC76  F013         	call	_NVMWrite	;wreg free
  2966                           
  2967                           ;FRAME.c: 555: if(MinAdres>NeightAdress3>MaxAdres)
  2968  0014C6  5035               	movf	_MinAdres,w,c	;volatile
  2969  0014C8  5C49               	subwf	_NeightAdress3,w,c	;volatile
  2970  0014CA  5036               	movf	_MinAdres+1,w,c	;volatile
  2971  0014CC  584A               	subwfb	_NeightAdress3+1,w,c	;volatile
  2972  0014CE  B0D8               	btfsc	status,0,c
  2973  0014D0  D002               	goto	u3560
  2974  0014D2  0E01               	movlw	1
  2975  0014D4  D001               	goto	u3570
  2976  0014D6                     u3560:
  2977  0014D6  0E00               	movlw	0
  2978  0014D8                     u3570:
  2979  0014D8  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  2980  0014DA  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  2981  0014DC  500F               	movf	??_WriteDataToEEPROM,w,c
  2982  0014DE  5C4D               	subwf	_MaxAdres,w,c	;volatile
  2983  0014E0  5010               	movf	??_WriteDataToEEPROM+1,w,c
  2984  0014E2  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  2985  0014E4  B0D8               	btfsc	status,0,c
  2986  0014E6  D004               	goto	l4347
  2987                           
  2988                           ;FRAME.c: 556: {;FRAME.c: 557: NeightAdress3=0x0000;
  2989  0014E8  0E00               	movlw	0
  2990  0014EA  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  2991  0014EC  0E00               	movlw	0
  2992  0014EE  6E49               	movwf	_NeightAdress3,c	;volatile
  2993  0014F0                     l4347:
  2994                           
  2995                           ;FRAME.c: 558: };FRAME.c: 559: NVMWrite(&NeightAdress3,119,2);
  2996  0014F0  0E49               	movlw	low _NeightAdress3
  2997  0014F2  6E09               	movwf	NVMWrite@source,c
  2998  0014F4  0E00               	movlw	high _NeightAdress3
  2999  0014F6  6E0A               	movwf	NVMWrite@source+1,c
  3000  0014F8  0E00               	movlw	0
  3001  0014FA  6E0C               	movwf	NVMWrite@addr+1,c
  3002  0014FC  0E77               	movlw	119
  3003  0014FE  6E0B               	movwf	NVMWrite@addr,c
  3004  001500  0E00               	movlw	0
  3005  001502  6E0E               	movwf	NVMWrite@count+1,c
  3006  001504  0E02               	movlw	2
  3007  001506  6E0D               	movwf	NVMWrite@count,c
  3008  001508  EC76  F013         	call	_NVMWrite	;wreg free
  3009                           
  3010                           ;FRAME.c: 560: if(MinAdres>NeightAdress4>MaxAdres)
  3011  00150C  5035               	movf	_MinAdres,w,c	;volatile
  3012  00150E  5C47               	subwf	_NeightAdress4,w,c	;volatile
  3013  001510  5036               	movf	_MinAdres+1,w,c	;volatile
  3014  001512  5848               	subwfb	_NeightAdress4+1,w,c	;volatile
  3015  001514  B0D8               	btfsc	status,0,c
  3016  001516  D002               	goto	u3590
  3017  001518  0E01               	movlw	1
  3018  00151A  D001               	goto	u3600
  3019  00151C                     u3590:
  3020  00151C  0E00               	movlw	0
  3021  00151E                     u3600:
  3022  00151E  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3023  001520  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3024  001522  500F               	movf	??_WriteDataToEEPROM,w,c
  3025  001524  5C4D               	subwf	_MaxAdres,w,c	;volatile
  3026  001526  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3027  001528  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  3028  00152A  B0D8               	btfsc	status,0,c
  3029  00152C  D004               	goto	l4353
  3030                           
  3031                           ;FRAME.c: 561: {;FRAME.c: 562: NeightAdress4=0x0000;
  3032  00152E  0E00               	movlw	0
  3033  001530  6E48               	movwf	_NeightAdress4+1,c	;volatile
  3034  001532  0E00               	movlw	0
  3035  001534  6E47               	movwf	_NeightAdress4,c	;volatile
  3036  001536                     l4353:
  3037                           
  3038                           ;FRAME.c: 563: };FRAME.c: 564: NVMWrite(&NeightAdress4,122,2);
  3039  001536  0E47               	movlw	low _NeightAdress4
  3040  001538  6E09               	movwf	NVMWrite@source,c
  3041  00153A  0E00               	movlw	high _NeightAdress4
  3042  00153C  6E0A               	movwf	NVMWrite@source+1,c
  3043  00153E  0E00               	movlw	0
  3044  001540  6E0C               	movwf	NVMWrite@addr+1,c
  3045  001542  0E7A               	movlw	122
  3046  001544  6E0B               	movwf	NVMWrite@addr,c
  3047  001546  0E00               	movlw	0
  3048  001548  6E0E               	movwf	NVMWrite@count+1,c
  3049  00154A  0E02               	movlw	2
  3050  00154C  6E0D               	movwf	NVMWrite@count,c
  3051  00154E  EC76  F013         	call	_NVMWrite	;wreg free
  3052                           
  3053                           ;FRAME.c: 565: if(MinAdres>NeightAdress5>MaxAdres)
  3054  001552  5035               	movf	_MinAdres,w,c	;volatile
  3055  001554  5C45               	subwf	_NeightAdress5,w,c	;volatile
  3056  001556  5036               	movf	_MinAdres+1,w,c	;volatile
  3057  001558  5846               	subwfb	_NeightAdress5+1,w,c	;volatile
  3058  00155A  B0D8               	btfsc	status,0,c
  3059  00155C  D002               	goto	u3620
  3060  00155E  0E01               	movlw	1
  3061  001560  D001               	goto	u3630
  3062  001562                     u3620:
  3063  001562  0E00               	movlw	0
  3064  001564                     u3630:
  3065  001564  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3066  001566  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3067  001568  500F               	movf	??_WriteDataToEEPROM,w,c
  3068  00156A  5C4D               	subwf	_MaxAdres,w,c	;volatile
  3069  00156C  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3070  00156E  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  3071  001570  B0D8               	btfsc	status,0,c
  3072  001572  D004               	goto	l4359
  3073                           
  3074                           ;FRAME.c: 566: {;FRAME.c: 567: NeightAdress5=0x0000;
  3075  001574  0E00               	movlw	0
  3076  001576  6E46               	movwf	_NeightAdress5+1,c	;volatile
  3077  001578  0E00               	movlw	0
  3078  00157A  6E45               	movwf	_NeightAdress5,c	;volatile
  3079  00157C                     l4359:
  3080                           
  3081                           ;FRAME.c: 568: };FRAME.c: 569: NVMWrite(&NeightAdress5,125,2);
  3082  00157C  0E45               	movlw	low _NeightAdress5
  3083  00157E  6E09               	movwf	NVMWrite@source,c
  3084  001580  0E00               	movlw	high _NeightAdress5
  3085  001582  6E0A               	movwf	NVMWrite@source+1,c
  3086  001584  0E00               	movlw	0
  3087  001586  6E0C               	movwf	NVMWrite@addr+1,c
  3088  001588  0E7D               	movlw	125
  3089  00158A  6E0B               	movwf	NVMWrite@addr,c
  3090  00158C  0E00               	movlw	0
  3091  00158E  6E0E               	movwf	NVMWrite@count+1,c
  3092  001590  0E02               	movlw	2
  3093  001592  6E0D               	movwf	NVMWrite@count,c
  3094  001594  EC76  F013         	call	_NVMWrite	;wreg free
  3095                           
  3096                           ;FRAME.c: 570: if(MinAdres>NeightAdress6>MaxAdres)
  3097  001598  5035               	movf	_MinAdres,w,c	;volatile
  3098  00159A  5C43               	subwf	_NeightAdress6,w,c	;volatile
  3099  00159C  5036               	movf	_MinAdres+1,w,c	;volatile
  3100  00159E  5844               	subwfb	_NeightAdress6+1,w,c	;volatile
  3101  0015A0  B0D8               	btfsc	status,0,c
  3102  0015A2  D002               	goto	u3650
  3103  0015A4  0E01               	movlw	1
  3104  0015A6  D001               	goto	u3660
  3105  0015A8                     u3650:
  3106  0015A8  0E00               	movlw	0
  3107  0015AA                     u3660:
  3108  0015AA  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3109  0015AC  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3110  0015AE  500F               	movf	??_WriteDataToEEPROM,w,c
  3111  0015B0  5C4D               	subwf	_MaxAdres,w,c	;volatile
  3112  0015B2  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3113  0015B4  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  3114  0015B6  B0D8               	btfsc	status,0,c
  3115  0015B8  D004               	goto	l4365
  3116                           
  3117                           ;FRAME.c: 571: {;FRAME.c: 572: NeightAdress6=0x0000;
  3118  0015BA  0E00               	movlw	0
  3119  0015BC  6E44               	movwf	_NeightAdress6+1,c	;volatile
  3120  0015BE  0E00               	movlw	0
  3121  0015C0  6E43               	movwf	_NeightAdress6,c	;volatile
  3122  0015C2                     l4365:
  3123                           
  3124                           ;FRAME.c: 573: };FRAME.c: 574: NVMWrite(&NeightAdress6,128,2);
  3125  0015C2  0E43               	movlw	low _NeightAdress6
  3126  0015C4  6E09               	movwf	NVMWrite@source,c
  3127  0015C6  0E00               	movlw	high _NeightAdress6
  3128  0015C8  6E0A               	movwf	NVMWrite@source+1,c
  3129  0015CA  0E00               	movlw	0
  3130  0015CC  6E0C               	movwf	NVMWrite@addr+1,c
  3131  0015CE  0E80               	movlw	128
  3132  0015D0  6E0B               	movwf	NVMWrite@addr,c
  3133  0015D2  0E00               	movlw	0
  3134  0015D4  6E0E               	movwf	NVMWrite@count+1,c
  3135  0015D6  0E02               	movlw	2
  3136  0015D8  6E0D               	movwf	NVMWrite@count,c
  3137  0015DA  EC76  F013         	call	_NVMWrite	;wreg free
  3138                           
  3139                           ;FRAME.c: 575: if(MinAdres>NeightAdress7>MaxAdres)
  3140  0015DE  5035               	movf	_MinAdres,w,c	;volatile
  3141  0015E0  5C41               	subwf	_NeightAdress7,w,c	;volatile
  3142  0015E2  5036               	movf	_MinAdres+1,w,c	;volatile
  3143  0015E4  5842               	subwfb	_NeightAdress7+1,w,c	;volatile
  3144  0015E6  B0D8               	btfsc	status,0,c
  3145  0015E8  D002               	goto	u3680
  3146  0015EA  0E01               	movlw	1
  3147  0015EC  D001               	goto	u3690
  3148  0015EE                     u3680:
  3149  0015EE  0E00               	movlw	0
  3150  0015F0                     u3690:
  3151  0015F0  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3152  0015F2  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3153  0015F4  500F               	movf	??_WriteDataToEEPROM,w,c
  3154  0015F6  5C4D               	subwf	_MaxAdres,w,c	;volatile
  3155  0015F8  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3156  0015FA  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  3157  0015FC  B0D8               	btfsc	status,0,c
  3158  0015FE  D004               	goto	l4371
  3159                           
  3160                           ;FRAME.c: 576: {;FRAME.c: 577: NeightAdress7=0x0000;
  3161  001600  0E00               	movlw	0
  3162  001602  6E42               	movwf	_NeightAdress7+1,c	;volatile
  3163  001604  0E00               	movlw	0
  3164  001606  6E41               	movwf	_NeightAdress7,c	;volatile
  3165  001608                     l4371:
  3166                           
  3167                           ;FRAME.c: 578: };FRAME.c: 579: NVMWrite(&NeightAdress7,131,2);
  3168  001608  0E41               	movlw	low _NeightAdress7
  3169  00160A  6E09               	movwf	NVMWrite@source,c
  3170  00160C  0E00               	movlw	high _NeightAdress7
  3171  00160E  6E0A               	movwf	NVMWrite@source+1,c
  3172  001610  0E00               	movlw	0
  3173  001612  6E0C               	movwf	NVMWrite@addr+1,c
  3174  001614  0E83               	movlw	131
  3175  001616  6E0B               	movwf	NVMWrite@addr,c
  3176  001618  0E00               	movlw	0
  3177  00161A  6E0E               	movwf	NVMWrite@count+1,c
  3178  00161C  0E02               	movlw	2
  3179  00161E  6E0D               	movwf	NVMWrite@count,c
  3180  001620  EC76  F013         	call	_NVMWrite	;wreg free
  3181                           
  3182                           ;FRAME.c: 580: if(MinAdres>NeightAdress8>MaxAdres)
  3183  001624  5035               	movf	_MinAdres,w,c	;volatile
  3184  001626  5C3F               	subwf	_NeightAdress8,w,c	;volatile
  3185  001628  5036               	movf	_MinAdres+1,w,c	;volatile
  3186  00162A  5840               	subwfb	_NeightAdress8+1,w,c	;volatile
  3187  00162C  B0D8               	btfsc	status,0,c
  3188  00162E  D002               	goto	u3710
  3189  001630  0E01               	movlw	1
  3190  001632  D001               	goto	u3720
  3191  001634                     u3710:
  3192  001634  0E00               	movlw	0
  3193  001636                     u3720:
  3194  001636  6E0F               	movwf	??_WriteDataToEEPROM& (0+255),c
  3195  001638  6A10               	clrf	(??_WriteDataToEEPROM+1)& (0+255),c
  3196  00163A  500F               	movf	??_WriteDataToEEPROM,w,c
  3197  00163C  5C4D               	subwf	_MaxAdres,w,c	;volatile
  3198  00163E  5010               	movf	??_WriteDataToEEPROM+1,w,c
  3199  001640  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  3200  001642  B0D8               	btfsc	status,0,c
  3201  001644  D004               	goto	l4377
  3202                           
  3203                           ;FRAME.c: 581: {;FRAME.c: 582: NeightAdress8=0x0000;
  3204  001646  0E00               	movlw	0
  3205  001648  6E40               	movwf	_NeightAdress8+1,c	;volatile
  3206  00164A  0E00               	movlw	0
  3207  00164C  6E3F               	movwf	_NeightAdress8,c	;volatile
  3208  00164E                     l4377:
  3209                           
  3210                           ;FRAME.c: 583: };FRAME.c: 584: NVMWrite(&NeightAdress8,134,2);
  3211  00164E  0E3F               	movlw	low _NeightAdress8
  3212  001650  6E09               	movwf	NVMWrite@source,c
  3213  001652  0E00               	movlw	high _NeightAdress8
  3214  001654  6E0A               	movwf	NVMWrite@source+1,c
  3215  001656  0E00               	movlw	0
  3216  001658  6E0C               	movwf	NVMWrite@addr+1,c
  3217  00165A  0E86               	movlw	134
  3218  00165C  6E0B               	movwf	NVMWrite@addr,c
  3219  00165E  0E00               	movlw	0
  3220  001660  6E0E               	movwf	NVMWrite@count+1,c
  3221  001662  0E02               	movlw	2
  3222  001664  6E0D               	movwf	NVMWrite@count,c
  3223  001666  EC76  F013         	call	_NVMWrite	;wreg free
  3224  00166A  0012               	return		;funcret
  3225  00166C                     __end_of_WriteDataToEEPROM:
  3226                           	opt callstack 0
  3227                           
  3228 ;; *************** function _NVMWrite *****************
  3229 ;; Defined at:
  3230 ;;		line 148 in file "EEPROM.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  source          2    8[COMRAM] PTR unsigned char 
  3233 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  3234 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  3235 ;;		 -> NeightAdress1(2), 
  3236 ;;  addr            2   10[COMRAM] unsigned short 
  3237 ;;  count           2   12[COMRAM] unsigned short 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3249 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;Total ram usage:        6 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    4
  3256 ;; This function calls:
  3257 ;;		_WritetoEEPROM
  3258 ;; This function is called by:
  3259 ;;		_WriteDataToEEPROM
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text20
  3264  0026EC                     __ptext20:
  3265                           	opt callstack 0
  3266  0026EC                     _NVMWrite:
  3267                           	opt callstack 22
  3268                           
  3269                           ;EEPROM.c: 150: while(count > 0)
  3270                           
  3271                           ;incstack = 0
  3272  0026EC  D015               	goto	l4063
  3273  0026EE                     l965:
  3274  0026EE  B2A6               	btfsc	4006,1,c	;volsfr
  3275  0026F0  D7FE               	goto	l965
  3276                           
  3277                           ;EEPROM.c: 153: WritetoEEPROM(addr++,*source);
  3278  0026F2  C00B  F006         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3279  0026F6  C00C  F007         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3280  0026FA  C009  FFD9         	movff	NVMWrite@source,fsr2l
  3281  0026FE  C00A  FFDA         	movff	NVMWrite@source+1,fsr2h
  3282  002702  50DF               	movf	indf2,w,c
  3283  002704  6E08               	movwf	WritetoEEPROM@Data,c
  3284  002706  ECE2  F013         	call	_WritetoEEPROM	;wreg free
  3285  00270A  4A0B               	infsnz	NVMWrite@addr,f,c
  3286  00270C  2A0C               	incf	NVMWrite@addr+1,f,c
  3287                           
  3288                           ;EEPROM.c: 154: count--;
  3289  00270E  060D               	decf	NVMWrite@count,f,c
  3290  002710  A0D8               	btfss	status,0,c
  3291  002712  060E               	decf	NVMWrite@count+1,f,c
  3292                           
  3293                           ;EEPROM.c: 155: source++;
  3294  002714  4A09               	infsnz	NVMWrite@source,f,c
  3295  002716  2A0A               	incf	NVMWrite@source+1,f,c
  3296  002718                     l4063:
  3297  002718  500D               	movf	NVMWrite@count,w,c
  3298  00271A  100E               	iorwf	NVMWrite@count+1,w,c
  3299  00271C  B4D8               	btfsc	status,2,c
  3300  00271E  0012               	return	
  3301  002720  D7E6               	goto	l965
  3302  002722                     __end_of_NVMWrite:
  3303                           	opt callstack 0
  3304                           
  3305 ;; *************** function _WritetoEEPROM *****************
  3306 ;; Defined at:
  3307 ;;		line 95 in file "EEPROM.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  Address         2    5[COMRAM] unsigned short 
  3310 ;;  Data            1    7[COMRAM] unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3322 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;Total ram usage:        3 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    3
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_NVMWrite
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text21
  3337  0027C4                     __ptext21:
  3338                           	opt callstack 0
  3339  0027C4                     _WritetoEEPROM:
  3340                           	opt callstack 22
  3341                           
  3342                           ;EEPROM.c: 97: static BYTE GIE_Status;;EEPROM.c: 99: EEADRH = (BYTE)(Address>>8);
  3343                           
  3344                           ;incstack = 0
  3345  0027C4  5007               	movf	WritetoEEPROM@Address+1,w,c
  3346  0027C6  6EAA               	movwf	4010,c	;volatile
  3347                           
  3348                           ;EEPROM.c: 100: EEADR = (BYTE)Address;
  3349  0027C8  C006  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3350                           
  3351                           ;EEPROM.c: 101: EEDATA = Data;
  3352  0027CC  C008  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3353                           
  3354                           ;EEPROM.c: 102: EECON1bits.WREN = 1;
  3355  0027D0  84A6               	bsf	4006,2,c	;volsfr
  3356                           
  3357                           ;EEPROM.c: 103: GIE_Status = INTCONbits.GIE;
  3358  0027D2  0E00               	movlw	0
  3359  0027D4  BEF2               	btfsc	4082,7,c	;volatile
  3360  0027D6  0E01               	movlw	1
  3361  0027D8  6E39               	movwf	WritetoEEPROM@GIE_Status,c
  3362                           
  3363                           ;EEPROM.c: 104: INTCONbits.GIE = 0;
  3364  0027DA  9EF2               	bcf	4082,7,c	;volatile
  3365                           
  3366                           ;EEPROM.c: 105: EECON2 = 0x55;
  3367  0027DC  0E55               	movlw	85
  3368  0027DE  6EA7               	movwf	4007,c	;volsfr
  3369                           
  3370                           ;EEPROM.c: 106: EECON2 = 0xAA;
  3371  0027E0  0EAA               	movlw	170
  3372  0027E2  6EA7               	movwf	4007,c	;volsfr
  3373                           
  3374                           ;EEPROM.c: 107: EECON1bits.WR = 1;
  3375  0027E4  82A6               	bsf	4006,1,c	;volsfr
  3376                           
  3377                           ;EEPROM.c: 108: INTCONbits.GIE = GIE_Status;
  3378  0027E6  B039               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3379  0027E8  D002               	bra	u3155
  3380  0027EA  9EF2               	bcf	4082,7,c	;volatile
  3381  0027EC  D001               	bra	u3156
  3382  0027EE                     u3155:
  3383  0027EE  8EF2               	bsf	4082,7,c	;volatile
  3384  0027F0                     u3156:
  3385                           
  3386                           ;EEPROM.c: 109: EECON1bits.WREN = 0;
  3387  0027F0  94A6               	bcf	4006,2,c	;volsfr
  3388  0027F2                     l948:
  3389  0027F2  B2A6               	btfsc	4006,1,c	;volsfr
  3390  0027F4  D7FE               	goto	l948
  3391  0027F6  0012               	return	
  3392  0027F8                     __end_of_WritetoEEPROM:
  3393                           	opt callstack 0
  3394                           
  3395 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3396 ;; Defined at:
  3397 ;;		line 393 in file "FRAME.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  message         2    5[COMRAM] PTR struct .
  3400 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;Total ram usage:        3 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    3
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_FRAME_DeviceReset
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text22
  3427  002452                     __ptext22:
  3428                           	opt callstack 0
  3429  002452                     _FRAME_DataUpdateAndChangeOption:
  3430                           	opt callstack 24
  3431                           
  3432                           ;FRAME.c: 396: Dane->rokU16 = message->data[4];
  3433                           
  3434                           ;incstack = 0
  3435  002452  EE20 F00C          	lfsr	2,12
  3436  002456  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3437  002458  26D9               	addwf	fsr2l,f,c
  3438  00245A  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3439  00245C  22DA               	addwfc	fsr2h,f,c
  3440  00245E  50DF               	movf	indf2,w,c
  3441  002460  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3442  002462  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3443  002464  6E36               	movwf	54,c
  3444  002466  6A37               	clrf	55,c
  3445                           
  3446                           ;FRAME.c: 397: Dane->miesiacU16 = message->data[5];
  3447  002468  EE20 F00D          	lfsr	2,13
  3448  00246C  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3449  00246E  26D9               	addwf	fsr2l,f,c
  3450  002470  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3451  002472  22DA               	addwfc	fsr2h,f,c
  3452  002474  50DF               	movf	indf2,w,c
  3453  002476  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3454  002478  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3455  00247A  6E38               	movwf	56,c
  3456  00247C  6A39               	clrf	57,c
  3457                           
  3458                           ;FRAME.c: 398: Dane->dzienU16 = message->data[6];
  3459  00247E  EE20 F00E          	lfsr	2,14
  3460  002482  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3461  002484  26D9               	addwf	fsr2l,f,c
  3462  002486  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3463  002488  22DA               	addwfc	fsr2h,f,c
  3464  00248A  50DF               	movf	indf2,w,c
  3465  00248C  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3466  00248E  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3467  002490  6E3A               	movwf	58,c
  3468  002492  6A3B               	clrf	59,c
  3469                           
  3470                           ;FRAME.c: 399: Dane->godzinaU16 = message->data[7];
  3471  002494  EE20 F00F          	lfsr	2,15
  3472  002498  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3473  00249A  26D9               	addwf	fsr2l,f,c
  3474  00249C  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3475  00249E  22DA               	addwfc	fsr2h,f,c
  3476  0024A0  50DF               	movf	indf2,w,c
  3477  0024A2  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3478  0024A4  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3479  0024A6  6E3C               	movwf	60,c
  3480  0024A8  6A3D               	clrf	61,c
  3481  0024AA  0012               	return		;funcret
  3482  0024AC                     __end_of_FRAME_DataUpdateAndChangeOption:
  3483                           	opt callstack 0
  3484                           
  3485 ;; *************** function _FRAME_AxisStatus *****************
  3486 ;; Defined at:
  3487 ;;		line 357 in file "FRAME.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  message         2    5[COMRAM] PTR struct .
  3490 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  i               2    0        unsigned short 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3506 ;;Total ram usage:        3 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    3
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_FRAME_HandleCanFrame
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text23
  3517  002722                     __ptext23:
  3518                           	opt callstack 0
  3519  002722                     _FRAME_AxisStatus:
  3520                           	opt callstack 25
  3521                           
  3522                           ;FRAME.c: 359: WORD i;;FRAME.c: 361: if(message->message_type == 0x02)
  3523                           
  3524                           ;incstack = 0
  3525  002722  EE20 F001          	lfsr	2,1
  3526  002726  5006               	movf	FRAME_AxisStatus@message,w,c
  3527  002728  26D9               	addwf	fsr2l,f,c
  3528  00272A  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3529  00272C  22DA               	addwfc	fsr2h,f,c
  3530  00272E  0E02               	movlw	2
  3531  002730  18DE               	xorwf	postinc2,w,c
  3532  002732  A4D8               	btfss	status,2,c
  3533  002734  0012               	return	
  3534                           
  3535                           ;FRAME.c: 362: {;FRAME.c: 363: message->data_length = 1;
  3536  002736  EE20 F010          	lfsr	2,16
  3537  00273A  5006               	movf	FRAME_AxisStatus@message,w,c
  3538  00273C  26D9               	addwf	fsr2l,f,c
  3539  00273E  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3540  002740  22DA               	addwfc	fsr2h,f,c
  3541  002742  0E01               	movlw	1
  3542  002744  6EDF               	movwf	indf2,c
  3543                           
  3544                           ;FRAME.c: 374: message->data[0] = 0xFF;
  3545  002746  EE20 F008          	lfsr	2,8
  3546  00274A  5006               	movf	FRAME_AxisStatus@message,w,c
  3547  00274C  26D9               	addwf	fsr2l,f,c
  3548  00274E  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3549  002750  22DA               	addwfc	fsr2h,f,c
  3550  002752  0EFF               	movlw	255
  3551  002754  6EDF               	movwf	indf2,c
  3552                           
  3553                           ;FRAME.c: 375: }
  3554  002756  0012               	return		;funcret
  3555  002758                     __end_of_FRAME_AxisStatus:
  3556                           	opt callstack 0
  3557                           
  3558 ;; *************** function _FRAME_AveragingTimes *****************
  3559 ;; Defined at:
  3560 ;;		line 293 in file "FRAME.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  message         2    5[COMRAM] PTR struct .
  3563 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;Total ram usage:        3 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    3
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_FRAME_HandleCanFrame
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text24
  3590  002758                     __ptext24:
  3591                           	opt callstack 0
  3592  002758                     _FRAME_AveragingTimes:
  3593                           	opt callstack 25
  3594                           
  3595                           ;FRAME.c: 295: if(message->message_type == 0x02)
  3596                           
  3597                           ;incstack = 0
  3598  002758  EE20 F001          	lfsr	2,1
  3599  00275C  5006               	movf	FRAME_AveragingTimes@message,w,c
  3600  00275E  26D9               	addwf	fsr2l,f,c
  3601  002760  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3602  002762  22DA               	addwfc	fsr2h,f,c
  3603  002764  0E02               	movlw	2
  3604  002766  18DE               	xorwf	postinc2,w,c
  3605  002768  A4D8               	btfss	status,2,c
  3606  00276A  0012               	return	
  3607                           
  3608                           ;FRAME.c: 296: {;FRAME.c: 297: message->data_length = 1;
  3609  00276C  EE20 F010          	lfsr	2,16
  3610  002770  5006               	movf	FRAME_AveragingTimes@message,w,c
  3611  002772  26D9               	addwf	fsr2l,f,c
  3612  002774  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3613  002776  22DA               	addwfc	fsr2h,f,c
  3614  002778  0E01               	movlw	1
  3615  00277A  6EDF               	movwf	indf2,c
  3616                           
  3617                           ;FRAME.c: 305: message->data[0] = 0xFF;
  3618  00277C  EE20 F008          	lfsr	2,8
  3619  002780  5006               	movf	FRAME_AveragingTimes@message,w,c
  3620  002782  26D9               	addwf	fsr2l,f,c
  3621  002784  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3622  002786  22DA               	addwfc	fsr2h,f,c
  3623  002788  0EFF               	movlw	255
  3624  00278A  6EDF               	movwf	indf2,c
  3625                           
  3626                           ;FRAME.c: 306: }
  3627  00278C  0012               	return		;funcret
  3628  00278E                     __end_of_FRAME_AveragingTimes:
  3629                           	opt callstack 0
  3630                           
  3631 ;; *************** function _FRAME_AnalogValue *****************
  3632 ;; Defined at:
  3633 ;;		line 683 in file "FRAME.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  message         2    5[COMRAM] PTR struct .
  3636 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3637 ;;  set             2    7[COMRAM] unsigned short 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  i               2    0        unsigned short 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		None
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3653 ;;Total ram usage:        4 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    3
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_FRAME_HandleCanFrame
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text25
  3664  002A26                     __ptext25:
  3665                           	opt callstack 0
  3666  002A26                     _FRAME_AnalogValue:
  3667                           	opt callstack 25
  3668                           
  3669                           ;incstack = 0
  3670  002A26  0012               	return		;funcret
  3671  002A28                     __end_of_FRAME_AnalogValue:
  3672                           	opt callstack 0
  3673                           
  3674 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3675 ;; Defined at:
  3676 ;;		line 741 in file "FRAME.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  message         2    5[COMRAM] PTR struct .
  3679 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3680 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  kier            2   13[COMRAM] unsigned short 
  3683 ;;  it              2    0        unsigned short 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;Total ram usage:       10 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    4
  3700 ;; This function calls:
  3701 ;;		_CAN_SetupFilter_Ne
  3702 ;; This function is called by:
  3703 ;;		_FRAME_HandleCanFrame
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text26
  3708  000C62                     __ptext26:
  3709                           	opt callstack 0
  3710  000C62                     _FRAME_AdressOfNeighbors:
  3711                           	opt callstack 24
  3712                           
  3713                           ;FRAME.c: 743: WORD it;;FRAME.c: 746: WORD kier = (nrRamki-0x10);
  3714                           
  3715                           ;incstack = 0
  3716  000C62  0EF0               	movlw	240
  3717  000C64  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3718  000C66  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  3719  000C68  0EFF               	movlw	255
  3720  000C6A  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3721  000C6C  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3722                           
  3723                           ;FRAME.c: 747: if(message->message_type == 0x02)
  3724  000C6E  EE20 F001          	lfsr	2,1
  3725  000C72  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3726  000C74  26D9               	addwf	fsr2l,f,c
  3727  000C76  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3728  000C78  22DA               	addwfc	fsr2h,f,c
  3729  000C7A  0E02               	movlw	2
  3730  000C7C  18DE               	xorwf	postinc2,w,c
  3731  000C7E  A4D8               	btfss	status,2,c
  3732  000C80  D08E               	goto	l4679
  3733                           
  3734                           ;FRAME.c: 748: {;FRAME.c: 750: message->data_length = 8;
  3735  000C82  EE20 F010          	lfsr	2,16
  3736  000C86  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3737  000C88  26D9               	addwf	fsr2l,f,c
  3738  000C8A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3739  000C8C  22DA               	addwfc	fsr2h,f,c
  3740  000C8E  0E08               	movlw	8
  3741  000C90  6EDF               	movwf	indf2,c
  3742                           
  3743                           ;FRAME.c: 752: if(kier == 0)
  3744  000C92  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3745  000C94  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3746  000C96  A4D8               	btfss	status,2,c
  3747  000C98  D041               	goto	l4677
  3748                           
  3749                           ;FRAME.c: 753: {;FRAME.c: 754: message->data[0] = (NeightAdress1>> 8);
  3750  000C9A  EE20 F008          	lfsr	2,8
  3751  000C9E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3752  000CA0  26D9               	addwf	fsr2l,f,c
  3753  000CA2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3754  000CA4  22DA               	addwfc	fsr2h,f,c
  3755  000CA6  504C               	movf	_NeightAdress1+1,w,c	;volatile
  3756  000CA8  6EDF               	movwf	indf2,c
  3757                           
  3758                           ;FRAME.c: 755: message->data[1] = NeightAdress1 & 0b11111111;
  3759  000CAA  EE20 F009          	lfsr	2,9
  3760  000CAE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3761  000CB0  26D9               	addwf	fsr2l,f,c
  3762  000CB2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3763  000CB4  22DA               	addwfc	fsr2h,f,c
  3764  000CB6  C04B  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3765                           
  3766                           ;FRAME.c: 756: message->data[2] = (NeightAdress2>> 8);
  3767  000CBA  EE20 F00A          	lfsr	2,10
  3768  000CBE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3769  000CC0  26D9               	addwf	fsr2l,f,c
  3770  000CC2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3771  000CC4  22DA               	addwfc	fsr2h,f,c
  3772  000CC6  5059               	movf	_NeightAdress2+1,w,c	;volatile
  3773  000CC8  6EDF               	movwf	indf2,c
  3774                           
  3775                           ;FRAME.c: 757: message->data[3] = NeightAdress2 & 0b11111111;
  3776  000CCA  EE20 F00B          	lfsr	2,11
  3777  000CCE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3778  000CD0  26D9               	addwf	fsr2l,f,c
  3779  000CD2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3780  000CD4  22DA               	addwfc	fsr2h,f,c
  3781  000CD6  C058  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3782                           
  3783                           ;FRAME.c: 758: message->data[4] = (NeightAdress3>> 8);
  3784  000CDA  EE20 F00C          	lfsr	2,12
  3785  000CDE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3786  000CE0  26D9               	addwf	fsr2l,f,c
  3787  000CE2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3788  000CE4  22DA               	addwfc	fsr2h,f,c
  3789  000CE6  504A               	movf	_NeightAdress3+1,w,c	;volatile
  3790  000CE8  6EDF               	movwf	indf2,c
  3791                           
  3792                           ;FRAME.c: 759: message->data[5] = NeightAdress3 & 0b11111111;
  3793  000CEA  EE20 F00D          	lfsr	2,13
  3794  000CEE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3795  000CF0  26D9               	addwf	fsr2l,f,c
  3796  000CF2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3797  000CF4  22DA               	addwfc	fsr2h,f,c
  3798  000CF6  C049  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3799                           
  3800                           ;FRAME.c: 760: message->data[6] = (NeightAdress4>> 8);
  3801  000CFA  EE20 F00E          	lfsr	2,14
  3802  000CFE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3803  000D00  26D9               	addwf	fsr2l,f,c
  3804  000D02  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3805  000D04  22DA               	addwfc	fsr2h,f,c
  3806  000D06  5048               	movf	_NeightAdress4+1,w,c	;volatile
  3807  000D08  6EDF               	movwf	indf2,c
  3808                           
  3809                           ;FRAME.c: 761: message->data[7] = NeightAdress4 & 0b11111111;
  3810  000D0A  EE20 F00F          	lfsr	2,15
  3811  000D0E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3812  000D10  26D9               	addwf	fsr2l,f,c
  3813  000D12  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3814  000D14  22DA               	addwfc	fsr2h,f,c
  3815  000D16  C047  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3816                           
  3817                           ;FRAME.c: 762: }
  3818  000D1A  0012               	return	
  3819  000D1C                     l4677:
  3820                           
  3821                           ;FRAME.c: 763: else;FRAME.c: 764: {;FRAME.c: 765: message->data[0] = (NeightAdress5>> 8)
      +                          ;
  3822  000D1C  EE20 F008          	lfsr	2,8
  3823  000D20  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3824  000D22  26D9               	addwf	fsr2l,f,c
  3825  000D24  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3826  000D26  22DA               	addwfc	fsr2h,f,c
  3827  000D28  5046               	movf	_NeightAdress5+1,w,c	;volatile
  3828  000D2A  6EDF               	movwf	indf2,c
  3829                           
  3830                           ;FRAME.c: 766: message->data[1] = NeightAdress5 & 0b11111111;
  3831  000D2C  EE20 F009          	lfsr	2,9
  3832  000D30  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3833  000D32  26D9               	addwf	fsr2l,f,c
  3834  000D34  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3835  000D36  22DA               	addwfc	fsr2h,f,c
  3836  000D38  C045  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3837                           
  3838                           ;FRAME.c: 767: message->data[2] = (NeightAdress6>> 8);
  3839  000D3C  EE20 F00A          	lfsr	2,10
  3840  000D40  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3841  000D42  26D9               	addwf	fsr2l,f,c
  3842  000D44  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3843  000D46  22DA               	addwfc	fsr2h,f,c
  3844  000D48  5044               	movf	_NeightAdress6+1,w,c	;volatile
  3845  000D4A  6EDF               	movwf	indf2,c
  3846                           
  3847                           ;FRAME.c: 768: message->data[3] = NeightAdress6 & 0b11111111;
  3848  000D4C  EE20 F00B          	lfsr	2,11
  3849  000D50  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3850  000D52  26D9               	addwf	fsr2l,f,c
  3851  000D54  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3852  000D56  22DA               	addwfc	fsr2h,f,c
  3853  000D58  C043  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3854                           
  3855                           ;FRAME.c: 769: message->data[4] = (NeightAdress7>> 8);
  3856  000D5C  EE20 F00C          	lfsr	2,12
  3857  000D60  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3858  000D62  26D9               	addwf	fsr2l,f,c
  3859  000D64  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3860  000D66  22DA               	addwfc	fsr2h,f,c
  3861  000D68  5042               	movf	_NeightAdress7+1,w,c	;volatile
  3862  000D6A  6EDF               	movwf	indf2,c
  3863                           
  3864                           ;FRAME.c: 770: message->data[5] = NeightAdress7 & 0b11111111;
  3865  000D6C  EE20 F00D          	lfsr	2,13
  3866  000D70  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3867  000D72  26D9               	addwf	fsr2l,f,c
  3868  000D74  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3869  000D76  22DA               	addwfc	fsr2h,f,c
  3870  000D78  C041  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3871                           
  3872                           ;FRAME.c: 771: message->data[6] = (NeightAdress8>> 8);
  3873  000D7C  EE20 F00E          	lfsr	2,14
  3874  000D80  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3875  000D82  26D9               	addwf	fsr2l,f,c
  3876  000D84  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3877  000D86  22DA               	addwfc	fsr2h,f,c
  3878  000D88  5040               	movf	_NeightAdress8+1,w,c	;volatile
  3879  000D8A  6EDF               	movwf	indf2,c
  3880                           
  3881                           ;FRAME.c: 772: message->data[7] = NeightAdress8 & 0b11111111;
  3882  000D8C  EE20 F00F          	lfsr	2,15
  3883  000D90  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3884  000D92  26D9               	addwf	fsr2l,f,c
  3885  000D94  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3886  000D96  22DA               	addwfc	fsr2h,f,c
  3887  000D98  C03F  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3888  000D9C  0012               	return	
  3889  000D9E                     l4679:
  3890                           
  3891                           ;FRAME.c: 778: else;FRAME.c: 779: {;FRAME.c: 782: if(kier == 0)
  3892  000D9E  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3893  000DA0  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3894  000DA2  A4D8               	btfss	status,2,c
  3895  000DA4  D063               	goto	l4685
  3896                           
  3897                           ;FRAME.c: 783: {;FRAME.c: 784: NeightAdress1 = (message->data[0] << 8)| message->data[1]
      +                          ;
  3898  000DA6  EE20 F008          	lfsr	2,8
  3899  000DAA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3900  000DAC  26D9               	addwf	fsr2l,f,c
  3901  000DAE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3902  000DB0  22DA               	addwfc	fsr2h,f,c
  3903  000DB2  50DF               	movf	indf2,w,c
  3904  000DB4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3905  000DB6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3906  000DB8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3907  000DBA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3908  000DBC  EE20 F009          	lfsr	2,9
  3909  000DC0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3910  000DC2  26D9               	addwf	fsr2l,f,c
  3911  000DC4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3912  000DC6  22DA               	addwfc	fsr2h,f,c
  3913  000DC8  50DF               	movf	indf2,w,c
  3914  000DCA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3915  000DCC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3916  000DCE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3917  000DD0  6E4B               	movwf	_NeightAdress1,c	;volatile
  3918  000DD2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3919  000DD4  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  3920                           
  3921                           ;FRAME.c: 785: NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3922  000DD6  EE20 F00A          	lfsr	2,10
  3923  000DDA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3924  000DDC  26D9               	addwf	fsr2l,f,c
  3925  000DDE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3926  000DE0  22DA               	addwfc	fsr2h,f,c
  3927  000DE2  50DF               	movf	indf2,w,c
  3928  000DE4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3929  000DE6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3930  000DE8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3931  000DEA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3932  000DEC  EE20 F00B          	lfsr	2,11
  3933  000DF0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3934  000DF2  26D9               	addwf	fsr2l,f,c
  3935  000DF4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3936  000DF6  22DA               	addwfc	fsr2h,f,c
  3937  000DF8  50DF               	movf	indf2,w,c
  3938  000DFA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3939  000DFC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3940  000DFE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3941  000E00  6E58               	movwf	_NeightAdress2,c	;volatile
  3942  000E02  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3943  000E04  6E59               	movwf	_NeightAdress2+1,c	;volatile
  3944                           
  3945                           ;FRAME.c: 786: NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3946  000E06  EE20 F00C          	lfsr	2,12
  3947  000E0A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3948  000E0C  26D9               	addwf	fsr2l,f,c
  3949  000E0E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3950  000E10  22DA               	addwfc	fsr2h,f,c
  3951  000E12  50DF               	movf	indf2,w,c
  3952  000E14  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3953  000E16  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3954  000E18  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3955  000E1A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3956  000E1C  EE20 F00D          	lfsr	2,13
  3957  000E20  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3958  000E22  26D9               	addwf	fsr2l,f,c
  3959  000E24  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3960  000E26  22DA               	addwfc	fsr2h,f,c
  3961  000E28  50DF               	movf	indf2,w,c
  3962  000E2A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3963  000E2C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3964  000E2E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3965  000E30  6E49               	movwf	_NeightAdress3,c	;volatile
  3966  000E32  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3967  000E34  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  3968                           
  3969                           ;FRAME.c: 787: NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3970  000E36  EE20 F00E          	lfsr	2,14
  3971  000E3A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3972  000E3C  26D9               	addwf	fsr2l,f,c
  3973  000E3E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3974  000E40  22DA               	addwfc	fsr2h,f,c
  3975  000E42  50DF               	movf	indf2,w,c
  3976  000E44  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3977  000E46  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3978  000E48  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3979  000E4A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3980  000E4C  EE20 F00F          	lfsr	2,15
  3981  000E50  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3982  000E52  26D9               	addwf	fsr2l,f,c
  3983  000E54  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3984  000E56  22DA               	addwfc	fsr2h,f,c
  3985  000E58  50DF               	movf	indf2,w,c
  3986  000E5A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3987  000E5C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3988  000E5E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3989  000E60  6E47               	movwf	_NeightAdress4,c	;volatile
  3990  000E62  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3991  000E64  6E48               	movwf	_NeightAdress4+1,c	;volatile
  3992  000E66                     l4683:
  3993                           
  3994                           ;FRAME.c: 788: CAN_SetupFilter_Ne();
  3995  000E66  ECD6  F00F         	call	_CAN_SetupFilter_Ne	;wreg free
  3996                           
  3997                           ;FRAME.c: 791: }
  3998  000E6A  0012               	return	
  3999  000E6C                     l4685:
  4000                           
  4001                           ;FRAME.c: 792: else;FRAME.c: 793: {;FRAME.c: 794: NeightAdress5 = (message->data[0] << 8
      +                          )| message->data[1];
  4002  000E6C  EE20 F008          	lfsr	2,8
  4003  000E70  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4004  000E72  26D9               	addwf	fsr2l,f,c
  4005  000E74  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4006  000E76  22DA               	addwfc	fsr2h,f,c
  4007  000E78  50DF               	movf	indf2,w,c
  4008  000E7A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4009  000E7C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4010  000E7E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4011  000E80  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4012  000E82  EE20 F009          	lfsr	2,9
  4013  000E86  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4014  000E88  26D9               	addwf	fsr2l,f,c
  4015  000E8A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4016  000E8C  22DA               	addwfc	fsr2h,f,c
  4017  000E8E  50DF               	movf	indf2,w,c
  4018  000E90  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4019  000E92  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4020  000E94  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4021  000E96  6E45               	movwf	_NeightAdress5,c	;volatile
  4022  000E98  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4023  000E9A  6E46               	movwf	_NeightAdress5+1,c	;volatile
  4024                           
  4025                           ;FRAME.c: 795: NeightAdress6 = (message->data[2] << 8)| message->data[3];
  4026  000E9C  EE20 F00A          	lfsr	2,10
  4027  000EA0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4028  000EA2  26D9               	addwf	fsr2l,f,c
  4029  000EA4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4030  000EA6  22DA               	addwfc	fsr2h,f,c
  4031  000EA8  50DF               	movf	indf2,w,c
  4032  000EAA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4033  000EAC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4034  000EAE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4035  000EB0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4036  000EB2  EE20 F00B          	lfsr	2,11
  4037  000EB6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4038  000EB8  26D9               	addwf	fsr2l,f,c
  4039  000EBA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4040  000EBC  22DA               	addwfc	fsr2h,f,c
  4041  000EBE  50DF               	movf	indf2,w,c
  4042  000EC0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4043  000EC2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4044  000EC4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4045  000EC6  6E43               	movwf	_NeightAdress6,c	;volatile
  4046  000EC8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4047  000ECA  6E44               	movwf	_NeightAdress6+1,c	;volatile
  4048                           
  4049                           ;FRAME.c: 796: NeightAdress7 = (message->data[4] << 8)| message->data[5];
  4050  000ECC  EE20 F00C          	lfsr	2,12
  4051  000ED0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4052  000ED2  26D9               	addwf	fsr2l,f,c
  4053  000ED4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4054  000ED6  22DA               	addwfc	fsr2h,f,c
  4055  000ED8  50DF               	movf	indf2,w,c
  4056  000EDA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4057  000EDC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4058  000EDE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4059  000EE0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4060  000EE2  EE20 F00D          	lfsr	2,13
  4061  000EE6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4062  000EE8  26D9               	addwf	fsr2l,f,c
  4063  000EEA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4064  000EEC  22DA               	addwfc	fsr2h,f,c
  4065  000EEE  50DF               	movf	indf2,w,c
  4066  000EF0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4067  000EF2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4068  000EF4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4069  000EF6  6E41               	movwf	_NeightAdress7,c	;volatile
  4070  000EF8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4071  000EFA  6E42               	movwf	_NeightAdress7+1,c	;volatile
  4072                           
  4073                           ;FRAME.c: 797: NeightAdress8 = (message->data[6] << 8)| message->data[7];
  4074  000EFC  EE20 F00E          	lfsr	2,14
  4075  000F00  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4076  000F02  26D9               	addwf	fsr2l,f,c
  4077  000F04  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4078  000F06  22DA               	addwfc	fsr2h,f,c
  4079  000F08  50DF               	movf	indf2,w,c
  4080  000F0A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  4081  000F0C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  4082  000F0E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  4083  000F10  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  4084  000F12  EE20 F00F          	lfsr	2,15
  4085  000F16  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  4086  000F18  26D9               	addwf	fsr2l,f,c
  4087  000F1A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  4088  000F1C  22DA               	addwfc	fsr2h,f,c
  4089  000F1E  50DF               	movf	indf2,w,c
  4090  000F20  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  4091  000F22  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  4092  000F24  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  4093  000F26  6E3F               	movwf	_NeightAdress8,c	;volatile
  4094  000F28  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  4095  000F2A  6E40               	movwf	_NeightAdress8+1,c	;volatile
  4096  000F2C  D79C               	goto	l4683
  4097  000F2E                     __end_of_FRAME_AdressOfNeighbors:
  4098                           	opt callstack 0
  4099                           
  4100 ;; *************** function _FRAME_AccelerometerStatus *****************
  4101 ;; Defined at:
  4102 ;;		line 200 in file "FRAME.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  message         2    7[COMRAM] PTR struct .
  4105 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;		None
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;Total ram usage:        3 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    4
  4124 ;; This function calls:
  4125 ;;		_MOCK_Klikniecie_Spadek
  4126 ;;		_MOCK_PrzyspieszenieX
  4127 ;;		_MOCK_PrzyspieszenieY
  4128 ;;		_MOCK_PrzyspieszenieZ
  4129 ;; This function is called by:
  4130 ;;		_FRAME_HandleCanFrame
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text27
  4135  002234                     __ptext27:
  4136                           	opt callstack 0
  4137  002234                     _FRAME_AccelerometerStatus:
  4138                           	opt callstack 24
  4139                           
  4140                           ;FRAME.c: 202: if(message->message_type == 0x02)
  4141                           
  4142                           ;incstack = 0
  4143  002234  EE20 F001          	lfsr	2,1
  4144  002238  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  4145  00223A  26D9               	addwf	fsr2l,f,c
  4146  00223C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4147  00223E  22DA               	addwfc	fsr2h,f,c
  4148  002240  0E02               	movlw	2
  4149  002242  18DE               	xorwf	postinc2,w,c
  4150  002244  A4D8               	btfss	status,2,c
  4151  002246  0012               	return	
  4152                           
  4153                           ;FRAME.c: 203: {;FRAME.c: 204: message->data_length = 4;
  4154  002248  EE20 F010          	lfsr	2,16
  4155  00224C  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  4156  00224E  26D9               	addwf	fsr2l,f,c
  4157  002250  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4158  002252  22DA               	addwfc	fsr2h,f,c
  4159  002254  0E04               	movlw	4
  4160  002256  6EDF               	movwf	indf2,c
  4161                           
  4162                           ;FRAME.c: 208: message->data[0] = MOCK_PrzyspieszenieX();
  4163  002258  EE20 F008          	lfsr	2,8
  4164  00225C  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  4165  00225E  26D9               	addwf	fsr2l,f,c
  4166  002260  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4167  002262  22DA               	addwfc	fsr2h,f,c
  4168  002264  ECEB  F014         	call	_MOCK_PrzyspieszenieX	;wreg free
  4169  002268  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  4170  00226A  6EDF               	movwf	indf2,c
  4171                           
  4172                           ;FRAME.c: 209: message->data[1] = MOCK_PrzyspieszenieY();
  4173  00226C  EE20 F009          	lfsr	2,9
  4174  002270  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  4175  002272  26D9               	addwf	fsr2l,f,c
  4176  002274  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4177  002276  22DA               	addwfc	fsr2h,f,c
  4178  002278  ECE6  F014         	call	_MOCK_PrzyspieszenieY	;wreg free
  4179  00227C  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  4180  00227E  6EDF               	movwf	indf2,c
  4181                           
  4182                           ;FRAME.c: 210: message->data[2] = MOCK_PrzyspieszenieZ();
  4183  002280  EE20 F00A          	lfsr	2,10
  4184  002284  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  4185  002286  26D9               	addwf	fsr2l,f,c
  4186  002288  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4187  00228A  22DA               	addwfc	fsr2h,f,c
  4188  00228C  ECE1  F014         	call	_MOCK_PrzyspieszenieZ	;wreg free
  4189  002290  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  4190  002292  6EDF               	movwf	indf2,c
  4191                           
  4192                           ;FRAME.c: 211: message->data[3] = MOCK_Klikniecie_Spadek();
  4193  002294  EE20 F00B          	lfsr	2,11
  4194  002298  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  4195  00229A  26D9               	addwf	fsr2l,f,c
  4196  00229C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4197  00229E  22DA               	addwfc	fsr2h,f,c
  4198  0022A0  ECF0  F014         	call	_MOCK_Klikniecie_Spadek	;wreg free
  4199  0022A4  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  4200  0022A6  6EDF               	movwf	indf2,c
  4201                           
  4202                           ;FRAME.c: 212: }
  4203  0022A8  0012               	return		;funcret
  4204  0022AA                     __end_of_FRAME_AccelerometerStatus:
  4205                           	opt callstack 0
  4206                           
  4207 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  4208 ;; Defined at:
  4209 ;;		line 73 in file "MOC_Funct.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2    5[COMRAM] unsigned int 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;Total ram usage:        2 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    3
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_FRAME_AccelerometerStatus
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text28
  4238  0029C2                     __ptext28:
  4239                           	opt callstack 0
  4240  0029C2                     _MOCK_PrzyspieszenieZ:
  4241                           	opt callstack 24
  4242                           
  4243                           ;MOC_Funct.c: 75: return 0xFE;
  4244                           
  4245                           ;incstack = 0
  4246  0029C2  0E00               	movlw	0
  4247  0029C4  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  4248  0029C6  0EFE               	movlw	254
  4249  0029C8  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  4250  0029CA  0012               	return		;funcret
  4251  0029CC                     __end_of_MOCK_PrzyspieszenieZ:
  4252                           	opt callstack 0
  4253                           
  4254 ;; *************** function _MOCK_PrzyspieszenieY *****************
  4255 ;; Defined at:
  4256 ;;		line 69 in file "MOC_Funct.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  2    5[COMRAM] unsigned int 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;Total ram usage:        2 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    3
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_FRAME_AccelerometerStatus
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text29
  4285  0029CC                     __ptext29:
  4286                           	opt callstack 0
  4287  0029CC                     _MOCK_PrzyspieszenieY:
  4288                           	opt callstack 24
  4289                           
  4290                           ;MOC_Funct.c: 71: return 0xFE;
  4291                           
  4292                           ;incstack = 0
  4293  0029CC  0E00               	movlw	0
  4294  0029CE  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  4295  0029D0  0EFE               	movlw	254
  4296  0029D2  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  4297  0029D4  0012               	return		;funcret
  4298  0029D6                     __end_of_MOCK_PrzyspieszenieY:
  4299                           	opt callstack 0
  4300                           
  4301 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4302 ;; Defined at:
  4303 ;;		line 64 in file "MOC_Funct.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  2    5[COMRAM] unsigned int 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;Total ram usage:        2 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    3
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_FRAME_AccelerometerStatus
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text30
  4332  0029D6                     __ptext30:
  4333                           	opt callstack 0
  4334  0029D6                     _MOCK_PrzyspieszenieX:
  4335                           	opt callstack 24
  4336                           
  4337                           ;MOC_Funct.c: 66: return 0xFE;
  4338                           
  4339                           ;incstack = 0
  4340  0029D6  0E00               	movlw	0
  4341  0029D8  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4342  0029DA  0EFE               	movlw	254
  4343  0029DC  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  4344  0029DE  0012               	return		;funcret
  4345  0029E0                     __end_of_MOCK_PrzyspieszenieX:
  4346                           	opt callstack 0
  4347                           
  4348 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4349 ;; Defined at:
  4350 ;;		line 77 in file "MOC_Funct.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2    5[COMRAM] unsigned int 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;Total ram usage:        2 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    3
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_FRAME_AccelerometerStatus
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text31
  4379  0029E0                     __ptext31:
  4380                           	opt callstack 0
  4381  0029E0                     _MOCK_Klikniecie_Spadek:
  4382                           	opt callstack 24
  4383                           
  4384                           ;MOC_Funct.c: 79: return 0b00000000;
  4385                           
  4386                           ;incstack = 0
  4387  0029E0  0E00               	movlw	0
  4388  0029E2  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4389  0029E4  0E00               	movlw	0
  4390  0029E6  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  4391  0029E8  0012               	return		;funcret
  4392  0029EA                     __end_of_MOCK_Klikniecie_Spadek:
  4393                           	opt callstack 0
  4394                           
  4395 ;; *************** function _CAN_SendFrame *****************
  4396 ;; Defined at:
  4397 ;;		line 247 in file "CAN.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  message         2   10[COMRAM] PTR struct .
  4400 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;Total ram usage:        5 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    4
  4419 ;; This function calls:
  4420 ;;		_CAN_MoveBuffIntoFrame
  4421 ;; This function is called by:
  4422 ;;		_FRAME_HandleCanFrame
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text32
  4427  001864                     __ptext32:
  4428                           	opt callstack 0
  4429  001864                     _CAN_SendFrame:
  4430                           	opt callstack 24
  4431                           
  4432                           ;CAN.c: 252: {;CAN.c: 253: ECANCON = 0x83;
  4433                           
  4434                           ;incstack = 0
  4435                           ;CAN.c: 251: for(;;)
  4436  001864  0E83               	movlw	131
  4437  001866  6E77               	movwf	3959,c	;volatile
  4438                           
  4439                           ;CAN.c: 254: if(!RXB0CONbits.FILHIT3)
  4440  001868  A660               	btfss	3936,3,c	;volatile
  4441  00186A  D00A               	goto	l290
  4442                           
  4443                           ;CAN.c: 258: };CAN.c: 259: ECANCON = 0x84;
  4444  00186C  0E84               	movlw	132
  4445  00186E  6E77               	movwf	3959,c	;volatile
  4446                           
  4447                           ;CAN.c: 260: if(!RXB0CONbits.FILHIT3)
  4448  001870  A660               	btfss	3936,3,c	;volatile
  4449  001872  D006               	goto	l290
  4450                           
  4451                           ;CAN.c: 264: };CAN.c: 265: ECANCON = 0x85;
  4452  001874  0E85               	movlw	133
  4453  001876  6E77               	movwf	3959,c	;volatile
  4454                           
  4455                           ;CAN.c: 266: if(!RXB0CONbits.FILHIT3)
  4456  001878  A660               	btfss	3936,3,c	;volatile
  4457  00187A  D002               	goto	l290
  4458  00187C  D7F3               	goto	_CAN_SendFrame
  4459  00187E                     l291:
  4460  00187E  00FF               	reset		;# 
  4461  001880                     l290:
  4462  001880  B474               	btfsc	3956,2,c	;volatile
  4463  001882  D7FD               	goto	l291
  4464                           
  4465                           ;CAN.c: 276: };CAN.c: 277: DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4466  001884  0E00               	movlw	0
  4467  001886  0100               	movlb	0	; () banked
  4468  001888  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;CAN.c: 278: RXB0EIDL = message->id.v[0];
  4472  00188A  EE20 F004          	lfsr	2,4
  4473  00188E  500B               	movf	CAN_SendFrame@message,w,c
  4474  001890  26D9               	addwf	fsr2l,f,c
  4475  001892  500C               	movf	CAN_SendFrame@message+1,w,c
  4476  001894  22DA               	addwfc	fsr2h,f,c
  4477  001896  50DF               	movf	indf2,w,c
  4478  001898  6E64               	movwf	3940,c	;volatile
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;CAN.c: 279: RXB0EIDH = message->id.v[1];
  4482  00189A  EE20 F005          	lfsr	2,5
  4483  00189E  500B               	movf	CAN_SendFrame@message,w,c
  4484  0018A0  26D9               	addwf	fsr2l,f,c
  4485  0018A2  500C               	movf	CAN_SendFrame@message+1,w,c
  4486  0018A4  22DA               	addwfc	fsr2h,f,c
  4487  0018A6  50DF               	movf	indf2,w,c
  4488  0018A8  6E63               	movwf	3939,c	;volatile
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;CAN.c: 280: RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4492  0018AA  EE20 F006          	lfsr	2,6
  4493  0018AE  500B               	movf	CAN_SendFrame@message,w,c
  4494  0018B0  26D9               	addwf	fsr2l,f,c
  4495  0018B2  500C               	movf	CAN_SendFrame@message+1,w,c
  4496  0018B4  22DA               	addwfc	fsr2h,f,c
  4497  0018B6  50DF               	movf	indf2,w,c
  4498  0018B8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4499  0018BA  0E03               	movlw	3
  4500  0018BC  160D               	andwf	??_CAN_SendFrame,f,c
  4501  0018BE  EE20 F006          	lfsr	2,6
  4502  0018C2  500B               	movf	CAN_SendFrame@message,w,c
  4503  0018C4  26D9               	addwf	fsr2l,f,c
  4504  0018C6  500C               	movf	CAN_SendFrame@message+1,w,c
  4505  0018C8  22DA               	addwfc	fsr2h,f,c
  4506  0018CA  50DF               	movf	indf2,w,c
  4507  0018CC  0BFC               	andlw	252
  4508  0018CE  0D08               	mullw	8
  4509  0018D0  50F3               	movf	prodl,w,c
  4510  0018D2  100D               	iorwf	??_CAN_SendFrame,w,c
  4511  0018D4  6E62               	movwf	3938,c	;volatile
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;CAN.c: 281: RXB0SIDLbits.EXID = 1;
  4515  0018D6  8662               	bsf	3938,3,c	;volatile
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;CAN.c: 282: RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4519  0018D8  EE20 F006          	lfsr	2,6
  4520  0018DC  500B               	movf	CAN_SendFrame@message,w,c
  4521  0018DE  26D9               	addwf	fsr2l,f,c
  4522  0018E0  500C               	movf	CAN_SendFrame@message+1,w,c
  4523  0018E2  22DA               	addwfc	fsr2h,f,c
  4524  0018E4  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  4525  0018E8  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  4526  0018EC  0E05               	movlw	5
  4527  0018EE  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4528  0018F0                     u3815:
  4529  0018F0  90D8               	bcf	status,0,c
  4530  0018F2  320E               	rrcf	??_CAN_SendFrame+1,f,c
  4531  0018F4  320D               	rrcf	??_CAN_SendFrame,f,c
  4532  0018F6  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4533  0018F8  D7FB               	goto	u3815
  4534  0018FA  500D               	movf	??_CAN_SendFrame,w,c
  4535  0018FC  6E61               	movwf	3937,c	;volatile
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;CAN.c: 284: RXB0DLC = 0;
  4539  0018FE  0E00               	movlw	0
  4540  001900  6E65               	movwf	3941,c	;volatile
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;CAN.c: 286: if(message->message_type==0x02)
  4544  001902  EE20 F001          	lfsr	2,1
  4545  001906  500B               	movf	CAN_SendFrame@message,w,c
  4546  001908  26D9               	addwf	fsr2l,f,c
  4547  00190A  500C               	movf	CAN_SendFrame@message+1,w,c
  4548  00190C  22DA               	addwfc	fsr2h,f,c
  4549  00190E  0E02               	movlw	2
  4550  001910  18DE               	xorwf	postinc2,w,c
  4551  001912  A4D8               	btfss	status,2,c
  4552  001914  D002               	goto	l4489
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;CAN.c: 287: {;CAN.c: 288: RXB0DLCbits.RXRTR = 1;
  4556  001916  8C65               	bsf	3941,6,c	;volatile
  4557                           
  4558                           ;CAN.c: 289: }
  4559  001918  D05A               	goto	l4493
  4560  00191A                     l4489:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;CAN.c: 290: else;CAN.c: 291: {;CAN.c: 292: RXB0DLCbits.DLC0 = (message->data_length & 0
      +                          x0F);
  4564  00191A  EE20 F010          	lfsr	2,16
  4565  00191E  500B               	movf	CAN_SendFrame@message,w,c
  4566  001920  26D9               	addwf	fsr2l,f,c
  4567  001922  500C               	movf	CAN_SendFrame@message+1,w,c
  4568  001924  22DA               	addwfc	fsr2h,f,c
  4569  001926  50DF               	movf	indf2,w,c
  4570  001928  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4571  00192A  0E0F               	movlw	15
  4572  00192C  160D               	andwf	??_CAN_SendFrame,f,c
  4573  00192E  5065               	movf	3941,w,c	;volatile
  4574  001930  180D               	xorwf	??_CAN_SendFrame,w,c
  4575  001932  0BFE               	andlw	-2
  4576  001934  180D               	xorwf	??_CAN_SendFrame,w,c
  4577  001936  6E65               	movwf	3941,c	;volatile
  4578                           
  4579                           ;CAN.c: 293: RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4580  001938  EE20 F010          	lfsr	2,16
  4581  00193C  500B               	movf	CAN_SendFrame@message,w,c
  4582  00193E  26D9               	addwf	fsr2l,f,c
  4583  001940  500C               	movf	CAN_SendFrame@message+1,w,c
  4584  001942  22DA               	addwfc	fsr2h,f,c
  4585  001944  50DF               	movf	indf2,w,c
  4586  001946  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4587  001948  90D8               	bcf	status,0,c
  4588  00194A  320D               	rrcf	??_CAN_SendFrame,f,c
  4589  00194C  0E07               	movlw	7
  4590  00194E  160D               	andwf	??_CAN_SendFrame,f,c
  4591  001950  460D               	rlncf	??_CAN_SendFrame,f,c
  4592  001952  5065               	movf	3941,w,c	;volatile
  4593  001954  180D               	xorwf	??_CAN_SendFrame,w,c
  4594  001956  0BFD               	andlw	-3
  4595  001958  180D               	xorwf	??_CAN_SendFrame,w,c
  4596  00195A  6E65               	movwf	3941,c	;volatile
  4597                           
  4598                           ;CAN.c: 294: RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4599  00195C  EE20 F010          	lfsr	2,16
  4600  001960  500B               	movf	CAN_SendFrame@message,w,c
  4601  001962  26D9               	addwf	fsr2l,f,c
  4602  001964  500C               	movf	CAN_SendFrame@message+1,w,c
  4603  001966  22DA               	addwfc	fsr2h,f,c
  4604  001968  50DF               	movf	indf2,w,c
  4605  00196A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4606  00196C  90D8               	bcf	status,0,c
  4607  00196E  320D               	rrcf	??_CAN_SendFrame,f,c
  4608  001970  90D8               	bcf	status,0,c
  4609  001972  320D               	rrcf	??_CAN_SendFrame,f,c
  4610  001974  0E03               	movlw	3
  4611  001976  160D               	andwf	??_CAN_SendFrame,f,c
  4612  001978  460D               	rlncf	??_CAN_SendFrame,f,c
  4613  00197A  460D               	rlncf	??_CAN_SendFrame,f,c
  4614  00197C  5065               	movf	3941,w,c	;volatile
  4615  00197E  180D               	xorwf	??_CAN_SendFrame,w,c
  4616  001980  0BFB               	andlw	-5
  4617  001982  180D               	xorwf	??_CAN_SendFrame,w,c
  4618  001984  6E65               	movwf	3941,c	;volatile
  4619                           
  4620                           ;CAN.c: 295: RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4621  001986  EE20 F010          	lfsr	2,16
  4622  00198A  500B               	movf	CAN_SendFrame@message,w,c
  4623  00198C  26D9               	addwf	fsr2l,f,c
  4624  00198E  500C               	movf	CAN_SendFrame@message+1,w,c
  4625  001990  22DA               	addwfc	fsr2h,f,c
  4626  001992  50DF               	movf	indf2,w,c
  4627  001994  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4628  001996  90D8               	bcf	status,0,c
  4629  001998  320D               	rrcf	??_CAN_SendFrame,f,c
  4630  00199A  90D8               	bcf	status,0,c
  4631  00199C  320D               	rrcf	??_CAN_SendFrame,f,c
  4632  00199E  90D8               	bcf	status,0,c
  4633  0019A0  320D               	rrcf	??_CAN_SendFrame,f,c
  4634  0019A2  0E01               	movlw	1
  4635  0019A4  160D               	andwf	??_CAN_SendFrame,f,c
  4636  0019A6  460D               	rlncf	??_CAN_SendFrame,f,c
  4637  0019A8  460D               	rlncf	??_CAN_SendFrame,f,c
  4638  0019AA  460D               	rlncf	??_CAN_SendFrame,f,c
  4639  0019AC  5065               	movf	3941,w,c	;volatile
  4640  0019AE  180D               	xorwf	??_CAN_SendFrame,w,c
  4641  0019B0  0BF7               	andlw	-9
  4642  0019B2  180D               	xorwf	??_CAN_SendFrame,w,c
  4643  0019B4  6E65               	movwf	3941,c	;volatile
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;CAN.c: 297: CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4647  0019B6  0E66               	movlw	102
  4648  0019B8  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4649  0019BA  0E0F               	movlw	15
  4650  0019BC  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4651  0019BE  0E08               	movlw	8
  4652  0019C0  240B               	addwf	CAN_SendFrame@message,w,c
  4653  0019C2  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4654  0019C4  0E00               	movlw	0
  4655  0019C6  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4656  0019C8  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4657  0019CA  EC30  F014         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4658  0019CE                     l4493:
  4659                           
  4660                           ;CAN.c: 298: };CAN.c: 300: RXB0CONbits.FILHIT3 = 1;
  4661  0019CE  8660               	bsf	3936,3,c	;volatile
  4662                           
  4663                           ;CAN.c: 302: DetectorLedRadar.Flags.ramkaTx = 1;
  4664  0019D0  0100               	movlb	0	; () banked
  4665  0019D2  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4666                           
  4667                           ; BSR set to: 0
  4668  0019D4  0012               	return		;funcret
  4669  0019D6                     __end_of_CAN_SendFrame:
  4670                           	opt callstack 0
  4671                           
  4672 ;; *************** function _CAN_GenID *****************
  4673 ;; Defined at:
  4674 ;;		line 446 in file "CAN.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  message         2    5[COMRAM] PTR struct .
  4677 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4678 ;;  frameID         1    7[COMRAM] unsigned char 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4690 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;Total ram usage:        5 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; Hardware stack levels required when called:    3
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_FRAME_HandleCanFrame
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text33
  4705  0021BC                     __ptext33:
  4706                           	opt callstack 0
  4707  0021BC                     _CAN_GenID:
  4708                           	opt callstack 25
  4709                           
  4710                           ;CAN.c: 449: message->frame_type = 0x03;
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;incstack = 0
  4714  0021BC  EE20 F002          	lfsr	2,2
  4715  0021C0  5006               	movf	CAN_GenID@message,w,c
  4716  0021C2  26D9               	addwf	fsr2l,f,c
  4717  0021C4  5007               	movf	CAN_GenID@message+1,w,c
  4718  0021C6  22DA               	addwfc	fsr2h,f,c
  4719  0021C8  0E03               	movlw	3
  4720  0021CA  6EDF               	movwf	indf2,c
  4721                           
  4722                           ;CAN.c: 450: message->message_type = 0x01;
  4723  0021CC  EE20 F001          	lfsr	2,1
  4724  0021D0  5006               	movf	CAN_GenID@message,w,c
  4725  0021D2  26D9               	addwf	fsr2l,f,c
  4726  0021D4  5007               	movf	CAN_GenID@message+1,w,c
  4727  0021D6  22DA               	addwfc	fsr2h,f,c
  4728  0021D8  0E01               	movlw	1
  4729  0021DA  6EDF               	movwf	indf2,c
  4730                           
  4731                           ;CAN.c: 451: message->id.w[1] = (WORD)frameID * (WORD)4;
  4732  0021DC  5008               	movf	CAN_GenID@frameID,w,c
  4733  0021DE  6E09               	movwf	??_CAN_GenID& (0+255),c
  4734  0021E0  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4735  0021E2  90D8               	bcf	status,0,c
  4736  0021E4  3609               	rlcf	??_CAN_GenID,f,c
  4737  0021E6  360A               	rlcf	??_CAN_GenID+1,f,c
  4738  0021E8  90D8               	bcf	status,0,c
  4739  0021EA  3609               	rlcf	??_CAN_GenID,f,c
  4740  0021EC  360A               	rlcf	??_CAN_GenID+1,f,c
  4741  0021EE  EE20 F006          	lfsr	2,6
  4742  0021F2  5006               	movf	CAN_GenID@message,w,c
  4743  0021F4  26D9               	addwf	fsr2l,f,c
  4744  0021F6  5007               	movf	CAN_GenID@message+1,w,c
  4745  0021F8  22DA               	addwfc	fsr2h,f,c
  4746  0021FA  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4747  0021FE  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4748                           
  4749                           ;CAN.c: 452: message->id.w[0] = DaneCan.adresCAN;
  4750  002202  EE20 F004          	lfsr	2,4
  4751  002206  5006               	movf	CAN_GenID@message,w,c
  4752  002208  26D9               	addwf	fsr2l,f,c
  4753  00220A  5007               	movf	CAN_GenID@message+1,w,c
  4754  00220C  22DA               	addwfc	fsr2h,f,c
  4755  00220E  C02F  FFDE         	movff	_DaneCan+2,postinc2
  4756  002212  C030  FFDD         	movff	_DaneCan+3,postdec2
  4757                           
  4758                           ;CAN.c: 455: message ->id.bits.b16 = 0;
  4759  002216  EE20 F006          	lfsr	2,6
  4760  00221A  5006               	movf	CAN_GenID@message,w,c
  4761  00221C  26D9               	addwf	fsr2l,f,c
  4762  00221E  5007               	movf	CAN_GenID@message+1,w,c
  4763  002220  22DA               	addwfc	fsr2h,f,c
  4764  002222  90DF               	bcf	indf2,0,c
  4765                           
  4766                           ;CAN.c: 456: message ->id.bits.b17 = 0;
  4767  002224  EE20 F006          	lfsr	2,6
  4768  002228  5006               	movf	CAN_GenID@message,w,c
  4769  00222A  26D9               	addwf	fsr2l,f,c
  4770  00222C  5007               	movf	CAN_GenID@message+1,w,c
  4771  00222E  22DA               	addwfc	fsr2h,f,c
  4772  002230  92DF               	bcf	indf2,1,c
  4773  002232  0012               	return		;funcret
  4774  002234                     __end_of_CAN_GenID:
  4775                           	opt callstack 0
  4776                           
  4777 ;; *************** function _CAN_TakeFrame *****************
  4778 ;; Defined at:
  4779 ;;		line 311 in file "CAN.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  message         2   13[COMRAM] PTR struct .
  4782 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  k               1   18[COMRAM] unsigned char 
  4785 ;;  tempCON         1   17[COMRAM] unsigned char 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      enum E10294
  4788 ;; Registers used:
  4789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;Total ram usage:        6 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    4
  4802 ;; This function calls:
  4803 ;;		_CAN_MoveBuffIntoFrame
  4804 ;;		___awdiv
  4805 ;; This function is called by:
  4806 ;;		_TRM_DataTransmition
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text34
  4811  0011CC                     __ptext34:
  4812                           	opt callstack 0
  4813  0011CC                     _CAN_TakeFrame:
  4814                           	opt callstack 25
  4815                           
  4816                           ;CAN.c: 313: BYTE k, tempCON;;CAN.c: 315: k = CANCON&0x0F;
  4817                           
  4818                           ;incstack = 0
  4819  0011CC  506F               	movf	3951,w,c	;volatile
  4820  0011CE  0B0F               	andlw	15
  4821  0011D0  6E13               	movwf	CAN_TakeFrame@k,c
  4822                           
  4823                           ;CAN.c: 317: ECANCON = 0x90 | k;
  4824  0011D2  5013               	movf	CAN_TakeFrame@k,w,c
  4825  0011D4  0990               	iorlw	144
  4826  0011D6  6E77               	movwf	3959,c	;volatile
  4827                           
  4828                           ;CAN.c: 320: switch(k)
  4829  0011D8  D018               	goto	l4767
  4830  0011DA                     l299:
  4831                           
  4832                           ;CAN.c: 323: tempCON = RXB0CON;
  4833  0011DA  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4834                           
  4835                           ;CAN.c: 324: break;
  4836  0011DE  D02E               	goto	l300
  4837  0011E0                     l301:
  4838                           
  4839                           ;CAN.c: 326: tempCON = RXB1CON;
  4840  0011E0  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4841                           
  4842                           ;CAN.c: 327: break;
  4843  0011E4  D02B               	goto	l300
  4844  0011E6                     l302:
  4845                           
  4846                           ;CAN.c: 329: tempCON = B0CON;
  4847  0011E6  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4848                           
  4849                           ;CAN.c: 330: break;
  4850  0011EA  D028               	goto	l300
  4851  0011EC                     l303:
  4852                           
  4853                           ;CAN.c: 332: tempCON = B1CON;
  4854  0011EC  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4855                           
  4856                           ;CAN.c: 333: break;
  4857  0011F0  D025               	goto	l300
  4858  0011F2                     l304:
  4859                           
  4860                           ;CAN.c: 335: tempCON = B2CON;
  4861  0011F2  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4862                           
  4863                           ;CAN.c: 336: break;
  4864  0011F6  D022               	goto	l300
  4865  0011F8                     l305:
  4866                           
  4867                           ;CAN.c: 338: tempCON = B3CON;
  4868  0011F8  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4869                           
  4870                           ;CAN.c: 339: break;
  4871  0011FC  D01F               	goto	l300
  4872  0011FE                     l306:
  4873                           
  4874                           ;CAN.c: 341: tempCON = B4CON;
  4875  0011FE  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4876                           
  4877                           ;CAN.c: 342: break;
  4878  001202  D01C               	goto	l300
  4879  001204                     l307:
  4880                           
  4881                           ;CAN.c: 344: tempCON = B5CON;
  4882  001204  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4883                           
  4884                           ;CAN.c: 345: break;
  4885  001208  D019               	goto	l300
  4886  00120A                     l4767:
  4887  00120A  5013               	movf	CAN_TakeFrame@k,w,c
  4888                           
  4889                           ; Switch size 1, requested type "simple"
  4890                           ; Number of cases is 8, Range of values is 0 to 7
  4891                           ; switch strategies available:
  4892                           ; Name         Instructions Cycles
  4893                           ; simple_byte           25    13 (average)
  4894                           ;	Chosen strategy is simple_byte
  4895  00120C  0A00               	xorlw	0	; case 0
  4896  00120E  B4D8               	btfsc	status,2,c
  4897  001210  D7E4               	goto	l299
  4898  001212  0A01               	xorlw	1	; case 1
  4899  001214  B4D8               	btfsc	status,2,c
  4900  001216  D7E4               	goto	l301
  4901  001218  0A03               	xorlw	3	; case 2
  4902  00121A  B4D8               	btfsc	status,2,c
  4903  00121C  D7E4               	goto	l302
  4904  00121E  0A01               	xorlw	1	; case 3
  4905  001220  B4D8               	btfsc	status,2,c
  4906  001222  D7E4               	goto	l303
  4907  001224  0A07               	xorlw	7	; case 4
  4908  001226  B4D8               	btfsc	status,2,c
  4909  001228  D7E4               	goto	l304
  4910  00122A  0A01               	xorlw	1	; case 5
  4911  00122C  B4D8               	btfsc	status,2,c
  4912  00122E  D7E4               	goto	l305
  4913  001230  0A03               	xorlw	3	; case 6
  4914  001232  B4D8               	btfsc	status,2,c
  4915  001234  D7E4               	goto	l306
  4916  001236  0A01               	xorlw	1	; case 7
  4917  001238  B4D8               	btfsc	status,2,c
  4918  00123A  D7E4               	goto	l307
  4919  00123C                     l300:
  4920                           
  4921                           ;CAN.c: 349: if((tempCON & 0x80) > 0)
  4922  00123C  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4923  00123E  D09E               	goto	l4803
  4924                           
  4925                           ;CAN.c: 350: {;CAN.c: 351: message->buffer = RXB0CON & 0x1F;
  4926  001240  EE20 F003          	lfsr	2,3
  4927  001244  500E               	movf	CAN_TakeFrame@message,w,c
  4928  001246  26D9               	addwf	fsr2l,f,c
  4929  001248  500F               	movf	CAN_TakeFrame@message+1,w,c
  4930  00124A  22DA               	addwfc	fsr2h,f,c
  4931  00124C  5060               	movf	3936,w,c	;volatile
  4932  00124E  0B1F               	andlw	31
  4933  001250  6EDF               	movwf	indf2,c
  4934                           
  4935                           ;CAN.c: 352: message->id.v[0] = RXB0EIDL;
  4936  001252  EE20 F004          	lfsr	2,4
  4937  001256  500E               	movf	CAN_TakeFrame@message,w,c
  4938  001258  26D9               	addwf	fsr2l,f,c
  4939  00125A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4940  00125C  22DA               	addwfc	fsr2h,f,c
  4941  00125E  CF64 FFDF          	movff	3940,indf2	;volatile
  4942                           
  4943                           ;CAN.c: 353: message->id.v[1] = RXB0EIDH;
  4944  001262  EE20 F005          	lfsr	2,5
  4945  001266  500E               	movf	CAN_TakeFrame@message,w,c
  4946  001268  26D9               	addwf	fsr2l,f,c
  4947  00126A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4948  00126C  22DA               	addwfc	fsr2h,f,c
  4949  00126E  CF63 FFDF          	movff	3939,indf2	;volatile
  4950                           
  4951                           ;CAN.c: 354: message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4952  001272  EE20 F006          	lfsr	2,6
  4953  001276  500E               	movf	CAN_TakeFrame@message,w,c
  4954  001278  26D9               	addwf	fsr2l,f,c
  4955  00127A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4956  00127C  22DA               	addwfc	fsr2h,f,c
  4957  00127E  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4958  001282  0E03               	movlw	3
  4959  001284  1610               	andwf	??_CAN_TakeFrame,f,c
  4960  001286  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4961  00128A  6A07               	clrf	___awdiv@dividend+1,c
  4962  00128C  0E00               	movlw	0
  4963  00128E  6E09               	movwf	___awdiv@divisor+1,c
  4964  001290  0E08               	movlw	8
  4965  001292  6E08               	movwf	___awdiv@divisor,c
  4966  001294  EC21  F010         	call	___awdiv	;wreg free
  4967  001298  5006               	movf	?___awdiv,w,c
  4968  00129A  1010               	iorwf	??_CAN_TakeFrame,w,c
  4969  00129C  6EDF               	movwf	indf2,c
  4970                           
  4971                           ;CAN.c: 355: message->id.w[1] |= (WORD)RXB0SIDH*32;
  4972  00129E  5061               	movf	3937,w,c	;volatile
  4973  0012A0  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4974  0012A2  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4975  0012A4  0E05               	movlw	5
  4976  0012A6                     u4215:
  4977  0012A6  90D8               	bcf	status,0,c
  4978  0012A8  3610               	rlcf	??_CAN_TakeFrame,f,c
  4979  0012AA  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4980  0012AC  2EE8               	decfsz	wreg,f,c
  4981  0012AE  D7FB               	goto	u4215
  4982  0012B0  EE20 F006          	lfsr	2,6
  4983  0012B4  500E               	movf	CAN_TakeFrame@message,w,c
  4984  0012B6  26D9               	addwf	fsr2l,f,c
  4985  0012B8  500F               	movf	CAN_TakeFrame@message+1,w,c
  4986  0012BA  22DA               	addwfc	fsr2h,f,c
  4987  0012BC  5010               	movf	??_CAN_TakeFrame,w,c
  4988  0012BE  12DE               	iorwf	postinc2,f,c
  4989  0012C0  5011               	movf	??_CAN_TakeFrame+1,w,c
  4990  0012C2  12DD               	iorwf	postdec2,f,c
  4991                           
  4992                           ;CAN.c: 356: message->frame_type=0x03;
  4993  0012C4  EE20 F002          	lfsr	2,2
  4994  0012C8  500E               	movf	CAN_TakeFrame@message,w,c
  4995  0012CA  26D9               	addwf	fsr2l,f,c
  4996  0012CC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4997  0012CE  22DA               	addwfc	fsr2h,f,c
  4998  0012D0  0E03               	movlw	3
  4999  0012D2  6EDF               	movwf	indf2,c
  5000                           
  5001                           ;CAN.c: 360: if(RXB0DLCbits.RXRTR == 0)
  5002  0012D4  BC65               	btfsc	3941,6,c	;volatile
  5003  0012D6  D061               	goto	l4809
  5004                           
  5005                           ;CAN.c: 361: {;CAN.c: 362: message->message_type = 0x01;
  5006  0012D8  EE20 F001          	lfsr	2,1
  5007  0012DC  500E               	movf	CAN_TakeFrame@message,w,c
  5008  0012DE  26D9               	addwf	fsr2l,f,c
  5009  0012E0  500F               	movf	CAN_TakeFrame@message+1,w,c
  5010  0012E2  22DA               	addwfc	fsr2h,f,c
  5011  0012E4  0E01               	movlw	1
  5012  0012E6  6EDF               	movwf	indf2,c
  5013                           
  5014                           ;CAN.c: 363: message->data_length= RXB0DLC & 0x0F;
  5015  0012E8  EE20 F010          	lfsr	2,16
  5016  0012EC  500E               	movf	CAN_TakeFrame@message,w,c
  5017  0012EE  26D9               	addwf	fsr2l,f,c
  5018  0012F0  500F               	movf	CAN_TakeFrame@message+1,w,c
  5019  0012F2  22DA               	addwfc	fsr2h,f,c
  5020  0012F4  5065               	movf	3941,w,c	;volatile
  5021  0012F6  0B0F               	andlw	15
  5022  0012F8  6EDF               	movwf	indf2,c
  5023                           
  5024                           ;CAN.c: 364: if(message->data_length > 8)
  5025  0012FA  EE20 F010          	lfsr	2,16
  5026  0012FE  500E               	movf	CAN_TakeFrame@message,w,c
  5027  001300  26D9               	addwf	fsr2l,f,c
  5028  001302  500F               	movf	CAN_TakeFrame@message+1,w,c
  5029  001304  22DA               	addwfc	fsr2h,f,c
  5030  001306  0E08               	movlw	8
  5031  001308  64DF               	cpfsgt	indf2,c
  5032  00130A  D03A               	goto	l4807
  5033  00130C  D01E               	goto	l4801
  5034  00130E                     l4783:
  5035                           
  5036                           ;CAN.c: 370: RXB0CON = 0;
  5037  00130E  0E00               	movlw	0
  5038  001310  6E60               	movwf	3936,c	;volatile
  5039                           
  5040                           ;CAN.c: 371: break;
  5041  001312  D034               	goto	l4803
  5042  001314                     l4785:
  5043                           
  5044                           ;CAN.c: 373: RXB1CON = 0;
  5045  001314  0E00               	movlw	0
  5046  001316  010F               	movlb	15	; () banked
  5047  001318  D00E               	goto	L2
  5048  00131A                     l4787:
  5049                           
  5050                           ;CAN.c: 376: B0CON = 0;
  5051  00131A  0E00               	movlw	0
  5052  00131C  010E               	movlb	14	; () banked
  5053  00131E  6F20               	movwf	32,b	;volatile
  5054                           
  5055                           ;CAN.c: 377: break;
  5056  001320  D02D               	goto	l4803
  5057  001322                     l4789:
  5058                           
  5059                           ;CAN.c: 379: B1CON = 0;
  5060  001322  0E00               	movlw	0
  5061  001324  010E               	movlb	14	; () banked
  5062  001326  6F30               	movwf	48,b	;volatile
  5063                           
  5064                           ;CAN.c: 380: break;
  5065  001328  D029               	goto	l4803
  5066  00132A                     l4791:
  5067                           
  5068                           ;CAN.c: 382: B2CON = 0;
  5069  00132A  0E00               	movlw	0
  5070  00132C  010E               	movlb	14	; () banked
  5071  00132E  6F40               	movwf	64,b	;volatile
  5072                           
  5073                           ;CAN.c: 383: break;
  5074  001330  D025               	goto	l4803
  5075  001332                     l4793:
  5076                           
  5077                           ;CAN.c: 385: B3CON = 0;
  5078  001332  0E00               	movlw	0
  5079  001334  010E               	movlb	14	; () banked
  5080  001336                     L2:
  5081  001336  6F50               	movwf	80,b	;volatile
  5082                           
  5083                           ;CAN.c: 386: break;
  5084  001338  D021               	goto	l4803
  5085  00133A                     l4795:
  5086                           
  5087                           ;CAN.c: 388: B4CON = 0;
  5088  00133A  0E00               	movlw	0
  5089  00133C  010E               	movlb	14	; () banked
  5090  00133E  6F60               	movwf	96,b	;volatile
  5091                           
  5092                           ;CAN.c: 389: break;
  5093  001340  D01D               	goto	l4803
  5094  001342                     l4797:
  5095                           
  5096                           ;CAN.c: 391: B5CON = 0;
  5097  001342  0E00               	movlw	0
  5098  001344  010E               	movlb	14	; () banked
  5099  001346  6F70               	movwf	112,b	;volatile
  5100                           
  5101                           ;CAN.c: 392: break;
  5102  001348  D019               	goto	l4803
  5103  00134A                     l4801:
  5104  00134A  5013               	movf	CAN_TakeFrame@k,w,c
  5105                           
  5106                           ; Switch size 1, requested type "simple"
  5107                           ; Number of cases is 8, Range of values is 0 to 7
  5108                           ; switch strategies available:
  5109                           ; Name         Instructions Cycles
  5110                           ; simple_byte           25    13 (average)
  5111                           ;	Chosen strategy is simple_byte
  5112  00134C  0A00               	xorlw	0	; case 0
  5113  00134E  B4D8               	btfsc	status,2,c
  5114  001350  D7DE               	goto	l4783
  5115  001352  0A01               	xorlw	1	; case 1
  5116  001354  B4D8               	btfsc	status,2,c
  5117  001356  D7DE               	goto	l4785
  5118  001358  0A03               	xorlw	3	; case 2
  5119  00135A  B4D8               	btfsc	status,2,c
  5120  00135C  D7DE               	goto	l4787
  5121  00135E  0A01               	xorlw	1	; case 3
  5122  001360  B4D8               	btfsc	status,2,c
  5123  001362  D7DF               	goto	l4789
  5124  001364  0A07               	xorlw	7	; case 4
  5125  001366  B4D8               	btfsc	status,2,c
  5126  001368  D7E0               	goto	l4791
  5127  00136A  0A01               	xorlw	1	; case 5
  5128  00136C  B4D8               	btfsc	status,2,c
  5129  00136E  D7E1               	goto	l4793
  5130  001370  0A03               	xorlw	3	; case 6
  5131  001372  B4D8               	btfsc	status,2,c
  5132  001374  D7E2               	goto	l4795
  5133  001376  0A01               	xorlw	1	; case 7
  5134  001378  B4D8               	btfsc	status,2,c
  5135  00137A  D7E3               	goto	l4797
  5136  00137C                     l4803:
  5137                           
  5138                           ;CAN.c: 394: return FALSE;
  5139  00137C  0E00               	movlw	0
  5140  00137E  0012               	return	
  5141  001380                     l4807:
  5142                           
  5143                           ;CAN.c: 395: };CAN.c: 396: CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  5144  001380  0E08               	movlw	8
  5145  001382  240E               	addwf	CAN_TakeFrame@message,w,c
  5146  001384  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  5147  001386  0E00               	movlw	0
  5148  001388  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  5149  00138A  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  5150  00138C  0E66               	movlw	102
  5151  00138E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  5152  001390  0E0F               	movlw	15
  5153  001392  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  5154  001394  EC30  F014         	call	_CAN_MoveBuffIntoFrame	;wreg free
  5155                           
  5156                           ;CAN.c: 397: }
  5157  001398  D027               	goto	l4829
  5158  00139A                     l4809:
  5159                           
  5160                           ;CAN.c: 399: else;CAN.c: 400: {;CAN.c: 401: message->message_type=0x02;
  5161  00139A  EE20 F001          	lfsr	2,1
  5162  00139E  500E               	movf	CAN_TakeFrame@message,w,c
  5163  0013A0  26D9               	addwf	fsr2l,f,c
  5164  0013A2  500F               	movf	CAN_TakeFrame@message+1,w,c
  5165  0013A4  22DA               	addwfc	fsr2h,f,c
  5166  0013A6  0E02               	movlw	2
  5167  0013A8  6EDF               	movwf	indf2,c
  5168  0013AA  D01E               	goto	l4829
  5169  0013AC                     l4811:
  5170                           
  5171                           ;CAN.c: 407: RXB0CON = 0;
  5172  0013AC  0E00               	movlw	0
  5173  0013AE  6E60               	movwf	3936,c	;volatile
  5174                           
  5175                           ;CAN.c: 408: break;
  5176  0013B0  D034               	goto	l4831
  5177  0013B2                     l4813:
  5178                           
  5179                           ;CAN.c: 410: RXB1CON = 0;
  5180  0013B2  0E00               	movlw	0
  5181  0013B4  010F               	movlb	15	; () banked
  5182  0013B6  D00E               	goto	L3
  5183  0013B8                     l4815:
  5184                           
  5185                           ;CAN.c: 413: B0CON = 0;
  5186  0013B8  0E00               	movlw	0
  5187  0013BA  010E               	movlb	14	; () banked
  5188  0013BC  6F20               	movwf	32,b	;volatile
  5189                           
  5190                           ;CAN.c: 414: break;
  5191  0013BE  D02D               	goto	l4831
  5192  0013C0                     l4817:
  5193                           
  5194                           ;CAN.c: 416: B1CON = 0;
  5195  0013C0  0E00               	movlw	0
  5196  0013C2  010E               	movlb	14	; () banked
  5197  0013C4  6F30               	movwf	48,b	;volatile
  5198                           
  5199                           ;CAN.c: 417: break;
  5200  0013C6  D029               	goto	l4831
  5201  0013C8                     l4819:
  5202                           
  5203                           ;CAN.c: 419: B2CON = 0;
  5204  0013C8  0E00               	movlw	0
  5205  0013CA  010E               	movlb	14	; () banked
  5206  0013CC  6F40               	movwf	64,b	;volatile
  5207                           
  5208                           ;CAN.c: 420: break;
  5209  0013CE  D025               	goto	l4831
  5210  0013D0                     l4821:
  5211                           
  5212                           ;CAN.c: 422: B3CON = 0;
  5213  0013D0  0E00               	movlw	0
  5214  0013D2  010E               	movlb	14	; () banked
  5215  0013D4                     L3:
  5216  0013D4  6F50               	movwf	80,b	;volatile
  5217                           
  5218                           ;CAN.c: 423: break;
  5219  0013D6  D021               	goto	l4831
  5220  0013D8                     l4823:
  5221                           
  5222                           ;CAN.c: 425: B4CON = 0;
  5223  0013D8  0E00               	movlw	0
  5224  0013DA  010E               	movlb	14	; () banked
  5225  0013DC  6F60               	movwf	96,b	;volatile
  5226                           
  5227                           ;CAN.c: 426: break;
  5228  0013DE  D01D               	goto	l4831
  5229  0013E0                     l4825:
  5230                           
  5231                           ;CAN.c: 428: B5CON = 0;
  5232  0013E0  0E00               	movlw	0
  5233  0013E2  010E               	movlb	14	; () banked
  5234  0013E4  6F70               	movwf	112,b	;volatile
  5235                           
  5236                           ;CAN.c: 429: break;
  5237  0013E6  D019               	goto	l4831
  5238  0013E8                     l4829:
  5239  0013E8  5013               	movf	CAN_TakeFrame@k,w,c
  5240                           
  5241                           ; Switch size 1, requested type "simple"
  5242                           ; Number of cases is 8, Range of values is 0 to 7
  5243                           ; switch strategies available:
  5244                           ; Name         Instructions Cycles
  5245                           ; simple_byte           25    13 (average)
  5246                           ;	Chosen strategy is simple_byte
  5247  0013EA  0A00               	xorlw	0	; case 0
  5248  0013EC  B4D8               	btfsc	status,2,c
  5249  0013EE  D7DE               	goto	l4811
  5250  0013F0  0A01               	xorlw	1	; case 1
  5251  0013F2  B4D8               	btfsc	status,2,c
  5252  0013F4  D7DE               	goto	l4813
  5253  0013F6  0A03               	xorlw	3	; case 2
  5254  0013F8  B4D8               	btfsc	status,2,c
  5255  0013FA  D7DE               	goto	l4815
  5256  0013FC  0A01               	xorlw	1	; case 3
  5257  0013FE  B4D8               	btfsc	status,2,c
  5258  001400  D7DF               	goto	l4817
  5259  001402  0A07               	xorlw	7	; case 4
  5260  001404  B4D8               	btfsc	status,2,c
  5261  001406  D7E0               	goto	l4819
  5262  001408  0A01               	xorlw	1	; case 5
  5263  00140A  B4D8               	btfsc	status,2,c
  5264  00140C  D7E1               	goto	l4821
  5265  00140E  0A03               	xorlw	3	; case 6
  5266  001410  B4D8               	btfsc	status,2,c
  5267  001412  D7E2               	goto	l4823
  5268  001414  0A01               	xorlw	1	; case 7
  5269  001416  B4D8               	btfsc	status,2,c
  5270  001418  D7E3               	goto	l4825
  5271  00141A                     l4831:
  5272                           
  5273                           ;CAN.c: 431: return TRUE;
  5274  00141A  0E01               	movlw	1
  5275  00141C  0012               	return		;funcret
  5276  00141E                     __end_of_CAN_TakeFrame:
  5277                           	opt callstack 0
  5278                           
  5279 ;; *************** function ___awdiv *****************
  5280 ;; Defined at:
  5281 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  dividend        2    5[COMRAM] int 
  5284 ;;  divisor         2    7[COMRAM] int 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  quotient        2   11[COMRAM] int 
  5287 ;;  sign            1   10[COMRAM] unsigned char 
  5288 ;;  counter         1    9[COMRAM] unsigned char 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  2    5[COMRAM] int 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5301 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5302 ;;Total ram usage:        8 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    3
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_CAN_TakeFrame
  5309 ;;		_FRAME_HandleCanFrame
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text35
  5314  002042                     __ptext35:
  5315                           	opt callstack 0
  5316  002042                     ___awdiv:
  5317                           	opt callstack 25
  5318                           
  5319                           ;incstack = 0
  5320  002042  0E00               	movlw	0
  5321  002044  6E0B               	movwf	___awdiv@sign,c
  5322  002046  AE09               	btfss	___awdiv@divisor+1,7,c
  5323  002048  D006               	goto	l4711
  5324  00204A  6C08               	negf	___awdiv@divisor,c
  5325  00204C  1E09               	comf	___awdiv@divisor+1,f,c
  5326  00204E  B0D8               	btfsc	status,0,c
  5327  002050  2A09               	incf	___awdiv@divisor+1,f,c
  5328  002052  0E01               	movlw	1
  5329  002054  6E0B               	movwf	___awdiv@sign,c
  5330  002056                     l4711:
  5331  002056  AE07               	btfss	___awdiv@dividend+1,7,c
  5332  002058  D006               	goto	l4717
  5333  00205A  6C06               	negf	___awdiv@dividend,c
  5334  00205C  1E07               	comf	___awdiv@dividend+1,f,c
  5335  00205E  B0D8               	btfsc	status,0,c
  5336  002060  2A07               	incf	___awdiv@dividend+1,f,c
  5337  002062  0E01               	movlw	1
  5338  002064  1A0B               	xorwf	___awdiv@sign,f,c
  5339  002066                     l4717:
  5340  002066  0E00               	movlw	0
  5341  002068  6E0D               	movwf	___awdiv@quotient+1,c
  5342  00206A  0E00               	movlw	0
  5343  00206C  6E0C               	movwf	___awdiv@quotient,c
  5344  00206E  5008               	movf	___awdiv@divisor,w,c
  5345  002070  1009               	iorwf	___awdiv@divisor+1,w,c
  5346  002072  B4D8               	btfsc	status,2,c
  5347  002074  D01C               	goto	l4739
  5348  002076  0E01               	movlw	1
  5349  002078  6E0A               	movwf	___awdiv@counter,c
  5350  00207A  D004               	goto	l4725
  5351  00207C                     l4723:
  5352  00207C  90D8               	bcf	status,0,c
  5353  00207E  3608               	rlcf	___awdiv@divisor,f,c
  5354  002080  3609               	rlcf	___awdiv@divisor+1,f,c
  5355  002082  2A0A               	incf	___awdiv@counter,f,c
  5356  002084                     l4725:
  5357  002084  AE09               	btfss	___awdiv@divisor+1,7,c
  5358  002086  D7FA               	goto	l4723
  5359  002088                     u4150:
  5360  002088  90D8               	bcf	status,0,c
  5361  00208A  360C               	rlcf	___awdiv@quotient,f,c
  5362  00208C  360D               	rlcf	___awdiv@quotient+1,f,c
  5363  00208E  5008               	movf	___awdiv@divisor,w,c
  5364  002090  5C06               	subwf	___awdiv@dividend,w,c
  5365  002092  5009               	movf	___awdiv@divisor+1,w,c
  5366  002094  5807               	subwfb	___awdiv@dividend+1,w,c
  5367  002096  A0D8               	btfss	status,0,c
  5368  002098  D005               	goto	l4735
  5369  00209A  5008               	movf	___awdiv@divisor,w,c
  5370  00209C  5E06               	subwf	___awdiv@dividend,f,c
  5371  00209E  5009               	movf	___awdiv@divisor+1,w,c
  5372  0020A0  5A07               	subwfb	___awdiv@dividend+1,f,c
  5373  0020A2  800C               	bsf	___awdiv@quotient,0,c
  5374  0020A4                     l4735:
  5375  0020A4  90D8               	bcf	status,0,c
  5376  0020A6  3209               	rrcf	___awdiv@divisor+1,f,c
  5377  0020A8  3208               	rrcf	___awdiv@divisor,f,c
  5378  0020AA  2E0A               	decfsz	___awdiv@counter,f,c
  5379  0020AC  D7ED               	goto	u4150
  5380  0020AE                     l4739:
  5381  0020AE  500B               	movf	___awdiv@sign,w,c
  5382  0020B0  B4D8               	btfsc	status,2,c
  5383  0020B2  D004               	goto	l4743
  5384  0020B4  6C0C               	negf	___awdiv@quotient,c
  5385  0020B6  1E0D               	comf	___awdiv@quotient+1,f,c
  5386  0020B8  B0D8               	btfsc	status,0,c
  5387  0020BA  2A0D               	incf	___awdiv@quotient+1,f,c
  5388  0020BC                     l4743:
  5389  0020BC  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5390  0020C0  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5391  0020C4  0012               	return		;funcret
  5392  0020C6                     __end_of___awdiv:
  5393                           	opt callstack 0
  5394                           
  5395 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5396 ;; Defined at:
  5397 ;;		line 233 in file "CAN.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5400 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5401 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5402 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  i               1    9[COMRAM] unsigned char 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;Total ram usage:        5 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    3
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_CAN_SendFrame
  5425 ;;		_CAN_TakeFrame
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text36
  5430  002860                     __ptext36:
  5431                           	opt callstack 0
  5432  002860                     _CAN_MoveBuffIntoFrame:
  5433                           	opt callstack 24
  5434                           
  5435                           ;CAN.c: 235: BYTE i;;CAN.c: 236: for(i=0; i<8; ++i)
  5436                           
  5437                           ;incstack = 0
  5438  002860  0E00               	movlw	0
  5439  002862  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  5440  002864                     l4105:
  5441                           
  5442                           ;CAN.c: 237: {;CAN.c: 238: Ram[i]=(*(Buf+i));
  5443  002864  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5444  002866  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5445  002868  6ED9               	movwf	fsr2l,c
  5446  00286A  0E00               	movlw	0
  5447  00286C  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5448  00286E  6EDA               	movwf	fsr2h,c
  5449  002870  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5450  002872  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5451  002874  6EE1               	movwf	fsr1l,c
  5452  002876  0E00               	movlw	0
  5453  002878  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5454  00287A  6EE2               	movwf	fsr1h,c
  5455  00287C  CFDF FFE7          	movff	indf2,indf1
  5456  002880  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5457  002882  0E07               	movlw	7
  5458  002884  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5459  002886  D7EE               	goto	l4105
  5460  002888  0012               	return	
  5461  00288A                     __end_of_CAN_MoveBuffIntoFrame:
  5462                           	opt callstack 0
  5463                           
  5464 ;; *************** function _TMR1_Update_flag_Set *****************
  5465 ;; Defined at:
  5466 ;;		line 32 in file "TMR1.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  a               2    5[COMRAM] unsigned int 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;		None
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		None
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;Total ram usage:        2 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:    3
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_main
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text37
  5495  0029EA                     __ptext37:
  5496                           	opt callstack 0
  5497  0029EA                     _TMR1_Update_flag_Set:
  5498                           	opt callstack 27
  5499                           
  5500                           ;TMR1.c: 34: TMR1_Update_flag = a;
  5501                           
  5502                           ;incstack = 0
  5503  0029EA  C006  F037         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5504  0029EE  C007  F038         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5505  0029F2  0012               	return		;funcret
  5506  0029F4                     __end_of_TMR1_Update_flag_Set:
  5507                           	opt callstack 0
  5508                           
  5509 ;; *************** function _TMR1_Update_flag_Get *****************
  5510 ;; Defined at:
  5511 ;;		line 47 in file "TMR1.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  2    5[COMRAM] unsigned int 
  5518 ;; Registers used:
  5519 ;;		None
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;Total ram usage:        2 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    3
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_main
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text38
  5540  0029F4                     __ptext38:
  5541                           	opt callstack 0
  5542  0029F4                     _TMR1_Update_flag_Get:
  5543                           	opt callstack 27
  5544                           
  5545                           ;TMR1.c: 49: return TMR1_Update_flag;
  5546                           
  5547                           ;incstack = 0
  5548  0029F4  C037  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5549  0029F8  C038  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5550  0029FC  0012               	return		;funcret
  5551  0029FE                     __end_of_TMR1_Update_flag_Get:
  5552                           	opt callstack 0
  5553                           
  5554 ;; *************** function _RADAR_Use *****************
  5555 ;; Defined at:
  5556 ;;		line 16 in file "RADARMETADATA.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		None
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    3
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_main
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text39
  5585  0029A2                     __ptext39:
  5586                           	opt callstack 0
  5587  0029A2                     _RADAR_Use:
  5588                           	opt callstack 27
  5589                           
  5590                           ;RADARMETADATA.c: 18: if(Flagi.pomiarTla == 1)
  5591                           
  5592                           ;incstack = 0
  5593  0029A2  0100               	movlb	0	; () banked
  5594  0029A4  A1C6               	btfss	_Flagi& (0+255),0,b
  5595  0029A6  0012               	return	
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;RADARMETADATA.c: 19: {;RADARMETADATA.c: 20: Flagi.detekcja = 0;
  5599  0029A8  93C6               	bcf	_Flagi& (0+255),1,b
  5600                           
  5601                           ;RADARMETADATA.c: 21: Flagi.pomiarTla = 0;
  5602  0029AA  91C6               	bcf	_Flagi& (0+255),0,b
  5603                           
  5604                           ; BSR set to: 0
  5605  0029AC  0012               	return		;funcret
  5606  0029AE                     __end_of_RADAR_Use:
  5607                           	opt callstack 0
  5608                           
  5609 ;; *************** function _LED_Update *****************
  5610 ;; Defined at:
  5611 ;;		line 148 in file "LED.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      unsigned char 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    5
  5632 ;; This function calls:
  5633 ;;		_LED_Control
  5634 ;;		_LED_Left
  5635 ;;		_LED_Light_Pos
  5636 ;;		_LED_Right
  5637 ;; This function is called by:
  5638 ;;		_main
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text40
  5643  002142                     __ptext40:
  5644                           	opt callstack 0
  5645  002142                     _LED_Update:
  5646                           	opt callstack 25
  5647                           
  5648                           ;LED.c: 150: static LED_RGA_type Red = RED;;LED.c: 151: static LED_RGA_type Green = GREE
      +                          N;;LED.c: 152: static UINT pos1 = 0b0000000001;;LED.c: 153: static UINT pos2 = 0b0000000
      +                          001;;LED.c: 155: if(LOCK == 0)
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;incstack = 0
  5652  002142  503E               	movf	_LOCK,w,c
  5653  002144  A4D8               	btfss	status,2,c
  5654  002146  D013               	goto	l5043
  5655                           
  5656                           ;LED.c: 156: {;LED.c: 157: LED_Control(RED,0b0000000000);
  5657  002148  0E00               	movlw	0
  5658  00214A  6E07               	movwf	LED_Control@diode+1,c
  5659  00214C  0E00               	movlw	0
  5660  00214E  6E06               	movwf	LED_Control@diode,c
  5661  002150  0E00               	movlw	0
  5662  002152  ECEB  F00C         	call	_LED_Control
  5663                           
  5664                           ;LED.c: 158: LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5665  002156  C04F  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5666  00215A  C050  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5667  00215E  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5668  002162  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5669  002166  5055               	movf	LED_Update@Green,w,c
  5670  002168  EC2F  F00F         	call	_LED_Light_Pos
  5671                           
  5672                           ;LED.c: 160: }
  5673  00216C  D012               	goto	l394
  5674  00216E                     l5043:
  5675                           
  5676                           ;LED.c: 161: else;LED.c: 162: {;LED.c: 163: LED_Control(Green,0b0000000000);
  5677  00216E  0E00               	movlw	0
  5678  002170  6E07               	movwf	LED_Control@diode+1,c
  5679  002172  0E00               	movlw	0
  5680  002174  6E06               	movwf	LED_Control@diode,c
  5681  002176  5055               	movf	LED_Update@Green,w,c
  5682  002178  ECEB  F00C         	call	_LED_Control
  5683                           
  5684                           ;LED.c: 164: LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5685  00217C  C051  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5686  002180  C052  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5687  002184  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5688  002188  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5689  00218C  0E00               	movlw	0
  5690  00218E  EC2F  F00F         	call	_LED_Light_Pos
  5691  002192                     l394:
  5692                           
  5693                           ;LED.c: 165: };LED.c: 166: pos1 = LED_Right(pos1);
  5694  002192  C051  F006         	movff	LED_Update@pos1,LED_Right@a
  5695  002196  C052  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5696  00219A  ECD2  F012         	call	_LED_Right	;wreg free
  5697  00219E  C006  F051         	movff	?_LED_Right,LED_Update@pos1
  5698  0021A2  C007  F052         	movff	?_LED_Right+1,LED_Update@pos1+1
  5699                           
  5700                           ;LED.c: 167: pos2 = LED_Left(pos2);
  5701  0021A6  C04F  F006         	movff	LED_Update@pos2,LED_Left@a
  5702  0021AA  C050  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5703  0021AE  EC1D  F013         	call	_LED_Left	;wreg free
  5704  0021B2  C006  F04F         	movff	?_LED_Left,LED_Update@pos2
  5705  0021B6  C007  F050         	movff	?_LED_Left+1,LED_Update@pos2+1
  5706  0021BA  0012               	return		;funcret
  5707  0021BC                     __end_of_LED_Update:
  5708                           	opt callstack 0
  5709                           
  5710 ;; *************** function _LED_Light_Pos *****************
  5711 ;; Defined at:
  5712 ;;		line 239 in file "LED.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  color           1    wreg     enum E10511
  5715 ;;  pos             2   12[COMRAM] unsigned int 
  5716 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  color           1   16[COMRAM] enum E10511
  5719 ;;  flage           2   21[COMRAM] unsigned int 
  5720 ;;  pos2            2   19[COMRAM] unsigned int 
  5721 ;;  LED_array       2   17[COMRAM] unsigned int 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  2   12[COMRAM] unsigned int 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5732 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5734 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;Total ram usage:       11 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    4
  5738 ;; This function calls:
  5739 ;;		_LED_Control
  5740 ;;		_LED_Left
  5741 ;;		_LED_Right
  5742 ;;		___lwdiv
  5743 ;; This function is called by:
  5744 ;;		_LED_Update
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text41
  5749  001E5E                     __ptext41:
  5750                           	opt callstack 0
  5751  001E5E                     _LED_Light_Pos:
  5752                           	opt callstack 25
  5753                           
  5754                           ;incstack = 0
  5755                           ;LED_Light_Pos@color stored from wreg
  5756  001E5E  6E11               	movwf	LED_Light_Pos@color,c
  5757                           
  5758                           ;LED.c: 241: UINT pos2 =pos;
  5759  001E60  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5760  001E64  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5761                           
  5762                           ;LED.c: 242: UINT LED_array = 0b0000000000;
  5763  001E68  0E00               	movlw	0
  5764  001E6A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5765  001E6C  0E00               	movlw	0
  5766  001E6E  6E12               	movwf	LED_Light_Pos@LED_array,c
  5767                           
  5768                           ;LED.c: 243: UINT flage = fulfillment/10;
  5769  001E70  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5770  001E74  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5771  001E78  0E00               	movlw	0
  5772  001E7A  6E09               	movwf	___lwdiv@divisor+1,c
  5773  001E7C  0E0A               	movlw	10
  5774  001E7E  6E08               	movwf	___lwdiv@divisor,c
  5775  001E80  EC82  F012         	call	___lwdiv	;wreg free
  5776  001E84  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5777  001E88  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5778                           
  5779                           ;LED.c: 244: if(color == RED)
  5780  001E8C  5011               	movf	LED_Light_Pos@color,w,c
  5781  001E8E  B4D8               	btfsc	status,2,c
  5782  001E90  D017               	goto	l4857
  5783  001E92  D031               	goto	l4865
  5784  001E94                     l4851:
  5785                           
  5786                           ;LED.c: 247: {;LED.c: 248: LED_array = pos2|LED_array;
  5787  001E94  5012               	movf	LED_Light_Pos@LED_array,w,c
  5788  001E96  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5789  001E98  6E12               	movwf	LED_Light_Pos@LED_array,c
  5790  001E9A  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5791  001E9C  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5792  001E9E  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5793                           
  5794                           ;LED.c: 249: pos2 = LED_Left(pos2);
  5795  001EA0  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5796  001EA4  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5797  001EA8  EC1D  F013         	call	_LED_Left	;wreg free
  5798  001EAC  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5799  001EB0  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5800                           
  5801                           ;LED.c: 250: flage = flage - 1;
  5802  001EB4  0EFF               	movlw	255
  5803  001EB6  2416               	addwf	LED_Light_Pos@flage,w,c
  5804  001EB8  6E16               	movwf	LED_Light_Pos@flage,c
  5805  001EBA  0EFF               	movlw	255
  5806  001EBC  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5807  001EBE  6E17               	movwf	LED_Light_Pos@flage+1,c
  5808  001EC0                     l4857:
  5809  001EC0  5016               	movf	LED_Light_Pos@flage,w,c
  5810  001EC2  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5811  001EC4  B4D8               	btfsc	status,2,c
  5812  001EC6  D01B               	goto	u4260
  5813  001EC8  D7E5               	goto	l4851
  5814  001ECA                     l4859:
  5815                           
  5816                           ;LED.c: 256: {;LED.c: 257: LED_array = pos2|LED_array;
  5817  001ECA  5012               	movf	LED_Light_Pos@LED_array,w,c
  5818  001ECC  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5819  001ECE  6E12               	movwf	LED_Light_Pos@LED_array,c
  5820  001ED0  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5821  001ED2  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5822  001ED4  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5823                           
  5824                           ;LED.c: 258: pos2 = LED_Right(pos2);
  5825  001ED6  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5826  001EDA  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5827  001EDE  ECD2  F012         	call	_LED_Right	;wreg free
  5828  001EE2  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5829  001EE6  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5830                           
  5831                           ;LED.c: 259: flage = flage - 1;
  5832  001EEA  0EFF               	movlw	255
  5833  001EEC  2416               	addwf	LED_Light_Pos@flage,w,c
  5834  001EEE  6E16               	movwf	LED_Light_Pos@flage,c
  5835  001EF0  0EFF               	movlw	255
  5836  001EF2  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5837  001EF4  6E17               	movwf	LED_Light_Pos@flage+1,c
  5838  001EF6                     l4865:
  5839  001EF6  5016               	movf	LED_Light_Pos@flage,w,c
  5840  001EF8  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5841  001EFA  A4D8               	btfss	status,2,c
  5842  001EFC  D7E6               	goto	l4859
  5843  001EFE                     u4260:
  5844                           
  5845                           ;LED.c: 260: };LED.c: 261: };LED.c: 262: LED_Control(color, LED_array);
  5846  001EFE  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5847  001F02  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5848  001F06  5011               	movf	LED_Light_Pos@color,w,c
  5849  001F08  ECEB  F00C         	call	_LED_Control
  5850  001F0C  0012               	return		;funcret
  5851  001F0E                     __end_of_LED_Light_Pos:
  5852                           	opt callstack 0
  5853                           
  5854 ;; *************** function ___lwdiv *****************
  5855 ;; Defined at:
  5856 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  dividend        2    5[COMRAM] unsigned int 
  5859 ;;  divisor         2    7[COMRAM] unsigned int 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  quotient        2   10[COMRAM] unsigned int 
  5862 ;;  counter         1    9[COMRAM] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  2    5[COMRAM] unsigned int 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;Total ram usage:        7 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    3
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_LED_Light_Pos
  5883 ;;		_FRAME_Plot
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text42
  5888  002504                     __ptext42:
  5889                           	opt callstack 0
  5890  002504                     ___lwdiv:
  5891                           	opt callstack 24
  5892                           
  5893                           ;incstack = 0
  5894  002504  0E00               	movlw	0
  5895  002506  6E0C               	movwf	___lwdiv@quotient+1,c
  5896  002508  0E00               	movlw	0
  5897  00250A  6E0B               	movwf	___lwdiv@quotient,c
  5898  00250C  5008               	movf	___lwdiv@divisor,w,c
  5899  00250E  1009               	iorwf	___lwdiv@divisor+1,w,c
  5900  002510  B4D8               	btfsc	status,2,c
  5901  002512  D01C               	goto	l1473
  5902  002514  0E01               	movlw	1
  5903  002516  6E0A               	movwf	___lwdiv@counter,c
  5904  002518  D004               	goto	l4399
  5905  00251A                     l4397:
  5906  00251A  90D8               	bcf	status,0,c
  5907  00251C  3608               	rlcf	___lwdiv@divisor,f,c
  5908  00251E  3609               	rlcf	___lwdiv@divisor+1,f,c
  5909  002520  2A0A               	incf	___lwdiv@counter,f,c
  5910  002522                     l4399:
  5911  002522  AE09               	btfss	___lwdiv@divisor+1,7,c
  5912  002524  D7FA               	goto	l4397
  5913  002526                     u3750:
  5914  002526  90D8               	bcf	status,0,c
  5915  002528  360B               	rlcf	___lwdiv@quotient,f,c
  5916  00252A  360C               	rlcf	___lwdiv@quotient+1,f,c
  5917  00252C  5008               	movf	___lwdiv@divisor,w,c
  5918  00252E  5C06               	subwf	___lwdiv@dividend,w,c
  5919  002530  5009               	movf	___lwdiv@divisor+1,w,c
  5920  002532  5807               	subwfb	___lwdiv@dividend+1,w,c
  5921  002534  A0D8               	btfss	status,0,c
  5922  002536  D005               	goto	l4409
  5923  002538  5008               	movf	___lwdiv@divisor,w,c
  5924  00253A  5E06               	subwf	___lwdiv@dividend,f,c
  5925  00253C  5009               	movf	___lwdiv@divisor+1,w,c
  5926  00253E  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5927  002540  800B               	bsf	___lwdiv@quotient,0,c
  5928  002542                     l4409:
  5929  002542  90D8               	bcf	status,0,c
  5930  002544  3209               	rrcf	___lwdiv@divisor+1,f,c
  5931  002546  3208               	rrcf	___lwdiv@divisor,f,c
  5932  002548  2E0A               	decfsz	___lwdiv@counter,f,c
  5933  00254A  D7ED               	goto	u3750
  5934  00254C                     l1473:
  5935  00254C  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5936  002550  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5937  002554  0012               	return		;funcret
  5938  002556                     __end_of___lwdiv:
  5939                           	opt callstack 0
  5940                           
  5941 ;; *************** function _LED_Right *****************
  5942 ;; Defined at:
  5943 ;;		line 183 in file "LED.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  a               2    5[COMRAM] unsigned int 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  b               2    9[COMRAM] unsigned int 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  2    5[COMRAM] unsigned int 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;Total ram usage:        6 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    3
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_LED_Update
  5968 ;;		_LED_Light_Pos
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text43
  5973  0025A4                     __ptext43:
  5974                           	opt callstack 0
  5975  0025A4                     _LED_Right:
  5976                           	opt callstack 26
  5977                           
  5978                           ;LED.c: 185: if ((a & 0b0000000001) == 0b0000000001)
  5979                           
  5980                           ;incstack = 0
  5981  0025A4  A006               	btfss	LED_Right@a,0,c
  5982  0025A6  D018               	goto	l4513
  5983                           
  5984                           ;LED.c: 186: {;LED.c: 187: UINT b = a & 0b1111111110;
  5985  0025A8  0EFE               	movlw	254
  5986  0025AA  1406               	andwf	LED_Right@a,w,c
  5987  0025AC  6E0A               	movwf	LED_Right@b,c
  5988  0025AE  0E03               	movlw	3
  5989  0025B0  1407               	andwf	LED_Right@a+1,w,c
  5990  0025B2  6E0B               	movwf	LED_Right@b+1,c
  5991                           
  5992                           ;LED.c: 188: b = b >> 1;
  5993  0025B4  90D8               	bcf	status,0,c
  5994  0025B6  300B               	rrcf	LED_Right@b+1,w,c
  5995  0025B8  6E08               	movwf	??_LED_Right& (0+255),c
  5996  0025BA  300A               	rrcf	LED_Right@b,w,c
  5997  0025BC  6E0A               	movwf	LED_Right@b,c
  5998  0025BE  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5999                           
  6000                           ;LED.c: 189: b = b | 0b1000000000;
  6001  0025C2  0E00               	movlw	0
  6002  0025C4  100A               	iorwf	LED_Right@b,w,c
  6003  0025C6  6E0A               	movwf	LED_Right@b,c
  6004  0025C8  0E02               	movlw	2
  6005  0025CA  100B               	iorwf	LED_Right@b+1,w,c
  6006  0025CC  6E0B               	movwf	LED_Right@b+1,c
  6007                           
  6008                           ;LED.c: 190: return b;
  6009  0025CE  C00A  F006         	movff	LED_Right@b,?_LED_Right
  6010  0025D2  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  6011  0025D6  0012               	return	
  6012  0025D8                     l4513:
  6013                           
  6014                           ;LED.c: 192: else;LED.c: 193: {;LED.c: 194: a =a >> 1;
  6015  0025D8  90D8               	bcf	status,0,c
  6016  0025DA  3007               	rrcf	LED_Right@a+1,w,c
  6017  0025DC  6E08               	movwf	??_LED_Right& (0+255),c
  6018  0025DE  3006               	rrcf	LED_Right@a,w,c
  6019  0025E0  6E06               	movwf	LED_Right@a,c
  6020  0025E2  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  6021                           
  6022                           ;LED.c: 195: return a;
  6023  0025E6  C006  F006         	movff	LED_Right@a,?_LED_Right
  6024  0025EA  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  6025  0025EE  0012               	return		;funcret
  6026  0025F0                     __end_of_LED_Right:
  6027                           	opt callstack 0
  6028                           
  6029 ;; *************** function _LED_Left *****************
  6030 ;; Defined at:
  6031 ;;		line 210 in file "LED.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  a               2    5[COMRAM] unsigned int 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  b               2    7[COMRAM] unsigned int 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  2    5[COMRAM] unsigned int 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;Total ram usage:        4 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    3
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_LED_Update
  6056 ;;		_LED_Light_Pos
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text44
  6061  00263A                     __ptext44:
  6062                           	opt callstack 0
  6063  00263A                     _LED_Left:
  6064                           	opt callstack 25
  6065                           
  6066                           ;LED.c: 212: if ((a & 0b1000000000) == 0b1000000000)
  6067                           
  6068                           ;incstack = 0
  6069  00263A  A207               	btfss	LED_Left@a+1,1,c
  6070  00263C  D015               	goto	l4529
  6071                           
  6072                           ;LED.c: 213: {;LED.c: 214: UINT b = a & 0b0111111111;
  6073  00263E  0EFF               	movlw	255
  6074  002640  1406               	andwf	LED_Left@a,w,c
  6075  002642  6E08               	movwf	LED_Left@b,c
  6076  002644  0E01               	movlw	1
  6077  002646  1407               	andwf	LED_Left@a+1,w,c
  6078  002648  6E09               	movwf	LED_Left@b+1,c
  6079                           
  6080                           ;LED.c: 215: b = b << 1;
  6081  00264A  90D8               	bcf	status,0,c
  6082  00264C  3408               	rlcf	LED_Left@b,w,c
  6083  00264E  6E08               	movwf	LED_Left@b,c
  6084  002650  3409               	rlcf	LED_Left@b+1,w,c
  6085  002652  6E09               	movwf	LED_Left@b+1,c
  6086                           
  6087                           ;LED.c: 216: b = b | 0b0000000001;
  6088  002654  0E01               	movlw	1
  6089  002656  1008               	iorwf	LED_Left@b,w,c
  6090  002658  6E08               	movwf	LED_Left@b,c
  6091  00265A  5009               	movf	LED_Left@b+1,w,c
  6092  00265C  6E09               	movwf	LED_Left@b+1,c
  6093                           
  6094                           ;LED.c: 217: return b;
  6095  00265E  C008  F006         	movff	LED_Left@b,?_LED_Left
  6096  002662  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  6097  002666  0012               	return	
  6098  002668                     l4529:
  6099                           
  6100                           ;LED.c: 219: else;LED.c: 220: {;LED.c: 221: a = a << 1;
  6101  002668  90D8               	bcf	status,0,c
  6102  00266A  3406               	rlcf	LED_Left@a,w,c
  6103  00266C  6E06               	movwf	LED_Left@a,c
  6104  00266E  3407               	rlcf	LED_Left@a+1,w,c
  6105  002670  6E07               	movwf	LED_Left@a+1,c
  6106                           
  6107                           ;LED.c: 222: return a;
  6108  002672  C006  F006         	movff	LED_Left@a,?_LED_Left
  6109  002676  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  6110  00267A  0012               	return		;funcret
  6111  00267C                     __end_of_LED_Left:
  6112                           	opt callstack 0
  6113                           
  6114 ;; *************** function _INI_All *****************
  6115 ;; Defined at:
  6116 ;;		line 54 in file "INI.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;		None
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;		None
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1    wreg      void 
  6123 ;; Registers used:
  6124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;Total ram usage:        0 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; Hardware stack levels required when called:    6
  6137 ;; This function calls:
  6138 ;;		_CAN_Setup
  6139 ;;		_INI_GlobalInterrupt
  6140 ;;		_INI_LED_Start
  6141 ;;		_INI_OUTPUT
  6142 ;;		_INI_Timer
  6143 ;;		_NVMInit
  6144 ;;		_ReadDataToEEPROM
  6145 ;; This function is called by:
  6146 ;;		_main
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text45
  6151  0028D6                     __ptext45:
  6152                           	opt callstack 0
  6153  0028D6                     _INI_All:
  6154                           	opt callstack 24
  6155                           
  6156                           ;INI.c: 57: WDTCONbits.SWDTEN = 1;
  6157                           
  6158                           ;incstack = 0
  6159  0028D6  80D1               	bsf	4049,0,c	;volatile
  6160                           
  6161                           ;INI.c: 60: NVMInit();
  6162  0028D8  EC3E  F013         	call	_NVMInit	;wreg free
  6163                           
  6164                           ;INI.c: 62: ReadDataToEEPROM();
  6165  0028DC  EC97  F007         	call	_ReadDataToEEPROM	;wreg free
  6166  0028E0  0004               	clrwdt		;# 
  6167                           
  6168                           ;INI.c: 66: INI_OUTPUT();
  6169  0028E2  EC7C  F014         	call	_INI_OUTPUT	;wreg free
  6170                           
  6171                           ;INI.c: 68: CAN_Setup();
  6172  0028E6  ECFB  F011         	call	_CAN_Setup	;wreg free
  6173                           
  6174                           ;INI.c: 69: INI_GlobalInterrupt();
  6175  0028EA  ECC3  F014         	call	_INI_GlobalInterrupt	;wreg free
  6176                           
  6177                           ;INI.c: 71: INI_Timer();
  6178  0028EE  EC9B  F014         	call	_INI_Timer	;wreg free
  6179                           
  6180                           ;INI.c: 73: INI_LED_Start();
  6181  0028F2  EC16  F014         	call	_INI_LED_Start	;wreg free
  6182  0028F6  0012               	return		;funcret
  6183  0028F8                     __end_of_INI_All:
  6184                           	opt callstack 0
  6185                           
  6186 ;; *************** function _ReadDataToEEPROM *****************
  6187 ;; Defined at:
  6188 ;;		line 484 in file "FRAME.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;Total ram usage:        2 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    5
  6209 ;; This function calls:
  6210 ;;		_NVMRead
  6211 ;; This function is called by:
  6212 ;;		_INI_All
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text46
  6217  000F2E                     __ptext46:
  6218                           	opt callstack 0
  6219  000F2E                     _ReadDataToEEPROM:
  6220                           	opt callstack 24
  6221                           
  6222                           ;FRAME.c: 487: NVMRead(&Init_Data,110,2);
  6223                           
  6224                           ;incstack = 0
  6225  000F2E  0E56               	movlw	low _Init_Data
  6226  000F30  6E08               	movwf	NVMRead@dest,c
  6227  000F32  0E00               	movlw	high _Init_Data
  6228  000F34  6E09               	movwf	NVMRead@dest+1,c
  6229  000F36  0E00               	movlw	0
  6230  000F38  6E0B               	movwf	NVMRead@addr+1,c
  6231  000F3A  0E6E               	movlw	110
  6232  000F3C  6E0A               	movwf	NVMRead@addr,c
  6233  000F3E  0E00               	movlw	0
  6234  000F40  6E0D               	movwf	NVMRead@count+1,c
  6235  000F42  0E02               	movlw	2
  6236  000F44  6E0C               	movwf	NVMRead@count,c
  6237  000F46  ECFC  F013         	call	_NVMRead	;wreg free
  6238                           
  6239                           ;FRAME.c: 488: NVMRead(&NeightAdress1,113,2);
  6240  000F4A  0E4B               	movlw	low _NeightAdress1
  6241  000F4C  6E08               	movwf	NVMRead@dest,c
  6242  000F4E  0E00               	movlw	high _NeightAdress1
  6243  000F50  6E09               	movwf	NVMRead@dest+1,c
  6244  000F52  0E00               	movlw	0
  6245  000F54  6E0B               	movwf	NVMRead@addr+1,c
  6246  000F56  0E71               	movlw	113
  6247  000F58  6E0A               	movwf	NVMRead@addr,c
  6248  000F5A  0E00               	movlw	0
  6249  000F5C  6E0D               	movwf	NVMRead@count+1,c
  6250  000F5E  0E02               	movlw	2
  6251  000F60  6E0C               	movwf	NVMRead@count,c
  6252  000F62  ECFC  F013         	call	_NVMRead	;wreg free
  6253                           
  6254                           ;FRAME.c: 489: if(NeightAdress1==0xFFFF || (MinAdres>NeightAdress1>MaxAdres))
  6255  000F66  284B               	incf	_NeightAdress1,w,c	;volatile
  6256  000F68  E103               	bnz	u4270
  6257  000F6A  284C               	incf	_NeightAdress1+1,w,c	;volatile
  6258  000F6C  B4D8               	btfsc	status,2,c
  6259  000F6E  D011               	goto	u4300
  6260  000F70                     u4270:
  6261  000F70  5035               	movf	_MinAdres,w,c	;volatile
  6262  000F72  5C4B               	subwf	_NeightAdress1,w,c	;volatile
  6263  000F74  5036               	movf	_MinAdres+1,w,c	;volatile
  6264  000F76  584C               	subwfb	_NeightAdress1+1,w,c	;volatile
  6265  000F78  B0D8               	btfsc	status,0,c
  6266  000F7A  D002               	goto	u4280
  6267  000F7C  0E01               	movlw	1
  6268  000F7E  D001               	goto	u4290
  6269  000F80                     u4280:
  6270  000F80  0E00               	movlw	0
  6271  000F82                     u4290:
  6272  000F82  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6273  000F84  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6274  000F86  500E               	movf	??_ReadDataToEEPROM,w,c
  6275  000F88  5C4D               	subwf	_MaxAdres,w,c	;volatile
  6276  000F8A  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6277  000F8C  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  6278  000F8E  B0D8               	btfsc	status,0,c
  6279  000F90  D004               	goto	l4897
  6280  000F92                     u4300:
  6281                           
  6282                           ;FRAME.c: 490: {;FRAME.c: 491: NeightAdress1=0x0000;
  6283  000F92  0E00               	movlw	0
  6284  000F94  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  6285  000F96  0E00               	movlw	0
  6286  000F98  6E4B               	movwf	_NeightAdress1,c	;volatile
  6287  000F9A                     l4897:
  6288                           
  6289                           ;FRAME.c: 492: };FRAME.c: 493: NVMRead(&NeightAdress2,116,2);
  6290  000F9A  0E58               	movlw	low _NeightAdress2
  6291  000F9C  6E08               	movwf	NVMRead@dest,c
  6292  000F9E  0E00               	movlw	high _NeightAdress2
  6293  000FA0  6E09               	movwf	NVMRead@dest+1,c
  6294  000FA2  0E00               	movlw	0
  6295  000FA4  6E0B               	movwf	NVMRead@addr+1,c
  6296  000FA6  0E74               	movlw	116
  6297  000FA8  6E0A               	movwf	NVMRead@addr,c
  6298  000FAA  0E00               	movlw	0
  6299  000FAC  6E0D               	movwf	NVMRead@count+1,c
  6300  000FAE  0E02               	movlw	2
  6301  000FB0  6E0C               	movwf	NVMRead@count,c
  6302  000FB2  ECFC  F013         	call	_NVMRead	;wreg free
  6303                           
  6304                           ;FRAME.c: 494: if(NeightAdress2==0xFFFF || (MinAdres>NeightAdress2>MaxAdres))
  6305  000FB6  2858               	incf	_NeightAdress2,w,c	;volatile
  6306  000FB8  E103               	bnz	u4310
  6307  000FBA  2859               	incf	_NeightAdress2+1,w,c	;volatile
  6308  000FBC  B4D8               	btfsc	status,2,c
  6309  000FBE  D011               	goto	u4340
  6310  000FC0                     u4310:
  6311  000FC0  5035               	movf	_MinAdres,w,c	;volatile
  6312  000FC2  5C58               	subwf	_NeightAdress2,w,c	;volatile
  6313  000FC4  5036               	movf	_MinAdres+1,w,c	;volatile
  6314  000FC6  5859               	subwfb	_NeightAdress2+1,w,c	;volatile
  6315  000FC8  B0D8               	btfsc	status,0,c
  6316  000FCA  D002               	goto	u4320
  6317  000FCC  0E01               	movlw	1
  6318  000FCE  D001               	goto	u4330
  6319  000FD0                     u4320:
  6320  000FD0  0E00               	movlw	0
  6321  000FD2                     u4330:
  6322  000FD2  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6323  000FD4  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6324  000FD6  500E               	movf	??_ReadDataToEEPROM,w,c
  6325  000FD8  5C4D               	subwf	_MaxAdres,w,c	;volatile
  6326  000FDA  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6327  000FDC  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  6328  000FDE  B0D8               	btfsc	status,0,c
  6329  000FE0  D004               	goto	l4905
  6330  000FE2                     u4340:
  6331                           
  6332                           ;FRAME.c: 495: {;FRAME.c: 496: NeightAdress2=0x0000;
  6333  000FE2  0E00               	movlw	0
  6334  000FE4  6E59               	movwf	_NeightAdress2+1,c	;volatile
  6335  000FE6  0E00               	movlw	0
  6336  000FE8  6E58               	movwf	_NeightAdress2,c	;volatile
  6337  000FEA                     l4905:
  6338                           
  6339                           ;FRAME.c: 497: };FRAME.c: 498: NVMRead(&NeightAdress3,119,2);
  6340  000FEA  0E49               	movlw	low _NeightAdress3
  6341  000FEC  6E08               	movwf	NVMRead@dest,c
  6342  000FEE  0E00               	movlw	high _NeightAdress3
  6343  000FF0  6E09               	movwf	NVMRead@dest+1,c
  6344  000FF2  0E00               	movlw	0
  6345  000FF4  6E0B               	movwf	NVMRead@addr+1,c
  6346  000FF6  0E77               	movlw	119
  6347  000FF8  6E0A               	movwf	NVMRead@addr,c
  6348  000FFA  0E00               	movlw	0
  6349  000FFC  6E0D               	movwf	NVMRead@count+1,c
  6350  000FFE  0E02               	movlw	2
  6351  001000  6E0C               	movwf	NVMRead@count,c
  6352  001002  ECFC  F013         	call	_NVMRead	;wreg free
  6353                           
  6354                           ;FRAME.c: 499: if(NeightAdress3==0xFFFF || (MinAdres>NeightAdress3>MaxAdres))
  6355  001006  2849               	incf	_NeightAdress3,w,c	;volatile
  6356  001008  E103               	bnz	u4350
  6357  00100A  284A               	incf	_NeightAdress3+1,w,c	;volatile
  6358  00100C  B4D8               	btfsc	status,2,c
  6359  00100E  D011               	goto	u4380
  6360  001010                     u4350:
  6361  001010  5035               	movf	_MinAdres,w,c	;volatile
  6362  001012  5C49               	subwf	_NeightAdress3,w,c	;volatile
  6363  001014  5036               	movf	_MinAdres+1,w,c	;volatile
  6364  001016  584A               	subwfb	_NeightAdress3+1,w,c	;volatile
  6365  001018  B0D8               	btfsc	status,0,c
  6366  00101A  D002               	goto	u4360
  6367  00101C  0E01               	movlw	1
  6368  00101E  D001               	goto	u4370
  6369  001020                     u4360:
  6370  001020  0E00               	movlw	0
  6371  001022                     u4370:
  6372  001022  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6373  001024  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6374  001026  500E               	movf	??_ReadDataToEEPROM,w,c
  6375  001028  5C4D               	subwf	_MaxAdres,w,c	;volatile
  6376  00102A  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6377  00102C  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  6378  00102E  B0D8               	btfsc	status,0,c
  6379  001030  D004               	goto	l4913
  6380  001032                     u4380:
  6381                           
  6382                           ;FRAME.c: 500: {;FRAME.c: 501: NeightAdress3=0x0000;
  6383  001032  0E00               	movlw	0
  6384  001034  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  6385  001036  0E00               	movlw	0
  6386  001038  6E49               	movwf	_NeightAdress3,c	;volatile
  6387  00103A                     l4913:
  6388                           
  6389                           ;FRAME.c: 502: };FRAME.c: 503: NVMRead(&NeightAdress4,122,2);
  6390  00103A  0E47               	movlw	low _NeightAdress4
  6391  00103C  6E08               	movwf	NVMRead@dest,c
  6392  00103E  0E00               	movlw	high _NeightAdress4
  6393  001040  6E09               	movwf	NVMRead@dest+1,c
  6394  001042  0E00               	movlw	0
  6395  001044  6E0B               	movwf	NVMRead@addr+1,c
  6396  001046  0E7A               	movlw	122
  6397  001048  6E0A               	movwf	NVMRead@addr,c
  6398  00104A  0E00               	movlw	0
  6399  00104C  6E0D               	movwf	NVMRead@count+1,c
  6400  00104E  0E02               	movlw	2
  6401  001050  6E0C               	movwf	NVMRead@count,c
  6402  001052  ECFC  F013         	call	_NVMRead	;wreg free
  6403                           
  6404                           ;FRAME.c: 504: if(NeightAdress4==0xFFFF || (MinAdres>NeightAdress4>MaxAdres))
  6405  001056  2847               	incf	_NeightAdress4,w,c	;volatile
  6406  001058  E103               	bnz	u4390
  6407  00105A  2848               	incf	_NeightAdress4+1,w,c	;volatile
  6408  00105C  B4D8               	btfsc	status,2,c
  6409  00105E  D011               	goto	u4420
  6410  001060                     u4390:
  6411  001060  5035               	movf	_MinAdres,w,c	;volatile
  6412  001062  5C47               	subwf	_NeightAdress4,w,c	;volatile
  6413  001064  5036               	movf	_MinAdres+1,w,c	;volatile
  6414  001066  5848               	subwfb	_NeightAdress4+1,w,c	;volatile
  6415  001068  B0D8               	btfsc	status,0,c
  6416  00106A  D002               	goto	u4400
  6417  00106C  0E01               	movlw	1
  6418  00106E  D001               	goto	u4410
  6419  001070                     u4400:
  6420  001070  0E00               	movlw	0
  6421  001072                     u4410:
  6422  001072  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6423  001074  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6424  001076  500E               	movf	??_ReadDataToEEPROM,w,c
  6425  001078  5C4D               	subwf	_MaxAdres,w,c	;volatile
  6426  00107A  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6427  00107C  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  6428  00107E  B0D8               	btfsc	status,0,c
  6429  001080  D004               	goto	l4921
  6430  001082                     u4420:
  6431                           
  6432                           ;FRAME.c: 505: {;FRAME.c: 506: NeightAdress4=0x0000;
  6433  001082  0E00               	movlw	0
  6434  001084  6E48               	movwf	_NeightAdress4+1,c	;volatile
  6435  001086  0E00               	movlw	0
  6436  001088  6E47               	movwf	_NeightAdress4,c	;volatile
  6437  00108A                     l4921:
  6438                           
  6439                           ;FRAME.c: 507: };FRAME.c: 508: NVMRead(&NeightAdress5,125,2);
  6440  00108A  0E45               	movlw	low _NeightAdress5
  6441  00108C  6E08               	movwf	NVMRead@dest,c
  6442  00108E  0E00               	movlw	high _NeightAdress5
  6443  001090  6E09               	movwf	NVMRead@dest+1,c
  6444  001092  0E00               	movlw	0
  6445  001094  6E0B               	movwf	NVMRead@addr+1,c
  6446  001096  0E7D               	movlw	125
  6447  001098  6E0A               	movwf	NVMRead@addr,c
  6448  00109A  0E00               	movlw	0
  6449  00109C  6E0D               	movwf	NVMRead@count+1,c
  6450  00109E  0E02               	movlw	2
  6451  0010A0  6E0C               	movwf	NVMRead@count,c
  6452  0010A2  ECFC  F013         	call	_NVMRead	;wreg free
  6453                           
  6454                           ;FRAME.c: 509: if(NeightAdress5==0xFFFF || (MinAdres>NeightAdress5>MaxAdres))
  6455  0010A6  2845               	incf	_NeightAdress5,w,c	;volatile
  6456  0010A8  E103               	bnz	u4430
  6457  0010AA  2846               	incf	_NeightAdress5+1,w,c	;volatile
  6458  0010AC  B4D8               	btfsc	status,2,c
  6459  0010AE  D011               	goto	u4460
  6460  0010B0                     u4430:
  6461  0010B0  5035               	movf	_MinAdres,w,c	;volatile
  6462  0010B2  5C45               	subwf	_NeightAdress5,w,c	;volatile
  6463  0010B4  5036               	movf	_MinAdres+1,w,c	;volatile
  6464  0010B6  5846               	subwfb	_NeightAdress5+1,w,c	;volatile
  6465  0010B8  B0D8               	btfsc	status,0,c
  6466  0010BA  D002               	goto	u4440
  6467  0010BC  0E01               	movlw	1
  6468  0010BE  D001               	goto	u4450
  6469  0010C0                     u4440:
  6470  0010C0  0E00               	movlw	0
  6471  0010C2                     u4450:
  6472  0010C2  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6473  0010C4  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6474  0010C6  500E               	movf	??_ReadDataToEEPROM,w,c
  6475  0010C8  5C4D               	subwf	_MaxAdres,w,c	;volatile
  6476  0010CA  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6477  0010CC  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  6478  0010CE  B0D8               	btfsc	status,0,c
  6479  0010D0  D004               	goto	l4929
  6480  0010D2                     u4460:
  6481                           
  6482                           ;FRAME.c: 510: {;FRAME.c: 511: NeightAdress5=0x0000;
  6483  0010D2  0E00               	movlw	0
  6484  0010D4  6E46               	movwf	_NeightAdress5+1,c	;volatile
  6485  0010D6  0E00               	movlw	0
  6486  0010D8  6E45               	movwf	_NeightAdress5,c	;volatile
  6487  0010DA                     l4929:
  6488                           
  6489                           ;FRAME.c: 512: };FRAME.c: 513: NVMRead(&NeightAdress6,128,2);
  6490  0010DA  0E43               	movlw	low _NeightAdress6
  6491  0010DC  6E08               	movwf	NVMRead@dest,c
  6492  0010DE  0E00               	movlw	high _NeightAdress6
  6493  0010E0  6E09               	movwf	NVMRead@dest+1,c
  6494  0010E2  0E00               	movlw	0
  6495  0010E4  6E0B               	movwf	NVMRead@addr+1,c
  6496  0010E6  0E80               	movlw	128
  6497  0010E8  6E0A               	movwf	NVMRead@addr,c
  6498  0010EA  0E00               	movlw	0
  6499  0010EC  6E0D               	movwf	NVMRead@count+1,c
  6500  0010EE  0E02               	movlw	2
  6501  0010F0  6E0C               	movwf	NVMRead@count,c
  6502  0010F2  ECFC  F013         	call	_NVMRead	;wreg free
  6503                           
  6504                           ;FRAME.c: 514: if(NeightAdress6==0xFFFF || (MinAdres>NeightAdress6>MaxAdres))
  6505  0010F6  2843               	incf	_NeightAdress6,w,c	;volatile
  6506  0010F8  E103               	bnz	u4470
  6507  0010FA  2844               	incf	_NeightAdress6+1,w,c	;volatile
  6508  0010FC  B4D8               	btfsc	status,2,c
  6509  0010FE  D011               	goto	u4500
  6510  001100                     u4470:
  6511  001100  5035               	movf	_MinAdres,w,c	;volatile
  6512  001102  5C43               	subwf	_NeightAdress6,w,c	;volatile
  6513  001104  5036               	movf	_MinAdres+1,w,c	;volatile
  6514  001106  5844               	subwfb	_NeightAdress6+1,w,c	;volatile
  6515  001108  B0D8               	btfsc	status,0,c
  6516  00110A  D002               	goto	u4480
  6517  00110C  0E01               	movlw	1
  6518  00110E  D001               	goto	u4490
  6519  001110                     u4480:
  6520  001110  0E00               	movlw	0
  6521  001112                     u4490:
  6522  001112  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6523  001114  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6524  001116  500E               	movf	??_ReadDataToEEPROM,w,c
  6525  001118  5C4D               	subwf	_MaxAdres,w,c	;volatile
  6526  00111A  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6527  00111C  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  6528  00111E  B0D8               	btfsc	status,0,c
  6529  001120  D004               	goto	l4937
  6530  001122                     u4500:
  6531                           
  6532                           ;FRAME.c: 515: {;FRAME.c: 516: NeightAdress6=0x0000;
  6533  001122  0E00               	movlw	0
  6534  001124  6E44               	movwf	_NeightAdress6+1,c	;volatile
  6535  001126  0E00               	movlw	0
  6536  001128  6E43               	movwf	_NeightAdress6,c	;volatile
  6537  00112A                     l4937:
  6538                           
  6539                           ;FRAME.c: 517: };FRAME.c: 518: NVMRead(&NeightAdress7,131,2);
  6540  00112A  0E41               	movlw	low _NeightAdress7
  6541  00112C  6E08               	movwf	NVMRead@dest,c
  6542  00112E  0E00               	movlw	high _NeightAdress7
  6543  001130  6E09               	movwf	NVMRead@dest+1,c
  6544  001132  0E00               	movlw	0
  6545  001134  6E0B               	movwf	NVMRead@addr+1,c
  6546  001136  0E83               	movlw	131
  6547  001138  6E0A               	movwf	NVMRead@addr,c
  6548  00113A  0E00               	movlw	0
  6549  00113C  6E0D               	movwf	NVMRead@count+1,c
  6550  00113E  0E02               	movlw	2
  6551  001140  6E0C               	movwf	NVMRead@count,c
  6552  001142  ECFC  F013         	call	_NVMRead	;wreg free
  6553                           
  6554                           ;FRAME.c: 519: if(NeightAdress7==0xFFFF || (MinAdres>NeightAdress7>MaxAdres))
  6555  001146  2841               	incf	_NeightAdress7,w,c	;volatile
  6556  001148  E103               	bnz	u4510
  6557  00114A  2842               	incf	_NeightAdress7+1,w,c	;volatile
  6558  00114C  B4D8               	btfsc	status,2,c
  6559  00114E  D011               	goto	u4540
  6560  001150                     u4510:
  6561  001150  5035               	movf	_MinAdres,w,c	;volatile
  6562  001152  5C41               	subwf	_NeightAdress7,w,c	;volatile
  6563  001154  5036               	movf	_MinAdres+1,w,c	;volatile
  6564  001156  5842               	subwfb	_NeightAdress7+1,w,c	;volatile
  6565  001158  B0D8               	btfsc	status,0,c
  6566  00115A  D002               	goto	u4520
  6567  00115C  0E01               	movlw	1
  6568  00115E  D001               	goto	u4530
  6569  001160                     u4520:
  6570  001160  0E00               	movlw	0
  6571  001162                     u4530:
  6572  001162  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6573  001164  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6574  001166  500E               	movf	??_ReadDataToEEPROM,w,c
  6575  001168  5C4D               	subwf	_MaxAdres,w,c	;volatile
  6576  00116A  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6577  00116C  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  6578  00116E  B0D8               	btfsc	status,0,c
  6579  001170  D004               	goto	l4945
  6580  001172                     u4540:
  6581                           
  6582                           ;FRAME.c: 520: {;FRAME.c: 521: NeightAdress7=0x0000;
  6583  001172  0E00               	movlw	0
  6584  001174  6E42               	movwf	_NeightAdress7+1,c	;volatile
  6585  001176  0E00               	movlw	0
  6586  001178  6E41               	movwf	_NeightAdress7,c	;volatile
  6587  00117A                     l4945:
  6588                           
  6589                           ;FRAME.c: 522: };FRAME.c: 523: NVMRead(&NeightAdress8,134,2);
  6590  00117A  0E3F               	movlw	low _NeightAdress8
  6591  00117C  6E08               	movwf	NVMRead@dest,c
  6592  00117E  0E00               	movlw	high _NeightAdress8
  6593  001180  6E09               	movwf	NVMRead@dest+1,c
  6594  001182  0E00               	movlw	0
  6595  001184  6E0B               	movwf	NVMRead@addr+1,c
  6596  001186  0E86               	movlw	134
  6597  001188  6E0A               	movwf	NVMRead@addr,c
  6598  00118A  0E00               	movlw	0
  6599  00118C  6E0D               	movwf	NVMRead@count+1,c
  6600  00118E  0E02               	movlw	2
  6601  001190  6E0C               	movwf	NVMRead@count,c
  6602  001192  ECFC  F013         	call	_NVMRead	;wreg free
  6603                           
  6604                           ;FRAME.c: 524: if(NeightAdress8==0xFFFF || (MinAdres>NeightAdress8>MaxAdres))
  6605  001196  283F               	incf	_NeightAdress8,w,c	;volatile
  6606  001198  E103               	bnz	u4550
  6607  00119A  2840               	incf	_NeightAdress8+1,w,c	;volatile
  6608  00119C  B4D8               	btfsc	status,2,c
  6609  00119E  D011               	goto	u4580
  6610  0011A0                     u4550:
  6611  0011A0  5035               	movf	_MinAdres,w,c	;volatile
  6612  0011A2  5C3F               	subwf	_NeightAdress8,w,c	;volatile
  6613  0011A4  5036               	movf	_MinAdres+1,w,c	;volatile
  6614  0011A6  5840               	subwfb	_NeightAdress8+1,w,c	;volatile
  6615  0011A8  B0D8               	btfsc	status,0,c
  6616  0011AA  D002               	goto	u4560
  6617  0011AC  0E01               	movlw	1
  6618  0011AE  D001               	goto	u4570
  6619  0011B0                     u4560:
  6620  0011B0  0E00               	movlw	0
  6621  0011B2                     u4570:
  6622  0011B2  6E0E               	movwf	??_ReadDataToEEPROM& (0+255),c
  6623  0011B4  6A0F               	clrf	(??_ReadDataToEEPROM+1)& (0+255),c
  6624  0011B6  500E               	movf	??_ReadDataToEEPROM,w,c
  6625  0011B8  5C4D               	subwf	_MaxAdres,w,c	;volatile
  6626  0011BA  500F               	movf	??_ReadDataToEEPROM+1,w,c
  6627  0011BC  584E               	subwfb	_MaxAdres+1,w,c	;volatile
  6628  0011BE  B0D8               	btfsc	status,0,c
  6629  0011C0  0012               	return	
  6630  0011C2                     u4580:
  6631                           
  6632                           ;FRAME.c: 525: {;FRAME.c: 526: NeightAdress8=0x0000;
  6633  0011C2  0E00               	movlw	0
  6634  0011C4  6E40               	movwf	_NeightAdress8+1,c	;volatile
  6635  0011C6  0E00               	movlw	0
  6636  0011C8  6E3F               	movwf	_NeightAdress8,c	;volatile
  6637  0011CA  0012               	return		;funcret
  6638  0011CC                     __end_of_ReadDataToEEPROM:
  6639                           	opt callstack 0
  6640                           
  6641 ;; *************** function _NVMRead *****************
  6642 ;; Defined at:
  6643 ;;		line 125 in file "EEPROM.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6646 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  6647 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  6648 ;;		 -> NeightAdress1(2), 
  6649 ;;  addr            2    9[COMRAM] unsigned short 
  6650 ;;  count           2   11[COMRAM] unsigned short 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6662 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;Total ram usage:        6 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    4
  6669 ;; This function calls:
  6670 ;;		_ReadfromEEPROM
  6671 ;; This function is called by:
  6672 ;;		_ReadDataToEEPROM
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text47
  6677  0027F8                     __ptext47:
  6678                           	opt callstack 0
  6679  0027F8                     _NVMRead:
  6680                           	opt callstack 24
  6681                           
  6682                           ;EEPROM.c: 127: while( count > 0 )
  6683                           
  6684                           ;incstack = 0
  6685  0027F8  D014               	goto	l4649
  6686  0027FA                     l956:
  6687  0027FA  B2A6               	btfsc	4006,1,c	;volsfr
  6688  0027FC  D7FE               	goto	l956
  6689                           
  6690                           ;EEPROM.c: 130: *dest++ = ReadfromEEPROM(addr++);
  6691  0027FE  C00A  F006         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6692  002802  C00B  F007         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6693  002806  ECB2  F014         	call	_ReadfromEEPROM	;wreg free
  6694  00280A  C008  FFD9         	movff	NVMRead@dest,fsr2l
  6695  00280E  C009  FFDA         	movff	NVMRead@dest+1,fsr2h
  6696  002812  6EDF               	movwf	indf2,c
  6697  002814  4A0A               	infsnz	NVMRead@addr,f,c
  6698  002816  2A0B               	incf	NVMRead@addr+1,f,c
  6699  002818  4A08               	infsnz	NVMRead@dest,f,c
  6700  00281A  2A09               	incf	NVMRead@dest+1,f,c
  6701                           
  6702                           ;EEPROM.c: 131: count--;
  6703  00281C  060C               	decf	NVMRead@count,f,c
  6704  00281E  A0D8               	btfss	status,0,c
  6705  002820  060D               	decf	NVMRead@count+1,f,c
  6706  002822                     l4649:
  6707  002822  500C               	movf	NVMRead@count,w,c
  6708  002824  100D               	iorwf	NVMRead@count+1,w,c
  6709  002826  B4D8               	btfsc	status,2,c
  6710  002828  0012               	return	
  6711  00282A  D7E7               	goto	l956
  6712  00282C                     __end_of_NVMRead:
  6713                           	opt callstack 0
  6714                           
  6715 ;; *************** function _ReadfromEEPROM *****************
  6716 ;; Defined at:
  6717 ;;		line 73 in file "EEPROM.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  Address         2    5[COMRAM] unsigned short 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      unsigned char 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;Total ram usage:        2 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    3
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_NVMRead
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text48
  6746  002964                     __ptext48:
  6747                           	opt callstack 0
  6748  002964                     _ReadfromEEPROM:
  6749                           	opt callstack 24
  6750                           
  6751                           ;EEPROM.c: 75: EEADRH = (BYTE)(Address>>8);
  6752                           
  6753                           ;incstack = 0
  6754  002964  5007               	movf	ReadfromEEPROM@Address+1,w,c
  6755  002966  6EAA               	movwf	4010,c	;volatile
  6756                           
  6757                           ;EEPROM.c: 76: EEADR = (BYTE)Address;
  6758  002968  C006  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6759                           
  6760                           ;EEPROM.c: 77: EECON1bits.RD = 1;
  6761  00296C  80A6               	bsf	4006,0,c	;volsfr
  6762                           
  6763                           ;EEPROM.c: 78: EECON1bits.EEPGD = 0;
  6764  00296E  9EA6               	bcf	4006,7,c	;volsfr
  6765                           
  6766                           ;EEPROM.c: 79: EECON1bits.CFGS = 0;
  6767  002970  9CA6               	bcf	4006,6,c	;volsfr
  6768                           
  6769                           ;EEPROM.c: 80: return EEDATA;
  6770  002972  50A8               	movf	4008,w,c	;volatile
  6771  002974  0012               	return		;funcret
  6772  002976                     __end_of_ReadfromEEPROM:
  6773                           	opt callstack 0
  6774                           
  6775 ;; *************** function _NVMInit *****************
  6776 ;; Defined at:
  6777 ;;		line 49 in file "EEPROM.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;		None
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;  NeightAdress    2    0        unsigned int 
  6782 ;;  result          1   13[COMRAM] enum E10294
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      enum E10294
  6785 ;; Registers used:
  6786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;Total ram usage:        3 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    4
  6799 ;; This function calls:
  6800 ;;		_NVMalloc
  6801 ;; This function is called by:
  6802 ;;		_INI_All
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text49
  6807  00267C                     __ptext49:
  6808                           	opt callstack 0
  6809  00267C                     _NVMInit:
  6810                           	opt callstack 25
  6811                           
  6812                           ;EEPROM.c: 51: BOOL result = TRUE;
  6813                           
  6814                           ;incstack = 0
  6815  00267C  0E01               	movlw	1
  6816  00267E  6E0E               	movwf	NVMInit@result,c
  6817                           
  6818                           ;EEPROM.c: 53: nextEEPosition = 0;
  6819  002680  0E00               	movlw	0
  6820  002682  6E32               	movwf	_nextEEPosition+1,c
  6821  002684  0E00               	movlw	0
  6822  002686  6E31               	movwf	_nextEEPosition,c
  6823                           
  6824                           ;EEPROM.c: 55: result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6825  002688  0E00               	movlw	0
  6826  00268A  6E07               	movwf	NVMalloc@size+1,c
  6827  00268C  0E03               	movlw	3
  6828  00268E  6E06               	movwf	NVMalloc@size,c
  6829  002690  0ED4               	movlw	low _ustawieniaKarty
  6830  002692  6E08               	movwf	NVMalloc@location,c
  6831  002694  0E00               	movlw	high _ustawieniaKarty
  6832  002696  6E09               	movwf	NVMalloc@location+1,c
  6833  002698  ECC7  F013         	call	_NVMalloc	;wreg free
  6834  00269C  160E               	andwf	NVMInit@result,f,c
  6835                           
  6836                           ;EEPROM.c: 56: result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  6837  00269E  0E00               	movlw	0
  6838  0026A0  6E07               	movwf	NVMalloc@size+1,c
  6839  0026A2  0E10               	movlw	16
  6840  0026A4  6E06               	movwf	NVMalloc@size,c
  6841  0026A6  0ED2               	movlw	low _neighborsAdress
  6842  0026A8  6E08               	movwf	NVMalloc@location,c
  6843  0026AA  0E00               	movlw	high _neighborsAdress
  6844  0026AC  6E09               	movwf	NVMalloc@location+1,c
  6845  0026AE  ECC7  F013         	call	_NVMalloc	;wreg free
  6846  0026B2  160E               	andwf	NVMInit@result,f,c
  6847  0026B4  0012               	return		;funcret
  6848  0026B6                     __end_of_NVMInit:
  6849                           	opt callstack 0
  6850                           
  6851 ;; *************** function _NVMalloc *****************
  6852 ;; Defined at:
  6853 ;;		line 24 in file "EEPROM.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  size            2    5[COMRAM] unsigned short 
  6856 ;;  location        2    7[COMRAM] PTR unsigned short 
  6857 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;		None
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      enum E10294
  6862 ;; Registers used:
  6863 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:        6 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    3
  6876 ;; This function calls:
  6877 ;;		Nothing
  6878 ;; This function is called by:
  6879 ;;		_NVMInit
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text50
  6884  00278E                     __ptext50:
  6885                           	opt callstack 0
  6886  00278E                     _NVMalloc:
  6887                           	opt callstack 25
  6888                           
  6889                           ;EEPROM.c: 28: if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6890                           
  6891                           ;incstack = 0
  6892  00278E  5006               	movf	NVMalloc@size,w,c
  6893  002790  2431               	addwf	_nextEEPosition,w,c
  6894  002792  6E0A               	movwf	??_NVMalloc& (0+255),c
  6895  002794  5007               	movf	NVMalloc@size+1,w,c
  6896  002796  2032               	addwfc	_nextEEPosition+1,w,c
  6897  002798  6E0B               	movwf	(??_NVMalloc+1)& (0+255),c
  6898  00279A  040A               	decf	??_NVMalloc,w,c
  6899  00279C  0E04               	movlw	4
  6900  00279E  580B               	subwfb	??_NVMalloc+1,w,c
  6901  0027A0  A0D8               	btfss	status,0,c
  6902  0027A2  D002               	goto	l4695
  6903                           
  6904                           ;EEPROM.c: 29: {;EEPROM.c: 30: return FALSE;
  6905  0027A4  0E00               	movlw	0
  6906  0027A6  0012               	return	
  6907  0027A8                     l4695:
  6908                           
  6909                           ;EEPROM.c: 31: };EEPROM.c: 33: *location = nextEEPosition;
  6910  0027A8  C008  FFD9         	movff	NVMalloc@location,fsr2l
  6911  0027AC  C009  FFDA         	movff	NVMalloc@location+1,fsr2h
  6912  0027B0  C031  FFDE         	movff	_nextEEPosition,postinc2
  6913  0027B4  C032  FFDD         	movff	_nextEEPosition+1,postdec2
  6914                           
  6915                           ;EEPROM.c: 34: nextEEPosition += size;
  6916  0027B8  5006               	movf	NVMalloc@size,w,c
  6917  0027BA  2631               	addwf	_nextEEPosition,f,c
  6918  0027BC  5007               	movf	NVMalloc@size+1,w,c
  6919  0027BE  2232               	addwfc	_nextEEPosition+1,f,c
  6920                           
  6921                           ;EEPROM.c: 35: return TRUE;
  6922  0027C0  0E01               	movlw	1
  6923  0027C2  0012               	return		;funcret
  6924  0027C4                     __end_of_NVMalloc:
  6925                           	opt callstack 0
  6926                           
  6927 ;; *************** function _INI_Timer *****************
  6928 ;; Defined at:
  6929 ;;		line 92 in file "TMR1.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      unsigned char 
  6936 ;; Registers used:
  6937 ;;		wreg, status,2
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    3
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_INI_All
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text51
  6958  002936                     __ptext51:
  6959                           	opt callstack 0
  6960  002936                     _INI_Timer:
  6961                           	opt callstack 26
  6962                           
  6963                           ;TMR1.c: 96: IRCF2 = 1;
  6964                           
  6965                           ;incstack = 0
  6966  002936  8CD3               	bsf	4051,6,c	;volatile
  6967                           
  6968                           ;TMR1.c: 97: IRCF1 = 1;
  6969  002938  8AD3               	bsf	4051,5,c	;volatile
  6970                           
  6971                           ;TMR1.c: 98: IRCF0 = 1;
  6972  00293A  88D3               	bsf	4051,4,c	;volatile
  6973                           
  6974                           ;TMR1.c: 99: T1CON = 0b00111101;
  6975  00293C  0E3D               	movlw	61
  6976  00293E  6ECD               	movwf	4045,c	;volatile
  6977                           
  6978                           ;TMR1.c: 100: TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6979  002940  0E9E               	movlw	158
  6980  002942  6ECF               	movwf	4047,c	;volatile
  6981                           
  6982                           ;TMR1.c: 101: TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6983  002944  0E57               	movlw	87
  6984  002946  6ECE               	movwf	4046,c	;volatile
  6985                           
  6986                           ;TMR1.c: 102: TMR1IE=1;
  6987  002948  809D               	bsf	3997,0,c	;volatile
  6988                           
  6989                           ;TMR1.c: 103: TMR1ON = 1;
  6990  00294A  80CD               	bsf	4045,0,c	;volatile
  6991  00294C  0012               	return		;funcret
  6992  00294E                     __end_of_INI_Timer:
  6993                           	opt callstack 0
  6994                           
  6995 ;; *************** function _INI_OUTPUT *****************
  6996 ;; Defined at:
  6997 ;;		line 29 in file "INI.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;		None
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;		None
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      void 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;Total ram usage:        0 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:    3
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_INI_All
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text52
  7026  0028F8                     __ptext52:
  7027                           	opt callstack 0
  7028  0028F8                     _INI_OUTPUT:
  7029                           	opt callstack 26
  7030                           
  7031                           ;INI.c: 33: LATA = 0;
  7032                           
  7033                           ;incstack = 0
  7034  0028F8  0E00               	movlw	0
  7035  0028FA  6E89               	movwf	3977,c	;volatile
  7036                           
  7037                           ;INI.c: 34: LATB = 0;
  7038  0028FC  0E00               	movlw	0
  7039  0028FE  6E8A               	movwf	3978,c	;volatile
  7040                           
  7041                           ;INI.c: 35: LATC = 0;
  7042  002900  0E00               	movlw	0
  7043  002902  6E8B               	movwf	3979,c	;volatile
  7044                           
  7045                           ;INI.c: 36: TRISA = 0x0C;
  7046  002904  0E0C               	movlw	12
  7047  002906  6E92               	movwf	3986,c	;volatile
  7048                           
  7049                           ;INI.c: 37: TRISB = 0b10001000;
  7050  002908  0E88               	movlw	136
  7051  00290A  6E93               	movwf	3987,c	;volatile
  7052                           
  7053                           ;INI.c: 38: TRISC = 0xBF;
  7054  00290C  0EBF               	movlw	191
  7055  00290E  6E94               	movwf	3988,c	;volatile
  7056                           
  7057                           ;INI.c: 39: RCONbits.IPEN = 1;
  7058  002910  8ED0               	bsf	4048,7,c	;volatile
  7059                           
  7060                           ;INI.c: 42: DetectorLedRadar.Flags.inicjalizacja = 1;
  7061  002912  0100               	movlb	0	; () banked
  7062  002914  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  7063                           
  7064                           ; BSR set to: 0
  7065  002916  0012               	return		;funcret
  7066  002918                     __end_of_INI_OUTPUT:
  7067                           	opt callstack 0
  7068                           
  7069 ;; *************** function _INI_LED_Start *****************
  7070 ;; Defined at:
  7071 ;;		line 274 in file "LED.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    4
  7092 ;; This function calls:
  7093 ;;		_LED_Control
  7094 ;; This function is called by:
  7095 ;;		_INI_All
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text53
  7100  00282C                     __ptext53:
  7101                           	opt callstack 0
  7102  00282C                     _INI_LED_Start:
  7103                           	opt callstack 25
  7104                           
  7105                           ;LED.c: 276: TRISA = TRISA & 0b00000001;
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;incstack = 0
  7109  00282C  5092               	movf	3986,w,c	;volatile
  7110  00282E  0B01               	andlw	1
  7111  002830  6E92               	movwf	3986,c	;volatile
  7112                           
  7113                           ;LED.c: 277: TRISB = TRISB & 0b11111100;
  7114  002832  5093               	movf	3987,w,c	;volatile
  7115  002834  0BFC               	andlw	252
  7116  002836  6E93               	movwf	3987,c	;volatile
  7117                           
  7118                           ;LED.c: 278: TRISE = TRISE & 0b11111000;
  7119  002838  5096               	movf	3990,w,c	;volatile
  7120  00283A  0BF8               	andlw	248
  7121  00283C  6E96               	movwf	3990,c	;volatile
  7122                           
  7123                           ;LED.c: 279: TRISD = TRISD & 0b00000000;
  7124  00283E  0E00               	movlw	0
  7125  002840  6E95               	movwf	3989,c	;volatile
  7126                           
  7127                           ;LED.c: 280: LED_Control(RED,0b0000000000);
  7128  002842  0E00               	movlw	0
  7129  002844  6E07               	movwf	LED_Control@diode+1,c
  7130  002846  0E00               	movlw	0
  7131  002848  6E06               	movwf	LED_Control@diode,c
  7132  00284A  0E00               	movlw	0
  7133  00284C  ECEB  F00C         	call	_LED_Control
  7134                           
  7135                           ;LED.c: 281: LED_Control(GREEN,0b0000000000);
  7136  002850  0E00               	movlw	0
  7137  002852  6E07               	movwf	LED_Control@diode+1,c
  7138  002854  0E00               	movlw	0
  7139  002856  6E06               	movwf	LED_Control@diode,c
  7140  002858  0E01               	movlw	1
  7141  00285A  ECEB  F00C         	call	_LED_Control
  7142  00285E  0012               	return		;funcret
  7143  002860                     __end_of_INI_LED_Start:
  7144                           	opt callstack 0
  7145                           
  7146 ;; *************** function _LED_Control *****************
  7147 ;; Defined at:
  7148 ;;		line 299 in file "LED.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  color           1    wreg     enum E10511
  7151 ;;  diode           2    5[COMRAM] unsigned int 
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  color           1    9[COMRAM] enum E10511
  7154 ;;  cos             2    0        unsigned int 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      unsigned char 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:        5 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; Hardware stack levels required when called:    3
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_LED_Error
  7175 ;;		_LED_Update
  7176 ;;		_LED_Light_Pos
  7177 ;;		_INI_LED_Start
  7178 ;;		_LED_Clear
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text54
  7183  0019D6                     __ptext54:
  7184                           	opt callstack 0
  7185  0019D6                     _LED_Control:
  7186                           	opt callstack 24
  7187                           
  7188                           ;incstack = 0
  7189                           ;LED_Control@color stored from wreg
  7190  0019D6  6E0A               	movwf	LED_Control@color,c
  7191                           
  7192                           ;LED.c: 302: if(color == RED)
  7193  0019D8  500A               	movf	LED_Control@color,w,c
  7194  0019DA  A4D8               	btfss	status,2,c
  7195  0019DC  D050               	goto	l422
  7196                           
  7197                           ;LED.c: 303: {;LED.c: 305: if((diode & 0b0000000001)== 0b0000000001)
  7198  0019DE  A006               	btfss	LED_Control@diode,0,c
  7199  0019E0  D003               	goto	l4119
  7200                           
  7201                           ;LED.c: 306: {;LED.c: 307: LATD = LATD | ~0b11101111;
  7202  0019E2  508C               	movf	3980,w,c	;volatile
  7203  0019E4  0910               	iorlw	16
  7204  0019E6  D002               	goto	L4
  7205  0019E8                     l4119:
  7206                           
  7207                           ;LED.c: 309: else;LED.c: 310: {;LED.c: 311: LATD = LATD &0b11101111;
  7208  0019E8  508C               	movf	3980,w,c	;volatile
  7209  0019EA  0BEF               	andlw	239
  7210  0019EC                     L4:
  7211  0019EC  6E8C               	movwf	3980,c	;volatile
  7212                           
  7213                           ;LED.c: 312: };LED.c: 314: if((diode & 0b0000000010) == 0b0000000010)
  7214  0019EE  A206               	btfss	LED_Control@diode,1,c
  7215  0019F0  D003               	goto	l4125
  7216                           
  7217                           ;LED.c: 315: {;LED.c: 316: LATD = LATD | ~0b10111111;
  7218  0019F2  508C               	movf	3980,w,c	;volatile
  7219  0019F4  0940               	iorlw	64
  7220  0019F6  D002               	goto	L5
  7221  0019F8                     l4125:
  7222                           
  7223                           ;LED.c: 318: else;LED.c: 319: {;LED.c: 320: LATD = LATD & 0b10111111;
  7224  0019F8  508C               	movf	3980,w,c	;volatile
  7225  0019FA  0BBF               	andlw	191
  7226  0019FC                     L5:
  7227  0019FC  6E8C               	movwf	3980,c	;volatile
  7228                           
  7229                           ;LED.c: 321: };LED.c: 323: if((diode & 0b0000000100) == 0b0000000100)
  7230  0019FE  A406               	btfss	LED_Control@diode,2,c
  7231  001A00  D003               	goto	l4131
  7232                           
  7233                           ;LED.c: 324: {;LED.c: 325: LATB = LATB | ~0b11111110;
  7234  001A02  508A               	movf	3978,w,c	;volatile
  7235  001A04  0901               	iorlw	1
  7236  001A06  D002               	goto	L6
  7237  001A08                     l4131:
  7238                           
  7239                           ;LED.c: 327: else;LED.c: 328: {;LED.c: 329: LATB = LATB & 0b11111110;
  7240  001A08  508A               	movf	3978,w,c	;volatile
  7241  001A0A  0BFE               	andlw	254
  7242  001A0C                     L6:
  7243  001A0C  6E8A               	movwf	3978,c	;volatile
  7244                           
  7245                           ;LED.c: 330: };LED.c: 333: if((diode & 0b0000001000) == 0b0000001000)
  7246  001A0E  A606               	btfss	LED_Control@diode,3,c
  7247  001A10  D003               	goto	l4137
  7248                           
  7249                           ;LED.c: 334: {;LED.c: 335: LATA = LATA | ~0b11111101;
  7250  001A12  5089               	movf	3977,w,c	;volatile
  7251  001A14  0902               	iorlw	2
  7252  001A16  D002               	goto	L7
  7253  001A18                     l4137:
  7254                           
  7255                           ;LED.c: 337: else;LED.c: 338: {;LED.c: 339: LATA = LATA & 0b11111101;
  7256  001A18  5089               	movf	3977,w,c	;volatile
  7257  001A1A  0BFD               	andlw	253
  7258  001A1C                     L7:
  7259  001A1C  6E89               	movwf	3977,c	;volatile
  7260                           
  7261                           ;LED.c: 340: };LED.c: 343: if((diode & 0b0000010000) == 0b0000010000)
  7262  001A1E  A806               	btfss	LED_Control@diode,4,c
  7263  001A20  D003               	goto	l4143
  7264                           
  7265                           ;LED.c: 344: {;LED.c: 345: LATA = LATA | ~0b11110111;
  7266  001A22  5089               	movf	3977,w,c	;volatile
  7267  001A24  0908               	iorlw	8
  7268  001A26  D002               	goto	L8
  7269  001A28                     l4143:
  7270                           
  7271                           ;LED.c: 347: else;LED.c: 348: {;LED.c: 349: LATA = LATA & 0b11110111;
  7272  001A28  5089               	movf	3977,w,c	;volatile
  7273  001A2A  0BF7               	andlw	247
  7274  001A2C                     L8:
  7275  001A2C  6E89               	movwf	3977,c	;volatile
  7276                           
  7277                           ;LED.c: 350: };LED.c: 353: if((diode & 0b0000100000) == 0b0000100000)
  7278  001A2E  AA06               	btfss	LED_Control@diode,5,c
  7279  001A30  D003               	goto	l4149
  7280                           
  7281                           ;LED.c: 354: {;LED.c: 355: LATA = LATA | ~0b11011111;
  7282  001A32  5089               	movf	3977,w,c	;volatile
  7283  001A34  0920               	iorlw	32
  7284  001A36  D002               	goto	L9
  7285  001A38                     l4149:
  7286                           
  7287                           ;LED.c: 357: else;LED.c: 358: {;LED.c: 359: LATA = LATA & 0b11011111;
  7288  001A38  5089               	movf	3977,w,c	;volatile
  7289  001A3A  0BDF               	andlw	223
  7290  001A3C                     L9:
  7291  001A3C  6E89               	movwf	3977,c	;volatile
  7292                           
  7293                           ;LED.c: 360: };LED.c: 362: if((diode & 0b0001000000) == 0b0001000000)
  7294  001A3E  AC06               	btfss	LED_Control@diode,6,c
  7295  001A40  D003               	goto	l4155
  7296                           
  7297                           ;LED.c: 363: {;LED.c: 364: LATE = LATE | ~0b11111101;
  7298  001A42  508D               	movf	3981,w,c	;volatile
  7299  001A44  0902               	iorlw	2
  7300  001A46  D002               	goto	L10
  7301  001A48                     l4155:
  7302                           
  7303                           ;LED.c: 366: else;LED.c: 367: {;LED.c: 368: LATE = LATE & 0b11111101;
  7304  001A48  508D               	movf	3981,w,c	;volatile
  7305  001A4A  0BFD               	andlw	253
  7306  001A4C                     L10:
  7307  001A4C  6E8D               	movwf	3981,c	;volatile
  7308                           
  7309                           ;LED.c: 369: };LED.c: 371: if((diode & 0b0010000000) == 0b0010000000)
  7310  001A4E  AE06               	btfss	LED_Control@diode,7,c
  7311  001A50  D003               	goto	l4161
  7312                           
  7313                           ;LED.c: 372: {;LED.c: 373: LATA = LATA | ~0b01111111;
  7314  001A52  5089               	movf	3977,w,c	;volatile
  7315  001A54  0980               	iorlw	128
  7316  001A56  D002               	goto	L11
  7317  001A58                     l4161:
  7318                           
  7319                           ;LED.c: 375: else;LED.c: 376: {;LED.c: 377: LATA = LATA & 0b01111111;
  7320  001A58  5089               	movf	3977,w,c	;volatile
  7321  001A5A  0B7F               	andlw	127
  7322  001A5C                     L11:
  7323  001A5C  6E89               	movwf	3977,c	;volatile
  7324                           
  7325                           ;LED.c: 378: };LED.c: 381: if((diode & 0b0100000000) == 0b0100000000)
  7326  001A5E  A007               	btfss	LED_Control@diode+1,0,c
  7327  001A60  D003               	goto	l4167
  7328                           
  7329                           ;LED.c: 382: {;LED.c: 383: LATD = LATD | ~0b11111110;
  7330  001A62  508C               	movf	3980,w,c	;volatile
  7331  001A64  0901               	iorlw	1
  7332  001A66  D002               	goto	L12
  7333  001A68                     l4167:
  7334                           
  7335                           ;LED.c: 385: else;LED.c: 386: {;LED.c: 387: LATD = LATD & 0b11111110;
  7336  001A68  508C               	movf	3980,w,c	;volatile
  7337  001A6A  0BFE               	andlw	254
  7338  001A6C                     L12:
  7339  001A6C  6E8C               	movwf	3980,c	;volatile
  7340                           
  7341                           ;LED.c: 388: };LED.c: 390: if((diode & 0b1000000000) == 0b1000000000)
  7342  001A6E  A207               	btfss	LED_Control@diode+1,1,c
  7343  001A70  D003               	goto	l4173
  7344                           
  7345                           ;LED.c: 391: {;LED.c: 392: LATD = LATD | ~0b11111011;
  7346  001A72  508C               	movf	3980,w,c	;volatile
  7347  001A74  0904               	iorlw	4
  7348  001A76  D002               	goto	L13
  7349  001A78                     l4173:
  7350                           
  7351                           ;LED.c: 394: else;LED.c: 395: {;LED.c: 396: LATD = LATD & 0b11111011;
  7352  001A78  508C               	movf	3980,w,c	;volatile
  7353  001A7A  0BFB               	andlw	251
  7354  001A7C                     L13:
  7355  001A7C  6E8C               	movwf	3980,c	;volatile
  7356  001A7E                     l422:
  7357                           
  7358                           ;LED.c: 397: };LED.c: 399: };LED.c: 401: if(color == GREEN)
  7359  001A7E  040A               	decf	LED_Control@color,w,c
  7360  001A80  A4D8               	btfss	status,2,c
  7361  001A82  0012               	return	
  7362                           
  7363                           ;LED.c: 402: {;LED.c: 404: if((diode & 0b0000000001) == 0b0000000001)
  7364  001A84  A006               	btfss	LED_Control@diode,0,c
  7365  001A86  D003               	goto	l4179
  7366                           
  7367                           ;LED.c: 405: {;LED.c: 406: LATD = LATD | ~0b11011111;
  7368  001A88  508C               	movf	3980,w,c	;volatile
  7369  001A8A  0920               	iorlw	32
  7370  001A8C  D002               	goto	L14
  7371  001A8E                     l4179:
  7372                           
  7373                           ;LED.c: 408: else;LED.c: 409: {;LED.c: 410: LATD = LATD & 0b11011111;
  7374  001A8E  508C               	movf	3980,w,c	;volatile
  7375  001A90  0BDF               	andlw	223
  7376  001A92                     L14:
  7377  001A92  6E8C               	movwf	3980,c	;volatile
  7378                           
  7379                           ;LED.c: 411: };LED.c: 414: if((diode & 0b0000000010) == 0b0000000010)
  7380  001A94  A206               	btfss	LED_Control@diode,1,c
  7381  001A96  D003               	goto	l4185
  7382                           
  7383                           ;LED.c: 415: {;LED.c: 416: LATD = LATD | ~0b01111111;
  7384  001A98  508C               	movf	3980,w,c	;volatile
  7385  001A9A  0980               	iorlw	128
  7386  001A9C  D002               	goto	L15
  7387  001A9E                     l4185:
  7388                           
  7389                           ;LED.c: 418: else;LED.c: 419: {;LED.c: 420: LATD = LATD & 0b01111111;
  7390  001A9E  508C               	movf	3980,w,c	;volatile
  7391  001AA0  0B7F               	andlw	127
  7392  001AA2                     L15:
  7393  001AA2  6E8C               	movwf	3980,c	;volatile
  7394                           
  7395                           ;LED.c: 421: };LED.c: 424: if((diode & 0b0000000100) == 0b0000000100)
  7396  001AA4  A406               	btfss	LED_Control@diode,2,c
  7397  001AA6  D003               	goto	l4191
  7398                           
  7399                           ;LED.c: 425: {;LED.c: 426: LATB = LATB | ~0b11111101;
  7400  001AA8  508A               	movf	3978,w,c	;volatile
  7401  001AAA  0902               	iorlw	2
  7402  001AAC  D002               	goto	L16
  7403  001AAE                     l4191:
  7404                           
  7405                           ;LED.c: 428: else;LED.c: 429: {;LED.c: 430: LATB = LATB & 0b11111101;
  7406  001AAE  508A               	movf	3978,w,c	;volatile
  7407  001AB0  0BFD               	andlw	253
  7408  001AB2                     L16:
  7409  001AB2  6E8A               	movwf	3978,c	;volatile
  7410                           
  7411                           ;LED.c: 431: };LED.c: 433: if((diode & 0b0000001000) == 0b0000001000)
  7412  001AB4  A606               	btfss	LED_Control@diode,3,c
  7413  001AB6  D003               	goto	l4197
  7414                           
  7415                           ;LED.c: 434: {;LED.c: 435: LATA = LATA | ~0b11111011;
  7416  001AB8  5089               	movf	3977,w,c	;volatile
  7417  001ABA  0904               	iorlw	4
  7418  001ABC  D002               	goto	L17
  7419  001ABE                     l4197:
  7420                           
  7421                           ;LED.c: 437: else;LED.c: 438: {;LED.c: 439: LATA = LATA & 0b11111011;
  7422  001ABE  5089               	movf	3977,w,c	;volatile
  7423  001AC0  0BFB               	andlw	251
  7424  001AC2                     L17:
  7425  001AC2  6E89               	movwf	3977,c	;volatile
  7426                           
  7427                           ;LED.c: 440: };LED.c: 443: if((diode & 0b0000010000) == 0b0000010000)
  7428  001AC4  A806               	btfss	LED_Control@diode,4,c
  7429  001AC6  D003               	goto	l4203
  7430                           
  7431                           ;LED.c: 444: {;LED.c: 445: LATA = LATA | ~0b11101111;
  7432  001AC8  5089               	movf	3977,w,c	;volatile
  7433  001ACA  0910               	iorlw	16
  7434  001ACC  D002               	goto	L18
  7435  001ACE                     l4203:
  7436                           
  7437                           ;LED.c: 447: else;LED.c: 448: {;LED.c: 449: LATA = LATA & 0b11101111;
  7438  001ACE  5089               	movf	3977,w,c	;volatile
  7439  001AD0  0BEF               	andlw	239
  7440  001AD2                     L18:
  7441  001AD2  6E89               	movwf	3977,c	;volatile
  7442                           
  7443                           ;LED.c: 450: };LED.c: 453: if((diode & 0b0000100000) == 0b0000100000)
  7444  001AD4  AA06               	btfss	LED_Control@diode,5,c
  7445  001AD6  D003               	goto	l4209
  7446                           
  7447                           ;LED.c: 454: {;LED.c: 455: LATE = LATE | ~0b11111110;
  7448  001AD8  508D               	movf	3981,w,c	;volatile
  7449  001ADA  0901               	iorlw	1
  7450  001ADC  D002               	goto	L19
  7451  001ADE                     l4209:
  7452                           
  7453                           ;LED.c: 457: else;LED.c: 458: {;LED.c: 459: LATE = LATE & 0b11111110;
  7454  001ADE  508D               	movf	3981,w,c	;volatile
  7455  001AE0  0BFE               	andlw	254
  7456  001AE2                     L19:
  7457  001AE2  6E8D               	movwf	3981,c	;volatile
  7458                           
  7459                           ;LED.c: 460: };LED.c: 463: if((diode & 0b0001000000) == 0b0001000000)
  7460  001AE4  AC06               	btfss	LED_Control@diode,6,c
  7461  001AE6  D003               	goto	l4215
  7462                           
  7463                           ;LED.c: 464: {;LED.c: 465: LATE = LATE | ~0b11111011;
  7464  001AE8  508D               	movf	3981,w,c	;volatile
  7465  001AEA  0904               	iorlw	4
  7466  001AEC  D002               	goto	L20
  7467  001AEE                     l4215:
  7468                           
  7469                           ;LED.c: 467: else;LED.c: 468: {;LED.c: 469: LATE = LATE & 0b11111011;
  7470  001AEE  508D               	movf	3981,w,c	;volatile
  7471  001AF0  0BFB               	andlw	251
  7472  001AF2                     L20:
  7473  001AF2  6E8D               	movwf	3981,c	;volatile
  7474                           
  7475                           ;LED.c: 470: };LED.c: 472: if((diode & 0b0010000000) == 0b0010000000)
  7476  001AF4  AE06               	btfss	LED_Control@diode,7,c
  7477  001AF6  D003               	goto	l4221
  7478                           
  7479                           ;LED.c: 473: {;LED.c: 474: LATA = LATA | ~0b10111111;
  7480  001AF8  5089               	movf	3977,w,c	;volatile
  7481  001AFA  0940               	iorlw	64
  7482  001AFC  D002               	goto	L21
  7483  001AFE                     l4221:
  7484                           
  7485                           ;LED.c: 476: else;LED.c: 477: {;LED.c: 478: LATA = LATA & 0b10111111;
  7486  001AFE  5089               	movf	3977,w,c	;volatile
  7487  001B00  0BBF               	andlw	191
  7488  001B02                     L21:
  7489  001B02  6E89               	movwf	3977,c	;volatile
  7490                           
  7491                           ;LED.c: 479: };LED.c: 481: if((diode & 0b0100000000) == 0b0100000000)
  7492  001B04  A007               	btfss	LED_Control@diode+1,0,c
  7493  001B06  D003               	goto	l4227
  7494                           
  7495                           ;LED.c: 482: {;LED.c: 483: LATD = LATD | ~0b11111101;
  7496  001B08  508C               	movf	3980,w,c	;volatile
  7497  001B0A  0902               	iorlw	2
  7498  001B0C  D002               	goto	L22
  7499  001B0E                     l4227:
  7500                           
  7501                           ;LED.c: 485: else;LED.c: 486: {;LED.c: 487: LATD = LATD & 0b11111101;
  7502  001B0E  508C               	movf	3980,w,c	;volatile
  7503  001B10  0BFD               	andlw	253
  7504  001B12                     L22:
  7505  001B12  6E8C               	movwf	3980,c	;volatile
  7506                           
  7507                           ;LED.c: 488: };LED.c: 490: if((diode & 0b1000000000) == 0b1000000000)
  7508  001B14  A207               	btfss	LED_Control@diode+1,1,c
  7509  001B16  D004               	goto	l4233
  7510                           
  7511                           ;LED.c: 491: {;LED.c: 492: LATD = LATD | ~0b11110111;
  7512  001B18  508C               	movf	3980,w,c	;volatile
  7513  001B1A  0908               	iorlw	8
  7514  001B1C  6E8C               	movwf	3980,c	;volatile
  7515                           
  7516                           ;LED.c: 493: }
  7517  001B1E  0012               	return	
  7518  001B20                     l4233:
  7519                           
  7520                           ;LED.c: 494: else;LED.c: 495: {;LED.c: 496: LATD = LATD &0b11110111;
  7521  001B20  508C               	movf	3980,w,c	;volatile
  7522  001B22  0BF7               	andlw	247
  7523  001B24  6E8C               	movwf	3980,c	;volatile
  7524  001B26  0012               	return		;funcret
  7525  001B28                     __end_of_LED_Control:
  7526                           	opt callstack 0
  7527                           
  7528 ;; *************** function _INI_GlobalInterrupt *****************
  7529 ;; Defined at:
  7530 ;;		line 78 in file "INI.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;		None
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;		None
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		None
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;Total ram usage:        0 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    3
  7551 ;; This function calls:
  7552 ;;		Nothing
  7553 ;; This function is called by:
  7554 ;;		_INI_All
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text55
  7559  002986                     __ptext55:
  7560                           	opt callstack 0
  7561  002986                     _INI_GlobalInterrupt:
  7562                           	opt callstack 26
  7563                           
  7564                           ;INI.c: 80: INTCONbits.GIEH=1;
  7565                           
  7566                           ;incstack = 0
  7567  002986  8EF2               	bsf	4082,7,c	;volatile
  7568                           
  7569                           ;INI.c: 81: INTCONbits.GIEL=1;
  7570  002988  8CF2               	bsf	4082,6,c	;volatile
  7571                           
  7572                           ;INI.c: 82: RCONbits.IPEN=1;
  7573  00298A  8ED0               	bsf	4048,7,c	;volatile
  7574                           
  7575                           ;INI.c: 83: IPEN =1;
  7576  00298C  8ED0               	bsf	4048,7,c	;volatile
  7577                           
  7578                           ;INI.c: 85: PEIE=1;
  7579  00298E  8CF2               	bsf	4082,6,c	;volatile
  7580                           
  7581                           ;INI.c: 86: TMR1IP = 0;
  7582  002990  909F               	bcf	3999,0,c	;volatile
  7583  002992  0012               	return		;funcret
  7584  002994                     __end_of_INI_GlobalInterrupt:
  7585                           	opt callstack 0
  7586                           
  7587 ;; *************** function _CAN_Setup *****************
  7588 ;; Defined at:
  7589 ;;		line 24 in file "CAN.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;		None
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;Total ram usage:        1 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    5
  7610 ;; This function calls:
  7611 ;;		_CAN_SetupClock
  7612 ;;		_CAN_SetupMask
  7613 ;; This function is called by:
  7614 ;;		_INI_All
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text56
  7619  0023F6                     __ptext56:
  7620                           	opt callstack 0
  7621  0023F6                     _CAN_Setup:
  7622                           	opt callstack 24
  7623                           
  7624                           ;CAN.c: 29: CANCON = 0x80;
  7625                           
  7626                           ;incstack = 0
  7627  0023F6  0E80               	movlw	128
  7628  0023F8  6E6F               	movwf	3951,c	;volatile
  7629  0023FA                     l4749:
  7630  0023FA  506E               	movf	3950,w,c	;volatile
  7631  0023FC  0BE0               	andlw	224
  7632  0023FE  0A80               	xorlw	128
  7633  002400  A4D8               	btfss	status,2,c
  7634  002402  D7FB               	goto	l4749
  7635                           
  7636                           ;CAN.c: 33: };CAN.c: 35: BSEL0 = 0;
  7637  002404  0E00               	movlw	0
  7638  002406  010D               	movlb	13	; () banked
  7639  002408  6FF8               	movwf	248,b	;volatile
  7640                           
  7641                           ;CAN.c: 36: TXB0CON = 0;
  7642  00240A  0E00               	movlw	0
  7643  00240C  010F               	movlb	15	; () banked
  7644  00240E  6F40               	movwf	64,b	;volatile
  7645                           
  7646                           ;CAN.c: 37: RXB0CON = 0;
  7647  002410  0E00               	movlw	0
  7648  002412  6E60               	movwf	3936,c	;volatile
  7649                           
  7650                           ;CAN.c: 38: RXB1CON = 0;
  7651  002414  0E00               	movlw	0
  7652  002416  6F50               	movwf	80,b	;volatile
  7653                           
  7654                           ;CAN.c: 39: B0CON = 0;
  7655  002418  0E00               	movlw	0
  7656  00241A  010E               	movlb	14	; () banked
  7657  00241C  6F20               	movwf	32,b	;volatile
  7658                           
  7659                           ;CAN.c: 40: B1CON = 0;
  7660  00241E  0E00               	movlw	0
  7661  002420  6F30               	movwf	48,b	;volatile
  7662                           
  7663                           ;CAN.c: 41: PIE3 = 0;
  7664  002422  0E00               	movlw	0
  7665  002424  6EA3               	movwf	4003,c	;volatile
  7666                           
  7667                           ; BSR set to: 14
  7668                           ;CAN.c: 42: IPR3 = 0xFF;
  7669  002426  68A5               	setf	4005,c	;volatile
  7670                           
  7671                           ;CAN.c: 43: PIR3 = 0x00;
  7672  002428  0E00               	movlw	0
  7673  00242A  6EA4               	movwf	4004,c	;volatile
  7674                           
  7675                           ;CAN.c: 44: BIE0 = 0;
  7676  00242C  0E00               	movlw	0
  7677  00242E  010D               	movlb	13	; () banked
  7678  002430  6FFA               	movwf	250,b	;volatile
  7679                           
  7680                           ;CAN.c: 48: ECANCON = 0x90;
  7681  002432  0E90               	movlw	144
  7682  002434  6E77               	movwf	3959,c	;volatile
  7683                           
  7684                           ; BSR set to: 13
  7685                           ;CAN.c: 51: CAN_SetupClock();
  7686  002436  EC45  F014         	call	_CAN_SetupClock	;wreg free
  7687                           
  7688                           ;CAN.c: 54: CAN_SetupMask();
  7689  00243A  EC55  F011         	call	_CAN_SetupMask	;wreg free
  7690                           
  7691                           ;CAN.c: 56: CIOCON = 0xff;
  7692  00243E  6873               	setf	3955,c	;volatile
  7693                           
  7694                           ;CAN.c: 62: CANCON = 0x00;
  7695  002440  0E00               	movlw	0
  7696  002442  6E6F               	movwf	3951,c	;volatile
  7697  002444                     l4761:
  7698  002444  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  7699  002448  0EE0               	movlw	224
  7700  00244A  1606               	andwf	??_CAN_Setup,f,c
  7701  00244C  B4D8               	btfsc	status,2,c
  7702  00244E  0012               	return	
  7703  002450  D7F9               	goto	l4761
  7704  002452                     __end_of_CAN_Setup:
  7705                           	opt callstack 0
  7706                           
  7707 ;; *************** function _CAN_SetupMask *****************
  7708 ;; Defined at:
  7709 ;;		line 84 in file "CAN.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;		None
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;Total ram usage:        0 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    4
  7730 ;; This function calls:
  7731 ;;		_CAN_SetupFilter_Ne
  7732 ;; This function is called by:
  7733 ;;		_CAN_Setup
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text57
  7738  0022AA                     __ptext57:
  7739                           	opt callstack 0
  7740  0022AA                     _CAN_SetupMask:
  7741                           	opt callstack 24
  7742                           
  7743                           ;CAN.c: 86: MSEL0 = 0x50;
  7744                           
  7745                           ;incstack = 0
  7746  0022AA  0E50               	movlw	80
  7747  0022AC  010D               	movlb	13	; () banked
  7748  0022AE  6FF0               	movwf	240,b	;volatile
  7749                           
  7750                           ;CAN.c: 87: MSEL1 = 0x55;
  7751  0022B0  0E55               	movlw	85
  7752  0022B2  6FF1               	movwf	241,b	;volatile
  7753                           
  7754                           ;CAN.c: 88: MSEL2 = 0x55;
  7755  0022B4  0E55               	movlw	85
  7756  0022B6  6FF2               	movwf	242,b	;volatile
  7757                           
  7758                           ;CAN.c: 89: MSEL3 = 0x55;
  7759  0022B8  0E55               	movlw	85
  7760  0022BA  6FF3               	movwf	243,b	;volatile
  7761                           
  7762                           ;CAN.c: 92: RXM0SIDH = 0b00000000;
  7763  0022BC  0E00               	movlw	0
  7764  0022BE  010F               	movlb	15	; () banked
  7765  0022C0  6F18               	movwf	24,b	;volatile
  7766                           
  7767                           ;CAN.c: 93: RXM0SIDL = 0b00001011;
  7768  0022C2  0E0B               	movlw	11
  7769  0022C4  6F19               	movwf	25,b	;volatile
  7770                           
  7771                           ; BSR set to: 15
  7772                           ;CAN.c: 94: RXM0EIDH = 0xFF;
  7773  0022C6  691A               	setf	26,b	;volatile
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;CAN.c: 95: RXM0EIDL = 0xFF;
  7777  0022C8  691B               	setf	27,b	;volatile
  7778                           
  7779                           ; BSR set to: 15
  7780                           ;CAN.c: 98: RXM1SIDH = 0xFF;
  7781  0022CA  691C               	setf	28,b	;volatile
  7782                           
  7783                           ; BSR set to: 15
  7784                           ;CAN.c: 99: RXM1SIDL = 0xFF;
  7785  0022CC  691D               	setf	29,b	;volatile
  7786                           
  7787                           ; BSR set to: 15
  7788                           ;CAN.c: 100: RXM1EIDH = 0xFF;
  7789  0022CE  691E               	setf	30,b	;volatile
  7790                           
  7791                           ; BSR set to: 15
  7792                           ;CAN.c: 101: RXM1EIDL = 0xFF;
  7793  0022D0  691F               	setf	31,b	;volatile
  7794                           
  7795                           ;CAN.c: 104: RXM0SIDH = 0x00;
  7796  0022D2  0E00               	movlw	0
  7797  0022D4  6F18               	movwf	24,b	;volatile
  7798                           
  7799                           ;CAN.c: 105: RXM0SIDL = 0x00;
  7800  0022D6  0E00               	movlw	0
  7801  0022D8  6F19               	movwf	25,b	;volatile
  7802                           
  7803                           ;CAN.c: 110: RXF0SIDH = 0x00;
  7804  0022DA  0E00               	movlw	0
  7805  0022DC  6F00               	movwf	0,b	;volatile
  7806                           
  7807                           ;CAN.c: 111: RXF0SIDL = 0x01;
  7808  0022DE  0E01               	movlw	1
  7809  0022E0  6F01               	movwf	1,b	;volatile
  7810                           
  7811                           ; BSR set to: 15
  7812                           ;CAN.c: 112: RXF0SIDLbits.EXIDEN = 1;
  7813  0022E2  8701               	bsf	1,3,b	;volatile
  7814                           
  7815                           ;CAN.c: 113: RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7816  0022E4  5030               	movf	_DaneCan+3,w,c
  7817  0022E6  6F02               	movwf	2,b	;volatile
  7818                           
  7819                           ; BSR set to: 15
  7820                           ;CAN.c: 115: RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7821  0022E8  C02F  FF03         	movff	_DaneCan+2,3843	;volatile
  7822                           
  7823                           ;CAN.c: 117: RXF1SIDH = 0x00;
  7824  0022EC  0E00               	movlw	0
  7825  0022EE  6F04               	movwf	4,b	;volatile
  7826                           
  7827                           ;CAN.c: 118: RXF1SIDL = 0x01;
  7828  0022F0  0E01               	movlw	1
  7829  0022F2  6F05               	movwf	5,b	;volatile
  7830                           
  7831                           ; BSR set to: 15
  7832                           ;CAN.c: 119: RXF1SIDLbits.EXIDEN = 1;
  7833  0022F4  8705               	bsf	5,3,b	;volatile
  7834                           
  7835                           ;CAN.c: 120: RXF1EIDH = 0x7F;
  7836  0022F6  0E7F               	movlw	127
  7837  0022F8  6F06               	movwf	6,b	;volatile
  7838                           
  7839                           ; BSR set to: 15
  7840                           ;CAN.c: 121: RXF1EIDL = 0xFF;
  7841  0022FA  6907               	setf	7,b	;volatile
  7842                           
  7843                           ; BSR set to: 15
  7844                           ;CAN.c: 123: CAN_SetupFilter_Ne();
  7845  0022FC  ECD6  F00F         	call	_CAN_SetupFilter_Ne	;wreg free
  7846                           
  7847                           ;CAN.c: 126: RXFBCON0 = 0b00000000;
  7848  002300  0E00               	movlw	0
  7849  002302  010D               	movlb	13	; () banked
  7850  002304  6FE0               	movwf	224,b	;volatile
  7851                           
  7852                           ; BSR set to: 13
  7853                           ;CAN.c: 128: RXFBCON1 = 0b00010001;
  7854  002306  0E11               	movlw	17
  7855  002308  6FE1               	movwf	225,b	;volatile
  7856                           
  7857                           ; BSR set to: 13
  7858                           ;CAN.c: 130: RXFBCON2 = 0b00010001;
  7859  00230A  0E11               	movlw	17
  7860  00230C  6FE2               	movwf	226,b	;volatile
  7861                           
  7862                           ; BSR set to: 13
  7863                           ;CAN.c: 132: RXFBCON3 = 0b00010001;
  7864  00230E  0E11               	movlw	17
  7865  002310  6FE3               	movwf	227,b	;volatile
  7866                           
  7867                           ; BSR set to: 13
  7868                           ;CAN.c: 134: RXFBCON4 = 0b00010001;
  7869  002312  0E11               	movlw	17
  7870  002314  6FE4               	movwf	228,b	;volatile
  7871                           
  7872                           ; BSR set to: 13
  7873                           ;CAN.c: 136: RXFCON0 = 0b11111111;
  7874  002316  69D4               	setf	212,b	;volatile
  7875                           
  7876                           ; BSR set to: 13
  7877                           ;CAN.c: 137: RXFCON1 = 0b00000011;
  7878  002318  0E03               	movlw	3
  7879  00231A  6FD5               	movwf	213,b	;volatile
  7880                           
  7881                           ; BSR set to: 13
  7882  00231C  0012               	return		;funcret
  7883  00231E                     __end_of_CAN_SetupMask:
  7884                           	opt callstack 0
  7885                           
  7886 ;; *************** function _CAN_SetupFilter_Ne *****************
  7887 ;; Defined at:
  7888 ;;		line 141 in file "CAN.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;		None
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;		None
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  1    wreg      void 
  7895 ;; Registers used:
  7896 ;;		wreg, status,2
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;Total ram usage:        0 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; Hardware stack levels required when called:    3
  7909 ;; This function calls:
  7910 ;;		Nothing
  7911 ;; This function is called by:
  7912 ;;		_CAN_SetupMask
  7913 ;;		_FRAME_AdressOfNeighbors
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text58
  7918  001FAC                     __ptext58:
  7919                           	opt callstack 0
  7920  001FAC                     _CAN_SetupFilter_Ne:
  7921                           	opt callstack 24
  7922                           
  7923                           ;CAN.c: 145: RXF2SIDH = 0;
  7924                           
  7925                           ; BSR set to: 13
  7926                           ;incstack = 0
  7927  001FAC  0E00               	movlw	0
  7928  001FAE  010F               	movlb	15	; () banked
  7929  001FB0  6F08               	movwf	8,b	;volatile
  7930                           
  7931                           ;CAN.c: 146: RXF2SIDL = 0x20;
  7932  001FB2  0E20               	movlw	32
  7933  001FB4  6F09               	movwf	9,b	;volatile
  7934                           
  7935                           ; BSR set to: 15
  7936                           ;CAN.c: 147: RXF2SIDLbits.EXIDEN = 1;
  7937  001FB6  8709               	bsf	9,3,b	;volatile
  7938                           
  7939                           ;CAN.c: 148: RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7940  001FB8  504C               	movf	_NeightAdress1+1,w,c	;volatile
  7941  001FBA  6F0A               	movwf	10,b	;volatile
  7942                           
  7943                           ; BSR set to: 15
  7944                           ;CAN.c: 149: RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7945  001FBC  C04B  FF0B         	movff	_NeightAdress1,3851	;volatile
  7946                           
  7947                           ;CAN.c: 152: RXF3SIDH = 0;
  7948  001FC0  0E00               	movlw	0
  7949  001FC2  6F0C               	movwf	12,b	;volatile
  7950                           
  7951                           ;CAN.c: 153: RXF3SIDL = 0x20;
  7952  001FC4  0E20               	movlw	32
  7953  001FC6  6F0D               	movwf	13,b	;volatile
  7954                           
  7955                           ; BSR set to: 15
  7956                           ;CAN.c: 154: RXF3SIDLbits.EXIDEN = 1;
  7957  001FC8  870D               	bsf	13,3,b	;volatile
  7958                           
  7959                           ;CAN.c: 155: RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7960  001FCA  5059               	movf	_NeightAdress2+1,w,c	;volatile
  7961  001FCC  6F0E               	movwf	14,b	;volatile
  7962                           
  7963                           ; BSR set to: 15
  7964                           ;CAN.c: 156: RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7965  001FCE  C058  FF0F         	movff	_NeightAdress2,3855	;volatile
  7966                           
  7967                           ;CAN.c: 158: RXF4SIDH = 0;
  7968  001FD2  0E00               	movlw	0
  7969  001FD4  6F10               	movwf	16,b	;volatile
  7970                           
  7971                           ;CAN.c: 159: RXF4SIDL = 0x20;
  7972  001FD6  0E20               	movlw	32
  7973  001FD8  6F11               	movwf	17,b	;volatile
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;CAN.c: 160: RXF4SIDLbits.EXIDEN = 1;
  7977  001FDA  8711               	bsf	17,3,b	;volatile
  7978                           
  7979                           ;CAN.c: 161: RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7980  001FDC  504A               	movf	_NeightAdress3+1,w,c	;volatile
  7981  001FDE  6F12               	movwf	18,b	;volatile
  7982                           
  7983                           ; BSR set to: 15
  7984                           ;CAN.c: 162: RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7985  001FE0  C049  FF13         	movff	_NeightAdress3,3859	;volatile
  7986                           
  7987                           ;CAN.c: 164: RXF5SIDH = 0;
  7988  001FE4  0E00               	movlw	0
  7989  001FE6  6F14               	movwf	20,b	;volatile
  7990                           
  7991                           ;CAN.c: 165: RXF5SIDL = 0x20;
  7992  001FE8  0E20               	movlw	32
  7993  001FEA  6F15               	movwf	21,b	;volatile
  7994                           
  7995                           ; BSR set to: 15
  7996                           ;CAN.c: 166: RXF5SIDLbits.EXIDEN = 1;
  7997  001FEC  8715               	bsf	21,3,b	;volatile
  7998                           
  7999                           ;CAN.c: 167: RXF5EIDH = (BYTE)(NeightAdress4>>8);
  8000  001FEE  5048               	movf	_NeightAdress4+1,w,c	;volatile
  8001  001FF0  6F16               	movwf	22,b	;volatile
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;CAN.c: 168: RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  8005  001FF2  C047  FF17         	movff	_NeightAdress4,3863	;volatile
  8006                           
  8007                           ;CAN.c: 170: RXF6SIDH = 0;
  8008  001FF6  0E00               	movlw	0
  8009  001FF8  010D               	movlb	13	; () banked
  8010  001FFA  6F60               	movwf	96,b	;volatile
  8011                           
  8012                           ;CAN.c: 171: RXF6SIDL = 0x20;
  8013  001FFC  0E20               	movlw	32
  8014  001FFE  6F61               	movwf	97,b	;volatile
  8015                           
  8016                           ; BSR set to: 13
  8017                           ;CAN.c: 172: RXF6SIDLbits.EXIDEN = 1;
  8018  002000  8761               	bsf	97,3,b	;volatile
  8019                           
  8020                           ;CAN.c: 173: RXF6EIDH = (BYTE)(NeightAdress5>>8);
  8021  002002  5046               	movf	_NeightAdress5+1,w,c	;volatile
  8022  002004  6F62               	movwf	98,b	;volatile
  8023                           
  8024                           ; BSR set to: 13
  8025                           ;CAN.c: 174: RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  8026  002006  C045  FD63         	movff	_NeightAdress5,3427	;volatile
  8027                           
  8028                           ;CAN.c: 176: RXF7SIDH = 0;
  8029  00200A  0E00               	movlw	0
  8030  00200C  6F64               	movwf	100,b	;volatile
  8031                           
  8032                           ;CAN.c: 177: RXF7SIDL = 0x20;
  8033  00200E  0E20               	movlw	32
  8034  002010  6F65               	movwf	101,b	;volatile
  8035                           
  8036                           ; BSR set to: 13
  8037                           ;CAN.c: 178: RXF7SIDLbits.EXIDEN = 1;
  8038  002012  8765               	bsf	101,3,b	;volatile
  8039                           
  8040                           ;CAN.c: 179: RXF7EIDH = (BYTE)(NeightAdress6>>8);
  8041  002014  5044               	movf	_NeightAdress6+1,w,c	;volatile
  8042  002016  6F66               	movwf	102,b	;volatile
  8043                           
  8044                           ; BSR set to: 13
  8045                           ;CAN.c: 180: RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  8046  002018  C043  FD67         	movff	_NeightAdress6,3431	;volatile
  8047                           
  8048                           ;CAN.c: 182: RXF8SIDH = 0;
  8049  00201C  0E00               	movlw	0
  8050  00201E  6F68               	movwf	104,b	;volatile
  8051                           
  8052                           ;CAN.c: 183: RXF8SIDL = 0x20;
  8053  002020  0E20               	movlw	32
  8054  002022  6F69               	movwf	105,b	;volatile
  8055                           
  8056                           ; BSR set to: 13
  8057                           ;CAN.c: 184: RXF8SIDLbits.EXIDEN = 1;
  8058  002024  8769               	bsf	105,3,b	;volatile
  8059                           
  8060                           ;CAN.c: 185: RXF8EIDH = (BYTE)(NeightAdress7>>8);
  8061  002026  5042               	movf	_NeightAdress7+1,w,c	;volatile
  8062  002028  6F6A               	movwf	106,b	;volatile
  8063                           
  8064                           ; BSR set to: 13
  8065                           ;CAN.c: 186: RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  8066  00202A  C041  FD6B         	movff	_NeightAdress7,3435	;volatile
  8067                           
  8068                           ;CAN.c: 188: RXF9SIDH = 0;
  8069  00202E  0E00               	movlw	0
  8070  002030  6F70               	movwf	112,b	;volatile
  8071                           
  8072                           ;CAN.c: 189: RXF9SIDL = 0x20;
  8073  002032  0E20               	movlw	32
  8074  002034  6F71               	movwf	113,b	;volatile
  8075                           
  8076                           ; BSR set to: 13
  8077                           ;CAN.c: 190: RXF9SIDLbits.EXIDEN = 1;
  8078  002036  8771               	bsf	113,3,b	;volatile
  8079                           
  8080                           ;CAN.c: 191: RXF9EIDH = (BYTE)(NeightAdress8>>8);
  8081  002038  5040               	movf	_NeightAdress8+1,w,c	;volatile
  8082  00203A  6F72               	movwf	114,b	;volatile
  8083                           
  8084                           ; BSR set to: 13
  8085                           ;CAN.c: 192: RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  8086  00203C  C03F  FD73         	movff	_NeightAdress8,3443	;volatile
  8087                           
  8088                           ; BSR set to: 13
  8089  002040  0012               	return		;funcret
  8090  002042                     __end_of_CAN_SetupFilter_Ne:
  8091                           	opt callstack 0
  8092                           
  8093 ;; *************** function _CAN_SetupClock *****************
  8094 ;; Defined at:
  8095 ;;		line 200 in file "CAN.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      void 
  8102 ;; Registers used:
  8103 ;;		None
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8113 ;;Total ram usage:        0 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    3
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		_CAN_Setup
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text59
  8124  00288A                     __ptext59:
  8125                           	opt callstack 0
  8126  00288A                     _CAN_SetupClock:
  8127                           	opt callstack 25
  8128                           
  8129                           ;CAN.c: 202: BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  8130                           
  8131                           ; BSR set to: 13
  8132                           ;incstack = 0
  8133  00288A  8070               	bsf	3952,0,c	;volatile
  8134                           
  8135                           ;CAN.c: 203: BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  8136  00288C  8270               	bsf	3952,1,c	;volatile
  8137                           
  8138                           ;CAN.c: 204: BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  8139  00288E  9470               	bcf	3952,2,c	;volatile
  8140                           
  8141                           ;CAN.c: 205: BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  8142  002890  9670               	bcf	3952,3,c	;volatile
  8143                           
  8144                           ;CAN.c: 206: BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  8145  002892  9870               	bcf	3952,4,c	;volatile
  8146                           
  8147                           ;CAN.c: 207: BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  8148  002894  9A70               	bcf	3952,5,c	;volatile
  8149                           
  8150                           ;CAN.c: 209: BRGCON1bits.SJW0 = 1;
  8151  002896  8C70               	bsf	3952,6,c	;volatile
  8152                           
  8153                           ;CAN.c: 210: BRGCON1bits.SJW1 = 1;
  8154  002898  8E70               	bsf	3952,7,c	;volatile
  8155                           
  8156                           ;CAN.c: 212: BRGCON2bits.SEG1PH0 = 1;
  8157  00289A  8671               	bsf	3953,3,c	;volatile
  8158                           
  8159                           ;CAN.c: 213: BRGCON2bits.SEG1PH1 = 1;
  8160  00289C  8871               	bsf	3953,4,c	;volatile
  8161                           
  8162                           ;CAN.c: 214: BRGCON2bits.SEG1PH2 = 1;
  8163  00289E  8A71               	bsf	3953,5,c	;volatile
  8164                           
  8165                           ;CAN.c: 216: BRGCON2bits.PRSEG2 = 1;
  8166  0028A0  8471               	bsf	3953,2,c	;volatile
  8167                           
  8168                           ;CAN.c: 217: BRGCON2bits.PRSEG1 = 0;
  8169  0028A2  9271               	bcf	3953,1,c	;volatile
  8170                           
  8171                           ;CAN.c: 218: BRGCON2bits.PRSEG0 = 0;
  8172  0028A4  9071               	bcf	3953,0,c	;volatile
  8173                           
  8174                           ;CAN.c: 220: BRGCON3bits.SEG2PH0 = 1;
  8175  0028A6  8072               	bsf	3954,0,c	;volatile
  8176                           
  8177                           ;CAN.c: 221: BRGCON3bits.SEG2PH1 = 0;
  8178  0028A8  9272               	bcf	3954,1,c	;volatile
  8179                           
  8180                           ;CAN.c: 222: BRGCON3bits.SEG2PH2 = 1;
  8181  0028AA  8472               	bsf	3954,2,c	;volatile
  8182                           
  8183                           ;CAN.c: 224: BRGCON2bits.SAM = 1;
  8184  0028AC  8C71               	bsf	3953,6,c	;volatile
  8185                           
  8186                           ;CAN.c: 225: BRGCON2bits.SEG2PHTS = 1;
  8187  0028AE  8E71               	bsf	3953,7,c	;volatile
  8188  0028B0  0012               	return		;funcret
  8189  0028B2                     __end_of_CAN_SetupClock:
  8190                           	opt callstack 0
  8191                           
  8192 ;; *************** function _FLASH_Read *****************
  8193 ;; Defined at:
  8194 ;;		line 28 in file "FLASH.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;  addr            4    5[COMRAM] long 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  2    5[COMRAM] unsigned int 
  8201 ;; Registers used:
  8202 ;;		None
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;Total ram usage:        4 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; Hardware stack levels required when called:    3
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_main
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text60
  8223  00294E                     __ptext60:
  8224                           	opt callstack 0
  8225  00294E                     _FLASH_Read:
  8226                           	opt callstack 27
  8227                           
  8228                           ;FLASH.c: 30: TBLPTR = addr;
  8229                           
  8230                           ;incstack = 0
  8231  00294E  C006  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  8232  002952  C007  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  8233  002956  C008  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  8234  00295A  0008               	tblrd		*	; ;# 
  8235                           
  8236                           ;FLASH.c: 32: return TABLAT;
  8237  00295C  CFF5 F006          	movff	tablat,?_FLASH_Read	;volatile
  8238  002960  6A07               	clrf	?_FLASH_Read+1,c
  8239  002962  0012               	return		;funcret
  8240  002964                     __end_of_FLASH_Read:
  8241                           	opt callstack 0
  8242                           
  8243 ;; *************** function _ISR_low *****************
  8244 ;; Defined at:
  8245 ;;		line 16 in file "ISR.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;		None
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;		None
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1    wreg      void 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2, status,0, cstack
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;Total ram usage:        3 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:    2
  8266 ;; This function calls:
  8267 ;;		_TMR1_Timer_reset
  8268 ;;		i1_TMR1_Update_flag_Set
  8269 ;; This function is called by:
  8270 ;;		Interrupt level 1
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	intcodelo
  8275  000C18                     __pintcodelo:
  8276                           	opt callstack 0
  8277  000C18                     _ISR_low:
  8278                           	opt callstack 22
  8279                           
  8280                           ;incstack = 0
  8281  000C18  805A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8282  000C1A  CFD8 F003          	movff	status,??_ISR_low
  8283  000C1E  CFE8 F004          	movff	wreg,??_ISR_low+1
  8284  000C22  CFE0 F005          	movff	bsr,??_ISR_low+2
  8285                           
  8286                           ;ISR.c: 21: if(TMR1IF==1)
  8287  000C26  A09E               	btfss	3998,0,c	;volatile
  8288  000C28  D012               	goto	i1l811
  8289                           
  8290                           ;ISR.c: 22: {;ISR.c: 23: TMR1_Timer_reset();
  8291  000C2A  EC59  F014         	call	_TMR1_Timer_reset	;wreg free
  8292                           
  8293                           ;ISR.c: 26: static BYTE ramkaStanuU8=0;;ISR.c: 29: TMR1_Update_flag_Set(1);
  8294  000C2E  0E00               	movlw	0
  8295  000C30  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  8296  000C32  0E01               	movlw	1
  8297  000C34  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  8298  000C36  ECFF  F014         	call	i1_TMR1_Update_flag_Set	;wreg free
  8299                           
  8300                           ;ISR.c: 31: DetectorLedRadar.Flags.obsluzWeWy = 1;
  8301  000C3A  0100               	movlb	0	; () banked
  8302  000C3C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;ISR.c: 33: if(++ramkaStanuU8 > (2*10))
  8306  000C3E  2A3C               	incf	ISR_low@ramkaStanuU8,f,c
  8307  000C40  0E14               	movlw	20
  8308  000C42  643C               	cpfsgt	ISR_low@ramkaStanuU8,c
  8309  000C44  D003               	goto	i1l4029
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;ISR.c: 34: {;ISR.c: 35: ramkaStanuU8 = 0;
  8313  000C46  0E00               	movlw	0
  8314  000C48  6E3C               	movwf	ISR_low@ramkaStanuU8,c
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;ISR.c: 36: DaneCan.Flags.wyslijRamkeStanu = 1;
  8318  000C4A  802D               	bsf	_DaneCan,0,c
  8319  000C4C                     i1l4029:
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;ISR.c: 37: };ISR.c: 41: TMR1IF=0;
  8323  000C4C  909E               	bcf	3998,0,c	;volatile
  8324  000C4E                     i1l811:
  8325  000C4E  C005  FFE0         	movff	??_ISR_low+2,bsr
  8326  000C52  C004  FFE8         	movff	??_ISR_low+1,wreg
  8327  000C56  C003  FFD8         	movff	??_ISR_low,status
  8328  000C5A  905A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8329  000C5C  0010               	retfie	
  8330  000C5E                     __end_of_ISR_low:
  8331                           	opt callstack 0
  8332                           
  8333 ;; *************** function i1_TMR1_Update_flag_Set *****************
  8334 ;; Defined at:
  8335 ;;		line 32 in file "TMR1.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  a               2    0[COMRAM] unsigned int 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;		None
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		None
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;Total ram usage:        2 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; Hardware stack levels required when called:    1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_ISR_low
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text62
  8364  0029FE                     __ptext62:
  8365                           	opt callstack 0
  8366  0029FE                     i1_TMR1_Update_flag_Set:
  8367                           	opt callstack 22
  8368                           
  8369                           ;TMR1.c: 34: TMR1_Update_flag = a;
  8370                           
  8371                           ;incstack = 0
  8372  0029FE  C001  F037         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  8373  002A02  C002  F038         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  8374  002A06  0012               	return		;funcret
  8375  002A08                     __end_ofi1_TMR1_Update_flag_Set:
  8376                           	opt callstack 0
  8377                           
  8378 ;; *************** function _TMR1_Timer_reset *****************
  8379 ;; Defined at:
  8380 ;;		line 63 in file "TMR1.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;		None
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  8385 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      unsigned char 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2, status,0
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:        2 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    1
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_ISR_low
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text63
  8410  0028B2                     __ptext63:
  8411                           	opt callstack 0
  8412  0028B2                     _TMR1_Timer_reset:
  8413                           	opt callstack 22
  8414                           
  8415                           ;TMR1.c: 69: volatile BYTE t1L = 0, t1H = 0;
  8416                           
  8417                           ;incstack = 0
  8418  0028B2  0E00               	movlw	0
  8419  0028B4  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  8420  0028B6  0E00               	movlw	0
  8421  0028B8  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  8422                           
  8423                           ;TMR1.c: 70: t1L = TMR1L;
  8424  0028BA  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  8425                           
  8426                           ;TMR1.c: 71: t1H = TMR1H;
  8427  0028BE  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  8428                           
  8429                           ;TMR1.c: 72: __nop();
  8430  0028C2  F000               	nop	
  8431                           
  8432                           ;TMR1.c: 73: t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  8433  0028C4  0E9E               	movlw	158
  8434  0028C6  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  8435                           
  8436                           ;TMR1.c: 74: t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  8437  0028C8  0E57               	movlw	87
  8438  0028CA  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  8439                           
  8440                           ;TMR1.c: 75: TMR1H = t1H;
  8441  0028CC  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  8442                           
  8443                           ;TMR1.c: 76: TMR1L = 0x5B;
  8444  0028D0  0E5B               	movlw	91
  8445  0028D2  6ECE               	movwf	4046,c	;volatile
  8446  0028D4  0012               	return		;funcret
  8447  0028D6                     __end_of_TMR1_Timer_reset:
  8448                           	opt callstack 0
  8449                           
  8450 ;; *************** function _ISR_high *****************
  8451 ;; Defined at:
  8452 ;;		line 53 in file "ISR.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		None
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		Interrupt level 2
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	intcode
  8480  000C08                     __pintcode:
  8481                           	opt callstack 0
  8482  000C08                     _ISR_high:
  8483                           	opt callstack 22
  8484                           
  8485                           ;incstack = 0
  8486  000C08  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8487  000C0A  ED0C  F015         	call	int_func,f	;refresh shadow registers
  8488                           
  8489                           	psect	intcode_body
  8490  002A18                     __pintcode_body:
  8491                           	opt callstack 22
  8492  002A18                     int_func:
  8493                           	opt callstack 22
  8494  002A18  0006               	pop		; remove dummy address from shadow register refresh
  8495  002A1A  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8496  002A1C  0011               	retfie		f
  8497  002A1E                     __end_of_ISR_high:
  8498                           	opt callstack 0
  8499  0000                     
  8500                           	psect	rparam
  8501  0000                     
  8502                           	psect	temp
  8503  00005A                     btemp:
  8504                           	opt callstack 0
  8505  00005A                     	ds	1
  8506  0000                     int$flags	set	btemp
  8507  0000                     wtemp8	set	btemp+1
  8508  0000                     ttemp5	set	btemp+1
  8509  0000                     ttemp6	set	btemp+4
  8510  0000                     ttemp7	set	btemp+8
  8511                           tosu	equ	0xFFF
  8512                           tosh	equ	0xFFE
  8513                           tosl	equ	0xFFD
  8514                           stkptr	equ	0xFFC
  8515                           pclatu	equ	0xFFB
  8516                           pclath	equ	0xFFA
  8517                           pcl	equ	0xFF9
  8518                           tblptru	equ	0xFF8
  8519                           tblptrh	equ	0xFF7
  8520                           tblptrl	equ	0xFF6
  8521                           tablat	equ	0xFF5
  8522                           prodh	equ	0xFF4
  8523                           prodl	equ	0xFF3
  8524                           indf0	equ	0xFEF
  8525                           postinc0	equ	0xFEE
  8526                           postdec0	equ	0xFED
  8527                           preinc0	equ	0xFEC
  8528                           plusw0	equ	0xFEB
  8529                           fsr0h	equ	0xFEA
  8530                           fsr0l	equ	0xFE9
  8531                           wreg	equ	0xFE8
  8532                           indf1	equ	0xFE7
  8533                           postinc1	equ	0xFE6
  8534                           postdec1	equ	0xFE5
  8535                           preinc1	equ	0xFE4
  8536                           plusw1	equ	0xFE3
  8537                           fsr1h	equ	0xFE2
  8538                           fsr1l	equ	0xFE1
  8539                           bsr	equ	0xFE0
  8540                           indf2	equ	0xFDF
  8541                           postinc2	equ	0xFDE
  8542                           postdec2	equ	0xFDD
  8543                           preinc2	equ	0xFDC
  8544                           plusw2	equ	0xFDB
  8545                           fsr2h	equ	0xFDA
  8546                           fsr2l	equ	0xFD9
  8547                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         694
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      89
    BANK0           160      2     122
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(BANK0[2]), ustawieniaKarty(BANK0[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _FRAME_DeviceReset->_WriteDataToEEPROM
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_All->_ReadDataToEEPROM
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   32150
                                              0 BANK0      2     2      0
                         _FLASH_Read
                            _INI_All
                         _LED_Update
                          _RADAR_Use
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18698
                                             27 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 8     6      2   15647
                                             19 COMRAM     8     6      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4535
                                             16 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    2     2      0    3646
                                             14 COMRAM     2     2      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3646
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     234
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RADAR_Use                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    7072
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4382
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     467
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     467
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    5840
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     2     2      0    3496
                                             13 COMRAM     2     2      0
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    3496
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     181
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     588
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     569
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     269
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _RADAR_Use
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      7A       5       76.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      59       1       94.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      20        0.0%
DATA                 0      0     2F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Aug 05 14:31:56 2019

               __end_of_FRAME_DeviceReset 1C70                     ?_FRAME_AveragingTimes 0006  
                            ___awdiv@sign 000B                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0006  
                       _FRAME_MapPosition 2A24                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 000C                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 0008                        __size_of_CAN_GenID 0078  
                                     l300 123C                                       l301 11E0  
                                     l302 11E6                                       l303 11EC  
                                     l304 11F2                                       l305 11F8  
                                     l306 11FE                                       l307 1204  
                                     l422 1A7E                                       l290 1880  
                                     l291 187E                               ?_LED_Update 0001  
                                     l394 2192                                       l299 11DA  
                                     l724 185E                                       l725 1856  
                                     l956 27FA                                       l948 27F2  
                                     l965 26EE                              __CFG_CPB$OFF 000000  
                      ??_FRAME_AxisStatus 0008                              __CFG_CPD$OFF 000000  
                      ?_FRAME_MapPosition 0006                        __size_of_CAN_Setup 005C  
                            ?_LED_Control 0006                                       wreg 000FE8  
                   __end_of_CAN_TakeFrame 141E                               ?_INI_OUTPUT 0001  
                  __size_of_INI_LED_Start 0034                             NVMInit@result 000E  
                ??_MOCK_Klikniecie_Spadek 0008                     __end_of_CAN_SendFrame 19D6  
                            __CFG_LVP$OFF 000000                           _neighborsAdress 00D2  
               TRM_DataTransmition@weWyU8 003B              __size_of_INI_GlobalInterrupt 000E  
                     ??_FRAME_MapPosition 0008                              __CFG_WDT$OFF 000000  
                                    l1473 254C                                      l4105 2864  
                                    l4203 1ACE                                      l4131 1A08  
                         __end_of_INI_All 28F8                                      l4221 1AFE  
                                    l4125 19F8                                      l4301 1E3C  
                                    l4215 1AEE                                      l4143 1A28  
                                    l4119 19E8                                      l4063 2718  
                                    l4233 1B20                                      l4209 1ADE  
                                    l4161 1A58                                      l4137 1A18  
                                    l4227 1B0E                                      l4155 1A48  
                                    l5043 216E                                      l4307 1E54  
                                    l4173 1A78                                      l4149 1A38  
                                    l4341 14AA                                      l4191 1AAE  
                                    l4167 1A68                                      l4335 1464  
                                    l4271 1DC4                                      l4185 1A9E  
                                    l4513 25D8                                      l4409 2542  
                                    l4353 1536                                      l4265 1DAC  
                                    l4179 1A8E                                      l4371 1608  
                                    l4347 14F0                                      l4283 1DF4  
                                    l5059 261A                                      l5083 2114  
                                    l4197 1ABE                                      l4365 15C2  
                                    l4277 1DDC                                      l5093 2136  
                                    l4711 2056                                      l4359 157C  
                                    l4295 1E24                                      l4551 1D12  
                                    l4529 2668                                      l4801 134A  
                                    l4377 164E                                      l4633 1C4C  
                                    l4289 1E0C                                      l4723 207C  
                                    l4811 13AC                                      l4803 137C  
                                    l4619 1BEA                                      l4397 251A  
                                    l4725 2084                                      l4717 2066  
                                    l4821 13D0                                      l4813 13B2  
                                    l4493 19CE                                      l4637 1C5E  
                                    l4629 1C2A                                      l4565 1D80  
                                    l4557 1D58                                      l4399 2522  
                                    l4743 20BC                                      l4735 20A4  
                                    l4823 13D8                                      l4815 13B8  
                                    l4831 141A                                      l4807 1380  
                                    l4655 24E6                                      l4761 2444  
                                    l4649 2822                                      l4921 108A  
                                    l4913 103A                                      l4905 0FEA  
                                    l4825 13E0                                      l4817 13C0  
                                    l4809 139A                                      l4489 191A  
                                    l4665 1F64                                      l4851 1E94  
                                    l4739 20AE                                      l4819 13C8  
                                    l4683 0E66                                      l4749 23FA  
                                    l4829 13E8                                      l4685 0E6C  
                                    l4677 0D1C                                      l4597 2582  
                                    _BIE0 000DFA                                      l4695 27A8  
                                    l4791 132A                                      l4783 130E  
                                    l4767 120A                                      l4679 0D9E  
                                    l4945 117A                                      l4937 112A  
                                    l4929 10DA                                      l4857 1EC0  
                                    l4865 1EF6                                      l4793 1332  
                                    l4785 1314                                      l4961 16AE  
                                    l4859 1ECA                                      l4795 133A  
                                    l4787 131A                                      l4971 16F4  
                                    l4963 16BC                                      l4797 1342  
                                    l4789 1322                                      l4981 1746  
                                    l4973 1702                                      l4965 16CA  
                                    l4983 1754                                      l4975 1710  
                                    l4967 16D8                                      l4991 17DC  
                                    l4959 16A0                                      l4897 0F9A  
                                    l4985 176A                                      l4977 171E  
                                    l4969 16E6                                      l4979 172C  
                                    l4989 1780                         _MOC_Frame_Counter 2976  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u3155 27EE  
                                    u4300 0F92                                      u3156 27F0  
                                    u3500 144A                                      u4310 0FC0  
                                    u4150 2088                                      u3510 144C  
                                    u4215 12A6                                      _IPR3 000FA5  
                                    u4400 1070                                      u4320 0FD0  
                                    u3600 151E                                      _IPEN 007E87  
                                    _PIE3 000FA3                                      u4410 1072  
                                    u4330 0FD2                                      u3530 1490  
                                    u4500 1122                                      u4420 1082  
                                    u4340 0FE2                                      u4260 1EFE  
                                    u3620 1562                                      u3540 1492  
                                    u4510 1150                                      u4430 10B0  
                                    u4350 1010                                      u4270 0F70  
                                    u3710 1634                                      u3630 1564  
                                    u4520 1160                                      u4440 10C0  
                                    u4360 1020                                      u4280 0F80  
                                    u3720 1636                                      u3560 14D6  
                                    u4530 1162                                      u4450 10C2  
                                    u4370 1022                                      u4290 0F82  
                                    u3650 15A8                                      u3570 14D8  
                                    _PEIE 007F96                                      u4540 1172  
                                    u4460 10D2                                      u4380 1032  
                                    u3660 15AA                                      _LOCK 003E  
                                    u4550 11A0                                      u4470 1100  
                                    u4390 1060                                      u3750 2526  
                                    u3590 151C                                      u3815 18F0  
                                    u4560 11B0                                      u4480 1110  
                                    u3680 15EE                                      u4570 11B2  
                                    u4490 1112                                      u3690 15F0  
                                    u3930 2592                                      u4580 11C2  
                                    u3970 1B78                                      _PIR3 000FA4  
                                    u3980 1B90                                      u3976 1B7A  
                                    u3986 1B92                                      _RCON 000FD0  
             ??_FRAME_AccelerometerStatus 000A                                      _Dane 00D0  
                         __end_of_ISR_low 0C5E                          LED_Control@diode 0006  
                    FRAME_AnalogValue@set 0008                        ?_MOC_Frame_Counter 0006  
                                    _main 20C6                          LED_Control@color 000A  
                         __end_of_NVMInit 26B6                           __end_of_NVMRead 282C  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 005A                            _CAN_SetupClock 288A  
                                    prodh 000FF4                                      prodl 000FF3  
                   __end_of_CAN_SetupMask 231E             __size_of_TMR1_Update_flag_Get 000A  
                                    start 0C5E             __size_of_TMR1_Update_flag_Set 000A  
                      __size_of_RADAR_Use 000C                        __size_of_LED_Error 001E  
                           __CFG_IESO$OFF 000000                        __size_of_LED_Right 004C  
           __size_of_FRAME_HandleCanFrame 01F8                             _LED_Light_Pos 1E5E  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                     ??_MOC_Frame_Counter 0008                ??_MOC_Aktualna_Temperatura 0008  
       FRAME_HandleCanFrame@identyfikator 001B                       __size_of_FLASH_Read 0016  
                      __size_of_INI_Timer 0018                 __end_of_FRAME_MapPosition 2A26  
                           _NeightAdress1 004B                             _NeightAdress2 0058  
                           _NeightAdress3 0049                             _NeightAdress4 0047  
                           _NeightAdress5 0045                             _NeightAdress6 0043  
                           _NeightAdress7 0041                             _NeightAdress8 003F  
                        __end_of_LED_Left 267C             __size_of_MOCK_PrzyspieszenieX 000A  
           __size_of_MOCK_PrzyspieszenieY 000A             __size_of_MOCK_PrzyspieszenieZ 000A  
                   ReadfromEEPROM@Address 0006                                     _B0CON 000E20  
                                   _B1CON 000E30                                     _B2CON 000E40  
                                   _B3CON 000E50                                     _B4CON 000E60  
                                   _B5CON 000E70                          __end_of_LOCK_Get 2A22  
                                   ?_main 0001                          __end_of_LOCK_Set 2A18  
                         __end_of___awdiv 20C6                                     _EEADR 000FA9  
                                   _BSEL0 000DF8                           ___awdiv@divisor 0008  
                                   _T1CON 000FCD                                     _IRCF0 007E9C  
                                   _IRCF1 007E9D         FRAME_ExcitationMultiplier@message 0006  
                                   _IRCF2 007E9E                           __end_of___lwdiv 2556  
                                   i1l811 0C4E                       __size_of_FRAME_Plot 0058  
                         ___awdiv@counter 000A                                     _MSEL0 000DF0  
                                   _MSEL1 000DF1                                     _MSEL2 000DF2  
                                   _MSEL3 000DF3                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_PWRT$OFF 000000                                     _Flagi 00C6  
                  ?_CAN_MoveBuffIntoFrame 0006                             __CFG_WRT0$OFF 000000  
              __size_of_FRAME_AnalogValue 0002                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_ISR_high 2A1E  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                 __end_of_MOC_Frame_Counter 2986  
                          __CFG_EBTRB$OFF 000000                   i1TMR1_Update_flag_Set@a 0001  
                            ?_MOC_NOTWORK 0006                 __size_of_ReadDataToEEPROM 029E  
                        __end_of_NVMWrite 2722                          __end_of_NVMalloc 27C4  
                                   tablat 000FF5                    __end_of_CAN_SetupClock 28B2  
                                   ttemp5 005B                                     ttemp6 005E  
                                   ttemp7 0062                                     status 000FD8  
                                   wtemp8 005B                         __end_of_CAN_GenID 2234  
                          __CFG_PBADEN$ON 000000                       __size_of_LED_Update 007A  
                          ?_LED_Light_Pos 000D                          _TMR1_Timer_reset 28B2  
                       __end_of_CAN_Setup 2452                             _INI_LED_Start 282C  
                   _FRAME_ExcitationValue 26B6          FRAME_AccelerometerStatus@message 0008  
                         __initialization 231E                       __size_of_INI_OUTPUT 0020  
                        CAN_GenID@frameID 0008                              __end_of_main 2142  
                  ??_FRAME_AveragingTimes 0008                __size_of_FRAME_DeviceReset 0148  
                ?_FRAME_AdressOfNeighbors 0006                    __size_of_WritetoEEPROM 0034  
                        CAN_GenID@message 0006                 _FRAME_AccelerometerStatus 2234  
                                  ??_main 002D                    CAN_MoveBuffIntoFrame@i 000A  
                           __activetblptr 000002                              NVMWrite@addr 000B  
                        _TMR1_Update_flag 0037                   WritetoEEPROM@GIE_Status 0039  
                   __end_of_IsInNeighbors 1E5E                           _wartosciSasiada 00DA  
                       __end_of_RADAR_Use 29AE                                 ??_INI_All 0010  
                       __end_of_LED_Error 2936                         __end_of_LED_Right 25F0  
                    WritetoEEPROM@Address 0006           __size_of_MOCK_Klikniecie_Spadek 000A  
                               ??_ISR_low 0003                                 ??_NVMInit 000C  
                               ??_NVMRead 000E                                    _CANCON 000F6F  
                                  _EEADRH 000FAA                                    _EEDATA 000FA8  
                                  _EECON2 000FA7                          ___awdiv@dividend 0006  
             FRAME_ExcitationMultiplier@i 0009                                    _CIOCON 000F73  
                         __CFG_BBSIZ$1024 000000                         __end_of_INI_Timer 294E  
                                  i1l4029 0C4C                                    _TABLAT 000FF5  
                         ?_CAN_SetupClock 0001                                    _TBLPTR 000FF6  
                                  _RXB0D0 000F66                                    _TMR1IE 007CE8  
                                  _TMR1IF 007CF0                                    _TMR1IP 007CF8  
                                  _TMR1ON 007E68              ??_FRAME_ExcitationMultiplier 0008  
                          ?_INI_LED_Start 0001                            __CFG_XINST$OFF 000000  
                               ??___awdiv 000A                            __CFG_STVREN$ON 000000  
                        LED_Light_Pos@pos 000D                __size_of_FRAME_MapPosition 0002  
                               ??___lwdiv 000A                                    clear_0 235E  
                                  clear_1 2370                                    clear_2 237C  
                        ___awdiv@quotient 000C                              NVMalloc@size 0006  
              ??_FRAME_PrzypisanieDokarty 0008                  ??i1_TMR1_Update_flag_Set 0003  
                         __CFG_BOREN$BOHW 000000                   __size_of_ReadfromEEPROM 0012  
                            __pdataCOMRAM 004D                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                            ??_FLASH_Read 000A       __size_of_FRAME_ExcitationMultiplier 004E  
              __size_of_MOC_Frame_Counter 0010                      __size_of_LED_Control 0152  
                           _WritetoEEPROM 27C4                  FRAME_MapPosition@message 0006  
                          FLASH_Read@addr 0006                     TMR1_Update_flag_Set@a 0006  
                              __accesstop 0060                   __end_of__initialization 2382  
                            ??_FRAME_Plot 000F                       ISR_low@ramkaStanuU8 003C  
                               ?_LED_Left 0006                           ??_LED_Light_Pos 0011  
                           ___rparam_used 000001                    ?_FRAME_ExcitationValue 0006  
                               ?_LOCK_Get 0001                                 ?_LOCK_Set 0001  
         __end_of_FRAME_AdressOfNeighbors 0F2E                    _MOCK_Klikniecie_Spadek 29E0  
                          __pcstackCOMRAM 0001                              __pidataBANK0 2A22  
                               LED_Left@a 0006                                 LED_Left@b 0008  
                     _INI_GlobalInterrupt 2986                                 ?_ISR_high 0001  
                      __end_of_FLASH_Read 2964                                 ?_NVMWrite 0009  
                               ?_NVMalloc 0006                              ??_LED_Update 0018  
             __end_of_TRM_DataTransmition 263A                     _FRAME_SoftwareVersion 2390  
                      __end_of_FRAME_Plot 2504                              ??_INI_OUTPUT 0006  
                               LOCK_Set@k 0006                   FRAME_AxisStatus@message 0006  
             IsInNeighbors@message_adress 0006                            ?_WritetoEEPROM 0006  
                    ?_INI_GlobalInterrupt 0001                          _ReadDataToEEPROM 0F2E  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                             NVMWrite@count 000D  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 000B  
                              ??_LED_Left 0008                                ??_LOCK_Get 0006  
                              ??_LOCK_Set 0006                        __end_of_LED_Update 21BC  
                      __end_of_INI_OUTPUT 2918                                ??_ISR_high 0001  
                     TMR1_Timer_reset@t1H 0002                       TMR1_Timer_reset@t1L 0001  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 000F                   ??_CAN_MoveBuffIntoFrame 000A  
                              ??_NVMalloc 000A              __end_of_TMR1_Update_flag_Get 29FE  
            __end_of_TMR1_Update_flag_Set 29F4           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 1864                                   _INI_All 28D6  
                __end_of_TMR1_Timer_reset 28D6                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0006                                   _TXB0CON 000F40  
                                 _ISR_low 0C18                                   _RXFCON0 000DD4  
                                 _RXFCON1 000DD5                                   _NVMInit 267C  
                                 _NVMRead 27F8                                   _DaneCan 002D  
            __end_of_MOCK_PrzyspieszenieX 29E0              __end_of_MOCK_PrzyspieszenieY 29D6  
            __end_of_MOCK_PrzyspieszenieZ 29CC        __end_of_FRAME_ExcitationMultiplier 25A4  
              _FRAME_ExcitationMultiplier 2556               FRAME_HandleCanFrame@message 0014  
                                 __Hparam 0000          ??_MOC_Wynikowa_wartosc_roznicowa 0008  
         ?_MOC_Wynikowa_wartosc_roznicowa 0006                                   __Lparam 0000  
                  __size_of_CAN_TakeFrame 0252                                 _CAN_GenID 21BC  
                                 ___awdiv 2042                                 _CAN_Setup 23F6  
                  __size_of_CAN_SendFrame 0172                                   ___lwdiv 2504  
                       LED_Light_Pos@pos2 0014                                   __pcinit 231E  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 0006  
                                 __ptext0 20C6                                   __ptext1 25F0  
                                 __ptext2 166C                                   __ptext3 2918  
                                 __ptext4 2390                                   __ptext5 1C70  
                                 __ptext6 29AE                                   __ptext7 2A08  
                                 __ptext8 2976                                   __ptext9 29B8  
                  ?_FRAME_SoftwareVersion 0006                            _ReadfromEEPROM 2964  
                         ??_WritetoEEPROM 0009                    __size_of_CAN_SetupMask 0074  
       __size_of_MOC_Aktualna_Temperatura 000A            FRAME_AdressOfNeighbors@nrRamki 0008  
               ?_MOC_Aktualna_Temperatura 0006          __size_of_FRAME_AdressOfNeighbors 02CC  
                        ??_CAN_SetupClock 0006            FRAME_AdressOfNeighbors@message 0006  
                                 main@adr 00D8                                 _RADAR_Use 29A2  
                               _LED_Error 2918                            __pintcode_body 2A18  
                               _LED_Right 25A4                      end_of_initialization 2382  
    FRAME_SensorExcitationStatus@statwect 0033                             __Lmediumconst 0000  
                                 int_func 2A18                                 _INI_Timer 2936  
                  i1_TMR1_Update_flag_Set 29FE          TRM_DataTransmition@czujnikWeWyU8 003A  
                              ?_CAN_GenID 0006                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ?_CAN_Setup 0001  
           __size_of_FRAME_AveragingTimes 0036                    __end_of_ReadfromEEPROM 2976  
                    CAN_SendFrame@message 000B                          NVMalloc@location 0008  
                           LED_Update@Red 003D                             _CAN_TakeFrame 11CC  
                             NVMRead@addr 000A                             _CAN_SendFrame 1864  
                              ?_RADAR_Use 0001                                ?_LED_Error 0001  
                             NVMRead@dest 0008               FRAME_AdressOfNeighbors@kier 000E  
                              ?_LED_Right 0006                          _FRAME_AxisStatus 2722  
                 ??_FRAME_ExcitationValue 0008                                ?_INI_Timer 0001  
                 ?_MOCK_Klikniecie_Spadek 0006                           _ramkaCanRxKarty 0060  
                    _TMR1_Update_flag_Get 29F4                           _ramkaCanTxKarty 00B5  
                    _TMR1_Update_flag_Set 29EA                             _CAN_SetupMask 22AA  
                       __size_of_LED_Left 0042                      _FRAME_HandleCanFrame 166C  
                  __size_of_IsInNeighbors 00CA                         __size_of_LOCK_Get 0004  
                       __size_of_LOCK_Set 0008                         _WriteDataToEEPROM 141E  
                __end_of_ReadDataToEEPROM 11CC                            CAN_TakeFrame@k 0013  
                      ?_WriteDataToEEPROM 0001                           ?_ReadfromEEPROM 0006  
                           __pidataCOMRAM 2994                         __size_of_ISR_high 1E16  
                    _MOCK_PrzyspieszenieX 29D6                      _MOCK_PrzyspieszenieY 29CC  
                    _MOCK_PrzyspieszenieZ 29C2                                LED_Right@a 0006  
                              LED_Right@b 000A                     MOC_Frame_Counter@zeta 00D6  
                       __size_of_NVMWrite 0036                             ??_LED_Control 0008  
                     ??_WriteDataToEEPROM 000F                         __size_of_NVMalloc 0036  
                     start_initialization 231E                            ?_CAN_TakeFrame 000E  
                               _Init_Data 0056                            ?_CAN_SendFrame 000B  
         FRAME_SensorExcitationStatus@tru 000C            __end_of_MOCK_Klikniecie_Spadek 29EA  
                        __CFG_OSC$IRCIO67 000000         __size_of_FRAME_PrzypisanieDokarty 009E  
               ?_FRAME_PrzypisanieDokarty 0006                     ?_TMR1_Update_flag_Get 0006  
                   ?_TMR1_Update_flag_Set 0006                            ?_CAN_SetupMask 0001  
                   __end_of_LED_Light_Pos 1F0E                     ?_FRAME_HandleCanFrame 0014  
               __end_of_WriteDataToEEPROM 166C                               ??_CAN_GenID 0009  
                             ??_CAN_Setup 0006                               __pdataBANK0 00D6  
                        __CFG_LPT1OSC$OFF 000000                     ?_MOCK_PrzyspieszenieX 0006  
                   ?_MOCK_PrzyspieszenieY 0006                     ?_MOCK_PrzyspieszenieZ 0006  
                CAN_MoveBuffIntoFrame@Buf 0008      __end_of_FRAME_SensorExcitationStatus 1D94  
   __size_of_FRAME_SensorExcitationStatus 0124                  CAN_MoveBuffIntoFrame@Ram 0006  
            _FRAME_SensorExcitationStatus 1C70            __size_of_CAN_MoveBuffIntoFrame 002A  
                             __pbssBIGRAM 00DA             __end_of_CAN_MoveBuffIntoFrame 288A  
                         _Fulfillment_Lvl 0053                               __pbssCOMRAM 002D  
                                ?_INI_All 0001                   _FRAME_AdressOfNeighbors 0C62  
                           __pcstackBANK0 00D8                             _IsInNeighbors 1D94  
                       ?_TMR1_Timer_reset 0001                           _ustawieniaKarty 00D4  
                             _BRGCON1bits 000F70                               _BRGCON2bits 000F71  
                             _BRGCON3bits 000F72                                  ?_ISR_low 0001  
 __end_of_FRAME_DataUpdateAndChangeOption 24AC  __size_of_FRAME_DataUpdateAndChangeOption 005A  
       ??_FRAME_DataUpdateAndChangeOption 0008          ?_FRAME_DataUpdateAndChangeOption 0006  
         _FRAME_DataUpdateAndChangeOption 2452                             ??_MOC_NOTWORK 0008  
              __end_of_CAN_SetupFilter_Ne 2042                                  ?_NVMInit 0001  
                                ?_NVMRead 0008                        ??_TMR1_Timer_reset 0001  
                             ??_RADAR_Use 0006                               ??_LED_Error 000B  
                          NVMWrite@source 0009                               ??_LED_Right 0008  
            __size_of_TRM_DataTransmition 004A                       __end_of_LED_Control 1B28  
             ?_FRAME_ExcitationMultiplier 0006                               ??_INI_Timer 0006  
                   __end_of_INI_LED_Start 2860                          ___lwdiv@dividend 0006  
                               __pintcode 0C08                                  ?___awdiv 0006  
                 ??_FRAME_SoftwareVersion 0008          __end_of_MOC_Aktualna_Temperatura 29C2  
                                ?___lwdiv 0006                         FRAME_Plot@message 000D  
                             __pintcodelo 0C18               __end_of_INI_GlobalInterrupt 2994  
                         ??_CAN_TakeFrame 0010             ?_FRAME_SensorExcitationStatus 0008  
  __end_of_MOC_Wynikowa_wartosc_roznicowa 29B8   __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
          _MOC_Wynikowa_wartosc_roznicowa 29AE                               _COMSTATbits 000F74  
                          ?_IsInNeighbors 0006                           ??_CAN_SendFrame 000D  
                        ___lwdiv@quotient 000B                   ?i1_TMR1_Update_flag_Set 0001  
             FRAME_AveragingTimes@message 0006                    ??_TMR1_Update_flag_Get 0008  
                  ??_TMR1_Update_flag_Set 0008                           ??_CAN_SetupMask 0006  
                                _LED_Left 263A                    ??_FRAME_HandleCanFrame 0016  
                    CAN_TakeFrame@message 000E                       __end_of_MOC_NOTWORK 2A10  
                                _LOCK_Get 2A1E                      CAN_TakeFrame@tempCON 0012  
                                _LOCK_Set 2A10                __size_of_WriteDataToEEPROM 024E  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _RXB0SIDH 000F61                                  _RXB0SIDL 000F62  
                                _RXF0EIDH 000F02                                  _RXF0EIDL 000F03  
                                _RXF1EIDH 000F06                                  _RXF1EIDL 000F07  
                                _RXF2EIDH 000F0A                                  _RXF2EIDL 000F0B  
                                _RXF3EIDH 000F0E                                  _RXF3EIDL 000F0F  
                                _RXF4EIDH 000F12                                  _RXF4EIDL 000F13  
                                _RXF5EIDH 000F16                                  _RXF5EIDL 000F17  
                                _RXF6EIDH 000D62                                  _RXF6EIDL 000D63  
                                _RXF0SIDH 000F00                                  _RXF7EIDH 000D66  
                                _RXF0SIDL 000F01                                  _RXF7EIDL 000D67  
                                _RXF1SIDH 000F04                                  _RXF8EIDH 000D6A  
                                _RXF1SIDL 000F05                                  _RXF8EIDL 000D6B  
                                _RXF2SIDH 000F08                                  _RXF9EIDH 000D72  
                                _RXF2SIDL 000F09                                  _RXF9EIDL 000D73  
                                _RXF3SIDH 000F0C                                  _RXF3SIDL 000F0D  
                                _ISR_high 0C08                                  _RXF4SIDH 000F10  
                                _RXF4SIDL 000F11                                  _RXF5SIDH 000F14  
                                _RXF5SIDL 000F15                                  _RXF6SIDH 000D60  
                                _RXF6SIDL 000D61                                  _RXM0EIDH 000F1A  
                                _RXF7SIDH 000D64                                  _RXM0EIDL 000F1B  
                                _RXF7SIDL 000D65                                  _RXM1EIDH 000F1E  
                                _RXF8SIDH 000D68                                  _RXM1EIDL 000F1F  
                                _RXF8SIDL 000D69                                  _RXF9SIDH 000D70  
                  ??_MOCK_PrzyspieszenieX 0008                    ??_MOCK_PrzyspieszenieY 0008  
                                _RXF9SIDL 000D71                    ??_MOCK_PrzyspieszenieZ 0008  
                                _RXFBCON0 000DE0                                  _RXFBCON1 000DE1  
                                _RXFBCON2 000DE2                                  _RXFBCON3 000DE3  
                                _RXFBCON4 000DE4                                  _RXM0SIDH 000F18  
                                _RXM0SIDL 000F19                                  _RXM1SIDH 000F1C  
                                _RXM1SIDL 000F1D                  __end_of_FRAME_AxisStatus 2758  
                                _NVMWrite 26EC                                  _NVMalloc 278E  
               ??_FRAME_AdressOfNeighbors 000A                          _DetectorLedRadar 00CB  
                             _LED_Control 19D6                          __size_of_INI_All 0022  
            FRAME_ExcitationValue@message 0006                     __end_of_WritetoEEPROM 27F8  
          __end_ofi1_TMR1_Update_flag_Set 2A08                            _nextEEPosition 0031  
                               copy_data0 234A                          __size_of_ISR_low 0046  
      __size_of_FRAME_AccelerometerStatus 0076              __end_of_FRAME_AveragingTimes 278E  
                                _MaxAdres 004D                          __size_of_NVMInit 003A  
                        __size_of_NVMRead 0034                ?_FRAME_AccelerometerStatus 0008  
                                _MinAdres 0035            __size_of_FRAME_ExcitationValue 0036  
           __end_of_FRAME_ExcitationValue 26EC                                _EECON1bits 000FA6  
                                __Hrparam 0000                              _RXB0SIDLbits 000F62  
                        ??_ReadfromEEPROM 0008                                  __Lrparam 0000  
                       ?_ReadDataToEEPROM 0001                          __size_of___awdiv 0084  
                        __size_of___lwdiv 0052                        ??_ReadDataToEEPROM 000E  
                         ??_IsInNeighbors 0008                  _MOC_Aktualna_Temperatura 29B8  
         FRAME_PrzypisanieDokarty@message 0006                        LED_Light_Pos@flage 0016  
                      LED_Light_Pos@color 0011          __end_of_FRAME_PrzypisanieDokarty 1FAC  
                            _RXF0SIDLbits 000F01                  FRAME_AnalogValue@message 0006  
                         ___lwdiv@divisor 0008                              _RXF1SIDLbits 000F05  
                              _FLASH_Read 294E                           ___lwdiv@counter 000A  
                                __ptext10 2A10                                  __ptext11 2A1E  
                                __ptext20 26EC                                  __ptext12 1D94  
                                __ptext21 27C4                                  __ptext13 1F0E  
                                __ptext30 29D6                                  __ptext22 2452  
                                __ptext14 24AC                                  __ptext31 29E0  
                                __ptext23 2722                                  __ptext15 2A24  
                                __ptext40 2142                                  __ptext32 1864  
                                __ptext24 2758                                  __ptext16 26B6  
                                __ptext41 1E5E                                  __ptext33 21BC  
                                __ptext25 2A26                                  __ptext17 2556  
                                __ptext50 278E                                  __ptext42 2504  
                                __ptext34 11CC                                  __ptext26 0C62  
                                __ptext18 1B28                                  __ptext51 2936  
                                __ptext43 25A4                                  __ptext35 2042  
                                __ptext27 2234                                  __ptext19 141E  
                                __ptext60 294E                                  __ptext52 28F8  
                                __ptext44 263A                                  __ptext36 2860  
                                __ptext28 29C2            ??_FRAME_SensorExcitationStatus 000A  
                                __ptext53 282C                                  __ptext45 28D6  
                                __ptext37 29EA                                  __ptext29 29CC  
                                __ptext62 29FE                                  __ptext54 19D6  
                                __ptext46 0F2E                                  __ptext38 29F4  
                                __ptext63 28B2                                  __ptext55 2986  
                                __ptext47 27F8                                  __ptext39 29A2  
                                __ptext56 23F6                                  __ptext48 2964  
                                __ptext57 22AA                                  __ptext49 267C  
                                __ptext58 1FAC                                  __ptext59 288A  
           TRM_DataTransmition@canMessage 001C                              _RXF2SIDLbits 000F09  
                             _MOC_NOTWORK 2A08                              _RXF3SIDLbits 000F0D  
               FRAME_HandleCanFrame@ident 0019                              _RXF4SIDLbits 000F11  
                FRAME_DeviceReset@message 0011         __end_of_FRAME_AccelerometerStatus 22AA  
                            _RXF5SIDLbits 000F15                                _FRAME_Plot 24AC  
                           __size_of_main 007C                              _RXF6SIDLbits 000D61  
                            _RXF7SIDLbits 000D65                   __size_of_CAN_SetupClock 0028  
                            _RXF8SIDLbits 000D69                              _RXF9SIDLbits 000D71  
                                int$flags 005A                       _TRM_DataTransmition 25F0  
                             _RXB0DLCbits 000F65                                _LED_Update 2142  
                             _RXB0CONbits 000F60                                _INTCONbits 000FF2  
                              _INI_OUTPUT 28F8                         _FRAME_AnalogValue 2A26  
                    ?_TRM_DataTransmition 0001              FRAME_SoftwareVersion@message 0006  
                                intlevel1 0000                                  intlevel2 0000  
                         _czujnikiNaMapie 00CE                        ?_FRAME_AnalogValue 0006  
     FRAME_SensorExcitationStatus@message 0008                               _TXB0CONbits 000F40  
                     ??_FRAME_AnalogValue 000A                 __size_of_TMR1_Timer_reset 0024  
                      _CAN_SetupFilter_Ne 1FAC                  LED_Light_Pos@fulfillment 000F  
                    _FRAME_AveragingTimes 2758                       ?_CAN_SetupFilter_Ne 0001  
          __size_of_FRAME_SoftwareVersion 0066                         _FRAME_DeviceReset 1B28  
           __end_of_FRAME_SoftwareVersion 23F6                        ?_FRAME_DeviceReset 0011  
                         LED_Update@Green 0055                 __end_of_FRAME_AnalogValue 2A28  
                  __size_of_LED_Light_Pos 00B0                               ?_FLASH_Read 0006  
                   _CAN_MoveBuffIntoFrame 2860                                _WDTCONbits 000FD1  
                     ??_FRAME_DeviceReset 0013                     ??_TRM_DataTransmition 001C  
                _FRAME_PrzypisanieDokarty 1F0E                    LED_Light_Pos@LED_array 0012  
                    ??_CAN_SetupFilter_Ne 0006                            LED_Update@pos1 0051  
                          LED_Update@pos2 004F                               ?_FRAME_Plot 000D  
