

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 26 14:38:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.05
    83                           ; Generated 20/12/2018 GMT
    84                           ; 
    85                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4680 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  001A56                     __pidataCOMRAM:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for MOC_Frame_Counter@zeta
   122  001A56  0011               	dw	17
   123                           
   124                           ;initializer for LED_Update@pos2
   125  001A58  0001               	dw	1
   126                           
   127                           ;initializer for LED_Update@pos1
   128  001A5A  0001               	dw	1
   129                           
   130                           ;initializer for _Fulfillment_Lvl
   131  001A5C  0014               	dw	20
   132                           
   133                           ;initializer for LED_Update@Green
   134  001A5E  01                 	db	1
   135                           
   136                           ;initializer for _NeightAdress2
   137  001A5F  012A               	dw	298
   138  0000                     _RXF9EIDL	set	3443
   139  0000                     _RXF9EIDH	set	3442
   140  0000                     _RXF9SIDLbits	set	3441
   141  0000                     _RXF9SIDL	set	3441
   142  0000                     _RXF9SIDH	set	3440
   143  0000                     _RXF8EIDL	set	3435
   144  0000                     _RXF8EIDH	set	3434
   145  0000                     _RXF8SIDLbits	set	3433
   146  0000                     _RXF8SIDL	set	3433
   147  0000                     _RXF8SIDH	set	3432
   148  0000                     _RXF7EIDL	set	3431
   149  0000                     _RXF7EIDH	set	3430
   150  0000                     _RXF7SIDLbits	set	3429
   151  0000                     _RXF7SIDL	set	3429
   152  0000                     _RXF7SIDH	set	3428
   153  0000                     _RXF6EIDL	set	3427
   154  0000                     _RXF6EIDH	set	3426
   155  0000                     _RXF6SIDLbits	set	3425
   156  0000                     _RXF6SIDL	set	3425
   157  0000                     _RXF6SIDH	set	3424
   158  0000                     _RXFBCON4	set	3556
   159  0000                     _RXFBCON3	set	3555
   160  0000                     _RXFBCON2	set	3554
   161  0000                     _RXFBCON1	set	3553
   162  0000                     _RXFBCON0	set	3552
   163  0000                     _MSEL3	set	3571
   164  0000                     _MSEL2	set	3570
   165  0000                     _MSEL1	set	3569
   166  0000                     _MSEL0	set	3568
   167  0000                     _BIE0	set	3578
   168  0000                     _BSEL0	set	3576
   169  0000                     _B5CON	set	3696
   170  0000                     _B4CON	set	3680
   171  0000                     _B3CON	set	3664
   172  0000                     _B2CON	set	3648
   173  0000                     _B1CON	set	3632
   174  0000                     _B0CON	set	3616
   175  0000                     _TXB0CONbits	set	3904
   176  0000                     _RXF5EIDL	set	3863
   177  0000                     _RXF5EIDH	set	3862
   178  0000                     _RXF5SIDLbits	set	3861
   179  0000                     _RXF5SIDL	set	3861
   180  0000                     _RXF5SIDH	set	3860
   181  0000                     _RXF4EIDL	set	3859
   182  0000                     _RXF4EIDH	set	3858
   183  0000                     _RXF4SIDLbits	set	3857
   184  0000                     _RXF4SIDL	set	3857
   185  0000                     _RXF4SIDH	set	3856
   186  0000                     _RXF3EIDL	set	3855
   187  0000                     _RXF3EIDH	set	3854
   188  0000                     _RXF3SIDLbits	set	3853
   189  0000                     _RXF3SIDL	set	3853
   190  0000                     _RXF3SIDH	set	3852
   191  0000                     _RXF2EIDL	set	3851
   192  0000                     _RXF2EIDH	set	3850
   193  0000                     _RXF2SIDLbits	set	3849
   194  0000                     _RXF2SIDL	set	3849
   195  0000                     _RXF2SIDH	set	3848
   196  0000                     _RXF1EIDL	set	3847
   197  0000                     _RXF1EIDH	set	3846
   198  0000                     _RXF1SIDLbits	set	3845
   199  0000                     _RXF1SIDL	set	3845
   200  0000                     _RXF1SIDH	set	3844
   201  0000                     _RXF0EIDL	set	3843
   202  0000                     _RXF0EIDH	set	3842
   203  0000                     _RXF0SIDLbits	set	3841
   204  0000                     _RXF0SIDL	set	3841
   205  0000                     _RXF0SIDH	set	3840
   206  0000                     _RXM1EIDL	set	3871
   207  0000                     _RXM1EIDH	set	3870
   208  0000                     _RXM1SIDL	set	3869
   209  0000                     _RXM1SIDH	set	3868
   210  0000                     _RXM0EIDL	set	3867
   211  0000                     _RXM0EIDH	set	3866
   212  0000                     _RXM0SIDL	set	3865
   213  0000                     _RXM0SIDH	set	3864
   214  0000                     _RXB1CON	set	3920
   215  0000                     _TXB0CON	set	3904
   216  0000                     _TBLPTR	set	4086
   217  0000                     _EECON2	set	4007
   218  0000                     _EEDATA	set	4008
   219  0000                     _EECON1bits	set	4006
   220  0000                     _EEADR	set	4009
   221  0000                     _EEADRH	set	4010
   222  0000                     _INTCONbits	set	4082
   223  0000                     _WDTCONbits	set	4049
   224  0000                     _RCONbits	set	4048
   225  0000                     _TRISC	set	3988
   226  0000                     _LATC	set	3979
   227  0000                     _T1CON	set	4045
   228  0000                     _TMR1H	set	4047
   229  0000                     _TMR1L	set	4046
   230  0000                     _LATE	set	3981
   231  0000                     _LATA	set	3977
   232  0000                     _LATB	set	3978
   233  0000                     _LATD	set	3980
   234  0000                     _TRISD	set	3989
   235  0000                     _TRISE	set	3990
   236  0000                     _TRISB	set	3987
   237  0000                     _TRISA	set	3986
   238  0000                     _RXB0DLCbits	set	3941
   239  0000                     _RXB0DLC	set	3941
   240  0000                     _RXB0SIDH	set	3937
   241  0000                     _RXB0SIDLbits	set	3938
   242  0000                     _RXB0SIDL	set	3938
   243  0000                     _RXB0EIDH	set	3939
   244  0000                     _RXB0EIDL	set	3940
   245  0000                     _COMSTATbits	set	3956
   246  0000                     _RXB0CONbits	set	3936
   247  0000                     _BRGCON3bits	set	3954
   248  0000                     _BRGCON2bits	set	3953
   249  0000                     _BRGCON1bits	set	3952
   250  0000                     _CIOCON	set	3955
   251  0000                     _ECANCON	set	3959
   252  0000                     _PIR3	set	4004
   253  0000                     _IPR3	set	4005
   254  0000                     _PIE3	set	4003
   255  0000                     _RXB0CON	set	3936
   256  0000                     _CANSTAT	set	3950
   257  0000                     _CANCON	set	3951
   258  0000                     _RCON	set	4048
   259  0000                     _TABLAT	set	4085
   260  0000                     _RXB0D0	set	3942
   261  0000                     _TMR1IF	set	31984
   262  0000                     _TMR1IP	set	31992
   263  0000                     _PEIE	set	32662
   264  0000                     _IPEN	set	32391
   265  0000                     _TMR1ON	set	32360
   266  0000                     _TMR1IE	set	31976
   267  0000                     _IRCF0	set	32412
   268  0000                     _IRCF1	set	32413
   269  0000                     _IRCF2	set	32414
   270                           
   271                           ; #config settings
   272  0000                     
   273                           	psect	cinit
   274  0014BE                     __pcinit:
   275                           	opt callstack 0
   276  0014BE                     start_initialization:
   277                           	opt callstack 0
   278  0014BE                     __initialization:
   279                           	opt callstack 0
   280                           
   281                           ; Initialize objects allocated to COMRAM (11 bytes)
   282                           ; load TBLPTR registers with __pidataCOMRAM
   283  0014BE  0E56               	movlw	low __pidataCOMRAM
   284  0014C0  6EF6               	movwf	tblptrl,c
   285  0014C2  0E1A               	movlw	high __pidataCOMRAM
   286  0014C4  6EF7               	movwf	tblptrh,c
   287  0014C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   288  0014C8  6EF8               	movwf	tblptru,c
   289  0014CA  EE00  F04E         	lfsr	0,__pdataCOMRAM
   290  0014CE  EE10 F00B          	lfsr	1,11
   291  0014D2                     copy_data0:
   292  0014D2  0009               	tblrd		*+
   293  0014D4  CFF5 FFEE          	movff	tablat,postinc0
   294  0014D8  50E5               	movf	postdec1,w,c
   295  0014DA  50E1               	movf	fsr1l,w,c
   296  0014DC  E1FA               	bnz	copy_data0
   297                           
   298                           ; Clear objects allocated to BIGRAM (544 bytes)
   299  0014DE  EE00  F0D6         	lfsr	0,__pbssBIGRAM
   300  0014E2  EE12 F020          	lfsr	1,544
   301  0014E6                     clear_0:
   302  0014E6  6AEE               	clrf	postinc0,c
   303  0014E8  50E5               	movf	postdec1,w,c
   304  0014EA  50E1               	movf	fsr1l,w,c
   305  0014EC  E1FC               	bnz	clear_0
   306  0014EE  50E2               	movf	fsr1h,w,c
   307  0014F0  E1FA               	bnz	clear_0
   308                           
   309                           ; Clear objects allocated to BANK0 (114 bytes)
   310  0014F2  EE00  F060         	lfsr	0,__pbssBANK0
   311  0014F6  0E72               	movlw	114
   312  0014F8                     clear_1:
   313  0014F8  6AEE               	clrf	postinc0,c
   314  0014FA  06E8               	decf	wreg,f,c
   315  0014FC  E1FD               	bnz	clear_1
   316                           
   317                           ; Clear objects allocated to COMRAM (34 bytes)
   318  0014FE  EE00  F02C         	lfsr	0,__pbssCOMRAM
   319  001502  0E22               	movlw	34
   320  001504                     clear_2:
   321  001504  6AEE               	clrf	postinc0,c
   322  001506  06E8               	decf	wreg,f,c
   323  001508  E1FD               	bnz	clear_2
   324  00150A                     end_of_initialization:
   325                           	opt callstack 0
   326  00150A                     __end_of__initialization:
   327                           	opt callstack 0
   328  00150A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329  00150C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330  00150E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   331  001510  6EF8               	movwf	tblptru,c
   332  001512  0100               	movlb	0
   333  001514  EF2F  F00A         	goto	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMRAM
   336  00002C                     __pbssCOMRAM:
   337                           	opt callstack 0
   338  00002C                     _DaneCan:
   339                           	opt callstack 0
   340  00002C                     	ds	4
   341  000030                     _nextEEPosition:
   342                           	opt callstack 0
   343  000030                     	ds	2
   344  000032                     FRAME_SensorExcitationStatus@statwect:
   345                           	opt callstack 0
   346  000032                     	ds	2
   347  000034                     _TMR1_Update_flag:
   348                           	opt callstack 0
   349  000034                     	ds	2
   350  000036                     WritetoEEPROM@GIE_Status:
   351                           	opt callstack 0
   352  000036                     	ds	1
   353  000037                     	ds	1
   354  000038                     	ds	1
   355  000039                     ISR_low@ramkaStanuU8:
   356                           	opt callstack 0
   357  000039                     	ds	1
   358  00003A                     	ds	1
   359  00003B                     _LOCK:
   360                           	opt callstack 0
   361  00003B                     	ds	1
   362  00003C                     _neighborsAdress:
   363                           	opt callstack 0
   364  00003C                     	ds	2
   365  00003E                     _ustawieniaKarty:
   366                           	opt callstack 0
   367  00003E                     	ds	2
   368  000040                     _NeightAdress8:
   369                           	opt callstack 0
   370  000040                     	ds	2
   371  000042                     _NeightAdress7:
   372                           	opt callstack 0
   373  000042                     	ds	2
   374  000044                     _NeightAdress6:
   375                           	opt callstack 0
   376  000044                     	ds	2
   377  000046                     _NeightAdress5:
   378                           	opt callstack 0
   379  000046                     	ds	2
   380  000048                     _NeightAdress4:
   381                           	opt callstack 0
   382  000048                     	ds	2
   383  00004A                     _NeightAdress3:
   384                           	opt callstack 0
   385  00004A                     	ds	2
   386  00004C                     _NeightAdress1:
   387                           	opt callstack 0
   388  00004C                     	ds	2
   389                           
   390                           	psect	dataCOMRAM
   391  00004E                     __pdataCOMRAM:
   392                           	opt callstack 0
   393  00004E                     MOC_Frame_Counter@zeta:
   394                           	opt callstack 0
   395  00004E                     	ds	2
   396  000050                     LED_Update@pos2:
   397                           	opt callstack 0
   398  000050                     	ds	2
   399  000052                     LED_Update@pos1:
   400                           	opt callstack 0
   401  000052                     	ds	2
   402  000054                     _Fulfillment_Lvl:
   403                           	opt callstack 0
   404  000054                     	ds	2
   405  000056                     LED_Update@Green:
   406                           	opt callstack 0
   407  000056                     	ds	1
   408  000057                     _NeightAdress2:
   409                           	opt callstack 0
   410  000057                     	ds	2
   411                           
   412                           	psect	bssBANK0
   413  000060                     __pbssBANK0:
   414                           	opt callstack 0
   415  000060                     _ramkaCanRxKarty:
   416                           	opt callstack 0
   417  000060                     	ds	85
   418  0000B5                     _ramkaCanTxKarty:
   419                           	opt callstack 0
   420  0000B5                     	ds	17
   421  0000C6                     _Flagi:
   422                           	opt callstack 0
   423  0000C6                     	ds	5
   424  0000CB                     _DetectorLedRadar:
   425                           	opt callstack 0
   426  0000CB                     	ds	3
   427  0000CE                     _czujnikiNaMapie:
   428                           	opt callstack 0
   429  0000CE                     	ds	2
   430  0000D0                     _Dane:
   431                           	opt callstack 0
   432  0000D0                     	ds	2
   433                           
   434                           	psect	bssBIGRAM
   435  0000D6                     __pbssBIGRAM:
   436                           	opt callstack 0
   437  0000D6                     _wartosciSasiada:
   438                           	opt callstack 0
   439  0000D6                     	ds	544
   440                           
   441                           	psect	cstackBANK0
   442  0000D2                     __pcstackBANK0:
   443                           	opt callstack 0
   444  0000D2                     	ds	2
   445  0000D4                     main@adr:
   446                           	opt callstack 0
   447                           
   448                           ; 2 bytes @ 0x2
   449  0000D4                     	ds	2
   450                           
   451                           	psect	cstackCOMRAM
   452  000001                     __pcstackCOMRAM:
   453                           	opt callstack 0
   454  000001                     TMR1_Timer_reset@t1L:
   455                           	opt callstack 0
   456  000001                     i1TMR1_Update_flag_Set@a:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x0
   460  000001                     	ds	1
   461  000002                     TMR1_Timer_reset@t1H:
   462                           	opt callstack 0
   463                           
   464                           ; 1 bytes @ 0x1
   465  000002                     	ds	1
   466  000003                     ??_ISR_low:
   467  000003                     
   468                           ; 1 bytes @ 0x2
   469  000003                     	ds	3
   470  000006                     ??_CAN_Setup:
   471  000006                     ?_TMR1_Update_flag_Get:
   472                           	opt callstack 0
   473  000006                     ?_LED_Right:
   474                           	opt callstack 0
   475  000006                     ?_LED_Left:
   476                           	opt callstack 0
   477  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   478                           	opt callstack 0
   479  000006                     ?_MOC_Frame_Counter:
   480                           	opt callstack 0
   481  000006                     ?_MOC_Aktualna_Temperatura:
   482                           	opt callstack 0
   483  000006                     ?_MOC_NOTWORK:
   484                           	opt callstack 0
   485  000006                     ?_IsInNeighbors:
   486                           	opt callstack 0
   487  000006                     ?_MOCK_PrzyspieszenieX:
   488                           	opt callstack 0
   489  000006                     ?_MOCK_PrzyspieszenieY:
   490                           	opt callstack 0
   491  000006                     ?_MOCK_PrzyspieszenieZ:
   492                           	opt callstack 0
   493  000006                     ?_MOCK_Klikniecie_Spadek:
   494                           	opt callstack 0
   495  000006                     ?_ReadFlash:
   496                           	opt callstack 0
   497  000006                     ?___awdiv:
   498                           	opt callstack 0
   499  000006                     ?___lwdiv:
   500                           	opt callstack 0
   501  000006                     LOCK_Set@k:
   502                           	opt callstack 0
   503  000006                     ReadFlash@addr:
   504                           	opt callstack 0
   505  000006                     CAN_MoveBuffIntoFrame@Ram:
   506                           	opt callstack 0
   507  000006                     CAN_GenID@message:
   508                           	opt callstack 0
   509  000006                     LED_Right@a:
   510                           	opt callstack 0
   511  000006                     LED_Left@a:
   512                           	opt callstack 0
   513  000006                     LED_Control@diode:
   514                           	opt callstack 0
   515  000006                     TMR1_Update_flag_Set@a:
   516                           	opt callstack 0
   517  000006                     IsInNeighbors@message_adress:
   518                           	opt callstack 0
   519  000006                     FRAME_ExcitationValue@message:
   520                           	opt callstack 0
   521  000006                     FRAME_ExcitationMultiplier@message:
   522                           	opt callstack 0
   523  000006                     FRAME_AveragingTimes@message:
   524                           	opt callstack 0
   525  000006                     FRAME_AxisStatus@message:
   526                           	opt callstack 0
   527  000006                     FRAME_DataUpdateAndChangeOption@message:
   528                           	opt callstack 0
   529  000006                     FRAME_MapPosition@message:
   530                           	opt callstack 0
   531  000006                     FRAME_SoftwareVersion@message:
   532                           	opt callstack 0
   533  000006                     FRAME_AnalogValue@message:
   534                           	opt callstack 0
   535  000006                     FRAME_PrzypisanieDokarty@message:
   536                           	opt callstack 0
   537  000006                     FRAME_AdressOfNeighbors@message:
   538                           	opt callstack 0
   539  000006                     NVMalloc@size:
   540                           	opt callstack 0
   541  000006                     ReadfromEEPROM@Address:
   542                           	opt callstack 0
   543  000006                     WritetoEEPROM@Address:
   544                           	opt callstack 0
   545  000006                     ___awdiv@dividend:
   546                           	opt callstack 0
   547  000006                     ___lwdiv@dividend:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x5
   551  000006                     	ds	2
   552  000008                     ??_LED_Right:
   553  000008                     ??_FRAME_DataUpdateAndChangeOption:
   554  000008                     ??_FRAME_PrzypisanieDokarty:
   555  000008                     CAN_GenID@frameID:
   556                           	opt callstack 0
   557  000008                     WritetoEEPROM@Data:
   558                           	opt callstack 0
   559  000008                     CAN_MoveBuffIntoFrame@Buf:
   560                           	opt callstack 0
   561  000008                     LED_Left@b:
   562                           	opt callstack 0
   563  000008                     FRAME_SensorExcitationStatus@message:
   564                           	opt callstack 0
   565  000008                     FRAME_AccelerometerStatus@message:
   566                           	opt callstack 0
   567  000008                     FRAME_AnalogValue@set:
   568                           	opt callstack 0
   569  000008                     FRAME_AdressOfNeighbors@nrRamki:
   570                           	opt callstack 0
   571  000008                     NVMalloc@location:
   572                           	opt callstack 0
   573  000008                     NVMRead@dest:
   574                           	opt callstack 0
   575  000008                     ___awdiv@divisor:
   576                           	opt callstack 0
   577  000008                     ___lwdiv@divisor:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x7
   581  000008                     	ds	1
   582  000009                     ??_CAN_GenID:
   583  000009                     FRAME_ExcitationMultiplier@i:
   584                           	opt callstack 0
   585  000009                     NVMWrite@source:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x8
   589  000009                     	ds	1
   590  00000A                     ??_FRAME_SensorExcitationStatus:
   591  00000A                     ??_FRAME_AdressOfNeighbors:
   592  00000A                     ??_NVMalloc:
   593  00000A                     CAN_MoveBuffIntoFrame@i:
   594                           	opt callstack 0
   595  00000A                     LED_Control@color:
   596                           	opt callstack 0
   597  00000A                     ___awdiv@counter:
   598                           	opt callstack 0
   599  00000A                     ___lwdiv@counter:
   600                           	opt callstack 0
   601  00000A                     LED_Right@b:
   602                           	opt callstack 0
   603  00000A                     NVMRead@addr:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x9
   607  00000A                     	ds	1
   608  00000B                     ___awdiv@sign:
   609                           	opt callstack 0
   610  00000B                     CAN_SendFrame@message:
   611                           	opt callstack 0
   612  00000B                     NVMWrite@addr:
   613                           	opt callstack 0
   614  00000B                     ___lwdiv@quotient:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0xA
   618  00000B                     	ds	1
   619  00000C                     NVMInit@result:
   620                           	opt callstack 0
   621  00000C                     FRAME_SensorExcitationStatus@tru:
   622                           	opt callstack 0
   623  00000C                     NVMRead@count:
   624                           	opt callstack 0
   625  00000C                     ___awdiv@quotient:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0xB
   629  00000C                     	ds	1
   630  00000D                     ??_CAN_SendFrame:
   631  00000D                     LED_Light_Pos@pos:
   632                           	opt callstack 0
   633  00000D                     FRAME_Plot@message:
   634                           	opt callstack 0
   635  00000D                     NVMWrite@count:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0xC
   639  00000D                     	ds	1
   640  00000E                     CAN_TakeFrame@message:
   641                           	opt callstack 0
   642  00000E                     FRAME_AdressOfNeighbors@kier:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0xD
   646  00000E                     	ds	1
   647  00000F                     ??_FRAME_Plot:
   648  00000F                     LED_Light_Pos@fulfillment:
   649                           	opt callstack 0
   650  00000F                     FRAME_DeviceReset@message:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0xE
   654  00000F                     	ds	1
   655  000010                     ??_CAN_TakeFrame:
   656                           
   657                           ; 1 bytes @ 0xF
   658  000010                     	ds	1
   659  000011                     LED_Light_Pos@color:
   660                           	opt callstack 0
   661                           
   662                           ; 1 bytes @ 0x10
   663  000011                     	ds	1
   664  000012                     CAN_TakeFrame@tempCON:
   665                           	opt callstack 0
   666  000012                     LED_Light_Pos@LED_array:
   667                           	opt callstack 0
   668  000012                     FRAME_HandleCanFrame@message:
   669                           	opt callstack 0
   670                           
   671                           ; 2 bytes @ 0x11
   672  000012                     	ds	1
   673  000013                     CAN_TakeFrame@k:
   674                           	opt callstack 0
   675                           
   676                           ; 1 bytes @ 0x12
   677  000013                     	ds	1
   678  000014                     ??_FRAME_HandleCanFrame:
   679  000014                     LED_Light_Pos@pos2:
   680                           	opt callstack 0
   681                           
   682                           ; 2 bytes @ 0x13
   683  000014                     	ds	2
   684  000016                     LED_Light_Pos@flage:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x15
   688  000016                     	ds	2
   689  000018                     FRAME_HandleCanFrame@ident:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x17
   693  000018                     	ds	2
   694  00001A                     FRAME_HandleCanFrame@identyfikator:
   695                           	opt callstack 0
   696                           
   697                           ; 1 bytes @ 0x19
   698  00001A                     	ds	1
   699  00001B                     TRM_DataTransmition@canMessage:
   700                           	opt callstack 0
   701                           
   702                           ; 17 bytes @ 0x1A
   703  00001B                     	ds	17
   704  00002C                     
   705                           ; 1 bytes @ 0x2B
   706 ;;
   707 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   708 ;;
   709 ;; *************** function _main *****************
   710 ;; Defined at:
   711 ;;		line 104 in file "main.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  adr             2    2[BANK0 ] int 
   716 ;;  zet             2    0        int 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   727 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   729 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   730 ;;Total ram usage:        4 bytes
   731 ;; Hardware stack levels required when called:    9
   732 ;; This function calls:
   733 ;;		_INI_All
   734 ;;		_LED_Update
   735 ;;		_ReadFlash
   736 ;;		_TMR1_Update_flag_Get
   737 ;;		_TMR1_Update_flag_Set
   738 ;;		_TRM_DataTransmition
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text0
   745  00145E                     __ptext0:
   746                           	opt callstack 0
   747  00145E                     _main:
   748                           	opt callstack 22
   749                           
   750                           ;main.c: 107:     int adr = ReadFlash(0x200000);
   751                           
   752                           ;incstack = 0
   753  00145E  0E00               	movlw	0
   754  001460  6E07               	movwf	ReadFlash@addr+1,c
   755  001462  0E00               	movlw	0
   756  001464  6E06               	movwf	ReadFlash@addr,c
   757  001466  EC0A  F00D         	call	_ReadFlash	;wreg free
   758  00146A  C006  F0D4         	movff	?_ReadFlash,main@adr
   759  00146E  C007  F0D5         	movff	?_ReadFlash+1,main@adr+1
   760                           
   761                           ;main.c: 108:      adr |= ReadFlash(0x200001)<<8;
   762  001472  0E00               	movlw	0
   763  001474  6E07               	movwf	ReadFlash@addr+1,c
   764  001476  0E01               	movlw	1
   765  001478  6E06               	movwf	ReadFlash@addr,c
   766  00147A  EC0A  F00D         	call	_ReadFlash	;wreg free
   767  00147E  C006  F007         	movff	?_ReadFlash,?_ReadFlash+1
   768  001482  6A06               	clrf	?_ReadFlash,c
   769  001484  5006               	movf	?_ReadFlash,w,c
   770  001486  0100               	movlb	0	; () banked
   771  001488  13D4               	iorwf	main@adr& (0+255),f,b
   772  00148A  5007               	movf	?_ReadFlash+1,w,c
   773  00148C  13D5               	iorwf	(main@adr+1)& (0+255),f,b
   774                           
   775                           ; BSR set to: 0
   776                           ;main.c: 112:     INI_All();
   777                           
   778                           ; BSR set to: 0
   779  00148E  ECCE  F00C         	call	_INI_All	;wreg free
   780                           
   781                           ;main.c: 114:     RCON = 0xFF;
   782  001492  68D0               	setf	4048,c	;volatile
   783  001494                     l4740:
   784                           
   785                           ;main.c: 117:     {;main.c: 118:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   786  001494  0100               	movlb	0	; () banked
   787  001496  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   788                           
   789                           ; BSR set to: 0
   790                           ;main.c: 119:         {;main.c: 120:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   791  001498  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   792                           
   793                           ; BSR set to: 0
   794                           ;main.c: 124:         if(TMR1_Update_flag_Get()==1)
   795  00149A  EC54  F00D         	call	_TMR1_Update_flag_Get	;wreg free
   796  00149E  0406               	decf	?_TMR1_Update_flag_Get,w,c
   797  0014A0  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   798  0014A2  A4D8               	btfss	status,2,c
   799  0014A4  D008               	goto	l4750
   800                           
   801                           ;main.c: 125:         {;main.c: 126:             LED_Update();
   802  0014A6  ECDF  F008         	call	_LED_Update	;wreg free
   803                           
   804                           ;main.c: 127:             TMR1_Update_flag_Set(0);
   805  0014AA  0E00               	movlw	0
   806  0014AC  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   807  0014AE  0E00               	movlw	0
   808  0014B0  6E06               	movwf	TMR1_Update_flag_Set@a,c
   809  0014B2  EC4F  F00D         	call	_TMR1_Update_flag_Set	;wreg free
   810  0014B6                     l4750:
   811                           
   812                           ;main.c: 132:         TRM_DataTransmition();
   813  0014B6  EC5B  F00B         	call	_TRM_DataTransmition	;wreg free
   814  0014BA  0004               	clrwdt		;# 
   815                           
   816                           ;main.c: 134:     }
   817  0014BC  D7EB               	goto	l4740
   818  0014BE                     __end_of_main:
   819                           	opt callstack 0
   820                           
   821 ;; *************** function _TRM_DataTransmition *****************
   822 ;; Defined at:
   823 ;;		line 19 in file "TRM.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  canMessage     17   26[COMRAM] struct .
   828 ;;  i               1    0        unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   841 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;Total ram usage:       17 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    8
   845 ;; This function calls:
   846 ;;		_CAN_TakeFrame
   847 ;;		_FRAME_HandleCanFrame
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text1
   854  0016B6                     __ptext1:
   855                           	opt callstack 0
   856  0016B6                     _TRM_DataTransmition:
   857                           	opt callstack 22
   858                           
   859                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   860                           
   861                           ;incstack = 0
   862  0016B6  A02C               	btfss	_DaneCan,0,c
   863  0016B8  D013               	goto	l4720
   864                           
   865                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   866  0016BA  0E02               	movlw	2
   867  0016BC  6E1C               	movwf	TRM_DataTransmition@canMessage+1,c
   868                           
   869                           ;TRM.c: 30:         canMessage.id.Val = 0;
   870  0016BE  0E00               	movlw	0
   871  0016C0  6E1F               	movwf	TRM_DataTransmition@canMessage+4,c
   872  0016C2  0E00               	movlw	0
   873  0016C4  6E20               	movwf	TRM_DataTransmition@canMessage+5,c
   874  0016C6  0E00               	movlw	0
   875  0016C8  6E21               	movwf	TRM_DataTransmition@canMessage+6,c
   876  0016CA  0E00               	movlw	0
   877  0016CC  6E22               	movwf	TRM_DataTransmition@canMessage+7,c
   878                           
   879                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   880  0016CE  0E04               	movlw	4
   881  0016D0  6E21               	movwf	TRM_DataTransmition@canMessage+6,c
   882                           
   883                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   884  0016D2  0E1B               	movlw	low TRM_DataTransmition@canMessage
   885  0016D4  6E12               	movwf	FRAME_HandleCanFrame@message,c
   886  0016D6  0E00               	movlw	high TRM_DataTransmition@canMessage
   887  0016D8  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   888  0016DA  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   889                           
   890                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   891  0016DE  902C               	bcf	_DaneCan,0,c
   892  0016E0                     l4720:
   893                           
   894                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   895  0016E0  0E1B               	movlw	low TRM_DataTransmition@canMessage
   896  0016E2  6E0E               	movwf	CAN_TakeFrame@message,c
   897  0016E4  0E00               	movlw	high TRM_DataTransmition@canMessage
   898  0016E6  6E0F               	movwf	CAN_TakeFrame@message+1,c
   899  0016E8  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   900  0016EC  0900               	iorlw	0
   901  0016EE  B4D8               	btfsc	status,2,c
   902  0016F0  0012               	return	
   903                           
   904                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   905  0016F2  0E1B               	movlw	low TRM_DataTransmition@canMessage
   906  0016F4  6E12               	movwf	FRAME_HandleCanFrame@message,c
   907  0016F6  0E00               	movlw	high TRM_DataTransmition@canMessage
   908  0016F8  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   909  0016FA  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   910                           
   911                           ;TRM.c: 67:         }
   912  0016FE  0012               	return		;funcret
   913  001700                     __end_of_TRM_DataTransmition:
   914                           	opt callstack 0
   915                           
   916 ;; *************** function _FRAME_HandleCanFrame *****************
   917 ;; Defined at:
   918 ;;		line 650 in file "FRAME.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  message         2   17[COMRAM] PTR struct .
   921 ;;		 -> TRM_DataTransmition@canMessage(17), 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  ident           2   23[COMRAM] unsigned short 
   924 ;;  alfa            2    0        int 
   925 ;;  identyfikato    1   25[COMRAM] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   936 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   938 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   939 ;;Total ram usage:        9 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    7
   942 ;; This function calls:
   943 ;;		_CAN_GenID
   944 ;;		_CAN_SendFrame
   945 ;;		_FRAME_AccelerometerStatus
   946 ;;		_FRAME_AdressOfNeighbors
   947 ;;		_FRAME_AnalogValue
   948 ;;		_FRAME_AveragingTimes
   949 ;;		_FRAME_AxisStatus
   950 ;;		_FRAME_DeviceReset
   951 ;;		_FRAME_ExcitationMultiplier
   952 ;;		_FRAME_ExcitationValue
   953 ;;		_FRAME_MapPosition
   954 ;;		_FRAME_Plot
   955 ;;		_FRAME_PrzypisanieDokarty
   956 ;;		_FRAME_SensorExcitationStatus
   957 ;;		_FRAME_SoftwareVersion
   958 ;;		_LED_Error
   959 ;;		___awdiv
   960 ;; This function is called by:
   961 ;;		_TRM_DataTransmition
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text2
   966  0005AA                     __ptext2:
   967                           	opt callstack 0
   968  0005AA                     _FRAME_HandleCanFrame:
   969                           	opt callstack 22
   970                           
   971                           ;FRAME.c: 650: void FRAME_HandleCanFrame(mID * message);FRAME.c: 651: {;FRAME.c: 652:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   972                           
   973                           ;incstack = 0
   974  0005AA  EE20 F006          	lfsr	2,6
   975  0005AE  5012               	movf	FRAME_HandleCanFrame@message,w,c
   976  0005B0  26D9               	addwf	fsr2l,f,c
   977  0005B2  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
   978  0005B4  22DA               	addwfc	fsr2h,f,c
   979  0005B6  50DF               	movf	indf2,w,c
   980  0005B8  6E14               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   981  0005BA  5014               	movf	??_FRAME_HandleCanFrame,w,c
   982  0005BC  6E06               	movwf	___awdiv@dividend,c
   983  0005BE  6A07               	clrf	___awdiv@dividend+1,c
   984  0005C0  0E00               	movlw	0
   985  0005C2  6E09               	movwf	___awdiv@divisor+1,c
   986  0005C4  0E04               	movlw	4
   987  0005C6  6E08               	movwf	___awdiv@divisor,c
   988  0005C8  EC9D  F008         	call	___awdiv	;wreg free
   989  0005CC  5006               	movf	?___awdiv,w,c
   990  0005CE  6E1A               	movwf	FRAME_HandleCanFrame@identyfikator,c
   991                           
   992                           ;FRAME.c: 655:     if(identyfikator != 0x01)
   993  0005D0  041A               	decf	FRAME_HandleCanFrame@identyfikator,w,c
   994  0005D2  B4D8               	btfsc	status,2,c
   995  0005D4  D074               	goto	l4644
   996                           
   997                           ;FRAME.c: 656:     {;FRAME.c: 657:         WORD ident = identyfikator;
   998  0005D6  C01A  F018         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
   999  0005DA  6A19               	clrf	FRAME_HandleCanFrame@ident+1,c
  1000  0005DC  D070               	goto	l4644
  1001  0005DE                     l4614:
  1002                           
  1003                           ;FRAME.c: 664:             FRAME_SensorExcitationStatus(message);
  1004  0005DE  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1005  0005E2  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1006  0005E6  ECDE  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
  1007                           
  1008                           ;FRAME.c: 665:             break;
  1009  0005EA  D09E               	goto	l4646
  1010  0005EC                     l4616:
  1011                           
  1012                           ;FRAME.c: 667:             FRAME_AccelerometerStatus(message);
  1013  0005EC  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1014  0005F0  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1015  0005F4  EC58  F009         	call	_FRAME_AccelerometerStatus	;wreg free
  1016                           
  1017                           ;FRAME.c: 668:             break;
  1018  0005F8  D097               	goto	l4646
  1019  0005FA                     l4618:
  1020                           
  1021                           ;FRAME.c: 670:             FRAME_ExcitationValue(message);
  1022  0005FA  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1023  0005FE  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1024  000602  ECBE  F00B         	call	_FRAME_ExcitationValue	;wreg free
  1025                           
  1026                           ;FRAME.c: 671:             break;
  1027  000606  D090               	goto	l4646
  1028  000608                     l4620:
  1029                           
  1030                           ;FRAME.c: 673:             FRAME_ExcitationMultiplier(message);
  1031  000608  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1032  00060C  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1033  000610  EC0E  F00B         	call	_FRAME_ExcitationMultiplier	;wreg free
  1034                           
  1035                           ;FRAME.c: 674:             break;
  1036  000614  D089               	goto	l4646
  1037  000616                     l4622:
  1038                           
  1039                           ;FRAME.c: 676:             FRAME_AveragingTimes(message);
  1040  000616  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1041  00061A  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1042  00061E  EC0F  F00C         	call	_FRAME_AveragingTimes	;wreg free
  1043                           
  1044                           ;FRAME.c: 677:             break;
  1045  000622  D082               	goto	l4646
  1046  000624                     l4624:
  1047                           
  1048                           ;FRAME.c: 679:             FRAME_AxisStatus(message);
  1049  000624  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1050  000628  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1051  00062C  ECF4  F00B         	call	_FRAME_AxisStatus	;wreg free
  1052                           
  1053                           ;FRAME.c: 680:             break;
  1054  000630  D07B               	goto	l4646
  1055  000632                     l4626:
  1056                           
  1057                           ;FRAME.c: 682:             FRAME_DeviceReset(message);
  1058  000632  C012  F00F         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1059  000636  C013  F010         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1060  00063A  EC3A  F005         	call	_FRAME_DeviceReset	;wreg free
  1061                           
  1062                           ;FRAME.c: 683:             break;
  1063  00063E  D074               	goto	l4646
  1064  000640                     l4628:
  1065                           
  1066                           ;FRAME.c: 685:             FRAME_Plot(message);
  1067  000640  C012  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1068  000644  C013  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1069  000648  ECB9  F00A         	call	_FRAME_Plot	;wreg free
  1070                           
  1071                           ;FRAME.c: 686:             break;
  1072  00064C  D06D               	goto	l4646
  1073  00064E                     l4630:
  1074                           
  1075                           ;FRAME.c: 688:             FRAME_MapPosition(message);
  1076  00064E  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1077  000652  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1078  000656  EC6B  F00D         	call	_FRAME_MapPosition	;wreg free
  1079                           
  1080                           ;FRAME.c: 689:             break;
  1081  00065A  D066               	goto	l4646
  1082  00065C                     l4632:
  1083                           
  1084                           ;FRAME.c: 691:             FRAME_SoftwareVersion(message);
  1085  00065C  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1086  000660  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1087  000664  ECCA  F009         	call	_FRAME_SoftwareVersion	;wreg free
  1088                           
  1089                           ;FRAME.c: 692:             break;
  1090  000668  D05F               	goto	l4646
  1091  00066A                     l4634:
  1092                           
  1093                           ;FRAME.c: 695:             FRAME_AnalogValue(message, identyfikator - 0x0C);
  1094  00066A  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1095  00066E  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1096  000672  0EF4               	movlw	244
  1097  000674  241A               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1098  000676  6E08               	movwf	FRAME_AnalogValue@set,c
  1099  000678  6A09               	clrf	FRAME_AnalogValue@set+1,c
  1100  00067A  0EFF               	movlw	255
  1101  00067C  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
  1102  00067E  EC6C  F00D         	call	_FRAME_AnalogValue	;wreg free
  1103                           
  1104                           ;FRAME.c: 696:             break;
  1105  000682  D052               	goto	l4646
  1106  000684                     l4636:
  1107                           
  1108                           ;FRAME.c: 698:             FRAME_PrzypisanieDokarty(message);
  1109  000684  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1110  000688  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1111  00068C  EC03  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1112                           
  1113                           ;FRAME.c: 699:             break;
  1114  000690  D04B               	goto	l4646
  1115  000692                     l4638:
  1116                           
  1117                           ;FRAME.c: 701:             FRAME_AdressOfNeighbors(message,0x10);
  1118  000692  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1119  000696  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1120  00069A  0E00               	movlw	0
  1121  00069C  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1122  00069E  0E10               	movlw	16
  1123  0006A0  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1124  0006A2  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1125                           
  1126                           ;FRAME.c: 702:             break;
  1127  0006A6  D040               	goto	l4646
  1128  0006A8                     l4640:
  1129                           
  1130                           ;FRAME.c: 704:             FRAME_AdressOfNeighbors(message,0x11);
  1131  0006A8  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1132  0006AC  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1133  0006B0  0E00               	movlw	0
  1134  0006B2  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1135  0006B4  0E11               	movlw	17
  1136  0006B6  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1137  0006B8  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1138                           
  1139                           ;FRAME.c: 705:             break;
  1140  0006BC  D035               	goto	l4646
  1141  0006BE                     l4644:
  1142  0006BE  501A               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1143  0006C0  6E14               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1144  0006C2  6A15               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1145                           
  1146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1147                           ; Switch size 1, requested type "simple"
  1148                           ; Number of cases is 1, Range of values is 0 to 0
  1149                           ; switch strategies available:
  1150                           ; Name         Instructions Cycles
  1151                           ; simple_byte            4     3 (average)
  1152                           ;	Chosen strategy is simple_byte
  1153  0006C4  5015               	movf	??_FRAME_HandleCanFrame+1,w,c
  1154  0006C6  0A00               	xorlw	0	; case 0
  1155  0006C8  A4D8               	btfss	status,2,c
  1156  0006CA  D02E               	goto	l4646
  1157                           
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 15, Range of values is 1 to 17
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte           46    24 (average)
  1163                           ;	Chosen strategy is simple_byte
  1164  0006CC  5014               	movf	??_FRAME_HandleCanFrame,w,c
  1165  0006CE  0A01               	xorlw	1	; case 1
  1166  0006D0  B4D8               	btfsc	status,2,c
  1167  0006D2  D785               	goto	l4614
  1168  0006D4  0A03               	xorlw	3	; case 2
  1169  0006D6  B4D8               	btfsc	status,2,c
  1170  0006D8  D789               	goto	l4616
  1171  0006DA  0A01               	xorlw	1	; case 3
  1172  0006DC  B4D8               	btfsc	status,2,c
  1173  0006DE  D78D               	goto	l4618
  1174  0006E0  0A07               	xorlw	7	; case 4
  1175  0006E2  B4D8               	btfsc	status,2,c
  1176  0006E4  D791               	goto	l4620
  1177  0006E6  0A01               	xorlw	1	; case 5
  1178  0006E8  B4D8               	btfsc	status,2,c
  1179  0006EA  D795               	goto	l4622
  1180  0006EC  0A03               	xorlw	3	; case 6
  1181  0006EE  B4D8               	btfsc	status,2,c
  1182  0006F0  D799               	goto	l4624
  1183  0006F2  0A01               	xorlw	1	; case 7
  1184  0006F4  B4D8               	btfsc	status,2,c
  1185  0006F6  D79D               	goto	l4626
  1186  0006F8  0A0E               	xorlw	14	; case 9
  1187  0006FA  B4D8               	btfsc	status,2,c
  1188  0006FC  D7A1               	goto	l4628
  1189  0006FE  0A03               	xorlw	3	; case 10
  1190  000700  B4D8               	btfsc	status,2,c
  1191  000702  D7A5               	goto	l4630
  1192  000704  0A01               	xorlw	1	; case 11
  1193  000706  B4D8               	btfsc	status,2,c
  1194  000708  D7A9               	goto	l4632
  1195  00070A  0A07               	xorlw	7	; case 12
  1196  00070C  B4D8               	btfsc	status,2,c
  1197  00070E  D7AD               	goto	l4634
  1198  000710  0A01               	xorlw	1	; case 13
  1199  000712  B4D8               	btfsc	status,2,c
  1200  000714  D7AA               	goto	l4634
  1201  000716  0A02               	xorlw	2	; case 15
  1202  000718  B4D8               	btfsc	status,2,c
  1203  00071A  D7B4               	goto	l4636
  1204  00071C  0A1F               	xorlw	31	; case 16
  1205  00071E  B4D8               	btfsc	status,2,c
  1206  000720  D7B8               	goto	l4638
  1207  000722  0A01               	xorlw	1	; case 17
  1208  000724  B4D8               	btfsc	status,2,c
  1209  000726  D7C0               	goto	l4640
  1210  000728                     l4646:
  1211                           
  1212                           ;FRAME.c: 714:     if(message->message_type == 0x02)
  1213  000728  EE20 F001          	lfsr	2,1
  1214  00072C  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1215  00072E  26D9               	addwf	fsr2l,f,c
  1216  000730  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1217  000732  22DA               	addwfc	fsr2h,f,c
  1218  000734  0E02               	movlw	2
  1219  000736  18DE               	xorwf	postinc2,w,c
  1220  000738  A4D8               	btfss	status,2,c
  1221  00073A  0012               	return	
  1222                           
  1223                           ;FRAME.c: 715:     {;FRAME.c: 717:         message->frame_type = 0x03;
  1224  00073C  EE20 F002          	lfsr	2,2
  1225  000740  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1226  000742  26D9               	addwf	fsr2l,f,c
  1227  000744  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1228  000746  22DA               	addwfc	fsr2h,f,c
  1229  000748  0E03               	movlw	3
  1230  00074A  6EDF               	movwf	indf2,c
  1231                           
  1232                           ;FRAME.c: 718:         message->message_type = 0x01;
  1233  00074C  EE20 F001          	lfsr	2,1
  1234  000750  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1235  000752  26D9               	addwf	fsr2l,f,c
  1236  000754  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1237  000756  22DA               	addwfc	fsr2h,f,c
  1238  000758  0E01               	movlw	1
  1239  00075A  6EDF               	movwf	indf2,c
  1240                           
  1241                           ;FRAME.c: 719:         message->id.Val = 0;
  1242  00075C  EE20 F004          	lfsr	2,4
  1243  000760  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1244  000762  26D9               	addwf	fsr2l,f,c
  1245  000764  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1246  000766  22DA               	addwfc	fsr2h,f,c
  1247  000768  6ADE               	clrf	postinc2,c
  1248  00076A  6ADE               	clrf	postinc2,c
  1249  00076C  6ADE               	clrf	postinc2,c
  1250  00076E  6ADD               	clrf	postdec2,c
  1251                           
  1252                           ;FRAME.c: 721:         message->id.v[2] = identyfikator*4;
  1253  000770  501A               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1254  000772  0D04               	mullw	4
  1255  000774  EE20 F006          	lfsr	2,6
  1256  000778  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1257  00077A  26D9               	addwf	fsr2l,f,c
  1258  00077C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1259  00077E  22DA               	addwfc	fsr2h,f,c
  1260  000780  CFF3 FFDF          	movff	prodl,indf2
  1261                           
  1262                           ;FRAME.c: 722:         CAN_GenID(message,identyfikator);
  1263  000784  C012  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1264  000788  C013  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1265  00078C  C01A  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1266  000790  EC1C  F009         	call	_CAN_GenID	;wreg free
  1267                           
  1268                           ;FRAME.c: 723:         CAN_SendFrame(message);
  1269  000794  C012  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1270  000798  C013  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1271  00079C  ECD8  F003         	call	_CAN_SendFrame	;wreg free
  1272                           
  1273                           ;FRAME.c: 734:        while(RXB0CONbits.FILHIT3)
  1274  0007A0  D004               	goto	l695
  1275  0007A2                     l696:
  1276                           
  1277                           ;FRAME.c: 735:        {;FRAME.c: 736:            if(TXB0CONbits.TXERR == 1){
  1278  0007A2  010F               	movlb	15	; () banked
  1279  0007A4  B940               	btfsc	64,4,b	;volatile
  1280                           
  1281                           ; BSR set to: 15
  1282                           ;FRAME.c: 737:                LED_Error();
  1283  0007A6  ECEF  F00C         	call	_LED_Error	;wreg free
  1284  0007AA                     l695:
  1285                           
  1286                           ;FRAME.c: 734:        while(RXB0CONbits.FILHIT3)
  1287  0007AA  A660               	btfss	3936,3,c	;volatile
  1288  0007AC  0012               	return	
  1289  0007AE  D7F9               	goto	l696
  1290  0007B0                     __end_of_FRAME_HandleCanFrame:
  1291                           	opt callstack 0
  1292                           
  1293 ;; *************** function _LED_Error *****************
  1294 ;; Defined at:
  1295 ;;		line 37 in file "LED.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  2  363[None  ] unsigned int 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    4
  1316 ;; This function calls:
  1317 ;;		_LED_Control
  1318 ;; This function is called by:
  1319 ;;		_FRAME_HandleCanFrame
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text3
  1324  0019DE                     __ptext3:
  1325                           	opt callstack 0
  1326  0019DE                     _LED_Error:
  1327                           	opt callstack 24
  1328                           
  1329                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1330                           
  1331                           ;incstack = 0
  1332  0019DE  0E02               	movlw	2
  1333  0019E0  6E07               	movwf	LED_Control@diode+1,c
  1334  0019E2  0EAA               	movlw	170
  1335  0019E4  6E06               	movwf	LED_Control@diode,c
  1336  0019E6  0E00               	movlw	0
  1337  0019E8  EC91  F004         	call	_LED_Control
  1338                           
  1339                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1340  0019EC  0E00               	movlw	0
  1341  0019EE  6E07               	movwf	LED_Control@diode+1,c
  1342  0019F0  0E00               	movlw	0
  1343  0019F2  6E06               	movwf	LED_Control@diode,c
  1344  0019F4  0E01               	movlw	1
  1345  0019F6  EC91  F004         	call	_LED_Control
  1346  0019FA  0012               	return		;funcret
  1347  0019FC                     __end_of_LED_Error:
  1348                           	opt callstack 0
  1349                           
  1350 ;; *************** function _FRAME_SoftwareVersion *****************
  1351 ;; Defined at:
  1352 ;;		line 484 in file "FRAME.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  message         2    5[COMRAM] PTR struct .
  1355 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1370 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1371 ;;Total ram usage:        3 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    3
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_FRAME_HandleCanFrame
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text4
  1382  001394                     __ptext4:
  1383                           	opt callstack 0
  1384  001394                     _FRAME_SoftwareVersion:
  1385                           	opt callstack 25
  1386                           
  1387                           ;FRAME.c: 484: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 485: {;FRAME.c: 
      +                          487:     if(message->message_type == 0x02)
  1388                           
  1389                           ;incstack = 0
  1390  001394  EE20 F001          	lfsr	2,1
  1391  001398  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1392  00139A  26D9               	addwf	fsr2l,f,c
  1393  00139C  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1394  00139E  22DA               	addwfc	fsr2h,f,c
  1395  0013A0  0E02               	movlw	2
  1396  0013A2  18DE               	xorwf	postinc2,w,c
  1397  0013A4  A4D8               	btfss	status,2,c
  1398  0013A6  0012               	return	
  1399                           
  1400                           ;FRAME.c: 488:     {;FRAME.c: 489:         message->data_length = 4;
  1401  0013A8  EE20 F010          	lfsr	2,16
  1402  0013AC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1403  0013AE  26D9               	addwf	fsr2l,f,c
  1404  0013B0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1405  0013B2  22DA               	addwfc	fsr2h,f,c
  1406  0013B4  0E04               	movlw	4
  1407  0013B6  6EDF               	movwf	indf2,c
  1408                           
  1409                           ;FRAME.c: 490:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1410  0013B8  EE20 F008          	lfsr	2,8
  1411  0013BC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1412  0013BE  26D9               	addwf	fsr2l,f,c
  1413  0013C0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1414  0013C2  22DA               	addwfc	fsr2h,f,c
  1415  0013C4  5005               	movf	5,w,c
  1416  0013C6  6EDF               	movwf	indf2,c
  1417                           
  1418                           ;FRAME.c: 491:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1419  0013C8  EE20 F009          	lfsr	2,9
  1420  0013CC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1421  0013CE  26D9               	addwf	fsr2l,f,c
  1422  0013D0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1423  0013D2  22DA               	addwfc	fsr2h,f,c
  1424  0013D4  C004 FFDF          	movff	4,indf2
  1425                           
  1426                           ;FRAME.c: 492:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1427  0013D8  EE20 F00A          	lfsr	2,10
  1428  0013DC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1429  0013DE  26D9               	addwf	fsr2l,f,c
  1430  0013E0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1431  0013E2  22DA               	addwfc	fsr2h,f,c
  1432  0013E4  500B               	movf	11,w,c
  1433  0013E6  6EDF               	movwf	indf2,c
  1434                           
  1435                           ;FRAME.c: 493:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1436  0013E8  EE20 F00B          	lfsr	2,11
  1437  0013EC  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1438  0013EE  26D9               	addwf	fsr2l,f,c
  1439  0013F0  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1440  0013F2  22DA               	addwfc	fsr2h,f,c
  1441  0013F4  C00A FFDF          	movff	10,indf2
  1442                           
  1443                           ;FRAME.c: 494:     }
  1444  0013F8  0012               	return		;funcret
  1445  0013FA                     __end_of_FRAME_SoftwareVersion:
  1446                           	opt callstack 0
  1447                           
  1448 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1449 ;; Defined at:
  1450 ;;		line 47 in file "FRAME.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  message         2    7[COMRAM] PTR struct .
  1453 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  tru             2   11[COMRAM] unsigned int 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1468 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1469 ;;Total ram usage:        6 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    4
  1472 ;; This function calls:
  1473 ;;		_IsInNeighbors
  1474 ;;		_LOCK_Get
  1475 ;;		_LOCK_Set
  1476 ;;		_MOC_Aktualna_Temperatura
  1477 ;;		_MOC_Frame_Counter
  1478 ;;		_MOC_NOTWORK
  1479 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1480 ;; This function is called by:
  1481 ;;		_FRAME_HandleCanFrame
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text5
  1486  000BBC                     __ptext5:
  1487                           	opt callstack 0
  1488  000BBC                     _FRAME_SensorExcitationStatus:
  1489                           	opt callstack 24
  1490                           
  1491                           ;FRAME.c: 47: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 48: {;FRAM
      +                          E.c: 50:     static UINT statwect = 0b00000000;;FRAME.c: 51:     if(message->message_typ
      +                          e == 0x02)
  1492                           
  1493                           ;incstack = 0
  1494  000BBC  EE20 F001          	lfsr	2,1
  1495  000BC0  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1496  000BC2  26D9               	addwf	fsr2l,f,c
  1497  000BC4  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1498  000BC6  22DA               	addwfc	fsr2h,f,c
  1499  000BC8  0E02               	movlw	2
  1500  000BCA  18DE               	xorwf	postinc2,w,c
  1501  000BCC  A4D8               	btfss	status,2,c
  1502  000BCE  D047               	goto	l4264
  1503                           
  1504                           ;FRAME.c: 52:     {;FRAME.c: 53:         message->data_length = 6;
  1505  000BD0  EE20 F010          	lfsr	2,16
  1506  000BD4  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1507  000BD6  26D9               	addwf	fsr2l,f,c
  1508  000BD8  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1509  000BDA  22DA               	addwfc	fsr2h,f,c
  1510  000BDC  0E06               	movlw	6
  1511  000BDE  6EDF               	movwf	indf2,c
  1512                           
  1513                           ;FRAME.c: 59:         message->data[0] = LOCK_Get();
  1514  000BE0  EE20 F008          	lfsr	2,8
  1515  000BE4  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1516  000BE6  26D9               	addwf	fsr2l,f,c
  1517  000BE8  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1518  000BEA  22DA               	addwfc	fsr2h,f,c
  1519  000BEC  EC69  F00D         	call	_LOCK_Get	;wreg free
  1520  000BF0  6EDF               	movwf	indf2,c
  1521                           
  1522                           ;FRAME.c: 60:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1523  000BF2  EE20 F009          	lfsr	2,9
  1524  000BF6  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1525  000BF8  26D9               	addwf	fsr2l,f,c
  1526  000BFA  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1527  000BFC  22DA               	addwfc	fsr2h,f,c
  1528  000BFE  EC31  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1529  000C02  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1530  000C06  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1531  000C08  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1532  000C0A  6EDF               	movwf	indf2,c
  1533                           
  1534                           ;FRAME.c: 61:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1535  000C0C  EE20 F00A          	lfsr	2,10
  1536  000C10  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1537  000C12  26D9               	addwf	fsr2l,f,c
  1538  000C14  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1539  000C16  22DA               	addwfc	fsr2h,f,c
  1540  000C18  EC31  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1541  000C1C  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1542  000C1E  6EDF               	movwf	indf2,c
  1543                           
  1544                           ;FRAME.c: 62:         message->data[3] = MOC_Frame_Counter();
  1545  000C20  EE20 F00B          	lfsr	2,11
  1546  000C24  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1547  000C26  26D9               	addwf	fsr2l,f,c
  1548  000C28  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1549  000C2A  22DA               	addwfc	fsr2h,f,c
  1550  000C2C  EC1D  F00D         	call	_MOC_Frame_Counter	;wreg free
  1551  000C30  5006               	movf	?_MOC_Frame_Counter,w,c
  1552  000C32  6EDF               	movwf	indf2,c
  1553                           
  1554                           ;FRAME.c: 63:         message->data[4] = MOC_Aktualna_Temperatura();
  1555  000C34  EE20 F00C          	lfsr	2,12
  1556  000C38  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1557  000C3A  26D9               	addwf	fsr2l,f,c
  1558  000C3C  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1559  000C3E  22DA               	addwfc	fsr2h,f,c
  1560  000C40  EC36  F00D         	call	_MOC_Aktualna_Temperatura	;wreg free
  1561  000C44  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1562  000C46  6EDF               	movwf	indf2,c
  1563                           
  1564                           ;FRAME.c: 64:         message->data[5] = MOC_NOTWORK();
  1565  000C48  EE20 F00D          	lfsr	2,13
  1566  000C4C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1567  000C4E  26D9               	addwf	fsr2l,f,c
  1568  000C50  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1569  000C52  22DA               	addwfc	fsr2h,f,c
  1570  000C54  EC5E  F00D         	call	_MOC_NOTWORK	;wreg free
  1571  000C58  5006               	movf	?_MOC_NOTWORK,w,c
  1572  000C5A  6EDF               	movwf	indf2,c
  1573                           
  1574                           ;FRAME.c: 74:     }
  1575  000C5C  0012               	return	
  1576  000C5E                     l4264:
  1577                           
  1578                           ;FRAME.c: 76:     {;FRAME.c: 78:         UINT tru = IsInNeighbors(message->id.w[0]);
  1579  000C5E  EE20 F004          	lfsr	2,4
  1580  000C62  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1581  000C64  26D9               	addwf	fsr2l,f,c
  1582  000C66  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1583  000C68  22DA               	addwfc	fsr2h,f,c
  1584  000C6A  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1585  000C6E  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1586  000C72  EC46  F007         	call	_IsInNeighbors	;wreg free
  1587  000C76  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1588  000C7A  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1589                           
  1590                           ;FRAME.c: 81:         if(message->data[0]==0)
  1591  000C7E  EE20 F008          	lfsr	2,8
  1592  000C82  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1593  000C84  26D9               	addwf	fsr2l,f,c
  1594  000C86  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1595  000C88  22DA               	addwfc	fsr2h,f,c
  1596  000C8A  50DF               	movf	indf2,w,c
  1597  000C8C  A4D8               	btfss	status,2,c
  1598  000C8E  D00A               	goto	l4270
  1599                           
  1600                           ;FRAME.c: 82:         {;FRAME.c: 84:             statwect = statwect &( ~tru );
  1601  000C90  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1602  000C92  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1603  000C94  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1604  000C96  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1605  000C98  5032               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1606  000C9A  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1607  000C9C  6E32               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1608  000C9E  5033               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1609  000CA0  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1610  000CA2  D005               	goto	L1
  1611  000CA4                     l4270:
  1612                           
  1613                           ;FRAME.c: 87:         {;FRAME.c: 88:             statwect = statwect| tru;
  1614  000CA4  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1615  000CA6  1032               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1616  000CA8  6E32               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1617  000CAA  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1618  000CAC  1033               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1619  000CAE                     L1:
  1620  000CAE  6E33               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1621                           
  1622                           ;FRAME.c: 91:         if(statwect>0)
  1623                           
  1624                           ;FRAME.c: 89:         }
  1625  000CB0  5032               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1626  000CB2  1033               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1627  000CB4  B4D8               	btfsc	status,2,c
  1628  000CB6  D004               	goto	l4274
  1629                           
  1630                           ;FRAME.c: 92:         {;FRAME.c: 93:         LOCK_Set(1);
  1631  000CB8  0E01               	movlw	1
  1632  000CBA  EC62  F00D         	call	_LOCK_Set
  1633                           
  1634                           ;FRAME.c: 94:         }
  1635  000CBE  0012               	return	
  1636  000CC0                     l4274:
  1637                           
  1638                           ;FRAME.c: 96:         {;FRAME.c: 97:         LOCK_Set(0);
  1639  000CC0  0E00               	movlw	0
  1640  000CC2  EC62  F00D         	call	_LOCK_Set
  1641  000CC6  0012               	return		;funcret
  1642  000CC8                     __end_of_FRAME_SensorExcitationStatus:
  1643                           	opt callstack 0
  1644                           
  1645 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1646 ;; Defined at:
  1647 ;;		line 33 in file "MOC_Funct.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  2    5[COMRAM] unsigned int 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_FRAME_SensorExcitationStatus
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text6
  1676  001A62                     __ptext6:
  1677                           	opt callstack 0
  1678  001A62                     _MOC_Wynikowa_wartosc_roznicowa:
  1679                           	opt callstack 24
  1680                           
  1681                           ;MOC_Funct.c: 35:     return 0x0220;
  1682                           
  1683                           ;incstack = 0
  1684  001A62  0E02               	movlw	2
  1685  001A64  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1686  001A66  0E20               	movlw	32
  1687  001A68  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1688  001A6A  0012               	return		;funcret
  1689  001A6C                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1690                           	opt callstack 0
  1691                           
  1692 ;; *************** function _MOC_NOTWORK *****************
  1693 ;; Defined at:
  1694 ;;		line 47 in file "MOC_Funct.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  2    5[COMRAM] unsigned int 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1712 ;;Total ram usage:        2 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    3
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_FRAME_SensorExcitationStatus
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text7
  1723  001ABC                     __ptext7:
  1724                           	opt callstack 0
  1725  001ABC                     _MOC_NOTWORK:
  1726                           	opt callstack 24
  1727                           
  1728                           ;MOC_Funct.c: 49:     return 0xFF;
  1729                           
  1730                           ;incstack = 0
  1731  001ABC  0E00               	movlw	0
  1732  001ABE  6E07               	movwf	?_MOC_NOTWORK+1,c
  1733  001AC0  6806               	setf	?_MOC_NOTWORK,c
  1734  001AC2  0012               	return		;funcret
  1735  001AC4                     __end_of_MOC_NOTWORK:
  1736                           	opt callstack 0
  1737                           
  1738 ;; *************** function _MOC_Frame_Counter *****************
  1739 ;; Defined at:
  1740 ;;		line 38 in file "MOC_Funct.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  2    5[COMRAM] unsigned int 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1758 ;;Total ram usage:        2 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    3
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_FRAME_SensorExcitationStatus
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text8
  1769  001A3A                     __ptext8:
  1770                           	opt callstack 0
  1771  001A3A                     _MOC_Frame_Counter:
  1772                           	opt callstack 24
  1773                           
  1774                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1775                           
  1776                           ;incstack = 0
  1777  001A3A  504E               	movf	MOC_Frame_Counter@zeta,w,c
  1778  001A3C  6E06               	movwf	?_MOC_Frame_Counter,c
  1779  001A3E  504F               	movf	MOC_Frame_Counter@zeta+1,w,c
  1780  001A40  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1781  001A42  4A4E               	infsnz	MOC_Frame_Counter@zeta,f,c
  1782  001A44  2A4F               	incf	MOC_Frame_Counter@zeta+1,f,c
  1783  001A46  0012               	return		;funcret
  1784  001A48                     __end_of_MOC_Frame_Counter:
  1785                           	opt callstack 0
  1786                           
  1787 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1788 ;; Defined at:
  1789 ;;		line 43 in file "MOC_Funct.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  2    5[COMRAM] unsigned int 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    3
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_FRAME_SensorExcitationStatus
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text9
  1818  001A6C                     __ptext9:
  1819                           	opt callstack 0
  1820  001A6C                     _MOC_Aktualna_Temperatura:
  1821                           	opt callstack 24
  1822                           
  1823                           ;MOC_Funct.c: 45:     return 0x1B;
  1824                           
  1825                           ;incstack = 0
  1826  001A6C  0E00               	movlw	0
  1827  001A6E  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1828  001A70  0E1B               	movlw	27
  1829  001A72  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1830  001A74  0012               	return		;funcret
  1831  001A76                     __end_of_MOC_Aktualna_Temperatura:
  1832                           	opt callstack 0
  1833                           
  1834 ;; *************** function _LOCK_Set *****************
  1835 ;; Defined at:
  1836 ;;		line 52 in file "LED.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  k               1    wreg     unsigned char 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  k               1    5[COMRAM] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;Total ram usage:        1 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    3
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_FRAME_SensorExcitationStatus
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text10
  1865  001AC4                     __ptext10:
  1866                           	opt callstack 0
  1867  001AC4                     _LOCK_Set:
  1868                           	opt callstack 24
  1869                           
  1870                           ;incstack = 0
  1871                           ;LOCK_Set@k stored from wreg
  1872  001AC4  6E06               	movwf	LOCK_Set@k,c
  1873                           
  1874                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1875  001AC6  C006  F03B         	movff	LOCK_Set@k,_LOCK
  1876  001ACA  0012               	return		;funcret
  1877  001ACC                     __end_of_LOCK_Set:
  1878                           	opt callstack 0
  1879                           
  1880 ;; *************** function _LOCK_Get *****************
  1881 ;; Defined at:
  1882 ;;		line 57 in file "LED.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      unsigned char 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    3
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_FRAME_SensorExcitationStatus
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text11
  1911  001AD2                     __ptext11:
  1912                           	opt callstack 0
  1913  001AD2                     _LOCK_Get:
  1914                           	opt callstack 24
  1915                           
  1916                           ;LED.c: 59:     return LOCK;
  1917                           
  1918                           ;incstack = 0
  1919  001AD2  503B               	movf	_LOCK,w,c
  1920  001AD4  0012               	return		;funcret
  1921  001AD6                     __end_of_LOCK_Get:
  1922                           	opt callstack 0
  1923                           
  1924 ;; *************** function _IsInNeighbors *****************
  1925 ;; Defined at:
  1926 ;;		line 102 in file "FRAME.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  message_adre    2    5[COMRAM] unsigned int 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  i               2    0        unsigned short 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  2    5[COMRAM] unsigned int 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1943 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;Total ram usage:        2 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    3
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_FRAME_SensorExcitationStatus
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text12
  1955  000E8C                     __ptext12:
  1956                           	opt callstack 0
  1957  000E8C                     _IsInNeighbors:
  1958                           	opt callstack 24
  1959                           
  1960                           ;FRAME.c: 102: UINT IsInNeighbors(UINT message_adress);FRAME.c: 103: {;FRAME.c: 104:    
      +                           WORD i;;FRAME.c: 106:     if(NeightAdress1==message_adress)
  1961                           
  1962                           ;incstack = 0
  1963  000E8C  5006               	movf	IsInNeighbors@message_adress,w,c
  1964  000E8E  184C               	xorwf	_NeightAdress1,w,c	;volatile
  1965  000E90  E109               	bnz	l4030
  1966  000E92  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1967  000E94  184D               	xorwf	_NeightAdress1+1,w,c	;volatile
  1968  000E96  A4D8               	btfss	status,2,c
  1969  000E98  D005               	goto	l4030
  1970                           
  1971                           ;FRAME.c: 107:     {;FRAME.c: 108:         return 0b1;
  1972  000E9A  0E00               	movlw	0
  1973  000E9C  6E07               	movwf	?_IsInNeighbors+1,c
  1974  000E9E  0E01               	movlw	1
  1975  000EA0  6E06               	movwf	?_IsInNeighbors,c
  1976  000EA2  0012               	return	
  1977  000EA4                     l4030:
  1978                           
  1979                           ;FRAME.c: 110:     if(NeightAdress2==message_adress)
  1980  000EA4  5006               	movf	IsInNeighbors@message_adress,w,c
  1981  000EA6  1857               	xorwf	_NeightAdress2,w,c	;volatile
  1982  000EA8  E109               	bnz	l4036
  1983  000EAA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1984  000EAC  1858               	xorwf	_NeightAdress2+1,w,c	;volatile
  1985  000EAE  A4D8               	btfss	status,2,c
  1986  000EB0  D005               	goto	l4036
  1987                           
  1988                           ;FRAME.c: 111:     {;FRAME.c: 112:         return 0b10;
  1989  000EB2  0E00               	movlw	0
  1990  000EB4  6E07               	movwf	?_IsInNeighbors+1,c
  1991  000EB6  0E02               	movlw	2
  1992  000EB8  6E06               	movwf	?_IsInNeighbors,c
  1993  000EBA  0012               	return	
  1994  000EBC                     l4036:
  1995                           
  1996                           ;FRAME.c: 114:     if(NeightAdress3==message_adress)
  1997  000EBC  5006               	movf	IsInNeighbors@message_adress,w,c
  1998  000EBE  184A               	xorwf	_NeightAdress3,w,c	;volatile
  1999  000EC0  E109               	bnz	l4042
  2000  000EC2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2001  000EC4  184B               	xorwf	_NeightAdress3+1,w,c	;volatile
  2002  000EC6  A4D8               	btfss	status,2,c
  2003  000EC8  D005               	goto	l4042
  2004                           
  2005                           ;FRAME.c: 115:     {;FRAME.c: 116:         return 0b100;
  2006  000ECA  0E00               	movlw	0
  2007  000ECC  6E07               	movwf	?_IsInNeighbors+1,c
  2008  000ECE  0E04               	movlw	4
  2009  000ED0  6E06               	movwf	?_IsInNeighbors,c
  2010  000ED2  0012               	return	
  2011  000ED4                     l4042:
  2012                           
  2013                           ;FRAME.c: 118:     if(NeightAdress4==message_adress)
  2014  000ED4  5006               	movf	IsInNeighbors@message_adress,w,c
  2015  000ED6  1848               	xorwf	_NeightAdress4,w,c	;volatile
  2016  000ED8  E109               	bnz	l4048
  2017  000EDA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2018  000EDC  1849               	xorwf	_NeightAdress4+1,w,c	;volatile
  2019  000EDE  A4D8               	btfss	status,2,c
  2020  000EE0  D005               	goto	l4048
  2021                           
  2022                           ;FRAME.c: 119:     {;FRAME.c: 120:         return 0b1000;
  2023  000EE2  0E00               	movlw	0
  2024  000EE4  6E07               	movwf	?_IsInNeighbors+1,c
  2025  000EE6  0E08               	movlw	8
  2026  000EE8  6E06               	movwf	?_IsInNeighbors,c
  2027  000EEA  0012               	return	
  2028  000EEC                     l4048:
  2029                           
  2030                           ;FRAME.c: 122:     if(NeightAdress5==message_adress)
  2031  000EEC  5006               	movf	IsInNeighbors@message_adress,w,c
  2032  000EEE  1846               	xorwf	_NeightAdress5,w,c	;volatile
  2033  000EF0  E109               	bnz	l4054
  2034  000EF2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2035  000EF4  1847               	xorwf	_NeightAdress5+1,w,c	;volatile
  2036  000EF6  A4D8               	btfss	status,2,c
  2037  000EF8  D005               	goto	l4054
  2038                           
  2039                           ;FRAME.c: 123:     {;FRAME.c: 124:         return 0b10000;
  2040  000EFA  0E00               	movlw	0
  2041  000EFC  6E07               	movwf	?_IsInNeighbors+1,c
  2042  000EFE  0E10               	movlw	16
  2043  000F00  6E06               	movwf	?_IsInNeighbors,c
  2044  000F02  0012               	return	
  2045  000F04                     l4054:
  2046                           
  2047                           ;FRAME.c: 126:     if(NeightAdress6==message_adress)
  2048  000F04  5006               	movf	IsInNeighbors@message_adress,w,c
  2049  000F06  1844               	xorwf	_NeightAdress6,w,c	;volatile
  2050  000F08  E109               	bnz	l4060
  2051  000F0A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2052  000F0C  1845               	xorwf	_NeightAdress6+1,w,c	;volatile
  2053  000F0E  A4D8               	btfss	status,2,c
  2054  000F10  D005               	goto	l4060
  2055                           
  2056                           ;FRAME.c: 127:     {;FRAME.c: 128:         return 0b100000;
  2057  000F12  0E00               	movlw	0
  2058  000F14  6E07               	movwf	?_IsInNeighbors+1,c
  2059  000F16  0E20               	movlw	32
  2060  000F18  6E06               	movwf	?_IsInNeighbors,c
  2061  000F1A  0012               	return	
  2062  000F1C                     l4060:
  2063                           
  2064                           ;FRAME.c: 130:     if(NeightAdress7==message_adress)
  2065  000F1C  5006               	movf	IsInNeighbors@message_adress,w,c
  2066  000F1E  1842               	xorwf	_NeightAdress7,w,c	;volatile
  2067  000F20  E109               	bnz	l4066
  2068  000F22  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2069  000F24  1843               	xorwf	_NeightAdress7+1,w,c	;volatile
  2070  000F26  A4D8               	btfss	status,2,c
  2071  000F28  D005               	goto	l4066
  2072                           
  2073                           ;FRAME.c: 131:     {;FRAME.c: 132:         return 0b1000000;
  2074  000F2A  0E00               	movlw	0
  2075  000F2C  6E07               	movwf	?_IsInNeighbors+1,c
  2076  000F2E  0E40               	movlw	64
  2077  000F30  6E06               	movwf	?_IsInNeighbors,c
  2078  000F32  0012               	return	
  2079  000F34                     l4066:
  2080                           
  2081                           ;FRAME.c: 134:     if(NeightAdress8==message_adress)
  2082  000F34  5006               	movf	IsInNeighbors@message_adress,w,c
  2083  000F36  1840               	xorwf	_NeightAdress8,w,c	;volatile
  2084  000F38  E109               	bnz	l4072
  2085  000F3A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2086  000F3C  1841               	xorwf	_NeightAdress8+1,w,c	;volatile
  2087  000F3E  A4D8               	btfss	status,2,c
  2088  000F40  D005               	goto	l4072
  2089                           
  2090                           ;FRAME.c: 135:     {;FRAME.c: 136:         return 0b10000000;
  2091  000F42  0E00               	movlw	0
  2092  000F44  6E07               	movwf	?_IsInNeighbors+1,c
  2093  000F46  0E80               	movlw	128
  2094  000F48  6E06               	movwf	?_IsInNeighbors,c
  2095  000F4A  0012               	return	
  2096  000F4C                     l4072:
  2097                           
  2098                           ;FRAME.c: 152:     return 0;
  2099  000F4C  0E00               	movlw	0
  2100  000F4E  6E07               	movwf	?_IsInNeighbors+1,c
  2101  000F50  0E00               	movlw	0
  2102  000F52  6E06               	movwf	?_IsInNeighbors,c
  2103  000F54  0012               	return		;funcret
  2104  000F56                     __end_of_IsInNeighbors:
  2105                           	opt callstack 0
  2106                           
  2107 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2108 ;; Defined at:
  2109 ;;		line 533 in file "FRAME.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  message         2    5[COMRAM] PTR struct .
  2112 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;Total ram usage:        6 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    3
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_FRAME_HandleCanFrame
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text13
  2139  001006                     __ptext13:
  2140                           	opt callstack 0
  2141  001006                     _FRAME_PrzypisanieDokarty:
  2142                           	opt callstack 25
  2143                           
  2144                           ;FRAME.c: 533: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 534: {;FRAME.
      +                          c: 535:     if(message->message_type == 0x02)
  2145                           
  2146                           ;incstack = 0
  2147  001006  EE20 F001          	lfsr	2,1
  2148  00100A  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2149  00100C  26D9               	addwf	fsr2l,f,c
  2150  00100E  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2151  001010  22DA               	addwfc	fsr2h,f,c
  2152  001012  0E02               	movlw	2
  2153  001014  18DE               	xorwf	postinc2,w,c
  2154  001016  A4D8               	btfss	status,2,c
  2155  001018  D021               	goto	l4370
  2156                           
  2157                           ;FRAME.c: 536:     {;FRAME.c: 537:         message->data_length = 3;
  2158  00101A  EE20 F010          	lfsr	2,16
  2159  00101E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2160  001020  26D9               	addwf	fsr2l,f,c
  2161  001022  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2162  001024  22DA               	addwfc	fsr2h,f,c
  2163  001026  0E03               	movlw	3
  2164  001028  6EDF               	movwf	indf2,c
  2165                           
  2166                           ;FRAME.c: 538:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2167  00102A  EE20 F008          	lfsr	2,8
  2168  00102E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2169  001030  26D9               	addwf	fsr2l,f,c
  2170  001032  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2171  001034  22DA               	addwfc	fsr2h,f,c
  2172  001036  0E00               	movlw	0
  2173  001038  6EDF               	movwf	indf2,c
  2174                           
  2175                           ;FRAME.c: 539:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2176  00103A  EE20 F009          	lfsr	2,9
  2177  00103E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2178  001040  26D9               	addwf	fsr2l,f,c
  2179  001042  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2180  001044  22DA               	addwfc	fsr2h,f,c
  2181  001046  C040 FFDF          	movff	64,indf2
  2182                           
  2183                           ;FRAME.c: 540:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2184  00104A  EE20 F00A          	lfsr	2,10
  2185  00104E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2186  001050  26D9               	addwf	fsr2l,f,c
  2187  001052  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2188  001054  22DA               	addwfc	fsr2h,f,c
  2189  001056  C042 FFDF          	movff	66,indf2
  2190                           
  2191                           ;FRAME.c: 542:     }
  2192  00105A  0012               	return	
  2193  00105C                     l4370:
  2194                           
  2195                           ;FRAME.c: 544:     {;FRAME.c: 545:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2196  00105C  EE20 F008          	lfsr	2,8
  2197  001060  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2198  001062  26D9               	addwf	fsr2l,f,c
  2199  001064  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2200  001066  22DA               	addwfc	fsr2h,f,c
  2201  001068  50DF               	movf	indf2,w,c
  2202  00106A  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2203  00106C  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2204  00106E  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2205  001070  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2206  001072  EE20 F009          	lfsr	2,9
  2207  001076  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2208  001078  26D9               	addwf	fsr2l,f,c
  2209  00107A  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2210  00107C  22DA               	addwfc	fsr2h,f,c
  2211  00107E  50DF               	movf	indf2,w,c
  2212  001080  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2213  001082  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2214  001084  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2215  001086  6E40               	movwf	64,c
  2216  001088  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2217  00108A  6E41               	movwf	65,c
  2218                           
  2219                           ;FRAME.c: 546:          Dane->Nr_WeWy = (message->data[2]);
  2220  00108C  EE20 F00A          	lfsr	2,10
  2221  001090  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2222  001092  26D9               	addwf	fsr2l,f,c
  2223  001094  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2224  001096  22DA               	addwfc	fsr2h,f,c
  2225  001098  50DF               	movf	indf2,w,c
  2226  00109A  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2227  00109C  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2228  00109E  6E42               	movwf	66,c
  2229  0010A0  6A43               	clrf	67,c
  2230  0010A2  0012               	return		;funcret
  2231  0010A4                     __end_of_FRAME_PrzypisanieDokarty:
  2232                           	opt callstack 0
  2233                           
  2234 ;; *************** function _FRAME_Plot *****************
  2235 ;; Defined at:
  2236 ;;		line 438 in file "FRAME.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  message         2   12[COMRAM] PTR struct .
  2239 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;Total ram usage:        3 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    4
  2258 ;; This function calls:
  2259 ;;		___lwdiv
  2260 ;; This function is called by:
  2261 ;;		_FRAME_HandleCanFrame
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text14
  2266  001572                     __ptext14:
  2267                           	opt callstack 0
  2268  001572                     _FRAME_Plot:
  2269                           	opt callstack 24
  2270                           
  2271                           ;FRAME.c: 438: static void FRAME_Plot(mID *message);FRAME.c: 439: {;FRAME.c: 441:     if
      +                          (message->message_type == 0x02)
  2272                           
  2273                           ;incstack = 0
  2274  001572  EE20 F001          	lfsr	2,1
  2275  001576  500D               	movf	FRAME_Plot@message,w,c
  2276  001578  26D9               	addwf	fsr2l,f,c
  2277  00157A  500E               	movf	FRAME_Plot@message+1,w,c
  2278  00157C  22DA               	addwfc	fsr2h,f,c
  2279  00157E  0E02               	movlw	2
  2280  001580  18DE               	xorwf	postinc2,w,c
  2281  001582  A4D8               	btfss	status,2,c
  2282  001584  D013               	goto	l4360
  2283                           
  2284                           ;FRAME.c: 442:     {;FRAME.c: 443:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2285  001586  EE20 F008          	lfsr	2,8
  2286  00158A  500D               	movf	FRAME_Plot@message,w,c
  2287  00158C  26D9               	addwf	fsr2l,f,c
  2288  00158E  500E               	movf	FRAME_Plot@message+1,w,c
  2289  001590  22DA               	addwfc	fsr2h,f,c
  2290  001592  C00C F006          	movff	12,___lwdiv@dividend
  2291  001596  C00D F007          	movff	13,___lwdiv@dividend+1
  2292  00159A  0E00               	movlw	0
  2293  00159C  6E09               	movwf	___lwdiv@divisor+1,c
  2294  00159E  0E0A               	movlw	10
  2295  0015A0  6E08               	movwf	___lwdiv@divisor,c
  2296  0015A2  ECE5  F00A         	call	___lwdiv	;wreg free
  2297  0015A6  5006               	movf	?___lwdiv,w,c
  2298  0015A8  6EDF               	movwf	indf2,c
  2299                           
  2300                           ;FRAME.c: 444:     }
  2301  0015AA  0012               	return	
  2302  0015AC                     l4360:
  2303                           
  2304                           ;FRAME.c: 446:     {;FRAME.c: 447:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2305  0015AC  EE20 F008          	lfsr	2,8
  2306  0015B0  500D               	movf	FRAME_Plot@message,w,c
  2307  0015B2  26D9               	addwf	fsr2l,f,c
  2308  0015B4  500E               	movf	FRAME_Plot@message+1,w,c
  2309  0015B6  22DA               	addwfc	fsr2h,f,c
  2310  0015B8  50DF               	movf	indf2,w,c
  2311  0015BA  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2312  0015BC  500F               	movf	??_FRAME_Plot,w,c
  2313  0015BE  0D0A               	mullw	10
  2314  0015C0  CFF3 F00C          	movff	prodl,12
  2315  0015C4  CFF4 F00D          	movff	prodh,13
  2316  0015C8  0012               	return		;funcret
  2317  0015CA                     __end_of_FRAME_Plot:
  2318                           	opt callstack 0
  2319                           
  2320 ;; *************** function _FRAME_MapPosition *****************
  2321 ;; Defined at:
  2322 ;;		line 459 in file "FRAME.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  message         2    5[COMRAM] PTR struct .
  2325 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		None
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;Total ram usage:        2 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    3
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_FRAME_HandleCanFrame
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text15
  2352  001AD6                     __ptext15:
  2353                           	opt callstack 0
  2354  001AD6                     _FRAME_MapPosition:
  2355                           	opt callstack 25
  2356                           
  2357                           ;incstack = 0
  2358  001AD6  0012               	return		;funcret
  2359  001AD8                     __end_of_FRAME_MapPosition:
  2360                           	opt callstack 0
  2361                           
  2362 ;; *************** function _FRAME_ExcitationValue *****************
  2363 ;; Defined at:
  2364 ;;		line 186 in file "FRAME.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  message         2    5[COMRAM] PTR struct .
  2367 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;Total ram usage:        3 bytes
  2384 ;; Hardware stack levels used:    1
  2385 ;; Hardware stack levels required when called:    3
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_FRAME_HandleCanFrame
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text16
  2394  00177C                     __ptext16:
  2395                           	opt callstack 0
  2396  00177C                     _FRAME_ExcitationValue:
  2397                           	opt callstack 25
  2398                           
  2399                           ;FRAME.c: 186: static void FRAME_ExcitationValue(mID *message);FRAME.c: 187: {;FRAME.c: 
      +                          188:     if(message->message_type == 0x02)
  2400                           
  2401                           ;incstack = 0
  2402  00177C  EE20 F001          	lfsr	2,1
  2403  001780  5006               	movf	FRAME_ExcitationValue@message,w,c
  2404  001782  26D9               	addwf	fsr2l,f,c
  2405  001784  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2406  001786  22DA               	addwfc	fsr2h,f,c
  2407  001788  0E02               	movlw	2
  2408  00178A  18DE               	xorwf	postinc2,w,c
  2409  00178C  A4D8               	btfss	status,2,c
  2410  00178E  0012               	return	
  2411                           
  2412                           ;FRAME.c: 189:     {;FRAME.c: 190:         message->data_length = 1;
  2413  001790  EE20 F010          	lfsr	2,16
  2414  001794  5006               	movf	FRAME_ExcitationValue@message,w,c
  2415  001796  26D9               	addwf	fsr2l,f,c
  2416  001798  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2417  00179A  22DA               	addwfc	fsr2h,f,c
  2418  00179C  0E01               	movlw	1
  2419  00179E  6EDF               	movwf	indf2,c
  2420                           
  2421                           ;FRAME.c: 195:         message->data[0] = 0xFF;
  2422  0017A0  EE20 F008          	lfsr	2,8
  2423  0017A4  5006               	movf	FRAME_ExcitationValue@message,w,c
  2424  0017A6  26D9               	addwf	fsr2l,f,c
  2425  0017A8  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2426  0017AA  22DA               	addwfc	fsr2h,f,c
  2427  0017AC  0EFF               	movlw	255
  2428  0017AE  6EDF               	movwf	indf2,c
  2429                           
  2430                           ;FRAME.c: 196:     }
  2431  0017B0  0012               	return		;funcret
  2432  0017B2                     __end_of_FRAME_ExcitationValue:
  2433                           	opt callstack 0
  2434                           
  2435 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2436 ;; Defined at:
  2437 ;;		line 210 in file "FRAME.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  message         2    5[COMRAM] PTR struct .
  2440 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  i               2    8[COMRAM] unsigned short 
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;Total ram usage:        5 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    3
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_FRAME_HandleCanFrame
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text17
  2467  00161C                     __ptext17:
  2468                           	opt callstack 0
  2469  00161C                     _FRAME_ExcitationMultiplier:
  2470                           	opt callstack 25
  2471                           
  2472                           ;FRAME.c: 210: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 211: {;FRAM
      +                          E.c: 212:     WORD i;;FRAME.c: 214:     if(message->message_type == 0x02)
  2473                           
  2474                           ;incstack = 0
  2475  00161C  EE20 F001          	lfsr	2,1
  2476  001620  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2477  001622  26D9               	addwf	fsr2l,f,c
  2478  001624  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2479  001626  22DA               	addwfc	fsr2h,f,c
  2480  001628  0E02               	movlw	2
  2481  00162A  18DE               	xorwf	postinc2,w,c
  2482  00162C  A4D8               	btfss	status,2,c
  2483  00162E  0012               	return	
  2484                           
  2485                           ;FRAME.c: 215:     {;FRAME.c: 216:         message->data_length = 1;
  2486  001630  EE20 F010          	lfsr	2,16
  2487  001634  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2488  001636  26D9               	addwf	fsr2l,f,c
  2489  001638  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2490  00163A  22DA               	addwfc	fsr2h,f,c
  2491  00163C  0E01               	movlw	1
  2492  00163E  6EDF               	movwf	indf2,c
  2493                           
  2494                           ;FRAME.c: 217:         for(i=0; i<3; i++)
  2495  001640  0E00               	movlw	0
  2496  001642  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2497  001644  0E00               	movlw	0
  2498  001646  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2499  001648                     l4302:
  2500                           
  2501                           ;FRAME.c: 218:         {;FRAME.c: 221:         }
  2502  001648  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2503  00164A  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2504  00164C  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2505  00164E  E104               	bnz	u2470
  2506  001650  0E03               	movlw	3
  2507  001652  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2508  001654  A0D8               	btfss	status,0,c
  2509  001656  D7F8               	goto	l4302
  2510  001658                     u2470:
  2511                           
  2512                           ;FRAME.c: 222:         message->data[0] = 0xFF;
  2513  001658  EE20 F008          	lfsr	2,8
  2514  00165C  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2515  00165E  26D9               	addwf	fsr2l,f,c
  2516  001660  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2517  001662  22DA               	addwfc	fsr2h,f,c
  2518  001664  0EFF               	movlw	255
  2519  001666  6EDF               	movwf	indf2,c
  2520                           
  2521                           ;FRAME.c: 223:     }
  2522  001668  0012               	return		;funcret
  2523  00166A                     __end_of_FRAME_ExcitationMultiplier:
  2524                           	opt callstack 0
  2525                           
  2526 ;; *************** function _FRAME_DeviceReset *****************
  2527 ;; Defined at:
  2528 ;;		line 344 in file "FRAME.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  message         2   14[COMRAM] PTR struct .
  2531 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2546 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2547 ;;Total ram usage:        3 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    6
  2550 ;; This function calls:
  2551 ;;		_FRAME_DataUpdateAndChangeOption
  2552 ;;		_WriteDataToEEPROM
  2553 ;; This function is called by:
  2554 ;;		_FRAME_HandleCanFrame
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text18
  2559  000A74                     __ptext18:
  2560                           	opt callstack 0
  2561  000A74                     _FRAME_DeviceReset:
  2562                           	opt callstack 22
  2563                           
  2564                           ;FRAME.c: 344: static void FRAME_DeviceReset(mID *message);FRAME.c: 345: {;FRAME.c: 346:
      +                               if(message->message_type == 0x02)
  2565                           
  2566                           ;incstack = 0
  2567  000A74  EE20 F001          	lfsr	2,1
  2568  000A78  500F               	movf	FRAME_DeviceReset@message,w,c
  2569  000A7A  26D9               	addwf	fsr2l,f,c
  2570  000A7C  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2571  000A7E  22DA               	addwfc	fsr2h,f,c
  2572  000A80  0E02               	movlw	2
  2573  000A82  18DE               	xorwf	postinc2,w,c
  2574  000A84  A4D8               	btfss	status,2,c
  2575  000A86  D057               	goto	l4324
  2576                           
  2577                           ;FRAME.c: 347:     {;FRAME.c: 348:         message->data_length = 1;
  2578  000A88  EE20 F010          	lfsr	2,16
  2579  000A8C  500F               	movf	FRAME_DeviceReset@message,w,c
  2580  000A8E  26D9               	addwf	fsr2l,f,c
  2581  000A90  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2582  000A92  22DA               	addwfc	fsr2h,f,c
  2583  000A94  0E01               	movlw	1
  2584  000A96  6EDF               	movwf	indf2,c
  2585                           
  2586                           ;FRAME.c: 350:         message->data[0] = (RCON>>6) & 0x01;
  2587  000A98  EE20 F008          	lfsr	2,8
  2588  000A9C  500F               	movf	FRAME_DeviceReset@message,w,c
  2589  000A9E  26D9               	addwf	fsr2l,f,c
  2590  000AA0  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2591  000AA2  22DA               	addwfc	fsr2h,f,c
  2592  000AA4  44D0               	rlncf	4048,w,c	;volatile
  2593  000AA6  46E8               	rlncf	wreg,f,c
  2594  000AA8  0B03               	andlw	3
  2595  000AAA  0B01               	andlw	1
  2596  000AAC  6EDF               	movwf	indf2,c
  2597                           
  2598                           ;FRAME.c: 351:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2599  000AAE  EE20 F009          	lfsr	2,9
  2600  000AB2  500F               	movf	FRAME_DeviceReset@message,w,c
  2601  000AB4  26D9               	addwf	fsr2l,f,c
  2602  000AB6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2603  000AB8  22DA               	addwfc	fsr2h,f,c
  2604  000ABA  0100               	movlb	0	; () banked
  2605  000ABC  A9C6               	btfss	_Flagi& (0+255),4,b
  2606  000ABE  D002               	goto	u2510
  2607  000AC0  0E01               	movlw	1
  2608  000AC2  D001               	goto	u2516
  2609  000AC4                     u2510:
  2610  000AC4  0E00               	movlw	0
  2611  000AC6                     u2516:
  2612  000AC6  6EDF               	movwf	indf2,c
  2613                           
  2614                           ;FRAME.c: 352:         message->data[2] = Flagi.pomiarTla;
  2615  000AC8  EE20 F00A          	lfsr	2,10
  2616  000ACC  500F               	movf	FRAME_DeviceReset@message,w,c
  2617  000ACE  26D9               	addwf	fsr2l,f,c
  2618  000AD0  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2619  000AD2  22DA               	addwfc	fsr2h,f,c
  2620  000AD4  A1C6               	btfss	_Flagi& (0+255),0,b
  2621  000AD6  D002               	goto	u2520
  2622  000AD8  0E01               	movlw	1
  2623  000ADA  D001               	goto	u2526
  2624  000ADC                     u2520:
  2625  000ADC  0E00               	movlw	0
  2626  000ADE                     u2526:
  2627  000ADE  6EDF               	movwf	indf2,c
  2628                           
  2629                           ;FRAME.c: 353:         message->data[3] = 0;
  2630  000AE0  EE20 F00B          	lfsr	2,11
  2631  000AE4  500F               	movf	FRAME_DeviceReset@message,w,c
  2632  000AE6  26D9               	addwf	fsr2l,f,c
  2633  000AE8  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2634  000AEA  22DA               	addwfc	fsr2h,f,c
  2635  000AEC  0E00               	movlw	0
  2636  000AEE  6EDF               	movwf	indf2,c
  2637                           
  2638                           ;FRAME.c: 354:         message->data[4] = Dane->rokU16;
  2639  000AF0  EE20 F00C          	lfsr	2,12
  2640  000AF4  500F               	movf	FRAME_DeviceReset@message,w,c
  2641  000AF6  26D9               	addwf	fsr2l,f,c
  2642  000AF8  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2643  000AFA  22DA               	addwfc	fsr2h,f,c
  2644  000AFC  C036 FFDF          	movff	54,indf2
  2645                           
  2646                           ;FRAME.c: 355:         message->data[5] = Dane->miesiacU16;
  2647  000B00  EE20 F00D          	lfsr	2,13
  2648  000B04  500F               	movf	FRAME_DeviceReset@message,w,c
  2649  000B06  26D9               	addwf	fsr2l,f,c
  2650  000B08  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2651  000B0A  22DA               	addwfc	fsr2h,f,c
  2652  000B0C  C038 FFDF          	movff	56,indf2
  2653                           
  2654                           ;FRAME.c: 356:         message->data[6] = Dane->dzienU16;
  2655  000B10  EE20 F00E          	lfsr	2,14
  2656  000B14  500F               	movf	FRAME_DeviceReset@message,w,c
  2657  000B16  26D9               	addwf	fsr2l,f,c
  2658  000B18  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2659  000B1A  22DA               	addwfc	fsr2h,f,c
  2660  000B1C  C03A FFDF          	movff	58,indf2
  2661                           
  2662                           ;FRAME.c: 357:         message->data[7] = Dane->godzinaU16;
  2663  000B20  EE20 F00F          	lfsr	2,15
  2664  000B24  500F               	movf	FRAME_DeviceReset@message,w,c
  2665  000B26  26D9               	addwf	fsr2l,f,c
  2666  000B28  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2667  000B2A  22DA               	addwfc	fsr2h,f,c
  2668  000B2C  C03C FFDF          	movff	60,indf2
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;FRAME.c: 358:         RCON &= ~(1<<6);
  2672  000B30  9CD0               	bcf	4048,6,c	;volatile
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;FRAME.c: 359:         Flagi.wykonanoZapisDoFlash = 0;
  2676  000B32  99C6               	bcf	_Flagi& (0+255),4,b
  2677                           
  2678                           ;FRAME.c: 373:     }
  2679  000B34  0012               	return	
  2680  000B36                     l4324:
  2681                           
  2682                           ;FRAME.c: 375:     {;FRAME.c: 376:         message->data_length = 1;
  2683  000B36  EE20 F010          	lfsr	2,16
  2684  000B3A  500F               	movf	FRAME_DeviceReset@message,w,c
  2685  000B3C  26D9               	addwf	fsr2l,f,c
  2686  000B3E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2687  000B40  22DA               	addwfc	fsr2h,f,c
  2688  000B42  0E01               	movlw	1
  2689  000B44  6EDF               	movwf	indf2,c
  2690                           
  2691                           ;FRAME.c: 378:         if(message->data[2])
  2692  000B46  EE20 F00A          	lfsr	2,10
  2693  000B4A  500F               	movf	FRAME_DeviceReset@message,w,c
  2694  000B4C  26D9               	addwf	fsr2l,f,c
  2695  000B4E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2696  000B50  22DA               	addwfc	fsr2h,f,c
  2697  000B52  50DF               	movf	indf2,w,c
  2698  000B54  B4D8               	btfsc	status,2,c
  2699  000B56  D00F               	goto	l4334
  2700                           
  2701                           ;FRAME.c: 379:         {;FRAME.c: 380:             Flagi.pomiarTla = 1;
  2702  000B58  0100               	movlb	0	; () banked
  2703  000B5A  81C6               	bsf	_Flagi& (0+255),0,b
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;FRAME.c: 381:             if(message->data[1])
  2707  000B5C  EE20 F009          	lfsr	2,9
  2708  000B60  500F               	movf	FRAME_DeviceReset@message,w,c
  2709  000B62  26D9               	addwf	fsr2l,f,c
  2710  000B64  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2711  000B66  22DA               	addwfc	fsr2h,f,c
  2712  000B68  50DF               	movf	indf2,w,c
  2713  000B6A  B4D8               	btfsc	status,2,c
  2714  000B6C  D01E               	goto	l4342
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;FRAME.c: 382:             {;FRAME.c: 383:                 Flagi.zapisDoFlash = 1;
  2718  000B6E  87C6               	bsf	_Flagi& (0+255),3,b
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;FRAME.c: 384:                 WriteDataToEEPROM();
  2722  000B70  EC64  F006         	call	_WriteDataToEEPROM	;wreg free
  2723  000B74  D01A               	goto	l4342
  2724  000B76                     l4334:
  2725                           
  2726                           ;FRAME.c: 388:         {;FRAME.c: 389:             if(message->data[1])
  2727  000B76  EE20 F009          	lfsr	2,9
  2728  000B7A  500F               	movf	FRAME_DeviceReset@message,w,c
  2729  000B7C  26D9               	addwf	fsr2l,f,c
  2730  000B7E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2731  000B80  22DA               	addwfc	fsr2h,f,c
  2732  000B82  50DF               	movf	indf2,w,c
  2733  000B84  B4D8               	btfsc	status,2,c
  2734  000B86  D008               	goto	l4338
  2735                           
  2736                           ;FRAME.c: 390:             {;FRAME.c: 391:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2737  000B88  C00F  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2738  000B8C  C010  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2739  000B90  EC8C  F00A         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2740                           
  2741                           ;FRAME.c: 392:                 WriteDataToEEPROM();
  2742  000B94  EC64  F006         	call	_WriteDataToEEPROM	;wreg free
  2743  000B98                     l4338:
  2744                           
  2745                           ;FRAME.c: 395:             if(message->data[0])
  2746  000B98  EE20 F008          	lfsr	2,8
  2747  000B9C  500F               	movf	FRAME_DeviceReset@message,w,c
  2748  000B9E  26D9               	addwf	fsr2l,f,c
  2749  000BA0  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2750  000BA2  22DA               	addwfc	fsr2h,f,c
  2751  000BA4  50DF               	movf	indf2,w,c
  2752  000BA6  A4D8               	btfss	status,2,c
  2753  000BA8  00FF               	reset		;# 
  2754  000BAA                     l4342:
  2755                           
  2756                           ;FRAME.c: 400:         message->data[0] = 0xFF;
  2757  000BAA  EE20 F008          	lfsr	2,8
  2758  000BAE  500F               	movf	FRAME_DeviceReset@message,w,c
  2759  000BB0  26D9               	addwf	fsr2l,f,c
  2760  000BB2  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2761  000BB4  22DA               	addwfc	fsr2h,f,c
  2762  000BB6  0EFF               	movlw	255
  2763  000BB8  6EDF               	movwf	indf2,c
  2764  000BBA  0012               	return		;funcret
  2765  000BBC                     __end_of_FRAME_DeviceReset:
  2766                           	opt callstack 0
  2767                           
  2768 ;; *************** function _WriteDataToEEPROM *****************
  2769 ;; Defined at:
  2770 ;;		line 418 in file "FRAME.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    5
  2791 ;; This function calls:
  2792 ;;		_NVMWrite
  2793 ;; This function is called by:
  2794 ;;		_FRAME_DeviceReset
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text19
  2799  000CC8                     __ptext19:
  2800                           	opt callstack 0
  2801  000CC8                     _WriteDataToEEPROM:
  2802                           	opt callstack 22
  2803                           
  2804                           ;FRAME.c: 421:     NVMWrite(&NeightAdress1,4,2);
  2805                           
  2806                           ;incstack = 0
  2807  000CC8  0E4C               	movlw	low _NeightAdress1
  2808  000CCA  6E09               	movwf	NVMWrite@source,c
  2809  000CCC  0E00               	movlw	high _NeightAdress1
  2810  000CCE  6E0A               	movwf	NVMWrite@source+1,c
  2811  000CD0  0E00               	movlw	0
  2812  000CD2  6E0C               	movwf	NVMWrite@addr+1,c
  2813  000CD4  0E04               	movlw	4
  2814  000CD6  6E0B               	movwf	NVMWrite@addr,c
  2815  000CD8  0E00               	movlw	0
  2816  000CDA  6E0E               	movwf	NVMWrite@count+1,c
  2817  000CDC  0E02               	movlw	2
  2818  000CDE  6E0D               	movwf	NVMWrite@count,c
  2819  000CE0  ECD9  F00B         	call	_NVMWrite	;wreg free
  2820                           
  2821                           ;FRAME.c: 422:     NVMWrite(&NeightAdress2,7,2);
  2822  000CE4  0E57               	movlw	low _NeightAdress2
  2823  000CE6  6E09               	movwf	NVMWrite@source,c
  2824  000CE8  0E00               	movlw	high _NeightAdress2
  2825  000CEA  6E0A               	movwf	NVMWrite@source+1,c
  2826  000CEC  0E00               	movlw	0
  2827  000CEE  6E0C               	movwf	NVMWrite@addr+1,c
  2828  000CF0  0E07               	movlw	7
  2829  000CF2  6E0B               	movwf	NVMWrite@addr,c
  2830  000CF4  0E00               	movlw	0
  2831  000CF6  6E0E               	movwf	NVMWrite@count+1,c
  2832  000CF8  0E02               	movlw	2
  2833  000CFA  6E0D               	movwf	NVMWrite@count,c
  2834  000CFC  ECD9  F00B         	call	_NVMWrite	;wreg free
  2835                           
  2836                           ;FRAME.c: 423:     NVMWrite(&NeightAdress3,10,2);
  2837  000D00  0E4A               	movlw	low _NeightAdress3
  2838  000D02  6E09               	movwf	NVMWrite@source,c
  2839  000D04  0E00               	movlw	high _NeightAdress3
  2840  000D06  6E0A               	movwf	NVMWrite@source+1,c
  2841  000D08  0E00               	movlw	0
  2842  000D0A  6E0C               	movwf	NVMWrite@addr+1,c
  2843  000D0C  0E0A               	movlw	10
  2844  000D0E  6E0B               	movwf	NVMWrite@addr,c
  2845  000D10  0E00               	movlw	0
  2846  000D12  6E0E               	movwf	NVMWrite@count+1,c
  2847  000D14  0E02               	movlw	2
  2848  000D16  6E0D               	movwf	NVMWrite@count,c
  2849  000D18  ECD9  F00B         	call	_NVMWrite	;wreg free
  2850                           
  2851                           ;FRAME.c: 424:     NVMWrite(&NeightAdress4,13,2);
  2852  000D1C  0E48               	movlw	low _NeightAdress4
  2853  000D1E  6E09               	movwf	NVMWrite@source,c
  2854  000D20  0E00               	movlw	high _NeightAdress4
  2855  000D22  6E0A               	movwf	NVMWrite@source+1,c
  2856  000D24  0E00               	movlw	0
  2857  000D26  6E0C               	movwf	NVMWrite@addr+1,c
  2858  000D28  0E0D               	movlw	13
  2859  000D2A  6E0B               	movwf	NVMWrite@addr,c
  2860  000D2C  0E00               	movlw	0
  2861  000D2E  6E0E               	movwf	NVMWrite@count+1,c
  2862  000D30  0E02               	movlw	2
  2863  000D32  6E0D               	movwf	NVMWrite@count,c
  2864  000D34  ECD9  F00B         	call	_NVMWrite	;wreg free
  2865                           
  2866                           ;FRAME.c: 425:     NVMWrite(&NeightAdress5,16,2);
  2867  000D38  0E46               	movlw	low _NeightAdress5
  2868  000D3A  6E09               	movwf	NVMWrite@source,c
  2869  000D3C  0E00               	movlw	high _NeightAdress5
  2870  000D3E  6E0A               	movwf	NVMWrite@source+1,c
  2871  000D40  0E00               	movlw	0
  2872  000D42  6E0C               	movwf	NVMWrite@addr+1,c
  2873  000D44  0E10               	movlw	16
  2874  000D46  6E0B               	movwf	NVMWrite@addr,c
  2875  000D48  0E00               	movlw	0
  2876  000D4A  6E0E               	movwf	NVMWrite@count+1,c
  2877  000D4C  0E02               	movlw	2
  2878  000D4E  6E0D               	movwf	NVMWrite@count,c
  2879  000D50  ECD9  F00B         	call	_NVMWrite	;wreg free
  2880                           
  2881                           ;FRAME.c: 426:     NVMWrite(&NeightAdress6,19,2);
  2882  000D54  0E44               	movlw	low _NeightAdress6
  2883  000D56  6E09               	movwf	NVMWrite@source,c
  2884  000D58  0E00               	movlw	high _NeightAdress6
  2885  000D5A  6E0A               	movwf	NVMWrite@source+1,c
  2886  000D5C  0E00               	movlw	0
  2887  000D5E  6E0C               	movwf	NVMWrite@addr+1,c
  2888  000D60  0E13               	movlw	19
  2889  000D62  6E0B               	movwf	NVMWrite@addr,c
  2890  000D64  0E00               	movlw	0
  2891  000D66  6E0E               	movwf	NVMWrite@count+1,c
  2892  000D68  0E02               	movlw	2
  2893  000D6A  6E0D               	movwf	NVMWrite@count,c
  2894  000D6C  ECD9  F00B         	call	_NVMWrite	;wreg free
  2895                           
  2896                           ;FRAME.c: 427:     NVMWrite(&NeightAdress7,22,2);
  2897  000D70  0E42               	movlw	low _NeightAdress7
  2898  000D72  6E09               	movwf	NVMWrite@source,c
  2899  000D74  0E00               	movlw	high _NeightAdress7
  2900  000D76  6E0A               	movwf	NVMWrite@source+1,c
  2901  000D78  0E00               	movlw	0
  2902  000D7A  6E0C               	movwf	NVMWrite@addr+1,c
  2903  000D7C  0E16               	movlw	22
  2904  000D7E  6E0B               	movwf	NVMWrite@addr,c
  2905  000D80  0E00               	movlw	0
  2906  000D82  6E0E               	movwf	NVMWrite@count+1,c
  2907  000D84  0E02               	movlw	2
  2908  000D86  6E0D               	movwf	NVMWrite@count,c
  2909  000D88  ECD9  F00B         	call	_NVMWrite	;wreg free
  2910                           
  2911                           ;FRAME.c: 428:     NVMWrite(&NeightAdress8,25,2);
  2912  000D8C  0E40               	movlw	low _NeightAdress8
  2913  000D8E  6E09               	movwf	NVMWrite@source,c
  2914  000D90  0E00               	movlw	high _NeightAdress8
  2915  000D92  6E0A               	movwf	NVMWrite@source+1,c
  2916  000D94  0E00               	movlw	0
  2917  000D96  6E0C               	movwf	NVMWrite@addr+1,c
  2918  000D98  0E19               	movlw	25
  2919  000D9A  6E0B               	movwf	NVMWrite@addr,c
  2920  000D9C  0E00               	movlw	0
  2921  000D9E  6E0E               	movwf	NVMWrite@count+1,c
  2922  000DA0  0E02               	movlw	2
  2923  000DA2  6E0D               	movwf	NVMWrite@count,c
  2924  000DA4  ECD9  F00B         	call	_NVMWrite	;wreg free
  2925  000DA8  0012               	return		;funcret
  2926  000DAA                     __end_of_WriteDataToEEPROM:
  2927                           	opt callstack 0
  2928                           
  2929 ;; *************** function _NVMWrite *****************
  2930 ;; Defined at:
  2931 ;;		line 90 in file "EEPROM.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  source          2    8[COMRAM] PTR unsigned char 
  2934 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  2935 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  2936 ;;  addr            2   10[COMRAM] unsigned short 
  2937 ;;  count           2   12[COMRAM] unsigned short 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2949 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;Total ram usage:        6 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    4
  2956 ;; This function calls:
  2957 ;;		_WritetoEEPROM
  2958 ;; This function is called by:
  2959 ;;		_WriteDataToEEPROM
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text20
  2964  0017B2                     __ptext20:
  2965                           	opt callstack 0
  2966  0017B2                     _NVMWrite:
  2967                           	opt callstack 22
  2968                           
  2969                           ;EEPROM.c: 90: void NVMWrite(BYTE *source, WORD addr, WORD count);EEPROM.c: 91: {;EEPROM
      +                          .c: 92:     while(count > 0)
  2970                           
  2971                           ;incstack = 0
  2972  0017B2  D015               	goto	l3828
  2973  0017B4                     l936:
  2974  0017B4  B2A6               	btfsc	4006,1,c	;volsfr
  2975  0017B6  D7FE               	goto	l936
  2976                           
  2977                           ;EEPROM.c: 95:         WritetoEEPROM(addr++,*source);
  2978  0017B8  C00B  F006         	movff	NVMWrite@addr,WritetoEEPROM@Address
  2979  0017BC  C00C  F007         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  2980  0017C0  C009  FFD9         	movff	NVMWrite@source,fsr2l
  2981  0017C4  C00A  FFDA         	movff	NVMWrite@source+1,fsr2h
  2982  0017C8  50DF               	movf	indf2,w,c
  2983  0017CA  6E08               	movwf	WritetoEEPROM@Data,c
  2984  0017CC  EC45  F00C         	call	_WritetoEEPROM	;wreg free
  2985  0017D0  4A0B               	infsnz	NVMWrite@addr,f,c
  2986  0017D2  2A0C               	incf	NVMWrite@addr+1,f,c
  2987                           
  2988                           ;EEPROM.c: 96:         count--;
  2989  0017D4  060D               	decf	NVMWrite@count,f,c
  2990  0017D6  A0D8               	btfss	status,0,c
  2991  0017D8  060E               	decf	NVMWrite@count+1,f,c
  2992                           
  2993                           ;EEPROM.c: 97:         source++;
  2994  0017DA  4A09               	infsnz	NVMWrite@source,f,c
  2995  0017DC  2A0A               	incf	NVMWrite@source+1,f,c
  2996  0017DE                     l3828:
  2997                           
  2998                           ;EEPROM.c: 92:     while(count > 0)
  2999  0017DE  500D               	movf	NVMWrite@count,w,c
  3000  0017E0  100E               	iorwf	NVMWrite@count+1,w,c
  3001  0017E2  B4D8               	btfsc	status,2,c
  3002  0017E4  0012               	return	
  3003  0017E6  D7E6               	goto	l936
  3004  0017E8                     __end_of_NVMWrite:
  3005                           	opt callstack 0
  3006                           
  3007 ;; *************** function _WritetoEEPROM *****************
  3008 ;; Defined at:
  3009 ;;		line 61 in file "EEPROM.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  Address         2    5[COMRAM] unsigned short 
  3012 ;;  Data            1    7[COMRAM] unsigned char 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3024 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;Total ram usage:        3 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    3
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_NVMWrite
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text21
  3039  00188A                     __ptext21:
  3040                           	opt callstack 0
  3041  00188A                     _WritetoEEPROM:
  3042                           	opt callstack 22
  3043                           
  3044                           ;EEPROM.c: 61: static void WritetoEEPROM(WORD Address, BYTE Data);EEPROM.c: 62: {;EEPROM
      +                          .c: 63:     static BYTE GIE_Status;;EEPROM.c: 65:     EEADRH = (BYTE)(Address>>8);
  3045                           
  3046                           ;incstack = 0
  3047  00188A  5007               	movf	WritetoEEPROM@Address+1,w,c
  3048  00188C  6EAA               	movwf	4010,c	;volatile
  3049                           
  3050                           ;EEPROM.c: 66:     EEADR = (BYTE)Address;
  3051  00188E  C006  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3052                           
  3053                           ;EEPROM.c: 67:     EEDATA = Data;
  3054  001892  C008  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3055                           
  3056                           ;EEPROM.c: 68:     EECON1bits.WREN = 1;
  3057  001896  84A6               	bsf	4006,2,c	;volsfr
  3058                           
  3059                           ;EEPROM.c: 69:     GIE_Status = INTCONbits.GIE;
  3060  001898  0E00               	movlw	0
  3061  00189A  BEF2               	btfsc	4082,7,c	;volatile
  3062  00189C  0E01               	movlw	1
  3063  00189E  6E36               	movwf	WritetoEEPROM@GIE_Status,c
  3064                           
  3065                           ;EEPROM.c: 70:     INTCONbits.GIE = 0;
  3066  0018A0  9EF2               	bcf	4082,7,c	;volatile
  3067                           
  3068                           ;EEPROM.c: 71:     EECON2 = 0x55;
  3069  0018A2  0E55               	movlw	85
  3070  0018A4  6EA7               	movwf	4007,c	;volsfr
  3071                           
  3072                           ;EEPROM.c: 72:     EECON2 = 0xAA;
  3073  0018A6  0EAA               	movlw	170
  3074  0018A8  6EA7               	movwf	4007,c	;volsfr
  3075                           
  3076                           ;EEPROM.c: 73:     EECON1bits.WR = 1;
  3077  0018AA  82A6               	bsf	4006,1,c	;volsfr
  3078                           
  3079                           ;EEPROM.c: 74:     INTCONbits.GIE = GIE_Status;
  3080  0018AC  B036               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3081  0018AE  D002               	bra	u1955
  3082  0018B0  9EF2               	bcf	4082,7,c	;volatile
  3083  0018B2  D001               	bra	u1956
  3084  0018B4                     u1955:
  3085  0018B4  8EF2               	bsf	4082,7,c	;volatile
  3086  0018B6                     u1956:
  3087                           
  3088                           ;EEPROM.c: 75:     EECON1bits.WREN = 0;
  3089  0018B6  94A6               	bcf	4006,2,c	;volsfr
  3090  0018B8                     l919:
  3091  0018B8  B2A6               	btfsc	4006,1,c	;volsfr
  3092  0018BA  D7FE               	goto	l919
  3093  0018BC  0012               	return	
  3094  0018BE                     __end_of_WritetoEEPROM:
  3095                           	opt callstack 0
  3096                           
  3097 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3098 ;; Defined at:
  3099 ;;		line 328 in file "FRAME.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  message         2    5[COMRAM] PTR struct .
  3102 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;Total ram usage:        3 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    3
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_FRAME_DeviceReset
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text22
  3129  001518                     __ptext22:
  3130                           	opt callstack 0
  3131  001518                     _FRAME_DataUpdateAndChangeOption:
  3132                           	opt callstack 24
  3133                           
  3134                           ;FRAME.c: 328: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 329: {
      +                          ;FRAME.c: 331:     Dane->rokU16 = message->data[4];
  3135                           
  3136                           ;incstack = 0
  3137  001518  EE20 F00C          	lfsr	2,12
  3138  00151C  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3139  00151E  26D9               	addwf	fsr2l,f,c
  3140  001520  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3141  001522  22DA               	addwfc	fsr2h,f,c
  3142  001524  50DF               	movf	indf2,w,c
  3143  001526  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3144  001528  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3145  00152A  6E36               	movwf	54,c
  3146  00152C  6A37               	clrf	55,c
  3147                           
  3148                           ;FRAME.c: 332:     Dane->miesiacU16 = message->data[5];
  3149  00152E  EE20 F00D          	lfsr	2,13
  3150  001532  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3151  001534  26D9               	addwf	fsr2l,f,c
  3152  001536  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3153  001538  22DA               	addwfc	fsr2h,f,c
  3154  00153A  50DF               	movf	indf2,w,c
  3155  00153C  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3156  00153E  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3157  001540  6E38               	movwf	56,c
  3158  001542  6A39               	clrf	57,c
  3159                           
  3160                           ;FRAME.c: 333:     Dane->dzienU16 = message->data[6];
  3161  001544  EE20 F00E          	lfsr	2,14
  3162  001548  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3163  00154A  26D9               	addwf	fsr2l,f,c
  3164  00154C  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3165  00154E  22DA               	addwfc	fsr2h,f,c
  3166  001550  50DF               	movf	indf2,w,c
  3167  001552  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3168  001554  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3169  001556  6E3A               	movwf	58,c
  3170  001558  6A3B               	clrf	59,c
  3171                           
  3172                           ;FRAME.c: 334:     Dane->godzinaU16 = message->data[7];
  3173  00155A  EE20 F00F          	lfsr	2,15
  3174  00155E  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3175  001560  26D9               	addwf	fsr2l,f,c
  3176  001562  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3177  001564  22DA               	addwfc	fsr2h,f,c
  3178  001566  50DF               	movf	indf2,w,c
  3179  001568  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3180  00156A  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3181  00156C  6E3C               	movwf	60,c
  3182  00156E  6A3D               	clrf	61,c
  3183  001570  0012               	return		;funcret
  3184  001572                     __end_of_FRAME_DataUpdateAndChangeOption:
  3185                           	opt callstack 0
  3186                           
  3187 ;; *************** function _FRAME_AxisStatus *****************
  3188 ;; Defined at:
  3189 ;;		line 297 in file "FRAME.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  message         2    5[COMRAM] PTR struct .
  3192 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  i               2    0        unsigned short 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;Total ram usage:        3 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    3
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_FRAME_HandleCanFrame
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text23
  3219  0017E8                     __ptext23:
  3220                           	opt callstack 0
  3221  0017E8                     _FRAME_AxisStatus:
  3222                           	opt callstack 25
  3223                           
  3224                           ;FRAME.c: 297: static void FRAME_AxisStatus(mID *message);FRAME.c: 298: {;FRAME.c: 299: 
      +                              WORD i;;FRAME.c: 301:     if(message->message_type == 0x02)
  3225                           
  3226                           ;incstack = 0
  3227  0017E8  EE20 F001          	lfsr	2,1
  3228  0017EC  5006               	movf	FRAME_AxisStatus@message,w,c
  3229  0017EE  26D9               	addwf	fsr2l,f,c
  3230  0017F0  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3231  0017F2  22DA               	addwfc	fsr2h,f,c
  3232  0017F4  0E02               	movlw	2
  3233  0017F6  18DE               	xorwf	postinc2,w,c
  3234  0017F8  A4D8               	btfss	status,2,c
  3235  0017FA  0012               	return	
  3236                           
  3237                           ;FRAME.c: 302:     {;FRAME.c: 303:         message->data_length = 1;
  3238  0017FC  EE20 F010          	lfsr	2,16
  3239  001800  5006               	movf	FRAME_AxisStatus@message,w,c
  3240  001802  26D9               	addwf	fsr2l,f,c
  3241  001804  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3242  001806  22DA               	addwfc	fsr2h,f,c
  3243  001808  0E01               	movlw	1
  3244  00180A  6EDF               	movwf	indf2,c
  3245                           
  3246                           ;FRAME.c: 314:         message->data[0] = 0xFF;
  3247  00180C  EE20 F008          	lfsr	2,8
  3248  001810  5006               	movf	FRAME_AxisStatus@message,w,c
  3249  001812  26D9               	addwf	fsr2l,f,c
  3250  001814  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3251  001816  22DA               	addwfc	fsr2h,f,c
  3252  001818  0EFF               	movlw	255
  3253  00181A  6EDF               	movwf	indf2,c
  3254                           
  3255                           ;FRAME.c: 315:     }
  3256  00181C  0012               	return		;funcret
  3257  00181E                     __end_of_FRAME_AxisStatus:
  3258                           	opt callstack 0
  3259                           
  3260 ;; *************** function _FRAME_AveragingTimes *****************
  3261 ;; Defined at:
  3262 ;;		line 238 in file "FRAME.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  message         2    5[COMRAM] PTR struct .
  3265 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;Total ram usage:        3 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    3
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_FRAME_HandleCanFrame
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text24
  3292  00181E                     __ptext24:
  3293                           	opt callstack 0
  3294  00181E                     _FRAME_AveragingTimes:
  3295                           	opt callstack 25
  3296                           
  3297                           ;FRAME.c: 238: static void FRAME_AveragingTimes(mID *message);FRAME.c: 239: {;FRAME.c: 2
      +                          40:     if(message->message_type == 0x02)
  3298                           
  3299                           ;incstack = 0
  3300  00181E  EE20 F001          	lfsr	2,1
  3301  001822  5006               	movf	FRAME_AveragingTimes@message,w,c
  3302  001824  26D9               	addwf	fsr2l,f,c
  3303  001826  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3304  001828  22DA               	addwfc	fsr2h,f,c
  3305  00182A  0E02               	movlw	2
  3306  00182C  18DE               	xorwf	postinc2,w,c
  3307  00182E  A4D8               	btfss	status,2,c
  3308  001830  0012               	return	
  3309                           
  3310                           ;FRAME.c: 241:     {;FRAME.c: 242:         message->data_length = 1;
  3311  001832  EE20 F010          	lfsr	2,16
  3312  001836  5006               	movf	FRAME_AveragingTimes@message,w,c
  3313  001838  26D9               	addwf	fsr2l,f,c
  3314  00183A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3315  00183C  22DA               	addwfc	fsr2h,f,c
  3316  00183E  0E01               	movlw	1
  3317  001840  6EDF               	movwf	indf2,c
  3318                           
  3319                           ;FRAME.c: 250:         message->data[0] = 0xFF;
  3320  001842  EE20 F008          	lfsr	2,8
  3321  001846  5006               	movf	FRAME_AveragingTimes@message,w,c
  3322  001848  26D9               	addwf	fsr2l,f,c
  3323  00184A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3324  00184C  22DA               	addwfc	fsr2h,f,c
  3325  00184E  0EFF               	movlw	255
  3326  001850  6EDF               	movwf	indf2,c
  3327                           
  3328                           ;FRAME.c: 251:     }
  3329  001852  0012               	return		;funcret
  3330  001854                     __end_of_FRAME_AveragingTimes:
  3331                           	opt callstack 0
  3332                           
  3333 ;; *************** function _FRAME_AnalogValue *****************
  3334 ;; Defined at:
  3335 ;;		line 507 in file "FRAME.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  message         2    5[COMRAM] PTR struct .
  3338 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3339 ;;  set             2    7[COMRAM] unsigned short 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  i               2    0        unsigned short 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		None
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;Total ram usage:        4 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:    3
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_FRAME_HandleCanFrame
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text25
  3366  001AD8                     __ptext25:
  3367                           	opt callstack 0
  3368  001AD8                     _FRAME_AnalogValue:
  3369                           	opt callstack 25
  3370                           
  3371                           ;incstack = 0
  3372  001AD8  0012               	return		;funcret
  3373  001ADA                     __end_of_FRAME_AnalogValue:
  3374                           	opt callstack 0
  3375                           
  3376 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3377 ;; Defined at:
  3378 ;;		line 555 in file "FRAME.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  message         2    5[COMRAM] PTR struct .
  3381 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3382 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  kier            2   13[COMRAM] unsigned short 
  3385 ;;  it              2    0        unsigned short 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;Total ram usage:       10 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    4
  3402 ;; This function calls:
  3403 ;;		_CAN_SetupFilter_Ne
  3404 ;; This function is called by:
  3405 ;;		_FRAME_HandleCanFrame
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text26
  3410  000062                     __ptext26:
  3411                           	opt callstack 0
  3412  000062                     _FRAME_AdressOfNeighbors:
  3413                           	opt callstack 24
  3414                           
  3415                           ;FRAME.c: 555: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          556: {;FRAME.c: 557:     WORD it;;FRAME.c: 560:     WORD kier = (nrRamki-0x10);
  3416                           
  3417                           ;incstack = 0
  3418  000062  0EF0               	movlw	240
  3419  000064  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3420  000066  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  3421  000068  0EFF               	movlw	255
  3422  00006A  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3423  00006C  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3424                           
  3425                           ;FRAME.c: 561:     if(message->message_type == 0x02)
  3426  00006E  EE20 F001          	lfsr	2,1
  3427  000072  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3428  000074  26D9               	addwf	fsr2l,f,c
  3429  000076  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3430  000078  22DA               	addwfc	fsr2h,f,c
  3431  00007A  0E02               	movlw	2
  3432  00007C  18DE               	xorwf	postinc2,w,c
  3433  00007E  A4D8               	btfss	status,2,c
  3434  000080  D08E               	goto	l4384
  3435                           
  3436                           ;FRAME.c: 562:     {;FRAME.c: 564:         message->data_length = 8;
  3437  000082  EE20 F010          	lfsr	2,16
  3438  000086  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3439  000088  26D9               	addwf	fsr2l,f,c
  3440  00008A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3441  00008C  22DA               	addwfc	fsr2h,f,c
  3442  00008E  0E08               	movlw	8
  3443  000090  6EDF               	movwf	indf2,c
  3444                           
  3445                           ;FRAME.c: 566:         if(kier == 0)
  3446  000092  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3447  000094  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3448  000096  A4D8               	btfss	status,2,c
  3449  000098  D041               	goto	l4382
  3450                           
  3451                           ;FRAME.c: 567:         {;FRAME.c: 568:         message->data[0] = (NeightAdress1>> 8);
  3452  00009A  EE20 F008          	lfsr	2,8
  3453  00009E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3454  0000A0  26D9               	addwf	fsr2l,f,c
  3455  0000A2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3456  0000A4  22DA               	addwfc	fsr2h,f,c
  3457  0000A6  504D               	movf	_NeightAdress1+1,w,c	;volatile
  3458  0000A8  6EDF               	movwf	indf2,c
  3459                           
  3460                           ;FRAME.c: 569:         message->data[1] = NeightAdress1 & 0b11111111;
  3461  0000AA  EE20 F009          	lfsr	2,9
  3462  0000AE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3463  0000B0  26D9               	addwf	fsr2l,f,c
  3464  0000B2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3465  0000B4  22DA               	addwfc	fsr2h,f,c
  3466  0000B6  C04C  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3467                           
  3468                           ;FRAME.c: 570:         message->data[2] = (NeightAdress2>> 8);
  3469  0000BA  EE20 F00A          	lfsr	2,10
  3470  0000BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3471  0000C0  26D9               	addwf	fsr2l,f,c
  3472  0000C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3473  0000C4  22DA               	addwfc	fsr2h,f,c
  3474  0000C6  5058               	movf	_NeightAdress2+1,w,c	;volatile
  3475  0000C8  6EDF               	movwf	indf2,c
  3476                           
  3477                           ;FRAME.c: 571:         message->data[3] = NeightAdress2 & 0b11111111;
  3478  0000CA  EE20 F00B          	lfsr	2,11
  3479  0000CE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3480  0000D0  26D9               	addwf	fsr2l,f,c
  3481  0000D2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3482  0000D4  22DA               	addwfc	fsr2h,f,c
  3483  0000D6  C057  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3484                           
  3485                           ;FRAME.c: 572:         message->data[4] = (NeightAdress3>> 8);
  3486  0000DA  EE20 F00C          	lfsr	2,12
  3487  0000DE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3488  0000E0  26D9               	addwf	fsr2l,f,c
  3489  0000E2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3490  0000E4  22DA               	addwfc	fsr2h,f,c
  3491  0000E6  504B               	movf	_NeightAdress3+1,w,c	;volatile
  3492  0000E8  6EDF               	movwf	indf2,c
  3493                           
  3494                           ;FRAME.c: 573:         message->data[5] = NeightAdress3 & 0b11111111;
  3495  0000EA  EE20 F00D          	lfsr	2,13
  3496  0000EE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3497  0000F0  26D9               	addwf	fsr2l,f,c
  3498  0000F2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3499  0000F4  22DA               	addwfc	fsr2h,f,c
  3500  0000F6  C04A  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3501                           
  3502                           ;FRAME.c: 574:         message->data[6] = (NeightAdress4>> 8);
  3503  0000FA  EE20 F00E          	lfsr	2,14
  3504  0000FE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3505  000100  26D9               	addwf	fsr2l,f,c
  3506  000102  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3507  000104  22DA               	addwfc	fsr2h,f,c
  3508  000106  5049               	movf	_NeightAdress4+1,w,c	;volatile
  3509  000108  6EDF               	movwf	indf2,c
  3510                           
  3511                           ;FRAME.c: 575:         message->data[7] = NeightAdress4 & 0b11111111;
  3512  00010A  EE20 F00F          	lfsr	2,15
  3513  00010E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3514  000110  26D9               	addwf	fsr2l,f,c
  3515  000112  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3516  000114  22DA               	addwfc	fsr2h,f,c
  3517  000116  C048  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3518                           
  3519                           ;FRAME.c: 576:         }
  3520  00011A  0012               	return	
  3521  00011C                     l4382:
  3522                           
  3523                           ;FRAME.c: 578:         {;FRAME.c: 579:         message->data[0] = (NeightAdress5>> 8);
  3524  00011C  EE20 F008          	lfsr	2,8
  3525  000120  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3526  000122  26D9               	addwf	fsr2l,f,c
  3527  000124  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3528  000126  22DA               	addwfc	fsr2h,f,c
  3529  000128  5047               	movf	_NeightAdress5+1,w,c	;volatile
  3530  00012A  6EDF               	movwf	indf2,c
  3531                           
  3532                           ;FRAME.c: 580:         message->data[1] = NeightAdress5 & 0b11111111;
  3533  00012C  EE20 F009          	lfsr	2,9
  3534  000130  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3535  000132  26D9               	addwf	fsr2l,f,c
  3536  000134  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3537  000136  22DA               	addwfc	fsr2h,f,c
  3538  000138  C046  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3539                           
  3540                           ;FRAME.c: 581:         message->data[2] = (NeightAdress6>> 8);
  3541  00013C  EE20 F00A          	lfsr	2,10
  3542  000140  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3543  000142  26D9               	addwf	fsr2l,f,c
  3544  000144  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3545  000146  22DA               	addwfc	fsr2h,f,c
  3546  000148  5045               	movf	_NeightAdress6+1,w,c	;volatile
  3547  00014A  6EDF               	movwf	indf2,c
  3548                           
  3549                           ;FRAME.c: 582:         message->data[3] = NeightAdress6 & 0b11111111;
  3550  00014C  EE20 F00B          	lfsr	2,11
  3551  000150  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3552  000152  26D9               	addwf	fsr2l,f,c
  3553  000154  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3554  000156  22DA               	addwfc	fsr2h,f,c
  3555  000158  C044  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3556                           
  3557                           ;FRAME.c: 583:         message->data[4] = (NeightAdress7>> 8);
  3558  00015C  EE20 F00C          	lfsr	2,12
  3559  000160  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3560  000162  26D9               	addwf	fsr2l,f,c
  3561  000164  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3562  000166  22DA               	addwfc	fsr2h,f,c
  3563  000168  5043               	movf	_NeightAdress7+1,w,c	;volatile
  3564  00016A  6EDF               	movwf	indf2,c
  3565                           
  3566                           ;FRAME.c: 584:         message->data[5] = NeightAdress7 & 0b11111111;
  3567  00016C  EE20 F00D          	lfsr	2,13
  3568  000170  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3569  000172  26D9               	addwf	fsr2l,f,c
  3570  000174  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3571  000176  22DA               	addwfc	fsr2h,f,c
  3572  000178  C042  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3573                           
  3574                           ;FRAME.c: 585:         message->data[6] = (NeightAdress8>> 8);
  3575  00017C  EE20 F00E          	lfsr	2,14
  3576  000180  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3577  000182  26D9               	addwf	fsr2l,f,c
  3578  000184  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3579  000186  22DA               	addwfc	fsr2h,f,c
  3580  000188  5041               	movf	_NeightAdress8+1,w,c	;volatile
  3581  00018A  6EDF               	movwf	indf2,c
  3582                           
  3583                           ;FRAME.c: 586:         message->data[7] = NeightAdress8 & 0b11111111;
  3584  00018C  EE20 F00F          	lfsr	2,15
  3585  000190  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3586  000192  26D9               	addwf	fsr2l,f,c
  3587  000194  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3588  000196  22DA               	addwfc	fsr2h,f,c
  3589  000198  C040  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3590  00019C  0012               	return	
  3591  00019E                     l4384:
  3592                           
  3593                           ;FRAME.c: 593:     {;FRAME.c: 596:         if(kier == 0)
  3594  00019E  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3595  0001A0  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3596  0001A2  A4D8               	btfss	status,2,c
  3597  0001A4  D063               	goto	l4390
  3598                           
  3599                           ;FRAME.c: 597:         {;FRAME.c: 598:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3600  0001A6  EE20 F008          	lfsr	2,8
  3601  0001AA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3602  0001AC  26D9               	addwf	fsr2l,f,c
  3603  0001AE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3604  0001B0  22DA               	addwfc	fsr2h,f,c
  3605  0001B2  50DF               	movf	indf2,w,c
  3606  0001B4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3607  0001B6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3608  0001B8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3609  0001BA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3610  0001BC  EE20 F009          	lfsr	2,9
  3611  0001C0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3612  0001C2  26D9               	addwf	fsr2l,f,c
  3613  0001C4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3614  0001C6  22DA               	addwfc	fsr2h,f,c
  3615  0001C8  50DF               	movf	indf2,w,c
  3616  0001CA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3617  0001CC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3618  0001CE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3619  0001D0  6E4C               	movwf	_NeightAdress1,c	;volatile
  3620  0001D2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3621  0001D4  6E4D               	movwf	_NeightAdress1+1,c	;volatile
  3622                           
  3623                           ;FRAME.c: 599:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3624  0001D6  EE20 F00A          	lfsr	2,10
  3625  0001DA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3626  0001DC  26D9               	addwf	fsr2l,f,c
  3627  0001DE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3628  0001E0  22DA               	addwfc	fsr2h,f,c
  3629  0001E2  50DF               	movf	indf2,w,c
  3630  0001E4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3631  0001E6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3632  0001E8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3633  0001EA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3634  0001EC  EE20 F00B          	lfsr	2,11
  3635  0001F0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3636  0001F2  26D9               	addwf	fsr2l,f,c
  3637  0001F4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3638  0001F6  22DA               	addwfc	fsr2h,f,c
  3639  0001F8  50DF               	movf	indf2,w,c
  3640  0001FA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3641  0001FC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3642  0001FE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3643  000200  6E57               	movwf	_NeightAdress2,c	;volatile
  3644  000202  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3645  000204  6E58               	movwf	_NeightAdress2+1,c	;volatile
  3646                           
  3647                           ;FRAME.c: 600:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3648  000206  EE20 F00C          	lfsr	2,12
  3649  00020A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3650  00020C  26D9               	addwf	fsr2l,f,c
  3651  00020E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3652  000210  22DA               	addwfc	fsr2h,f,c
  3653  000212  50DF               	movf	indf2,w,c
  3654  000214  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3655  000216  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3656  000218  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3657  00021A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3658  00021C  EE20 F00D          	lfsr	2,13
  3659  000220  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3660  000222  26D9               	addwf	fsr2l,f,c
  3661  000224  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3662  000226  22DA               	addwfc	fsr2h,f,c
  3663  000228  50DF               	movf	indf2,w,c
  3664  00022A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3665  00022C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3666  00022E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3667  000230  6E4A               	movwf	_NeightAdress3,c	;volatile
  3668  000232  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3669  000234  6E4B               	movwf	_NeightAdress3+1,c	;volatile
  3670                           
  3671                           ;FRAME.c: 601:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3672  000236  EE20 F00E          	lfsr	2,14
  3673  00023A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3674  00023C  26D9               	addwf	fsr2l,f,c
  3675  00023E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3676  000240  22DA               	addwfc	fsr2h,f,c
  3677  000242  50DF               	movf	indf2,w,c
  3678  000244  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3679  000246  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3680  000248  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3681  00024A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3682  00024C  EE20 F00F          	lfsr	2,15
  3683  000250  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3684  000252  26D9               	addwf	fsr2l,f,c
  3685  000254  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3686  000256  22DA               	addwfc	fsr2h,f,c
  3687  000258  50DF               	movf	indf2,w,c
  3688  00025A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3689  00025C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3690  00025E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3691  000260  6E48               	movwf	_NeightAdress4,c	;volatile
  3692  000262  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3693  000264  6E49               	movwf	_NeightAdress4+1,c	;volatile
  3694  000266                     l4388:
  3695                           
  3696                           ;FRAME.c: 602:          CAN_SetupFilter_Ne();
  3697  000266  EC52  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  3698                           
  3699                           ;FRAME.c: 605:         }
  3700  00026A  0012               	return	
  3701  00026C                     l4390:
  3702                           
  3703                           ;FRAME.c: 607:         {;FRAME.c: 608:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3704  00026C  EE20 F008          	lfsr	2,8
  3705  000270  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3706  000272  26D9               	addwf	fsr2l,f,c
  3707  000274  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3708  000276  22DA               	addwfc	fsr2h,f,c
  3709  000278  50DF               	movf	indf2,w,c
  3710  00027A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3711  00027C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3712  00027E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3713  000280  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3714  000282  EE20 F009          	lfsr	2,9
  3715  000286  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3716  000288  26D9               	addwf	fsr2l,f,c
  3717  00028A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3718  00028C  22DA               	addwfc	fsr2h,f,c
  3719  00028E  50DF               	movf	indf2,w,c
  3720  000290  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3721  000292  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3722  000294  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3723  000296  6E46               	movwf	_NeightAdress5,c	;volatile
  3724  000298  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3725  00029A  6E47               	movwf	_NeightAdress5+1,c	;volatile
  3726                           
  3727                           ;FRAME.c: 609:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3728  00029C  EE20 F00A          	lfsr	2,10
  3729  0002A0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3730  0002A2  26D9               	addwf	fsr2l,f,c
  3731  0002A4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3732  0002A6  22DA               	addwfc	fsr2h,f,c
  3733  0002A8  50DF               	movf	indf2,w,c
  3734  0002AA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3735  0002AC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3736  0002AE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3737  0002B0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3738  0002B2  EE20 F00B          	lfsr	2,11
  3739  0002B6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3740  0002B8  26D9               	addwf	fsr2l,f,c
  3741  0002BA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3742  0002BC  22DA               	addwfc	fsr2h,f,c
  3743  0002BE  50DF               	movf	indf2,w,c
  3744  0002C0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3745  0002C2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3746  0002C4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3747  0002C6  6E44               	movwf	_NeightAdress6,c	;volatile
  3748  0002C8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3749  0002CA  6E45               	movwf	_NeightAdress6+1,c	;volatile
  3750                           
  3751                           ;FRAME.c: 610:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3752  0002CC  EE20 F00C          	lfsr	2,12
  3753  0002D0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3754  0002D2  26D9               	addwf	fsr2l,f,c
  3755  0002D4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3756  0002D6  22DA               	addwfc	fsr2h,f,c
  3757  0002D8  50DF               	movf	indf2,w,c
  3758  0002DA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3759  0002DC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3760  0002DE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3761  0002E0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3762  0002E2  EE20 F00D          	lfsr	2,13
  3763  0002E6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3764  0002E8  26D9               	addwf	fsr2l,f,c
  3765  0002EA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3766  0002EC  22DA               	addwfc	fsr2h,f,c
  3767  0002EE  50DF               	movf	indf2,w,c
  3768  0002F0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3769  0002F2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3770  0002F4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3771  0002F6  6E42               	movwf	_NeightAdress7,c	;volatile
  3772  0002F8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3773  0002FA  6E43               	movwf	_NeightAdress7+1,c	;volatile
  3774                           
  3775                           ;FRAME.c: 611:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3776  0002FC  EE20 F00E          	lfsr	2,14
  3777  000300  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3778  000302  26D9               	addwf	fsr2l,f,c
  3779  000304  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3780  000306  22DA               	addwfc	fsr2h,f,c
  3781  000308  50DF               	movf	indf2,w,c
  3782  00030A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3783  00030C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3784  00030E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3785  000310  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3786  000312  EE20 F00F          	lfsr	2,15
  3787  000316  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3788  000318  26D9               	addwf	fsr2l,f,c
  3789  00031A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3790  00031C  22DA               	addwfc	fsr2h,f,c
  3791  00031E  50DF               	movf	indf2,w,c
  3792  000320  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3793  000322  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3794  000324  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3795  000326  6E40               	movwf	_NeightAdress8,c	;volatile
  3796  000328  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3797  00032A  6E41               	movwf	_NeightAdress8+1,c	;volatile
  3798  00032C  D79C               	goto	l4388
  3799  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3800                           	opt callstack 0
  3801                           
  3802 ;; *************** function _FRAME_AccelerometerStatus *****************
  3803 ;; Defined at:
  3804 ;;		line 161 in file "FRAME.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  message         2    7[COMRAM] PTR struct .
  3807 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;Total ram usage:        3 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    4
  3826 ;; This function calls:
  3827 ;;		_MOCK_Klikniecie_Spadek
  3828 ;;		_MOCK_PrzyspieszenieX
  3829 ;;		_MOCK_PrzyspieszenieY
  3830 ;;		_MOCK_PrzyspieszenieZ
  3831 ;; This function is called by:
  3832 ;;		_FRAME_HandleCanFrame
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text27
  3837  0012B0                     __ptext27:
  3838                           	opt callstack 0
  3839  0012B0                     _FRAME_AccelerometerStatus:
  3840                           	opt callstack 24
  3841                           
  3842                           ;FRAME.c: 161: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 162: {;FRAME
      +                          .c: 163:     if(message->message_type == 0x02)
  3843                           
  3844                           ;incstack = 0
  3845  0012B0  EE20 F001          	lfsr	2,1
  3846  0012B4  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3847  0012B6  26D9               	addwf	fsr2l,f,c
  3848  0012B8  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3849  0012BA  22DA               	addwfc	fsr2h,f,c
  3850  0012BC  0E02               	movlw	2
  3851  0012BE  18DE               	xorwf	postinc2,w,c
  3852  0012C0  A4D8               	btfss	status,2,c
  3853  0012C2  0012               	return	
  3854                           
  3855                           ;FRAME.c: 164:     {;FRAME.c: 165:         message->data_length = 4;
  3856  0012C4  EE20 F010          	lfsr	2,16
  3857  0012C8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3858  0012CA  26D9               	addwf	fsr2l,f,c
  3859  0012CC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3860  0012CE  22DA               	addwfc	fsr2h,f,c
  3861  0012D0  0E04               	movlw	4
  3862  0012D2  6EDF               	movwf	indf2,c
  3863                           
  3864                           ;FRAME.c: 169:         message->data[0] = MOCK_PrzyspieszenieX();
  3865  0012D4  EE20 F008          	lfsr	2,8
  3866  0012D8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3867  0012DA  26D9               	addwf	fsr2l,f,c
  3868  0012DC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3869  0012DE  22DA               	addwfc	fsr2h,f,c
  3870  0012E0  EC45  F00D         	call	_MOCK_PrzyspieszenieX	;wreg free
  3871  0012E4  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3872  0012E6  6EDF               	movwf	indf2,c
  3873                           
  3874                           ;FRAME.c: 170:         message->data[1] = MOCK_PrzyspieszenieY();
  3875  0012E8  EE20 F009          	lfsr	2,9
  3876  0012EC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3877  0012EE  26D9               	addwf	fsr2l,f,c
  3878  0012F0  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3879  0012F2  22DA               	addwfc	fsr2h,f,c
  3880  0012F4  EC40  F00D         	call	_MOCK_PrzyspieszenieY	;wreg free
  3881  0012F8  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3882  0012FA  6EDF               	movwf	indf2,c
  3883                           
  3884                           ;FRAME.c: 171:         message->data[2] = MOCK_PrzyspieszenieZ();
  3885  0012FC  EE20 F00A          	lfsr	2,10
  3886  001300  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3887  001302  26D9               	addwf	fsr2l,f,c
  3888  001304  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3889  001306  22DA               	addwfc	fsr2h,f,c
  3890  001308  EC3B  F00D         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3891  00130C  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3892  00130E  6EDF               	movwf	indf2,c
  3893                           
  3894                           ;FRAME.c: 172:         message->data[3] = MOCK_Klikniecie_Spadek();
  3895  001310  EE20 F00B          	lfsr	2,11
  3896  001314  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3897  001316  26D9               	addwf	fsr2l,f,c
  3898  001318  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3899  00131A  22DA               	addwfc	fsr2h,f,c
  3900  00131C  EC4A  F00D         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3901  001320  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3902  001322  6EDF               	movwf	indf2,c
  3903                           
  3904                           ;FRAME.c: 173:     }
  3905  001324  0012               	return		;funcret
  3906  001326                     __end_of_FRAME_AccelerometerStatus:
  3907                           	opt callstack 0
  3908                           
  3909 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3910 ;; Defined at:
  3911 ;;		line 72 in file "MOC_Funct.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  2    5[COMRAM] unsigned int 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;Total ram usage:        2 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    3
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_FRAME_AccelerometerStatus
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text28
  3940  001A76                     __ptext28:
  3941                           	opt callstack 0
  3942  001A76                     _MOCK_PrzyspieszenieZ:
  3943                           	opt callstack 24
  3944                           
  3945                           ;MOC_Funct.c: 74:     return 0xFE;
  3946                           
  3947                           ;incstack = 0
  3948  001A76  0E00               	movlw	0
  3949  001A78  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3950  001A7A  0EFE               	movlw	254
  3951  001A7C  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3952  001A7E  0012               	return		;funcret
  3953  001A80                     __end_of_MOCK_PrzyspieszenieZ:
  3954                           	opt callstack 0
  3955                           
  3956 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3957 ;; Defined at:
  3958 ;;		line 68 in file "MOC_Funct.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2    5[COMRAM] unsigned int 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;Total ram usage:        2 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    3
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_FRAME_AccelerometerStatus
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text29
  3987  001A80                     __ptext29:
  3988                           	opt callstack 0
  3989  001A80                     _MOCK_PrzyspieszenieY:
  3990                           	opt callstack 24
  3991                           
  3992                           ;MOC_Funct.c: 70:     return 0xFE;
  3993                           
  3994                           ;incstack = 0
  3995  001A80  0E00               	movlw	0
  3996  001A82  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3997  001A84  0EFE               	movlw	254
  3998  001A86  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3999  001A88  0012               	return		;funcret
  4000  001A8A                     __end_of_MOCK_PrzyspieszenieY:
  4001                           	opt callstack 0
  4002                           
  4003 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4004 ;; Defined at:
  4005 ;;		line 63 in file "MOC_Funct.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  2    5[COMRAM] unsigned int 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;Total ram usage:        2 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    3
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_FRAME_AccelerometerStatus
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text30
  4034  001A8A                     __ptext30:
  4035                           	opt callstack 0
  4036  001A8A                     _MOCK_PrzyspieszenieX:
  4037                           	opt callstack 24
  4038                           
  4039                           ;MOC_Funct.c: 65:     return 0xFE;
  4040                           
  4041                           ;incstack = 0
  4042  001A8A  0E00               	movlw	0
  4043  001A8C  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4044  001A8E  0EFE               	movlw	254
  4045  001A90  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  4046  001A92  0012               	return		;funcret
  4047  001A94                     __end_of_MOCK_PrzyspieszenieX:
  4048                           	opt callstack 0
  4049                           
  4050 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4051 ;; Defined at:
  4052 ;;		line 76 in file "MOC_Funct.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  2    5[COMRAM] unsigned int 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;Total ram usage:        2 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    3
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_FRAME_AccelerometerStatus
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text31
  4081  001A94                     __ptext31:
  4082                           	opt callstack 0
  4083  001A94                     _MOCK_Klikniecie_Spadek:
  4084                           	opt callstack 24
  4085                           
  4086                           ;MOC_Funct.c: 78:     return 0b00000000;
  4087                           
  4088                           ;incstack = 0
  4089  001A94  0E00               	movlw	0
  4090  001A96  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4091  001A98  0E00               	movlw	0
  4092  001A9A  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  4093  001A9C  0012               	return		;funcret
  4094  001A9E                     __end_of_MOCK_Klikniecie_Spadek:
  4095                           	opt callstack 0
  4096                           
  4097 ;; *************** function _CAN_SendFrame *****************
  4098 ;; Defined at:
  4099 ;;		line 246 in file "CAN.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  message         2   10[COMRAM] PTR struct .
  4102 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;Total ram usage:        5 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    4
  4121 ;; This function calls:
  4122 ;;		_CAN_MoveBuffIntoFrame
  4123 ;; This function is called by:
  4124 ;;		_FRAME_HandleCanFrame
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text32
  4129  0007B0                     __ptext32:
  4130                           	opt callstack 0
  4131  0007B0                     _CAN_SendFrame:
  4132                           	opt callstack 24
  4133                           
  4134                           ;CAN.c: 251:     {;CAN.c: 252:         ECANCON = 0x83;
  4135                           
  4136                           ;incstack = 0
  4137                           ;CAN.c: 246: void CAN_SendFrame(mID * message);CAN.c: 247: {;CAN.c: 250:     for(;;)
  4138  0007B0  0E83               	movlw	131
  4139  0007B2  6E77               	movwf	3959,c	;volatile
  4140                           
  4141                           ;CAN.c: 253:         if(!RXB0CONbits.FILHIT3)
  4142  0007B4  A660               	btfss	3936,3,c	;volatile
  4143  0007B6  D00A               	goto	l287
  4144                           
  4145                           ;CAN.c: 258:         ECANCON = 0x84;
  4146  0007B8  0E84               	movlw	132
  4147  0007BA  6E77               	movwf	3959,c	;volatile
  4148                           
  4149                           ;CAN.c: 259:         if(!RXB0CONbits.FILHIT3)
  4150  0007BC  A660               	btfss	3936,3,c	;volatile
  4151  0007BE  D006               	goto	l287
  4152                           
  4153                           ;CAN.c: 264:         ECANCON = 0x85;
  4154  0007C0  0E85               	movlw	133
  4155  0007C2  6E77               	movwf	3959,c	;volatile
  4156                           
  4157                           ;CAN.c: 265:         if(!RXB0CONbits.FILHIT3)
  4158  0007C4  A660               	btfss	3936,3,c	;volatile
  4159  0007C6  D002               	goto	l287
  4160  0007C8  D7F3               	goto	_CAN_SendFrame
  4161  0007CA                     l288:
  4162  0007CA  00FF               	reset		;# 
  4163  0007CC                     l287:
  4164                           
  4165                           ;CAN.c: 272:     while(COMSTATbits.TXWARN)
  4166  0007CC  B474               	btfsc	3956,2,c	;volatile
  4167  0007CE  D7FD               	goto	l288
  4168                           
  4169                           ;CAN.c: 276:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4170  0007D0  0E00               	movlw	0
  4171  0007D2  0100               	movlb	0	; () banked
  4172  0007D4  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;CAN.c: 277:     RXB0EIDL = message->id.v[0];
  4176  0007D6  EE20 F004          	lfsr	2,4
  4177  0007DA  500B               	movf	CAN_SendFrame@message,w,c
  4178  0007DC  26D9               	addwf	fsr2l,f,c
  4179  0007DE  500C               	movf	CAN_SendFrame@message+1,w,c
  4180  0007E0  22DA               	addwfc	fsr2h,f,c
  4181  0007E2  50DF               	movf	indf2,w,c
  4182  0007E4  6E64               	movwf	3940,c	;volatile
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;CAN.c: 278:     RXB0EIDH = message->id.v[1];
  4186  0007E6  EE20 F005          	lfsr	2,5
  4187  0007EA  500B               	movf	CAN_SendFrame@message,w,c
  4188  0007EC  26D9               	addwf	fsr2l,f,c
  4189  0007EE  500C               	movf	CAN_SendFrame@message+1,w,c
  4190  0007F0  22DA               	addwfc	fsr2h,f,c
  4191  0007F2  50DF               	movf	indf2,w,c
  4192  0007F4  6E63               	movwf	3939,c	;volatile
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;CAN.c: 279:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4196  0007F6  EE20 F006          	lfsr	2,6
  4197  0007FA  500B               	movf	CAN_SendFrame@message,w,c
  4198  0007FC  26D9               	addwf	fsr2l,f,c
  4199  0007FE  500C               	movf	CAN_SendFrame@message+1,w,c
  4200  000800  22DA               	addwfc	fsr2h,f,c
  4201  000802  50DF               	movf	indf2,w,c
  4202  000804  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4203  000806  0E03               	movlw	3
  4204  000808  160D               	andwf	??_CAN_SendFrame,f,c
  4205  00080A  EE20 F006          	lfsr	2,6
  4206  00080E  500B               	movf	CAN_SendFrame@message,w,c
  4207  000810  26D9               	addwf	fsr2l,f,c
  4208  000812  500C               	movf	CAN_SendFrame@message+1,w,c
  4209  000814  22DA               	addwfc	fsr2h,f,c
  4210  000816  50DF               	movf	indf2,w,c
  4211  000818  0BFC               	andlw	252
  4212  00081A  0D08               	mullw	8
  4213  00081C  50F3               	movf	prodl,w,c
  4214  00081E  100D               	iorwf	??_CAN_SendFrame,w,c
  4215  000820  6E62               	movwf	3938,c	;volatile
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;CAN.c: 280:     RXB0SIDLbits.EXID = 1;
  4219  000822  8662               	bsf	3938,3,c	;volatile
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;CAN.c: 281:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4223  000824  EE20 F006          	lfsr	2,6
  4224  000828  500B               	movf	CAN_SendFrame@message,w,c
  4225  00082A  26D9               	addwf	fsr2l,f,c
  4226  00082C  500C               	movf	CAN_SendFrame@message+1,w,c
  4227  00082E  22DA               	addwfc	fsr2h,f,c
  4228  000830  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  4229  000834  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  4230  000838  0E05               	movlw	5
  4231  00083A  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4232  00083C                     u2375:
  4233  00083C  90D8               	bcf	status,0,c
  4234  00083E  320E               	rrcf	??_CAN_SendFrame+1,f,c
  4235  000840  320D               	rrcf	??_CAN_SendFrame,f,c
  4236  000842  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4237  000844  D7FB               	goto	u2375
  4238  000846  500D               	movf	??_CAN_SendFrame,w,c
  4239  000848  6E61               	movwf	3937,c	;volatile
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;CAN.c: 283:     RXB0DLC = 0;
  4243  00084A  0E00               	movlw	0
  4244  00084C  6E65               	movwf	3941,c	;volatile
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;CAN.c: 285:     if(message->message_type==0x02)
  4248  00084E  EE20 F001          	lfsr	2,1
  4249  000852  500B               	movf	CAN_SendFrame@message,w,c
  4250  000854  26D9               	addwf	fsr2l,f,c
  4251  000856  500C               	movf	CAN_SendFrame@message+1,w,c
  4252  000858  22DA               	addwfc	fsr2h,f,c
  4253  00085A  0E02               	movlw	2
  4254  00085C  18DE               	xorwf	postinc2,w,c
  4255  00085E  A4D8               	btfss	status,2,c
  4256  000860  D002               	goto	l4202
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;CAN.c: 286:     {;CAN.c: 287:         RXB0DLCbits.RXRTR = 1;
  4260  000862  8C65               	bsf	3941,6,c	;volatile
  4261                           
  4262                           ;CAN.c: 288:     }
  4263  000864  D05A               	goto	l4206
  4264  000866                     l4202:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;CAN.c: 290:     {;CAN.c: 291:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  4268  000866  EE20 F010          	lfsr	2,16
  4269  00086A  500B               	movf	CAN_SendFrame@message,w,c
  4270  00086C  26D9               	addwf	fsr2l,f,c
  4271  00086E  500C               	movf	CAN_SendFrame@message+1,w,c
  4272  000870  22DA               	addwfc	fsr2h,f,c
  4273  000872  50DF               	movf	indf2,w,c
  4274  000874  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4275  000876  0E0F               	movlw	15
  4276  000878  160D               	andwf	??_CAN_SendFrame,f,c
  4277  00087A  5065               	movf	3941,w,c	;volatile
  4278  00087C  180D               	xorwf	??_CAN_SendFrame,w,c
  4279  00087E  0BFE               	andlw	-2
  4280  000880  180D               	xorwf	??_CAN_SendFrame,w,c
  4281  000882  6E65               	movwf	3941,c	;volatile
  4282                           
  4283                           ;CAN.c: 292:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4284  000884  EE20 F010          	lfsr	2,16
  4285  000888  500B               	movf	CAN_SendFrame@message,w,c
  4286  00088A  26D9               	addwf	fsr2l,f,c
  4287  00088C  500C               	movf	CAN_SendFrame@message+1,w,c
  4288  00088E  22DA               	addwfc	fsr2h,f,c
  4289  000890  50DF               	movf	indf2,w,c
  4290  000892  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4291  000894  90D8               	bcf	status,0,c
  4292  000896  320D               	rrcf	??_CAN_SendFrame,f,c
  4293  000898  0E07               	movlw	7
  4294  00089A  160D               	andwf	??_CAN_SendFrame,f,c
  4295  00089C  460D               	rlncf	??_CAN_SendFrame,f,c
  4296  00089E  5065               	movf	3941,w,c	;volatile
  4297  0008A0  180D               	xorwf	??_CAN_SendFrame,w,c
  4298  0008A2  0BFD               	andlw	-3
  4299  0008A4  180D               	xorwf	??_CAN_SendFrame,w,c
  4300  0008A6  6E65               	movwf	3941,c	;volatile
  4301                           
  4302                           ;CAN.c: 293:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4303  0008A8  EE20 F010          	lfsr	2,16
  4304  0008AC  500B               	movf	CAN_SendFrame@message,w,c
  4305  0008AE  26D9               	addwf	fsr2l,f,c
  4306  0008B0  500C               	movf	CAN_SendFrame@message+1,w,c
  4307  0008B2  22DA               	addwfc	fsr2h,f,c
  4308  0008B4  50DF               	movf	indf2,w,c
  4309  0008B6  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4310  0008B8  90D8               	bcf	status,0,c
  4311  0008BA  320D               	rrcf	??_CAN_SendFrame,f,c
  4312  0008BC  90D8               	bcf	status,0,c
  4313  0008BE  320D               	rrcf	??_CAN_SendFrame,f,c
  4314  0008C0  0E03               	movlw	3
  4315  0008C2  160D               	andwf	??_CAN_SendFrame,f,c
  4316  0008C4  460D               	rlncf	??_CAN_SendFrame,f,c
  4317  0008C6  460D               	rlncf	??_CAN_SendFrame,f,c
  4318  0008C8  5065               	movf	3941,w,c	;volatile
  4319  0008CA  180D               	xorwf	??_CAN_SendFrame,w,c
  4320  0008CC  0BFB               	andlw	-5
  4321  0008CE  180D               	xorwf	??_CAN_SendFrame,w,c
  4322  0008D0  6E65               	movwf	3941,c	;volatile
  4323                           
  4324                           ;CAN.c: 294:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4325  0008D2  EE20 F010          	lfsr	2,16
  4326  0008D6  500B               	movf	CAN_SendFrame@message,w,c
  4327  0008D8  26D9               	addwf	fsr2l,f,c
  4328  0008DA  500C               	movf	CAN_SendFrame@message+1,w,c
  4329  0008DC  22DA               	addwfc	fsr2h,f,c
  4330  0008DE  50DF               	movf	indf2,w,c
  4331  0008E0  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4332  0008E2  90D8               	bcf	status,0,c
  4333  0008E4  320D               	rrcf	??_CAN_SendFrame,f,c
  4334  0008E6  90D8               	bcf	status,0,c
  4335  0008E8  320D               	rrcf	??_CAN_SendFrame,f,c
  4336  0008EA  90D8               	bcf	status,0,c
  4337  0008EC  320D               	rrcf	??_CAN_SendFrame,f,c
  4338  0008EE  0E01               	movlw	1
  4339  0008F0  160D               	andwf	??_CAN_SendFrame,f,c
  4340  0008F2  460D               	rlncf	??_CAN_SendFrame,f,c
  4341  0008F4  460D               	rlncf	??_CAN_SendFrame,f,c
  4342  0008F6  460D               	rlncf	??_CAN_SendFrame,f,c
  4343  0008F8  5065               	movf	3941,w,c	;volatile
  4344  0008FA  180D               	xorwf	??_CAN_SendFrame,w,c
  4345  0008FC  0BF7               	andlw	-9
  4346  0008FE  180D               	xorwf	??_CAN_SendFrame,w,c
  4347  000900  6E65               	movwf	3941,c	;volatile
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;CAN.c: 296:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4351  000902  0E66               	movlw	102
  4352  000904  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4353  000906  0E0F               	movlw	15
  4354  000908  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4355  00090A  0E08               	movlw	8
  4356  00090C  240B               	addwf	CAN_SendFrame@message,w,c
  4357  00090E  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4358  000910  0E00               	movlw	0
  4359  000912  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4360  000914  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4361  000916  EC93  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4362  00091A                     l4206:
  4363                           
  4364                           ;CAN.c: 299:     RXB0CONbits.FILHIT3 = 1;
  4365  00091A  8660               	bsf	3936,3,c	;volatile
  4366                           
  4367                           ;CAN.c: 301:     DetectorLedRadar.Flags.ramkaTx = 1;
  4368  00091C  0100               	movlb	0	; () banked
  4369  00091E  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4370                           
  4371                           ; BSR set to: 0
  4372  000920  0012               	return		;funcret
  4373  000922                     __end_of_CAN_SendFrame:
  4374                           	opt callstack 0
  4375                           
  4376 ;; *************** function _CAN_GenID *****************
  4377 ;; Defined at:
  4378 ;;		line 445 in file "CAN.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  message         2    5[COMRAM] PTR struct .
  4381 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4382 ;;  frameID         1    7[COMRAM] unsigned char 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4394 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;Total ram usage:        5 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    3
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_FRAME_HandleCanFrame
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text33
  4409  001238                     __ptext33:
  4410                           	opt callstack 0
  4411  001238                     _CAN_GenID:
  4412                           	opt callstack 25
  4413                           
  4414                           ;CAN.c: 445: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 446: {;CAN.c: 448:     m
      +                          essage->frame_type = 0x03;
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;incstack = 0
  4418  001238  EE20 F002          	lfsr	2,2
  4419  00123C  5006               	movf	CAN_GenID@message,w,c
  4420  00123E  26D9               	addwf	fsr2l,f,c
  4421  001240  5007               	movf	CAN_GenID@message+1,w,c
  4422  001242  22DA               	addwfc	fsr2h,f,c
  4423  001244  0E03               	movlw	3
  4424  001246  6EDF               	movwf	indf2,c
  4425                           
  4426                           ;CAN.c: 449:     message->message_type = 0x01;
  4427  001248  EE20 F001          	lfsr	2,1
  4428  00124C  5006               	movf	CAN_GenID@message,w,c
  4429  00124E  26D9               	addwf	fsr2l,f,c
  4430  001250  5007               	movf	CAN_GenID@message+1,w,c
  4431  001252  22DA               	addwfc	fsr2h,f,c
  4432  001254  0E01               	movlw	1
  4433  001256  6EDF               	movwf	indf2,c
  4434                           
  4435                           ;CAN.c: 450:     message->id.w[1] = (WORD)frameID * (WORD)4;
  4436  001258  5008               	movf	CAN_GenID@frameID,w,c
  4437  00125A  6E09               	movwf	??_CAN_GenID& (0+255),c
  4438  00125C  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4439  00125E  90D8               	bcf	status,0,c
  4440  001260  3609               	rlcf	??_CAN_GenID,f,c
  4441  001262  360A               	rlcf	??_CAN_GenID+1,f,c
  4442  001264  90D8               	bcf	status,0,c
  4443  001266  3609               	rlcf	??_CAN_GenID,f,c
  4444  001268  360A               	rlcf	??_CAN_GenID+1,f,c
  4445  00126A  EE20 F006          	lfsr	2,6
  4446  00126E  5006               	movf	CAN_GenID@message,w,c
  4447  001270  26D9               	addwf	fsr2l,f,c
  4448  001272  5007               	movf	CAN_GenID@message+1,w,c
  4449  001274  22DA               	addwfc	fsr2h,f,c
  4450  001276  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4451  00127A  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4452                           
  4453                           ;CAN.c: 451:     message->id.w[0] = DaneCan.adresCAN;
  4454  00127E  EE20 F004          	lfsr	2,4
  4455  001282  5006               	movf	CAN_GenID@message,w,c
  4456  001284  26D9               	addwf	fsr2l,f,c
  4457  001286  5007               	movf	CAN_GenID@message+1,w,c
  4458  001288  22DA               	addwfc	fsr2h,f,c
  4459  00128A  C02E  FFDE         	movff	_DaneCan+2,postinc2
  4460  00128E  C02F  FFDD         	movff	_DaneCan+3,postdec2
  4461                           
  4462                           ;CAN.c: 454:     message ->id.bits.b16 = 0;
  4463  001292  EE20 F006          	lfsr	2,6
  4464  001296  5006               	movf	CAN_GenID@message,w,c
  4465  001298  26D9               	addwf	fsr2l,f,c
  4466  00129A  5007               	movf	CAN_GenID@message+1,w,c
  4467  00129C  22DA               	addwfc	fsr2h,f,c
  4468  00129E  90DF               	bcf	indf2,0,c
  4469                           
  4470                           ;CAN.c: 455:     message ->id.bits.b17 = 0;
  4471  0012A0  EE20 F006          	lfsr	2,6
  4472  0012A4  5006               	movf	CAN_GenID@message,w,c
  4473  0012A6  26D9               	addwf	fsr2l,f,c
  4474  0012A8  5007               	movf	CAN_GenID@message+1,w,c
  4475  0012AA  22DA               	addwfc	fsr2h,f,c
  4476  0012AC  92DF               	bcf	indf2,1,c
  4477  0012AE  0012               	return		;funcret
  4478  0012B0                     __end_of_CAN_GenID:
  4479                           	opt callstack 0
  4480                           
  4481 ;; *************** function _CAN_TakeFrame *****************
  4482 ;; Defined at:
  4483 ;;		line 310 in file "CAN.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  message         2   13[COMRAM] PTR struct .
  4486 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  k               1   18[COMRAM] unsigned char 
  4489 ;;  tempCON         1   17[COMRAM] unsigned char 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      enum E10433
  4492 ;; Registers used:
  4493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;Total ram usage:        6 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    4
  4506 ;; This function calls:
  4507 ;;		_CAN_MoveBuffIntoFrame
  4508 ;;		___awdiv
  4509 ;; This function is called by:
  4510 ;;		_TRM_DataTransmition
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text34
  4515  00032E                     __ptext34:
  4516                           	opt callstack 0
  4517  00032E                     _CAN_TakeFrame:
  4518                           	opt callstack 25
  4519                           
  4520                           ;CAN.c: 310: BOOL CAN_TakeFrame(mID * message);CAN.c: 311: {;CAN.c: 312:     BYTE k, tem
      +                          pCON;;CAN.c: 314:     k = CANCON&0x0F;
  4521                           
  4522                           ;incstack = 0
  4523  00032E  506F               	movf	3951,w,c	;volatile
  4524  000330  0B0F               	andlw	15
  4525  000332  6E13               	movwf	CAN_TakeFrame@k,c
  4526                           
  4527                           ;CAN.c: 316:     ECANCON = 0x90 | k;
  4528  000334  5013               	movf	CAN_TakeFrame@k,w,c
  4529  000336  0990               	iorlw	144
  4530  000338  6E77               	movwf	3959,c	;volatile
  4531                           
  4532                           ;CAN.c: 319:     switch(k)
  4533  00033A  D018               	goto	l4472
  4534  00033C                     l296:
  4535                           
  4536                           ;CAN.c: 322:             tempCON = RXB0CON;
  4537  00033C  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4538                           
  4539                           ;CAN.c: 323:             break;
  4540  000340  D035               	goto	l297
  4541  000342                     l298:
  4542                           
  4543                           ;CAN.c: 325:             tempCON = RXB1CON;
  4544  000342  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4545                           
  4546                           ;CAN.c: 326:             break;
  4547  000346  D032               	goto	l297
  4548  000348                     l299:
  4549                           
  4550                           ;CAN.c: 328:             tempCON = B0CON;
  4551  000348  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4552                           
  4553                           ;CAN.c: 329:             break;
  4554  00034C  D02F               	goto	l297
  4555  00034E                     l300:
  4556                           
  4557                           ;CAN.c: 331:             tempCON = B1CON;
  4558  00034E  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4559                           
  4560                           ;CAN.c: 332:             break;
  4561  000352  D02C               	goto	l297
  4562  000354                     l301:
  4563                           
  4564                           ;CAN.c: 334:             tempCON = B2CON;
  4565  000354  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4566                           
  4567                           ;CAN.c: 335:             break;
  4568  000358  D029               	goto	l297
  4569  00035A                     l302:
  4570                           
  4571                           ;CAN.c: 337:             tempCON = B3CON;
  4572  00035A  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4573                           
  4574                           ;CAN.c: 338:             break;
  4575  00035E  D026               	goto	l297
  4576  000360                     l303:
  4577                           
  4578                           ;CAN.c: 340:             tempCON = B4CON;
  4579  000360  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4580                           
  4581                           ;CAN.c: 341:             break;
  4582  000364  D023               	goto	l297
  4583  000366                     l304:
  4584                           
  4585                           ;CAN.c: 343:             tempCON = B5CON;
  4586  000366  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4587                           
  4588                           ;CAN.c: 344:             break;
  4589  00036A  D020               	goto	l297
  4590  00036C                     l4472:
  4591  00036C  5013               	movf	CAN_TakeFrame@k,w,c
  4592  00036E  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4593  000370  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4594                           
  4595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4596                           ; Switch size 1, requested type "simple"
  4597                           ; Number of cases is 1, Range of values is 0 to 0
  4598                           ; switch strategies available:
  4599                           ; Name         Instructions Cycles
  4600                           ; simple_byte            4     3 (average)
  4601                           ;	Chosen strategy is simple_byte
  4602  000372  5011               	movf	??_CAN_TakeFrame+1,w,c
  4603  000374  0A00               	xorlw	0	; case 0
  4604  000376  A4D8               	btfss	status,2,c
  4605  000378  D019               	goto	l297
  4606                           
  4607                           ; Switch size 1, requested type "simple"
  4608                           ; Number of cases is 8, Range of values is 0 to 7
  4609                           ; switch strategies available:
  4610                           ; Name         Instructions Cycles
  4611                           ; simple_byte           25    13 (average)
  4612                           ;	Chosen strategy is simple_byte
  4613  00037A  5010               	movf	??_CAN_TakeFrame,w,c
  4614  00037C  0A00               	xorlw	0	; case 0
  4615  00037E  B4D8               	btfsc	status,2,c
  4616  000380  D7DD               	goto	l296
  4617  000382  0A01               	xorlw	1	; case 1
  4618  000384  B4D8               	btfsc	status,2,c
  4619  000386  D7DD               	goto	l298
  4620  000388  0A03               	xorlw	3	; case 2
  4621  00038A  B4D8               	btfsc	status,2,c
  4622  00038C  D7DD               	goto	l299
  4623  00038E  0A01               	xorlw	1	; case 3
  4624  000390  B4D8               	btfsc	status,2,c
  4625  000392  D7DD               	goto	l300
  4626  000394  0A07               	xorlw	7	; case 4
  4627  000396  B4D8               	btfsc	status,2,c
  4628  000398  D7DD               	goto	l301
  4629  00039A  0A01               	xorlw	1	; case 5
  4630  00039C  B4D8               	btfsc	status,2,c
  4631  00039E  D7DD               	goto	l302
  4632  0003A0  0A03               	xorlw	3	; case 6
  4633  0003A2  B4D8               	btfsc	status,2,c
  4634  0003A4  D7DD               	goto	l303
  4635  0003A6  0A01               	xorlw	1	; case 7
  4636  0003A8  B4D8               	btfsc	status,2,c
  4637  0003AA  D7DD               	goto	l304
  4638  0003AC                     l297:
  4639                           
  4640                           ;CAN.c: 348:     if((tempCON & 0x80) > 0)
  4641  0003AC  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4642  0003AE  D0A5               	goto	l4508
  4643                           
  4644                           ;CAN.c: 349:     {;CAN.c: 350:         message->buffer = RXB0CON & 0x1F;
  4645  0003B0  EE20 F003          	lfsr	2,3
  4646  0003B4  500E               	movf	CAN_TakeFrame@message,w,c
  4647  0003B6  26D9               	addwf	fsr2l,f,c
  4648  0003B8  500F               	movf	CAN_TakeFrame@message+1,w,c
  4649  0003BA  22DA               	addwfc	fsr2h,f,c
  4650  0003BC  5060               	movf	3936,w,c	;volatile
  4651  0003BE  0B1F               	andlw	31
  4652  0003C0  6EDF               	movwf	indf2,c
  4653                           
  4654                           ;CAN.c: 351:         message->id.v[0] = RXB0EIDL;
  4655  0003C2  EE20 F004          	lfsr	2,4
  4656  0003C6  500E               	movf	CAN_TakeFrame@message,w,c
  4657  0003C8  26D9               	addwf	fsr2l,f,c
  4658  0003CA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4659  0003CC  22DA               	addwfc	fsr2h,f,c
  4660  0003CE  CF64 FFDF          	movff	3940,indf2	;volatile
  4661                           
  4662                           ;CAN.c: 352:         message->id.v[1] = RXB0EIDH;
  4663  0003D2  EE20 F005          	lfsr	2,5
  4664  0003D6  500E               	movf	CAN_TakeFrame@message,w,c
  4665  0003D8  26D9               	addwf	fsr2l,f,c
  4666  0003DA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4667  0003DC  22DA               	addwfc	fsr2h,f,c
  4668  0003DE  CF63 FFDF          	movff	3939,indf2	;volatile
  4669                           
  4670                           ;CAN.c: 353:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4671  0003E2  EE20 F006          	lfsr	2,6
  4672  0003E6  500E               	movf	CAN_TakeFrame@message,w,c
  4673  0003E8  26D9               	addwf	fsr2l,f,c
  4674  0003EA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4675  0003EC  22DA               	addwfc	fsr2h,f,c
  4676  0003EE  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4677  0003F2  0E03               	movlw	3
  4678  0003F4  1610               	andwf	??_CAN_TakeFrame,f,c
  4679  0003F6  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4680  0003FA  6A07               	clrf	___awdiv@dividend+1,c
  4681  0003FC  0E00               	movlw	0
  4682  0003FE  6E09               	movwf	___awdiv@divisor+1,c
  4683  000400  0E08               	movlw	8
  4684  000402  6E08               	movwf	___awdiv@divisor,c
  4685  000404  EC9D  F008         	call	___awdiv	;wreg free
  4686  000408  5006               	movf	?___awdiv,w,c
  4687  00040A  1010               	iorwf	??_CAN_TakeFrame,w,c
  4688  00040C  6EDF               	movwf	indf2,c
  4689                           
  4690                           ;CAN.c: 354:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4691  00040E  5061               	movf	3937,w,c	;volatile
  4692  000410  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4693  000412  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4694  000414  0E05               	movlw	5
  4695  000416                     u2755:
  4696  000416  90D8               	bcf	status,0,c
  4697  000418  3610               	rlcf	??_CAN_TakeFrame,f,c
  4698  00041A  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4699  00041C  2EE8               	decfsz	wreg,f,c
  4700  00041E  D7FB               	goto	u2755
  4701  000420  EE20 F006          	lfsr	2,6
  4702  000424  500E               	movf	CAN_TakeFrame@message,w,c
  4703  000426  26D9               	addwf	fsr2l,f,c
  4704  000428  500F               	movf	CAN_TakeFrame@message+1,w,c
  4705  00042A  22DA               	addwfc	fsr2h,f,c
  4706  00042C  5010               	movf	??_CAN_TakeFrame,w,c
  4707  00042E  12DE               	iorwf	postinc2,f,c
  4708  000430  5011               	movf	??_CAN_TakeFrame+1,w,c
  4709  000432  12DD               	iorwf	postdec2,f,c
  4710                           
  4711                           ;CAN.c: 355:         message->frame_type=0x03;
  4712  000434  EE20 F002          	lfsr	2,2
  4713  000438  500E               	movf	CAN_TakeFrame@message,w,c
  4714  00043A  26D9               	addwf	fsr2l,f,c
  4715  00043C  500F               	movf	CAN_TakeFrame@message+1,w,c
  4716  00043E  22DA               	addwfc	fsr2h,f,c
  4717  000440  0E03               	movlw	3
  4718  000442  6EDF               	movwf	indf2,c
  4719                           
  4720                           ;CAN.c: 359:         if(RXB0DLCbits.RXRTR == 0)
  4721  000444  BC65               	btfsc	3941,6,c	;volatile
  4722  000446  D068               	goto	l4514
  4723                           
  4724                           ;CAN.c: 360:         {;CAN.c: 361:             message->message_type = 0x01;
  4725  000448  EE20 F001          	lfsr	2,1
  4726  00044C  500E               	movf	CAN_TakeFrame@message,w,c
  4727  00044E  26D9               	addwf	fsr2l,f,c
  4728  000450  500F               	movf	CAN_TakeFrame@message+1,w,c
  4729  000452  22DA               	addwfc	fsr2h,f,c
  4730  000454  0E01               	movlw	1
  4731  000456  6EDF               	movwf	indf2,c
  4732                           
  4733                           ;CAN.c: 362:             message->data_length= RXB0DLC & 0x0F;
  4734  000458  EE20 F010          	lfsr	2,16
  4735  00045C  500E               	movf	CAN_TakeFrame@message,w,c
  4736  00045E  26D9               	addwf	fsr2l,f,c
  4737  000460  500F               	movf	CAN_TakeFrame@message+1,w,c
  4738  000462  22DA               	addwfc	fsr2h,f,c
  4739  000464  5065               	movf	3941,w,c	;volatile
  4740  000466  0B0F               	andlw	15
  4741  000468  6EDF               	movwf	indf2,c
  4742                           
  4743                           ;CAN.c: 363:             if(message->data_length > 8)
  4744  00046A  EE20 F010          	lfsr	2,16
  4745  00046E  500E               	movf	CAN_TakeFrame@message,w,c
  4746  000470  26D9               	addwf	fsr2l,f,c
  4747  000472  500F               	movf	CAN_TakeFrame@message+1,w,c
  4748  000474  22DA               	addwfc	fsr2h,f,c
  4749  000476  0E08               	movlw	8
  4750  000478  64DF               	cpfsgt	indf2,c
  4751  00047A  D041               	goto	l4512
  4752  00047C  D01E               	goto	l4506
  4753  00047E                     l4488:
  4754                           
  4755                           ;CAN.c: 369:                         RXB0CON = 0;
  4756  00047E  0E00               	movlw	0
  4757  000480  6E60               	movwf	3936,c	;volatile
  4758                           
  4759                           ;CAN.c: 370:                         break;
  4760  000482  D03B               	goto	l4508
  4761  000484                     l4490:
  4762                           
  4763                           ;CAN.c: 372:                         RXB1CON = 0;
  4764  000484  0E00               	movlw	0
  4765  000486  010F               	movlb	15	; () banked
  4766  000488  D00E               	goto	L2
  4767  00048A                     l4492:
  4768                           
  4769                           ;CAN.c: 375:                         B0CON = 0;
  4770  00048A  0E00               	movlw	0
  4771  00048C  010E               	movlb	14	; () banked
  4772  00048E  6F20               	movwf	32,b	;volatile
  4773                           
  4774                           ;CAN.c: 376:                         break;
  4775  000490  D034               	goto	l4508
  4776  000492                     l4494:
  4777                           
  4778                           ;CAN.c: 378:                         B1CON = 0;
  4779  000492  0E00               	movlw	0
  4780  000494  010E               	movlb	14	; () banked
  4781  000496  6F30               	movwf	48,b	;volatile
  4782                           
  4783                           ;CAN.c: 379:                         break;
  4784  000498  D030               	goto	l4508
  4785  00049A                     l4496:
  4786                           
  4787                           ;CAN.c: 381:                         B2CON = 0;
  4788  00049A  0E00               	movlw	0
  4789  00049C  010E               	movlb	14	; () banked
  4790  00049E  6F40               	movwf	64,b	;volatile
  4791                           
  4792                           ;CAN.c: 382:                         break;
  4793  0004A0  D02C               	goto	l4508
  4794  0004A2                     l4498:
  4795                           
  4796                           ;CAN.c: 384:                         B3CON = 0;
  4797  0004A2  0E00               	movlw	0
  4798  0004A4  010E               	movlb	14	; () banked
  4799  0004A6                     L2:
  4800  0004A6  6F50               	movwf	80,b	;volatile
  4801                           
  4802                           ;CAN.c: 385:                         break;
  4803  0004A8  D028               	goto	l4508
  4804  0004AA                     l4500:
  4805                           
  4806                           ;CAN.c: 387:                         B4CON = 0;
  4807  0004AA  0E00               	movlw	0
  4808  0004AC  010E               	movlb	14	; () banked
  4809  0004AE  6F60               	movwf	96,b	;volatile
  4810                           
  4811                           ;CAN.c: 388:                         break;
  4812  0004B0  D024               	goto	l4508
  4813  0004B2                     l4502:
  4814                           
  4815                           ;CAN.c: 390:                         B5CON = 0;
  4816  0004B2  0E00               	movlw	0
  4817  0004B4  010E               	movlb	14	; () banked
  4818  0004B6  6F70               	movwf	112,b	;volatile
  4819                           
  4820                           ;CAN.c: 391:                         break;
  4821  0004B8  D020               	goto	l4508
  4822  0004BA                     l4506:
  4823  0004BA  5013               	movf	CAN_TakeFrame@k,w,c
  4824  0004BC  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4825  0004BE  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4826                           
  4827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4828                           ; Switch size 1, requested type "simple"
  4829                           ; Number of cases is 1, Range of values is 0 to 0
  4830                           ; switch strategies available:
  4831                           ; Name         Instructions Cycles
  4832                           ; simple_byte            4     3 (average)
  4833                           ;	Chosen strategy is simple_byte
  4834  0004C0  5011               	movf	??_CAN_TakeFrame+1,w,c
  4835  0004C2  0A00               	xorlw	0	; case 0
  4836  0004C4  A4D8               	btfss	status,2,c
  4837  0004C6  D019               	goto	l4508
  4838                           
  4839                           ; Switch size 1, requested type "simple"
  4840                           ; Number of cases is 8, Range of values is 0 to 7
  4841                           ; switch strategies available:
  4842                           ; Name         Instructions Cycles
  4843                           ; simple_byte           25    13 (average)
  4844                           ;	Chosen strategy is simple_byte
  4845  0004C8  5010               	movf	??_CAN_TakeFrame,w,c
  4846  0004CA  0A00               	xorlw	0	; case 0
  4847  0004CC  B4D8               	btfsc	status,2,c
  4848  0004CE  D7D7               	goto	l4488
  4849  0004D0  0A01               	xorlw	1	; case 1
  4850  0004D2  B4D8               	btfsc	status,2,c
  4851  0004D4  D7D7               	goto	l4490
  4852  0004D6  0A03               	xorlw	3	; case 2
  4853  0004D8  B4D8               	btfsc	status,2,c
  4854  0004DA  D7D7               	goto	l4492
  4855  0004DC  0A01               	xorlw	1	; case 3
  4856  0004DE  B4D8               	btfsc	status,2,c
  4857  0004E0  D7D8               	goto	l4494
  4858  0004E2  0A07               	xorlw	7	; case 4
  4859  0004E4  B4D8               	btfsc	status,2,c
  4860  0004E6  D7D9               	goto	l4496
  4861  0004E8  0A01               	xorlw	1	; case 5
  4862  0004EA  B4D8               	btfsc	status,2,c
  4863  0004EC  D7DA               	goto	l4498
  4864  0004EE  0A03               	xorlw	3	; case 6
  4865  0004F0  B4D8               	btfsc	status,2,c
  4866  0004F2  D7DB               	goto	l4500
  4867  0004F4  0A01               	xorlw	1	; case 7
  4868  0004F6  B4D8               	btfsc	status,2,c
  4869  0004F8  D7DC               	goto	l4502
  4870  0004FA                     l4508:
  4871                           
  4872                           ;CAN.c: 393:                 return FALSE;
  4873  0004FA  0E00               	movlw	0
  4874  0004FC  0012               	return	
  4875  0004FE                     l4512:
  4876                           
  4877                           ;CAN.c: 395:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4878  0004FE  0E08               	movlw	8
  4879  000500  240E               	addwf	CAN_TakeFrame@message,w,c
  4880  000502  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4881  000504  0E00               	movlw	0
  4882  000506  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4883  000508  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4884  00050A  0E66               	movlw	102
  4885  00050C  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4886  00050E  0E0F               	movlw	15
  4887  000510  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4888  000512  EC93  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4889                           
  4890                           ;CAN.c: 396:         }
  4891  000516  D027               	goto	l4534
  4892  000518                     l4514:
  4893                           
  4894                           ;CAN.c: 399:         {;CAN.c: 400:             message->message_type=0x02;
  4895  000518  EE20 F001          	lfsr	2,1
  4896  00051C  500E               	movf	CAN_TakeFrame@message,w,c
  4897  00051E  26D9               	addwf	fsr2l,f,c
  4898  000520  500F               	movf	CAN_TakeFrame@message+1,w,c
  4899  000522  22DA               	addwfc	fsr2h,f,c
  4900  000524  0E02               	movlw	2
  4901  000526  6EDF               	movwf	indf2,c
  4902  000528  D01E               	goto	l4534
  4903  00052A                     l4516:
  4904                           
  4905                           ;CAN.c: 406:                 RXB0CON = 0;
  4906  00052A  0E00               	movlw	0
  4907  00052C  6E60               	movwf	3936,c	;volatile
  4908                           
  4909                           ;CAN.c: 407:                 break;
  4910  00052E  D03B               	goto	l4536
  4911  000530                     l4518:
  4912                           
  4913                           ;CAN.c: 409:                 RXB1CON = 0;
  4914  000530  0E00               	movlw	0
  4915  000532  010F               	movlb	15	; () banked
  4916  000534  D00E               	goto	L3
  4917  000536                     l4520:
  4918                           
  4919                           ;CAN.c: 412:                 B0CON = 0;
  4920  000536  0E00               	movlw	0
  4921  000538  010E               	movlb	14	; () banked
  4922  00053A  6F20               	movwf	32,b	;volatile
  4923                           
  4924                           ;CAN.c: 413:                 break;
  4925  00053C  D034               	goto	l4536
  4926  00053E                     l4522:
  4927                           
  4928                           ;CAN.c: 415:                 B1CON = 0;
  4929  00053E  0E00               	movlw	0
  4930  000540  010E               	movlb	14	; () banked
  4931  000542  6F30               	movwf	48,b	;volatile
  4932                           
  4933                           ;CAN.c: 416:                 break;
  4934  000544  D030               	goto	l4536
  4935  000546                     l4524:
  4936                           
  4937                           ;CAN.c: 418:                 B2CON = 0;
  4938  000546  0E00               	movlw	0
  4939  000548  010E               	movlb	14	; () banked
  4940  00054A  6F40               	movwf	64,b	;volatile
  4941                           
  4942                           ;CAN.c: 419:                 break;
  4943  00054C  D02C               	goto	l4536
  4944  00054E                     l4526:
  4945                           
  4946                           ;CAN.c: 421:                 B3CON = 0;
  4947  00054E  0E00               	movlw	0
  4948  000550  010E               	movlb	14	; () banked
  4949  000552                     L3:
  4950  000552  6F50               	movwf	80,b	;volatile
  4951                           
  4952                           ;CAN.c: 422:                 break;
  4953  000554  D028               	goto	l4536
  4954  000556                     l4528:
  4955                           
  4956                           ;CAN.c: 424:                 B4CON = 0;
  4957  000556  0E00               	movlw	0
  4958  000558  010E               	movlb	14	; () banked
  4959  00055A  6F60               	movwf	96,b	;volatile
  4960                           
  4961                           ;CAN.c: 425:                 break;
  4962  00055C  D024               	goto	l4536
  4963  00055E                     l4530:
  4964                           
  4965                           ;CAN.c: 427:                 B5CON = 0;
  4966  00055E  0E00               	movlw	0
  4967  000560  010E               	movlb	14	; () banked
  4968  000562  6F70               	movwf	112,b	;volatile
  4969                           
  4970                           ;CAN.c: 428:                 break;
  4971  000564  D020               	goto	l4536
  4972  000566                     l4534:
  4973  000566  5013               	movf	CAN_TakeFrame@k,w,c
  4974  000568  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4975  00056A  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4976                           
  4977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4978                           ; Switch size 1, requested type "simple"
  4979                           ; Number of cases is 1, Range of values is 0 to 0
  4980                           ; switch strategies available:
  4981                           ; Name         Instructions Cycles
  4982                           ; simple_byte            4     3 (average)
  4983                           ;	Chosen strategy is simple_byte
  4984  00056C  5011               	movf	??_CAN_TakeFrame+1,w,c
  4985  00056E  0A00               	xorlw	0	; case 0
  4986  000570  A4D8               	btfss	status,2,c
  4987  000572  D019               	goto	l4536
  4988                           
  4989                           ; Switch size 1, requested type "simple"
  4990                           ; Number of cases is 8, Range of values is 0 to 7
  4991                           ; switch strategies available:
  4992                           ; Name         Instructions Cycles
  4993                           ; simple_byte           25    13 (average)
  4994                           ;	Chosen strategy is simple_byte
  4995  000574  5010               	movf	??_CAN_TakeFrame,w,c
  4996  000576  0A00               	xorlw	0	; case 0
  4997  000578  B4D8               	btfsc	status,2,c
  4998  00057A  D7D7               	goto	l4516
  4999  00057C  0A01               	xorlw	1	; case 1
  5000  00057E  B4D8               	btfsc	status,2,c
  5001  000580  D7D7               	goto	l4518
  5002  000582  0A03               	xorlw	3	; case 2
  5003  000584  B4D8               	btfsc	status,2,c
  5004  000586  D7D7               	goto	l4520
  5005  000588  0A01               	xorlw	1	; case 3
  5006  00058A  B4D8               	btfsc	status,2,c
  5007  00058C  D7D8               	goto	l4522
  5008  00058E  0A07               	xorlw	7	; case 4
  5009  000590  B4D8               	btfsc	status,2,c
  5010  000592  D7D9               	goto	l4524
  5011  000594  0A01               	xorlw	1	; case 5
  5012  000596  B4D8               	btfsc	status,2,c
  5013  000598  D7DA               	goto	l4526
  5014  00059A  0A03               	xorlw	3	; case 6
  5015  00059C  B4D8               	btfsc	status,2,c
  5016  00059E  D7DB               	goto	l4528
  5017  0005A0  0A01               	xorlw	1	; case 7
  5018  0005A2  B4D8               	btfsc	status,2,c
  5019  0005A4  D7DC               	goto	l4530
  5020  0005A6                     l4536:
  5021                           
  5022                           ;CAN.c: 430:         return TRUE;
  5023  0005A6  0E01               	movlw	1
  5024  0005A8  0012               	return		;funcret
  5025  0005AA                     __end_of_CAN_TakeFrame:
  5026                           	opt callstack 0
  5027                           
  5028 ;; *************** function ___awdiv *****************
  5029 ;; Defined at:
  5030 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  dividend        2    5[COMRAM] int 
  5033 ;;  divisor         2    7[COMRAM] int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  quotient        2   11[COMRAM] int 
  5036 ;;  sign            1   10[COMRAM] unsigned char 
  5037 ;;  counter         1    9[COMRAM] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  2    5[COMRAM] int 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;Total ram usage:        8 bytes
  5052 ;; Hardware stack levels used:    1
  5053 ;; Hardware stack levels required when called:    3
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_CAN_TakeFrame
  5058 ;;		_FRAME_HandleCanFrame
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text35
  5063  00113A                     __ptext35:
  5064                           	opt callstack 0
  5065  00113A                     ___awdiv:
  5066                           	opt callstack 25
  5067                           
  5068                           ;incstack = 0
  5069  00113A  0E00               	movlw	0
  5070  00113C  6E0B               	movwf	___awdiv@sign,c
  5071  00113E  AE09               	btfss	___awdiv@divisor+1,7,c
  5072  001140  D006               	goto	l4416
  5073  001142  6C08               	negf	___awdiv@divisor,c
  5074  001144  1E09               	comf	___awdiv@divisor+1,f,c
  5075  001146  B0D8               	btfsc	status,0,c
  5076  001148  2A09               	incf	___awdiv@divisor+1,f,c
  5077  00114A  0E01               	movlw	1
  5078  00114C  6E0B               	movwf	___awdiv@sign,c
  5079  00114E                     l4416:
  5080  00114E  AE07               	btfss	___awdiv@dividend+1,7,c
  5081  001150  D006               	goto	l4422
  5082  001152  6C06               	negf	___awdiv@dividend,c
  5083  001154  1E07               	comf	___awdiv@dividend+1,f,c
  5084  001156  B0D8               	btfsc	status,0,c
  5085  001158  2A07               	incf	___awdiv@dividend+1,f,c
  5086  00115A  0E01               	movlw	1
  5087  00115C  1A0B               	xorwf	___awdiv@sign,f,c
  5088  00115E                     l4422:
  5089  00115E  0E00               	movlw	0
  5090  001160  6E0D               	movwf	___awdiv@quotient+1,c
  5091  001162  0E00               	movlw	0
  5092  001164  6E0C               	movwf	___awdiv@quotient,c
  5093  001166  5008               	movf	___awdiv@divisor,w,c
  5094  001168  1009               	iorwf	___awdiv@divisor+1,w,c
  5095  00116A  B4D8               	btfsc	status,2,c
  5096  00116C  D01C               	goto	l4444
  5097  00116E  0E01               	movlw	1
  5098  001170  6E0A               	movwf	___awdiv@counter,c
  5099  001172  D004               	goto	l4430
  5100  001174                     l4428:
  5101  001174  90D8               	bcf	status,0,c
  5102  001176  3608               	rlcf	___awdiv@divisor,f,c
  5103  001178  3609               	rlcf	___awdiv@divisor+1,f,c
  5104  00117A  2A0A               	incf	___awdiv@counter,f,c
  5105  00117C                     l4430:
  5106  00117C  AE09               	btfss	___awdiv@divisor+1,7,c
  5107  00117E  D7FA               	goto	l4428
  5108  001180                     u2690:
  5109  001180  90D8               	bcf	status,0,c
  5110  001182  360C               	rlcf	___awdiv@quotient,f,c
  5111  001184  360D               	rlcf	___awdiv@quotient+1,f,c
  5112  001186  5008               	movf	___awdiv@divisor,w,c
  5113  001188  5C06               	subwf	___awdiv@dividend,w,c
  5114  00118A  5009               	movf	___awdiv@divisor+1,w,c
  5115  00118C  5807               	subwfb	___awdiv@dividend+1,w,c
  5116  00118E  A0D8               	btfss	status,0,c
  5117  001190  D005               	goto	l4440
  5118  001192  5008               	movf	___awdiv@divisor,w,c
  5119  001194  5E06               	subwf	___awdiv@dividend,f,c
  5120  001196  5009               	movf	___awdiv@divisor+1,w,c
  5121  001198  5A07               	subwfb	___awdiv@dividend+1,f,c
  5122  00119A  800C               	bsf	___awdiv@quotient,0,c
  5123  00119C                     l4440:
  5124  00119C  90D8               	bcf	status,0,c
  5125  00119E  3209               	rrcf	___awdiv@divisor+1,f,c
  5126  0011A0  3208               	rrcf	___awdiv@divisor,f,c
  5127  0011A2  2E0A               	decfsz	___awdiv@counter,f,c
  5128  0011A4  D7ED               	goto	u2690
  5129  0011A6                     l4444:
  5130  0011A6  500B               	movf	___awdiv@sign,w,c
  5131  0011A8  B4D8               	btfsc	status,2,c
  5132  0011AA  D004               	goto	l4448
  5133  0011AC  6C0C               	negf	___awdiv@quotient,c
  5134  0011AE  1E0D               	comf	___awdiv@quotient+1,f,c
  5135  0011B0  B0D8               	btfsc	status,0,c
  5136  0011B2  2A0D               	incf	___awdiv@quotient+1,f,c
  5137  0011B4                     l4448:
  5138  0011B4  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5139  0011B8  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5140  0011BC  0012               	return		;funcret
  5141  0011BE                     __end_of___awdiv:
  5142                           	opt callstack 0
  5143                           
  5144 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5145 ;; Defined at:
  5146 ;;		line 232 in file "CAN.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5149 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5150 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5151 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  i               1    9[COMRAM] unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;Total ram usage:        5 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    3
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_CAN_SendFrame
  5174 ;;		_CAN_TakeFrame
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text36
  5179  001926                     __ptext36:
  5180                           	opt callstack 0
  5181  001926                     _CAN_MoveBuffIntoFrame:
  5182                           	opt callstack 24
  5183                           
  5184                           ;CAN.c: 232: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 233: {;CAN.c
      +                          : 234:     BYTE i;;CAN.c: 235:     for(i=0; i<8; ++i)
  5185                           
  5186                           ;incstack = 0
  5187  001926  0E00               	movlw	0
  5188  001928  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  5189  00192A                     l3870:
  5190                           
  5191                           ;CAN.c: 236:     {;CAN.c: 237:         Ram[i]=(*(Buf+i));
  5192  00192A  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5193  00192C  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5194  00192E  6ED9               	movwf	fsr2l,c
  5195  001930  0E00               	movlw	0
  5196  001932  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5197  001934  6EDA               	movwf	fsr2h,c
  5198  001936  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5199  001938  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5200  00193A  6EE1               	movwf	fsr1l,c
  5201  00193C  0E00               	movlw	0
  5202  00193E  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5203  001940  6EE2               	movwf	fsr1h,c
  5204  001942  CFDF FFE7          	movff	indf2,indf1
  5205                           
  5206                           ;CAN.c: 238:     }
  5207  001946  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5208  001948  0E07               	movlw	7
  5209  00194A  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5210  00194C  D7EE               	goto	l3870
  5211  00194E  0012               	return	
  5212  001950                     __end_of_CAN_MoveBuffIntoFrame:
  5213                           	opt callstack 0
  5214                           
  5215 ;; *************** function _TMR1_Update_flag_Set *****************
  5216 ;; Defined at:
  5217 ;;		line 32 in file "TMR1.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  a               2    5[COMRAM] unsigned int 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		None
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;Total ram usage:        2 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    3
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_main
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text37
  5246  001A9E                     __ptext37:
  5247                           	opt callstack 0
  5248  001A9E                     _TMR1_Update_flag_Set:
  5249                           	opt callstack 27
  5250                           
  5251                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5252                           
  5253                           ;incstack = 0
  5254  001A9E  C006  F034         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5255  001AA2  C007  F035         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5256  001AA6  0012               	return		;funcret
  5257  001AA8                     __end_of_TMR1_Update_flag_Set:
  5258                           	opt callstack 0
  5259                           
  5260 ;; *************** function _TMR1_Update_flag_Get *****************
  5261 ;; Defined at:
  5262 ;;		line 47 in file "TMR1.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  2    5[COMRAM] unsigned int 
  5269 ;; Registers used:
  5270 ;;		None
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5280 ;;Total ram usage:        2 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    3
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_main
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text38
  5291  001AA8                     __ptext38:
  5292                           	opt callstack 0
  5293  001AA8                     _TMR1_Update_flag_Get:
  5294                           	opt callstack 27
  5295                           
  5296                           ;TMR1.c: 49:     return TMR1_Update_flag;
  5297                           
  5298                           ;incstack = 0
  5299  001AA8  C034  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5300  001AAC  C035  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5301  001AB0  0012               	return		;funcret
  5302  001AB2                     __end_of_TMR1_Update_flag_Get:
  5303                           	opt callstack 0
  5304                           
  5305 ;; *************** function _ReadFlash *****************
  5306 ;; Defined at:
  5307 ;;		line 98 in file "main.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  addr            2    5[COMRAM] unsigned int 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;		None
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  2    5[COMRAM] unsigned int 
  5314 ;; Registers used:
  5315 ;;		status,2
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;Total ram usage:        2 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    3
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		_main
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text39
  5336  001A14                     __ptext39:
  5337                           	opt callstack 0
  5338  001A14                     _ReadFlash:
  5339                           	opt callstack 27
  5340                           
  5341                           ;main.c: 99:     TBLPTR = addr;
  5342                           
  5343                           ;incstack = 0
  5344  001A14  C006  FFF6         	movff	ReadFlash@addr,tblptrl	;volatile
  5345  001A18  C007  FFF7         	movff	ReadFlash@addr+1,tblptrh	;volatile
  5346  001A1C  6AF8               	clrf	tblptru,c	;volatile
  5347  001A1E  0008               	tblrd		*	;# 
  5348                           
  5349                           ;main.c: 101:     return TABLAT;
  5350  001A20  CFF5 F006          	movff	tablat,?_ReadFlash	;volatile
  5351  001A24  6A07               	clrf	?_ReadFlash+1,c
  5352  001A26  0012               	return		;funcret
  5353  001A28                     __end_of_ReadFlash:
  5354                           	opt callstack 0
  5355                           
  5356 ;; *************** function _LED_Update *****************
  5357 ;; Defined at:
  5358 ;;		line 105 in file "LED.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      unsigned char 
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;Total ram usage:        0 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    5
  5379 ;; This function calls:
  5380 ;;		_LED_Control
  5381 ;;		_LED_Left
  5382 ;;		_LED_Light_Pos
  5383 ;;		_LED_Right
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text40
  5390  0011BE                     __ptext40:
  5391                           	opt callstack 0
  5392  0011BE                     _LED_Update:
  5393                           	opt callstack 25
  5394                           
  5395                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  5396                           
  5397                           ;incstack = 0
  5398  0011BE  503B               	movf	_LOCK,w,c
  5399  0011C0  A4D8               	btfss	status,2,c
  5400  0011C2  D013               	goto	l4704
  5401                           
  5402                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  5403  0011C4  0E00               	movlw	0
  5404  0011C6  6E07               	movwf	LED_Control@diode+1,c
  5405  0011C8  0E00               	movlw	0
  5406  0011CA  6E06               	movwf	LED_Control@diode,c
  5407  0011CC  0E00               	movlw	0
  5408  0011CE  EC91  F004         	call	_LED_Control
  5409                           
  5410                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5411  0011D2  C050  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5412  0011D6  C051  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5413  0011DA  C054  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5414  0011DE  C055  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5415  0011E2  5056               	movf	LED_Update@Green,w,c
  5416  0011E4  ECAB  F007         	call	_LED_Light_Pos
  5417                           
  5418                           ;LED.c: 117:     }
  5419  0011E8  D012               	goto	l391
  5420  0011EA                     l4704:
  5421                           
  5422                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  5423  0011EA  0E00               	movlw	0
  5424  0011EC  6E07               	movwf	LED_Control@diode+1,c
  5425  0011EE  0E00               	movlw	0
  5426  0011F0  6E06               	movwf	LED_Control@diode,c
  5427  0011F2  5056               	movf	LED_Update@Green,w,c
  5428  0011F4  EC91  F004         	call	_LED_Control
  5429                           
  5430                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5431  0011F8  C052  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5432  0011FC  C053  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5433  001200  C054  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5434  001204  C055  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5435  001208  0E00               	movlw	0
  5436  00120A  ECAB  F007         	call	_LED_Light_Pos
  5437  00120E                     l391:
  5438                           
  5439                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  5440  00120E  C052  F006         	movff	LED_Update@pos1,LED_Right@a
  5441  001212  C053  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5442  001216  EC35  F00B         	call	_LED_Right	;wreg free
  5443  00121A  C006  F052         	movff	?_LED_Right,LED_Update@pos1
  5444  00121E  C007  F053         	movff	?_LED_Right+1,LED_Update@pos1+1
  5445                           
  5446                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  5447  001222  C050  F006         	movff	LED_Update@pos2,LED_Left@a
  5448  001226  C051  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5449  00122A  EC80  F00B         	call	_LED_Left	;wreg free
  5450  00122E  C006  F050         	movff	?_LED_Left,LED_Update@pos2
  5451  001232  C007  F051         	movff	?_LED_Left+1,LED_Update@pos2+1
  5452  001236  0012               	return		;funcret
  5453  001238                     __end_of_LED_Update:
  5454                           	opt callstack 0
  5455                           
  5456 ;; *************** function _LED_Light_Pos *****************
  5457 ;; Defined at:
  5458 ;;		line 196 in file "LED.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  color           1    wreg     enum E10644
  5461 ;;  pos             2   12[COMRAM] unsigned int 
  5462 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  color           1   16[COMRAM] enum E10644
  5465 ;;  flage           2   21[COMRAM] unsigned int 
  5466 ;;  pos2            2   19[COMRAM] unsigned int 
  5467 ;;  LED_array       2   17[COMRAM] unsigned int 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  2   12[COMRAM] unsigned int 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;Total ram usage:       11 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    4
  5484 ;; This function calls:
  5485 ;;		_LED_Control
  5486 ;;		_LED_Left
  5487 ;;		_LED_Right
  5488 ;;		___lwdiv
  5489 ;; This function is called by:
  5490 ;;		_LED_Update
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text41
  5495  000F56                     __ptext41:
  5496                           	opt callstack 0
  5497  000F56                     _LED_Light_Pos:
  5498                           	opt callstack 25
  5499                           
  5500                           ;incstack = 0
  5501                           ;LED_Light_Pos@color stored from wreg
  5502  000F56  6E11               	movwf	LED_Light_Pos@color,c
  5503                           
  5504                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  5505  000F58  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5506  000F5C  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5507                           
  5508                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  5509  000F60  0E00               	movlw	0
  5510  000F62  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5511  000F64  0E00               	movlw	0
  5512  000F66  6E12               	movwf	LED_Light_Pos@LED_array,c
  5513                           
  5514                           ;LED.c: 200:     UINT flage = fulfillment/10;
  5515  000F68  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5516  000F6C  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5517  000F70  0E00               	movlw	0
  5518  000F72  6E09               	movwf	___lwdiv@divisor+1,c
  5519  000F74  0E0A               	movlw	10
  5520  000F76  6E08               	movwf	___lwdiv@divisor,c
  5521  000F78  ECE5  F00A         	call	___lwdiv	;wreg free
  5522  000F7C  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5523  000F80  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5524                           
  5525                           ;LED.c: 201:     if(color == RED)
  5526  000F84  5011               	movf	LED_Light_Pos@color,w,c
  5527  000F86  B4D8               	btfsc	status,2,c
  5528  000F88  D017               	goto	l4574
  5529  000F8A  D031               	goto	l4582
  5530  000F8C                     l4568:
  5531                           
  5532                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5533  000F8C  5012               	movf	LED_Light_Pos@LED_array,w,c
  5534  000F8E  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5535  000F90  6E12               	movwf	LED_Light_Pos@LED_array,c
  5536  000F92  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5537  000F94  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5538  000F96  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5539                           
  5540                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5541  000F98  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5542  000F9C  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5543  000FA0  EC80  F00B         	call	_LED_Left	;wreg free
  5544  000FA4  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5545  000FA8  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5546                           
  5547                           ;LED.c: 207:             flage = flage - 1;
  5548  000FAC  0EFF               	movlw	255
  5549  000FAE  2416               	addwf	LED_Light_Pos@flage,w,c
  5550  000FB0  6E16               	movwf	LED_Light_Pos@flage,c
  5551  000FB2  0EFF               	movlw	255
  5552  000FB4  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5553  000FB6  6E17               	movwf	LED_Light_Pos@flage+1,c
  5554  000FB8                     l4574:
  5555                           
  5556                           ;LED.c: 203:         while(flage>0)
  5557  000FB8  5016               	movf	LED_Light_Pos@flage,w,c
  5558  000FBA  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5559  000FBC  B4D8               	btfsc	status,2,c
  5560  000FBE  D01B               	goto	u2800
  5561  000FC0  D7E5               	goto	l4568
  5562  000FC2                     l4576:
  5563                           
  5564                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5565  000FC2  5012               	movf	LED_Light_Pos@LED_array,w,c
  5566  000FC4  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5567  000FC6  6E12               	movwf	LED_Light_Pos@LED_array,c
  5568  000FC8  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5569  000FCA  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5570  000FCC  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5571                           
  5572                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5573  000FCE  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5574  000FD2  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5575  000FD6  EC35  F00B         	call	_LED_Right	;wreg free
  5576  000FDA  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5577  000FDE  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5578                           
  5579                           ;LED.c: 216:             flage = flage - 1;
  5580  000FE2  0EFF               	movlw	255
  5581  000FE4  2416               	addwf	LED_Light_Pos@flage,w,c
  5582  000FE6  6E16               	movwf	LED_Light_Pos@flage,c
  5583  000FE8  0EFF               	movlw	255
  5584  000FEA  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5585  000FEC  6E17               	movwf	LED_Light_Pos@flage+1,c
  5586  000FEE                     l4582:
  5587                           
  5588                           ;LED.c: 212:         while(flage>0)
  5589  000FEE  5016               	movf	LED_Light_Pos@flage,w,c
  5590  000FF0  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5591  000FF2  A4D8               	btfss	status,2,c
  5592  000FF4  D7E6               	goto	l4576
  5593  000FF6                     u2800:
  5594                           
  5595                           ;LED.c: 219:     LED_Control(color, LED_array);
  5596  000FF6  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5597  000FFA  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5598  000FFE  5011               	movf	LED_Light_Pos@color,w,c
  5599  001000  EC91  F004         	call	_LED_Control
  5600  001004  0012               	return		;funcret
  5601  001006                     __end_of_LED_Light_Pos:
  5602                           	opt callstack 0
  5603                           
  5604 ;; *************** function ___lwdiv *****************
  5605 ;; Defined at:
  5606 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  dividend        2    5[COMRAM] unsigned int 
  5609 ;;  divisor         2    7[COMRAM] unsigned int 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  quotient        2   10[COMRAM] unsigned int 
  5612 ;;  counter         1    9[COMRAM] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  2    5[COMRAM] unsigned int 
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;Total ram usage:        7 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    3
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_LED_Light_Pos
  5633 ;;		_FRAME_Plot
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text42
  5638  0015CA                     __ptext42:
  5639                           	opt callstack 0
  5640  0015CA                     ___lwdiv:
  5641                           	opt callstack 24
  5642                           
  5643                           ;incstack = 0
  5644  0015CA  0E00               	movlw	0
  5645  0015CC  6E0C               	movwf	___lwdiv@quotient+1,c
  5646  0015CE  0E00               	movlw	0
  5647  0015D0  6E0B               	movwf	___lwdiv@quotient,c
  5648  0015D2  5008               	movf	___lwdiv@divisor,w,c
  5649  0015D4  1009               	iorwf	___lwdiv@divisor+1,w,c
  5650  0015D6  B4D8               	btfsc	status,2,c
  5651  0015D8  D01C               	goto	l1434
  5652  0015DA  0E01               	movlw	1
  5653  0015DC  6E0A               	movwf	___lwdiv@counter,c
  5654  0015DE  D004               	goto	l4116
  5655  0015E0                     l4114:
  5656  0015E0  90D8               	bcf	status,0,c
  5657  0015E2  3608               	rlcf	___lwdiv@divisor,f,c
  5658  0015E4  3609               	rlcf	___lwdiv@divisor+1,f,c
  5659  0015E6  2A0A               	incf	___lwdiv@counter,f,c
  5660  0015E8                     l4116:
  5661  0015E8  AE09               	btfss	___lwdiv@divisor+1,7,c
  5662  0015EA  D7FA               	goto	l4114
  5663  0015EC                     u2310:
  5664  0015EC  90D8               	bcf	status,0,c
  5665  0015EE  360B               	rlcf	___lwdiv@quotient,f,c
  5666  0015F0  360C               	rlcf	___lwdiv@quotient+1,f,c
  5667  0015F2  5008               	movf	___lwdiv@divisor,w,c
  5668  0015F4  5C06               	subwf	___lwdiv@dividend,w,c
  5669  0015F6  5009               	movf	___lwdiv@divisor+1,w,c
  5670  0015F8  5807               	subwfb	___lwdiv@dividend+1,w,c
  5671  0015FA  A0D8               	btfss	status,0,c
  5672  0015FC  D005               	goto	l4126
  5673  0015FE  5008               	movf	___lwdiv@divisor,w,c
  5674  001600  5E06               	subwf	___lwdiv@dividend,f,c
  5675  001602  5009               	movf	___lwdiv@divisor+1,w,c
  5676  001604  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5677  001606  800B               	bsf	___lwdiv@quotient,0,c
  5678  001608                     l4126:
  5679  001608  90D8               	bcf	status,0,c
  5680  00160A  3209               	rrcf	___lwdiv@divisor+1,f,c
  5681  00160C  3208               	rrcf	___lwdiv@divisor,f,c
  5682  00160E  2E0A               	decfsz	___lwdiv@counter,f,c
  5683  001610  D7ED               	goto	u2310
  5684  001612                     l1434:
  5685  001612  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5686  001616  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5687  00161A  0012               	return		;funcret
  5688  00161C                     __end_of___lwdiv:
  5689                           	opt callstack 0
  5690                           
  5691 ;; *************** function _LED_Right *****************
  5692 ;; Defined at:
  5693 ;;		line 140 in file "LED.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  a               2    5[COMRAM] unsigned int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  b               2    9[COMRAM] unsigned int 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  2    5[COMRAM] unsigned int 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;Total ram usage:        6 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    3
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_LED_Update
  5718 ;;		_LED_Light_Pos
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text43
  5723  00166A                     __ptext43:
  5724                           	opt callstack 0
  5725  00166A                     _LED_Right:
  5726                           	opt callstack 26
  5727                           
  5728                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5729                           
  5730                           ;incstack = 0
  5731  00166A  A006               	btfss	LED_Right@a,0,c
  5732  00166C  D018               	goto	l4226
  5733                           
  5734                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5735  00166E  0EFE               	movlw	254
  5736  001670  1406               	andwf	LED_Right@a,w,c
  5737  001672  6E0A               	movwf	LED_Right@b,c
  5738  001674  0E03               	movlw	3
  5739  001676  1407               	andwf	LED_Right@a+1,w,c
  5740  001678  6E0B               	movwf	LED_Right@b+1,c
  5741                           
  5742                           ;LED.c: 145:         b = b >> 1;
  5743  00167A  90D8               	bcf	status,0,c
  5744  00167C  300B               	rrcf	LED_Right@b+1,w,c
  5745  00167E  6E08               	movwf	??_LED_Right& (0+255),c
  5746  001680  300A               	rrcf	LED_Right@b,w,c
  5747  001682  6E0A               	movwf	LED_Right@b,c
  5748  001684  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5749                           
  5750                           ;LED.c: 146:         b = b | 0b1000000000;
  5751  001688  0E00               	movlw	0
  5752  00168A  100A               	iorwf	LED_Right@b,w,c
  5753  00168C  6E0A               	movwf	LED_Right@b,c
  5754  00168E  0E02               	movlw	2
  5755  001690  100B               	iorwf	LED_Right@b+1,w,c
  5756  001692  6E0B               	movwf	LED_Right@b+1,c
  5757                           
  5758                           ;LED.c: 147:         return b;
  5759  001694  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5760  001698  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5761  00169C  0012               	return	
  5762  00169E                     l4226:
  5763                           
  5764                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5765  00169E  90D8               	bcf	status,0,c
  5766  0016A0  3007               	rrcf	LED_Right@a+1,w,c
  5767  0016A2  6E08               	movwf	??_LED_Right& (0+255),c
  5768  0016A4  3006               	rrcf	LED_Right@a,w,c
  5769  0016A6  6E06               	movwf	LED_Right@a,c
  5770  0016A8  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5771                           
  5772                           ;LED.c: 152:         return a;
  5773  0016AC  C006  F006         	movff	LED_Right@a,?_LED_Right
  5774  0016B0  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5775  0016B4  0012               	return		;funcret
  5776  0016B6                     __end_of_LED_Right:
  5777                           	opt callstack 0
  5778                           
  5779 ;; *************** function _LED_Left *****************
  5780 ;; Defined at:
  5781 ;;		line 167 in file "LED.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  a               2    5[COMRAM] unsigned int 
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  b               2    7[COMRAM] unsigned int 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  2    5[COMRAM] unsigned int 
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;Total ram usage:        4 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; Hardware stack levels required when called:    3
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_LED_Update
  5806 ;;		_LED_Light_Pos
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text44
  5811  001700                     __ptext44:
  5812                           	opt callstack 0
  5813  001700                     _LED_Left:
  5814                           	opt callstack 25
  5815                           
  5816                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5817                           
  5818                           ;incstack = 0
  5819  001700  A207               	btfss	LED_Left@a+1,1,c
  5820  001702  D015               	goto	l4242
  5821                           
  5822                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5823  001704  0EFF               	movlw	255
  5824  001706  1406               	andwf	LED_Left@a,w,c
  5825  001708  6E08               	movwf	LED_Left@b,c
  5826  00170A  0E01               	movlw	1
  5827  00170C  1407               	andwf	LED_Left@a+1,w,c
  5828  00170E  6E09               	movwf	LED_Left@b+1,c
  5829                           
  5830                           ;LED.c: 172:         b = b << 1;
  5831  001710  90D8               	bcf	status,0,c
  5832  001712  3408               	rlcf	LED_Left@b,w,c
  5833  001714  6E08               	movwf	LED_Left@b,c
  5834  001716  3409               	rlcf	LED_Left@b+1,w,c
  5835  001718  6E09               	movwf	LED_Left@b+1,c
  5836                           
  5837                           ;LED.c: 173:         b = b | 0b0000000001;
  5838  00171A  0E01               	movlw	1
  5839  00171C  1008               	iorwf	LED_Left@b,w,c
  5840  00171E  6E08               	movwf	LED_Left@b,c
  5841  001720  5009               	movf	LED_Left@b+1,w,c
  5842  001722  6E09               	movwf	LED_Left@b+1,c
  5843                           
  5844                           ;LED.c: 174:         return b;
  5845  001724  C008  F006         	movff	LED_Left@b,?_LED_Left
  5846  001728  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5847  00172C  0012               	return	
  5848  00172E                     l4242:
  5849                           
  5850                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5851  00172E  90D8               	bcf	status,0,c
  5852  001730  3406               	rlcf	LED_Left@a,w,c
  5853  001732  6E06               	movwf	LED_Left@a,c
  5854  001734  3407               	rlcf	LED_Left@a+1,w,c
  5855  001736  6E07               	movwf	LED_Left@a+1,c
  5856                           
  5857                           ;LED.c: 179:         return a;
  5858  001738  C006  F006         	movff	LED_Left@a,?_LED_Left
  5859  00173C  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5860  001740  0012               	return		;funcret
  5861  001742                     __end_of_LED_Left:
  5862                           	opt callstack 0
  5863                           
  5864 ;; *************** function _INI_All *****************
  5865 ;; Defined at:
  5866 ;;		line 54 in file "INI.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;		None
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;Total ram usage:        0 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    6
  5887 ;; This function calls:
  5888 ;;		_CAN_Setup
  5889 ;;		_INI_GlobalInterrupt
  5890 ;;		_INI_LED_Start
  5891 ;;		_INI_OUTPUT
  5892 ;;		_INI_Timer
  5893 ;;		_NVMInit
  5894 ;;		_ReadDataToEEPROM
  5895 ;; This function is called by:
  5896 ;;		_main
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text45
  5901  00199C                     __ptext45:
  5902                           	opt callstack 0
  5903  00199C                     _INI_All:
  5904                           	opt callstack 24
  5905                           
  5906                           ;INI.c: 57:     WDTCONbits.SWDTEN = 1;
  5907                           
  5908                           ;incstack = 0
  5909  00199C  80D1               	bsf	4049,0,c	;volatile
  5910                           
  5911                           ;INI.c: 60:     NVMInit();
  5912  00199E  ECA1  F00B         	call	_NVMInit	;wreg free
  5913                           
  5914                           ;INI.c: 62:     ReadDataToEEPROM();
  5915  0019A2  ECD5  F006         	call	_ReadDataToEEPROM	;wreg free
  5916  0019A6  0004               	clrwdt		;# 
  5917                           
  5918                           ;INI.c: 66:     INI_OUTPUT();
  5919  0019A8  ECDF  F00C         	call	_INI_OUTPUT	;wreg free
  5920                           
  5921                           ;INI.c: 68:     CAN_Setup();
  5922  0019AC  ECFD  F009         	call	_CAN_Setup	;wreg free
  5923                           
  5924                           ;INI.c: 69:     INI_GlobalInterrupt();
  5925  0019B0  EC24  F00D         	call	_INI_GlobalInterrupt	;wreg free
  5926                           
  5927                           ;INI.c: 71:     INI_Timer();
  5928  0019B4  ECFE  F00C         	call	_INI_Timer	;wreg free
  5929                           
  5930                           ;INI.c: 73:     INI_LED_Start();
  5931  0019B8  EC79  F00C         	call	_INI_LED_Start	;wreg free
  5932  0019BC  0012               	return		;funcret
  5933  0019BE                     __end_of_INI_All:
  5934                           	opt callstack 0
  5935                           
  5936 ;; *************** function _ReadDataToEEPROM *****************
  5937 ;; Defined at:
  5938 ;;		line 404 in file "FRAME.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;Total ram usage:        0 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    5
  5959 ;; This function calls:
  5960 ;;		_NVMRead
  5961 ;; This function is called by:
  5962 ;;		_INI_All
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text46
  5967  000DAA                     __ptext46:
  5968                           	opt callstack 0
  5969  000DAA                     _ReadDataToEEPROM:
  5970                           	opt callstack 24
  5971                           
  5972                           ;FRAME.c: 406:     NVMRead(&NeightAdress1,4,2);
  5973                           
  5974                           ;incstack = 0
  5975  000DAA  0E4C               	movlw	low _NeightAdress1
  5976  000DAC  6E08               	movwf	NVMRead@dest,c
  5977  000DAE  0E00               	movlw	high _NeightAdress1
  5978  000DB0  6E09               	movwf	NVMRead@dest+1,c
  5979  000DB2  0E00               	movlw	0
  5980  000DB4  6E0B               	movwf	NVMRead@addr+1,c
  5981  000DB6  0E04               	movlw	4
  5982  000DB8  6E0A               	movwf	NVMRead@addr,c
  5983  000DBA  0E00               	movlw	0
  5984  000DBC  6E0D               	movwf	NVMRead@count+1,c
  5985  000DBE  0E02               	movlw	2
  5986  000DC0  6E0C               	movwf	NVMRead@count,c
  5987  000DC2  EC5F  F00C         	call	_NVMRead	;wreg free
  5988                           
  5989                           ;FRAME.c: 407:     NVMRead(&NeightAdress2,7,2);
  5990  000DC6  0E57               	movlw	low _NeightAdress2
  5991  000DC8  6E08               	movwf	NVMRead@dest,c
  5992  000DCA  0E00               	movlw	high _NeightAdress2
  5993  000DCC  6E09               	movwf	NVMRead@dest+1,c
  5994  000DCE  0E00               	movlw	0
  5995  000DD0  6E0B               	movwf	NVMRead@addr+1,c
  5996  000DD2  0E07               	movlw	7
  5997  000DD4  6E0A               	movwf	NVMRead@addr,c
  5998  000DD6  0E00               	movlw	0
  5999  000DD8  6E0D               	movwf	NVMRead@count+1,c
  6000  000DDA  0E02               	movlw	2
  6001  000DDC  6E0C               	movwf	NVMRead@count,c
  6002  000DDE  EC5F  F00C         	call	_NVMRead	;wreg free
  6003                           
  6004                           ;FRAME.c: 408:     NVMRead(&NeightAdress3,10,2);
  6005  000DE2  0E4A               	movlw	low _NeightAdress3
  6006  000DE4  6E08               	movwf	NVMRead@dest,c
  6007  000DE6  0E00               	movlw	high _NeightAdress3
  6008  000DE8  6E09               	movwf	NVMRead@dest+1,c
  6009  000DEA  0E00               	movlw	0
  6010  000DEC  6E0B               	movwf	NVMRead@addr+1,c
  6011  000DEE  0E0A               	movlw	10
  6012  000DF0  6E0A               	movwf	NVMRead@addr,c
  6013  000DF2  0E00               	movlw	0
  6014  000DF4  6E0D               	movwf	NVMRead@count+1,c
  6015  000DF6  0E02               	movlw	2
  6016  000DF8  6E0C               	movwf	NVMRead@count,c
  6017  000DFA  EC5F  F00C         	call	_NVMRead	;wreg free
  6018                           
  6019                           ;FRAME.c: 409:     NVMRead(&NeightAdress4,13,2);
  6020  000DFE  0E48               	movlw	low _NeightAdress4
  6021  000E00  6E08               	movwf	NVMRead@dest,c
  6022  000E02  0E00               	movlw	high _NeightAdress4
  6023  000E04  6E09               	movwf	NVMRead@dest+1,c
  6024  000E06  0E00               	movlw	0
  6025  000E08  6E0B               	movwf	NVMRead@addr+1,c
  6026  000E0A  0E0D               	movlw	13
  6027  000E0C  6E0A               	movwf	NVMRead@addr,c
  6028  000E0E  0E00               	movlw	0
  6029  000E10  6E0D               	movwf	NVMRead@count+1,c
  6030  000E12  0E02               	movlw	2
  6031  000E14  6E0C               	movwf	NVMRead@count,c
  6032  000E16  EC5F  F00C         	call	_NVMRead	;wreg free
  6033                           
  6034                           ;FRAME.c: 410:     NVMRead(&NeightAdress5,16,2);
  6035  000E1A  0E46               	movlw	low _NeightAdress5
  6036  000E1C  6E08               	movwf	NVMRead@dest,c
  6037  000E1E  0E00               	movlw	high _NeightAdress5
  6038  000E20  6E09               	movwf	NVMRead@dest+1,c
  6039  000E22  0E00               	movlw	0
  6040  000E24  6E0B               	movwf	NVMRead@addr+1,c
  6041  000E26  0E10               	movlw	16
  6042  000E28  6E0A               	movwf	NVMRead@addr,c
  6043  000E2A  0E00               	movlw	0
  6044  000E2C  6E0D               	movwf	NVMRead@count+1,c
  6045  000E2E  0E02               	movlw	2
  6046  000E30  6E0C               	movwf	NVMRead@count,c
  6047  000E32  EC5F  F00C         	call	_NVMRead	;wreg free
  6048                           
  6049                           ;FRAME.c: 411:     NVMRead(&NeightAdress6,19,2);
  6050  000E36  0E44               	movlw	low _NeightAdress6
  6051  000E38  6E08               	movwf	NVMRead@dest,c
  6052  000E3A  0E00               	movlw	high _NeightAdress6
  6053  000E3C  6E09               	movwf	NVMRead@dest+1,c
  6054  000E3E  0E00               	movlw	0
  6055  000E40  6E0B               	movwf	NVMRead@addr+1,c
  6056  000E42  0E13               	movlw	19
  6057  000E44  6E0A               	movwf	NVMRead@addr,c
  6058  000E46  0E00               	movlw	0
  6059  000E48  6E0D               	movwf	NVMRead@count+1,c
  6060  000E4A  0E02               	movlw	2
  6061  000E4C  6E0C               	movwf	NVMRead@count,c
  6062  000E4E  EC5F  F00C         	call	_NVMRead	;wreg free
  6063                           
  6064                           ;FRAME.c: 412:     NVMRead(&NeightAdress7,22,2);
  6065  000E52  0E42               	movlw	low _NeightAdress7
  6066  000E54  6E08               	movwf	NVMRead@dest,c
  6067  000E56  0E00               	movlw	high _NeightAdress7
  6068  000E58  6E09               	movwf	NVMRead@dest+1,c
  6069  000E5A  0E00               	movlw	0
  6070  000E5C  6E0B               	movwf	NVMRead@addr+1,c
  6071  000E5E  0E16               	movlw	22
  6072  000E60  6E0A               	movwf	NVMRead@addr,c
  6073  000E62  0E00               	movlw	0
  6074  000E64  6E0D               	movwf	NVMRead@count+1,c
  6075  000E66  0E02               	movlw	2
  6076  000E68  6E0C               	movwf	NVMRead@count,c
  6077  000E6A  EC5F  F00C         	call	_NVMRead	;wreg free
  6078                           
  6079                           ;FRAME.c: 413:     NVMRead(&NeightAdress8,25,2);
  6080  000E6E  0E40               	movlw	low _NeightAdress8
  6081  000E70  6E08               	movwf	NVMRead@dest,c
  6082  000E72  0E00               	movlw	high _NeightAdress8
  6083  000E74  6E09               	movwf	NVMRead@dest+1,c
  6084  000E76  0E00               	movlw	0
  6085  000E78  6E0B               	movwf	NVMRead@addr+1,c
  6086  000E7A  0E19               	movlw	25
  6087  000E7C  6E0A               	movwf	NVMRead@addr,c
  6088  000E7E  0E00               	movlw	0
  6089  000E80  6E0D               	movwf	NVMRead@count+1,c
  6090  000E82  0E02               	movlw	2
  6091  000E84  6E0C               	movwf	NVMRead@count,c
  6092  000E86  EC5F  F00C         	call	_NVMRead	;wreg free
  6093  000E8A  0012               	return		;funcret
  6094  000E8C                     __end_of_ReadDataToEEPROM:
  6095                           	opt callstack 0
  6096                           
  6097 ;; *************** function _NVMRead *****************
  6098 ;; Defined at:
  6099 ;;		line 79 in file "EEPROM.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6102 ;;		 -> NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), NeightAdress5(2), 
  6103 ;;		 -> NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), NeightAdress1(2), 
  6104 ;;  addr            2    9[COMRAM] unsigned short 
  6105 ;;  count           2   11[COMRAM] unsigned short 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  1    wreg      void 
  6110 ;; Registers used:
  6111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;Total ram usage:        6 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; Hardware stack levels required when called:    4
  6124 ;; This function calls:
  6125 ;;		_ReadfromEEPROM
  6126 ;; This function is called by:
  6127 ;;		_ReadDataToEEPROM
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text47
  6132  0018BE                     __ptext47:
  6133                           	opt callstack 0
  6134  0018BE                     _NVMRead:
  6135                           	opt callstack 24
  6136                           
  6137                           ;EEPROM.c: 79: void NVMRead(BYTE *dest, WORD addr, WORD count);EEPROM.c: 80: {;EEPROM.c:
      +                           81:     while( count > 0 )
  6138                           
  6139                           ;incstack = 0
  6140  0018BE  D014               	goto	l4354
  6141  0018C0                     l927:
  6142  0018C0  B2A6               	btfsc	4006,1,c	;volsfr
  6143  0018C2  D7FE               	goto	l927
  6144                           
  6145                           ;EEPROM.c: 84:         *dest++ = ReadfromEEPROM(addr++);
  6146  0018C4  C00A  F006         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6147  0018C8  C00B  F007         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6148  0018CC  EC14  F00D         	call	_ReadfromEEPROM	;wreg free
  6149  0018D0  C008  FFD9         	movff	NVMRead@dest,fsr2l
  6150  0018D4  C009  FFDA         	movff	NVMRead@dest+1,fsr2h
  6151  0018D8  6EDF               	movwf	indf2,c
  6152  0018DA  4A0A               	infsnz	NVMRead@addr,f,c
  6153  0018DC  2A0B               	incf	NVMRead@addr+1,f,c
  6154  0018DE  4A08               	infsnz	NVMRead@dest,f,c
  6155  0018E0  2A09               	incf	NVMRead@dest+1,f,c
  6156                           
  6157                           ;EEPROM.c: 85:         count--;
  6158  0018E2  060C               	decf	NVMRead@count,f,c
  6159  0018E4  A0D8               	btfss	status,0,c
  6160  0018E6  060D               	decf	NVMRead@count+1,f,c
  6161  0018E8                     l4354:
  6162                           
  6163                           ;EEPROM.c: 81:     while( count > 0 )
  6164  0018E8  500C               	movf	NVMRead@count,w,c
  6165  0018EA  100D               	iorwf	NVMRead@count+1,w,c
  6166  0018EC  B4D8               	btfsc	status,2,c
  6167  0018EE  0012               	return	
  6168  0018F0  D7E7               	goto	l927
  6169  0018F2                     __end_of_NVMRead:
  6170                           	opt callstack 0
  6171                           
  6172 ;; *************** function _ReadfromEEPROM *****************
  6173 ;; Defined at:
  6174 ;;		line 45 in file "EEPROM.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  Address         2    5[COMRAM] unsigned short 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;		None
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  1    wreg      unsigned char 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;Total ram usage:        2 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    3
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_NVMRead
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text48
  6203  001A28                     __ptext48:
  6204                           	opt callstack 0
  6205  001A28                     _ReadfromEEPROM:
  6206                           	opt callstack 24
  6207                           
  6208                           ;EEPROM.c: 45: static BYTE ReadfromEEPROM(WORD Address);EEPROM.c: 46: {;EEPROM.c: 47:   
      +                            EEADRH = (BYTE)(Address>>8);
  6209                           
  6210                           ;incstack = 0
  6211  001A28  5007               	movf	ReadfromEEPROM@Address+1,w,c
  6212  001A2A  6EAA               	movwf	4010,c	;volatile
  6213                           
  6214                           ;EEPROM.c: 48:     EEADR = (BYTE)Address;
  6215  001A2C  C006  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6216                           
  6217                           ;EEPROM.c: 49:     EECON1bits.RD = 1;
  6218  001A30  80A6               	bsf	4006,0,c	;volsfr
  6219                           
  6220                           ;EEPROM.c: 50:     EECON1bits.EEPGD = 0;
  6221  001A32  9EA6               	bcf	4006,7,c	;volsfr
  6222                           
  6223                           ;EEPROM.c: 51:     EECON1bits.CFGS = 0;
  6224  001A34  9CA6               	bcf	4006,6,c	;volsfr
  6225                           
  6226                           ;EEPROM.c: 52:     return EEDATA;
  6227  001A36  50A8               	movf	4008,w,c	;volatile
  6228  001A38  0012               	return		;funcret
  6229  001A3A                     __end_of_ReadfromEEPROM:
  6230                           	opt callstack 0
  6231                           
  6232 ;; *************** function _NVMInit *****************
  6233 ;; Defined at:
  6234 ;;		line 26 in file "EEPROM.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  result          1   11[COMRAM] enum E10433
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      enum E10433
  6241 ;; Registers used:
  6242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;Total ram usage:        1 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    4
  6255 ;; This function calls:
  6256 ;;		_NVMalloc
  6257 ;; This function is called by:
  6258 ;;		_INI_All
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text49
  6263  001742                     __ptext49:
  6264                           	opt callstack 0
  6265  001742                     _NVMInit:
  6266                           	opt callstack 25
  6267                           
  6268                           ;EEPROM.c: 28:     BOOL result = TRUE;
  6269                           
  6270                           ;incstack = 0
  6271  001742  0E01               	movlw	1
  6272  001744  6E0C               	movwf	NVMInit@result,c
  6273                           
  6274                           ;EEPROM.c: 30:     nextEEPosition = 0;
  6275  001746  0E00               	movlw	0
  6276  001748  6E31               	movwf	_nextEEPosition+1,c
  6277  00174A  0E00               	movlw	0
  6278  00174C  6E30               	movwf	_nextEEPosition,c
  6279                           
  6280                           ;EEPROM.c: 32:     result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6281  00174E  0E00               	movlw	0
  6282  001750  6E07               	movwf	NVMalloc@size+1,c
  6283  001752  0E03               	movlw	3
  6284  001754  6E06               	movwf	NVMalloc@size,c
  6285  001756  0E3E               	movlw	low _ustawieniaKarty
  6286  001758  6E08               	movwf	NVMalloc@location,c
  6287  00175A  0E00               	movlw	high _ustawieniaKarty
  6288  00175C  6E09               	movwf	NVMalloc@location+1,c
  6289  00175E  EC2A  F00C         	call	_NVMalloc	;wreg free
  6290  001762  160C               	andwf	NVMInit@result,f,c
  6291                           
  6292                           ;EEPROM.c: 33:     result &= NVMalloc(8*sizeof(NeightAdress1), &neighborsAdress);
  6293  001764  0E00               	movlw	0
  6294  001766  6E07               	movwf	NVMalloc@size+1,c
  6295  001768  0E10               	movlw	16
  6296  00176A  6E06               	movwf	NVMalloc@size,c
  6297  00176C  0E3C               	movlw	low _neighborsAdress
  6298  00176E  6E08               	movwf	NVMalloc@location,c
  6299  001770  0E00               	movlw	high _neighborsAdress
  6300  001772  6E09               	movwf	NVMalloc@location+1,c
  6301  001774  EC2A  F00C         	call	_NVMalloc	;wreg free
  6302  001778  160C               	andwf	NVMInit@result,f,c
  6303  00177A  0012               	return		;funcret
  6304  00177C                     __end_of_NVMInit:
  6305                           	opt callstack 0
  6306                           
  6307 ;; *************** function _NVMalloc *****************
  6308 ;; Defined at:
  6309 ;;		line 11 in file "EEPROM.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  size            2    5[COMRAM] unsigned short 
  6312 ;;  location        2    7[COMRAM] PTR unsigned short 
  6313 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      enum E10433
  6318 ;; Registers used:
  6319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;Total ram usage:        6 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    3
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_NVMInit
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text50
  6340  001854                     __ptext50:
  6341                           	opt callstack 0
  6342  001854                     _NVMalloc:
  6343                           	opt callstack 25
  6344                           
  6345                           ;EEPROM.c: 11: BOOL NVMalloc(WORD size, WORD *location);EEPROM.c: 12: {;EEPROM.c: 15:   
      +                            if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6346                           
  6347                           ;incstack = 0
  6348  001854  5006               	movf	NVMalloc@size,w,c
  6349  001856  2430               	addwf	_nextEEPosition,w,c
  6350  001858  6E0A               	movwf	??_NVMalloc& (0+255),c
  6351  00185A  5007               	movf	NVMalloc@size+1,w,c
  6352  00185C  2031               	addwfc	_nextEEPosition+1,w,c
  6353  00185E  6E0B               	movwf	(??_NVMalloc+1)& (0+255),c
  6354  001860  040A               	decf	??_NVMalloc,w,c
  6355  001862  0E04               	movlw	4
  6356  001864  580B               	subwfb	??_NVMalloc+1,w,c
  6357  001866  A0D8               	btfss	status,0,c
  6358  001868  D002               	goto	l4400
  6359                           
  6360                           ;EEPROM.c: 16:     {;EEPROM.c: 17:         return FALSE;
  6361  00186A  0E00               	movlw	0
  6362  00186C  0012               	return	
  6363  00186E                     l4400:
  6364                           
  6365                           ;EEPROM.c: 20:     *location = nextEEPosition;
  6366  00186E  C008  FFD9         	movff	NVMalloc@location,fsr2l
  6367  001872  C009  FFDA         	movff	NVMalloc@location+1,fsr2h
  6368  001876  C030  FFDE         	movff	_nextEEPosition,postinc2
  6369  00187A  C031  FFDD         	movff	_nextEEPosition+1,postdec2
  6370                           
  6371                           ;EEPROM.c: 21:     nextEEPosition += size;
  6372  00187E  5006               	movf	NVMalloc@size,w,c
  6373  001880  2630               	addwf	_nextEEPosition,f,c
  6374  001882  5007               	movf	NVMalloc@size+1,w,c
  6375  001884  2231               	addwfc	_nextEEPosition+1,f,c
  6376                           
  6377                           ;EEPROM.c: 22:     return TRUE;
  6378  001886  0E01               	movlw	1
  6379  001888  0012               	return		;funcret
  6380  00188A                     __end_of_NVMalloc:
  6381                           	opt callstack 0
  6382                           
  6383 ;; *************** function _INI_Timer *****************
  6384 ;; Defined at:
  6385 ;;		line 92 in file "TMR1.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;		None
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      unsigned char 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;Total ram usage:        0 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    3
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_INI_All
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text51
  6414  0019FC                     __ptext51:
  6415                           	opt callstack 0
  6416  0019FC                     _INI_Timer:
  6417                           	opt callstack 26
  6418                           
  6419                           ;TMR1.c: 96:     IRCF2 = 1;
  6420                           
  6421                           ;incstack = 0
  6422  0019FC  8CD3               	bsf	4051,6,c	;volatile
  6423                           
  6424                           ;TMR1.c: 97:     IRCF1 = 1;
  6425  0019FE  8AD3               	bsf	4051,5,c	;volatile
  6426                           
  6427                           ;TMR1.c: 98:     IRCF0 = 1;
  6428  001A00  88D3               	bsf	4051,4,c	;volatile
  6429                           
  6430                           ;TMR1.c: 99:     T1CON = 0b00111101;
  6431  001A02  0E3D               	movlw	61
  6432  001A04  6ECD               	movwf	4045,c	;volatile
  6433                           
  6434                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6435  001A06  0E9E               	movlw	158
  6436  001A08  6ECF               	movwf	4047,c	;volatile
  6437                           
  6438                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6439  001A0A  0E57               	movlw	87
  6440  001A0C  6ECE               	movwf	4046,c	;volatile
  6441                           
  6442                           ;TMR1.c: 102:     TMR1IE=1;
  6443  001A0E  809D               	bsf	3997,0,c	;volatile
  6444                           
  6445                           ;TMR1.c: 103:     TMR1ON = 1;
  6446  001A10  80CD               	bsf	4045,0,c	;volatile
  6447  001A12  0012               	return		;funcret
  6448  001A14                     __end_of_INI_Timer:
  6449                           	opt callstack 0
  6450                           
  6451 ;; *************** function _INI_OUTPUT *****************
  6452 ;; Defined at:
  6453 ;;		line 29 in file "INI.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;Total ram usage:        0 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    3
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_INI_All
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	text52
  6482  0019BE                     __ptext52:
  6483                           	opt callstack 0
  6484  0019BE                     _INI_OUTPUT:
  6485                           	opt callstack 26
  6486                           
  6487                           ;INI.c: 33:     LATA = 0;
  6488                           
  6489                           ;incstack = 0
  6490  0019BE  0E00               	movlw	0
  6491  0019C0  6E89               	movwf	3977,c	;volatile
  6492                           
  6493                           ;INI.c: 34:     LATB = 0;
  6494  0019C2  0E00               	movlw	0
  6495  0019C4  6E8A               	movwf	3978,c	;volatile
  6496                           
  6497                           ;INI.c: 35:     LATC = 0;
  6498  0019C6  0E00               	movlw	0
  6499  0019C8  6E8B               	movwf	3979,c	;volatile
  6500                           
  6501                           ;INI.c: 36:     TRISA = 0x0C;
  6502  0019CA  0E0C               	movlw	12
  6503  0019CC  6E92               	movwf	3986,c	;volatile
  6504                           
  6505                           ;INI.c: 37:     TRISB = 0b10001000;
  6506  0019CE  0E88               	movlw	136
  6507  0019D0  6E93               	movwf	3987,c	;volatile
  6508                           
  6509                           ;INI.c: 38:     TRISC = 0xBF;
  6510  0019D2  0EBF               	movlw	191
  6511  0019D4  6E94               	movwf	3988,c	;volatile
  6512                           
  6513                           ;INI.c: 39:     RCONbits.IPEN = 1;
  6514  0019D6  8ED0               	bsf	4048,7,c	;volatile
  6515                           
  6516                           ;INI.c: 42:     DetectorLedRadar.Flags.inicjalizacja = 1;
  6517  0019D8  0100               	movlb	0	; () banked
  6518  0019DA  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6519                           
  6520                           ; BSR set to: 0
  6521  0019DC  0012               	return		;funcret
  6522  0019DE                     __end_of_INI_OUTPUT:
  6523                           	opt callstack 0
  6524                           
  6525 ;; *************** function _INI_LED_Start *****************
  6526 ;; Defined at:
  6527 ;;		line 231 in file "LED.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    4
  6548 ;; This function calls:
  6549 ;;		_LED_Control
  6550 ;; This function is called by:
  6551 ;;		_INI_All
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text53
  6556  0018F2                     __ptext53:
  6557                           	opt callstack 0
  6558  0018F2                     _INI_LED_Start:
  6559                           	opt callstack 25
  6560                           
  6561                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;incstack = 0
  6565  0018F2  5092               	movf	3986,w,c	;volatile
  6566  0018F4  0B01               	andlw	1
  6567  0018F6  6E92               	movwf	3986,c	;volatile
  6568                           
  6569                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  6570  0018F8  5093               	movf	3987,w,c	;volatile
  6571  0018FA  0BFC               	andlw	252
  6572  0018FC  6E93               	movwf	3987,c	;volatile
  6573                           
  6574                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  6575  0018FE  5096               	movf	3990,w,c	;volatile
  6576  001900  0BF8               	andlw	248
  6577  001902  6E96               	movwf	3990,c	;volatile
  6578                           
  6579                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  6580  001904  0E00               	movlw	0
  6581  001906  6E95               	movwf	3989,c	;volatile
  6582                           
  6583                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  6584  001908  0E00               	movlw	0
  6585  00190A  6E07               	movwf	LED_Control@diode+1,c
  6586  00190C  0E00               	movlw	0
  6587  00190E  6E06               	movwf	LED_Control@diode,c
  6588  001910  0E00               	movlw	0
  6589  001912  EC91  F004         	call	_LED_Control
  6590                           
  6591                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  6592  001916  0E00               	movlw	0
  6593  001918  6E07               	movwf	LED_Control@diode+1,c
  6594  00191A  0E00               	movlw	0
  6595  00191C  6E06               	movwf	LED_Control@diode,c
  6596  00191E  0E01               	movlw	1
  6597  001920  EC91  F004         	call	_LED_Control
  6598  001924  0012               	return		;funcret
  6599  001926                     __end_of_INI_LED_Start:
  6600                           	opt callstack 0
  6601                           
  6602 ;; *************** function _LED_Control *****************
  6603 ;; Defined at:
  6604 ;;		line 256 in file "LED.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  color           1    wreg     enum E10644
  6607 ;;  diode           2    5[COMRAM] unsigned int 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  color           1    9[COMRAM] enum E10644
  6610 ;;  cos             2    0        unsigned int 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      unsigned char 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;Total ram usage:        5 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    3
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_LED_Error
  6631 ;;		_LED_Update
  6632 ;;		_LED_Light_Pos
  6633 ;;		_INI_LED_Start
  6634 ;;		_LED_Clear
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text54
  6639  000922                     __ptext54:
  6640                           	opt callstack 0
  6641  000922                     _LED_Control:
  6642                           	opt callstack 24
  6643                           
  6644                           ;incstack = 0
  6645                           ;LED_Control@color stored from wreg
  6646  000922  6E0A               	movwf	LED_Control@color,c
  6647                           
  6648                           ;LED.c: 259:     if(color == RED)
  6649  000924  500A               	movf	LED_Control@color,w,c
  6650  000926  A4D8               	btfss	status,2,c
  6651  000928  D050               	goto	l419
  6652                           
  6653                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  6654  00092A  A006               	btfss	LED_Control@diode,0,c
  6655  00092C  D003               	goto	l3884
  6656                           
  6657                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  6658  00092E  508C               	movf	3980,w,c	;volatile
  6659  000930  0910               	iorlw	16
  6660  000932  D002               	goto	L4
  6661  000934                     l3884:
  6662                           
  6663                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  6664  000934  508C               	movf	3980,w,c	;volatile
  6665  000936  0BEF               	andlw	239
  6666  000938                     L4:
  6667  000938  6E8C               	movwf	3980,c	;volatile
  6668                           
  6669                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  6670  00093A  A206               	btfss	LED_Control@diode,1,c
  6671  00093C  D003               	goto	l3890
  6672                           
  6673                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  6674  00093E  508C               	movf	3980,w,c	;volatile
  6675  000940  0940               	iorlw	64
  6676  000942  D002               	goto	L5
  6677  000944                     l3890:
  6678                           
  6679                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  6680  000944  508C               	movf	3980,w,c	;volatile
  6681  000946  0BBF               	andlw	191
  6682  000948                     L5:
  6683  000948  6E8C               	movwf	3980,c	;volatile
  6684                           
  6685                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  6686  00094A  A406               	btfss	LED_Control@diode,2,c
  6687  00094C  D003               	goto	l3896
  6688                           
  6689                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  6690  00094E  508A               	movf	3978,w,c	;volatile
  6691  000950  0901               	iorlw	1
  6692  000952  D002               	goto	L6
  6693  000954                     l3896:
  6694                           
  6695                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  6696  000954  508A               	movf	3978,w,c	;volatile
  6697  000956  0BFE               	andlw	254
  6698  000958                     L6:
  6699  000958  6E8A               	movwf	3978,c	;volatile
  6700                           
  6701                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  6702  00095A  A606               	btfss	LED_Control@diode,3,c
  6703  00095C  D003               	goto	l3902
  6704                           
  6705                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  6706  00095E  5089               	movf	3977,w,c	;volatile
  6707  000960  0902               	iorlw	2
  6708  000962  D002               	goto	L7
  6709  000964                     l3902:
  6710                           
  6711                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  6712  000964  5089               	movf	3977,w,c	;volatile
  6713  000966  0BFD               	andlw	253
  6714  000968                     L7:
  6715  000968  6E89               	movwf	3977,c	;volatile
  6716                           
  6717                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  6718  00096A  A806               	btfss	LED_Control@diode,4,c
  6719  00096C  D003               	goto	l3908
  6720                           
  6721                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  6722  00096E  5089               	movf	3977,w,c	;volatile
  6723  000970  0908               	iorlw	8
  6724  000972  D002               	goto	L8
  6725  000974                     l3908:
  6726                           
  6727                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  6728  000974  5089               	movf	3977,w,c	;volatile
  6729  000976  0BF7               	andlw	247
  6730  000978                     L8:
  6731  000978  6E89               	movwf	3977,c	;volatile
  6732                           
  6733                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  6734  00097A  AA06               	btfss	LED_Control@diode,5,c
  6735  00097C  D003               	goto	l3914
  6736                           
  6737                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  6738  00097E  5089               	movf	3977,w,c	;volatile
  6739  000980  0920               	iorlw	32
  6740  000982  D002               	goto	L9
  6741  000984                     l3914:
  6742                           
  6743                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  6744  000984  5089               	movf	3977,w,c	;volatile
  6745  000986  0BDF               	andlw	223
  6746  000988                     L9:
  6747  000988  6E89               	movwf	3977,c	;volatile
  6748                           
  6749                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  6750  00098A  AC06               	btfss	LED_Control@diode,6,c
  6751  00098C  D003               	goto	l3920
  6752                           
  6753                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  6754  00098E  508D               	movf	3981,w,c	;volatile
  6755  000990  0902               	iorlw	2
  6756  000992  D002               	goto	L10
  6757  000994                     l3920:
  6758                           
  6759                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  6760  000994  508D               	movf	3981,w,c	;volatile
  6761  000996  0BFD               	andlw	253
  6762  000998                     L10:
  6763  000998  6E8D               	movwf	3981,c	;volatile
  6764                           
  6765                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  6766  00099A  AE06               	btfss	LED_Control@diode,7,c
  6767  00099C  D003               	goto	l3926
  6768                           
  6769                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  6770  00099E  5089               	movf	3977,w,c	;volatile
  6771  0009A0  0980               	iorlw	128
  6772  0009A2  D002               	goto	L11
  6773  0009A4                     l3926:
  6774                           
  6775                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  6776  0009A4  5089               	movf	3977,w,c	;volatile
  6777  0009A6  0B7F               	andlw	127
  6778  0009A8                     L11:
  6779  0009A8  6E89               	movwf	3977,c	;volatile
  6780                           
  6781                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  6782  0009AA  A007               	btfss	LED_Control@diode+1,0,c
  6783  0009AC  D003               	goto	l3932
  6784                           
  6785                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  6786  0009AE  508C               	movf	3980,w,c	;volatile
  6787  0009B0  0901               	iorlw	1
  6788  0009B2  D002               	goto	L12
  6789  0009B4                     l3932:
  6790                           
  6791                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  6792  0009B4  508C               	movf	3980,w,c	;volatile
  6793  0009B6  0BFE               	andlw	254
  6794  0009B8                     L12:
  6795  0009B8  6E8C               	movwf	3980,c	;volatile
  6796                           
  6797                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  6798  0009BA  A207               	btfss	LED_Control@diode+1,1,c
  6799  0009BC  D003               	goto	l3938
  6800                           
  6801                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  6802  0009BE  508C               	movf	3980,w,c	;volatile
  6803  0009C0  0904               	iorlw	4
  6804  0009C2  D002               	goto	L13
  6805  0009C4                     l3938:
  6806                           
  6807                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  6808  0009C4  508C               	movf	3980,w,c	;volatile
  6809  0009C6  0BFB               	andlw	251
  6810  0009C8                     L13:
  6811  0009C8  6E8C               	movwf	3980,c	;volatile
  6812  0009CA                     l419:
  6813                           
  6814                           ;LED.c: 358:     if(color == GREEN)
  6815  0009CA  040A               	decf	LED_Control@color,w,c
  6816  0009CC  A4D8               	btfss	status,2,c
  6817  0009CE  0012               	return	
  6818                           
  6819                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  6820  0009D0  A006               	btfss	LED_Control@diode,0,c
  6821  0009D2  D003               	goto	l3944
  6822                           
  6823                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  6824  0009D4  508C               	movf	3980,w,c	;volatile
  6825  0009D6  0920               	iorlw	32
  6826  0009D8  D002               	goto	L14
  6827  0009DA                     l3944:
  6828                           
  6829                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  6830  0009DA  508C               	movf	3980,w,c	;volatile
  6831  0009DC  0BDF               	andlw	223
  6832  0009DE                     L14:
  6833  0009DE  6E8C               	movwf	3980,c	;volatile
  6834                           
  6835                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  6836  0009E0  A206               	btfss	LED_Control@diode,1,c
  6837  0009E2  D003               	goto	l3950
  6838                           
  6839                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  6840  0009E4  508C               	movf	3980,w,c	;volatile
  6841  0009E6  0980               	iorlw	128
  6842  0009E8  D002               	goto	L15
  6843  0009EA                     l3950:
  6844                           
  6845                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  6846  0009EA  508C               	movf	3980,w,c	;volatile
  6847  0009EC  0B7F               	andlw	127
  6848  0009EE                     L15:
  6849  0009EE  6E8C               	movwf	3980,c	;volatile
  6850                           
  6851                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  6852  0009F0  A406               	btfss	LED_Control@diode,2,c
  6853  0009F2  D003               	goto	l3956
  6854                           
  6855                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  6856  0009F4  508A               	movf	3978,w,c	;volatile
  6857  0009F6  0902               	iorlw	2
  6858  0009F8  D002               	goto	L16
  6859  0009FA                     l3956:
  6860                           
  6861                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  6862  0009FA  508A               	movf	3978,w,c	;volatile
  6863  0009FC  0BFD               	andlw	253
  6864  0009FE                     L16:
  6865  0009FE  6E8A               	movwf	3978,c	;volatile
  6866                           
  6867                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  6868  000A00  A606               	btfss	LED_Control@diode,3,c
  6869  000A02  D003               	goto	l3962
  6870                           
  6871                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  6872  000A04  5089               	movf	3977,w,c	;volatile
  6873  000A06  0904               	iorlw	4
  6874  000A08  D002               	goto	L17
  6875  000A0A                     l3962:
  6876                           
  6877                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  6878  000A0A  5089               	movf	3977,w,c	;volatile
  6879  000A0C  0BFB               	andlw	251
  6880  000A0E                     L17:
  6881  000A0E  6E89               	movwf	3977,c	;volatile
  6882                           
  6883                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  6884  000A10  A806               	btfss	LED_Control@diode,4,c
  6885  000A12  D003               	goto	l3968
  6886                           
  6887                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  6888  000A14  5089               	movf	3977,w,c	;volatile
  6889  000A16  0910               	iorlw	16
  6890  000A18  D002               	goto	L18
  6891  000A1A                     l3968:
  6892                           
  6893                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  6894  000A1A  5089               	movf	3977,w,c	;volatile
  6895  000A1C  0BEF               	andlw	239
  6896  000A1E                     L18:
  6897  000A1E  6E89               	movwf	3977,c	;volatile
  6898                           
  6899                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  6900  000A20  AA06               	btfss	LED_Control@diode,5,c
  6901  000A22  D003               	goto	l3974
  6902                           
  6903                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  6904  000A24  508D               	movf	3981,w,c	;volatile
  6905  000A26  0901               	iorlw	1
  6906  000A28  D002               	goto	L19
  6907  000A2A                     l3974:
  6908                           
  6909                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  6910  000A2A  508D               	movf	3981,w,c	;volatile
  6911  000A2C  0BFE               	andlw	254
  6912  000A2E                     L19:
  6913  000A2E  6E8D               	movwf	3981,c	;volatile
  6914                           
  6915                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  6916  000A30  AC06               	btfss	LED_Control@diode,6,c
  6917  000A32  D003               	goto	l3980
  6918                           
  6919                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  6920  000A34  508D               	movf	3981,w,c	;volatile
  6921  000A36  0904               	iorlw	4
  6922  000A38  D002               	goto	L20
  6923  000A3A                     l3980:
  6924                           
  6925                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  6926  000A3A  508D               	movf	3981,w,c	;volatile
  6927  000A3C  0BFB               	andlw	251
  6928  000A3E                     L20:
  6929  000A3E  6E8D               	movwf	3981,c	;volatile
  6930                           
  6931                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  6932  000A40  AE06               	btfss	LED_Control@diode,7,c
  6933  000A42  D003               	goto	l3986
  6934                           
  6935                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  6936  000A44  5089               	movf	3977,w,c	;volatile
  6937  000A46  0940               	iorlw	64
  6938  000A48  D002               	goto	L21
  6939  000A4A                     l3986:
  6940                           
  6941                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  6942  000A4A  5089               	movf	3977,w,c	;volatile
  6943  000A4C  0BBF               	andlw	191
  6944  000A4E                     L21:
  6945  000A4E  6E89               	movwf	3977,c	;volatile
  6946                           
  6947                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  6948  000A50  A007               	btfss	LED_Control@diode+1,0,c
  6949  000A52  D003               	goto	l3992
  6950                           
  6951                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  6952  000A54  508C               	movf	3980,w,c	;volatile
  6953  000A56  0902               	iorlw	2
  6954  000A58  D002               	goto	L22
  6955  000A5A                     l3992:
  6956                           
  6957                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  6958  000A5A  508C               	movf	3980,w,c	;volatile
  6959  000A5C  0BFD               	andlw	253
  6960  000A5E                     L22:
  6961  000A5E  6E8C               	movwf	3980,c	;volatile
  6962                           
  6963                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  6964  000A60  A207               	btfss	LED_Control@diode+1,1,c
  6965  000A62  D004               	goto	l3998
  6966                           
  6967                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  6968  000A64  508C               	movf	3980,w,c	;volatile
  6969  000A66  0908               	iorlw	8
  6970  000A68  6E8C               	movwf	3980,c	;volatile
  6971                           
  6972                           ;LED.c: 450:         }
  6973  000A6A  0012               	return	
  6974  000A6C                     l3998:
  6975                           
  6976                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  6977  000A6C  508C               	movf	3980,w,c	;volatile
  6978  000A6E  0BF7               	andlw	247
  6979  000A70  6E8C               	movwf	3980,c	;volatile
  6980  000A72  0012               	return		;funcret
  6981  000A74                     __end_of_LED_Control:
  6982                           	opt callstack 0
  6983                           
  6984 ;; *************** function _INI_GlobalInterrupt *****************
  6985 ;; Defined at:
  6986 ;;		line 78 in file "INI.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		None
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7004 ;;Total ram usage:        0 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    3
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_INI_All
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text55
  7015  001A48                     __ptext55:
  7016                           	opt callstack 0
  7017  001A48                     _INI_GlobalInterrupt:
  7018                           	opt callstack 26
  7019                           
  7020                           ;INI.c: 80: INTCONbits.GIEH=1;
  7021                           
  7022                           ;incstack = 0
  7023  001A48  8EF2               	bsf	4082,7,c	;volatile
  7024                           
  7025                           ;INI.c: 81: INTCONbits.GIEL=1;
  7026  001A4A  8CF2               	bsf	4082,6,c	;volatile
  7027                           
  7028                           ;INI.c: 82: RCONbits.IPEN=1;
  7029  001A4C  8ED0               	bsf	4048,7,c	;volatile
  7030                           
  7031                           ;INI.c: 83: IPEN =1;
  7032  001A4E  8ED0               	bsf	4048,7,c	;volatile
  7033                           
  7034                           ;INI.c: 85: PEIE=1;
  7035  001A50  8CF2               	bsf	4082,6,c	;volatile
  7036                           
  7037                           ;INI.c: 86: TMR1IP = 0;
  7038  001A52  909F               	bcf	3999,0,c	;volatile
  7039  001A54  0012               	return		;funcret
  7040  001A56                     __end_of_INI_GlobalInterrupt:
  7041                           	opt callstack 0
  7042                           
  7043 ;; *************** function _CAN_Setup *****************
  7044 ;; Defined at:
  7045 ;;		line 24 in file "CAN.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;		None
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0, cstack
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;Total ram usage:        1 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    5
  7066 ;; This function calls:
  7067 ;;		_CAN_SetupClock
  7068 ;;		_CAN_SetupMask
  7069 ;; This function is called by:
  7070 ;;		_INI_All
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text56
  7075  0013FA                     __ptext56:
  7076                           	opt callstack 0
  7077  0013FA                     _CAN_Setup:
  7078                           	opt callstack 24
  7079                           
  7080                           ;CAN.c: 29:     CANCON = 0x80;
  7081                           
  7082                           ;incstack = 0
  7083  0013FA  0E80               	movlw	128
  7084  0013FC  6E6F               	movwf	3951,c	;volatile
  7085  0013FE                     l4454:
  7086                           
  7087                           ;CAN.c: 30:     while((CANSTAT & 0xE0)!=0x80)
  7088  0013FE  506E               	movf	3950,w,c	;volatile
  7089  001400  0BE0               	andlw	224
  7090  001402  0A80               	xorlw	128
  7091  001404  A4D8               	btfss	status,2,c
  7092  001406  D7FB               	goto	l4454
  7093                           
  7094                           ;CAN.c: 35:     BSEL0 = 0;
  7095  001408  0E00               	movlw	0
  7096  00140A  010D               	movlb	13	; () banked
  7097  00140C  6FF8               	movwf	248,b	;volatile
  7098                           
  7099                           ;CAN.c: 36:     TXB0CON = 0;
  7100  00140E  0E00               	movlw	0
  7101  001410  010F               	movlb	15	; () banked
  7102  001412  6F40               	movwf	64,b	;volatile
  7103                           
  7104                           ;CAN.c: 37:     RXB0CON = 0;
  7105  001414  0E00               	movlw	0
  7106  001416  6E60               	movwf	3936,c	;volatile
  7107                           
  7108                           ;CAN.c: 38:     RXB1CON = 0;
  7109  001418  0E00               	movlw	0
  7110  00141A  6F50               	movwf	80,b	;volatile
  7111                           
  7112                           ;CAN.c: 39:     B0CON = 0;
  7113  00141C  0E00               	movlw	0
  7114  00141E  010E               	movlb	14	; () banked
  7115  001420  6F20               	movwf	32,b	;volatile
  7116                           
  7117                           ;CAN.c: 40:     B1CON = 0;
  7118  001422  0E00               	movlw	0
  7119  001424  6F30               	movwf	48,b	;volatile
  7120                           
  7121                           ;CAN.c: 41:     PIE3 = 0;
  7122  001426  0E00               	movlw	0
  7123  001428  6EA3               	movwf	4003,c	;volatile
  7124                           
  7125                           ; BSR set to: 14
  7126                           ;CAN.c: 42:     IPR3 = 0xFF;
  7127  00142A  68A5               	setf	4005,c	;volatile
  7128                           
  7129                           ;CAN.c: 43:     PIR3 = 0x00;
  7130  00142C  0E00               	movlw	0
  7131  00142E  6EA4               	movwf	4004,c	;volatile
  7132                           
  7133                           ;CAN.c: 44:     BIE0 = 0;
  7134  001430  0E00               	movlw	0
  7135  001432  010D               	movlb	13	; () banked
  7136  001434  6FFA               	movwf	250,b	;volatile
  7137                           
  7138                           ;CAN.c: 46:     DaneCan.adresCAN = 60;
  7139  001436  0E00               	movlw	0
  7140  001438  6E2F               	movwf	_DaneCan+3,c
  7141  00143A  0E3C               	movlw	60
  7142  00143C  6E2E               	movwf	_DaneCan+2,c
  7143                           
  7144                           ;CAN.c: 48:     ECANCON = 0x90;
  7145  00143E  0E90               	movlw	144
  7146  001440  6E77               	movwf	3959,c	;volatile
  7147                           
  7148                           ; BSR set to: 13
  7149                           ;CAN.c: 51:     CAN_SetupClock();
  7150  001442  ECA8  F00C         	call	_CAN_SetupClock	;wreg free
  7151                           
  7152                           ;CAN.c: 54:     CAN_SetupMask();
  7153  001446  EC93  F009         	call	_CAN_SetupMask	;wreg free
  7154                           
  7155                           ;CAN.c: 56:     CIOCON = 0xff;
  7156  00144A  6873               	setf	3955,c	;volatile
  7157                           
  7158                           ;CAN.c: 62:     CANCON = 0x00;
  7159  00144C  0E00               	movlw	0
  7160  00144E  6E6F               	movwf	3951,c	;volatile
  7161  001450                     l4466:
  7162                           
  7163                           ;CAN.c: 63:     while((CANSTAT & 0xE0) != 0x00)
  7164  001450  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  7165  001454  0EE0               	movlw	224
  7166  001456  1606               	andwf	??_CAN_Setup,f,c
  7167  001458  B4D8               	btfsc	status,2,c
  7168  00145A  0012               	return	
  7169  00145C  D7F9               	goto	l4466
  7170  00145E                     __end_of_CAN_Setup:
  7171                           	opt callstack 0
  7172                           
  7173 ;; *************** function _CAN_SetupMask *****************
  7174 ;; Defined at:
  7175 ;;		line 84 in file "CAN.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;		None
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7193 ;;Total ram usage:        0 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    4
  7196 ;; This function calls:
  7197 ;;		_CAN_SetupFilter_Ne
  7198 ;; This function is called by:
  7199 ;;		_CAN_Setup
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text57
  7204  001326                     __ptext57:
  7205                           	opt callstack 0
  7206  001326                     _CAN_SetupMask:
  7207                           	opt callstack 24
  7208                           
  7209                           ;CAN.c: 86:     MSEL0 = 0x50;
  7210                           
  7211                           ;incstack = 0
  7212  001326  0E50               	movlw	80
  7213  001328  010D               	movlb	13	; () banked
  7214  00132A  6FF0               	movwf	240,b	;volatile
  7215                           
  7216                           ;CAN.c: 87:     MSEL1 = 0x55;
  7217  00132C  0E55               	movlw	85
  7218  00132E  6FF1               	movwf	241,b	;volatile
  7219                           
  7220                           ;CAN.c: 88:     MSEL2 = 0x55;
  7221  001330  0E55               	movlw	85
  7222  001332  6FF2               	movwf	242,b	;volatile
  7223                           
  7224                           ;CAN.c: 89:     MSEL3 = 0x55;
  7225  001334  0E55               	movlw	85
  7226  001336  6FF3               	movwf	243,b	;volatile
  7227                           
  7228                           ;CAN.c: 92:     RXM0SIDH = 0b00000000;
  7229  001338  0E00               	movlw	0
  7230  00133A  010F               	movlb	15	; () banked
  7231  00133C  6F18               	movwf	24,b	;volatile
  7232                           
  7233                           ;CAN.c: 93:     RXM0SIDL = 0b00001011;
  7234  00133E  0E0B               	movlw	11
  7235  001340  6F19               	movwf	25,b	;volatile
  7236                           
  7237                           ; BSR set to: 15
  7238                           ;CAN.c: 94:     RXM0EIDH = 0xFF;
  7239  001342  691A               	setf	26,b	;volatile
  7240                           
  7241                           ; BSR set to: 15
  7242                           ;CAN.c: 95:     RXM0EIDL = 0xFF;
  7243  001344  691B               	setf	27,b	;volatile
  7244                           
  7245                           ; BSR set to: 15
  7246                           ;CAN.c: 98:     RXM1SIDH = 0xFF;
  7247  001346  691C               	setf	28,b	;volatile
  7248                           
  7249                           ; BSR set to: 15
  7250                           ;CAN.c: 99:     RXM1SIDL = 0xFF;
  7251  001348  691D               	setf	29,b	;volatile
  7252                           
  7253                           ; BSR set to: 15
  7254                           ;CAN.c: 100:     RXM1EIDH = 0xFF;
  7255  00134A  691E               	setf	30,b	;volatile
  7256                           
  7257                           ; BSR set to: 15
  7258                           ;CAN.c: 101:     RXM1EIDL = 0xFF;
  7259  00134C  691F               	setf	31,b	;volatile
  7260                           
  7261                           ;CAN.c: 104:     RXM0SIDH = 0x00;
  7262  00134E  0E00               	movlw	0
  7263  001350  6F18               	movwf	24,b	;volatile
  7264                           
  7265                           ;CAN.c: 105:     RXM0SIDL = 0x00;
  7266  001352  0E00               	movlw	0
  7267  001354  6F19               	movwf	25,b	;volatile
  7268                           
  7269                           ;CAN.c: 110:     RXF0SIDH = 0x00;
  7270  001356  0E00               	movlw	0
  7271  001358  6F00               	movwf	0,b	;volatile
  7272                           
  7273                           ;CAN.c: 111:     RXF0SIDL = 0x01;
  7274  00135A  0E01               	movlw	1
  7275  00135C  6F01               	movwf	1,b	;volatile
  7276                           
  7277                           ; BSR set to: 15
  7278                           ;CAN.c: 112:     RXF0SIDLbits.EXIDEN = 1;
  7279  00135E  8701               	bsf	1,3,b	;volatile
  7280                           
  7281                           ;CAN.c: 113:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7282  001360  502F               	movf	_DaneCan+3,w,c
  7283  001362  6F02               	movwf	2,b	;volatile
  7284                           
  7285                           ; BSR set to: 15
  7286                           ;CAN.c: 115:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7287  001364  C02E  FF03         	movff	_DaneCan+2,3843	;volatile
  7288                           
  7289                           ;CAN.c: 117:     RXF1SIDH = 0x00;
  7290  001368  0E00               	movlw	0
  7291  00136A  6F04               	movwf	4,b	;volatile
  7292                           
  7293                           ;CAN.c: 118:     RXF1SIDL = 0x01;
  7294  00136C  0E01               	movlw	1
  7295  00136E  6F05               	movwf	5,b	;volatile
  7296                           
  7297                           ; BSR set to: 15
  7298                           ;CAN.c: 119:     RXF1SIDLbits.EXIDEN = 1;
  7299  001370  8705               	bsf	5,3,b	;volatile
  7300                           
  7301                           ;CAN.c: 120:     RXF1EIDH = 0x7F;
  7302  001372  0E7F               	movlw	127
  7303  001374  6F06               	movwf	6,b	;volatile
  7304                           
  7305                           ; BSR set to: 15
  7306                           ;CAN.c: 121:     RXF1EIDL = 0xFF;
  7307  001376  6907               	setf	7,b	;volatile
  7308                           
  7309                           ; BSR set to: 15
  7310                           ;CAN.c: 123:     CAN_SetupFilter_Ne();
  7311  001378  EC52  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  7312                           
  7313                           ;CAN.c: 126:     RXFBCON0 = 0b00000000;
  7314  00137C  0E00               	movlw	0
  7315  00137E  010D               	movlb	13	; () banked
  7316  001380  6FE0               	movwf	224,b	;volatile
  7317                           
  7318                           ; BSR set to: 13
  7319                           ;CAN.c: 128:     RXFBCON1 = 0b00010001;
  7320  001382  0E11               	movlw	17
  7321  001384  6FE1               	movwf	225,b	;volatile
  7322                           
  7323                           ; BSR set to: 13
  7324                           ;CAN.c: 130:     RXFBCON2 = 0b00010001;
  7325  001386  0E11               	movlw	17
  7326  001388  6FE2               	movwf	226,b	;volatile
  7327                           
  7328                           ; BSR set to: 13
  7329                           ;CAN.c: 132:     RXFBCON3 = 0b00010001;
  7330  00138A  0E11               	movlw	17
  7331  00138C  6FE3               	movwf	227,b	;volatile
  7332                           
  7333                           ; BSR set to: 13
  7334                           ;CAN.c: 134:     RXFBCON4 = 0b00010001;
  7335  00138E  0E11               	movlw	17
  7336  001390  6FE4               	movwf	228,b	;volatile
  7337                           
  7338                           ; BSR set to: 13
  7339  001392  0012               	return		;funcret
  7340  001394                     __end_of_CAN_SetupMask:
  7341                           	opt callstack 0
  7342                           
  7343 ;; *************** function _CAN_SetupFilter_Ne *****************
  7344 ;; Defined at:
  7345 ;;		line 140 in file "CAN.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      void 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;Total ram usage:        0 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    3
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_CAN_SetupMask
  7370 ;;		_FRAME_AdressOfNeighbors
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text58
  7375  0010A4                     __ptext58:
  7376                           	opt callstack 0
  7377  0010A4                     _CAN_SetupFilter_Ne:
  7378                           	opt callstack 24
  7379                           
  7380                           ;CAN.c: 144:     RXF2SIDH = 0;
  7381                           
  7382                           ; BSR set to: 13
  7383                           ;incstack = 0
  7384  0010A4  0E00               	movlw	0
  7385  0010A6  010F               	movlb	15	; () banked
  7386  0010A8  6F08               	movwf	8,b	;volatile
  7387                           
  7388                           ;CAN.c: 145:     RXF2SIDL = 0x20;
  7389  0010AA  0E20               	movlw	32
  7390  0010AC  6F09               	movwf	9,b	;volatile
  7391                           
  7392                           ; BSR set to: 15
  7393                           ;CAN.c: 146:     RXF2SIDLbits.EXIDEN = 1;
  7394  0010AE  8709               	bsf	9,3,b	;volatile
  7395                           
  7396                           ;CAN.c: 147:     RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7397  0010B0  504D               	movf	_NeightAdress1+1,w,c	;volatile
  7398  0010B2  6F0A               	movwf	10,b	;volatile
  7399                           
  7400                           ; BSR set to: 15
  7401                           ;CAN.c: 148:     RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7402  0010B4  C04C  FF0B         	movff	_NeightAdress1,3851	;volatile
  7403                           
  7404                           ;CAN.c: 151:     RXF3SIDH = 0;
  7405  0010B8  0E00               	movlw	0
  7406  0010BA  6F0C               	movwf	12,b	;volatile
  7407                           
  7408                           ;CAN.c: 152:     RXF3SIDL = 0x20;
  7409  0010BC  0E20               	movlw	32
  7410  0010BE  6F0D               	movwf	13,b	;volatile
  7411                           
  7412                           ; BSR set to: 15
  7413                           ;CAN.c: 153:     RXF3SIDLbits.EXIDEN = 1;
  7414  0010C0  870D               	bsf	13,3,b	;volatile
  7415                           
  7416                           ;CAN.c: 154:     RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7417  0010C2  5058               	movf	_NeightAdress2+1,w,c	;volatile
  7418  0010C4  6F0E               	movwf	14,b	;volatile
  7419                           
  7420                           ; BSR set to: 15
  7421                           ;CAN.c: 155:     RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7422  0010C6  C057  FF0F         	movff	_NeightAdress2,3855	;volatile
  7423                           
  7424                           ;CAN.c: 157:     RXF4SIDH = 0;
  7425  0010CA  0E00               	movlw	0
  7426  0010CC  6F10               	movwf	16,b	;volatile
  7427                           
  7428                           ;CAN.c: 158:     RXF4SIDL = 0x20;
  7429  0010CE  0E20               	movlw	32
  7430  0010D0  6F11               	movwf	17,b	;volatile
  7431                           
  7432                           ; BSR set to: 15
  7433                           ;CAN.c: 159:     RXF4SIDLbits.EXIDEN = 1;
  7434  0010D2  8711               	bsf	17,3,b	;volatile
  7435                           
  7436                           ;CAN.c: 160:     RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7437  0010D4  504B               	movf	_NeightAdress3+1,w,c	;volatile
  7438  0010D6  6F12               	movwf	18,b	;volatile
  7439                           
  7440                           ; BSR set to: 15
  7441                           ;CAN.c: 161:     RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7442  0010D8  C04A  FF13         	movff	_NeightAdress3,3859	;volatile
  7443                           
  7444                           ;CAN.c: 163:     RXF5SIDH = 0;
  7445  0010DC  0E00               	movlw	0
  7446  0010DE  6F14               	movwf	20,b	;volatile
  7447                           
  7448                           ;CAN.c: 164:     RXF5SIDL = 0x20;
  7449  0010E0  0E20               	movlw	32
  7450  0010E2  6F15               	movwf	21,b	;volatile
  7451                           
  7452                           ; BSR set to: 15
  7453                           ;CAN.c: 165:     RXF5SIDLbits.EXIDEN = 1;
  7454  0010E4  8715               	bsf	21,3,b	;volatile
  7455                           
  7456                           ;CAN.c: 166:     RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7457  0010E6  5049               	movf	_NeightAdress4+1,w,c	;volatile
  7458  0010E8  6F16               	movwf	22,b	;volatile
  7459                           
  7460                           ; BSR set to: 15
  7461                           ;CAN.c: 167:     RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7462  0010EA  C048  FF17         	movff	_NeightAdress4,3863	;volatile
  7463                           
  7464                           ;CAN.c: 169:     RXF6SIDH = 0;
  7465  0010EE  0E00               	movlw	0
  7466  0010F0  010D               	movlb	13	; () banked
  7467  0010F2  6F60               	movwf	96,b	;volatile
  7468                           
  7469                           ;CAN.c: 170:     RXF6SIDL = 0x20;
  7470  0010F4  0E20               	movlw	32
  7471  0010F6  6F61               	movwf	97,b	;volatile
  7472                           
  7473                           ; BSR set to: 13
  7474                           ;CAN.c: 171:     RXF6SIDLbits.EXIDEN = 1;
  7475  0010F8  8761               	bsf	97,3,b	;volatile
  7476                           
  7477                           ;CAN.c: 172:     RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7478  0010FA  5047               	movf	_NeightAdress5+1,w,c	;volatile
  7479  0010FC  6F62               	movwf	98,b	;volatile
  7480                           
  7481                           ; BSR set to: 13
  7482                           ;CAN.c: 173:     RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7483  0010FE  C046  FD63         	movff	_NeightAdress5,3427	;volatile
  7484                           
  7485                           ;CAN.c: 175:     RXF7SIDH = 0;
  7486  001102  0E00               	movlw	0
  7487  001104  6F64               	movwf	100,b	;volatile
  7488                           
  7489                           ;CAN.c: 176:     RXF7SIDL = 0x20;
  7490  001106  0E20               	movlw	32
  7491  001108  6F65               	movwf	101,b	;volatile
  7492                           
  7493                           ; BSR set to: 13
  7494                           ;CAN.c: 177:     RXF7SIDLbits.EXIDEN = 1;
  7495  00110A  8765               	bsf	101,3,b	;volatile
  7496                           
  7497                           ;CAN.c: 178:     RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7498  00110C  5045               	movf	_NeightAdress6+1,w,c	;volatile
  7499  00110E  6F66               	movwf	102,b	;volatile
  7500                           
  7501                           ; BSR set to: 13
  7502                           ;CAN.c: 179:     RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7503  001110  C044  FD67         	movff	_NeightAdress6,3431	;volatile
  7504                           
  7505                           ;CAN.c: 181:     RXF8SIDH = 0;
  7506  001114  0E00               	movlw	0
  7507  001116  6F68               	movwf	104,b	;volatile
  7508                           
  7509                           ;CAN.c: 182:     RXF8SIDL = 0x20;
  7510  001118  0E20               	movlw	32
  7511  00111A  6F69               	movwf	105,b	;volatile
  7512                           
  7513                           ; BSR set to: 13
  7514                           ;CAN.c: 183:     RXF8SIDLbits.EXIDEN = 1;
  7515  00111C  8769               	bsf	105,3,b	;volatile
  7516                           
  7517                           ;CAN.c: 184:     RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7518  00111E  5043               	movf	_NeightAdress7+1,w,c	;volatile
  7519  001120  6F6A               	movwf	106,b	;volatile
  7520                           
  7521                           ; BSR set to: 13
  7522                           ;CAN.c: 185:     RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7523  001122  C042  FD6B         	movff	_NeightAdress7,3435	;volatile
  7524                           
  7525                           ;CAN.c: 187:     RXF9SIDH = 0;
  7526  001126  0E00               	movlw	0
  7527  001128  6F70               	movwf	112,b	;volatile
  7528                           
  7529                           ;CAN.c: 188:     RXF9SIDL = 0x20;
  7530  00112A  0E20               	movlw	32
  7531  00112C  6F71               	movwf	113,b	;volatile
  7532                           
  7533                           ; BSR set to: 13
  7534                           ;CAN.c: 189:     RXF9SIDLbits.EXIDEN = 1;
  7535  00112E  8771               	bsf	113,3,b	;volatile
  7536                           
  7537                           ;CAN.c: 190:     RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7538  001130  5041               	movf	_NeightAdress8+1,w,c	;volatile
  7539  001132  6F72               	movwf	114,b	;volatile
  7540                           
  7541                           ; BSR set to: 13
  7542                           ;CAN.c: 191:     RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7543  001134  C040  FD73         	movff	_NeightAdress8,3443	;volatile
  7544                           
  7545                           ; BSR set to: 13
  7546  001138  0012               	return		;funcret
  7547  00113A                     __end_of_CAN_SetupFilter_Ne:
  7548                           	opt callstack 0
  7549                           
  7550 ;; *************** function _CAN_SetupClock *****************
  7551 ;; Defined at:
  7552 ;;		line 199 in file "CAN.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;		None
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;		None
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  1    wreg      void 
  7559 ;; Registers used:
  7560 ;;		None
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;Total ram usage:        0 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; Hardware stack levels required when called:    3
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		_CAN_Setup
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text59
  7581  001950                     __ptext59:
  7582                           	opt callstack 0
  7583  001950                     _CAN_SetupClock:
  7584                           	opt callstack 25
  7585                           
  7586                           ;CAN.c: 201:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7587                           
  7588                           ; BSR set to: 13
  7589                           ;incstack = 0
  7590  001950  8070               	bsf	3952,0,c	;volatile
  7591                           
  7592                           ;CAN.c: 202:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7593  001952  8270               	bsf	3952,1,c	;volatile
  7594                           
  7595                           ;CAN.c: 203:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7596  001954  9470               	bcf	3952,2,c	;volatile
  7597                           
  7598                           ;CAN.c: 204:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7599  001956  9670               	bcf	3952,3,c	;volatile
  7600                           
  7601                           ;CAN.c: 205:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7602  001958  9870               	bcf	3952,4,c	;volatile
  7603                           
  7604                           ;CAN.c: 206:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7605  00195A  9A70               	bcf	3952,5,c	;volatile
  7606                           
  7607                           ;CAN.c: 208:     BRGCON1bits.SJW0 = 1;
  7608  00195C  8C70               	bsf	3952,6,c	;volatile
  7609                           
  7610                           ;CAN.c: 209:     BRGCON1bits.SJW1 = 1;
  7611  00195E  8E70               	bsf	3952,7,c	;volatile
  7612                           
  7613                           ;CAN.c: 211:     BRGCON2bits.SEG1PH0 = 1;
  7614  001960  8671               	bsf	3953,3,c	;volatile
  7615                           
  7616                           ;CAN.c: 212:     BRGCON2bits.SEG1PH1 = 1;
  7617  001962  8871               	bsf	3953,4,c	;volatile
  7618                           
  7619                           ;CAN.c: 213:     BRGCON2bits.SEG1PH2 = 1;
  7620  001964  8A71               	bsf	3953,5,c	;volatile
  7621                           
  7622                           ;CAN.c: 215:     BRGCON2bits.PRSEG2 = 1;
  7623  001966  8471               	bsf	3953,2,c	;volatile
  7624                           
  7625                           ;CAN.c: 216:     BRGCON2bits.PRSEG1 = 0;
  7626  001968  9271               	bcf	3953,1,c	;volatile
  7627                           
  7628                           ;CAN.c: 217:     BRGCON2bits.PRSEG0 = 0;
  7629  00196A  9071               	bcf	3953,0,c	;volatile
  7630                           
  7631                           ;CAN.c: 219:     BRGCON3bits.SEG2PH0 = 1;
  7632  00196C  8072               	bsf	3954,0,c	;volatile
  7633                           
  7634                           ;CAN.c: 220:     BRGCON3bits.SEG2PH1 = 0;
  7635  00196E  9272               	bcf	3954,1,c	;volatile
  7636                           
  7637                           ;CAN.c: 221:     BRGCON3bits.SEG2PH2 = 1;
  7638  001970  8472               	bsf	3954,2,c	;volatile
  7639                           
  7640                           ;CAN.c: 223:     BRGCON2bits.SAM = 1;
  7641  001972  8C71               	bsf	3953,6,c	;volatile
  7642                           
  7643                           ;CAN.c: 224:     BRGCON2bits.SEG2PHTS = 1;
  7644  001974  8E71               	bsf	3953,7,c	;volatile
  7645  001976  0012               	return		;funcret
  7646  001978                     __end_of_CAN_SetupClock:
  7647                           	opt callstack 0
  7648                           
  7649 ;; *************** function _ISR_low *****************
  7650 ;; Defined at:
  7651 ;;		line 16 in file "ISR.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7669 ;;Total ram usage:        3 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    2
  7672 ;; This function calls:
  7673 ;;		_TMR1_Timer_reset
  7674 ;;		i1_TMR1_Update_flag_Set
  7675 ;; This function is called by:
  7676 ;;		Interrupt level 1
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	intcodelo
  7681  000018                     __pintcodelo:
  7682                           	opt callstack 0
  7683  000018                     _ISR_low:
  7684                           	opt callstack 22
  7685                           
  7686                           ;incstack = 0
  7687  000018  8059               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7688  00001A  CFD8 F003          	movff	status,??_ISR_low
  7689  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  7690  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  7691                           
  7692                           ;ISR.c: 21:     if(TMR1IF==1)
  7693  000026  A09E               	btfss	3998,0,c	;volatile
  7694  000028  D012               	goto	i1l782
  7695                           
  7696                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  7697  00002A  ECBC  F00C         	call	_TMR1_Timer_reset	;wreg free
  7698                           
  7699                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  7700  00002E  0E00               	movlw	0
  7701  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  7702  000032  0E01               	movlw	1
  7703  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  7704  000036  EC59  F00D         	call	i1_TMR1_Update_flag_Set	;wreg free
  7705                           
  7706                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  7707  00003A  0100               	movlb	0	; () banked
  7708  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  7712  00003E  2A39               	incf	ISR_low@ramkaStanuU8,f,c
  7713  000040  0E14               	movlw	20
  7714  000042  6439               	cpfsgt	ISR_low@ramkaStanuU8,c
  7715  000044  D003               	goto	i1l3714
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  7719  000046  0E00               	movlw	0
  7720  000048  6E39               	movwf	ISR_low@ramkaStanuU8,c
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  7724  00004A  802C               	bsf	_DaneCan,0,c
  7725  00004C                     i1l3714:
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;ISR.c: 41:             TMR1IF=0;
  7729  00004C  909E               	bcf	3998,0,c	;volatile
  7730  00004E                     i1l782:
  7731  00004E  C005  FFE0         	movff	??_ISR_low+2,bsr
  7732  000052  C004  FFE8         	movff	??_ISR_low+1,wreg
  7733  000056  C003  FFD8         	movff	??_ISR_low,status
  7734  00005A  9059               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7735  00005C  0010               	retfie	
  7736  00005E                     __end_of_ISR_low:
  7737                           	opt callstack 0
  7738                           
  7739 ;; *************** function i1_TMR1_Update_flag_Set *****************
  7740 ;; Defined at:
  7741 ;;		line 32 in file "TMR1.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  a               2    0[COMRAM] unsigned int 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		None
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;Total ram usage:        2 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    1
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_ISR_low
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text61
  7770  001AB2                     __ptext61:
  7771                           	opt callstack 0
  7772  001AB2                     i1_TMR1_Update_flag_Set:
  7773                           	opt callstack 22
  7774                           
  7775                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  7776                           
  7777                           ;incstack = 0
  7778  001AB2  C001  F034         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  7779  001AB6  C002  F035         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  7780  001ABA  0012               	return		;funcret
  7781  001ABC                     __end_ofi1_TMR1_Update_flag_Set:
  7782                           	opt callstack 0
  7783                           
  7784 ;; *************** function _TMR1_Timer_reset *****************
  7785 ;; Defined at:
  7786 ;;		line 63 in file "TMR1.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  7791 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  1    wreg      unsigned char 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;Total ram usage:        2 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    1
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_ISR_low
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text62
  7816  001978                     __ptext62:
  7817                           	opt callstack 0
  7818  001978                     _TMR1_Timer_reset:
  7819                           	opt callstack 22
  7820                           
  7821                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  7822                           
  7823                           ;incstack = 0
  7824  001978  0E00               	movlw	0
  7825  00197A  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  7826  00197C  0E00               	movlw	0
  7827  00197E  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  7828                           
  7829                           ;TMR1.c: 70:     t1L = TMR1L;
  7830  001980  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  7831                           
  7832                           ;TMR1.c: 71:     t1H = TMR1H;
  7833  001984  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  7834                           
  7835                           ;TMR1.c: 72:     __nop();
  7836  001988  F000               	nop	
  7837                           
  7838                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  7839  00198A  0E9E               	movlw	158
  7840  00198C  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  7841                           
  7842                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  7843  00198E  0E57               	movlw	87
  7844  001990  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  7845                           
  7846                           ;TMR1.c: 75:     TMR1H = t1H;
  7847  001992  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  7848                           
  7849                           ;TMR1.c: 76:     TMR1L = 0x5B;
  7850  001996  0E5B               	movlw	91
  7851  001998  6ECE               	movwf	4046,c	;volatile
  7852  00199A  0012               	return		;funcret
  7853  00199C                     __end_of_TMR1_Timer_reset:
  7854                           	opt callstack 0
  7855                           
  7856 ;; *************** function _ISR_high *****************
  7857 ;; Defined at:
  7858 ;;		line 53 in file "ISR.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		None
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;Total ram usage:        0 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		Interrupt level 2
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	intcode
  7886  000008                     __pintcode:
  7887                           	opt callstack 0
  7888  000008                     _ISR_high:
  7889                           	opt callstack 22
  7890                           
  7891                           ;incstack = 0
  7892  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7893  00000A  ED66  F00D         	call	int_func,f	;refresh shadow registers
  7894                           
  7895                           	psect	intcode_body
  7896  001ACC                     __pintcode_body:
  7897                           	opt callstack 22
  7898  001ACC                     int_func:
  7899                           	opt callstack 22
  7900  001ACC  0006               	pop		; remove dummy address from shadow register refresh
  7901  001ACE  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7902  001AD0  0011               	retfie		f
  7903  001AD2                     __end_of_ISR_high:
  7904                           	opt callstack 0
  7905  0000                     
  7906                           	psect	rparam
  7907  0000                     
  7908                           	psect	temp
  7909  000059                     btemp:
  7910                           	opt callstack 0
  7911  000059                     	ds	1
  7912  0000                     int$flags	set	btemp
  7913  0000                     wtemp8	set	btemp+1
  7914  0000                     ttemp5	set	btemp+1
  7915  0000                     ttemp6	set	btemp+4
  7916  0000                     ttemp7	set	btemp+8
  7917                           tosu	equ	0xFFF
  7918                           tosh	equ	0xFFE
  7919                           tosl	equ	0xFFD
  7920                           stkptr	equ	0xFFC
  7921                           pclatu	equ	0xFFB
  7922                           pclath	equ	0xFFA
  7923                           pcl	equ	0xFF9
  7924                           tblptru	equ	0xFF8
  7925                           tblptrh	equ	0xFF7
  7926                           tblptrl	equ	0xFF6
  7927                           tablat	equ	0xFF5
  7928                           prodh	equ	0xFF4
  7929                           prodl	equ	0xFF3
  7930                           indf0	equ	0xFEF
  7931                           postinc0	equ	0xFEE
  7932                           postdec0	equ	0xFED
  7933                           preinc0	equ	0xFEC
  7934                           plusw0	equ	0xFEB
  7935                           fsr0h	equ	0xFEA
  7936                           fsr0l	equ	0xFE9
  7937                           wreg	equ	0xFE8
  7938                           indf1	equ	0xFE7
  7939                           postinc1	equ	0xFE6
  7940                           postdec1	equ	0xFE5
  7941                           preinc1	equ	0xFE4
  7942                           plusw1	equ	0xFE3
  7943                           fsr1h	equ	0xFE2
  7944                           fsr1l	equ	0xFE1
  7945                           bsr	equ	0xFE0
  7946                           indf2	equ	0xFDF
  7947                           postinc2	equ	0xFDE
  7948                           postdec2	equ	0xFDD
  7949                           preinc2	equ	0xFDC
  7950                           plusw2	equ	0xFDB
  7951                           fsr2h	equ	0xFDA
  7952                           fsr2l	equ	0xFD9
  7953                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         692
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      88
    BANK0           160      4     118
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), NeightAdress5(COMRAM[2]), 
		 -> NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   31436
                                              0 BANK0      4     4      0
                            _INI_All
                         _LED_Update
                          _ReadFlash
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18341
                                             26 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   15290
                                             17 COMRAM     9     7      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4178
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3289
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3289
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     234
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ReadFlash                                            2     0      2     269
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    7072
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4382
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     467
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     467
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    5480
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    3139
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    3139
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     181
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              1     1      0     585
                                             11 COMRAM     1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     569
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _ReadFlash
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      76       5       73.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      58       1       93.6%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      20        0.0%
DATA                 0      0     2EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 26 14:38:21 2019

               __end_of_FRAME_DeviceReset 0BBC                     ?_FRAME_AveragingTimes 0006  
                            ___awdiv@sign 000B                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0006  
                       _FRAME_MapPosition 1AD6                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 000C                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 0008                        __size_of_CAN_GenID 0078  
                                     l300 034E                                       l301 0354  
                                     l302 035A                                       l303 0360  
                                     l304 0366                                       l419 09CA  
                                     l391 120E                                       l287 07CC  
                                     l296 033C                                       l288 07CA  
                             ?_LED_Update 0001                                       l297 03AC  
                                     l298 0342                                       l299 0348  
                                     l927 18C0                                       l919 18B8  
                                     l695 07AA                                       l936 17B4  
                                     l696 07A2                              __CFG_CPB$OFF 000000  
                      ??_FRAME_AxisStatus 0008                              __CFG_CPD$OFF 000000  
                      ?_FRAME_MapPosition 0006                        __size_of_CAN_Setup 0064  
                            ?_LED_Control 0006                                       wreg 000FE8  
                   __end_of_CAN_TakeFrame 05AA                               ?_INI_OUTPUT 0001  
                  __size_of_INI_LED_Start 0034                             NVMInit@result 000C  
                ??_MOCK_Klikniecie_Spadek 0008                     __end_of_CAN_SendFrame 0922  
                            __CFG_LVP$OFF 000000                           _neighborsAdress 003C  
               TRM_DataTransmition@weWyU8 0038              __size_of_INI_GlobalInterrupt 000E  
                     ??_FRAME_MapPosition 0008                              __CFG_WDT$OFF 000000  
                                    l1434 1612                                      l4030 0EA4  
                                    l4114 15E0                                      l4202 0866  
                                    l4042 0ED4                           __end_of_INI_All 19BE  
                                    l4116 15E8                                      l4060 0F1C  
                                    l4036 0EBC                                      l4126 1608  
                                    l4206 091A                                      l4302 1648  
                                    l4054 0F04                                      l4400 186E  
                                    l4072 0F4C                                      l4048 0EEC  
                                    l4242 172E                                      l4226 169E  
                                    l4066 0F34                                      l4500 04AA  
                                    l4324 0B36                                      l4430 117C  
                                    l4422 115E                                      l4502 04B2  
                                    l4342 0BAA                                      l4334 0B76  
                                    l4270 0CA4                                      l4440 119C  
                                    l4416 114E                                      l4520 0536  
                                    l4512 04FE                                      l4360 15AC  
                                    l4264 0C5E                                      l4354 18E8  
                                    l4530 055E                                      l4522 053E  
                                    l4506 04BA                                      l4514 0518  
                                    l4338 0B98                                      l4370 105C  
                                    l4274 0CC0                                      l4428 1174  
                                    l4444 11A6                                      l4524 0546  
                                    l4516 052A                                      l4508 04FA  
                                    l4620 0608                                      l4454 13FE  
                                    l3902 0964                                      l4526 054E  
                                    l4518 0530                                      l4534 0566  
                                    l4390 026C                                      l4382 011C  
                                    l4630 064E                                      l4622 0616  
                                    l4614 05DE                                      l3920 0994  
                                    l4704 11EA                                      l4448 11B4  
                                    l4528 0556                                      l4536 05A6  
                                    l4472 036C                                      l4384 019E  
                                    l4640 06A8                                      l4632 065C  
                                    l4624 0624                                      l4616 05EC  
                                    l4720 16E0                                      l4466 1450  
                                    l3914 0984                                      l4490 0484  
                                    l4634 066A                                      l4626 0632  
                                    l4618 05FA                                      l3932 09B4  
                                    l3908 0974                                      l4492 048A  
                                    l4388 0266                                      l3828 17DE  
                                    l4636 0684                                      l4628 0640  
                                    l4644 06BE                                      l4740 1494  
                                    l3950 09EA                                      l3926 09A4  
                                    l4574 0FB8                                      l4582 0FEE  
                                    l3870 192A                                      l4494 0492  
                                    l4638 0692                                      l4646 0728  
                                    l4750 14B6                                      l3944 09DA  
                                    l4576 0FC2                                      l4568 0F8C  
                                    l4496 049A                                      l4488 047E  
                                    l3962 0A0A                                      l3938 09C4  
                                    l3890 0944                                      l4498 04A2  
                                    l3980 0A3A                                      l3956 09FA  
                                    l3884 0934                                      l3974 0A2A  
                                    _BIE0 000DFA                                      l3992 0A5A  
                                    l3968 0A1A                                      l3896 0954  
                                    l3986 0A4A                                      l3998 0A6C  
                       _MOC_Frame_Counter 1A3A                                      _LATA 000F89  
                                    u2310 15EC                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u2510 0AC4  
                                    u2520 0ADC                                      u2516 0AC6  
                                    u2526 0ADE                                      u2470 1658  
                                    u2375 083C                                      _IPR3 000FA5  
                                    u2800 0FF6                                      _IPEN 007E87  
                                    _PIE3 000FA3                                      u2690 1180  
                                    u2755 0416                                      u1955 18B4  
                                    _PEIE 007F96                                      u1956 18B6  
                                    _LOCK 003B                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 000A  
                                    _Dane 00D0                           __end_of_ISR_low 005E  
                        LED_Control@diode 0006                      FRAME_AnalogValue@set 0008  
                      ?_MOC_Frame_Counter 0006                                      _main 145E  
                        LED_Control@color 000A                           __end_of_NVMInit 177C  
                         __end_of_NVMRead 18F2                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0059  
                          _CAN_SetupClock 1950                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 1394  
           __size_of_TMR1_Update_flag_Get 000A                                      start 005E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_LED_Error 001E  
                           __CFG_IESO$OFF 000000                        __size_of_LED_Right 004C  
           __size_of_FRAME_HandleCanFrame 0206                             _LED_Light_Pos 0F56  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                     ??_MOC_Frame_Counter 0008                ??_MOC_Aktualna_Temperatura 0008  
       FRAME_HandleCanFrame@identyfikator 001A                        __size_of_INI_Timer 0018  
               __end_of_FRAME_MapPosition 1AD8                             _NeightAdress1 004C  
                           _NeightAdress2 0057                             _NeightAdress3 004A  
                           _NeightAdress4 0048                             _NeightAdress5 0046  
                           _NeightAdress6 0044                             _NeightAdress7 0042  
                           _NeightAdress8 0040                          __end_of_LED_Left 1742  
           __size_of_MOCK_PrzyspieszenieX 000A             __size_of_MOCK_PrzyspieszenieY 000A  
           __size_of_MOCK_PrzyspieszenieZ 000A                     ReadfromEEPROM@Address 0006  
                                   _B0CON 000E20                                     _B1CON 000E30  
                                   _B2CON 000E40                                     _B3CON 000E50  
                                   _B4CON 000E60                                     _B5CON 000E70  
                        __end_of_LOCK_Get 1AD6                                     ?_main 0001  
                        __end_of_LOCK_Set 1ACC                           __end_of___awdiv 11BE  
                                   _EEADR 000FA9                                     _BSEL0 000DF8  
                         ___awdiv@divisor 0008                                     _T1CON 000FCD  
                                   _IRCF0 007E9C                                     _IRCF1 007E9D  
       FRAME_ExcitationMultiplier@message 0006                                     _IRCF2 007E9E  
                         __end_of___lwdiv 161C                                     i1l782 004E  
                     __size_of_FRAME_Plot 0058                           ___awdiv@counter 000A  
                                   _MSEL0 000DF0                                     _MSEL1 000DF1  
                                   _MSEL2 000DF2                                     _MSEL3 000DF3  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_PWRT$OFF 000000  
                                   _Flagi 00C6                    ?_CAN_MoveBuffIntoFrame 0006  
                           __CFG_WRT0$OFF 000000                __size_of_FRAME_AnalogValue 0002  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_ISR_high 1AD2                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
               __end_of_MOC_Frame_Counter 1A48                            __CFG_EBTRB$OFF 000000  
                 i1TMR1_Update_flag_Set@a 0001                              ?_MOC_NOTWORK 0006  
               __size_of_ReadDataToEEPROM 00E2                          __end_of_NVMWrite 17E8  
                        __end_of_NVMalloc 188A                                     tablat 000FF5  
                  __end_of_CAN_SetupClock 1978                                     ttemp5 005A  
                                   ttemp6 005D                                     ttemp7 0061  
                                   status 000FD8                                     wtemp8 005A  
                       __end_of_CAN_GenID 12B0                            __CFG_PBADEN$ON 000000  
                     __size_of_LED_Update 007A                            ?_LED_Light_Pos 000D  
                        _TMR1_Timer_reset 1978                         __end_of_CAN_Setup 145E  
                           _INI_LED_Start 18F2                     _FRAME_ExcitationValue 177C  
        FRAME_AccelerometerStatus@message 0008                           __initialization 14BE  
                     __size_of_INI_OUTPUT 0020                          CAN_GenID@frameID 0008  
                            __end_of_main 14BE                    ??_FRAME_AveragingTimes 0008  
              __size_of_FRAME_DeviceReset 0148                  ?_FRAME_AdressOfNeighbors 0006  
                  __size_of_WritetoEEPROM 0034                          CAN_GenID@message 0006  
               _FRAME_AccelerometerStatus 12B0                                    ??_main 002C  
                  CAN_MoveBuffIntoFrame@i 000A                             __activetblptr 000002  
                            NVMWrite@addr 000B                          _TMR1_Update_flag 0034  
                 WritetoEEPROM@GIE_Status 0036                     __end_of_IsInNeighbors 0F56  
                         _wartosciSasiada 00D6                                 ??_INI_All 000E  
                       __end_of_LED_Error 19FC                         __end_of_LED_Right 16B6  
                    WritetoEEPROM@Address 0006           __size_of_MOCK_Klikniecie_Spadek 000A  
                               ??_ISR_low 0003                                 ??_NVMInit 000C  
                               ??_NVMRead 000E                                    _CANCON 000F6F  
                                  _EEADRH 000FAA                                    _EEDATA 000FA8  
                                  _EECON2 000FA7                          ___awdiv@dividend 0006  
             FRAME_ExcitationMultiplier@i 0009                                    _CIOCON 000F73  
                         __CFG_BBSIZ$1024 000000                         __end_of_INI_Timer 1A14  
                                  i1l3714 004C                                    _TABLAT 000FF5  
                         ?_CAN_SetupClock 0001                                    _TBLPTR 000FF6  
                                  _RXB0D0 000F66                                    _TMR1IE 007CE8  
                                  _TMR1IF 007CF0                                    _TMR1IP 007CF8  
                                  _TMR1ON 007E68                        __size_of_ReadFlash 0014  
            ??_FRAME_ExcitationMultiplier 0008                            ?_INI_LED_Start 0001  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 000A  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 000D  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 000A  
                                  clear_0 14E6                                    clear_1 14F8  
                                  clear_2 1504                          ___awdiv@quotient 000C  
                            NVMalloc@size 0006                ??_FRAME_PrzypisanieDokarty 0008  
                ??i1_TMR1_Update_flag_Set 0003                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 004E  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8       __size_of_FRAME_ExcitationMultiplier 004E  
              __size_of_MOC_Frame_Counter 000E                      __size_of_LED_Control 0152  
                           _WritetoEEPROM 188A                  FRAME_MapPosition@message 0006  
                   TMR1_Update_flag_Set@a 0006                                __accesstop 0060  
                 __end_of__initialization 150A                              ??_FRAME_Plot 000F  
                     ISR_low@ramkaStanuU8 0039                                 ?_LED_Left 0006  
                         ??_LED_Light_Pos 0011                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 0006                                 ?_LOCK_Get 0001  
                               ?_LOCK_Set 0001           __end_of_FRAME_AdressOfNeighbors 032E  
                  _MOCK_Klikniecie_Spadek 1A94                            __pcstackCOMRAM 0001  
                               LED_Left@a 0006                                 LED_Left@b 0008  
                     _INI_GlobalInterrupt 1A48                                 ?_ISR_high 0001  
                               ?_NVMWrite 0009                                 ?_NVMalloc 0006  
                       __end_of_ReadFlash 1A28                              ??_LED_Update 0018  
             __end_of_TRM_DataTransmition 1700                     _FRAME_SoftwareVersion 1394  
                      __end_of_FRAME_Plot 15CA                              ??_INI_OUTPUT 0006  
                               LOCK_Set@k 0006                   FRAME_AxisStatus@message 0006  
             IsInNeighbors@message_adress 0006                            ?_WritetoEEPROM 0006  
                    ?_INI_GlobalInterrupt 0001                          _ReadDataToEEPROM 0DAA  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                             NVMWrite@count 000D  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 000B  
                              ??_LED_Left 0008                                ??_LOCK_Get 0006  
                              ??_LOCK_Set 0006                        __end_of_LED_Update 1238  
                      __end_of_INI_OUTPUT 19DE                                ??_ISR_high 0001  
                     TMR1_Timer_reset@t1H 0002                       TMR1_Timer_reset@t1L 0001  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 000F                   ??_CAN_MoveBuffIntoFrame 000A  
                              ??_NVMalloc 000A              __end_of_TMR1_Update_flag_Get 1AB2  
            __end_of_TMR1_Update_flag_Set 1AA8           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 07B0                                   _INI_All 199C  
                __end_of_TMR1_Timer_reset 199C                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0006                                   _TXB0CON 000F40  
                                 _ISR_low 0018                                   _NVMInit 1742  
                                 _NVMRead 18BE                                   _DaneCan 002C  
            __end_of_MOCK_PrzyspieszenieX 1A94              __end_of_MOCK_PrzyspieszenieY 1A8A  
            __end_of_MOCK_PrzyspieszenieZ 1A80        __end_of_FRAME_ExcitationMultiplier 166A  
              _FRAME_ExcitationMultiplier 161C               FRAME_HandleCanFrame@message 0012  
                           ReadFlash@addr 0006                                   __Hparam 0000  
        ??_MOC_Wynikowa_wartosc_roznicowa 0008           ?_MOC_Wynikowa_wartosc_roznicowa 0006  
                                 __Lparam 0000                    __size_of_CAN_TakeFrame 027C  
                               _CAN_GenID 1238                                   ___awdiv 113A  
                               _CAN_Setup 13FA                    __size_of_CAN_SendFrame 0172  
                                 ___lwdiv 15CA                         LED_Light_Pos@pos2 0014  
                                 __pcinit 14BE                                   __ramtop 0D00  
  FRAME_DataUpdateAndChangeOption@message 0006                                   __ptext0 145E  
                                 __ptext1 16B6                                   __ptext2 05AA  
                                 __ptext3 19DE                                   __ptext4 1394  
                                 __ptext5 0BBC                                   __ptext6 1A62  
                                 __ptext7 1ABC                                   __ptext8 1A3A  
                                 __ptext9 1A6C                    ?_FRAME_SoftwareVersion 0006  
                          _ReadfromEEPROM 1A28                           ??_WritetoEEPROM 0009  
                  __size_of_CAN_SetupMask 006E         __size_of_MOC_Aktualna_Temperatura 000A  
          FRAME_AdressOfNeighbors@nrRamki 0008                 ?_MOC_Aktualna_Temperatura 0006  
        __size_of_FRAME_AdressOfNeighbors 02CC                          ??_CAN_SetupClock 0006  
          FRAME_AdressOfNeighbors@message 0006                                   main@adr 00D4  
                               _LED_Error 19DE                            __pintcode_body 1ACC  
                               _LED_Right 166A                      end_of_initialization 150A  
    FRAME_SensorExcitationStatus@statwect 0032                             __Lmediumconst 0000  
                                 int_func 1ACC                                 _INI_Timer 19FC  
                  i1_TMR1_Update_flag_Set 1AB2          TRM_DataTransmition@czujnikWeWyU8 0037  
                              ?_CAN_GenID 0006                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ?_CAN_Setup 0001  
           __size_of_FRAME_AveragingTimes 0036                    __end_of_ReadfromEEPROM 1A3A  
                    CAN_SendFrame@message 000B                          NVMalloc@location 0008  
                           LED_Update@Red 003A                             _CAN_TakeFrame 032E  
                             NVMRead@addr 000A                             _CAN_SendFrame 07B0  
                              ?_LED_Error 0001                               NVMRead@dest 0008  
             FRAME_AdressOfNeighbors@kier 000E                                ?_LED_Right 0006  
                        _FRAME_AxisStatus 17E8                   ??_FRAME_ExcitationValue 0008  
                              ?_INI_Timer 0001                   ?_MOCK_Klikniecie_Spadek 0006  
                         _ramkaCanRxKarty 0060                      _TMR1_Update_flag_Get 1AA8  
                         _ramkaCanTxKarty 00B5                      _TMR1_Update_flag_Set 1A9E  
                           _CAN_SetupMask 1326                         __size_of_LED_Left 0042  
                    _FRAME_HandleCanFrame 05AA                    __size_of_IsInNeighbors 00CA  
                       __size_of_LOCK_Get 0004                         __size_of_LOCK_Set 0008  
                       _WriteDataToEEPROM 0CC8                  __end_of_ReadDataToEEPROM 0E8C  
                          CAN_TakeFrame@k 0013                        ?_WriteDataToEEPROM 0001  
                         ?_ReadfromEEPROM 0006                             __pidataCOMRAM 1A56  
                       __size_of_ISR_high 1ACA                      _MOCK_PrzyspieszenieX 1A8A  
                    _MOCK_PrzyspieszenieY 1A80                      _MOCK_PrzyspieszenieZ 1A76  
                              LED_Right@a 0006                                LED_Right@b 000A  
                   MOC_Frame_Counter@zeta 004E                         __size_of_NVMWrite 0036  
                           ??_LED_Control 0008                       ??_WriteDataToEEPROM 000F  
                       __size_of_NVMalloc 0036                       start_initialization 14BE  
                          ?_CAN_TakeFrame 000E                                 _ReadFlash 1A14  
                          ?_CAN_SendFrame 000B           FRAME_SensorExcitationStatus@tru 000C  
          __end_of_MOCK_Klikniecie_Spadek 1A9E                          __CFG_OSC$IRCIO67 000000  
       __size_of_FRAME_PrzypisanieDokarty 009E                 ?_FRAME_PrzypisanieDokarty 0006  
                   ?_TMR1_Update_flag_Get 0006                     ?_TMR1_Update_flag_Set 0006  
                          ?_CAN_SetupMask 0001                     __end_of_LED_Light_Pos 1006  
                   ?_FRAME_HandleCanFrame 0012                 __end_of_WriteDataToEEPROM 0DAA  
                             ??_CAN_GenID 0009                               ??_CAN_Setup 0006  
                        __CFG_LPT1OSC$OFF 000000                     ?_MOCK_PrzyspieszenieX 0006  
                   ?_MOCK_PrzyspieszenieY 0006                     ?_MOCK_PrzyspieszenieZ 0006  
                CAN_MoveBuffIntoFrame@Buf 0008      __end_of_FRAME_SensorExcitationStatus 0CC8  
   __size_of_FRAME_SensorExcitationStatus 010C                  CAN_MoveBuffIntoFrame@Ram 0006  
            _FRAME_SensorExcitationStatus 0BBC            __size_of_CAN_MoveBuffIntoFrame 002A  
                             __pbssBIGRAM 00D6             __end_of_CAN_MoveBuffIntoFrame 1950  
                         _Fulfillment_Lvl 0054                               __pbssCOMRAM 002C  
                                ?_INI_All 0001                   _FRAME_AdressOfNeighbors 0062  
                           __pcstackBANK0 00D2                             _IsInNeighbors 0E8C  
                       ?_TMR1_Timer_reset 0001                                ?_ReadFlash 0006  
                         _ustawieniaKarty 003E                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0001   __end_of_FRAME_DataUpdateAndChangeOption 1572  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 0008  
        ?_FRAME_DataUpdateAndChangeOption 0006           _FRAME_DataUpdateAndChangeOption 1518  
                           ??_MOC_NOTWORK 0008                __end_of_CAN_SetupFilter_Ne 113A  
                                ?_NVMInit 0001                                  ?_NVMRead 0008  
                      ??_TMR1_Timer_reset 0001                               ??_LED_Error 000B  
                          NVMWrite@source 0009                               ??_LED_Right 0008  
            __size_of_TRM_DataTransmition 004A                       __end_of_LED_Control 0A74  
             ?_FRAME_ExcitationMultiplier 0006                               ??_INI_Timer 0006  
                   __end_of_INI_LED_Start 1926                          ___lwdiv@dividend 0006  
                               __pintcode 0008                                  ?___awdiv 0006  
                 ??_FRAME_SoftwareVersion 0008          __end_of_MOC_Aktualna_Temperatura 1A76  
                                ?___lwdiv 0006                         FRAME_Plot@message 000D  
                             __pintcodelo 0018               __end_of_INI_GlobalInterrupt 1A56  
                         ??_CAN_TakeFrame 0010             ?_FRAME_SensorExcitationStatus 0008  
  __end_of_MOC_Wynikowa_wartosc_roznicowa 1A6C   __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
          _MOC_Wynikowa_wartosc_roznicowa 1A62                               _COMSTATbits 000F74  
                          ?_IsInNeighbors 0006                           ??_CAN_SendFrame 000D  
                        ___lwdiv@quotient 000B                   ?i1_TMR1_Update_flag_Set 0001  
             FRAME_AveragingTimes@message 0006                    ??_TMR1_Update_flag_Get 0008  
                  ??_TMR1_Update_flag_Set 0008                           ??_CAN_SetupMask 0006  
                                _LED_Left 1700                    ??_FRAME_HandleCanFrame 0014  
                    CAN_TakeFrame@message 000E                       __end_of_MOC_NOTWORK 1AC4  
                                _LOCK_Get 1AD2                      CAN_TakeFrame@tempCON 0012  
                                _LOCK_Set 1AC4                __size_of_WriteDataToEEPROM 00E2  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _RXB0SIDH 000F61                                  _RXB0SIDL 000F62  
                                _RXF0EIDH 000F02                                  _RXF0EIDL 000F03  
                                _RXF1EIDH 000F06                                  _RXF1EIDL 000F07  
                                _RXF2EIDH 000F0A                                  _RXF2EIDL 000F0B  
                                _RXF3EIDH 000F0E                                  _RXF3EIDL 000F0F  
                                _RXF4EIDH 000F12                                  _RXF4EIDL 000F13  
                                _RXF5EIDH 000F16                                  _RXF5EIDL 000F17  
                                _RXF6EIDH 000D62                                  _RXF6EIDL 000D63  
                                _RXF0SIDH 000F00                                  _RXF7EIDH 000D66  
                                _RXF0SIDL 000F01                                  _RXF7EIDL 000D67  
                                _RXF1SIDH 000F04                                  _RXF8EIDH 000D6A  
                                _RXF1SIDL 000F05                                  _RXF8EIDL 000D6B  
                                _RXF2SIDH 000F08                                  _RXF9EIDH 000D72  
                                _RXF2SIDL 000F09                                  _RXF9EIDL 000D73  
                                _RXF3SIDH 000F0C                                  _RXF3SIDL 000F0D  
                                _ISR_high 0008                                  _RXF4SIDH 000F10  
                                _RXF4SIDL 000F11                                  _RXF5SIDH 000F14  
                                _RXF5SIDL 000F15                                  _RXF6SIDH 000D60  
                                _RXF6SIDL 000D61                                  _RXM0EIDH 000F1A  
                                _RXF7SIDH 000D64                                  _RXM0EIDL 000F1B  
                                _RXF7SIDL 000D65                                  _RXM1EIDH 000F1E  
                                _RXF8SIDH 000D68                                  _RXM1EIDL 000F1F  
                                _RXF8SIDL 000D69                                  _RXF9SIDH 000D70  
                  ??_MOCK_PrzyspieszenieX 0008                    ??_MOCK_PrzyspieszenieY 0008  
                                _RXF9SIDL 000D71                    ??_MOCK_PrzyspieszenieZ 0008  
                                _RXFBCON0 000DE0                                  _RXFBCON1 000DE1  
                                _RXFBCON2 000DE2                                  _RXFBCON3 000DE3  
                                _RXFBCON4 000DE4                                  _RXM0SIDH 000F18  
                                _RXM0SIDL 000F19                                  _RXM1SIDH 000F1C  
                                _RXM1SIDL 000F1D                  __end_of_FRAME_AxisStatus 181E  
                                _NVMWrite 17B2                                  _NVMalloc 1854  
               ??_FRAME_AdressOfNeighbors 000A                          _DetectorLedRadar 00CB  
                             _LED_Control 0922                               ??_ReadFlash 0008  
                        __size_of_INI_All 0022              FRAME_ExcitationValue@message 0006  
                   __end_of_WritetoEEPROM 18BE            __end_ofi1_TMR1_Update_flag_Set 1ABC  
                          _nextEEPosition 0030                                 copy_data0 14D2  
                        __size_of_ISR_low 0046        __size_of_FRAME_AccelerometerStatus 0076  
            __end_of_FRAME_AveragingTimes 1854                          __size_of_NVMInit 003A  
                        __size_of_NVMRead 0034                ?_FRAME_AccelerometerStatus 0008  
          __size_of_FRAME_ExcitationValue 0036             __end_of_FRAME_ExcitationValue 17B2  
                              _EECON1bits 000FA6                                  __Hrparam 0000  
                            _RXB0SIDLbits 000F62                          ??_ReadfromEEPROM 0008  
                                __Lrparam 0000                         ?_ReadDataToEEPROM 0001  
                        __size_of___awdiv 0084                          __size_of___lwdiv 0052  
                      ??_ReadDataToEEPROM 000E                           ??_IsInNeighbors 0008  
                _MOC_Aktualna_Temperatura 1A6C           FRAME_PrzypisanieDokarty@message 0006  
                      LED_Light_Pos@flage 0016                        LED_Light_Pos@color 0011  
        __end_of_FRAME_PrzypisanieDokarty 10A4                              _RXF0SIDLbits 000F01  
                FRAME_AnalogValue@message 0006                           ___lwdiv@divisor 0008  
                            _RXF1SIDLbits 000F05                           ___lwdiv@counter 000A  
                                __ptext10 1AC4                                  __ptext11 1AD2  
                                __ptext20 17B2                                  __ptext12 0E8C  
                                __ptext21 188A                                  __ptext13 1006  
                                __ptext30 1A8A                                  __ptext22 1518  
                                __ptext14 1572                                  __ptext31 1A94  
                                __ptext23 17E8                                  __ptext15 1AD6  
                                __ptext40 11BE                                  __ptext32 07B0  
                                __ptext24 181E                                  __ptext16 177C  
                                __ptext41 0F56                                  __ptext33 1238  
                                __ptext25 1AD8                                  __ptext17 161C  
                                __ptext50 1854                                  __ptext42 15CA  
                                __ptext34 032E                                  __ptext26 0062  
                                __ptext18 0A74                                  __ptext51 19FC  
                                __ptext43 166A                                  __ptext35 113A  
                                __ptext27 12B0                                  __ptext19 0CC8  
                                __ptext52 19BE                                  __ptext44 1700  
                                __ptext36 1926                                  __ptext28 1A76  
          ??_FRAME_SensorExcitationStatus 000A                                  __ptext61 1AB2  
                                __ptext53 18F2                                  __ptext45 199C  
                                __ptext37 1A9E                                  __ptext29 1A80  
                                __ptext62 1978                                  __ptext54 0922  
                                __ptext46 0DAA                                  __ptext38 1AA8  
                                __ptext55 1A48                                  __ptext47 18BE  
                                __ptext39 1A14                                  __ptext56 13FA  
                                __ptext48 1A28                                  __ptext57 1326  
                                __ptext49 1742                                  __ptext58 10A4  
                                __ptext59 1950             TRM_DataTransmition@canMessage 001B  
                            _RXF2SIDLbits 000F09                               _MOC_NOTWORK 1ABC  
                            _RXF3SIDLbits 000F0D                 FRAME_HandleCanFrame@ident 0018  
                            _RXF4SIDLbits 000F11                  FRAME_DeviceReset@message 000F  
       __end_of_FRAME_AccelerometerStatus 1326                              _RXF5SIDLbits 000F15  
                              _FRAME_Plot 1572                             __size_of_main 0060  
                            _RXF6SIDLbits 000D61                              _RXF7SIDLbits 000D65  
                 __size_of_CAN_SetupClock 0028                              _RXF8SIDLbits 000D69  
                            _RXF9SIDLbits 000D71                                  int$flags 0059  
                     _TRM_DataTransmition 16B6                               _RXB0DLCbits 000F65  
                              _LED_Update 11BE                               _RXB0CONbits 000F60  
                              _INTCONbits 000FF2                                _INI_OUTPUT 19BE  
                       _FRAME_AnalogValue 1AD8                      ?_TRM_DataTransmition 0001  
            FRAME_SoftwareVersion@message 0006                                  intlevel1 0000  
                                intlevel2 0000                           _czujnikiNaMapie 00CE  
                      ?_FRAME_AnalogValue 0006       FRAME_SensorExcitationStatus@message 0008  
                             _TXB0CONbits 000F40                       ??_FRAME_AnalogValue 000A  
               __size_of_TMR1_Timer_reset 0024                        _CAN_SetupFilter_Ne 10A4  
                LED_Light_Pos@fulfillment 000F                      _FRAME_AveragingTimes 181E  
                     ?_CAN_SetupFilter_Ne 0001            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0A74             __end_of_FRAME_SoftwareVersion 13FA  
                      ?_FRAME_DeviceReset 000F                           LED_Update@Green 0056  
               __end_of_FRAME_AnalogValue 1ADA                    __size_of_LED_Light_Pos 00B0  
                   _CAN_MoveBuffIntoFrame 1926                                _WDTCONbits 000FD1  
                     ??_FRAME_DeviceReset 0011                     ??_TRM_DataTransmition 001B  
                _FRAME_PrzypisanieDokarty 1006                    LED_Light_Pos@LED_array 0012  
                    ??_CAN_SetupFilter_Ne 0006                            LED_Update@pos1 0052  
                          LED_Update@pos2 0050                               ?_FRAME_Plot 000D  
