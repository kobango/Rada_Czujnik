

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Aug 02 08:32:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4680 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  001B1A                     __pidataCOMRAM:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for MOC_Frame_Counter@zeta
   123  001B1A  0011               	dw	17
   124                           
   125                           ;initializer for LED_Update@pos2
   126  001B1C  0001               	dw	1
   127                           
   128                           ;initializer for LED_Update@pos1
   129  001B1E  0001               	dw	1
   130                           
   131                           ;initializer for _Fulfillment_Lvl
   132  001B20  0014               	dw	20
   133                           
   134                           ;initializer for LED_Update@Green
   135  001B22  01                 	db	1
   136                           
   137                           ;initializer for _Init_Data
   138  001B23  FFFF               	dw	65535
   139                           
   140                           ;initializer for _NeightAdress2
   141  001B25  012A               	dw	298
   142  0000                     _RXF9EIDL	set	3443
   143  0000                     _RXF9EIDH	set	3442
   144  0000                     _RXF9SIDLbits	set	3441
   145  0000                     _RXF9SIDL	set	3441
   146  0000                     _RXF9SIDH	set	3440
   147  0000                     _RXF8EIDL	set	3435
   148  0000                     _RXF8EIDH	set	3434
   149  0000                     _RXF8SIDLbits	set	3433
   150  0000                     _RXF8SIDL	set	3433
   151  0000                     _RXF8SIDH	set	3432
   152  0000                     _RXF7EIDL	set	3431
   153  0000                     _RXF7EIDH	set	3430
   154  0000                     _RXF7SIDLbits	set	3429
   155  0000                     _RXF7SIDL	set	3429
   156  0000                     _RXF7SIDH	set	3428
   157  0000                     _RXF6EIDL	set	3427
   158  0000                     _RXF6EIDH	set	3426
   159  0000                     _RXF6SIDLbits	set	3425
   160  0000                     _RXF6SIDL	set	3425
   161  0000                     _RXF6SIDH	set	3424
   162  0000                     _RXFCON1	set	3541
   163  0000                     _RXFCON0	set	3540
   164  0000                     _RXFBCON4	set	3556
   165  0000                     _RXFBCON3	set	3555
   166  0000                     _RXFBCON2	set	3554
   167  0000                     _RXFBCON1	set	3553
   168  0000                     _RXFBCON0	set	3552
   169  0000                     _MSEL3	set	3571
   170  0000                     _MSEL2	set	3570
   171  0000                     _MSEL1	set	3569
   172  0000                     _MSEL0	set	3568
   173  0000                     _BIE0	set	3578
   174  0000                     _BSEL0	set	3576
   175  0000                     _B5CON	set	3696
   176  0000                     _B4CON	set	3680
   177  0000                     _B3CON	set	3664
   178  0000                     _B2CON	set	3648
   179  0000                     _B1CON	set	3632
   180  0000                     _B0CON	set	3616
   181  0000                     _TXB0CONbits	set	3904
   182  0000                     _RXF5EIDL	set	3863
   183  0000                     _RXF5EIDH	set	3862
   184  0000                     _RXF5SIDLbits	set	3861
   185  0000                     _RXF5SIDL	set	3861
   186  0000                     _RXF5SIDH	set	3860
   187  0000                     _RXF4EIDL	set	3859
   188  0000                     _RXF4EIDH	set	3858
   189  0000                     _RXF4SIDLbits	set	3857
   190  0000                     _RXF4SIDL	set	3857
   191  0000                     _RXF4SIDH	set	3856
   192  0000                     _RXF3EIDL	set	3855
   193  0000                     _RXF3EIDH	set	3854
   194  0000                     _RXF3SIDLbits	set	3853
   195  0000                     _RXF3SIDL	set	3853
   196  0000                     _RXF3SIDH	set	3852
   197  0000                     _RXF2EIDL	set	3851
   198  0000                     _RXF2EIDH	set	3850
   199  0000                     _RXF2SIDLbits	set	3849
   200  0000                     _RXF2SIDL	set	3849
   201  0000                     _RXF2SIDH	set	3848
   202  0000                     _RXF1EIDL	set	3847
   203  0000                     _RXF1EIDH	set	3846
   204  0000                     _RXF1SIDLbits	set	3845
   205  0000                     _RXF1SIDL	set	3845
   206  0000                     _RXF1SIDH	set	3844
   207  0000                     _RXF0EIDL	set	3843
   208  0000                     _RXF0EIDH	set	3842
   209  0000                     _RXF0SIDLbits	set	3841
   210  0000                     _RXF0SIDL	set	3841
   211  0000                     _RXF0SIDH	set	3840
   212  0000                     _RXM1EIDL	set	3871
   213  0000                     _RXM1EIDH	set	3870
   214  0000                     _RXM1SIDL	set	3869
   215  0000                     _RXM1SIDH	set	3868
   216  0000                     _RXM0EIDL	set	3867
   217  0000                     _RXM0EIDH	set	3866
   218  0000                     _RXM0SIDL	set	3865
   219  0000                     _RXM0SIDH	set	3864
   220  0000                     _RXB1CON	set	3920
   221  0000                     _TXB0CON	set	3904
   222  0000                     _TBLPTR	set	4086
   223  0000                     _TABLAT	set	4085
   224  0000                     _EECON2	set	4007
   225  0000                     _EEDATA	set	4008
   226  0000                     _EECON1bits	set	4006
   227  0000                     _EEADR	set	4009
   228  0000                     _EEADRH	set	4010
   229  0000                     _INTCONbits	set	4082
   230  0000                     _WDTCONbits	set	4049
   231  0000                     _RCONbits	set	4048
   232  0000                     _TRISC	set	3988
   233  0000                     _LATC	set	3979
   234  0000                     _T1CON	set	4045
   235  0000                     _TMR1H	set	4047
   236  0000                     _TMR1L	set	4046
   237  0000                     _LATE	set	3981
   238  0000                     _LATA	set	3977
   239  0000                     _LATB	set	3978
   240  0000                     _LATD	set	3980
   241  0000                     _TRISD	set	3989
   242  0000                     _TRISE	set	3990
   243  0000                     _TRISB	set	3987
   244  0000                     _TRISA	set	3986
   245  0000                     _RXB0DLCbits	set	3941
   246  0000                     _RXB0DLC	set	3941
   247  0000                     _RXB0SIDH	set	3937
   248  0000                     _RXB0SIDLbits	set	3938
   249  0000                     _RXB0SIDL	set	3938
   250  0000                     _RXB0EIDH	set	3939
   251  0000                     _RXB0EIDL	set	3940
   252  0000                     _COMSTATbits	set	3956
   253  0000                     _RXB0CONbits	set	3936
   254  0000                     _BRGCON3bits	set	3954
   255  0000                     _BRGCON2bits	set	3953
   256  0000                     _BRGCON1bits	set	3952
   257  0000                     _CIOCON	set	3955
   258  0000                     _ECANCON	set	3959
   259  0000                     _PIR3	set	4004
   260  0000                     _IPR3	set	4005
   261  0000                     _PIE3	set	4003
   262  0000                     _RXB0CON	set	3936
   263  0000                     _CANSTAT	set	3950
   264  0000                     _CANCON	set	3951
   265  0000                     _RCON	set	4048
   266  0000                     _RXB0D0	set	3942
   267  0000                     _TMR1IF	set	31984
   268  0000                     _TMR1IP	set	31992
   269  0000                     _PEIE	set	32662
   270  0000                     _IPEN	set	32391
   271  0000                     _TMR1ON	set	32360
   272  0000                     _TMR1IE	set	31976
   273  0000                     _IRCF0	set	32412
   274  0000                     _IRCF1	set	32413
   275  0000                     _IRCF2	set	32414
   276                           
   277                           ; #config settings
   278  0000                     
   279                           	psect	cinit
   280  001580                     __pcinit:
   281                           	opt callstack 0
   282  001580                     start_initialization:
   283                           	opt callstack 0
   284  001580                     __initialization:
   285                           	opt callstack 0
   286                           
   287                           ; Initialize objects allocated to COMRAM (13 bytes)
   288                           ; load TBLPTR registers with __pidataCOMRAM
   289  001580  0E1A               	movlw	low __pidataCOMRAM
   290  001582  6EF6               	movwf	tblptrl,c
   291  001584  0E1B               	movlw	high __pidataCOMRAM
   292  001586  6EF7               	movwf	tblptrh,c
   293  001588  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   294  00158A  6EF8               	movwf	tblptru,c
   295  00158C  EE00  F04D         	lfsr	0,__pdataCOMRAM
   296  001590  EE10 F00D          	lfsr	1,13
   297  001594                     copy_data0:
   298  001594  0009               	tblrd		*+
   299  001596  CFF5 FFEE          	movff	tablat,postinc0
   300  00159A  50E5               	movf	postdec1,w,c
   301  00159C  50E1               	movf	fsr1l,w,c
   302  00159E  E1FA               	bnz	copy_data0
   303                           
   304                           ; Clear objects allocated to BIGRAM (544 bytes)
   305  0015A0  EE00  F0D4         	lfsr	0,__pbssBIGRAM
   306  0015A4  EE12 F020          	lfsr	1,544
   307  0015A8                     clear_0:
   308  0015A8  6AEE               	clrf	postinc0,c
   309  0015AA  50E5               	movf	postdec1,w,c
   310  0015AC  50E1               	movf	fsr1l,w,c
   311  0015AE  E1FC               	bnz	clear_0
   312  0015B0  50E2               	movf	fsr1h,w,c
   313  0015B2  E1FA               	bnz	clear_0
   314                           
   315                           ; Clear objects allocated to BANK0 (114 bytes)
   316  0015B4  EE00  F060         	lfsr	0,__pbssBANK0
   317  0015B8  0E72               	movlw	114
   318  0015BA                     clear_1:
   319  0015BA  6AEE               	clrf	postinc0,c
   320  0015BC  06E8               	decf	wreg,f,c
   321  0015BE  E1FD               	bnz	clear_1
   322                           
   323                           ; Clear objects allocated to COMRAM (34 bytes)
   324  0015C0  EE00  F02B         	lfsr	0,__pbssCOMRAM
   325  0015C4  0E22               	movlw	34
   326  0015C6                     clear_2:
   327  0015C6  6AEE               	clrf	postinc0,c
   328  0015C8  06E8               	decf	wreg,f,c
   329  0015CA  E1FD               	bnz	clear_2
   330  0015CC                     end_of_initialization:
   331                           	opt callstack 0
   332  0015CC                     __end_of__initialization:
   333                           	opt callstack 0
   334  0015CC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   335  0015CE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   336  0015D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337  0015D2  6EF8               	movwf	tblptru,c
   338  0015D4  0100               	movlb	0
   339  0015D6  EF33  F009         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342  00002B                     __pbssCOMRAM:
   343                           	opt callstack 0
   344  00002B                     _DaneCan:
   345                           	opt callstack 0
   346  00002B                     	ds	4
   347  00002F                     _nextEEPosition:
   348                           	opt callstack 0
   349  00002F                     	ds	2
   350  000031                     FRAME_SensorExcitationStatus@statwect:
   351                           	opt callstack 0
   352  000031                     	ds	2
   353  000033                     _TMR1_Update_flag:
   354                           	opt callstack 0
   355  000033                     	ds	2
   356  000035                     WritetoEEPROM@GIE_Status:
   357                           	opt callstack 0
   358  000035                     	ds	1
   359  000036                     	ds	1
   360  000037                     	ds	1
   361  000038                     ISR_low@ramkaStanuU8:
   362                           	opt callstack 0
   363  000038                     	ds	1
   364  000039                     	ds	1
   365  00003A                     _LOCK:
   366                           	opt callstack 0
   367  00003A                     	ds	1
   368  00003B                     _neighborsAdress:
   369                           	opt callstack 0
   370  00003B                     	ds	2
   371  00003D                     _ustawieniaKarty:
   372                           	opt callstack 0
   373  00003D                     	ds	2
   374  00003F                     _NeightAdress8:
   375                           	opt callstack 0
   376  00003F                     	ds	2
   377  000041                     _NeightAdress7:
   378                           	opt callstack 0
   379  000041                     	ds	2
   380  000043                     _NeightAdress6:
   381                           	opt callstack 0
   382  000043                     	ds	2
   383  000045                     _NeightAdress5:
   384                           	opt callstack 0
   385  000045                     	ds	2
   386  000047                     _NeightAdress4:
   387                           	opt callstack 0
   388  000047                     	ds	2
   389  000049                     _NeightAdress3:
   390                           	opt callstack 0
   391  000049                     	ds	2
   392  00004B                     _NeightAdress1:
   393                           	opt callstack 0
   394  00004B                     	ds	2
   395                           
   396                           	psect	dataCOMRAM
   397  00004D                     __pdataCOMRAM:
   398                           	opt callstack 0
   399  00004D                     MOC_Frame_Counter@zeta:
   400                           	opt callstack 0
   401  00004D                     	ds	2
   402  00004F                     LED_Update@pos2:
   403                           	opt callstack 0
   404  00004F                     	ds	2
   405  000051                     LED_Update@pos1:
   406                           	opt callstack 0
   407  000051                     	ds	2
   408  000053                     _Fulfillment_Lvl:
   409                           	opt callstack 0
   410  000053                     	ds	2
   411  000055                     LED_Update@Green:
   412                           	opt callstack 0
   413  000055                     	ds	1
   414  000056                     _Init_Data:
   415                           	opt callstack 0
   416  000056                     	ds	2
   417  000058                     _NeightAdress2:
   418                           	opt callstack 0
   419  000058                     	ds	2
   420                           
   421                           	psect	bssBANK0
   422  000060                     __pbssBANK0:
   423                           	opt callstack 0
   424  000060                     _ramkaCanRxKarty:
   425                           	opt callstack 0
   426  000060                     	ds	85
   427  0000B5                     _ramkaCanTxKarty:
   428                           	opt callstack 0
   429  0000B5                     	ds	17
   430  0000C6                     _Flagi:
   431                           	opt callstack 0
   432  0000C6                     	ds	5
   433  0000CB                     _DetectorLedRadar:
   434                           	opt callstack 0
   435  0000CB                     	ds	3
   436  0000CE                     _czujnikiNaMapie:
   437                           	opt callstack 0
   438  0000CE                     	ds	2
   439  0000D0                     _Dane:
   440                           	opt callstack 0
   441  0000D0                     	ds	2
   442                           
   443                           	psect	bssBIGRAM
   444  0000D4                     __pbssBIGRAM:
   445                           	opt callstack 0
   446  0000D4                     _wartosciSasiada:
   447                           	opt callstack 0
   448  0000D4                     	ds	544
   449                           
   450                           	psect	cstackBANK0
   451  0000D2                     __pcstackBANK0:
   452                           	opt callstack 0
   453  0000D2                     main@adr:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x0
   457  0000D2                     	ds	2
   458                           
   459                           	psect	cstackCOMRAM
   460  000001                     __pcstackCOMRAM:
   461                           	opt callstack 0
   462  000001                     TMR1_Timer_reset@t1L:
   463                           	opt callstack 0
   464  000001                     i1TMR1_Update_flag_Set@a:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x0
   468  000001                     	ds	1
   469  000002                     TMR1_Timer_reset@t1H:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x1
   473  000002                     	ds	1
   474  000003                     ??_ISR_low:
   475  000003                     
   476                           ; 1 bytes @ 0x2
   477  000003                     	ds	3
   478  000006                     ??_CAN_Setup:
   479  000006                     ?_FLASH_Read:
   480                           	opt callstack 0
   481  000006                     ?_TMR1_Update_flag_Get:
   482                           	opt callstack 0
   483  000006                     ?_LED_Right:
   484                           	opt callstack 0
   485  000006                     ?_LED_Left:
   486                           	opt callstack 0
   487  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   488                           	opt callstack 0
   489  000006                     ?_MOC_Frame_Counter:
   490                           	opt callstack 0
   491  000006                     ?_MOC_Aktualna_Temperatura:
   492                           	opt callstack 0
   493  000006                     ?_MOC_NOTWORK:
   494                           	opt callstack 0
   495  000006                     ?_IsInNeighbors:
   496                           	opt callstack 0
   497  000006                     ?_MOCK_PrzyspieszenieX:
   498                           	opt callstack 0
   499  000006                     ?_MOCK_PrzyspieszenieY:
   500                           	opt callstack 0
   501  000006                     ?_MOCK_PrzyspieszenieZ:
   502                           	opt callstack 0
   503  000006                     ?_MOCK_Klikniecie_Spadek:
   504                           	opt callstack 0
   505  000006                     ?___awdiv:
   506                           	opt callstack 0
   507  000006                     ?___lwdiv:
   508                           	opt callstack 0
   509  000006                     LOCK_Set@k:
   510                           	opt callstack 0
   511  000006                     CAN_MoveBuffIntoFrame@Ram:
   512                           	opt callstack 0
   513  000006                     CAN_GenID@message:
   514                           	opt callstack 0
   515  000006                     LED_Right@a:
   516                           	opt callstack 0
   517  000006                     LED_Left@a:
   518                           	opt callstack 0
   519  000006                     LED_Control@diode:
   520                           	opt callstack 0
   521  000006                     TMR1_Update_flag_Set@a:
   522                           	opt callstack 0
   523  000006                     IsInNeighbors@message_adress:
   524                           	opt callstack 0
   525  000006                     FRAME_ExcitationValue@message:
   526                           	opt callstack 0
   527  000006                     FRAME_ExcitationMultiplier@message:
   528                           	opt callstack 0
   529  000006                     FRAME_AveragingTimes@message:
   530                           	opt callstack 0
   531  000006                     FRAME_AxisStatus@message:
   532                           	opt callstack 0
   533  000006                     FRAME_DataUpdateAndChangeOption@message:
   534                           	opt callstack 0
   535  000006                     FRAME_MapPosition@message:
   536                           	opt callstack 0
   537  000006                     FRAME_SoftwareVersion@message:
   538                           	opt callstack 0
   539  000006                     FRAME_AnalogValue@message:
   540                           	opt callstack 0
   541  000006                     FRAME_PrzypisanieDokarty@message:
   542                           	opt callstack 0
   543  000006                     FRAME_AdressOfNeighbors@message:
   544                           	opt callstack 0
   545  000006                     NVMalloc@size:
   546                           	opt callstack 0
   547  000006                     ReadfromEEPROM@Address:
   548                           	opt callstack 0
   549  000006                     WritetoEEPROM@Address:
   550                           	opt callstack 0
   551  000006                     ___awdiv@dividend:
   552                           	opt callstack 0
   553  000006                     ___lwdiv@dividend:
   554                           	opt callstack 0
   555  000006                     FLASH_Read@addr:
   556                           	opt callstack 0
   557                           
   558                           ; 4 bytes @ 0x5
   559  000006                     	ds	2
   560  000008                     ??_LED_Right:
   561  000008                     ??_FRAME_DataUpdateAndChangeOption:
   562  000008                     ??_FRAME_PrzypisanieDokarty:
   563  000008                     CAN_GenID@frameID:
   564                           	opt callstack 0
   565  000008                     WritetoEEPROM@Data:
   566                           	opt callstack 0
   567  000008                     CAN_MoveBuffIntoFrame@Buf:
   568                           	opt callstack 0
   569  000008                     LED_Left@b:
   570                           	opt callstack 0
   571  000008                     FRAME_SensorExcitationStatus@message:
   572                           	opt callstack 0
   573  000008                     FRAME_AccelerometerStatus@message:
   574                           	opt callstack 0
   575  000008                     FRAME_AnalogValue@set:
   576                           	opt callstack 0
   577  000008                     FRAME_AdressOfNeighbors@nrRamki:
   578                           	opt callstack 0
   579  000008                     NVMalloc@location:
   580                           	opt callstack 0
   581  000008                     NVMRead@dest:
   582                           	opt callstack 0
   583  000008                     ___awdiv@divisor:
   584                           	opt callstack 0
   585  000008                     ___lwdiv@divisor:
   586                           	opt callstack 0
   587                           
   588                           ; 2 bytes @ 0x7
   589  000008                     	ds	1
   590  000009                     ??_CAN_GenID:
   591  000009                     FRAME_ExcitationMultiplier@i:
   592                           	opt callstack 0
   593  000009                     NVMWrite@source:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x8
   597  000009                     	ds	1
   598  00000A                     ??_FRAME_SensorExcitationStatus:
   599  00000A                     ??_FRAME_AdressOfNeighbors:
   600  00000A                     ??_NVMalloc:
   601  00000A                     CAN_MoveBuffIntoFrame@i:
   602                           	opt callstack 0
   603  00000A                     LED_Control@color:
   604                           	opt callstack 0
   605  00000A                     ___awdiv@counter:
   606                           	opt callstack 0
   607  00000A                     ___lwdiv@counter:
   608                           	opt callstack 0
   609  00000A                     LED_Right@b:
   610                           	opt callstack 0
   611  00000A                     NVMRead@addr:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x9
   615  00000A                     	ds	1
   616  00000B                     ___awdiv@sign:
   617                           	opt callstack 0
   618  00000B                     CAN_SendFrame@message:
   619                           	opt callstack 0
   620  00000B                     NVMWrite@addr:
   621                           	opt callstack 0
   622  00000B                     ___lwdiv@quotient:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0xA
   626  00000B                     	ds	1
   627  00000C                     FRAME_SensorExcitationStatus@tru:
   628                           	opt callstack 0
   629  00000C                     NVMRead@count:
   630                           	opt callstack 0
   631  00000C                     ___awdiv@quotient:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0xB
   635  00000C                     	ds	1
   636  00000D                     ??_CAN_SendFrame:
   637  00000D                     LED_Light_Pos@pos:
   638                           	opt callstack 0
   639  00000D                     FRAME_Plot@message:
   640                           	opt callstack 0
   641  00000D                     NVMWrite@count:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0xC
   645  00000D                     	ds	1
   646  00000E                     NVMInit@result:
   647                           	opt callstack 0
   648  00000E                     CAN_TakeFrame@message:
   649                           	opt callstack 0
   650  00000E                     FRAME_AdressOfNeighbors@kier:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0xD
   654  00000E                     	ds	1
   655  00000F                     ??_FRAME_Plot:
   656  00000F                     LED_Light_Pos@fulfillment:
   657                           	opt callstack 0
   658  00000F                     FRAME_DeviceReset@message:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0xE
   662  00000F                     	ds	1
   663  000010                     ??_CAN_TakeFrame:
   664                           
   665                           ; 1 bytes @ 0xF
   666  000010                     	ds	1
   667  000011                     LED_Light_Pos@color:
   668                           	opt callstack 0
   669                           
   670                           ; 1 bytes @ 0x10
   671  000011                     	ds	1
   672  000012                     CAN_TakeFrame@tempCON:
   673                           	opt callstack 0
   674  000012                     LED_Light_Pos@LED_array:
   675                           	opt callstack 0
   676  000012                     FRAME_HandleCanFrame@message:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x11
   680  000012                     	ds	1
   681  000013                     CAN_TakeFrame@k:
   682                           	opt callstack 0
   683                           
   684                           ; 1 bytes @ 0x12
   685  000013                     	ds	1
   686  000014                     ??_FRAME_HandleCanFrame:
   687  000014                     LED_Light_Pos@pos2:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x13
   691  000014                     	ds	2
   692  000016                     LED_Light_Pos@flage:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x15
   696  000016                     	ds	1
   697  000017                     FRAME_HandleCanFrame@ident:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x16
   701  000017                     	ds	1
   702  000018                     
   703                           ; 1 bytes @ 0x17
   704  000018                     	ds	1
   705  000019                     FRAME_HandleCanFrame@identyfikator:
   706                           	opt callstack 0
   707                           
   708                           ; 1 bytes @ 0x18
   709  000019                     	ds	1
   710  00001A                     TRM_DataTransmition@canMessage:
   711                           	opt callstack 0
   712                           
   713                           ; 17 bytes @ 0x19
   714  00001A                     	ds	17
   715  00002B                     
   716                           ; 1 bytes @ 0x2A
   717 ;;
   718 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   719 ;;
   720 ;; *************** function _main *****************
   721 ;; Defined at:
   722 ;;		line 103 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  adr             2    0[BANK0 ] int 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   740 ;;Total ram usage:        2 bytes
   741 ;; Hardware stack levels required when called:    9
   742 ;; This function calls:
   743 ;;		_FLASH_Read
   744 ;;		_INI_All
   745 ;;		_LED_Update
   746 ;;		_RADAR_Use
   747 ;;		_TMR1_Update_flag_Get
   748 ;;		_TMR1_Update_flag_Set
   749 ;;		_TRM_DataTransmition
   750 ;; This function is called by:
   751 ;;		Startup code after reset
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text0
   756  001266                     __ptext0:
   757                           	opt callstack 0
   758  001266                     _main:
   759                           	opt callstack 22
   760                           
   761                           ;main.c: 106: int adr = FLASH_Read(0x200000);
   762                           
   763                           ;incstack = 0
   764  001266  0E00               	movlw	0
   765  001268  6E06               	movwf	FLASH_Read@addr,c
   766  00126A  0E00               	movlw	0
   767  00126C  6E07               	movwf	FLASH_Read@addr+1,c
   768  00126E  0E20               	movlw	32
   769  001270  6E08               	movwf	FLASH_Read@addr+2,c
   770  001272  0E00               	movlw	0
   771  001274  6E09               	movwf	FLASH_Read@addr+3,c
   772  001276  EC6B  F00D         	call	_FLASH_Read	;wreg free
   773  00127A  C006  F0D2         	movff	?_FLASH_Read,main@adr
   774  00127E  C007  F0D3         	movff	?_FLASH_Read+1,main@adr+1
   775                           
   776                           ;main.c: 107: adr |= FLASH_Read(0x200001)<<8;
   777  001282  0E01               	movlw	1
   778  001284  6E06               	movwf	FLASH_Read@addr,c
   779  001286  0E00               	movlw	0
   780  001288  6E07               	movwf	FLASH_Read@addr+1,c
   781  00128A  0E20               	movlw	32
   782  00128C  6E08               	movwf	FLASH_Read@addr+2,c
   783  00128E  0E00               	movlw	0
   784  001290  6E09               	movwf	FLASH_Read@addr+3,c
   785  001292  EC6B  F00D         	call	_FLASH_Read	;wreg free
   786  001296  C006  F007         	movff	?_FLASH_Read,?_FLASH_Read+1
   787  00129A  6A06               	clrf	?_FLASH_Read,c
   788  00129C  5006               	movf	?_FLASH_Read,w,c
   789  00129E  0100               	movlb	0	; () banked
   790  0012A0  13D2               	iorwf	main@adr& (0+255),f,b
   791  0012A2  5007               	movf	?_FLASH_Read+1,w,c
   792  0012A4  13D3               	iorwf	(main@adr+1)& (0+255),f,b
   793                           
   794                           ; BSR set to: 0
   795                           ;main.c: 117: DaneCan.adresCAN = adr;
   796  0012A6  C0D2  F02D         	movff	main@adr,_DaneCan+2
   797  0012AA  C0D3  F02E         	movff	main@adr+1,_DaneCan+3
   798                           
   799                           ; BSR set to: 0
   800                           ;main.c: 118: INI_All();
   801  0012AE  EC2F  F00D         	call	_INI_All	;wreg free
   802                           
   803                           ;main.c: 120: RCON = 0xFF;
   804  0012B2  68D0               	setf	4048,c	;volatile
   805  0012B4                     l4863:
   806                           
   807                           ;main.c: 123: {;main.c: 124: if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   808  0012B4  0100               	movlb	0	; () banked
   809  0012B6  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   810                           
   811                           ; BSR set to: 0
   812                           ;main.c: 125: {;main.c: 126: DetectorLedRadar.Flags.obsluzWeWy = 0;
   813  0012B8  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   814                           
   815                           ; BSR set to: 0
   816                           ;main.c: 128: };main.c: 130: if(TMR1_Update_flag_Get()==1)
   817  0012BA  ECBD  F00D         	call	_TMR1_Update_flag_Get	;wreg free
   818  0012BE  0406               	decf	?_TMR1_Update_flag_Get,w,c
   819  0012C0  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   820  0012C2  A4D8               	btfss	status,2,c
   821  0012C4  D008               	goto	l4873
   822                           
   823                           ;main.c: 131: {;main.c: 132: LED_Update();
   824  0012C6  EC71  F009         	call	_LED_Update	;wreg free
   825                           
   826                           ;main.c: 133: TMR1_Update_flag_Set(0);
   827  0012CA  0E00               	movlw	0
   828  0012CC  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   829  0012CE  0E00               	movlw	0
   830  0012D0  6E06               	movwf	TMR1_Update_flag_Set@a,c
   831  0012D2  ECB8  F00D         	call	_TMR1_Update_flag_Set	;wreg free
   832  0012D6                     l4873:
   833                           
   834                           ;main.c: 135: };main.c: 138: TRM_DataTransmition();
   835  0012D6  ECBC  F00B         	call	_TRM_DataTransmition	;wreg free
   836                           
   837                           ;main.c: 139: RADAR_Use();
   838  0012DA  EC94  F00D         	call	_RADAR_Use	;wreg free
   839  0012DE  0004               	clrwdt		;# 
   840                           
   841                           ;main.c: 141: }
   842  0012E0  D7E9               	goto	l4863
   843  0012E2                     __end_of_main:
   844                           	opt callstack 0
   845                           
   846 ;; *************** function _TRM_DataTransmition *****************
   847 ;; Defined at:
   848 ;;		line 19 in file "TRM.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  canMessage     17   25[COMRAM] struct .
   853 ;;  i               1    0        unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   864 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   866 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   867 ;;Total ram usage:       17 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    8
   870 ;; This function calls:
   871 ;;		_CAN_TakeFrame
   872 ;;		_FRAME_HandleCanFrame
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text1
   879  001778                     __ptext1:
   880                           	opt callstack 0
   881  001778                     _TRM_DataTransmition:
   882                           	opt callstack 22
   883                           
   884                           ;TRM.c: 21: static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22: BYTE i;;TRM.c: 23: mID
      +                           canMessage;;TRM.c: 26: if(DaneCan.Flags.wyslijRamkeStanu)
   885                           
   886                           ;incstack = 0
   887  001778  A02B               	btfss	_DaneCan,0,c
   888  00177A  D013               	goto	l4839
   889                           
   890                           ;TRM.c: 27: {;TRM.c: 29: canMessage.message_type = 0x02;
   891  00177C  0E02               	movlw	2
   892  00177E  6E1B               	movwf	TRM_DataTransmition@canMessage+1,c
   893                           
   894                           ;TRM.c: 30: canMessage.id.Val = 0;
   895  001780  0E00               	movlw	0
   896  001782  6E1E               	movwf	TRM_DataTransmition@canMessage+4,c
   897  001784  0E00               	movlw	0
   898  001786  6E1F               	movwf	TRM_DataTransmition@canMessage+5,c
   899  001788  0E00               	movlw	0
   900  00178A  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   901  00178C  0E00               	movlw	0
   902  00178E  6E21               	movwf	TRM_DataTransmition@canMessage+7,c
   903                           
   904                           ;TRM.c: 31: canMessage.id.v[2] = 0x01 *4;
   905  001790  0E04               	movlw	4
   906  001792  6E20               	movwf	TRM_DataTransmition@canMessage+6,c
   907                           
   908                           ;TRM.c: 32: FRAME_HandleCanFrame(&canMessage);
   909  001794  0E1A               	movlw	low TRM_DataTransmition@canMessage
   910  001796  6E12               	movwf	FRAME_HandleCanFrame@message,c
   911  001798  0E00               	movlw	high TRM_DataTransmition@canMessage
   912  00179A  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   913  00179C  ECC0  F002         	call	_FRAME_HandleCanFrame	;wreg free
   914                           
   915                           ;TRM.c: 49: DaneCan.Flags.wyslijRamkeStanu = 0;
   916  0017A0  902B               	bcf	_DaneCan,0,c
   917  0017A2                     l4839:
   918                           
   919                           ;TRM.c: 56: };TRM.c: 59: if(CAN_TakeFrame(&canMessage))
   920  0017A2  0E1A               	movlw	low TRM_DataTransmition@canMessage
   921  0017A4  6E0E               	movwf	CAN_TakeFrame@message,c
   922  0017A6  0E00               	movlw	high TRM_DataTransmition@canMessage
   923  0017A8  6E0F               	movwf	CAN_TakeFrame@message+1,c
   924  0017AA  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   925  0017AE  0900               	iorlw	0
   926  0017B0  B4D8               	btfsc	status,2,c
   927  0017B2  0012               	return	
   928                           
   929                           ;TRM.c: 64: {;TRM.c: 66: FRAME_HandleCanFrame(&canMessage);
   930  0017B4  0E1A               	movlw	low TRM_DataTransmition@canMessage
   931  0017B6  6E12               	movwf	FRAME_HandleCanFrame@message,c
   932  0017B8  0E00               	movlw	high TRM_DataTransmition@canMessage
   933  0017BA  6E13               	movwf	FRAME_HandleCanFrame@message+1,c
   934  0017BC  ECC0  F002         	call	_FRAME_HandleCanFrame	;wreg free
   935                           
   936                           ;TRM.c: 67: }
   937  0017C0  0012               	return		;funcret
   938  0017C2                     __end_of_TRM_DataTransmition:
   939                           	opt callstack 0
   940                           
   941 ;; *************** function _FRAME_HandleCanFrame *****************
   942 ;; Defined at:
   943 ;;		line 807 in file "FRAME.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  message         2   17[COMRAM] PTR struct .
   946 ;;		 -> TRM_DataTransmition@canMessage(17), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  ident           2   22[COMRAM] unsigned short 
   949 ;;  alfa            2    0        int 
   950 ;;  identyfikato    1   24[COMRAM] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   961 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   963 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   964 ;;Total ram usage:        8 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    7
   967 ;; This function calls:
   968 ;;		_CAN_GenID
   969 ;;		_CAN_SendFrame
   970 ;;		_FRAME_AccelerometerStatus
   971 ;;		_FRAME_AdressOfNeighbors
   972 ;;		_FRAME_AnalogValue
   973 ;;		_FRAME_AveragingTimes
   974 ;;		_FRAME_AxisStatus
   975 ;;		_FRAME_DeviceReset
   976 ;;		_FRAME_ExcitationMultiplier
   977 ;;		_FRAME_ExcitationValue
   978 ;;		_FRAME_MapPosition
   979 ;;		_FRAME_Plot
   980 ;;		_FRAME_PrzypisanieDokarty
   981 ;;		_FRAME_SensorExcitationStatus
   982 ;;		_FRAME_SoftwareVersion
   983 ;;		_LED_Error
   984 ;;		___awdiv
   985 ;; This function is called by:
   986 ;;		_TRM_DataTransmition
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text2
   991  000580                     __ptext2:
   992                           	opt callstack 0
   993  000580                     _FRAME_HandleCanFrame:
   994                           	opt callstack 22
   995                           
   996                           ;FRAME.c: 809: BYTE identyfikator = (BYTE) message->id.v[2]/4;
   997                           
   998                           ;incstack = 0
   999  000580  EE20 F006          	lfsr	2,6
  1000  000584  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1001  000586  26D9               	addwf	fsr2l,f,c
  1002  000588  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1003  00058A  22DA               	addwfc	fsr2h,f,c
  1004  00058C  50DF               	movf	indf2,w,c
  1005  00058E  6E14               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1006  000590  5014               	movf	??_FRAME_HandleCanFrame,w,c
  1007  000592  6E06               	movwf	___awdiv@dividend,c
  1008  000594  6A07               	clrf	___awdiv@dividend+1,c
  1009  000596  0E00               	movlw	0
  1010  000598  6E09               	movwf	___awdiv@divisor+1,c
  1011  00059A  0E04               	movlw	4
  1012  00059C  6E08               	movwf	___awdiv@divisor,c
  1013  00059E  ECF1  F008         	call	___awdiv	;wreg free
  1014  0005A2  5006               	movf	?___awdiv,w,c
  1015  0005A4  6E19               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1016                           
  1017                           ;FRAME.c: 812: if(identyfikator != 0x01)
  1018  0005A6  0419               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1019  0005A8  B4D8               	btfsc	status,2,c
  1020  0005AA  D074               	goto	l4769
  1021                           
  1022                           ;FRAME.c: 813: {;FRAME.c: 814: WORD ident = identyfikator;
  1023  0005AC  C019  F017         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1024  0005B0  6A18               	clrf	FRAME_HandleCanFrame@ident+1,c
  1025  0005B2  D070               	goto	l4769
  1026  0005B4                     l4739:
  1027                           
  1028                           ;FRAME.c: 821: FRAME_SensorExcitationStatus(message);
  1029  0005B4  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1030  0005B8  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1031  0005BC  EC89  F006         	call	_FRAME_SensorExcitationStatus	;wreg free
  1032                           
  1033                           ;FRAME.c: 822: break;
  1034  0005C0  D097               	goto	l4771
  1035  0005C2                     l4741:
  1036                           
  1037                           ;FRAME.c: 824: FRAME_AccelerometerStatus(message);
  1038  0005C2  C012  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1039  0005C6  C013  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1040  0005CA  ECEA  F009         	call	_FRAME_AccelerometerStatus	;wreg free
  1041                           
  1042                           ;FRAME.c: 825: break;
  1043  0005CE  D090               	goto	l4771
  1044  0005D0                     l4743:
  1045                           
  1046                           ;FRAME.c: 827: FRAME_ExcitationValue(message);
  1047  0005D0  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1048  0005D4  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1049  0005D8  EC1F  F00C         	call	_FRAME_ExcitationValue	;wreg free
  1050                           
  1051                           ;FRAME.c: 828: break;
  1052  0005DC  D089               	goto	l4771
  1053  0005DE                     l4745:
  1054                           
  1055                           ;FRAME.c: 830: FRAME_ExcitationMultiplier(message);
  1056  0005DE  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1057  0005E2  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1058  0005E6  EC6F  F00B         	call	_FRAME_ExcitationMultiplier	;wreg free
  1059                           
  1060                           ;FRAME.c: 831: break;
  1061  0005EA  D082               	goto	l4771
  1062  0005EC                     l4747:
  1063                           
  1064                           ;FRAME.c: 833: FRAME_AveragingTimes(message);
  1065  0005EC  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1066  0005F0  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1067  0005F4  EC70  F00C         	call	_FRAME_AveragingTimes	;wreg free
  1068                           
  1069                           ;FRAME.c: 834: break;
  1070  0005F8  D07B               	goto	l4771
  1071  0005FA                     l4749:
  1072                           
  1073                           ;FRAME.c: 836: FRAME_AxisStatus(message);
  1074  0005FA  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1075  0005FE  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1076  000602  EC55  F00C         	call	_FRAME_AxisStatus	;wreg free
  1077                           
  1078                           ;FRAME.c: 837: break;
  1079  000606  D074               	goto	l4771
  1080  000608                     l4751:
  1081                           
  1082                           ;FRAME.c: 839: FRAME_DeviceReset(message);
  1083  000608  C012  F00F         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1084  00060C  C013  F010         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1085  000610  ECE5  F005         	call	_FRAME_DeviceReset	;wreg free
  1086                           
  1087                           ;FRAME.c: 840: break;
  1088  000614  D06D               	goto	l4771
  1089  000616                     l4753:
  1090                           
  1091                           ;FRAME.c: 842: FRAME_Plot(message);
  1092  000616  C012  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1093  00061A  C013  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1094  00061E  EC1A  F00B         	call	_FRAME_Plot	;wreg free
  1095                           
  1096                           ;FRAME.c: 843: break;
  1097  000622  D066               	goto	l4771
  1098  000624                     l4755:
  1099                           
  1100                           ;FRAME.c: 845: FRAME_MapPosition(message);
  1101  000624  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1102  000628  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1103  00062C  ECD4  F00D         	call	_FRAME_MapPosition	;wreg free
  1104                           
  1105                           ;FRAME.c: 846: break;
  1106  000630  D05F               	goto	l4771
  1107  000632                     l4757:
  1108                           
  1109                           ;FRAME.c: 848: FRAME_SoftwareVersion(message);
  1110  000632  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1111  000636  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1112  00063A  EC5F  F00A         	call	_FRAME_SoftwareVersion	;wreg free
  1113                           
  1114                           ;FRAME.c: 849: break;
  1115  00063E  D058               	goto	l4771
  1116  000640                     l4759:
  1117                           
  1118                           ;FRAME.c: 851: case 0x0D:;FRAME.c: 852: FRAME_AnalogValue(message, identyfikator - 0x0C)
      +                          ;
  1119  000640  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1120  000644  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1121  000648  0EF4               	movlw	244
  1122  00064A  2419               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1123  00064C  6E08               	movwf	FRAME_AnalogValue@set,c
  1124  00064E  6A09               	clrf	FRAME_AnalogValue@set+1,c
  1125  000650  0EFF               	movlw	255
  1126  000652  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
  1127  000654  ECD5  F00D         	call	_FRAME_AnalogValue	;wreg free
  1128                           
  1129                           ;FRAME.c: 853: break;
  1130  000658  D04B               	goto	l4771
  1131  00065A                     l4761:
  1132                           
  1133                           ;FRAME.c: 855: FRAME_PrzypisanieDokarty(message);
  1134  00065A  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1135  00065E  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1136  000662  EC57  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1137                           
  1138                           ;FRAME.c: 856: break;
  1139  000666  D044               	goto	l4771
  1140  000668                     l4763:
  1141                           
  1142                           ;FRAME.c: 858: FRAME_AdressOfNeighbors(message,0x10);
  1143  000668  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1144  00066C  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1145  000670  0E00               	movlw	0
  1146  000672  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1147  000674  0E10               	movlw	16
  1148  000676  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1149  000678  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1150                           
  1151                           ;FRAME.c: 859: break;
  1152  00067C  D039               	goto	l4771
  1153  00067E                     l4765:
  1154                           
  1155                           ;FRAME.c: 861: FRAME_AdressOfNeighbors(message,0x11);
  1156  00067E  C012  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1157  000682  C013  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1158  000686  0E00               	movlw	0
  1159  000688  6E09               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1160  00068A  0E11               	movlw	17
  1161  00068C  6E08               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1162  00068E  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1163                           
  1164                           ;FRAME.c: 862: break;
  1165  000692  D02E               	goto	l4771
  1166  000694                     l4769:
  1167  000694  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1168                           
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 15, Range of values is 1 to 17
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte           46    24 (average)
  1174                           ;	Chosen strategy is simple_byte
  1175  000696  0A01               	xorlw	1	; case 1
  1176  000698  B4D8               	btfsc	status,2,c
  1177  00069A  D78C               	goto	l4739
  1178  00069C  0A03               	xorlw	3	; case 2
  1179  00069E  B4D8               	btfsc	status,2,c
  1180  0006A0  D790               	goto	l4741
  1181  0006A2  0A01               	xorlw	1	; case 3
  1182  0006A4  B4D8               	btfsc	status,2,c
  1183  0006A6  D794               	goto	l4743
  1184  0006A8  0A07               	xorlw	7	; case 4
  1185  0006AA  B4D8               	btfsc	status,2,c
  1186  0006AC  D798               	goto	l4745
  1187  0006AE  0A01               	xorlw	1	; case 5
  1188  0006B0  B4D8               	btfsc	status,2,c
  1189  0006B2  D79C               	goto	l4747
  1190  0006B4  0A03               	xorlw	3	; case 6
  1191  0006B6  B4D8               	btfsc	status,2,c
  1192  0006B8  D7A0               	goto	l4749
  1193  0006BA  0A01               	xorlw	1	; case 7
  1194  0006BC  B4D8               	btfsc	status,2,c
  1195  0006BE  D7A4               	goto	l4751
  1196  0006C0  0A0E               	xorlw	14	; case 9
  1197  0006C2  B4D8               	btfsc	status,2,c
  1198  0006C4  D7A8               	goto	l4753
  1199  0006C6  0A03               	xorlw	3	; case 10
  1200  0006C8  B4D8               	btfsc	status,2,c
  1201  0006CA  D7AC               	goto	l4755
  1202  0006CC  0A01               	xorlw	1	; case 11
  1203  0006CE  B4D8               	btfsc	status,2,c
  1204  0006D0  D7B0               	goto	l4757
  1205  0006D2  0A07               	xorlw	7	; case 12
  1206  0006D4  B4D8               	btfsc	status,2,c
  1207  0006D6  D7B4               	goto	l4759
  1208  0006D8  0A01               	xorlw	1	; case 13
  1209  0006DA  B4D8               	btfsc	status,2,c
  1210  0006DC  D7B1               	goto	l4759
  1211  0006DE  0A02               	xorlw	2	; case 15
  1212  0006E0  B4D8               	btfsc	status,2,c
  1213  0006E2  D7BB               	goto	l4761
  1214  0006E4  0A1F               	xorlw	31	; case 16
  1215  0006E6  B4D8               	btfsc	status,2,c
  1216  0006E8  D7BF               	goto	l4763
  1217  0006EA  0A01               	xorlw	1	; case 17
  1218  0006EC  B4D8               	btfsc	status,2,c
  1219  0006EE  D7C7               	goto	l4765
  1220  0006F0                     l4771:
  1221                           
  1222                           ;FRAME.c: 871: if(message->message_type == 0x02)
  1223  0006F0  EE20 F001          	lfsr	2,1
  1224  0006F4  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1225  0006F6  26D9               	addwf	fsr2l,f,c
  1226  0006F8  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1227  0006FA  22DA               	addwfc	fsr2h,f,c
  1228  0006FC  0E02               	movlw	2
  1229  0006FE  18DE               	xorwf	postinc2,w,c
  1230  000700  A4D8               	btfss	status,2,c
  1231  000702  0012               	return	
  1232                           
  1233                           ;FRAME.c: 872: {;FRAME.c: 874: message->frame_type = 0x03;
  1234  000704  EE20 F002          	lfsr	2,2
  1235  000708  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1236  00070A  26D9               	addwf	fsr2l,f,c
  1237  00070C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1238  00070E  22DA               	addwfc	fsr2h,f,c
  1239  000710  0E03               	movlw	3
  1240  000712  6EDF               	movwf	indf2,c
  1241                           
  1242                           ;FRAME.c: 875: message->message_type = 0x01;
  1243  000714  EE20 F001          	lfsr	2,1
  1244  000718  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1245  00071A  26D9               	addwf	fsr2l,f,c
  1246  00071C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1247  00071E  22DA               	addwfc	fsr2h,f,c
  1248  000720  0E01               	movlw	1
  1249  000722  6EDF               	movwf	indf2,c
  1250                           
  1251                           ;FRAME.c: 876: message->id.Val = 0;
  1252  000724  EE20 F004          	lfsr	2,4
  1253  000728  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1254  00072A  26D9               	addwf	fsr2l,f,c
  1255  00072C  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1256  00072E  22DA               	addwfc	fsr2h,f,c
  1257  000730  6ADE               	clrf	postinc2,c
  1258  000732  6ADE               	clrf	postinc2,c
  1259  000734  6ADE               	clrf	postinc2,c
  1260  000736  6ADD               	clrf	postdec2,c
  1261                           
  1262                           ;FRAME.c: 878: message->id.v[2] = identyfikator*4;
  1263  000738  5019               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1264  00073A  0D04               	mullw	4
  1265  00073C  EE20 F006          	lfsr	2,6
  1266  000740  5012               	movf	FRAME_HandleCanFrame@message,w,c
  1267  000742  26D9               	addwf	fsr2l,f,c
  1268  000744  5013               	movf	FRAME_HandleCanFrame@message+1,w,c
  1269  000746  22DA               	addwfc	fsr2h,f,c
  1270  000748  CFF3 FFDF          	movff	prodl,indf2
  1271                           
  1272                           ;FRAME.c: 879: CAN_GenID(message,identyfikator);
  1273  00074C  C012  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1274  000750  C013  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1275  000754  C019  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1276  000758  ECAE  F009         	call	_CAN_GenID	;wreg free
  1277                           
  1278                           ;FRAME.c: 880: CAN_SendFrame(message);
  1279  00075C  C012  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1280  000760  C013  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1281  000764  EC83  F004         	call	_CAN_SendFrame	;wreg free
  1282                           
  1283                           ;FRAME.c: 891: while(RXB0CONbits.FILHIT3)
  1284  000768  D004               	goto	l696
  1285  00076A                     l697:
  1286                           
  1287                           ;FRAME.c: 892: {;FRAME.c: 893: if(TXB0CONbits.TXERR == 1){
  1288  00076A  010F               	movlb	15	; () banked
  1289  00076C  B940               	btfsc	64,4,b	;volatile
  1290                           
  1291                           ; BSR set to: 15
  1292                           ;FRAME.c: 894: LED_Error();
  1293  00076E  EC50  F00D         	call	_LED_Error	;wreg free
  1294  000772                     l696:
  1295  000772  A660               	btfss	3936,3,c	;volatile
  1296  000774  0012               	return	
  1297  000776  D7F9               	goto	l697
  1298  000778                     __end_of_FRAME_HandleCanFrame:
  1299                           	opt callstack 0
  1300                           
  1301 ;; *************** function _LED_Error *****************
  1302 ;; Defined at:
  1303 ;;		line 49 in file "LED.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2  366[None  ] unsigned int 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    4
  1324 ;; This function calls:
  1325 ;;		_LED_Control
  1326 ;; This function is called by:
  1327 ;;		_FRAME_HandleCanFrame
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text3
  1332  001AA0                     __ptext3:
  1333                           	opt callstack 0
  1334  001AA0                     _LED_Error:
  1335                           	opt callstack 24
  1336                           
  1337                           ;LED.c: 51: LED_Control(RED,0b1010101010);
  1338                           
  1339                           ;incstack = 0
  1340  001AA0  0E02               	movlw	2
  1341  001AA2  6E07               	movwf	LED_Control@diode+1,c
  1342  001AA4  0EAA               	movlw	170
  1343  001AA6  6E06               	movwf	LED_Control@diode,c
  1344  001AA8  0E00               	movlw	0
  1345  001AAA  EC3C  F005         	call	_LED_Control
  1346                           
  1347                           ;LED.c: 52: LED_Control(GREEN,0b0000000000);
  1348  001AAE  0E00               	movlw	0
  1349  001AB0  6E07               	movwf	LED_Control@diode+1,c
  1350  001AB2  0E00               	movlw	0
  1351  001AB4  6E06               	movwf	LED_Control@diode,c
  1352  001AB6  0E01               	movlw	1
  1353  001AB8  EC3C  F005         	call	_LED_Control
  1354  001ABC  0012               	return		;funcret
  1355  001ABE                     __end_of_LED_Error:
  1356                           	opt callstack 0
  1357                           
  1358 ;; *************** function _FRAME_SoftwareVersion *****************
  1359 ;; Defined at:
  1360 ;;		line 620 in file "FRAME.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  message         2    5[COMRAM] PTR struct .
  1363 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1379 ;;Total ram usage:        3 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    3
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_FRAME_HandleCanFrame
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text4
  1390  0014BE                     __ptext4:
  1391                           	opt callstack 0
  1392  0014BE                     _FRAME_SoftwareVersion:
  1393                           	opt callstack 25
  1394                           
  1395                           ;FRAME.c: 623: if(message->message_type == 0x02)
  1396                           
  1397                           ;incstack = 0
  1398  0014BE  EE20 F001          	lfsr	2,1
  1399  0014C2  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1400  0014C4  26D9               	addwf	fsr2l,f,c
  1401  0014C6  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1402  0014C8  22DA               	addwfc	fsr2h,f,c
  1403  0014CA  0E02               	movlw	2
  1404  0014CC  18DE               	xorwf	postinc2,w,c
  1405  0014CE  A4D8               	btfss	status,2,c
  1406  0014D0  0012               	return	
  1407                           
  1408                           ;FRAME.c: 624: {;FRAME.c: 625: message->data_length = 4;
  1409  0014D2  EE20 F010          	lfsr	2,16
  1410  0014D6  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1411  0014D8  26D9               	addwf	fsr2l,f,c
  1412  0014DA  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1413  0014DC  22DA               	addwfc	fsr2h,f,c
  1414  0014DE  0E04               	movlw	4
  1415  0014E0  6EDF               	movwf	indf2,c
  1416                           
  1417                           ;FRAME.c: 626: message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 >> 8);
  1418  0014E2  EE20 F008          	lfsr	2,8
  1419  0014E6  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1420  0014E8  26D9               	addwf	fsr2l,f,c
  1421  0014EA  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1422  0014EC  22DA               	addwfc	fsr2h,f,c
  1423  0014EE  5005               	movf	5,w,c
  1424  0014F0  6EDF               	movwf	indf2,c
  1425                           
  1426                           ;FRAME.c: 627: message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1427  0014F2  EE20 F009          	lfsr	2,9
  1428  0014F6  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1429  0014F8  26D9               	addwf	fsr2l,f,c
  1430  0014FA  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1431  0014FC  22DA               	addwfc	fsr2h,f,c
  1432  0014FE  C004 FFDF          	movff	4,indf2
  1433                           
  1434                           ;FRAME.c: 628: message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1435  001502  EE20 F00A          	lfsr	2,10
  1436  001506  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1437  001508  26D9               	addwf	fsr2l,f,c
  1438  00150A  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1439  00150C  22DA               	addwfc	fsr2h,f,c
  1440  00150E  500B               	movf	11,w,c
  1441  001510  6EDF               	movwf	indf2,c
  1442                           
  1443                           ;FRAME.c: 629: message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1444  001512  EE20 F00B          	lfsr	2,11
  1445  001516  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1446  001518  26D9               	addwf	fsr2l,f,c
  1447  00151A  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1448  00151C  22DA               	addwfc	fsr2h,f,c
  1449  00151E  C00A FFDF          	movff	10,indf2
  1450                           
  1451                           ;FRAME.c: 630: }
  1452  001522  0012               	return		;funcret
  1453  001524                     __end_of_FRAME_SoftwareVersion:
  1454                           	opt callstack 0
  1455                           
  1456 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1457 ;; Defined at:
  1458 ;;		line 55 in file "FRAME.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  message         2    7[COMRAM] PTR struct .
  1461 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  tru             2   11[COMRAM] unsigned int 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1477 ;;Total ram usage:        6 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    4
  1480 ;; This function calls:
  1481 ;;		_IsInNeighbors
  1482 ;;		_LOCK_Get
  1483 ;;		_LOCK_Set
  1484 ;;		_MOC_Aktualna_Temperatura
  1485 ;;		_MOC_Frame_Counter
  1486 ;;		_MOC_NOTWORK
  1487 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1488 ;; This function is called by:
  1489 ;;		_FRAME_HandleCanFrame
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text5
  1494  000D12                     __ptext5:
  1495                           	opt callstack 0
  1496  000D12                     _FRAME_SensorExcitationStatus:
  1497                           	opt callstack 24
  1498                           
  1499                           ;FRAME.c: 58: static UINT statwect = 0b00000000;;FRAME.c: 59: if(message->message_type =
      +                          = 0x02)
  1500                           
  1501                           ;incstack = 0
  1502  000D12  EE20 F001          	lfsr	2,1
  1503  000D16  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1504  000D18  26D9               	addwf	fsr2l,f,c
  1505  000D1A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1506  000D1C  22DA               	addwfc	fsr2h,f,c
  1507  000D1E  0E02               	movlw	2
  1508  000D20  18DE               	xorwf	postinc2,w,c
  1509  000D22  A4D8               	btfss	status,2,c
  1510  000D24  D047               	goto	l4347
  1511                           
  1512                           ;FRAME.c: 60: {;FRAME.c: 61: message->data_length = 6;
  1513  000D26  EE20 F010          	lfsr	2,16
  1514  000D2A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1515  000D2C  26D9               	addwf	fsr2l,f,c
  1516  000D2E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1517  000D30  22DA               	addwfc	fsr2h,f,c
  1518  000D32  0E06               	movlw	6
  1519  000D34  6EDF               	movwf	indf2,c
  1520                           
  1521                           ;FRAME.c: 67: message->data[0] = LOCK_Get();
  1522  000D36  EE20 F008          	lfsr	2,8
  1523  000D3A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1524  000D3C  26D9               	addwf	fsr2l,f,c
  1525  000D3E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1526  000D40  22DA               	addwfc	fsr2h,f,c
  1527  000D42  ECD2  F00D         	call	_LOCK_Get	;wreg free
  1528  000D46  6EDF               	movwf	indf2,c
  1529                           
  1530                           ;FRAME.c: 68: message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1531  000D48  EE20 F009          	lfsr	2,9
  1532  000D4C  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1533  000D4E  26D9               	addwf	fsr2l,f,c
  1534  000D50  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1535  000D52  22DA               	addwfc	fsr2h,f,c
  1536  000D54  EC9A  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1537  000D58  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1538  000D5C  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1539  000D5E  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1540  000D60  6EDF               	movwf	indf2,c
  1541                           
  1542                           ;FRAME.c: 69: message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1543  000D62  EE20 F00A          	lfsr	2,10
  1544  000D66  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1545  000D68  26D9               	addwf	fsr2l,f,c
  1546  000D6A  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1547  000D6C  22DA               	addwfc	fsr2h,f,c
  1548  000D6E  EC9A  F00D         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1549  000D72  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1550  000D74  6EDF               	movwf	indf2,c
  1551                           
  1552                           ;FRAME.c: 70: message->data[3] = MOC_Frame_Counter();
  1553  000D76  EE20 F00B          	lfsr	2,11
  1554  000D7A  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1555  000D7C  26D9               	addwf	fsr2l,f,c
  1556  000D7E  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1557  000D80  22DA               	addwfc	fsr2h,f,c
  1558  000D82  EC7F  F00D         	call	_MOC_Frame_Counter	;wreg free
  1559  000D86  5006               	movf	?_MOC_Frame_Counter,w,c
  1560  000D88  6EDF               	movwf	indf2,c
  1561                           
  1562                           ;FRAME.c: 71: message->data[4] = MOC_Aktualna_Temperatura();
  1563  000D8A  EE20 F00C          	lfsr	2,12
  1564  000D8E  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1565  000D90  26D9               	addwf	fsr2l,f,c
  1566  000D92  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1567  000D94  22DA               	addwfc	fsr2h,f,c
  1568  000D96  EC9F  F00D         	call	_MOC_Aktualna_Temperatura	;wreg free
  1569  000D9A  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1570  000D9C  6EDF               	movwf	indf2,c
  1571                           
  1572                           ;FRAME.c: 72: message->data[5] = MOC_NOTWORK();
  1573  000D9E  EE20 F00D          	lfsr	2,13
  1574  000DA2  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1575  000DA4  26D9               	addwf	fsr2l,f,c
  1576  000DA6  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1577  000DA8  22DA               	addwfc	fsr2h,f,c
  1578  000DAA  ECC7  F00D         	call	_MOC_NOTWORK	;wreg free
  1579  000DAE  5006               	movf	?_MOC_NOTWORK,w,c
  1580  000DB0  6EDF               	movwf	indf2,c
  1581                           
  1582                           ;FRAME.c: 82: }
  1583  000DB2  0012               	return	
  1584  000DB4                     l4347:
  1585                           
  1586                           ;FRAME.c: 83: else;FRAME.c: 84: {;FRAME.c: 86: UINT tru = IsInNeighbors(message->id.w[0]
      +                          );
  1587  000DB4  EE20 F004          	lfsr	2,4
  1588  000DB8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1589  000DBA  26D9               	addwf	fsr2l,f,c
  1590  000DBC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1591  000DBE  22DA               	addwfc	fsr2h,f,c
  1592  000DC0  CFDE F006          	movff	postinc2,IsInNeighbors@message_adress
  1593  000DC4  CFDD F007          	movff	postdec2,IsInNeighbors@message_adress+1
  1594  000DC8  EC9A  F007         	call	_IsInNeighbors	;wreg free
  1595  000DCC  C006  F00C         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1596  000DD0  C007  F00D         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1597                           
  1598                           ;FRAME.c: 89: if(message->data[0]==0)
  1599  000DD4  EE20 F008          	lfsr	2,8
  1600  000DD8  5008               	movf	FRAME_SensorExcitationStatus@message,w,c
  1601  000DDA  26D9               	addwf	fsr2l,f,c
  1602  000DDC  5009               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1603  000DDE  22DA               	addwfc	fsr2h,f,c
  1604  000DE0  50DF               	movf	indf2,w,c
  1605  000DE2  A4D8               	btfss	status,2,c
  1606  000DE4  D00A               	goto	l4353
  1607                           
  1608                           ;FRAME.c: 90: {;FRAME.c: 92: statwect = statwect &( ~tru );
  1609  000DE6  1C0C               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1610  000DE8  6E0A               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1611  000DEA  1C0D               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1612  000DEC  6E0B               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1613  000DEE  5031               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1614  000DF0  140A               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1615  000DF2  6E31               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1616  000DF4  5032               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1617  000DF6  140B               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1618  000DF8  D005               	goto	L1
  1619  000DFA                     l4353:
  1620                           
  1621                           ;FRAME.c: 94: else;FRAME.c: 95: {;FRAME.c: 96: statwect = statwect| tru;
  1622  000DFA  500C               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1623  000DFC  1031               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1624  000DFE  6E31               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1625  000E00  500D               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1626  000E02  1032               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1627  000E04                     L1:
  1628  000E04  6E32               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1629                           
  1630                           ;FRAME.c: 97: };FRAME.c: 99: if(statwect>0)
  1631  000E06  5031               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1632  000E08  1032               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1633  000E0A  B4D8               	btfsc	status,2,c
  1634  000E0C  D00A               	goto	l4361
  1635                           
  1636                           ;FRAME.c: 100: {;FRAME.c: 101: if(1 != LOCK_Get())
  1637  000E0E  ECD2  F00D         	call	_LOCK_Get	;wreg free
  1638  000E12  06E8               	decf	wreg,f,c
  1639  000E14  B4D8               	btfsc	status,2,c
  1640  000E16  0012               	return	
  1641                           
  1642                           ;FRAME.c: 102: {;FRAME.c: 103: DaneCan.Flags.wyslijRamkeStanu = 1;
  1643  000E18  802B               	bsf	_DaneCan,0,c
  1644                           
  1645                           ;FRAME.c: 104: LOCK_Set(1);
  1646  000E1A  0E01               	movlw	1
  1647  000E1C  ECCB  F00D         	call	_LOCK_Set
  1648  000E20  0012               	return	
  1649  000E22                     l4361:
  1650                           
  1651                           ;FRAME.c: 108: else;FRAME.c: 109: {;FRAME.c: 111: if(1 == LOCK_Get())
  1652  000E22  ECD2  F00D         	call	_LOCK_Get	;wreg free
  1653  000E26  06E8               	decf	wreg,f,c
  1654  000E28  A4D8               	btfss	status,2,c
  1655  000E2A  0012               	return	
  1656                           
  1657                           ;FRAME.c: 112: {;FRAME.c: 113: DaneCan.Flags.wyslijRamkeStanu = 1;
  1658  000E2C  802B               	bsf	_DaneCan,0,c
  1659                           
  1660                           ;FRAME.c: 114: LOCK_Set(0);
  1661  000E2E  0E00               	movlw	0
  1662  000E30  ECCB  F00D         	call	_LOCK_Set
  1663  000E34  0012               	return		;funcret
  1664  000E36                     __end_of_FRAME_SensorExcitationStatus:
  1665                           	opt callstack 0
  1666                           
  1667 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1668 ;; Defined at:
  1669 ;;		line 34 in file "MOC_Funct.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  2    5[COMRAM] unsigned int 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1687 ;;Total ram usage:        2 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_FRAME_SensorExcitationStatus
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text6
  1698  001B34                     __ptext6:
  1699                           	opt callstack 0
  1700  001B34                     _MOC_Wynikowa_wartosc_roznicowa:
  1701                           	opt callstack 24
  1702                           
  1703                           ;MOC_Funct.c: 36: return 0x0220;
  1704                           
  1705                           ;incstack = 0
  1706  001B34  0E02               	movlw	2
  1707  001B36  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1708  001B38  0E20               	movlw	32
  1709  001B3A  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1710  001B3C  0012               	return		;funcret
  1711  001B3E                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1712                           	opt callstack 0
  1713                           
  1714 ;; *************** function _MOC_NOTWORK *****************
  1715 ;; Defined at:
  1716 ;;		line 48 in file "MOC_Funct.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2    5[COMRAM] unsigned int 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1734 ;;Total ram usage:        2 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    3
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_FRAME_SensorExcitationStatus
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text7
  1745  001B8E                     __ptext7:
  1746                           	opt callstack 0
  1747  001B8E                     _MOC_NOTWORK:
  1748                           	opt callstack 24
  1749                           
  1750                           ;MOC_Funct.c: 50: return 0xFF;
  1751                           
  1752                           ;incstack = 0
  1753  001B8E  0E00               	movlw	0
  1754  001B90  6E07               	movwf	?_MOC_NOTWORK+1,c
  1755  001B92  6806               	setf	?_MOC_NOTWORK,c
  1756  001B94  0012               	return		;funcret
  1757  001B96                     __end_of_MOC_NOTWORK:
  1758                           	opt callstack 0
  1759                           
  1760 ;; *************** function _MOC_Frame_Counter *****************
  1761 ;; Defined at:
  1762 ;;		line 39 in file "MOC_Funct.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2    5[COMRAM] unsigned int 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;Total ram usage:        2 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    3
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_FRAME_SensorExcitationStatus
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text8
  1791  001AFE                     __ptext8:
  1792                           	opt callstack 0
  1793  001AFE                     _MOC_Frame_Counter:
  1794                           	opt callstack 24
  1795                           
  1796                           ;MOC_Funct.c: 41: static UINT zeta = 0x11;;MOC_Funct.c: 42: return zeta++;
  1797                           
  1798                           ;incstack = 0
  1799  001AFE  504D               	movf	MOC_Frame_Counter@zeta,w,c
  1800  001B00  6E06               	movwf	?_MOC_Frame_Counter,c
  1801  001B02  504E               	movf	MOC_Frame_Counter@zeta+1,w,c
  1802  001B04  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1803  001B06  4A4D               	infsnz	MOC_Frame_Counter@zeta,f,c
  1804  001B08  2A4E               	incf	MOC_Frame_Counter@zeta+1,f,c
  1805  001B0A  0012               	return		;funcret
  1806  001B0C                     __end_of_MOC_Frame_Counter:
  1807                           	opt callstack 0
  1808                           
  1809 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1810 ;; Defined at:
  1811 ;;		line 44 in file "MOC_Funct.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    5[COMRAM] unsigned int 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1829 ;;Total ram usage:        2 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    3
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_FRAME_SensorExcitationStatus
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text9
  1840  001B3E                     __ptext9:
  1841                           	opt callstack 0
  1842  001B3E                     _MOC_Aktualna_Temperatura:
  1843                           	opt callstack 24
  1844                           
  1845                           ;MOC_Funct.c: 46: return 0x1B;
  1846                           
  1847                           ;incstack = 0
  1848  001B3E  0E00               	movlw	0
  1849  001B40  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1850  001B42  0E1B               	movlw	27
  1851  001B44  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1852  001B46  0012               	return		;funcret
  1853  001B48                     __end_of_MOC_Aktualna_Temperatura:
  1854                           	opt callstack 0
  1855                           
  1856 ;; *************** function _LOCK_Set *****************
  1857 ;; Defined at:
  1858 ;;		line 84 in file "LED.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  k               1    wreg     unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  k               1    5[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    3
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_FRAME_SensorExcitationStatus
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text10
  1887  001B96                     __ptext10:
  1888                           	opt callstack 0
  1889  001B96                     _LOCK_Set:
  1890                           	opt callstack 24
  1891                           
  1892                           ;incstack = 0
  1893                           ;LOCK_Set@k stored from wreg
  1894  001B96  6E06               	movwf	LOCK_Set@k,c
  1895                           
  1896                           ;LED.c: 86: LOCK = k;
  1897  001B98  C006  F03A         	movff	LOCK_Set@k,_LOCK
  1898  001B9C  0012               	return		;funcret
  1899  001B9E                     __end_of_LOCK_Set:
  1900                           	opt callstack 0
  1901                           
  1902 ;; *************** function _LOCK_Get *****************
  1903 ;; Defined at:
  1904 ;;		line 100 in file "LED.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      unsigned char 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;Total ram usage:        0 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    3
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_FRAME_SensorExcitationStatus
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text11
  1933  001BA4                     __ptext11:
  1934                           	opt callstack 0
  1935  001BA4                     _LOCK_Get:
  1936                           	opt callstack 24
  1937                           
  1938                           ;LED.c: 102: return LOCK;
  1939                           
  1940                           ;incstack = 0
  1941  001BA4  503A               	movf	_LOCK,w,c
  1942  001BA6  0012               	return		;funcret
  1943  001BA8                     __end_of_LOCK_Get:
  1944                           	opt callstack 0
  1945                           
  1946 ;; *************** function _IsInNeighbors *****************
  1947 ;; Defined at:
  1948 ;;		line 133 in file "FRAME.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  message_adre    2    5[COMRAM] unsigned int 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  i               2    0        unsigned short 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  2    5[COMRAM] unsigned int 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;Total ram usage:        2 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    3
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_FRAME_SensorExcitationStatus
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text12
  1977  000F34                     __ptext12:
  1978                           	opt callstack 0
  1979  000F34                     _IsInNeighbors:
  1980                           	opt callstack 24
  1981                           
  1982                           ;FRAME.c: 135: WORD i;;FRAME.c: 137: if(NeightAdress1==message_adress)
  1983                           
  1984                           ;incstack = 0
  1985  000F34  5006               	movf	IsInNeighbors@message_adress,w,c
  1986  000F36  184B               	xorwf	_NeightAdress1,w,c	;volatile
  1987  000F38  E109               	bnz	l4109
  1988  000F3A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1989  000F3C  184C               	xorwf	_NeightAdress1+1,w,c	;volatile
  1990  000F3E  A4D8               	btfss	status,2,c
  1991  000F40  D005               	goto	l4109
  1992                           
  1993                           ;FRAME.c: 138: {;FRAME.c: 139: return 0b1;
  1994  000F42  0E00               	movlw	0
  1995  000F44  6E07               	movwf	?_IsInNeighbors+1,c
  1996  000F46  0E01               	movlw	1
  1997  000F48  6E06               	movwf	?_IsInNeighbors,c
  1998  000F4A  0012               	return	
  1999  000F4C                     l4109:
  2000                           
  2001                           ;FRAME.c: 140: };FRAME.c: 141: if(NeightAdress2==message_adress)
  2002  000F4C  5006               	movf	IsInNeighbors@message_adress,w,c
  2003  000F4E  1858               	xorwf	_NeightAdress2,w,c	;volatile
  2004  000F50  E109               	bnz	l4115
  2005  000F52  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2006  000F54  1859               	xorwf	_NeightAdress2+1,w,c	;volatile
  2007  000F56  A4D8               	btfss	status,2,c
  2008  000F58  D005               	goto	l4115
  2009                           
  2010                           ;FRAME.c: 142: {;FRAME.c: 143: return 0b10;
  2011  000F5A  0E00               	movlw	0
  2012  000F5C  6E07               	movwf	?_IsInNeighbors+1,c
  2013  000F5E  0E02               	movlw	2
  2014  000F60  6E06               	movwf	?_IsInNeighbors,c
  2015  000F62  0012               	return	
  2016  000F64                     l4115:
  2017                           
  2018                           ;FRAME.c: 144: };FRAME.c: 145: if(NeightAdress3==message_adress)
  2019  000F64  5006               	movf	IsInNeighbors@message_adress,w,c
  2020  000F66  1849               	xorwf	_NeightAdress3,w,c	;volatile
  2021  000F68  E109               	bnz	l4121
  2022  000F6A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2023  000F6C  184A               	xorwf	_NeightAdress3+1,w,c	;volatile
  2024  000F6E  A4D8               	btfss	status,2,c
  2025  000F70  D005               	goto	l4121
  2026                           
  2027                           ;FRAME.c: 146: {;FRAME.c: 147: return 0b100;
  2028  000F72  0E00               	movlw	0
  2029  000F74  6E07               	movwf	?_IsInNeighbors+1,c
  2030  000F76  0E04               	movlw	4
  2031  000F78  6E06               	movwf	?_IsInNeighbors,c
  2032  000F7A  0012               	return	
  2033  000F7C                     l4121:
  2034                           
  2035                           ;FRAME.c: 148: };FRAME.c: 149: if(NeightAdress4==message_adress)
  2036  000F7C  5006               	movf	IsInNeighbors@message_adress,w,c
  2037  000F7E  1847               	xorwf	_NeightAdress4,w,c	;volatile
  2038  000F80  E109               	bnz	l4127
  2039  000F82  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2040  000F84  1848               	xorwf	_NeightAdress4+1,w,c	;volatile
  2041  000F86  A4D8               	btfss	status,2,c
  2042  000F88  D005               	goto	l4127
  2043                           
  2044                           ;FRAME.c: 150: {;FRAME.c: 151: return 0b1000;
  2045  000F8A  0E00               	movlw	0
  2046  000F8C  6E07               	movwf	?_IsInNeighbors+1,c
  2047  000F8E  0E08               	movlw	8
  2048  000F90  6E06               	movwf	?_IsInNeighbors,c
  2049  000F92  0012               	return	
  2050  000F94                     l4127:
  2051                           
  2052                           ;FRAME.c: 152: };FRAME.c: 153: if(NeightAdress5==message_adress)
  2053  000F94  5006               	movf	IsInNeighbors@message_adress,w,c
  2054  000F96  1845               	xorwf	_NeightAdress5,w,c	;volatile
  2055  000F98  E109               	bnz	l4133
  2056  000F9A  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2057  000F9C  1846               	xorwf	_NeightAdress5+1,w,c	;volatile
  2058  000F9E  A4D8               	btfss	status,2,c
  2059  000FA0  D005               	goto	l4133
  2060                           
  2061                           ;FRAME.c: 154: {;FRAME.c: 155: return 0b10000;
  2062  000FA2  0E00               	movlw	0
  2063  000FA4  6E07               	movwf	?_IsInNeighbors+1,c
  2064  000FA6  0E10               	movlw	16
  2065  000FA8  6E06               	movwf	?_IsInNeighbors,c
  2066  000FAA  0012               	return	
  2067  000FAC                     l4133:
  2068                           
  2069                           ;FRAME.c: 156: };FRAME.c: 157: if(NeightAdress6==message_adress)
  2070  000FAC  5006               	movf	IsInNeighbors@message_adress,w,c
  2071  000FAE  1843               	xorwf	_NeightAdress6,w,c	;volatile
  2072  000FB0  E109               	bnz	l4139
  2073  000FB2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2074  000FB4  1844               	xorwf	_NeightAdress6+1,w,c	;volatile
  2075  000FB6  A4D8               	btfss	status,2,c
  2076  000FB8  D005               	goto	l4139
  2077                           
  2078                           ;FRAME.c: 158: {;FRAME.c: 159: return 0b100000;
  2079  000FBA  0E00               	movlw	0
  2080  000FBC  6E07               	movwf	?_IsInNeighbors+1,c
  2081  000FBE  0E20               	movlw	32
  2082  000FC0  6E06               	movwf	?_IsInNeighbors,c
  2083  000FC2  0012               	return	
  2084  000FC4                     l4139:
  2085                           
  2086                           ;FRAME.c: 160: };FRAME.c: 161: if(NeightAdress7==message_adress)
  2087  000FC4  5006               	movf	IsInNeighbors@message_adress,w,c
  2088  000FC6  1841               	xorwf	_NeightAdress7,w,c	;volatile
  2089  000FC8  E109               	bnz	l4145
  2090  000FCA  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2091  000FCC  1842               	xorwf	_NeightAdress7+1,w,c	;volatile
  2092  000FCE  A4D8               	btfss	status,2,c
  2093  000FD0  D005               	goto	l4145
  2094                           
  2095                           ;FRAME.c: 162: {;FRAME.c: 163: return 0b1000000;
  2096  000FD2  0E00               	movlw	0
  2097  000FD4  6E07               	movwf	?_IsInNeighbors+1,c
  2098  000FD6  0E40               	movlw	64
  2099  000FD8  6E06               	movwf	?_IsInNeighbors,c
  2100  000FDA  0012               	return	
  2101  000FDC                     l4145:
  2102                           
  2103                           ;FRAME.c: 164: };FRAME.c: 165: if(NeightAdress8==message_adress)
  2104  000FDC  5006               	movf	IsInNeighbors@message_adress,w,c
  2105  000FDE  183F               	xorwf	_NeightAdress8,w,c	;volatile
  2106  000FE0  E109               	bnz	l4151
  2107  000FE2  5007               	movf	IsInNeighbors@message_adress+1,w,c
  2108  000FE4  1840               	xorwf	_NeightAdress8+1,w,c	;volatile
  2109  000FE6  A4D8               	btfss	status,2,c
  2110  000FE8  D005               	goto	l4151
  2111                           
  2112                           ;FRAME.c: 166: {;FRAME.c: 167: return 0b10000000;
  2113  000FEA  0E00               	movlw	0
  2114  000FEC  6E07               	movwf	?_IsInNeighbors+1,c
  2115  000FEE  0E80               	movlw	128
  2116  000FF0  6E06               	movwf	?_IsInNeighbors,c
  2117  000FF2  0012               	return	
  2118  000FF4                     l4151:
  2119                           
  2120                           ;FRAME.c: 168: };FRAME.c: 183: return 0;
  2121  000FF4  0E00               	movlw	0
  2122  000FF6  6E07               	movwf	?_IsInNeighbors+1,c
  2123  000FF8  0E00               	movlw	0
  2124  000FFA  6E06               	movwf	?_IsInNeighbors,c
  2125  000FFC  0012               	return		;funcret
  2126  000FFE                     __end_of_IsInNeighbors:
  2127                           	opt callstack 0
  2128                           
  2129 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2130 ;; Defined at:
  2131 ;;		line 679 in file "FRAME.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  message         2    5[COMRAM] PTR struct .
  2134 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;Total ram usage:        6 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    3
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_FRAME_HandleCanFrame
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text13
  2161  0010AE                     __ptext13:
  2162                           	opt callstack 0
  2163  0010AE                     _FRAME_PrzypisanieDokarty:
  2164                           	opt callstack 25
  2165                           
  2166                           ;FRAME.c: 681: if(message->message_type == 0x02)
  2167                           
  2168                           ;incstack = 0
  2169  0010AE  EE20 F001          	lfsr	2,1
  2170  0010B2  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2171  0010B4  26D9               	addwf	fsr2l,f,c
  2172  0010B6  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2173  0010B8  22DA               	addwfc	fsr2h,f,c
  2174  0010BA  0E02               	movlw	2
  2175  0010BC  18DE               	xorwf	postinc2,w,c
  2176  0010BE  A4D8               	btfss	status,2,c
  2177  0010C0  D021               	goto	l4461
  2178                           
  2179                           ;FRAME.c: 682: {;FRAME.c: 683: message->data_length = 3;
  2180  0010C2  EE20 F010          	lfsr	2,16
  2181  0010C6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2182  0010C8  26D9               	addwf	fsr2l,f,c
  2183  0010CA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2184  0010CC  22DA               	addwfc	fsr2h,f,c
  2185  0010CE  0E03               	movlw	3
  2186  0010D0  6EDF               	movwf	indf2,c
  2187                           
  2188                           ;FRAME.c: 684: message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2189  0010D2  EE20 F008          	lfsr	2,8
  2190  0010D6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2191  0010D8  26D9               	addwf	fsr2l,f,c
  2192  0010DA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2193  0010DC  22DA               	addwfc	fsr2h,f,c
  2194  0010DE  0E00               	movlw	0
  2195  0010E0  6EDF               	movwf	indf2,c
  2196                           
  2197                           ;FRAME.c: 685: message->data[1] = (unsigned char)Dane->NrKarty ;
  2198  0010E2  EE20 F009          	lfsr	2,9
  2199  0010E6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2200  0010E8  26D9               	addwf	fsr2l,f,c
  2201  0010EA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2202  0010EC  22DA               	addwfc	fsr2h,f,c
  2203  0010EE  C040 FFDF          	movff	64,indf2
  2204                           
  2205                           ;FRAME.c: 686: message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2206  0010F2  EE20 F00A          	lfsr	2,10
  2207  0010F6  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2208  0010F8  26D9               	addwf	fsr2l,f,c
  2209  0010FA  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2210  0010FC  22DA               	addwfc	fsr2h,f,c
  2211  0010FE  C042 FFDF          	movff	66,indf2
  2212                           
  2213                           ;FRAME.c: 688: }
  2214  001102  0012               	return	
  2215  001104                     l4461:
  2216                           
  2217                           ;FRAME.c: 689: else;FRAME.c: 690: {;FRAME.c: 691: Dane->NrKarty = (message->data[0] << 8
      +                          ) | (message->data[1]);
  2218  001104  EE20 F008          	lfsr	2,8
  2219  001108  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2220  00110A  26D9               	addwf	fsr2l,f,c
  2221  00110C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2222  00110E  22DA               	addwfc	fsr2h,f,c
  2223  001110  50DF               	movf	indf2,w,c
  2224  001112  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2225  001114  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2226  001116  6E0A               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2227  001118  6A09               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2228  00111A  EE20 F009          	lfsr	2,9
  2229  00111E  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2230  001120  26D9               	addwf	fsr2l,f,c
  2231  001122  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2232  001124  22DA               	addwfc	fsr2h,f,c
  2233  001126  50DF               	movf	indf2,w,c
  2234  001128  6E0B               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2235  00112A  500B               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2236  00112C  1009               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2237  00112E  6E40               	movwf	64,c
  2238  001130  500A               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2239  001132  6E41               	movwf	65,c
  2240                           
  2241                           ;FRAME.c: 692: Dane->Nr_WeWy = (message->data[2]);
  2242  001134  EE20 F00A          	lfsr	2,10
  2243  001138  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2244  00113A  26D9               	addwf	fsr2l,f,c
  2245  00113C  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2246  00113E  22DA               	addwfc	fsr2h,f,c
  2247  001140  50DF               	movf	indf2,w,c
  2248  001142  6E08               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2249  001144  5008               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2250  001146  6E42               	movwf	66,c
  2251  001148  6A43               	clrf	67,c
  2252  00114A  0012               	return		;funcret
  2253  00114C                     __end_of_FRAME_PrzypisanieDokarty:
  2254                           	opt callstack 0
  2255                           
  2256 ;; *************** function _FRAME_Plot *****************
  2257 ;; Defined at:
  2258 ;;		line 564 in file "FRAME.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  message         2   12[COMRAM] PTR struct .
  2261 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;Total ram usage:        3 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		___lwdiv
  2282 ;; This function is called by:
  2283 ;;		_FRAME_HandleCanFrame
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text14
  2288  001634                     __ptext14:
  2289                           	opt callstack 0
  2290  001634                     _FRAME_Plot:
  2291                           	opt callstack 24
  2292                           
  2293                           ;FRAME.c: 567: if(message->message_type == 0x02)
  2294                           
  2295                           ;incstack = 0
  2296  001634  EE20 F001          	lfsr	2,1
  2297  001638  500D               	movf	FRAME_Plot@message,w,c
  2298  00163A  26D9               	addwf	fsr2l,f,c
  2299  00163C  500E               	movf	FRAME_Plot@message+1,w,c
  2300  00163E  22DA               	addwfc	fsr2h,f,c
  2301  001640  0E02               	movlw	2
  2302  001642  18DE               	xorwf	postinc2,w,c
  2303  001644  A4D8               	btfss	status,2,c
  2304  001646  D013               	goto	l4451
  2305                           
  2306                           ;FRAME.c: 568: {;FRAME.c: 569: message->data[0] = (BYTE)(Dane->timerRysowaniaWykresuU16/
      +                          10);
  2307  001648  EE20 F008          	lfsr	2,8
  2308  00164C  500D               	movf	FRAME_Plot@message,w,c
  2309  00164E  26D9               	addwf	fsr2l,f,c
  2310  001650  500E               	movf	FRAME_Plot@message+1,w,c
  2311  001652  22DA               	addwfc	fsr2h,f,c
  2312  001654  C00C F006          	movff	12,___lwdiv@dividend
  2313  001658  C00D F007          	movff	13,___lwdiv@dividend+1
  2314  00165C  0E00               	movlw	0
  2315  00165E  6E09               	movwf	___lwdiv@divisor+1,c
  2316  001660  0E0A               	movlw	10
  2317  001662  6E08               	movwf	___lwdiv@divisor,c
  2318  001664  EC46  F00B         	call	___lwdiv	;wreg free
  2319  001668  5006               	movf	?___lwdiv,w,c
  2320  00166A  6EDF               	movwf	indf2,c
  2321                           
  2322                           ;FRAME.c: 570: }
  2323  00166C  0012               	return	
  2324  00166E                     l4451:
  2325                           
  2326                           ;FRAME.c: 571: else;FRAME.c: 572: {;FRAME.c: 573: Dane->timerRysowaniaWykresuU16 = (WORD
      +                          )message->data[0]*10;
  2327  00166E  EE20 F008          	lfsr	2,8
  2328  001672  500D               	movf	FRAME_Plot@message,w,c
  2329  001674  26D9               	addwf	fsr2l,f,c
  2330  001676  500E               	movf	FRAME_Plot@message+1,w,c
  2331  001678  22DA               	addwfc	fsr2h,f,c
  2332  00167A  50DF               	movf	indf2,w,c
  2333  00167C  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  2334  00167E  500F               	movf	??_FRAME_Plot,w,c
  2335  001680  0D0A               	mullw	10
  2336  001682  CFF3 F00C          	movff	prodl,12
  2337  001686  CFF4 F00D          	movff	prodh,13
  2338  00168A  0012               	return		;funcret
  2339  00168C                     __end_of_FRAME_Plot:
  2340                           	opt callstack 0
  2341                           
  2342 ;; *************** function _FRAME_MapPosition *****************
  2343 ;; Defined at:
  2344 ;;		line 590 in file "FRAME.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  message         2    5[COMRAM] PTR struct .
  2347 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		None
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;Total ram usage:        2 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    3
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_FRAME_HandleCanFrame
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text15
  2374  001BA8                     __ptext15:
  2375                           	opt callstack 0
  2376  001BA8                     _FRAME_MapPosition:
  2377                           	opt callstack 25
  2378                           
  2379                           ;incstack = 0
  2380  001BA8  0012               	return		;funcret
  2381  001BAA                     __end_of_FRAME_MapPosition:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function _FRAME_ExcitationValue *****************
  2385 ;; Defined at:
  2386 ;;		line 228 in file "FRAME.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  message         2    5[COMRAM] PTR struct .
  2389 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;Total ram usage:        3 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    3
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_FRAME_HandleCanFrame
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text16
  2416  00183E                     __ptext16:
  2417                           	opt callstack 0
  2418  00183E                     _FRAME_ExcitationValue:
  2419                           	opt callstack 25
  2420                           
  2421                           ;FRAME.c: 230: if(message->message_type == 0x02)
  2422                           
  2423                           ;incstack = 0
  2424  00183E  EE20 F001          	lfsr	2,1
  2425  001842  5006               	movf	FRAME_ExcitationValue@message,w,c
  2426  001844  26D9               	addwf	fsr2l,f,c
  2427  001846  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2428  001848  22DA               	addwfc	fsr2h,f,c
  2429  00184A  0E02               	movlw	2
  2430  00184C  18DE               	xorwf	postinc2,w,c
  2431  00184E  A4D8               	btfss	status,2,c
  2432  001850  0012               	return	
  2433                           
  2434                           ;FRAME.c: 231: {;FRAME.c: 232: message->data_length = 1;
  2435  001852  EE20 F010          	lfsr	2,16
  2436  001856  5006               	movf	FRAME_ExcitationValue@message,w,c
  2437  001858  26D9               	addwf	fsr2l,f,c
  2438  00185A  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2439  00185C  22DA               	addwfc	fsr2h,f,c
  2440  00185E  0E01               	movlw	1
  2441  001860  6EDF               	movwf	indf2,c
  2442                           
  2443                           ;FRAME.c: 237: message->data[0] = 0xFF;
  2444  001862  EE20 F008          	lfsr	2,8
  2445  001866  5006               	movf	FRAME_ExcitationValue@message,w,c
  2446  001868  26D9               	addwf	fsr2l,f,c
  2447  00186A  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2448  00186C  22DA               	addwfc	fsr2h,f,c
  2449  00186E  0EFF               	movlw	255
  2450  001870  6EDF               	movwf	indf2,c
  2451                           
  2452                           ;FRAME.c: 238: }
  2453  001872  0012               	return		;funcret
  2454  001874                     __end_of_FRAME_ExcitationValue:
  2455                           	opt callstack 0
  2456                           
  2457 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2458 ;; Defined at:
  2459 ;;		line 257 in file "FRAME.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  message         2    5[COMRAM] PTR struct .
  2462 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  i               2    8[COMRAM] unsigned short 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2477 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;Total ram usage:        5 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    3
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_FRAME_HandleCanFrame
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text17
  2489  0016DE                     __ptext17:
  2490                           	opt callstack 0
  2491  0016DE                     _FRAME_ExcitationMultiplier:
  2492                           	opt callstack 25
  2493                           
  2494                           ;FRAME.c: 259: WORD i;;FRAME.c: 261: if(message->message_type == 0x02)
  2495                           
  2496                           ;incstack = 0
  2497  0016DE  EE20 F001          	lfsr	2,1
  2498  0016E2  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2499  0016E4  26D9               	addwf	fsr2l,f,c
  2500  0016E6  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2501  0016E8  22DA               	addwfc	fsr2h,f,c
  2502  0016EA  0E02               	movlw	2
  2503  0016EC  18DE               	xorwf	postinc2,w,c
  2504  0016EE  A4D8               	btfss	status,2,c
  2505  0016F0  0012               	return	
  2506                           
  2507                           ;FRAME.c: 262: {;FRAME.c: 263: message->data_length = 1;
  2508  0016F2  EE20 F010          	lfsr	2,16
  2509  0016F6  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2510  0016F8  26D9               	addwf	fsr2l,f,c
  2511  0016FA  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2512  0016FC  22DA               	addwfc	fsr2h,f,c
  2513  0016FE  0E01               	movlw	1
  2514  001700  6EDF               	movwf	indf2,c
  2515                           
  2516                           ;FRAME.c: 264: for(i=0; i<3; i++)
  2517  001702  0E00               	movlw	0
  2518  001704  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2519  001706  0E00               	movlw	0
  2520  001708  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2521  00170A                     l4393:
  2522                           
  2523                           ;FRAME.c: 265: {
  2524  00170A  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2525  00170C  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2526  00170E  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2527  001710  E104               	bnz	u2730
  2528  001712  0E03               	movlw	3
  2529  001714  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2530  001716  A0D8               	btfss	status,0,c
  2531  001718  D7F8               	goto	l4393
  2532  00171A                     u2730:
  2533                           
  2534                           ;FRAME.c: 268: };FRAME.c: 269: message->data[0] = 0xFF;
  2535  00171A  EE20 F008          	lfsr	2,8
  2536  00171E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2537  001720  26D9               	addwf	fsr2l,f,c
  2538  001722  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2539  001724  22DA               	addwfc	fsr2h,f,c
  2540  001726  0EFF               	movlw	255
  2541  001728  6EDF               	movwf	indf2,c
  2542                           
  2543                           ;FRAME.c: 270: }
  2544  00172A  0012               	return		;funcret
  2545  00172C                     __end_of_FRAME_ExcitationMultiplier:
  2546                           	opt callstack 0
  2547                           
  2548 ;; *************** function _FRAME_DeviceReset *****************
  2549 ;; Defined at:
  2550 ;;		line 411 in file "FRAME.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  message         2   14[COMRAM] PTR struct .
  2553 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;Total ram usage:        3 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    6
  2572 ;; This function calls:
  2573 ;;		_FRAME_DataUpdateAndChangeOption
  2574 ;;		_WriteDataToEEPROM
  2575 ;; This function is called by:
  2576 ;;		_FRAME_HandleCanFrame
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text18
  2581  000BCA                     __ptext18:
  2582                           	opt callstack 0
  2583  000BCA                     _FRAME_DeviceReset:
  2584                           	opt callstack 22
  2585                           
  2586                           ;FRAME.c: 413: if(message->message_type == 0x02)
  2587                           
  2588                           ;incstack = 0
  2589  000BCA  EE20 F001          	lfsr	2,1
  2590  000BCE  500F               	movf	FRAME_DeviceReset@message,w,c
  2591  000BD0  26D9               	addwf	fsr2l,f,c
  2592  000BD2  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2593  000BD4  22DA               	addwfc	fsr2h,f,c
  2594  000BD6  0E02               	movlw	2
  2595  000BD8  18DE               	xorwf	postinc2,w,c
  2596  000BDA  A4D8               	btfss	status,2,c
  2597  000BDC  D057               	goto	l4415
  2598                           
  2599                           ;FRAME.c: 414: {;FRAME.c: 415: message->data_length = 8;
  2600  000BDE  EE20 F010          	lfsr	2,16
  2601  000BE2  500F               	movf	FRAME_DeviceReset@message,w,c
  2602  000BE4  26D9               	addwf	fsr2l,f,c
  2603  000BE6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2604  000BE8  22DA               	addwfc	fsr2h,f,c
  2605  000BEA  0E08               	movlw	8
  2606  000BEC  6EDF               	movwf	indf2,c
  2607                           
  2608                           ;FRAME.c: 417: message->data[0] = (RCON>>6) & 0x01;
  2609  000BEE  EE20 F008          	lfsr	2,8
  2610  000BF2  500F               	movf	FRAME_DeviceReset@message,w,c
  2611  000BF4  26D9               	addwf	fsr2l,f,c
  2612  000BF6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2613  000BF8  22DA               	addwfc	fsr2h,f,c
  2614  000BFA  44D0               	rlncf	4048,w,c	;volatile
  2615  000BFC  46E8               	rlncf	wreg,f,c
  2616  000BFE  0B03               	andlw	3
  2617  000C00  0B01               	andlw	1
  2618  000C02  6EDF               	movwf	indf2,c
  2619                           
  2620                           ;FRAME.c: 418: message->data[1] = Flagi.wykonanoZapisDoFlash;
  2621  000C04  EE20 F009          	lfsr	2,9
  2622  000C08  500F               	movf	FRAME_DeviceReset@message,w,c
  2623  000C0A  26D9               	addwf	fsr2l,f,c
  2624  000C0C  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2625  000C0E  22DA               	addwfc	fsr2h,f,c
  2626  000C10  0100               	movlb	0	; () banked
  2627  000C12  A9C6               	btfss	_Flagi& (0+255),4,b
  2628  000C14  D002               	goto	u2770
  2629  000C16  0E01               	movlw	1
  2630  000C18  D001               	goto	u2776
  2631  000C1A                     u2770:
  2632  000C1A  0E00               	movlw	0
  2633  000C1C                     u2776:
  2634  000C1C  6EDF               	movwf	indf2,c
  2635                           
  2636                           ;FRAME.c: 419: message->data[2] = Flagi.pomiarTla;
  2637  000C1E  EE20 F00A          	lfsr	2,10
  2638  000C22  500F               	movf	FRAME_DeviceReset@message,w,c
  2639  000C24  26D9               	addwf	fsr2l,f,c
  2640  000C26  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2641  000C28  22DA               	addwfc	fsr2h,f,c
  2642  000C2A  A1C6               	btfss	_Flagi& (0+255),0,b
  2643  000C2C  D002               	goto	u2780
  2644  000C2E  0E01               	movlw	1
  2645  000C30  D001               	goto	u2786
  2646  000C32                     u2780:
  2647  000C32  0E00               	movlw	0
  2648  000C34                     u2786:
  2649  000C34  6EDF               	movwf	indf2,c
  2650                           
  2651                           ;FRAME.c: 420: message->data[3] = 0;
  2652  000C36  EE20 F00B          	lfsr	2,11
  2653  000C3A  500F               	movf	FRAME_DeviceReset@message,w,c
  2654  000C3C  26D9               	addwf	fsr2l,f,c
  2655  000C3E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2656  000C40  22DA               	addwfc	fsr2h,f,c
  2657  000C42  0E00               	movlw	0
  2658  000C44  6EDF               	movwf	indf2,c
  2659                           
  2660                           ;FRAME.c: 421: message->data[4] = Dane->rokU16;
  2661  000C46  EE20 F00C          	lfsr	2,12
  2662  000C4A  500F               	movf	FRAME_DeviceReset@message,w,c
  2663  000C4C  26D9               	addwf	fsr2l,f,c
  2664  000C4E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2665  000C50  22DA               	addwfc	fsr2h,f,c
  2666  000C52  C036 FFDF          	movff	54,indf2
  2667                           
  2668                           ;FRAME.c: 422: message->data[5] = Dane->miesiacU16;
  2669  000C56  EE20 F00D          	lfsr	2,13
  2670  000C5A  500F               	movf	FRAME_DeviceReset@message,w,c
  2671  000C5C  26D9               	addwf	fsr2l,f,c
  2672  000C5E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2673  000C60  22DA               	addwfc	fsr2h,f,c
  2674  000C62  C038 FFDF          	movff	56,indf2
  2675                           
  2676                           ;FRAME.c: 423: message->data[6] = Dane->dzienU16;
  2677  000C66  EE20 F00E          	lfsr	2,14
  2678  000C6A  500F               	movf	FRAME_DeviceReset@message,w,c
  2679  000C6C  26D9               	addwf	fsr2l,f,c
  2680  000C6E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2681  000C70  22DA               	addwfc	fsr2h,f,c
  2682  000C72  C03A FFDF          	movff	58,indf2
  2683                           
  2684                           ;FRAME.c: 424: message->data[7] = Dane->godzinaU16;
  2685  000C76  EE20 F00F          	lfsr	2,15
  2686  000C7A  500F               	movf	FRAME_DeviceReset@message,w,c
  2687  000C7C  26D9               	addwf	fsr2l,f,c
  2688  000C7E  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2689  000C80  22DA               	addwfc	fsr2h,f,c
  2690  000C82  C03C FFDF          	movff	60,indf2
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;FRAME.c: 425: RCON &= ~(1<<6);
  2694  000C86  9CD0               	bcf	4048,6,c	;volatile
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;FRAME.c: 426: Flagi.wykonanoZapisDoFlash = 0;
  2698  000C88  99C6               	bcf	_Flagi& (0+255),4,b
  2699                           
  2700                           ;FRAME.c: 440: }
  2701  000C8A  0012               	return	
  2702  000C8C                     l4415:
  2703                           
  2704                           ;FRAME.c: 441: else;FRAME.c: 442: {;FRAME.c: 443: message->data_length = 1;
  2705  000C8C  EE20 F010          	lfsr	2,16
  2706  000C90  500F               	movf	FRAME_DeviceReset@message,w,c
  2707  000C92  26D9               	addwf	fsr2l,f,c
  2708  000C94  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2709  000C96  22DA               	addwfc	fsr2h,f,c
  2710  000C98  0E01               	movlw	1
  2711  000C9A  6EDF               	movwf	indf2,c
  2712                           
  2713                           ;FRAME.c: 445: if(message->data[2])
  2714  000C9C  EE20 F00A          	lfsr	2,10
  2715  000CA0  500F               	movf	FRAME_DeviceReset@message,w,c
  2716  000CA2  26D9               	addwf	fsr2l,f,c
  2717  000CA4  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2718  000CA6  22DA               	addwfc	fsr2h,f,c
  2719  000CA8  50DF               	movf	indf2,w,c
  2720  000CAA  B4D8               	btfsc	status,2,c
  2721  000CAC  D00F               	goto	l4425
  2722                           
  2723                           ;FRAME.c: 446: {;FRAME.c: 447: Flagi.pomiarTla = 1;
  2724  000CAE  0100               	movlb	0	; () banked
  2725  000CB0  81C6               	bsf	_Flagi& (0+255),0,b
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;FRAME.c: 448: if(message->data[1])
  2729  000CB2  EE20 F009          	lfsr	2,9
  2730  000CB6  500F               	movf	FRAME_DeviceReset@message,w,c
  2731  000CB8  26D9               	addwf	fsr2l,f,c
  2732  000CBA  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2733  000CBC  22DA               	addwfc	fsr2h,f,c
  2734  000CBE  50DF               	movf	indf2,w,c
  2735  000CC0  B4D8               	btfsc	status,2,c
  2736  000CC2  D01E               	goto	l4433
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;FRAME.c: 449: {;FRAME.c: 450: Flagi.zapisDoFlash = 1;
  2740  000CC4  87C6               	bsf	_Flagi& (0+255),3,b
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;FRAME.c: 451: WriteDataToEEPROM();
  2744  000CC6  EC1B  F007         	call	_WriteDataToEEPROM	;wreg free
  2745  000CCA  D01A               	goto	l4433
  2746  000CCC                     l4425:
  2747                           
  2748                           ;FRAME.c: 454: else;FRAME.c: 455: {;FRAME.c: 456: if(message->data[1])
  2749  000CCC  EE20 F009          	lfsr	2,9
  2750  000CD0  500F               	movf	FRAME_DeviceReset@message,w,c
  2751  000CD2  26D9               	addwf	fsr2l,f,c
  2752  000CD4  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2753  000CD6  22DA               	addwfc	fsr2h,f,c
  2754  000CD8  50DF               	movf	indf2,w,c
  2755  000CDA  B4D8               	btfsc	status,2,c
  2756  000CDC  D008               	goto	l4429
  2757                           
  2758                           ;FRAME.c: 457: {;FRAME.c: 458: FRAME_DataUpdateAndChangeOption(message);
  2759  000CDE  C00F  F006         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2760  000CE2  C010  F007         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2761  000CE6  ECED  F00A         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2762                           
  2763                           ;FRAME.c: 459: WriteDataToEEPROM();
  2764  000CEA  EC1B  F007         	call	_WriteDataToEEPROM	;wreg free
  2765  000CEE                     l4429:
  2766                           
  2767                           ;FRAME.c: 461: };FRAME.c: 462: if(message->data[0])
  2768  000CEE  EE20 F008          	lfsr	2,8
  2769  000CF2  500F               	movf	FRAME_DeviceReset@message,w,c
  2770  000CF4  26D9               	addwf	fsr2l,f,c
  2771  000CF6  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2772  000CF8  22DA               	addwfc	fsr2h,f,c
  2773  000CFA  50DF               	movf	indf2,w,c
  2774  000CFC  A4D8               	btfss	status,2,c
  2775  000CFE  00FF               	reset		;# 
  2776  000D00                     l4433:
  2777                           
  2778                           ;FRAME.c: 465: };FRAME.c: 466: };FRAME.c: 467: message->data[0] = 0xFF;
  2779  000D00  EE20 F008          	lfsr	2,8
  2780  000D04  500F               	movf	FRAME_DeviceReset@message,w,c
  2781  000D06  26D9               	addwf	fsr2l,f,c
  2782  000D08  5010               	movf	FRAME_DeviceReset@message+1,w,c
  2783  000D0A  22DA               	addwfc	fsr2h,f,c
  2784  000D0C  0EFF               	movlw	255
  2785  000D0E  6EDF               	movwf	indf2,c
  2786  000D10  0012               	return		;funcret
  2787  000D12                     __end_of_FRAME_DeviceReset:
  2788                           	opt callstack 0
  2789                           
  2790 ;; *************** function _WriteDataToEEPROM *****************
  2791 ;; Defined at:
  2792 ;;		line 539 in file "FRAME.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    5
  2813 ;; This function calls:
  2814 ;;		_NVMWrite
  2815 ;; This function is called by:
  2816 ;;		_FRAME_DeviceReset
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text19
  2821  000E36                     __ptext19:
  2822                           	opt callstack 0
  2823  000E36                     _WriteDataToEEPROM:
  2824                           	opt callstack 22
  2825                           
  2826                           ;FRAME.c: 541: NVMWrite(&Init_Data,10,2);
  2827                           
  2828                           ;incstack = 0
  2829  000E36  0E56               	movlw	low _Init_Data
  2830  000E38  6E09               	movwf	NVMWrite@source,c
  2831  000E3A  0E00               	movlw	high _Init_Data
  2832  000E3C  6E0A               	movwf	NVMWrite@source+1,c
  2833  000E3E  0E00               	movlw	0
  2834  000E40  6E0C               	movwf	NVMWrite@addr+1,c
  2835  000E42  0E0A               	movlw	10
  2836  000E44  6E0B               	movwf	NVMWrite@addr,c
  2837  000E46  0E00               	movlw	0
  2838  000E48  6E0E               	movwf	NVMWrite@count+1,c
  2839  000E4A  0E02               	movlw	2
  2840  000E4C  6E0D               	movwf	NVMWrite@count,c
  2841  000E4E  EC3A  F00C         	call	_NVMWrite	;wreg free
  2842                           
  2843                           ;FRAME.c: 542: NVMWrite(&NeightAdress1,13,2);
  2844  000E52  0E4B               	movlw	low _NeightAdress1
  2845  000E54  6E09               	movwf	NVMWrite@source,c
  2846  000E56  0E00               	movlw	high _NeightAdress1
  2847  000E58  6E0A               	movwf	NVMWrite@source+1,c
  2848  000E5A  0E00               	movlw	0
  2849  000E5C  6E0C               	movwf	NVMWrite@addr+1,c
  2850  000E5E  0E0D               	movlw	13
  2851  000E60  6E0B               	movwf	NVMWrite@addr,c
  2852  000E62  0E00               	movlw	0
  2853  000E64  6E0E               	movwf	NVMWrite@count+1,c
  2854  000E66  0E02               	movlw	2
  2855  000E68  6E0D               	movwf	NVMWrite@count,c
  2856  000E6A  EC3A  F00C         	call	_NVMWrite	;wreg free
  2857                           
  2858                           ;FRAME.c: 543: NVMWrite(&NeightAdress2,16,2);
  2859  000E6E  0E58               	movlw	low _NeightAdress2
  2860  000E70  6E09               	movwf	NVMWrite@source,c
  2861  000E72  0E00               	movlw	high _NeightAdress2
  2862  000E74  6E0A               	movwf	NVMWrite@source+1,c
  2863  000E76  0E00               	movlw	0
  2864  000E78  6E0C               	movwf	NVMWrite@addr+1,c
  2865  000E7A  0E10               	movlw	16
  2866  000E7C  6E0B               	movwf	NVMWrite@addr,c
  2867  000E7E  0E00               	movlw	0
  2868  000E80  6E0E               	movwf	NVMWrite@count+1,c
  2869  000E82  0E02               	movlw	2
  2870  000E84  6E0D               	movwf	NVMWrite@count,c
  2871  000E86  EC3A  F00C         	call	_NVMWrite	;wreg free
  2872                           
  2873                           ;FRAME.c: 544: NVMWrite(&NeightAdress3,19,2);
  2874  000E8A  0E49               	movlw	low _NeightAdress3
  2875  000E8C  6E09               	movwf	NVMWrite@source,c
  2876  000E8E  0E00               	movlw	high _NeightAdress3
  2877  000E90  6E0A               	movwf	NVMWrite@source+1,c
  2878  000E92  0E00               	movlw	0
  2879  000E94  6E0C               	movwf	NVMWrite@addr+1,c
  2880  000E96  0E13               	movlw	19
  2881  000E98  6E0B               	movwf	NVMWrite@addr,c
  2882  000E9A  0E00               	movlw	0
  2883  000E9C  6E0E               	movwf	NVMWrite@count+1,c
  2884  000E9E  0E02               	movlw	2
  2885  000EA0  6E0D               	movwf	NVMWrite@count,c
  2886  000EA2  EC3A  F00C         	call	_NVMWrite	;wreg free
  2887                           
  2888                           ;FRAME.c: 545: NVMWrite(&NeightAdress4,22,2);
  2889  000EA6  0E47               	movlw	low _NeightAdress4
  2890  000EA8  6E09               	movwf	NVMWrite@source,c
  2891  000EAA  0E00               	movlw	high _NeightAdress4
  2892  000EAC  6E0A               	movwf	NVMWrite@source+1,c
  2893  000EAE  0E00               	movlw	0
  2894  000EB0  6E0C               	movwf	NVMWrite@addr+1,c
  2895  000EB2  0E16               	movlw	22
  2896  000EB4  6E0B               	movwf	NVMWrite@addr,c
  2897  000EB6  0E00               	movlw	0
  2898  000EB8  6E0E               	movwf	NVMWrite@count+1,c
  2899  000EBA  0E02               	movlw	2
  2900  000EBC  6E0D               	movwf	NVMWrite@count,c
  2901  000EBE  EC3A  F00C         	call	_NVMWrite	;wreg free
  2902                           
  2903                           ;FRAME.c: 546: NVMWrite(&NeightAdress5,25,2);
  2904  000EC2  0E45               	movlw	low _NeightAdress5
  2905  000EC4  6E09               	movwf	NVMWrite@source,c
  2906  000EC6  0E00               	movlw	high _NeightAdress5
  2907  000EC8  6E0A               	movwf	NVMWrite@source+1,c
  2908  000ECA  0E00               	movlw	0
  2909  000ECC  6E0C               	movwf	NVMWrite@addr+1,c
  2910  000ECE  0E19               	movlw	25
  2911  000ED0  6E0B               	movwf	NVMWrite@addr,c
  2912  000ED2  0E00               	movlw	0
  2913  000ED4  6E0E               	movwf	NVMWrite@count+1,c
  2914  000ED6  0E02               	movlw	2
  2915  000ED8  6E0D               	movwf	NVMWrite@count,c
  2916  000EDA  EC3A  F00C         	call	_NVMWrite	;wreg free
  2917                           
  2918                           ;FRAME.c: 547: NVMWrite(&NeightAdress6,28,2);
  2919  000EDE  0E43               	movlw	low _NeightAdress6
  2920  000EE0  6E09               	movwf	NVMWrite@source,c
  2921  000EE2  0E00               	movlw	high _NeightAdress6
  2922  000EE4  6E0A               	movwf	NVMWrite@source+1,c
  2923  000EE6  0E00               	movlw	0
  2924  000EE8  6E0C               	movwf	NVMWrite@addr+1,c
  2925  000EEA  0E1C               	movlw	28
  2926  000EEC  6E0B               	movwf	NVMWrite@addr,c
  2927  000EEE  0E00               	movlw	0
  2928  000EF0  6E0E               	movwf	NVMWrite@count+1,c
  2929  000EF2  0E02               	movlw	2
  2930  000EF4  6E0D               	movwf	NVMWrite@count,c
  2931  000EF6  EC3A  F00C         	call	_NVMWrite	;wreg free
  2932                           
  2933                           ;FRAME.c: 548: NVMWrite(&NeightAdress7,31,2);
  2934  000EFA  0E41               	movlw	low _NeightAdress7
  2935  000EFC  6E09               	movwf	NVMWrite@source,c
  2936  000EFE  0E00               	movlw	high _NeightAdress7
  2937  000F00  6E0A               	movwf	NVMWrite@source+1,c
  2938  000F02  0E00               	movlw	0
  2939  000F04  6E0C               	movwf	NVMWrite@addr+1,c
  2940  000F06  0E1F               	movlw	31
  2941  000F08  6E0B               	movwf	NVMWrite@addr,c
  2942  000F0A  0E00               	movlw	0
  2943  000F0C  6E0E               	movwf	NVMWrite@count+1,c
  2944  000F0E  0E02               	movlw	2
  2945  000F10  6E0D               	movwf	NVMWrite@count,c
  2946  000F12  EC3A  F00C         	call	_NVMWrite	;wreg free
  2947                           
  2948                           ;FRAME.c: 549: NVMWrite(&NeightAdress8,34,2);
  2949  000F16  0E3F               	movlw	low _NeightAdress8
  2950  000F18  6E09               	movwf	NVMWrite@source,c
  2951  000F1A  0E00               	movlw	high _NeightAdress8
  2952  000F1C  6E0A               	movwf	NVMWrite@source+1,c
  2953  000F1E  0E00               	movlw	0
  2954  000F20  6E0C               	movwf	NVMWrite@addr+1,c
  2955  000F22  0E22               	movlw	34
  2956  000F24  6E0B               	movwf	NVMWrite@addr,c
  2957  000F26  0E00               	movlw	0
  2958  000F28  6E0E               	movwf	NVMWrite@count+1,c
  2959  000F2A  0E02               	movlw	2
  2960  000F2C  6E0D               	movwf	NVMWrite@count,c
  2961  000F2E  EC3A  F00C         	call	_NVMWrite	;wreg free
  2962  000F32  0012               	return		;funcret
  2963  000F34                     __end_of_WriteDataToEEPROM:
  2964                           	opt callstack 0
  2965                           
  2966 ;; *************** function _NVMWrite *****************
  2967 ;; Defined at:
  2968 ;;		line 148 in file "EEPROM.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  source          2    8[COMRAM] PTR unsigned char 
  2971 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  2972 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  2973 ;;		 -> NeightAdress1(2), 
  2974 ;;  addr            2   10[COMRAM] unsigned short 
  2975 ;;  count           2   12[COMRAM] unsigned short 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2987 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;Total ram usage:        6 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    4
  2994 ;; This function calls:
  2995 ;;		_WritetoEEPROM
  2996 ;; This function is called by:
  2997 ;;		_WriteDataToEEPROM
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text20
  3002  001874                     __ptext20:
  3003                           	opt callstack 0
  3004  001874                     _NVMWrite:
  3005                           	opt callstack 22
  3006                           
  3007                           ;EEPROM.c: 150: while(count > 0)
  3008                           
  3009                           ;incstack = 0
  3010  001874  D015               	goto	l3907
  3011  001876                     l937:
  3012  001876  B2A6               	btfsc	4006,1,c	;volsfr
  3013  001878  D7FE               	goto	l937
  3014                           
  3015                           ;EEPROM.c: 153: WritetoEEPROM(addr++,*source);
  3016  00187A  C00B  F006         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3017  00187E  C00C  F007         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3018  001882  C009  FFD9         	movff	NVMWrite@source,fsr2l
  3019  001886  C00A  FFDA         	movff	NVMWrite@source+1,fsr2h
  3020  00188A  50DF               	movf	indf2,w,c
  3021  00188C  6E08               	movwf	WritetoEEPROM@Data,c
  3022  00188E  ECA6  F00C         	call	_WritetoEEPROM	;wreg free
  3023  001892  4A0B               	infsnz	NVMWrite@addr,f,c
  3024  001894  2A0C               	incf	NVMWrite@addr+1,f,c
  3025                           
  3026                           ;EEPROM.c: 154: count--;
  3027  001896  060D               	decf	NVMWrite@count,f,c
  3028  001898  A0D8               	btfss	status,0,c
  3029  00189A  060E               	decf	NVMWrite@count+1,f,c
  3030                           
  3031                           ;EEPROM.c: 155: source++;
  3032  00189C  4A09               	infsnz	NVMWrite@source,f,c
  3033  00189E  2A0A               	incf	NVMWrite@source+1,f,c
  3034  0018A0                     l3907:
  3035  0018A0  500D               	movf	NVMWrite@count,w,c
  3036  0018A2  100E               	iorwf	NVMWrite@count+1,w,c
  3037  0018A4  B4D8               	btfsc	status,2,c
  3038  0018A6  0012               	return	
  3039  0018A8  D7E6               	goto	l937
  3040  0018AA                     __end_of_NVMWrite:
  3041                           	opt callstack 0
  3042                           
  3043 ;; *************** function _WritetoEEPROM *****************
  3044 ;; Defined at:
  3045 ;;		line 95 in file "EEPROM.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  Address         2    5[COMRAM] unsigned short 
  3048 ;;  Data            1    7[COMRAM] unsigned char 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3060 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;Total ram usage:        3 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    3
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_NVMWrite
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text21
  3075  00194C                     __ptext21:
  3076                           	opt callstack 0
  3077  00194C                     _WritetoEEPROM:
  3078                           	opt callstack 22
  3079                           
  3080                           ;EEPROM.c: 97: static BYTE GIE_Status;;EEPROM.c: 99: EEADRH = (BYTE)(Address>>8);
  3081                           
  3082                           ;incstack = 0
  3083  00194C  5007               	movf	WritetoEEPROM@Address+1,w,c
  3084  00194E  6EAA               	movwf	4010,c	;volatile
  3085                           
  3086                           ;EEPROM.c: 100: EEADR = (BYTE)Address;
  3087  001950  C006  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3088                           
  3089                           ;EEPROM.c: 101: EEDATA = Data;
  3090  001954  C008  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3091                           
  3092                           ;EEPROM.c: 102: EECON1bits.WREN = 1;
  3093  001958  84A6               	bsf	4006,2,c	;volsfr
  3094                           
  3095                           ;EEPROM.c: 103: GIE_Status = INTCONbits.GIE;
  3096  00195A  0E00               	movlw	0
  3097  00195C  BEF2               	btfsc	4082,7,c	;volatile
  3098  00195E  0E01               	movlw	1
  3099  001960  6E35               	movwf	WritetoEEPROM@GIE_Status,c
  3100                           
  3101                           ;EEPROM.c: 104: INTCONbits.GIE = 0;
  3102  001962  9EF2               	bcf	4082,7,c	;volatile
  3103                           
  3104                           ;EEPROM.c: 105: EECON2 = 0x55;
  3105  001964  0E55               	movlw	85
  3106  001966  6EA7               	movwf	4007,c	;volsfr
  3107                           
  3108                           ;EEPROM.c: 106: EECON2 = 0xAA;
  3109  001968  0EAA               	movlw	170
  3110  00196A  6EA7               	movwf	4007,c	;volsfr
  3111                           
  3112                           ;EEPROM.c: 107: EECON1bits.WR = 1;
  3113  00196C  82A6               	bsf	4006,1,c	;volsfr
  3114                           
  3115                           ;EEPROM.c: 108: INTCONbits.GIE = GIE_Status;
  3116  00196E  B035               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3117  001970  D002               	bra	u2195
  3118  001972  9EF2               	bcf	4082,7,c	;volatile
  3119  001974  D001               	bra	u2196
  3120  001976                     u2195:
  3121  001976  8EF2               	bsf	4082,7,c	;volatile
  3122  001978                     u2196:
  3123                           
  3124                           ;EEPROM.c: 109: EECON1bits.WREN = 0;
  3125  001978  94A6               	bcf	4006,2,c	;volsfr
  3126  00197A                     l920:
  3127  00197A  B2A6               	btfsc	4006,1,c	;volsfr
  3128  00197C  D7FE               	goto	l920
  3129  00197E  0012               	return	
  3130  001980                     __end_of_WritetoEEPROM:
  3131                           	opt callstack 0
  3132                           
  3133 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3134 ;; Defined at:
  3135 ;;		line 390 in file "FRAME.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  message         2    5[COMRAM] PTR struct .
  3138 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;Total ram usage:        3 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    3
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_FRAME_DeviceReset
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text22
  3165  0015DA                     __ptext22:
  3166                           	opt callstack 0
  3167  0015DA                     _FRAME_DataUpdateAndChangeOption:
  3168                           	opt callstack 24
  3169                           
  3170                           ;FRAME.c: 393: Dane->rokU16 = message->data[4];
  3171                           
  3172                           ;incstack = 0
  3173  0015DA  EE20 F00C          	lfsr	2,12
  3174  0015DE  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3175  0015E0  26D9               	addwf	fsr2l,f,c
  3176  0015E2  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3177  0015E4  22DA               	addwfc	fsr2h,f,c
  3178  0015E6  50DF               	movf	indf2,w,c
  3179  0015E8  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3180  0015EA  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3181  0015EC  6E36               	movwf	54,c
  3182  0015EE  6A37               	clrf	55,c
  3183                           
  3184                           ;FRAME.c: 394: Dane->miesiacU16 = message->data[5];
  3185  0015F0  EE20 F00D          	lfsr	2,13
  3186  0015F4  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3187  0015F6  26D9               	addwf	fsr2l,f,c
  3188  0015F8  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3189  0015FA  22DA               	addwfc	fsr2h,f,c
  3190  0015FC  50DF               	movf	indf2,w,c
  3191  0015FE  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3192  001600  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3193  001602  6E38               	movwf	56,c
  3194  001604  6A39               	clrf	57,c
  3195                           
  3196                           ;FRAME.c: 395: Dane->dzienU16 = message->data[6];
  3197  001606  EE20 F00E          	lfsr	2,14
  3198  00160A  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3199  00160C  26D9               	addwf	fsr2l,f,c
  3200  00160E  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3201  001610  22DA               	addwfc	fsr2h,f,c
  3202  001612  50DF               	movf	indf2,w,c
  3203  001614  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3204  001616  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3205  001618  6E3A               	movwf	58,c
  3206  00161A  6A3B               	clrf	59,c
  3207                           
  3208                           ;FRAME.c: 396: Dane->godzinaU16 = message->data[7];
  3209  00161C  EE20 F00F          	lfsr	2,15
  3210  001620  5006               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3211  001622  26D9               	addwf	fsr2l,f,c
  3212  001624  5007               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3213  001626  22DA               	addwfc	fsr2h,f,c
  3214  001628  50DF               	movf	indf2,w,c
  3215  00162A  6E08               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3216  00162C  5008               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3217  00162E  6E3C               	movwf	60,c
  3218  001630  6A3D               	clrf	61,c
  3219  001632  0012               	return		;funcret
  3220  001634                     __end_of_FRAME_DataUpdateAndChangeOption:
  3221                           	opt callstack 0
  3222                           
  3223 ;; *************** function _FRAME_AxisStatus *****************
  3224 ;; Defined at:
  3225 ;;		line 354 in file "FRAME.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  message         2    5[COMRAM] PTR struct .
  3228 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  i               2    0        unsigned short 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3243 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;Total ram usage:        3 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    3
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_FRAME_HandleCanFrame
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text23
  3255  0018AA                     __ptext23:
  3256                           	opt callstack 0
  3257  0018AA                     _FRAME_AxisStatus:
  3258                           	opt callstack 25
  3259                           
  3260                           ;FRAME.c: 356: WORD i;;FRAME.c: 358: if(message->message_type == 0x02)
  3261                           
  3262                           ;incstack = 0
  3263  0018AA  EE20 F001          	lfsr	2,1
  3264  0018AE  5006               	movf	FRAME_AxisStatus@message,w,c
  3265  0018B0  26D9               	addwf	fsr2l,f,c
  3266  0018B2  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3267  0018B4  22DA               	addwfc	fsr2h,f,c
  3268  0018B6  0E02               	movlw	2
  3269  0018B8  18DE               	xorwf	postinc2,w,c
  3270  0018BA  A4D8               	btfss	status,2,c
  3271  0018BC  0012               	return	
  3272                           
  3273                           ;FRAME.c: 359: {;FRAME.c: 360: message->data_length = 1;
  3274  0018BE  EE20 F010          	lfsr	2,16
  3275  0018C2  5006               	movf	FRAME_AxisStatus@message,w,c
  3276  0018C4  26D9               	addwf	fsr2l,f,c
  3277  0018C6  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3278  0018C8  22DA               	addwfc	fsr2h,f,c
  3279  0018CA  0E01               	movlw	1
  3280  0018CC  6EDF               	movwf	indf2,c
  3281                           
  3282                           ;FRAME.c: 371: message->data[0] = 0xFF;
  3283  0018CE  EE20 F008          	lfsr	2,8
  3284  0018D2  5006               	movf	FRAME_AxisStatus@message,w,c
  3285  0018D4  26D9               	addwf	fsr2l,f,c
  3286  0018D6  5007               	movf	FRAME_AxisStatus@message+1,w,c
  3287  0018D8  22DA               	addwfc	fsr2h,f,c
  3288  0018DA  0EFF               	movlw	255
  3289  0018DC  6EDF               	movwf	indf2,c
  3290                           
  3291                           ;FRAME.c: 372: }
  3292  0018DE  0012               	return		;funcret
  3293  0018E0                     __end_of_FRAME_AxisStatus:
  3294                           	opt callstack 0
  3295                           
  3296 ;; *************** function _FRAME_AveragingTimes *****************
  3297 ;; Defined at:
  3298 ;;		line 290 in file "FRAME.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  message         2    5[COMRAM] PTR struct .
  3301 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3317 ;;Total ram usage:        3 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    3
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_FRAME_HandleCanFrame
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text24
  3328  0018E0                     __ptext24:
  3329                           	opt callstack 0
  3330  0018E0                     _FRAME_AveragingTimes:
  3331                           	opt callstack 25
  3332                           
  3333                           ;FRAME.c: 292: if(message->message_type == 0x02)
  3334                           
  3335                           ;incstack = 0
  3336  0018E0  EE20 F001          	lfsr	2,1
  3337  0018E4  5006               	movf	FRAME_AveragingTimes@message,w,c
  3338  0018E6  26D9               	addwf	fsr2l,f,c
  3339  0018E8  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3340  0018EA  22DA               	addwfc	fsr2h,f,c
  3341  0018EC  0E02               	movlw	2
  3342  0018EE  18DE               	xorwf	postinc2,w,c
  3343  0018F0  A4D8               	btfss	status,2,c
  3344  0018F2  0012               	return	
  3345                           
  3346                           ;FRAME.c: 293: {;FRAME.c: 294: message->data_length = 1;
  3347  0018F4  EE20 F010          	lfsr	2,16
  3348  0018F8  5006               	movf	FRAME_AveragingTimes@message,w,c
  3349  0018FA  26D9               	addwf	fsr2l,f,c
  3350  0018FC  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3351  0018FE  22DA               	addwfc	fsr2h,f,c
  3352  001900  0E01               	movlw	1
  3353  001902  6EDF               	movwf	indf2,c
  3354                           
  3355                           ;FRAME.c: 302: message->data[0] = 0xFF;
  3356  001904  EE20 F008          	lfsr	2,8
  3357  001908  5006               	movf	FRAME_AveragingTimes@message,w,c
  3358  00190A  26D9               	addwf	fsr2l,f,c
  3359  00190C  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  3360  00190E  22DA               	addwfc	fsr2h,f,c
  3361  001910  0EFF               	movlw	255
  3362  001912  6EDF               	movwf	indf2,c
  3363                           
  3364                           ;FRAME.c: 303: }
  3365  001914  0012               	return		;funcret
  3366  001916                     __end_of_FRAME_AveragingTimes:
  3367                           	opt callstack 0
  3368                           
  3369 ;; *************** function _FRAME_AnalogValue *****************
  3370 ;; Defined at:
  3371 ;;		line 648 in file "FRAME.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  message         2    5[COMRAM] PTR struct .
  3374 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3375 ;;  set             2    7[COMRAM] unsigned short 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  i               2    0        unsigned short 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		None
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;Total ram usage:        4 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    3
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_FRAME_HandleCanFrame
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text25
  3402  001BAA                     __ptext25:
  3403                           	opt callstack 0
  3404  001BAA                     _FRAME_AnalogValue:
  3405                           	opt callstack 25
  3406                           
  3407                           ;incstack = 0
  3408  001BAA  0012               	return		;funcret
  3409  001BAC                     __end_of_FRAME_AnalogValue:
  3410                           	opt callstack 0
  3411                           
  3412 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3413 ;; Defined at:
  3414 ;;		line 706 in file "FRAME.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  message         2    5[COMRAM] PTR struct .
  3417 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3418 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  kier            2   13[COMRAM] unsigned short 
  3421 ;;  it              2    0        unsigned short 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;Total ram usage:       10 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    4
  3438 ;; This function calls:
  3439 ;;		_CAN_SetupFilter_Ne
  3440 ;; This function is called by:
  3441 ;;		_FRAME_HandleCanFrame
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text26
  3446  000062                     __ptext26:
  3447                           	opt callstack 0
  3448  000062                     _FRAME_AdressOfNeighbors:
  3449                           	opt callstack 24
  3450                           
  3451                           ;FRAME.c: 708: WORD it;;FRAME.c: 711: WORD kier = (nrRamki-0x10);
  3452                           
  3453                           ;incstack = 0
  3454  000062  0EF0               	movlw	240
  3455  000064  2408               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3456  000066  6E0E               	movwf	FRAME_AdressOfNeighbors@kier,c
  3457  000068  0EFF               	movlw	255
  3458  00006A  2009               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3459  00006C  6E0F               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3460                           
  3461                           ;FRAME.c: 712: if(message->message_type == 0x02)
  3462  00006E  EE20 F001          	lfsr	2,1
  3463  000072  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3464  000074  26D9               	addwf	fsr2l,f,c
  3465  000076  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3466  000078  22DA               	addwfc	fsr2h,f,c
  3467  00007A  0E02               	movlw	2
  3468  00007C  18DE               	xorwf	postinc2,w,c
  3469  00007E  A4D8               	btfss	status,2,c
  3470  000080  D08E               	goto	l4475
  3471                           
  3472                           ;FRAME.c: 713: {;FRAME.c: 715: message->data_length = 8;
  3473  000082  EE20 F010          	lfsr	2,16
  3474  000086  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3475  000088  26D9               	addwf	fsr2l,f,c
  3476  00008A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3477  00008C  22DA               	addwfc	fsr2h,f,c
  3478  00008E  0E08               	movlw	8
  3479  000090  6EDF               	movwf	indf2,c
  3480                           
  3481                           ;FRAME.c: 717: if(kier == 0)
  3482  000092  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3483  000094  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3484  000096  A4D8               	btfss	status,2,c
  3485  000098  D041               	goto	l4473
  3486                           
  3487                           ;FRAME.c: 718: {;FRAME.c: 719: message->data[0] = (NeightAdress1>> 8);
  3488  00009A  EE20 F008          	lfsr	2,8
  3489  00009E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3490  0000A0  26D9               	addwf	fsr2l,f,c
  3491  0000A2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3492  0000A4  22DA               	addwfc	fsr2h,f,c
  3493  0000A6  504C               	movf	_NeightAdress1+1,w,c	;volatile
  3494  0000A8  6EDF               	movwf	indf2,c
  3495                           
  3496                           ;FRAME.c: 720: message->data[1] = NeightAdress1 & 0b11111111;
  3497  0000AA  EE20 F009          	lfsr	2,9
  3498  0000AE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3499  0000B0  26D9               	addwf	fsr2l,f,c
  3500  0000B2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3501  0000B4  22DA               	addwfc	fsr2h,f,c
  3502  0000B6  C04B  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3503                           
  3504                           ;FRAME.c: 721: message->data[2] = (NeightAdress2>> 8);
  3505  0000BA  EE20 F00A          	lfsr	2,10
  3506  0000BE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3507  0000C0  26D9               	addwf	fsr2l,f,c
  3508  0000C2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3509  0000C4  22DA               	addwfc	fsr2h,f,c
  3510  0000C6  5059               	movf	_NeightAdress2+1,w,c	;volatile
  3511  0000C8  6EDF               	movwf	indf2,c
  3512                           
  3513                           ;FRAME.c: 722: message->data[3] = NeightAdress2 & 0b11111111;
  3514  0000CA  EE20 F00B          	lfsr	2,11
  3515  0000CE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3516  0000D0  26D9               	addwf	fsr2l,f,c
  3517  0000D2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3518  0000D4  22DA               	addwfc	fsr2h,f,c
  3519  0000D6  C058  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3520                           
  3521                           ;FRAME.c: 723: message->data[4] = (NeightAdress3>> 8);
  3522  0000DA  EE20 F00C          	lfsr	2,12
  3523  0000DE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3524  0000E0  26D9               	addwf	fsr2l,f,c
  3525  0000E2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3526  0000E4  22DA               	addwfc	fsr2h,f,c
  3527  0000E6  504A               	movf	_NeightAdress3+1,w,c	;volatile
  3528  0000E8  6EDF               	movwf	indf2,c
  3529                           
  3530                           ;FRAME.c: 724: message->data[5] = NeightAdress3 & 0b11111111;
  3531  0000EA  EE20 F00D          	lfsr	2,13
  3532  0000EE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3533  0000F0  26D9               	addwf	fsr2l,f,c
  3534  0000F2  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3535  0000F4  22DA               	addwfc	fsr2h,f,c
  3536  0000F6  C049  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3537                           
  3538                           ;FRAME.c: 725: message->data[6] = (NeightAdress4>> 8);
  3539  0000FA  EE20 F00E          	lfsr	2,14
  3540  0000FE  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3541  000100  26D9               	addwf	fsr2l,f,c
  3542  000102  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3543  000104  22DA               	addwfc	fsr2h,f,c
  3544  000106  5048               	movf	_NeightAdress4+1,w,c	;volatile
  3545  000108  6EDF               	movwf	indf2,c
  3546                           
  3547                           ;FRAME.c: 726: message->data[7] = NeightAdress4 & 0b11111111;
  3548  00010A  EE20 F00F          	lfsr	2,15
  3549  00010E  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3550  000110  26D9               	addwf	fsr2l,f,c
  3551  000112  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3552  000114  22DA               	addwfc	fsr2h,f,c
  3553  000116  C047  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3554                           
  3555                           ;FRAME.c: 727: }
  3556  00011A  0012               	return	
  3557  00011C                     l4473:
  3558                           
  3559                           ;FRAME.c: 728: else;FRAME.c: 729: {;FRAME.c: 730: message->data[0] = (NeightAdress5>> 8)
      +                          ;
  3560  00011C  EE20 F008          	lfsr	2,8
  3561  000120  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3562  000122  26D9               	addwf	fsr2l,f,c
  3563  000124  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3564  000126  22DA               	addwfc	fsr2h,f,c
  3565  000128  5046               	movf	_NeightAdress5+1,w,c	;volatile
  3566  00012A  6EDF               	movwf	indf2,c
  3567                           
  3568                           ;FRAME.c: 731: message->data[1] = NeightAdress5 & 0b11111111;
  3569  00012C  EE20 F009          	lfsr	2,9
  3570  000130  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3571  000132  26D9               	addwf	fsr2l,f,c
  3572  000134  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3573  000136  22DA               	addwfc	fsr2h,f,c
  3574  000138  C045  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3575                           
  3576                           ;FRAME.c: 732: message->data[2] = (NeightAdress6>> 8);
  3577  00013C  EE20 F00A          	lfsr	2,10
  3578  000140  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3579  000142  26D9               	addwf	fsr2l,f,c
  3580  000144  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3581  000146  22DA               	addwfc	fsr2h,f,c
  3582  000148  5044               	movf	_NeightAdress6+1,w,c	;volatile
  3583  00014A  6EDF               	movwf	indf2,c
  3584                           
  3585                           ;FRAME.c: 733: message->data[3] = NeightAdress6 & 0b11111111;
  3586  00014C  EE20 F00B          	lfsr	2,11
  3587  000150  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3588  000152  26D9               	addwf	fsr2l,f,c
  3589  000154  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3590  000156  22DA               	addwfc	fsr2h,f,c
  3591  000158  C043  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3592                           
  3593                           ;FRAME.c: 734: message->data[4] = (NeightAdress7>> 8);
  3594  00015C  EE20 F00C          	lfsr	2,12
  3595  000160  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3596  000162  26D9               	addwf	fsr2l,f,c
  3597  000164  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3598  000166  22DA               	addwfc	fsr2h,f,c
  3599  000168  5042               	movf	_NeightAdress7+1,w,c	;volatile
  3600  00016A  6EDF               	movwf	indf2,c
  3601                           
  3602                           ;FRAME.c: 735: message->data[5] = NeightAdress7 & 0b11111111;
  3603  00016C  EE20 F00D          	lfsr	2,13
  3604  000170  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3605  000172  26D9               	addwf	fsr2l,f,c
  3606  000174  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3607  000176  22DA               	addwfc	fsr2h,f,c
  3608  000178  C041  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3609                           
  3610                           ;FRAME.c: 736: message->data[6] = (NeightAdress8>> 8);
  3611  00017C  EE20 F00E          	lfsr	2,14
  3612  000180  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3613  000182  26D9               	addwf	fsr2l,f,c
  3614  000184  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3615  000186  22DA               	addwfc	fsr2h,f,c
  3616  000188  5040               	movf	_NeightAdress8+1,w,c	;volatile
  3617  00018A  6EDF               	movwf	indf2,c
  3618                           
  3619                           ;FRAME.c: 737: message->data[7] = NeightAdress8 & 0b11111111;
  3620  00018C  EE20 F00F          	lfsr	2,15
  3621  000190  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3622  000192  26D9               	addwf	fsr2l,f,c
  3623  000194  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3624  000196  22DA               	addwfc	fsr2h,f,c
  3625  000198  C03F  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3626  00019C  0012               	return	
  3627  00019E                     l4475:
  3628                           
  3629                           ;FRAME.c: 743: else;FRAME.c: 744: {;FRAME.c: 747: if(kier == 0)
  3630  00019E  500E               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3631  0001A0  100F               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3632  0001A2  A4D8               	btfss	status,2,c
  3633  0001A4  D063               	goto	l4481
  3634                           
  3635                           ;FRAME.c: 748: {;FRAME.c: 749: NeightAdress1 = (message->data[0] << 8)| message->data[1]
      +                          ;
  3636  0001A6  EE20 F008          	lfsr	2,8
  3637  0001AA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3638  0001AC  26D9               	addwf	fsr2l,f,c
  3639  0001AE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3640  0001B0  22DA               	addwfc	fsr2h,f,c
  3641  0001B2  50DF               	movf	indf2,w,c
  3642  0001B4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3643  0001B6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3644  0001B8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3645  0001BA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3646  0001BC  EE20 F009          	lfsr	2,9
  3647  0001C0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3648  0001C2  26D9               	addwf	fsr2l,f,c
  3649  0001C4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3650  0001C6  22DA               	addwfc	fsr2h,f,c
  3651  0001C8  50DF               	movf	indf2,w,c
  3652  0001CA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3653  0001CC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3654  0001CE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3655  0001D0  6E4B               	movwf	_NeightAdress1,c	;volatile
  3656  0001D2  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3657  0001D4  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  3658                           
  3659                           ;FRAME.c: 750: NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3660  0001D6  EE20 F00A          	lfsr	2,10
  3661  0001DA  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3662  0001DC  26D9               	addwf	fsr2l,f,c
  3663  0001DE  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3664  0001E0  22DA               	addwfc	fsr2h,f,c
  3665  0001E2  50DF               	movf	indf2,w,c
  3666  0001E4  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3667  0001E6  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3668  0001E8  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3669  0001EA  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3670  0001EC  EE20 F00B          	lfsr	2,11
  3671  0001F0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3672  0001F2  26D9               	addwf	fsr2l,f,c
  3673  0001F4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3674  0001F6  22DA               	addwfc	fsr2h,f,c
  3675  0001F8  50DF               	movf	indf2,w,c
  3676  0001FA  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3677  0001FC  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3678  0001FE  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3679  000200  6E58               	movwf	_NeightAdress2,c	;volatile
  3680  000202  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3681  000204  6E59               	movwf	_NeightAdress2+1,c	;volatile
  3682                           
  3683                           ;FRAME.c: 751: NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3684  000206  EE20 F00C          	lfsr	2,12
  3685  00020A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3686  00020C  26D9               	addwf	fsr2l,f,c
  3687  00020E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3688  000210  22DA               	addwfc	fsr2h,f,c
  3689  000212  50DF               	movf	indf2,w,c
  3690  000214  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3691  000216  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3692  000218  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3693  00021A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3694  00021C  EE20 F00D          	lfsr	2,13
  3695  000220  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3696  000222  26D9               	addwf	fsr2l,f,c
  3697  000224  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3698  000226  22DA               	addwfc	fsr2h,f,c
  3699  000228  50DF               	movf	indf2,w,c
  3700  00022A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3701  00022C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3702  00022E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3703  000230  6E49               	movwf	_NeightAdress3,c	;volatile
  3704  000232  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3705  000234  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  3706                           
  3707                           ;FRAME.c: 752: NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3708  000236  EE20 F00E          	lfsr	2,14
  3709  00023A  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3710  00023C  26D9               	addwf	fsr2l,f,c
  3711  00023E  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3712  000240  22DA               	addwfc	fsr2h,f,c
  3713  000242  50DF               	movf	indf2,w,c
  3714  000244  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3715  000246  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3716  000248  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3717  00024A  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3718  00024C  EE20 F00F          	lfsr	2,15
  3719  000250  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3720  000252  26D9               	addwf	fsr2l,f,c
  3721  000254  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3722  000256  22DA               	addwfc	fsr2h,f,c
  3723  000258  50DF               	movf	indf2,w,c
  3724  00025A  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3725  00025C  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3726  00025E  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3727  000260  6E47               	movwf	_NeightAdress4,c	;volatile
  3728  000262  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3729  000264  6E48               	movwf	_NeightAdress4+1,c	;volatile
  3730  000266                     l4479:
  3731                           
  3732                           ;FRAME.c: 753: CAN_SetupFilter_Ne();
  3733  000266  ECA6  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  3734                           
  3735                           ;FRAME.c: 756: }
  3736  00026A  0012               	return	
  3737  00026C                     l4481:
  3738                           
  3739                           ;FRAME.c: 757: else;FRAME.c: 758: {;FRAME.c: 759: NeightAdress5 = (message->data[0] << 8
      +                          )| message->data[1];
  3740  00026C  EE20 F008          	lfsr	2,8
  3741  000270  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3742  000272  26D9               	addwf	fsr2l,f,c
  3743  000274  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3744  000276  22DA               	addwfc	fsr2h,f,c
  3745  000278  50DF               	movf	indf2,w,c
  3746  00027A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3747  00027C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3748  00027E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3749  000280  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3750  000282  EE20 F009          	lfsr	2,9
  3751  000286  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3752  000288  26D9               	addwf	fsr2l,f,c
  3753  00028A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3754  00028C  22DA               	addwfc	fsr2h,f,c
  3755  00028E  50DF               	movf	indf2,w,c
  3756  000290  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3757  000292  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3758  000294  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3759  000296  6E45               	movwf	_NeightAdress5,c	;volatile
  3760  000298  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3761  00029A  6E46               	movwf	_NeightAdress5+1,c	;volatile
  3762                           
  3763                           ;FRAME.c: 760: NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3764  00029C  EE20 F00A          	lfsr	2,10
  3765  0002A0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3766  0002A2  26D9               	addwf	fsr2l,f,c
  3767  0002A4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3768  0002A6  22DA               	addwfc	fsr2h,f,c
  3769  0002A8  50DF               	movf	indf2,w,c
  3770  0002AA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3771  0002AC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3772  0002AE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3773  0002B0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3774  0002B2  EE20 F00B          	lfsr	2,11
  3775  0002B6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3776  0002B8  26D9               	addwf	fsr2l,f,c
  3777  0002BA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3778  0002BC  22DA               	addwfc	fsr2h,f,c
  3779  0002BE  50DF               	movf	indf2,w,c
  3780  0002C0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3781  0002C2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3782  0002C4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3783  0002C6  6E43               	movwf	_NeightAdress6,c	;volatile
  3784  0002C8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3785  0002CA  6E44               	movwf	_NeightAdress6+1,c	;volatile
  3786                           
  3787                           ;FRAME.c: 761: NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3788  0002CC  EE20 F00C          	lfsr	2,12
  3789  0002D0  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3790  0002D2  26D9               	addwf	fsr2l,f,c
  3791  0002D4  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3792  0002D6  22DA               	addwfc	fsr2h,f,c
  3793  0002D8  50DF               	movf	indf2,w,c
  3794  0002DA  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3795  0002DC  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3796  0002DE  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3797  0002E0  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3798  0002E2  EE20 F00D          	lfsr	2,13
  3799  0002E6  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3800  0002E8  26D9               	addwf	fsr2l,f,c
  3801  0002EA  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3802  0002EC  22DA               	addwfc	fsr2h,f,c
  3803  0002EE  50DF               	movf	indf2,w,c
  3804  0002F0  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3805  0002F2  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3806  0002F4  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3807  0002F6  6E41               	movwf	_NeightAdress7,c	;volatile
  3808  0002F8  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3809  0002FA  6E42               	movwf	_NeightAdress7+1,c	;volatile
  3810                           
  3811                           ;FRAME.c: 762: NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3812  0002FC  EE20 F00E          	lfsr	2,14
  3813  000300  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3814  000302  26D9               	addwf	fsr2l,f,c
  3815  000304  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3816  000306  22DA               	addwfc	fsr2h,f,c
  3817  000308  50DF               	movf	indf2,w,c
  3818  00030A  6E0A               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3819  00030C  500A               	movf	??_FRAME_AdressOfNeighbors,w,c
  3820  00030E  6E0C               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3821  000310  6A0B               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3822  000312  EE20 F00F          	lfsr	2,15
  3823  000316  5006               	movf	FRAME_AdressOfNeighbors@message,w,c
  3824  000318  26D9               	addwf	fsr2l,f,c
  3825  00031A  5007               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3826  00031C  22DA               	addwfc	fsr2h,f,c
  3827  00031E  50DF               	movf	indf2,w,c
  3828  000320  6E0D               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3829  000322  500D               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3830  000324  100B               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3831  000326  6E3F               	movwf	_NeightAdress8,c	;volatile
  3832  000328  500C               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3833  00032A  6E40               	movwf	_NeightAdress8+1,c	;volatile
  3834  00032C  D79C               	goto	l4479
  3835  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3836                           	opt callstack 0
  3837                           
  3838 ;; *************** function _FRAME_AccelerometerStatus *****************
  3839 ;; Defined at:
  3840 ;;		line 197 in file "FRAME.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  message         2    7[COMRAM] PTR struct .
  3843 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;Total ram usage:        3 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    4
  3862 ;; This function calls:
  3863 ;;		_MOCK_Klikniecie_Spadek
  3864 ;;		_MOCK_PrzyspieszenieX
  3865 ;;		_MOCK_PrzyspieszenieY
  3866 ;;		_MOCK_PrzyspieszenieZ
  3867 ;; This function is called by:
  3868 ;;		_FRAME_HandleCanFrame
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text27
  3873  0013D4                     __ptext27:
  3874                           	opt callstack 0
  3875  0013D4                     _FRAME_AccelerometerStatus:
  3876                           	opt callstack 24
  3877                           
  3878                           ;FRAME.c: 199: if(message->message_type == 0x02)
  3879                           
  3880                           ;incstack = 0
  3881  0013D4  EE20 F001          	lfsr	2,1
  3882  0013D8  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3883  0013DA  26D9               	addwf	fsr2l,f,c
  3884  0013DC  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3885  0013DE  22DA               	addwfc	fsr2h,f,c
  3886  0013E0  0E02               	movlw	2
  3887  0013E2  18DE               	xorwf	postinc2,w,c
  3888  0013E4  A4D8               	btfss	status,2,c
  3889  0013E6  0012               	return	
  3890                           
  3891                           ;FRAME.c: 200: {;FRAME.c: 201: message->data_length = 4;
  3892  0013E8  EE20 F010          	lfsr	2,16
  3893  0013EC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3894  0013EE  26D9               	addwf	fsr2l,f,c
  3895  0013F0  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3896  0013F2  22DA               	addwfc	fsr2h,f,c
  3897  0013F4  0E04               	movlw	4
  3898  0013F6  6EDF               	movwf	indf2,c
  3899                           
  3900                           ;FRAME.c: 205: message->data[0] = MOCK_PrzyspieszenieX();
  3901  0013F8  EE20 F008          	lfsr	2,8
  3902  0013FC  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3903  0013FE  26D9               	addwf	fsr2l,f,c
  3904  001400  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3905  001402  22DA               	addwfc	fsr2h,f,c
  3906  001404  ECAE  F00D         	call	_MOCK_PrzyspieszenieX	;wreg free
  3907  001408  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3908  00140A  6EDF               	movwf	indf2,c
  3909                           
  3910                           ;FRAME.c: 206: message->data[1] = MOCK_PrzyspieszenieY();
  3911  00140C  EE20 F009          	lfsr	2,9
  3912  001410  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3913  001412  26D9               	addwf	fsr2l,f,c
  3914  001414  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3915  001416  22DA               	addwfc	fsr2h,f,c
  3916  001418  ECA9  F00D         	call	_MOCK_PrzyspieszenieY	;wreg free
  3917  00141C  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3918  00141E  6EDF               	movwf	indf2,c
  3919                           
  3920                           ;FRAME.c: 207: message->data[2] = MOCK_PrzyspieszenieZ();
  3921  001420  EE20 F00A          	lfsr	2,10
  3922  001424  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3923  001426  26D9               	addwf	fsr2l,f,c
  3924  001428  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3925  00142A  22DA               	addwfc	fsr2h,f,c
  3926  00142C  ECA4  F00D         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3927  001430  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3928  001432  6EDF               	movwf	indf2,c
  3929                           
  3930                           ;FRAME.c: 208: message->data[3] = MOCK_Klikniecie_Spadek();
  3931  001434  EE20 F00B          	lfsr	2,11
  3932  001438  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3933  00143A  26D9               	addwf	fsr2l,f,c
  3934  00143C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3935  00143E  22DA               	addwfc	fsr2h,f,c
  3936  001440  ECB3  F00D         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3937  001444  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3938  001446  6EDF               	movwf	indf2,c
  3939                           
  3940                           ;FRAME.c: 209: }
  3941  001448  0012               	return		;funcret
  3942  00144A                     __end_of_FRAME_AccelerometerStatus:
  3943                           	opt callstack 0
  3944                           
  3945 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3946 ;; Defined at:
  3947 ;;		line 73 in file "MOC_Funct.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  2    5[COMRAM] unsigned int 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;Total ram usage:        2 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    3
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_FRAME_AccelerometerStatus
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text28
  3976  001B48                     __ptext28:
  3977                           	opt callstack 0
  3978  001B48                     _MOCK_PrzyspieszenieZ:
  3979                           	opt callstack 24
  3980                           
  3981                           ;MOC_Funct.c: 75: return 0xFE;
  3982                           
  3983                           ;incstack = 0
  3984  001B48  0E00               	movlw	0
  3985  001B4A  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3986  001B4C  0EFE               	movlw	254
  3987  001B4E  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3988  001B50  0012               	return		;funcret
  3989  001B52                     __end_of_MOCK_PrzyspieszenieZ:
  3990                           	opt callstack 0
  3991                           
  3992 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3993 ;; Defined at:
  3994 ;;		line 69 in file "MOC_Funct.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2    5[COMRAM] unsigned int 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    3
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_FRAME_AccelerometerStatus
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text29
  4023  001B52                     __ptext29:
  4024                           	opt callstack 0
  4025  001B52                     _MOCK_PrzyspieszenieY:
  4026                           	opt callstack 24
  4027                           
  4028                           ;MOC_Funct.c: 71: return 0xFE;
  4029                           
  4030                           ;incstack = 0
  4031  001B52  0E00               	movlw	0
  4032  001B54  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  4033  001B56  0EFE               	movlw	254
  4034  001B58  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  4035  001B5A  0012               	return		;funcret
  4036  001B5C                     __end_of_MOCK_PrzyspieszenieY:
  4037                           	opt callstack 0
  4038                           
  4039 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4040 ;; Defined at:
  4041 ;;		line 64 in file "MOC_Funct.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2    5[COMRAM] unsigned int 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;Total ram usage:        2 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    3
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_FRAME_AccelerometerStatus
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text30
  4070  001B5C                     __ptext30:
  4071                           	opt callstack 0
  4072  001B5C                     _MOCK_PrzyspieszenieX:
  4073                           	opt callstack 24
  4074                           
  4075                           ;MOC_Funct.c: 66: return 0xFE;
  4076                           
  4077                           ;incstack = 0
  4078  001B5C  0E00               	movlw	0
  4079  001B5E  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4080  001B60  0EFE               	movlw	254
  4081  001B62  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  4082  001B64  0012               	return		;funcret
  4083  001B66                     __end_of_MOCK_PrzyspieszenieX:
  4084                           	opt callstack 0
  4085                           
  4086 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4087 ;; Defined at:
  4088 ;;		line 77 in file "MOC_Funct.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  2    5[COMRAM] unsigned int 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;Total ram usage:        2 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    3
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_FRAME_AccelerometerStatus
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text31
  4117  001B66                     __ptext31:
  4118                           	opt callstack 0
  4119  001B66                     _MOCK_Klikniecie_Spadek:
  4120                           	opt callstack 24
  4121                           
  4122                           ;MOC_Funct.c: 79: return 0b00000000;
  4123                           
  4124                           ;incstack = 0
  4125  001B66  0E00               	movlw	0
  4126  001B68  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4127  001B6A  0E00               	movlw	0
  4128  001B6C  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  4129  001B6E  0012               	return		;funcret
  4130  001B70                     __end_of_MOCK_Klikniecie_Spadek:
  4131                           	opt callstack 0
  4132                           
  4133 ;; *************** function _CAN_SendFrame *****************
  4134 ;; Defined at:
  4135 ;;		line 247 in file "CAN.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  message         2   10[COMRAM] PTR struct .
  4138 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;Total ram usage:        5 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    4
  4157 ;; This function calls:
  4158 ;;		_CAN_MoveBuffIntoFrame
  4159 ;; This function is called by:
  4160 ;;		_FRAME_HandleCanFrame
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text32
  4165  000906                     __ptext32:
  4166                           	opt callstack 0
  4167  000906                     _CAN_SendFrame:
  4168                           	opt callstack 24
  4169                           
  4170                           ;CAN.c: 252: {;CAN.c: 253: ECANCON = 0x83;
  4171                           
  4172                           ;incstack = 0
  4173                           ;CAN.c: 251: for(;;)
  4174  000906  0E83               	movlw	131
  4175  000908  6E77               	movwf	3959,c	;volatile
  4176                           
  4177                           ;CAN.c: 254: if(!RXB0CONbits.FILHIT3)
  4178  00090A  A660               	btfss	3936,3,c	;volatile
  4179  00090C  D00A               	goto	l290
  4180                           
  4181                           ;CAN.c: 258: };CAN.c: 259: ECANCON = 0x84;
  4182  00090E  0E84               	movlw	132
  4183  000910  6E77               	movwf	3959,c	;volatile
  4184                           
  4185                           ;CAN.c: 260: if(!RXB0CONbits.FILHIT3)
  4186  000912  A660               	btfss	3936,3,c	;volatile
  4187  000914  D006               	goto	l290
  4188                           
  4189                           ;CAN.c: 264: };CAN.c: 265: ECANCON = 0x85;
  4190  000916  0E85               	movlw	133
  4191  000918  6E77               	movwf	3959,c	;volatile
  4192                           
  4193                           ;CAN.c: 266: if(!RXB0CONbits.FILHIT3)
  4194  00091A  A660               	btfss	3936,3,c	;volatile
  4195  00091C  D002               	goto	l290
  4196  00091E  D7F3               	goto	_CAN_SendFrame
  4197  000920                     l291:
  4198  000920  00FF               	reset		;# 
  4199  000922                     l290:
  4200  000922  B474               	btfsc	3956,2,c	;volatile
  4201  000924  D7FD               	goto	l291
  4202                           
  4203                           ;CAN.c: 276: };CAN.c: 277: DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4204  000926  0E00               	movlw	0
  4205  000928  0100               	movlb	0	; () banked
  4206  00092A  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;CAN.c: 278: RXB0EIDL = message->id.v[0];
  4210  00092C  EE20 F004          	lfsr	2,4
  4211  000930  500B               	movf	CAN_SendFrame@message,w,c
  4212  000932  26D9               	addwf	fsr2l,f,c
  4213  000934  500C               	movf	CAN_SendFrame@message+1,w,c
  4214  000936  22DA               	addwfc	fsr2h,f,c
  4215  000938  50DF               	movf	indf2,w,c
  4216  00093A  6E64               	movwf	3940,c	;volatile
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;CAN.c: 279: RXB0EIDH = message->id.v[1];
  4220  00093C  EE20 F005          	lfsr	2,5
  4221  000940  500B               	movf	CAN_SendFrame@message,w,c
  4222  000942  26D9               	addwf	fsr2l,f,c
  4223  000944  500C               	movf	CAN_SendFrame@message+1,w,c
  4224  000946  22DA               	addwfc	fsr2h,f,c
  4225  000948  50DF               	movf	indf2,w,c
  4226  00094A  6E63               	movwf	3939,c	;volatile
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;CAN.c: 280: RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4230  00094C  EE20 F006          	lfsr	2,6
  4231  000950  500B               	movf	CAN_SendFrame@message,w,c
  4232  000952  26D9               	addwf	fsr2l,f,c
  4233  000954  500C               	movf	CAN_SendFrame@message+1,w,c
  4234  000956  22DA               	addwfc	fsr2h,f,c
  4235  000958  50DF               	movf	indf2,w,c
  4236  00095A  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4237  00095C  0E03               	movlw	3
  4238  00095E  160D               	andwf	??_CAN_SendFrame,f,c
  4239  000960  EE20 F006          	lfsr	2,6
  4240  000964  500B               	movf	CAN_SendFrame@message,w,c
  4241  000966  26D9               	addwf	fsr2l,f,c
  4242  000968  500C               	movf	CAN_SendFrame@message+1,w,c
  4243  00096A  22DA               	addwfc	fsr2h,f,c
  4244  00096C  50DF               	movf	indf2,w,c
  4245  00096E  0BFC               	andlw	252
  4246  000970  0D08               	mullw	8
  4247  000972  50F3               	movf	prodl,w,c
  4248  000974  100D               	iorwf	??_CAN_SendFrame,w,c
  4249  000976  6E62               	movwf	3938,c	;volatile
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;CAN.c: 281: RXB0SIDLbits.EXID = 1;
  4253  000978  8662               	bsf	3938,3,c	;volatile
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;CAN.c: 282: RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4257  00097A  EE20 F006          	lfsr	2,6
  4258  00097E  500B               	movf	CAN_SendFrame@message,w,c
  4259  000980  26D9               	addwf	fsr2l,f,c
  4260  000982  500C               	movf	CAN_SendFrame@message+1,w,c
  4261  000984  22DA               	addwfc	fsr2h,f,c
  4262  000986  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  4263  00098A  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  4264  00098E  0E05               	movlw	5
  4265  000990  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4266  000992                     u2615:
  4267  000992  90D8               	bcf	status,0,c
  4268  000994  320E               	rrcf	??_CAN_SendFrame+1,f,c
  4269  000996  320D               	rrcf	??_CAN_SendFrame,f,c
  4270  000998  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4271  00099A  D7FB               	goto	u2615
  4272  00099C  500D               	movf	??_CAN_SendFrame,w,c
  4273  00099E  6E61               	movwf	3937,c	;volatile
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;CAN.c: 284: RXB0DLC = 0;
  4277  0009A0  0E00               	movlw	0
  4278  0009A2  6E65               	movwf	3941,c	;volatile
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;CAN.c: 286: if(message->message_type==0x02)
  4282  0009A4  EE20 F001          	lfsr	2,1
  4283  0009A8  500B               	movf	CAN_SendFrame@message,w,c
  4284  0009AA  26D9               	addwf	fsr2l,f,c
  4285  0009AC  500C               	movf	CAN_SendFrame@message+1,w,c
  4286  0009AE  22DA               	addwfc	fsr2h,f,c
  4287  0009B0  0E02               	movlw	2
  4288  0009B2  18DE               	xorwf	postinc2,w,c
  4289  0009B4  A4D8               	btfss	status,2,c
  4290  0009B6  D002               	goto	l4285
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;CAN.c: 287: {;CAN.c: 288: RXB0DLCbits.RXRTR = 1;
  4294  0009B8  8C65               	bsf	3941,6,c	;volatile
  4295                           
  4296                           ;CAN.c: 289: }
  4297  0009BA  D05A               	goto	l4289
  4298  0009BC                     l4285:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;CAN.c: 290: else;CAN.c: 291: {;CAN.c: 292: RXB0DLCbits.DLC0 = (message->data_length & 0
      +                          x0F);
  4302  0009BC  EE20 F010          	lfsr	2,16
  4303  0009C0  500B               	movf	CAN_SendFrame@message,w,c
  4304  0009C2  26D9               	addwf	fsr2l,f,c
  4305  0009C4  500C               	movf	CAN_SendFrame@message+1,w,c
  4306  0009C6  22DA               	addwfc	fsr2h,f,c
  4307  0009C8  50DF               	movf	indf2,w,c
  4308  0009CA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4309  0009CC  0E0F               	movlw	15
  4310  0009CE  160D               	andwf	??_CAN_SendFrame,f,c
  4311  0009D0  5065               	movf	3941,w,c	;volatile
  4312  0009D2  180D               	xorwf	??_CAN_SendFrame,w,c
  4313  0009D4  0BFE               	andlw	-2
  4314  0009D6  180D               	xorwf	??_CAN_SendFrame,w,c
  4315  0009D8  6E65               	movwf	3941,c	;volatile
  4316                           
  4317                           ;CAN.c: 293: RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4318  0009DA  EE20 F010          	lfsr	2,16
  4319  0009DE  500B               	movf	CAN_SendFrame@message,w,c
  4320  0009E0  26D9               	addwf	fsr2l,f,c
  4321  0009E2  500C               	movf	CAN_SendFrame@message+1,w,c
  4322  0009E4  22DA               	addwfc	fsr2h,f,c
  4323  0009E6  50DF               	movf	indf2,w,c
  4324  0009E8  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4325  0009EA  90D8               	bcf	status,0,c
  4326  0009EC  320D               	rrcf	??_CAN_SendFrame,f,c
  4327  0009EE  0E07               	movlw	7
  4328  0009F0  160D               	andwf	??_CAN_SendFrame,f,c
  4329  0009F2  460D               	rlncf	??_CAN_SendFrame,f,c
  4330  0009F4  5065               	movf	3941,w,c	;volatile
  4331  0009F6  180D               	xorwf	??_CAN_SendFrame,w,c
  4332  0009F8  0BFD               	andlw	-3
  4333  0009FA  180D               	xorwf	??_CAN_SendFrame,w,c
  4334  0009FC  6E65               	movwf	3941,c	;volatile
  4335                           
  4336                           ;CAN.c: 294: RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4337  0009FE  EE20 F010          	lfsr	2,16
  4338  000A02  500B               	movf	CAN_SendFrame@message,w,c
  4339  000A04  26D9               	addwf	fsr2l,f,c
  4340  000A06  500C               	movf	CAN_SendFrame@message+1,w,c
  4341  000A08  22DA               	addwfc	fsr2h,f,c
  4342  000A0A  50DF               	movf	indf2,w,c
  4343  000A0C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4344  000A0E  90D8               	bcf	status,0,c
  4345  000A10  320D               	rrcf	??_CAN_SendFrame,f,c
  4346  000A12  90D8               	bcf	status,0,c
  4347  000A14  320D               	rrcf	??_CAN_SendFrame,f,c
  4348  000A16  0E03               	movlw	3
  4349  000A18  160D               	andwf	??_CAN_SendFrame,f,c
  4350  000A1A  460D               	rlncf	??_CAN_SendFrame,f,c
  4351  000A1C  460D               	rlncf	??_CAN_SendFrame,f,c
  4352  000A1E  5065               	movf	3941,w,c	;volatile
  4353  000A20  180D               	xorwf	??_CAN_SendFrame,w,c
  4354  000A22  0BFB               	andlw	-5
  4355  000A24  180D               	xorwf	??_CAN_SendFrame,w,c
  4356  000A26  6E65               	movwf	3941,c	;volatile
  4357                           
  4358                           ;CAN.c: 295: RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4359  000A28  EE20 F010          	lfsr	2,16
  4360  000A2C  500B               	movf	CAN_SendFrame@message,w,c
  4361  000A2E  26D9               	addwf	fsr2l,f,c
  4362  000A30  500C               	movf	CAN_SendFrame@message+1,w,c
  4363  000A32  22DA               	addwfc	fsr2h,f,c
  4364  000A34  50DF               	movf	indf2,w,c
  4365  000A36  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  4366  000A38  90D8               	bcf	status,0,c
  4367  000A3A  320D               	rrcf	??_CAN_SendFrame,f,c
  4368  000A3C  90D8               	bcf	status,0,c
  4369  000A3E  320D               	rrcf	??_CAN_SendFrame,f,c
  4370  000A40  90D8               	bcf	status,0,c
  4371  000A42  320D               	rrcf	??_CAN_SendFrame,f,c
  4372  000A44  0E01               	movlw	1
  4373  000A46  160D               	andwf	??_CAN_SendFrame,f,c
  4374  000A48  460D               	rlncf	??_CAN_SendFrame,f,c
  4375  000A4A  460D               	rlncf	??_CAN_SendFrame,f,c
  4376  000A4C  460D               	rlncf	??_CAN_SendFrame,f,c
  4377  000A4E  5065               	movf	3941,w,c	;volatile
  4378  000A50  180D               	xorwf	??_CAN_SendFrame,w,c
  4379  000A52  0BF7               	andlw	-9
  4380  000A54  180D               	xorwf	??_CAN_SendFrame,w,c
  4381  000A56  6E65               	movwf	3941,c	;volatile
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;CAN.c: 297: CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4385  000A58  0E66               	movlw	102
  4386  000A5A  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4387  000A5C  0E0F               	movlw	15
  4388  000A5E  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4389  000A60  0E08               	movlw	8
  4390  000A62  240B               	addwf	CAN_SendFrame@message,w,c
  4391  000A64  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4392  000A66  0E00               	movlw	0
  4393  000A68  200C               	addwfc	CAN_SendFrame@message+1,w,c
  4394  000A6A  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4395  000A6C  ECF4  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4396  000A70                     l4289:
  4397                           
  4398                           ;CAN.c: 298: };CAN.c: 300: RXB0CONbits.FILHIT3 = 1;
  4399  000A70  8660               	bsf	3936,3,c	;volatile
  4400                           
  4401                           ;CAN.c: 302: DetectorLedRadar.Flags.ramkaTx = 1;
  4402  000A72  0100               	movlb	0	; () banked
  4403  000A74  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4404                           
  4405                           ; BSR set to: 0
  4406  000A76  0012               	return		;funcret
  4407  000A78                     __end_of_CAN_SendFrame:
  4408                           	opt callstack 0
  4409                           
  4410 ;; *************** function _CAN_GenID *****************
  4411 ;; Defined at:
  4412 ;;		line 446 in file "CAN.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  message         2    5[COMRAM] PTR struct .
  4415 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4416 ;;  frameID         1    7[COMRAM] unsigned char 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4428 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;Total ram usage:        5 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    3
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_FRAME_HandleCanFrame
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text33
  4443  00135C                     __ptext33:
  4444                           	opt callstack 0
  4445  00135C                     _CAN_GenID:
  4446                           	opt callstack 25
  4447                           
  4448                           ;CAN.c: 449: message->frame_type = 0x03;
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;incstack = 0
  4452  00135C  EE20 F002          	lfsr	2,2
  4453  001360  5006               	movf	CAN_GenID@message,w,c
  4454  001362  26D9               	addwf	fsr2l,f,c
  4455  001364  5007               	movf	CAN_GenID@message+1,w,c
  4456  001366  22DA               	addwfc	fsr2h,f,c
  4457  001368  0E03               	movlw	3
  4458  00136A  6EDF               	movwf	indf2,c
  4459                           
  4460                           ;CAN.c: 450: message->message_type = 0x01;
  4461  00136C  EE20 F001          	lfsr	2,1
  4462  001370  5006               	movf	CAN_GenID@message,w,c
  4463  001372  26D9               	addwf	fsr2l,f,c
  4464  001374  5007               	movf	CAN_GenID@message+1,w,c
  4465  001376  22DA               	addwfc	fsr2h,f,c
  4466  001378  0E01               	movlw	1
  4467  00137A  6EDF               	movwf	indf2,c
  4468                           
  4469                           ;CAN.c: 451: message->id.w[1] = (WORD)frameID * (WORD)4;
  4470  00137C  5008               	movf	CAN_GenID@frameID,w,c
  4471  00137E  6E09               	movwf	??_CAN_GenID& (0+255),c
  4472  001380  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  4473  001382  90D8               	bcf	status,0,c
  4474  001384  3609               	rlcf	??_CAN_GenID,f,c
  4475  001386  360A               	rlcf	??_CAN_GenID+1,f,c
  4476  001388  90D8               	bcf	status,0,c
  4477  00138A  3609               	rlcf	??_CAN_GenID,f,c
  4478  00138C  360A               	rlcf	??_CAN_GenID+1,f,c
  4479  00138E  EE20 F006          	lfsr	2,6
  4480  001392  5006               	movf	CAN_GenID@message,w,c
  4481  001394  26D9               	addwf	fsr2l,f,c
  4482  001396  5007               	movf	CAN_GenID@message+1,w,c
  4483  001398  22DA               	addwfc	fsr2h,f,c
  4484  00139A  C009  FFDE         	movff	??_CAN_GenID,postinc2
  4485  00139E  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  4486                           
  4487                           ;CAN.c: 452: message->id.w[0] = DaneCan.adresCAN;
  4488  0013A2  EE20 F004          	lfsr	2,4
  4489  0013A6  5006               	movf	CAN_GenID@message,w,c
  4490  0013A8  26D9               	addwf	fsr2l,f,c
  4491  0013AA  5007               	movf	CAN_GenID@message+1,w,c
  4492  0013AC  22DA               	addwfc	fsr2h,f,c
  4493  0013AE  C02D  FFDE         	movff	_DaneCan+2,postinc2
  4494  0013B2  C02E  FFDD         	movff	_DaneCan+3,postdec2
  4495                           
  4496                           ;CAN.c: 455: message ->id.bits.b16 = 0;
  4497  0013B6  EE20 F006          	lfsr	2,6
  4498  0013BA  5006               	movf	CAN_GenID@message,w,c
  4499  0013BC  26D9               	addwf	fsr2l,f,c
  4500  0013BE  5007               	movf	CAN_GenID@message+1,w,c
  4501  0013C0  22DA               	addwfc	fsr2h,f,c
  4502  0013C2  90DF               	bcf	indf2,0,c
  4503                           
  4504                           ;CAN.c: 456: message ->id.bits.b17 = 0;
  4505  0013C4  EE20 F006          	lfsr	2,6
  4506  0013C8  5006               	movf	CAN_GenID@message,w,c
  4507  0013CA  26D9               	addwf	fsr2l,f,c
  4508  0013CC  5007               	movf	CAN_GenID@message+1,w,c
  4509  0013CE  22DA               	addwfc	fsr2h,f,c
  4510  0013D0  92DF               	bcf	indf2,1,c
  4511  0013D2  0012               	return		;funcret
  4512  0013D4                     __end_of_CAN_GenID:
  4513                           	opt callstack 0
  4514                           
  4515 ;; *************** function _CAN_TakeFrame *****************
  4516 ;; Defined at:
  4517 ;;		line 311 in file "CAN.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  message         2   13[COMRAM] PTR struct .
  4520 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  k               1   18[COMRAM] unsigned char 
  4523 ;;  tempCON         1   17[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      enum E10294
  4526 ;; Registers used:
  4527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;Total ram usage:        6 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    4
  4540 ;; This function calls:
  4541 ;;		_CAN_MoveBuffIntoFrame
  4542 ;;		___awdiv
  4543 ;; This function is called by:
  4544 ;;		_TRM_DataTransmition
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text34
  4549  00032E                     __ptext34:
  4550                           	opt callstack 0
  4551  00032E                     _CAN_TakeFrame:
  4552                           	opt callstack 25
  4553                           
  4554                           ;CAN.c: 313: BYTE k, tempCON;;CAN.c: 315: k = CANCON&0x0F;
  4555                           
  4556                           ;incstack = 0
  4557  00032E  506F               	movf	3951,w,c	;volatile
  4558  000330  0B0F               	andlw	15
  4559  000332  6E13               	movwf	CAN_TakeFrame@k,c
  4560                           
  4561                           ;CAN.c: 317: ECANCON = 0x90 | k;
  4562  000334  5013               	movf	CAN_TakeFrame@k,w,c
  4563  000336  0990               	iorlw	144
  4564  000338  6E77               	movwf	3959,c	;volatile
  4565                           
  4566                           ;CAN.c: 320: switch(k)
  4567  00033A  D018               	goto	l4563
  4568  00033C                     l299:
  4569                           
  4570                           ;CAN.c: 323: tempCON = RXB0CON;
  4571  00033C  CF60 F012          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4572                           
  4573                           ;CAN.c: 324: break;
  4574  000340  D02E               	goto	l300
  4575  000342                     l301:
  4576                           
  4577                           ;CAN.c: 326: tempCON = RXB1CON;
  4578  000342  CF50 F012          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4579                           
  4580                           ;CAN.c: 327: break;
  4581  000346  D02B               	goto	l300
  4582  000348                     l302:
  4583                           
  4584                           ;CAN.c: 329: tempCON = B0CON;
  4585  000348  CE20 F012          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4586                           
  4587                           ;CAN.c: 330: break;
  4588  00034C  D028               	goto	l300
  4589  00034E                     l303:
  4590                           
  4591                           ;CAN.c: 332: tempCON = B1CON;
  4592  00034E  CE30 F012          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4593                           
  4594                           ;CAN.c: 333: break;
  4595  000352  D025               	goto	l300
  4596  000354                     l304:
  4597                           
  4598                           ;CAN.c: 335: tempCON = B2CON;
  4599  000354  CE40 F012          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4600                           
  4601                           ;CAN.c: 336: break;
  4602  000358  D022               	goto	l300
  4603  00035A                     l305:
  4604                           
  4605                           ;CAN.c: 338: tempCON = B3CON;
  4606  00035A  CE50 F012          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4607                           
  4608                           ;CAN.c: 339: break;
  4609  00035E  D01F               	goto	l300
  4610  000360                     l306:
  4611                           
  4612                           ;CAN.c: 341: tempCON = B4CON;
  4613  000360  CE60 F012          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4614                           
  4615                           ;CAN.c: 342: break;
  4616  000364  D01C               	goto	l300
  4617  000366                     l307:
  4618                           
  4619                           ;CAN.c: 344: tempCON = B5CON;
  4620  000366  CE70 F012          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4621                           
  4622                           ;CAN.c: 345: break;
  4623  00036A  D019               	goto	l300
  4624  00036C                     l4563:
  4625  00036C  5013               	movf	CAN_TakeFrame@k,w,c
  4626                           
  4627                           ; Switch size 1, requested type "simple"
  4628                           ; Number of cases is 8, Range of values is 0 to 7
  4629                           ; switch strategies available:
  4630                           ; Name         Instructions Cycles
  4631                           ; simple_byte           25    13 (average)
  4632                           ;	Chosen strategy is simple_byte
  4633  00036E  0A00               	xorlw	0	; case 0
  4634  000370  B4D8               	btfsc	status,2,c
  4635  000372  D7E4               	goto	l299
  4636  000374  0A01               	xorlw	1	; case 1
  4637  000376  B4D8               	btfsc	status,2,c
  4638  000378  D7E4               	goto	l301
  4639  00037A  0A03               	xorlw	3	; case 2
  4640  00037C  B4D8               	btfsc	status,2,c
  4641  00037E  D7E4               	goto	l302
  4642  000380  0A01               	xorlw	1	; case 3
  4643  000382  B4D8               	btfsc	status,2,c
  4644  000384  D7E4               	goto	l303
  4645  000386  0A07               	xorlw	7	; case 4
  4646  000388  B4D8               	btfsc	status,2,c
  4647  00038A  D7E4               	goto	l304
  4648  00038C  0A01               	xorlw	1	; case 5
  4649  00038E  B4D8               	btfsc	status,2,c
  4650  000390  D7E4               	goto	l305
  4651  000392  0A03               	xorlw	3	; case 6
  4652  000394  B4D8               	btfsc	status,2,c
  4653  000396  D7E4               	goto	l306
  4654  000398  0A01               	xorlw	1	; case 7
  4655  00039A  B4D8               	btfsc	status,2,c
  4656  00039C  D7E4               	goto	l307
  4657  00039E                     l300:
  4658                           
  4659                           ;CAN.c: 349: if((tempCON & 0x80) > 0)
  4660  00039E  AE12               	btfss	CAN_TakeFrame@tempCON,7,c
  4661  0003A0  D09E               	goto	l4599
  4662                           
  4663                           ;CAN.c: 350: {;CAN.c: 351: message->buffer = RXB0CON & 0x1F;
  4664  0003A2  EE20 F003          	lfsr	2,3
  4665  0003A6  500E               	movf	CAN_TakeFrame@message,w,c
  4666  0003A8  26D9               	addwf	fsr2l,f,c
  4667  0003AA  500F               	movf	CAN_TakeFrame@message+1,w,c
  4668  0003AC  22DA               	addwfc	fsr2h,f,c
  4669  0003AE  5060               	movf	3936,w,c	;volatile
  4670  0003B0  0B1F               	andlw	31
  4671  0003B2  6EDF               	movwf	indf2,c
  4672                           
  4673                           ;CAN.c: 352: message->id.v[0] = RXB0EIDL;
  4674  0003B4  EE20 F004          	lfsr	2,4
  4675  0003B8  500E               	movf	CAN_TakeFrame@message,w,c
  4676  0003BA  26D9               	addwf	fsr2l,f,c
  4677  0003BC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4678  0003BE  22DA               	addwfc	fsr2h,f,c
  4679  0003C0  CF64 FFDF          	movff	3940,indf2	;volatile
  4680                           
  4681                           ;CAN.c: 353: message->id.v[1] = RXB0EIDH;
  4682  0003C4  EE20 F005          	lfsr	2,5
  4683  0003C8  500E               	movf	CAN_TakeFrame@message,w,c
  4684  0003CA  26D9               	addwf	fsr2l,f,c
  4685  0003CC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4686  0003CE  22DA               	addwfc	fsr2h,f,c
  4687  0003D0  CF63 FFDF          	movff	3939,indf2	;volatile
  4688                           
  4689                           ;CAN.c: 354: message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4690  0003D4  EE20 F006          	lfsr	2,6
  4691  0003D8  500E               	movf	CAN_TakeFrame@message,w,c
  4692  0003DA  26D9               	addwf	fsr2l,f,c
  4693  0003DC  500F               	movf	CAN_TakeFrame@message+1,w,c
  4694  0003DE  22DA               	addwfc	fsr2h,f,c
  4695  0003E0  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  4696  0003E4  0E03               	movlw	3
  4697  0003E6  1610               	andwf	??_CAN_TakeFrame,f,c
  4698  0003E8  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  4699  0003EC  6A07               	clrf	___awdiv@dividend+1,c
  4700  0003EE  0E00               	movlw	0
  4701  0003F0  6E09               	movwf	___awdiv@divisor+1,c
  4702  0003F2  0E08               	movlw	8
  4703  0003F4  6E08               	movwf	___awdiv@divisor,c
  4704  0003F6  ECF1  F008         	call	___awdiv	;wreg free
  4705  0003FA  5006               	movf	?___awdiv,w,c
  4706  0003FC  1010               	iorwf	??_CAN_TakeFrame,w,c
  4707  0003FE  6EDF               	movwf	indf2,c
  4708                           
  4709                           ;CAN.c: 355: message->id.w[1] |= (WORD)RXB0SIDH*32;
  4710  000400  5061               	movf	3937,w,c	;volatile
  4711  000402  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4712  000404  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4713  000406  0E05               	movlw	5
  4714  000408                     u3015:
  4715  000408  90D8               	bcf	status,0,c
  4716  00040A  3610               	rlcf	??_CAN_TakeFrame,f,c
  4717  00040C  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  4718  00040E  2EE8               	decfsz	wreg,f,c
  4719  000410  D7FB               	goto	u3015
  4720  000412  EE20 F006          	lfsr	2,6
  4721  000416  500E               	movf	CAN_TakeFrame@message,w,c
  4722  000418  26D9               	addwf	fsr2l,f,c
  4723  00041A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4724  00041C  22DA               	addwfc	fsr2h,f,c
  4725  00041E  5010               	movf	??_CAN_TakeFrame,w,c
  4726  000420  12DE               	iorwf	postinc2,f,c
  4727  000422  5011               	movf	??_CAN_TakeFrame+1,w,c
  4728  000424  12DD               	iorwf	postdec2,f,c
  4729                           
  4730                           ;CAN.c: 356: message->frame_type=0x03;
  4731  000426  EE20 F002          	lfsr	2,2
  4732  00042A  500E               	movf	CAN_TakeFrame@message,w,c
  4733  00042C  26D9               	addwf	fsr2l,f,c
  4734  00042E  500F               	movf	CAN_TakeFrame@message+1,w,c
  4735  000430  22DA               	addwfc	fsr2h,f,c
  4736  000432  0E03               	movlw	3
  4737  000434  6EDF               	movwf	indf2,c
  4738                           
  4739                           ;CAN.c: 360: if(RXB0DLCbits.RXRTR == 0)
  4740  000436  BC65               	btfsc	3941,6,c	;volatile
  4741  000438  D061               	goto	l4605
  4742                           
  4743                           ;CAN.c: 361: {;CAN.c: 362: message->message_type = 0x01;
  4744  00043A  EE20 F001          	lfsr	2,1
  4745  00043E  500E               	movf	CAN_TakeFrame@message,w,c
  4746  000440  26D9               	addwf	fsr2l,f,c
  4747  000442  500F               	movf	CAN_TakeFrame@message+1,w,c
  4748  000444  22DA               	addwfc	fsr2h,f,c
  4749  000446  0E01               	movlw	1
  4750  000448  6EDF               	movwf	indf2,c
  4751                           
  4752                           ;CAN.c: 363: message->data_length= RXB0DLC & 0x0F;
  4753  00044A  EE20 F010          	lfsr	2,16
  4754  00044E  500E               	movf	CAN_TakeFrame@message,w,c
  4755  000450  26D9               	addwf	fsr2l,f,c
  4756  000452  500F               	movf	CAN_TakeFrame@message+1,w,c
  4757  000454  22DA               	addwfc	fsr2h,f,c
  4758  000456  5065               	movf	3941,w,c	;volatile
  4759  000458  0B0F               	andlw	15
  4760  00045A  6EDF               	movwf	indf2,c
  4761                           
  4762                           ;CAN.c: 364: if(message->data_length > 8)
  4763  00045C  EE20 F010          	lfsr	2,16
  4764  000460  500E               	movf	CAN_TakeFrame@message,w,c
  4765  000462  26D9               	addwf	fsr2l,f,c
  4766  000464  500F               	movf	CAN_TakeFrame@message+1,w,c
  4767  000466  22DA               	addwfc	fsr2h,f,c
  4768  000468  0E08               	movlw	8
  4769  00046A  64DF               	cpfsgt	indf2,c
  4770  00046C  D03A               	goto	l4603
  4771  00046E  D01E               	goto	l4597
  4772  000470                     l4579:
  4773                           
  4774                           ;CAN.c: 370: RXB0CON = 0;
  4775  000470  0E00               	movlw	0
  4776  000472  6E60               	movwf	3936,c	;volatile
  4777                           
  4778                           ;CAN.c: 371: break;
  4779  000474  D034               	goto	l4599
  4780  000476                     l4581:
  4781                           
  4782                           ;CAN.c: 373: RXB1CON = 0;
  4783  000476  0E00               	movlw	0
  4784  000478  010F               	movlb	15	; () banked
  4785  00047A  D00E               	goto	L2
  4786  00047C                     l4583:
  4787                           
  4788                           ;CAN.c: 376: B0CON = 0;
  4789  00047C  0E00               	movlw	0
  4790  00047E  010E               	movlb	14	; () banked
  4791  000480  6F20               	movwf	32,b	;volatile
  4792                           
  4793                           ;CAN.c: 377: break;
  4794  000482  D02D               	goto	l4599
  4795  000484                     l4585:
  4796                           
  4797                           ;CAN.c: 379: B1CON = 0;
  4798  000484  0E00               	movlw	0
  4799  000486  010E               	movlb	14	; () banked
  4800  000488  6F30               	movwf	48,b	;volatile
  4801                           
  4802                           ;CAN.c: 380: break;
  4803  00048A  D029               	goto	l4599
  4804  00048C                     l4587:
  4805                           
  4806                           ;CAN.c: 382: B2CON = 0;
  4807  00048C  0E00               	movlw	0
  4808  00048E  010E               	movlb	14	; () banked
  4809  000490  6F40               	movwf	64,b	;volatile
  4810                           
  4811                           ;CAN.c: 383: break;
  4812  000492  D025               	goto	l4599
  4813  000494                     l4589:
  4814                           
  4815                           ;CAN.c: 385: B3CON = 0;
  4816  000494  0E00               	movlw	0
  4817  000496  010E               	movlb	14	; () banked
  4818  000498                     L2:
  4819  000498  6F50               	movwf	80,b	;volatile
  4820                           
  4821                           ;CAN.c: 386: break;
  4822  00049A  D021               	goto	l4599
  4823  00049C                     l4591:
  4824                           
  4825                           ;CAN.c: 388: B4CON = 0;
  4826  00049C  0E00               	movlw	0
  4827  00049E  010E               	movlb	14	; () banked
  4828  0004A0  6F60               	movwf	96,b	;volatile
  4829                           
  4830                           ;CAN.c: 389: break;
  4831  0004A2  D01D               	goto	l4599
  4832  0004A4                     l4593:
  4833                           
  4834                           ;CAN.c: 391: B5CON = 0;
  4835  0004A4  0E00               	movlw	0
  4836  0004A6  010E               	movlb	14	; () banked
  4837  0004A8  6F70               	movwf	112,b	;volatile
  4838                           
  4839                           ;CAN.c: 392: break;
  4840  0004AA  D019               	goto	l4599
  4841  0004AC                     l4597:
  4842  0004AC  5013               	movf	CAN_TakeFrame@k,w,c
  4843                           
  4844                           ; Switch size 1, requested type "simple"
  4845                           ; Number of cases is 8, Range of values is 0 to 7
  4846                           ; switch strategies available:
  4847                           ; Name         Instructions Cycles
  4848                           ; simple_byte           25    13 (average)
  4849                           ;	Chosen strategy is simple_byte
  4850  0004AE  0A00               	xorlw	0	; case 0
  4851  0004B0  B4D8               	btfsc	status,2,c
  4852  0004B2  D7DE               	goto	l4579
  4853  0004B4  0A01               	xorlw	1	; case 1
  4854  0004B6  B4D8               	btfsc	status,2,c
  4855  0004B8  D7DE               	goto	l4581
  4856  0004BA  0A03               	xorlw	3	; case 2
  4857  0004BC  B4D8               	btfsc	status,2,c
  4858  0004BE  D7DE               	goto	l4583
  4859  0004C0  0A01               	xorlw	1	; case 3
  4860  0004C2  B4D8               	btfsc	status,2,c
  4861  0004C4  D7DF               	goto	l4585
  4862  0004C6  0A07               	xorlw	7	; case 4
  4863  0004C8  B4D8               	btfsc	status,2,c
  4864  0004CA  D7E0               	goto	l4587
  4865  0004CC  0A01               	xorlw	1	; case 5
  4866  0004CE  B4D8               	btfsc	status,2,c
  4867  0004D0  D7E1               	goto	l4589
  4868  0004D2  0A03               	xorlw	3	; case 6
  4869  0004D4  B4D8               	btfsc	status,2,c
  4870  0004D6  D7E2               	goto	l4591
  4871  0004D8  0A01               	xorlw	1	; case 7
  4872  0004DA  B4D8               	btfsc	status,2,c
  4873  0004DC  D7E3               	goto	l4593
  4874  0004DE                     l4599:
  4875                           
  4876                           ;CAN.c: 394: return FALSE;
  4877  0004DE  0E00               	movlw	0
  4878  0004E0  0012               	return	
  4879  0004E2                     l4603:
  4880                           
  4881                           ;CAN.c: 395: };CAN.c: 396: CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4882  0004E2  0E08               	movlw	8
  4883  0004E4  240E               	addwf	CAN_TakeFrame@message,w,c
  4884  0004E6  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4885  0004E8  0E00               	movlw	0
  4886  0004EA  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4887  0004EC  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4888  0004EE  0E66               	movlw	102
  4889  0004F0  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4890  0004F2  0E0F               	movlw	15
  4891  0004F4  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4892  0004F6  ECF4  F00C         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4893                           
  4894                           ;CAN.c: 397: }
  4895  0004FA  D027               	goto	l4625
  4896  0004FC                     l4605:
  4897                           
  4898                           ;CAN.c: 399: else;CAN.c: 400: {;CAN.c: 401: message->message_type=0x02;
  4899  0004FC  EE20 F001          	lfsr	2,1
  4900  000500  500E               	movf	CAN_TakeFrame@message,w,c
  4901  000502  26D9               	addwf	fsr2l,f,c
  4902  000504  500F               	movf	CAN_TakeFrame@message+1,w,c
  4903  000506  22DA               	addwfc	fsr2h,f,c
  4904  000508  0E02               	movlw	2
  4905  00050A  6EDF               	movwf	indf2,c
  4906  00050C  D01E               	goto	l4625
  4907  00050E                     l4607:
  4908                           
  4909                           ;CAN.c: 407: RXB0CON = 0;
  4910  00050E  0E00               	movlw	0
  4911  000510  6E60               	movwf	3936,c	;volatile
  4912                           
  4913                           ;CAN.c: 408: break;
  4914  000512  D034               	goto	l4627
  4915  000514                     l4609:
  4916                           
  4917                           ;CAN.c: 410: RXB1CON = 0;
  4918  000514  0E00               	movlw	0
  4919  000516  010F               	movlb	15	; () banked
  4920  000518  D00E               	goto	L3
  4921  00051A                     l4611:
  4922                           
  4923                           ;CAN.c: 413: B0CON = 0;
  4924  00051A  0E00               	movlw	0
  4925  00051C  010E               	movlb	14	; () banked
  4926  00051E  6F20               	movwf	32,b	;volatile
  4927                           
  4928                           ;CAN.c: 414: break;
  4929  000520  D02D               	goto	l4627
  4930  000522                     l4613:
  4931                           
  4932                           ;CAN.c: 416: B1CON = 0;
  4933  000522  0E00               	movlw	0
  4934  000524  010E               	movlb	14	; () banked
  4935  000526  6F30               	movwf	48,b	;volatile
  4936                           
  4937                           ;CAN.c: 417: break;
  4938  000528  D029               	goto	l4627
  4939  00052A                     l4615:
  4940                           
  4941                           ;CAN.c: 419: B2CON = 0;
  4942  00052A  0E00               	movlw	0
  4943  00052C  010E               	movlb	14	; () banked
  4944  00052E  6F40               	movwf	64,b	;volatile
  4945                           
  4946                           ;CAN.c: 420: break;
  4947  000530  D025               	goto	l4627
  4948  000532                     l4617:
  4949                           
  4950                           ;CAN.c: 422: B3CON = 0;
  4951  000532  0E00               	movlw	0
  4952  000534  010E               	movlb	14	; () banked
  4953  000536                     L3:
  4954  000536  6F50               	movwf	80,b	;volatile
  4955                           
  4956                           ;CAN.c: 423: break;
  4957  000538  D021               	goto	l4627
  4958  00053A                     l4619:
  4959                           
  4960                           ;CAN.c: 425: B4CON = 0;
  4961  00053A  0E00               	movlw	0
  4962  00053C  010E               	movlb	14	; () banked
  4963  00053E  6F60               	movwf	96,b	;volatile
  4964                           
  4965                           ;CAN.c: 426: break;
  4966  000540  D01D               	goto	l4627
  4967  000542                     l4621:
  4968                           
  4969                           ;CAN.c: 428: B5CON = 0;
  4970  000542  0E00               	movlw	0
  4971  000544  010E               	movlb	14	; () banked
  4972  000546  6F70               	movwf	112,b	;volatile
  4973                           
  4974                           ;CAN.c: 429: break;
  4975  000548  D019               	goto	l4627
  4976  00054A                     l4625:
  4977  00054A  5013               	movf	CAN_TakeFrame@k,w,c
  4978                           
  4979                           ; Switch size 1, requested type "simple"
  4980                           ; Number of cases is 8, Range of values is 0 to 7
  4981                           ; switch strategies available:
  4982                           ; Name         Instructions Cycles
  4983                           ; simple_byte           25    13 (average)
  4984                           ;	Chosen strategy is simple_byte
  4985  00054C  0A00               	xorlw	0	; case 0
  4986  00054E  B4D8               	btfsc	status,2,c
  4987  000550  D7DE               	goto	l4607
  4988  000552  0A01               	xorlw	1	; case 1
  4989  000554  B4D8               	btfsc	status,2,c
  4990  000556  D7DE               	goto	l4609
  4991  000558  0A03               	xorlw	3	; case 2
  4992  00055A  B4D8               	btfsc	status,2,c
  4993  00055C  D7DE               	goto	l4611
  4994  00055E  0A01               	xorlw	1	; case 3
  4995  000560  B4D8               	btfsc	status,2,c
  4996  000562  D7DF               	goto	l4613
  4997  000564  0A07               	xorlw	7	; case 4
  4998  000566  B4D8               	btfsc	status,2,c
  4999  000568  D7E0               	goto	l4615
  5000  00056A  0A01               	xorlw	1	; case 5
  5001  00056C  B4D8               	btfsc	status,2,c
  5002  00056E  D7E1               	goto	l4617
  5003  000570  0A03               	xorlw	3	; case 6
  5004  000572  B4D8               	btfsc	status,2,c
  5005  000574  D7E2               	goto	l4619
  5006  000576  0A01               	xorlw	1	; case 7
  5007  000578  B4D8               	btfsc	status,2,c
  5008  00057A  D7E3               	goto	l4621
  5009  00057C                     l4627:
  5010                           
  5011                           ;CAN.c: 431: return TRUE;
  5012  00057C  0E01               	movlw	1
  5013  00057E  0012               	return		;funcret
  5014  000580                     __end_of_CAN_TakeFrame:
  5015                           	opt callstack 0
  5016                           
  5017 ;; *************** function ___awdiv *****************
  5018 ;; Defined at:
  5019 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  dividend        2    5[COMRAM] int 
  5022 ;;  divisor         2    7[COMRAM] int 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  quotient        2   11[COMRAM] int 
  5025 ;;  sign            1   10[COMRAM] unsigned char 
  5026 ;;  counter         1    9[COMRAM] unsigned char 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  2    5[COMRAM] int 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;Total ram usage:        8 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    3
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_CAN_TakeFrame
  5047 ;;		_FRAME_HandleCanFrame
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text35
  5052  0011E2                     __ptext35:
  5053                           	opt callstack 0
  5054  0011E2                     ___awdiv:
  5055                           	opt callstack 25
  5056                           
  5057                           ;incstack = 0
  5058  0011E2  0E00               	movlw	0
  5059  0011E4  6E0B               	movwf	___awdiv@sign,c
  5060  0011E6  AE09               	btfss	___awdiv@divisor+1,7,c
  5061  0011E8  D006               	goto	l4507
  5062  0011EA  6C08               	negf	___awdiv@divisor,c
  5063  0011EC  1E09               	comf	___awdiv@divisor+1,f,c
  5064  0011EE  B0D8               	btfsc	status,0,c
  5065  0011F0  2A09               	incf	___awdiv@divisor+1,f,c
  5066  0011F2  0E01               	movlw	1
  5067  0011F4  6E0B               	movwf	___awdiv@sign,c
  5068  0011F6                     l4507:
  5069  0011F6  AE07               	btfss	___awdiv@dividend+1,7,c
  5070  0011F8  D006               	goto	l4513
  5071  0011FA  6C06               	negf	___awdiv@dividend,c
  5072  0011FC  1E07               	comf	___awdiv@dividend+1,f,c
  5073  0011FE  B0D8               	btfsc	status,0,c
  5074  001200  2A07               	incf	___awdiv@dividend+1,f,c
  5075  001202  0E01               	movlw	1
  5076  001204  1A0B               	xorwf	___awdiv@sign,f,c
  5077  001206                     l4513:
  5078  001206  0E00               	movlw	0
  5079  001208  6E0D               	movwf	___awdiv@quotient+1,c
  5080  00120A  0E00               	movlw	0
  5081  00120C  6E0C               	movwf	___awdiv@quotient,c
  5082  00120E  5008               	movf	___awdiv@divisor,w,c
  5083  001210  1009               	iorwf	___awdiv@divisor+1,w,c
  5084  001212  B4D8               	btfsc	status,2,c
  5085  001214  D01C               	goto	l4535
  5086  001216  0E01               	movlw	1
  5087  001218  6E0A               	movwf	___awdiv@counter,c
  5088  00121A  D004               	goto	l4521
  5089  00121C                     l4519:
  5090  00121C  90D8               	bcf	status,0,c
  5091  00121E  3608               	rlcf	___awdiv@divisor,f,c
  5092  001220  3609               	rlcf	___awdiv@divisor+1,f,c
  5093  001222  2A0A               	incf	___awdiv@counter,f,c
  5094  001224                     l4521:
  5095  001224  AE09               	btfss	___awdiv@divisor+1,7,c
  5096  001226  D7FA               	goto	l4519
  5097  001228                     u2950:
  5098  001228  90D8               	bcf	status,0,c
  5099  00122A  360C               	rlcf	___awdiv@quotient,f,c
  5100  00122C  360D               	rlcf	___awdiv@quotient+1,f,c
  5101  00122E  5008               	movf	___awdiv@divisor,w,c
  5102  001230  5C06               	subwf	___awdiv@dividend,w,c
  5103  001232  5009               	movf	___awdiv@divisor+1,w,c
  5104  001234  5807               	subwfb	___awdiv@dividend+1,w,c
  5105  001236  A0D8               	btfss	status,0,c
  5106  001238  D005               	goto	l4531
  5107  00123A  5008               	movf	___awdiv@divisor,w,c
  5108  00123C  5E06               	subwf	___awdiv@dividend,f,c
  5109  00123E  5009               	movf	___awdiv@divisor+1,w,c
  5110  001240  5A07               	subwfb	___awdiv@dividend+1,f,c
  5111  001242  800C               	bsf	___awdiv@quotient,0,c
  5112  001244                     l4531:
  5113  001244  90D8               	bcf	status,0,c
  5114  001246  3209               	rrcf	___awdiv@divisor+1,f,c
  5115  001248  3208               	rrcf	___awdiv@divisor,f,c
  5116  00124A  2E0A               	decfsz	___awdiv@counter,f,c
  5117  00124C  D7ED               	goto	u2950
  5118  00124E                     l4535:
  5119  00124E  500B               	movf	___awdiv@sign,w,c
  5120  001250  B4D8               	btfsc	status,2,c
  5121  001252  D004               	goto	l4539
  5122  001254  6C0C               	negf	___awdiv@quotient,c
  5123  001256  1E0D               	comf	___awdiv@quotient+1,f,c
  5124  001258  B0D8               	btfsc	status,0,c
  5125  00125A  2A0D               	incf	___awdiv@quotient+1,f,c
  5126  00125C                     l4539:
  5127  00125C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5128  001260  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5129  001264  0012               	return		;funcret
  5130  001266                     __end_of___awdiv:
  5131                           	opt callstack 0
  5132                           
  5133 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5134 ;; Defined at:
  5135 ;;		line 233 in file "CAN.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5138 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5139 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5140 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  i               1    9[COMRAM] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5155 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5156 ;;Total ram usage:        5 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    3
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_CAN_SendFrame
  5163 ;;		_CAN_TakeFrame
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text36
  5168  0019E8                     __ptext36:
  5169                           	opt callstack 0
  5170  0019E8                     _CAN_MoveBuffIntoFrame:
  5171                           	opt callstack 24
  5172                           
  5173                           ;CAN.c: 235: BYTE i;;CAN.c: 236: for(i=0; i<8; ++i)
  5174                           
  5175                           ;incstack = 0
  5176  0019E8  0E00               	movlw	0
  5177  0019EA  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  5178  0019EC                     l3949:
  5179                           
  5180                           ;CAN.c: 237: {;CAN.c: 238: Ram[i]=(*(Buf+i));
  5181  0019EC  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5182  0019EE  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5183  0019F0  6ED9               	movwf	fsr2l,c
  5184  0019F2  0E00               	movlw	0
  5185  0019F4  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5186  0019F6  6EDA               	movwf	fsr2h,c
  5187  0019F8  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5188  0019FA  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5189  0019FC  6EE1               	movwf	fsr1l,c
  5190  0019FE  0E00               	movlw	0
  5191  001A00  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5192  001A02  6EE2               	movwf	fsr1h,c
  5193  001A04  CFDF FFE7          	movff	indf2,indf1
  5194  001A08  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5195  001A0A  0E07               	movlw	7
  5196  001A0C  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5197  001A0E  D7EE               	goto	l3949
  5198  001A10  0012               	return	
  5199  001A12                     __end_of_CAN_MoveBuffIntoFrame:
  5200                           	opt callstack 0
  5201                           
  5202 ;; *************** function _TMR1_Update_flag_Set *****************
  5203 ;; Defined at:
  5204 ;;		line 32 in file "TMR1.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  a               2    5[COMRAM] unsigned int 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		None
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;Total ram usage:        2 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:    3
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_main
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text37
  5233  001B70                     __ptext37:
  5234                           	opt callstack 0
  5235  001B70                     _TMR1_Update_flag_Set:
  5236                           	opt callstack 27
  5237                           
  5238                           ;TMR1.c: 34: TMR1_Update_flag = a;
  5239                           
  5240                           ;incstack = 0
  5241  001B70  C006  F033         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5242  001B74  C007  F034         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5243  001B78  0012               	return		;funcret
  5244  001B7A                     __end_of_TMR1_Update_flag_Set:
  5245                           	opt callstack 0
  5246                           
  5247 ;; *************** function _TMR1_Update_flag_Get *****************
  5248 ;; Defined at:
  5249 ;;		line 47 in file "TMR1.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  2    5[COMRAM] unsigned int 
  5256 ;; Registers used:
  5257 ;;		None
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;Total ram usage:        2 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    3
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text38
  5278  001B7A                     __ptext38:
  5279                           	opt callstack 0
  5280  001B7A                     _TMR1_Update_flag_Get:
  5281                           	opt callstack 27
  5282                           
  5283                           ;TMR1.c: 49: return TMR1_Update_flag;
  5284                           
  5285                           ;incstack = 0
  5286  001B7A  C033  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5287  001B7E  C034  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5288  001B82  0012               	return		;funcret
  5289  001B84                     __end_of_TMR1_Update_flag_Get:
  5290                           	opt callstack 0
  5291                           
  5292 ;; *************** function _RADAR_Use *****************
  5293 ;; Defined at:
  5294 ;;		line 16 in file "RADARMETADATA.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		None
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:    3
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_main
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text39
  5323  001B28                     __ptext39:
  5324                           	opt callstack 0
  5325  001B28                     _RADAR_Use:
  5326                           	opt callstack 27
  5327                           
  5328                           ;RADARMETADATA.c: 18: if(Flagi.pomiarTla == 1)
  5329                           
  5330                           ;incstack = 0
  5331  001B28  0100               	movlb	0	; () banked
  5332  001B2A  A1C6               	btfss	_Flagi& (0+255),0,b
  5333  001B2C  0012               	return	
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;RADARMETADATA.c: 19: {;RADARMETADATA.c: 20: Flagi.detekcja = 0;
  5337  001B2E  93C6               	bcf	_Flagi& (0+255),1,b
  5338                           
  5339                           ;RADARMETADATA.c: 21: Flagi.pomiarTla = 0;
  5340  001B30  91C6               	bcf	_Flagi& (0+255),0,b
  5341                           
  5342                           ; BSR set to: 0
  5343  001B32  0012               	return		;funcret
  5344  001B34                     __end_of_RADAR_Use:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _LED_Update *****************
  5348 ;; Defined at:
  5349 ;;		line 148 in file "LED.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      unsigned char 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;Total ram usage:        0 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    5
  5370 ;; This function calls:
  5371 ;;		_LED_Control
  5372 ;;		_LED_Left
  5373 ;;		_LED_Light_Pos
  5374 ;;		_LED_Right
  5375 ;; This function is called by:
  5376 ;;		_main
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text40
  5381  0012E2                     __ptext40:
  5382                           	opt callstack 0
  5383  0012E2                     _LED_Update:
  5384                           	opt callstack 25
  5385                           
  5386                           ;LED.c: 150: static LED_RGA_type Red = RED;;LED.c: 151: static LED_RGA_type Green = GREE
      +                          N;;LED.c: 152: static UINT pos1 = 0b0000000001;;LED.c: 153: static UINT pos2 = 0b0000000
      +                          001;;LED.c: 155: if(LOCK == 0)
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;incstack = 0
  5390  0012E2  503A               	movf	_LOCK,w,c
  5391  0012E4  A4D8               	btfss	status,2,c
  5392  0012E6  D013               	goto	l4823
  5393                           
  5394                           ;LED.c: 156: {;LED.c: 157: LED_Control(RED,0b0000000000);
  5395  0012E8  0E00               	movlw	0
  5396  0012EA  6E07               	movwf	LED_Control@diode+1,c
  5397  0012EC  0E00               	movlw	0
  5398  0012EE  6E06               	movwf	LED_Control@diode,c
  5399  0012F0  0E00               	movlw	0
  5400  0012F2  EC3C  F005         	call	_LED_Control
  5401                           
  5402                           ;LED.c: 158: LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5403  0012F6  C04F  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5404  0012FA  C050  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5405  0012FE  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5406  001302  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5407  001306  5055               	movf	LED_Update@Green,w,c
  5408  001308  ECFF  F007         	call	_LED_Light_Pos
  5409                           
  5410                           ;LED.c: 160: }
  5411  00130C  D012               	goto	l394
  5412  00130E                     l4823:
  5413                           
  5414                           ;LED.c: 161: else;LED.c: 162: {;LED.c: 163: LED_Control(Green,0b0000000000);
  5415  00130E  0E00               	movlw	0
  5416  001310  6E07               	movwf	LED_Control@diode+1,c
  5417  001312  0E00               	movlw	0
  5418  001314  6E06               	movwf	LED_Control@diode,c
  5419  001316  5055               	movf	LED_Update@Green,w,c
  5420  001318  EC3C  F005         	call	_LED_Control
  5421                           
  5422                           ;LED.c: 164: LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5423  00131C  C051  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5424  001320  C052  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5425  001324  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5426  001328  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5427  00132C  0E00               	movlw	0
  5428  00132E  ECFF  F007         	call	_LED_Light_Pos
  5429  001332                     l394:
  5430                           
  5431                           ;LED.c: 165: };LED.c: 166: pos1 = LED_Right(pos1);
  5432  001332  C051  F006         	movff	LED_Update@pos1,LED_Right@a
  5433  001336  C052  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  5434  00133A  EC96  F00B         	call	_LED_Right	;wreg free
  5435  00133E  C006  F051         	movff	?_LED_Right,LED_Update@pos1
  5436  001342  C007  F052         	movff	?_LED_Right+1,LED_Update@pos1+1
  5437                           
  5438                           ;LED.c: 167: pos2 = LED_Left(pos2);
  5439  001346  C04F  F006         	movff	LED_Update@pos2,LED_Left@a
  5440  00134A  C050  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  5441  00134E  ECE1  F00B         	call	_LED_Left	;wreg free
  5442  001352  C006  F04F         	movff	?_LED_Left,LED_Update@pos2
  5443  001356  C007  F050         	movff	?_LED_Left+1,LED_Update@pos2+1
  5444  00135A  0012               	return		;funcret
  5445  00135C                     __end_of_LED_Update:
  5446                           	opt callstack 0
  5447                           
  5448 ;; *************** function _LED_Light_Pos *****************
  5449 ;; Defined at:
  5450 ;;		line 239 in file "LED.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  color           1    wreg     enum E10511
  5453 ;;  pos             2   12[COMRAM] unsigned int 
  5454 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  color           1   16[COMRAM] enum E10511
  5457 ;;  flage           2   21[COMRAM] unsigned int 
  5458 ;;  pos2            2   19[COMRAM] unsigned int 
  5459 ;;  LED_array       2   17[COMRAM] unsigned int 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  2   12[COMRAM] unsigned int 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;Total ram usage:       11 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; Hardware stack levels required when called:    4
  5476 ;; This function calls:
  5477 ;;		_LED_Control
  5478 ;;		_LED_Left
  5479 ;;		_LED_Right
  5480 ;;		___lwdiv
  5481 ;; This function is called by:
  5482 ;;		_LED_Update
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text41
  5487  000FFE                     __ptext41:
  5488                           	opt callstack 0
  5489  000FFE                     _LED_Light_Pos:
  5490                           	opt callstack 25
  5491                           
  5492                           ;incstack = 0
  5493                           ;LED_Light_Pos@color stored from wreg
  5494  000FFE  6E11               	movwf	LED_Light_Pos@color,c
  5495                           
  5496                           ;LED.c: 241: UINT pos2 =pos;
  5497  001000  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5498  001004  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5499                           
  5500                           ;LED.c: 242: UINT LED_array = 0b0000000000;
  5501  001008  0E00               	movlw	0
  5502  00100A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5503  00100C  0E00               	movlw	0
  5504  00100E  6E12               	movwf	LED_Light_Pos@LED_array,c
  5505                           
  5506                           ;LED.c: 243: UINT flage = fulfillment/10;
  5507  001010  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5508  001014  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5509  001018  0E00               	movlw	0
  5510  00101A  6E09               	movwf	___lwdiv@divisor+1,c
  5511  00101C  0E0A               	movlw	10
  5512  00101E  6E08               	movwf	___lwdiv@divisor,c
  5513  001020  EC46  F00B         	call	___lwdiv	;wreg free
  5514  001024  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  5515  001028  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5516                           
  5517                           ;LED.c: 244: if(color == RED)
  5518  00102C  5011               	movf	LED_Light_Pos@color,w,c
  5519  00102E  B4D8               	btfsc	status,2,c
  5520  001030  D017               	goto	l4653
  5521  001032  D031               	goto	l4661
  5522  001034                     l4647:
  5523                           
  5524                           ;LED.c: 247: {;LED.c: 248: LED_array = pos2|LED_array;
  5525  001034  5012               	movf	LED_Light_Pos@LED_array,w,c
  5526  001036  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5527  001038  6E12               	movwf	LED_Light_Pos@LED_array,c
  5528  00103A  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5529  00103C  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5530  00103E  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5531                           
  5532                           ;LED.c: 249: pos2 = LED_Left(pos2);
  5533  001040  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  5534  001044  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5535  001048  ECE1  F00B         	call	_LED_Left	;wreg free
  5536  00104C  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  5537  001050  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5538                           
  5539                           ;LED.c: 250: flage = flage - 1;
  5540  001054  0EFF               	movlw	255
  5541  001056  2416               	addwf	LED_Light_Pos@flage,w,c
  5542  001058  6E16               	movwf	LED_Light_Pos@flage,c
  5543  00105A  0EFF               	movlw	255
  5544  00105C  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5545  00105E  6E17               	movwf	LED_Light_Pos@flage+1,c
  5546  001060                     l4653:
  5547  001060  5016               	movf	LED_Light_Pos@flage,w,c
  5548  001062  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5549  001064  B4D8               	btfsc	status,2,c
  5550  001066  D01B               	goto	u3060
  5551  001068  D7E5               	goto	l4647
  5552  00106A                     l4655:
  5553                           
  5554                           ;LED.c: 256: {;LED.c: 257: LED_array = pos2|LED_array;
  5555  00106A  5012               	movf	LED_Light_Pos@LED_array,w,c
  5556  00106C  1014               	iorwf	LED_Light_Pos@pos2,w,c
  5557  00106E  6E12               	movwf	LED_Light_Pos@LED_array,c
  5558  001070  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  5559  001072  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  5560  001074  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  5561                           
  5562                           ;LED.c: 258: pos2 = LED_Right(pos2);
  5563  001076  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  5564  00107A  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5565  00107E  EC96  F00B         	call	_LED_Right	;wreg free
  5566  001082  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  5567  001086  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5568                           
  5569                           ;LED.c: 259: flage = flage - 1;
  5570  00108A  0EFF               	movlw	255
  5571  00108C  2416               	addwf	LED_Light_Pos@flage,w,c
  5572  00108E  6E16               	movwf	LED_Light_Pos@flage,c
  5573  001090  0EFF               	movlw	255
  5574  001092  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  5575  001094  6E17               	movwf	LED_Light_Pos@flage+1,c
  5576  001096                     l4661:
  5577  001096  5016               	movf	LED_Light_Pos@flage,w,c
  5578  001098  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  5579  00109A  A4D8               	btfss	status,2,c
  5580  00109C  D7E6               	goto	l4655
  5581  00109E                     u3060:
  5582                           
  5583                           ;LED.c: 260: };LED.c: 261: };LED.c: 262: LED_Control(color, LED_array);
  5584  00109E  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5585  0010A2  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5586  0010A6  5011               	movf	LED_Light_Pos@color,w,c
  5587  0010A8  EC3C  F005         	call	_LED_Control
  5588  0010AC  0012               	return		;funcret
  5589  0010AE                     __end_of_LED_Light_Pos:
  5590                           	opt callstack 0
  5591                           
  5592 ;; *************** function ___lwdiv *****************
  5593 ;; Defined at:
  5594 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;  dividend        2    5[COMRAM] unsigned int 
  5597 ;;  divisor         2    7[COMRAM] unsigned int 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  quotient        2   10[COMRAM] unsigned int 
  5600 ;;  counter         1    9[COMRAM] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  2    5[COMRAM] unsigned int 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;Total ram usage:        7 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    3
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_LED_Light_Pos
  5621 ;;		_FRAME_Plot
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text42
  5626  00168C                     __ptext42:
  5627                           	opt callstack 0
  5628  00168C                     ___lwdiv:
  5629                           	opt callstack 24
  5630                           
  5631                           ;incstack = 0
  5632  00168C  0E00               	movlw	0
  5633  00168E  6E0C               	movwf	___lwdiv@quotient+1,c
  5634  001690  0E00               	movlw	0
  5635  001692  6E0B               	movwf	___lwdiv@quotient,c
  5636  001694  5008               	movf	___lwdiv@divisor,w,c
  5637  001696  1009               	iorwf	___lwdiv@divisor+1,w,c
  5638  001698  B4D8               	btfsc	status,2,c
  5639  00169A  D01C               	goto	l1445
  5640  00169C  0E01               	movlw	1
  5641  00169E  6E0A               	movwf	___lwdiv@counter,c
  5642  0016A0  D004               	goto	l4195
  5643  0016A2                     l4193:
  5644  0016A2  90D8               	bcf	status,0,c
  5645  0016A4  3608               	rlcf	___lwdiv@divisor,f,c
  5646  0016A6  3609               	rlcf	___lwdiv@divisor+1,f,c
  5647  0016A8  2A0A               	incf	___lwdiv@counter,f,c
  5648  0016AA                     l4195:
  5649  0016AA  AE09               	btfss	___lwdiv@divisor+1,7,c
  5650  0016AC  D7FA               	goto	l4193
  5651  0016AE                     u2550:
  5652  0016AE  90D8               	bcf	status,0,c
  5653  0016B0  360B               	rlcf	___lwdiv@quotient,f,c
  5654  0016B2  360C               	rlcf	___lwdiv@quotient+1,f,c
  5655  0016B4  5008               	movf	___lwdiv@divisor,w,c
  5656  0016B6  5C06               	subwf	___lwdiv@dividend,w,c
  5657  0016B8  5009               	movf	___lwdiv@divisor+1,w,c
  5658  0016BA  5807               	subwfb	___lwdiv@dividend+1,w,c
  5659  0016BC  A0D8               	btfss	status,0,c
  5660  0016BE  D005               	goto	l4205
  5661  0016C0  5008               	movf	___lwdiv@divisor,w,c
  5662  0016C2  5E06               	subwf	___lwdiv@dividend,f,c
  5663  0016C4  5009               	movf	___lwdiv@divisor+1,w,c
  5664  0016C6  5A07               	subwfb	___lwdiv@dividend+1,f,c
  5665  0016C8  800B               	bsf	___lwdiv@quotient,0,c
  5666  0016CA                     l4205:
  5667  0016CA  90D8               	bcf	status,0,c
  5668  0016CC  3209               	rrcf	___lwdiv@divisor+1,f,c
  5669  0016CE  3208               	rrcf	___lwdiv@divisor,f,c
  5670  0016D0  2E0A               	decfsz	___lwdiv@counter,f,c
  5671  0016D2  D7ED               	goto	u2550
  5672  0016D4                     l1445:
  5673  0016D4  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5674  0016D8  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5675  0016DC  0012               	return		;funcret
  5676  0016DE                     __end_of___lwdiv:
  5677                           	opt callstack 0
  5678                           
  5679 ;; *************** function _LED_Right *****************
  5680 ;; Defined at:
  5681 ;;		line 183 in file "LED.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  a               2    5[COMRAM] unsigned int 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  b               2    9[COMRAM] unsigned int 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  2    5[COMRAM] unsigned int 
  5688 ;; Registers used:
  5689 ;;		wreg, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;Total ram usage:        6 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    3
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_LED_Update
  5706 ;;		_LED_Light_Pos
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text43
  5711  00172C                     __ptext43:
  5712                           	opt callstack 0
  5713  00172C                     _LED_Right:
  5714                           	opt callstack 26
  5715                           
  5716                           ;LED.c: 185: if ((a & 0b0000000001) == 0b0000000001)
  5717                           
  5718                           ;incstack = 0
  5719  00172C  A006               	btfss	LED_Right@a,0,c
  5720  00172E  D018               	goto	l4309
  5721                           
  5722                           ;LED.c: 186: {;LED.c: 187: UINT b = a & 0b1111111110;
  5723  001730  0EFE               	movlw	254
  5724  001732  1406               	andwf	LED_Right@a,w,c
  5725  001734  6E0A               	movwf	LED_Right@b,c
  5726  001736  0E03               	movlw	3
  5727  001738  1407               	andwf	LED_Right@a+1,w,c
  5728  00173A  6E0B               	movwf	LED_Right@b+1,c
  5729                           
  5730                           ;LED.c: 188: b = b >> 1;
  5731  00173C  90D8               	bcf	status,0,c
  5732  00173E  300B               	rrcf	LED_Right@b+1,w,c
  5733  001740  6E08               	movwf	??_LED_Right& (0+255),c
  5734  001742  300A               	rrcf	LED_Right@b,w,c
  5735  001744  6E0A               	movwf	LED_Right@b,c
  5736  001746  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  5737                           
  5738                           ;LED.c: 189: b = b | 0b1000000000;
  5739  00174A  0E00               	movlw	0
  5740  00174C  100A               	iorwf	LED_Right@b,w,c
  5741  00174E  6E0A               	movwf	LED_Right@b,c
  5742  001750  0E02               	movlw	2
  5743  001752  100B               	iorwf	LED_Right@b+1,w,c
  5744  001754  6E0B               	movwf	LED_Right@b+1,c
  5745                           
  5746                           ;LED.c: 190: return b;
  5747  001756  C00A  F006         	movff	LED_Right@b,?_LED_Right
  5748  00175A  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  5749  00175E  0012               	return	
  5750  001760                     l4309:
  5751                           
  5752                           ;LED.c: 192: else;LED.c: 193: {;LED.c: 194: a =a >> 1;
  5753  001760  90D8               	bcf	status,0,c
  5754  001762  3007               	rrcf	LED_Right@a+1,w,c
  5755  001764  6E08               	movwf	??_LED_Right& (0+255),c
  5756  001766  3006               	rrcf	LED_Right@a,w,c
  5757  001768  6E06               	movwf	LED_Right@a,c
  5758  00176A  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  5759                           
  5760                           ;LED.c: 195: return a;
  5761  00176E  C006  F006         	movff	LED_Right@a,?_LED_Right
  5762  001772  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  5763  001776  0012               	return		;funcret
  5764  001778                     __end_of_LED_Right:
  5765                           	opt callstack 0
  5766                           
  5767 ;; *************** function _LED_Left *****************
  5768 ;; Defined at:
  5769 ;;		line 210 in file "LED.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  a               2    5[COMRAM] unsigned int 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  b               2    7[COMRAM] unsigned int 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  2    5[COMRAM] unsigned int 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2, status,0
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;Total ram usage:        4 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    3
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_LED_Update
  5794 ;;		_LED_Light_Pos
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text44
  5799  0017C2                     __ptext44:
  5800                           	opt callstack 0
  5801  0017C2                     _LED_Left:
  5802                           	opt callstack 25
  5803                           
  5804                           ;LED.c: 212: if ((a & 0b1000000000) == 0b1000000000)
  5805                           
  5806                           ;incstack = 0
  5807  0017C2  A207               	btfss	LED_Left@a+1,1,c
  5808  0017C4  D015               	goto	l4325
  5809                           
  5810                           ;LED.c: 213: {;LED.c: 214: UINT b = a & 0b0111111111;
  5811  0017C6  0EFF               	movlw	255
  5812  0017C8  1406               	andwf	LED_Left@a,w,c
  5813  0017CA  6E08               	movwf	LED_Left@b,c
  5814  0017CC  0E01               	movlw	1
  5815  0017CE  1407               	andwf	LED_Left@a+1,w,c
  5816  0017D0  6E09               	movwf	LED_Left@b+1,c
  5817                           
  5818                           ;LED.c: 215: b = b << 1;
  5819  0017D2  90D8               	bcf	status,0,c
  5820  0017D4  3408               	rlcf	LED_Left@b,w,c
  5821  0017D6  6E08               	movwf	LED_Left@b,c
  5822  0017D8  3409               	rlcf	LED_Left@b+1,w,c
  5823  0017DA  6E09               	movwf	LED_Left@b+1,c
  5824                           
  5825                           ;LED.c: 216: b = b | 0b0000000001;
  5826  0017DC  0E01               	movlw	1
  5827  0017DE  1008               	iorwf	LED_Left@b,w,c
  5828  0017E0  6E08               	movwf	LED_Left@b,c
  5829  0017E2  5009               	movf	LED_Left@b+1,w,c
  5830  0017E4  6E09               	movwf	LED_Left@b+1,c
  5831                           
  5832                           ;LED.c: 217: return b;
  5833  0017E6  C008  F006         	movff	LED_Left@b,?_LED_Left
  5834  0017EA  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5835  0017EE  0012               	return	
  5836  0017F0                     l4325:
  5837                           
  5838                           ;LED.c: 219: else;LED.c: 220: {;LED.c: 221: a = a << 1;
  5839  0017F0  90D8               	bcf	status,0,c
  5840  0017F2  3406               	rlcf	LED_Left@a,w,c
  5841  0017F4  6E06               	movwf	LED_Left@a,c
  5842  0017F6  3407               	rlcf	LED_Left@a+1,w,c
  5843  0017F8  6E07               	movwf	LED_Left@a+1,c
  5844                           
  5845                           ;LED.c: 222: return a;
  5846  0017FA  C006  F006         	movff	LED_Left@a,?_LED_Left
  5847  0017FE  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5848  001802  0012               	return		;funcret
  5849  001804                     __end_of_LED_Left:
  5850                           	opt callstack 0
  5851                           
  5852 ;; *************** function _INI_All *****************
  5853 ;; Defined at:
  5854 ;;		line 54 in file "INI.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    6
  5875 ;; This function calls:
  5876 ;;		_CAN_Setup
  5877 ;;		_INI_GlobalInterrupt
  5878 ;;		_INI_LED_Start
  5879 ;;		_INI_OUTPUT
  5880 ;;		_INI_Timer
  5881 ;;		_NVMInit
  5882 ;;		_ReadDataToEEPROM
  5883 ;; This function is called by:
  5884 ;;		_main
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text45
  5889  001A5E                     __ptext45:
  5890                           	opt callstack 0
  5891  001A5E                     _INI_All:
  5892                           	opt callstack 24
  5893                           
  5894                           ;INI.c: 57: WDTCONbits.SWDTEN = 1;
  5895                           
  5896                           ;incstack = 0
  5897  001A5E  80D1               	bsf	4049,0,c	;volatile
  5898                           
  5899                           ;INI.c: 60: NVMInit();
  5900  001A60  EC02  F00C         	call	_NVMInit	;wreg free
  5901                           
  5902                           ;INI.c: 62: ReadDataToEEPROM();
  5903  001A64  ECBC  F003         	call	_ReadDataToEEPROM	;wreg free
  5904  001A68  0004               	clrwdt		;# 
  5905                           
  5906                           ;INI.c: 66: INI_OUTPUT();
  5907  001A6A  EC40  F00D         	call	_INI_OUTPUT	;wreg free
  5908                           
  5909                           ;INI.c: 68: CAN_Setup();
  5910  001A6E  EC92  F00A         	call	_CAN_Setup	;wreg free
  5911                           
  5912                           ;INI.c: 69: INI_GlobalInterrupt();
  5913  001A72  EC86  F00D         	call	_INI_GlobalInterrupt	;wreg free
  5914                           
  5915                           ;INI.c: 71: INI_Timer();
  5916  001A76  EC5F  F00D         	call	_INI_Timer	;wreg free
  5917                           
  5918                           ;INI.c: 73: INI_LED_Start();
  5919  001A7A  ECDA  F00C         	call	_INI_LED_Start	;wreg free
  5920  001A7E  0012               	return		;funcret
  5921  001A80                     __end_of_INI_All:
  5922                           	opt callstack 0
  5923                           
  5924 ;; *************** function _ReadDataToEEPROM *****************
  5925 ;; Defined at:
  5926 ;;		line 481 in file "FRAME.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;		None
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  1    wreg      void 
  5933 ;; Registers used:
  5934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;Total ram usage:        0 bytes
  5945 ;; Hardware stack levels used:    1
  5946 ;; Hardware stack levels required when called:    5
  5947 ;; This function calls:
  5948 ;;		_NVMRead
  5949 ;; This function is called by:
  5950 ;;		_INI_All
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text46
  5955  000778                     __ptext46:
  5956                           	opt callstack 0
  5957  000778                     _ReadDataToEEPROM:
  5958                           	opt callstack 24
  5959                           
  5960                           ;FRAME.c: 484: NVMRead(&Init_Data,10,2);
  5961                           
  5962                           ;incstack = 0
  5963  000778  0E56               	movlw	low _Init_Data
  5964  00077A  6E08               	movwf	NVMRead@dest,c
  5965  00077C  0E00               	movlw	high _Init_Data
  5966  00077E  6E09               	movwf	NVMRead@dest+1,c
  5967  000780  0E00               	movlw	0
  5968  000782  6E0B               	movwf	NVMRead@addr+1,c
  5969  000784  0E0A               	movlw	10
  5970  000786  6E0A               	movwf	NVMRead@addr,c
  5971  000788  0E00               	movlw	0
  5972  00078A  6E0D               	movwf	NVMRead@count+1,c
  5973  00078C  0E02               	movlw	2
  5974  00078E  6E0C               	movwf	NVMRead@count,c
  5975  000790  ECC0  F00C         	call	_NVMRead	;wreg free
  5976                           
  5977                           ;FRAME.c: 485: NVMRead(&NeightAdress1,13,2);
  5978  000794  0E4B               	movlw	low _NeightAdress1
  5979  000796  6E08               	movwf	NVMRead@dest,c
  5980  000798  0E00               	movlw	high _NeightAdress1
  5981  00079A  6E09               	movwf	NVMRead@dest+1,c
  5982  00079C  0E00               	movlw	0
  5983  00079E  6E0B               	movwf	NVMRead@addr+1,c
  5984  0007A0  0E0D               	movlw	13
  5985  0007A2  6E0A               	movwf	NVMRead@addr,c
  5986  0007A4  0E00               	movlw	0
  5987  0007A6  6E0D               	movwf	NVMRead@count+1,c
  5988  0007A8  0E02               	movlw	2
  5989  0007AA  6E0C               	movwf	NVMRead@count,c
  5990  0007AC  ECC0  F00C         	call	_NVMRead	;wreg free
  5991                           
  5992                           ;FRAME.c: 486: if(NeightAdress1==0xFFFF)
  5993  0007B0  284B               	incf	_NeightAdress1,w,c	;volatile
  5994  0007B2  E107               	bnz	l4691
  5995  0007B4  284C               	incf	_NeightAdress1+1,w,c	;volatile
  5996  0007B6  A4D8               	btfss	status,2,c
  5997  0007B8  D004               	goto	l4691
  5998                           
  5999                           ;FRAME.c: 487: {;FRAME.c: 488: NeightAdress1=0x0000;
  6000  0007BA  0E00               	movlw	0
  6001  0007BC  6E4C               	movwf	_NeightAdress1+1,c	;volatile
  6002  0007BE  0E00               	movlw	0
  6003  0007C0  6E4B               	movwf	_NeightAdress1,c	;volatile
  6004  0007C2                     l4691:
  6005                           
  6006                           ;FRAME.c: 489: };FRAME.c: 490: NVMRead(&NeightAdress2,16,2);
  6007  0007C2  0E58               	movlw	low _NeightAdress2
  6008  0007C4  6E08               	movwf	NVMRead@dest,c
  6009  0007C6  0E00               	movlw	high _NeightAdress2
  6010  0007C8  6E09               	movwf	NVMRead@dest+1,c
  6011  0007CA  0E00               	movlw	0
  6012  0007CC  6E0B               	movwf	NVMRead@addr+1,c
  6013  0007CE  0E10               	movlw	16
  6014  0007D0  6E0A               	movwf	NVMRead@addr,c
  6015  0007D2  0E00               	movlw	0
  6016  0007D4  6E0D               	movwf	NVMRead@count+1,c
  6017  0007D6  0E02               	movlw	2
  6018  0007D8  6E0C               	movwf	NVMRead@count,c
  6019  0007DA  ECC0  F00C         	call	_NVMRead	;wreg free
  6020                           
  6021                           ;FRAME.c: 491: if(NeightAdress2==0xFFFF)
  6022  0007DE  2858               	incf	_NeightAdress2,w,c	;volatile
  6023  0007E0  E107               	bnz	l4697
  6024  0007E2  2859               	incf	_NeightAdress2+1,w,c	;volatile
  6025  0007E4  A4D8               	btfss	status,2,c
  6026  0007E6  D004               	goto	l4697
  6027                           
  6028                           ;FRAME.c: 492: {;FRAME.c: 493: NeightAdress2=0x0000;
  6029  0007E8  0E00               	movlw	0
  6030  0007EA  6E59               	movwf	_NeightAdress2+1,c	;volatile
  6031  0007EC  0E00               	movlw	0
  6032  0007EE  6E58               	movwf	_NeightAdress2,c	;volatile
  6033  0007F0                     l4697:
  6034                           
  6035                           ;FRAME.c: 494: };FRAME.c: 495: NVMRead(&NeightAdress3,19,2);
  6036  0007F0  0E49               	movlw	low _NeightAdress3
  6037  0007F2  6E08               	movwf	NVMRead@dest,c
  6038  0007F4  0E00               	movlw	high _NeightAdress3
  6039  0007F6  6E09               	movwf	NVMRead@dest+1,c
  6040  0007F8  0E00               	movlw	0
  6041  0007FA  6E0B               	movwf	NVMRead@addr+1,c
  6042  0007FC  0E13               	movlw	19
  6043  0007FE  6E0A               	movwf	NVMRead@addr,c
  6044  000800  0E00               	movlw	0
  6045  000802  6E0D               	movwf	NVMRead@count+1,c
  6046  000804  0E02               	movlw	2
  6047  000806  6E0C               	movwf	NVMRead@count,c
  6048  000808  ECC0  F00C         	call	_NVMRead	;wreg free
  6049                           
  6050                           ;FRAME.c: 496: if(NeightAdress3==0xFFFF)
  6051  00080C  2849               	incf	_NeightAdress3,w,c	;volatile
  6052  00080E  E107               	bnz	l4703
  6053  000810  284A               	incf	_NeightAdress3+1,w,c	;volatile
  6054  000812  A4D8               	btfss	status,2,c
  6055  000814  D004               	goto	l4703
  6056                           
  6057                           ;FRAME.c: 497: {;FRAME.c: 498: NeightAdress3=0x0000;
  6058  000816  0E00               	movlw	0
  6059  000818  6E4A               	movwf	_NeightAdress3+1,c	;volatile
  6060  00081A  0E00               	movlw	0
  6061  00081C  6E49               	movwf	_NeightAdress3,c	;volatile
  6062  00081E                     l4703:
  6063                           
  6064                           ;FRAME.c: 499: };FRAME.c: 500: NVMRead(&NeightAdress4,22,2);
  6065  00081E  0E47               	movlw	low _NeightAdress4
  6066  000820  6E08               	movwf	NVMRead@dest,c
  6067  000822  0E00               	movlw	high _NeightAdress4
  6068  000824  6E09               	movwf	NVMRead@dest+1,c
  6069  000826  0E00               	movlw	0
  6070  000828  6E0B               	movwf	NVMRead@addr+1,c
  6071  00082A  0E16               	movlw	22
  6072  00082C  6E0A               	movwf	NVMRead@addr,c
  6073  00082E  0E00               	movlw	0
  6074  000830  6E0D               	movwf	NVMRead@count+1,c
  6075  000832  0E02               	movlw	2
  6076  000834  6E0C               	movwf	NVMRead@count,c
  6077  000836  ECC0  F00C         	call	_NVMRead	;wreg free
  6078                           
  6079                           ;FRAME.c: 501: if(NeightAdress4==0xFFFF)
  6080  00083A  2847               	incf	_NeightAdress4,w,c	;volatile
  6081  00083C  E107               	bnz	l4709
  6082  00083E  2848               	incf	_NeightAdress4+1,w,c	;volatile
  6083  000840  A4D8               	btfss	status,2,c
  6084  000842  D004               	goto	l4709
  6085                           
  6086                           ;FRAME.c: 502: {;FRAME.c: 503: NeightAdress4=0x0000;
  6087  000844  0E00               	movlw	0
  6088  000846  6E48               	movwf	_NeightAdress4+1,c	;volatile
  6089  000848  0E00               	movlw	0
  6090  00084A  6E47               	movwf	_NeightAdress4,c	;volatile
  6091  00084C                     l4709:
  6092                           
  6093                           ;FRAME.c: 504: };FRAME.c: 505: NVMRead(&NeightAdress5,25,2);
  6094  00084C  0E45               	movlw	low _NeightAdress5
  6095  00084E  6E08               	movwf	NVMRead@dest,c
  6096  000850  0E00               	movlw	high _NeightAdress5
  6097  000852  6E09               	movwf	NVMRead@dest+1,c
  6098  000854  0E00               	movlw	0
  6099  000856  6E0B               	movwf	NVMRead@addr+1,c
  6100  000858  0E19               	movlw	25
  6101  00085A  6E0A               	movwf	NVMRead@addr,c
  6102  00085C  0E00               	movlw	0
  6103  00085E  6E0D               	movwf	NVMRead@count+1,c
  6104  000860  0E02               	movlw	2
  6105  000862  6E0C               	movwf	NVMRead@count,c
  6106  000864  ECC0  F00C         	call	_NVMRead	;wreg free
  6107                           
  6108                           ;FRAME.c: 506: if(NeightAdress5==0xFFFF)
  6109  000868  2845               	incf	_NeightAdress5,w,c	;volatile
  6110  00086A  E107               	bnz	l4715
  6111  00086C  2846               	incf	_NeightAdress5+1,w,c	;volatile
  6112  00086E  A4D8               	btfss	status,2,c
  6113  000870  D004               	goto	l4715
  6114                           
  6115                           ;FRAME.c: 507: {;FRAME.c: 508: NeightAdress5=0x0000;
  6116  000872  0E00               	movlw	0
  6117  000874  6E46               	movwf	_NeightAdress5+1,c	;volatile
  6118  000876  0E00               	movlw	0
  6119  000878  6E45               	movwf	_NeightAdress5,c	;volatile
  6120  00087A                     l4715:
  6121                           
  6122                           ;FRAME.c: 509: };FRAME.c: 510: NVMRead(&NeightAdress6,28,2);
  6123  00087A  0E43               	movlw	low _NeightAdress6
  6124  00087C  6E08               	movwf	NVMRead@dest,c
  6125  00087E  0E00               	movlw	high _NeightAdress6
  6126  000880  6E09               	movwf	NVMRead@dest+1,c
  6127  000882  0E00               	movlw	0
  6128  000884  6E0B               	movwf	NVMRead@addr+1,c
  6129  000886  0E1C               	movlw	28
  6130  000888  6E0A               	movwf	NVMRead@addr,c
  6131  00088A  0E00               	movlw	0
  6132  00088C  6E0D               	movwf	NVMRead@count+1,c
  6133  00088E  0E02               	movlw	2
  6134  000890  6E0C               	movwf	NVMRead@count,c
  6135  000892  ECC0  F00C         	call	_NVMRead	;wreg free
  6136                           
  6137                           ;FRAME.c: 511: if(NeightAdress6==0xFFFF)
  6138  000896  2843               	incf	_NeightAdress6,w,c	;volatile
  6139  000898  E107               	bnz	l4721
  6140  00089A  2844               	incf	_NeightAdress6+1,w,c	;volatile
  6141  00089C  A4D8               	btfss	status,2,c
  6142  00089E  D004               	goto	l4721
  6143                           
  6144                           ;FRAME.c: 512: {;FRAME.c: 513: NeightAdress6=0x0000;
  6145  0008A0  0E00               	movlw	0
  6146  0008A2  6E44               	movwf	_NeightAdress6+1,c	;volatile
  6147  0008A4  0E00               	movlw	0
  6148  0008A6  6E43               	movwf	_NeightAdress6,c	;volatile
  6149  0008A8                     l4721:
  6150                           
  6151                           ;FRAME.c: 514: };FRAME.c: 515: NVMRead(&NeightAdress7,31,2);
  6152  0008A8  0E41               	movlw	low _NeightAdress7
  6153  0008AA  6E08               	movwf	NVMRead@dest,c
  6154  0008AC  0E00               	movlw	high _NeightAdress7
  6155  0008AE  6E09               	movwf	NVMRead@dest+1,c
  6156  0008B0  0E00               	movlw	0
  6157  0008B2  6E0B               	movwf	NVMRead@addr+1,c
  6158  0008B4  0E1F               	movlw	31
  6159  0008B6  6E0A               	movwf	NVMRead@addr,c
  6160  0008B8  0E00               	movlw	0
  6161  0008BA  6E0D               	movwf	NVMRead@count+1,c
  6162  0008BC  0E02               	movlw	2
  6163  0008BE  6E0C               	movwf	NVMRead@count,c
  6164  0008C0  ECC0  F00C         	call	_NVMRead	;wreg free
  6165                           
  6166                           ;FRAME.c: 516: if(NeightAdress7==0xFFFF)
  6167  0008C4  2841               	incf	_NeightAdress7,w,c	;volatile
  6168  0008C6  E107               	bnz	l4727
  6169  0008C8  2842               	incf	_NeightAdress7+1,w,c	;volatile
  6170  0008CA  A4D8               	btfss	status,2,c
  6171  0008CC  D004               	goto	l4727
  6172                           
  6173                           ;FRAME.c: 517: {;FRAME.c: 518: NeightAdress7=0x0000;
  6174  0008CE  0E00               	movlw	0
  6175  0008D0  6E42               	movwf	_NeightAdress7+1,c	;volatile
  6176  0008D2  0E00               	movlw	0
  6177  0008D4  6E41               	movwf	_NeightAdress7,c	;volatile
  6178  0008D6                     l4727:
  6179                           
  6180                           ;FRAME.c: 519: };FRAME.c: 520: NVMRead(&NeightAdress8,34,2);
  6181  0008D6  0E3F               	movlw	low _NeightAdress8
  6182  0008D8  6E08               	movwf	NVMRead@dest,c
  6183  0008DA  0E00               	movlw	high _NeightAdress8
  6184  0008DC  6E09               	movwf	NVMRead@dest+1,c
  6185  0008DE  0E00               	movlw	0
  6186  0008E0  6E0B               	movwf	NVMRead@addr+1,c
  6187  0008E2  0E22               	movlw	34
  6188  0008E4  6E0A               	movwf	NVMRead@addr,c
  6189  0008E6  0E00               	movlw	0
  6190  0008E8  6E0D               	movwf	NVMRead@count+1,c
  6191  0008EA  0E02               	movlw	2
  6192  0008EC  6E0C               	movwf	NVMRead@count,c
  6193  0008EE  ECC0  F00C         	call	_NVMRead	;wreg free
  6194                           
  6195                           ;FRAME.c: 521: if(NeightAdress8==0xFFFF)
  6196  0008F2  283F               	incf	_NeightAdress8,w,c	;volatile
  6197  0008F4  E107               	bnz	l641
  6198  0008F6  2840               	incf	_NeightAdress8+1,w,c	;volatile
  6199  0008F8  A4D8               	btfss	status,2,c
  6200  0008FA  0012               	return	
  6201                           
  6202                           ;FRAME.c: 522: {;FRAME.c: 523: NeightAdress8=0x0000;
  6203  0008FC  0E00               	movlw	0
  6204  0008FE  6E40               	movwf	_NeightAdress8+1,c	;volatile
  6205  000900  0E00               	movlw	0
  6206  000902  6E3F               	movwf	_NeightAdress8,c	;volatile
  6207  000904                     l641:
  6208  000904  0012               	return		;funcret
  6209  000906                     __end_of_ReadDataToEEPROM:
  6210                           	opt callstack 0
  6211                           
  6212 ;; *************** function _NVMRead *****************
  6213 ;; Defined at:
  6214 ;;		line 125 in file "EEPROM.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6217 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  6218 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  6219 ;;		 -> NeightAdress1(2), 
  6220 ;;  addr            2    9[COMRAM] unsigned short 
  6221 ;;  count           2   11[COMRAM] unsigned short 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6233 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;Total ram usage:        6 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    4
  6240 ;; This function calls:
  6241 ;;		_ReadfromEEPROM
  6242 ;; This function is called by:
  6243 ;;		_ReadDataToEEPROM
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text47
  6248  001980                     __ptext47:
  6249                           	opt callstack 0
  6250  001980                     _NVMRead:
  6251                           	opt callstack 24
  6252                           
  6253                           ;EEPROM.c: 127: while( count > 0 )
  6254                           
  6255                           ;incstack = 0
  6256  001980  D014               	goto	l4445
  6257  001982                     l928:
  6258  001982  B2A6               	btfsc	4006,1,c	;volsfr
  6259  001984  D7FE               	goto	l928
  6260                           
  6261                           ;EEPROM.c: 130: *dest++ = ReadfromEEPROM(addr++);
  6262  001986  C00A  F006         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6263  00198A  C00B  F007         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6264  00198E  EC76  F00D         	call	_ReadfromEEPROM	;wreg free
  6265  001992  C008  FFD9         	movff	NVMRead@dest,fsr2l
  6266  001996  C009  FFDA         	movff	NVMRead@dest+1,fsr2h
  6267  00199A  6EDF               	movwf	indf2,c
  6268  00199C  4A0A               	infsnz	NVMRead@addr,f,c
  6269  00199E  2A0B               	incf	NVMRead@addr+1,f,c
  6270  0019A0  4A08               	infsnz	NVMRead@dest,f,c
  6271  0019A2  2A09               	incf	NVMRead@dest+1,f,c
  6272                           
  6273                           ;EEPROM.c: 131: count--;
  6274  0019A4  060C               	decf	NVMRead@count,f,c
  6275  0019A6  A0D8               	btfss	status,0,c
  6276  0019A8  060D               	decf	NVMRead@count+1,f,c
  6277  0019AA                     l4445:
  6278  0019AA  500C               	movf	NVMRead@count,w,c
  6279  0019AC  100D               	iorwf	NVMRead@count+1,w,c
  6280  0019AE  B4D8               	btfsc	status,2,c
  6281  0019B0  0012               	return	
  6282  0019B2  D7E7               	goto	l928
  6283  0019B4                     __end_of_NVMRead:
  6284                           	opt callstack 0
  6285                           
  6286 ;; *************** function _ReadfromEEPROM *****************
  6287 ;; Defined at:
  6288 ;;		line 73 in file "EEPROM.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  Address         2    5[COMRAM] unsigned short 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      unsigned char 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;Total ram usage:        2 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_NVMRead
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text48
  6317  001AEC                     __ptext48:
  6318                           	opt callstack 0
  6319  001AEC                     _ReadfromEEPROM:
  6320                           	opt callstack 24
  6321                           
  6322                           ;EEPROM.c: 75: EEADRH = (BYTE)(Address>>8);
  6323                           
  6324                           ;incstack = 0
  6325  001AEC  5007               	movf	ReadfromEEPROM@Address+1,w,c
  6326  001AEE  6EAA               	movwf	4010,c	;volatile
  6327                           
  6328                           ;EEPROM.c: 76: EEADR = (BYTE)Address;
  6329  001AF0  C006  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6330                           
  6331                           ;EEPROM.c: 77: EECON1bits.RD = 1;
  6332  001AF4  80A6               	bsf	4006,0,c	;volsfr
  6333                           
  6334                           ;EEPROM.c: 78: EECON1bits.EEPGD = 0;
  6335  001AF6  9EA6               	bcf	4006,7,c	;volsfr
  6336                           
  6337                           ;EEPROM.c: 79: EECON1bits.CFGS = 0;
  6338  001AF8  9CA6               	bcf	4006,6,c	;volsfr
  6339                           
  6340                           ;EEPROM.c: 80: return EEDATA;
  6341  001AFA  50A8               	movf	4008,w,c	;volatile
  6342  001AFC  0012               	return		;funcret
  6343  001AFE                     __end_of_ReadfromEEPROM:
  6344                           	opt callstack 0
  6345                           
  6346 ;; *************** function _NVMInit *****************
  6347 ;; Defined at:
  6348 ;;		line 49 in file "EEPROM.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;		None
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  NeightAdress    2    0        unsigned int 
  6353 ;;  result          1   13[COMRAM] enum E10294
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      enum E10294
  6356 ;; Registers used:
  6357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;Total ram usage:        3 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    4
  6370 ;; This function calls:
  6371 ;;		_NVMalloc
  6372 ;; This function is called by:
  6373 ;;		_INI_All
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text49
  6378  001804                     __ptext49:
  6379                           	opt callstack 0
  6380  001804                     _NVMInit:
  6381                           	opt callstack 25
  6382                           
  6383                           ;EEPROM.c: 51: BOOL result = TRUE;
  6384                           
  6385                           ;incstack = 0
  6386  001804  0E01               	movlw	1
  6387  001806  6E0E               	movwf	NVMInit@result,c
  6388                           
  6389                           ;EEPROM.c: 53: nextEEPosition = 0;
  6390  001808  0E00               	movlw	0
  6391  00180A  6E30               	movwf	_nextEEPosition+1,c
  6392  00180C  0E00               	movlw	0
  6393  00180E  6E2F               	movwf	_nextEEPosition,c
  6394                           
  6395                           ;EEPROM.c: 55: result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6396  001810  0E00               	movlw	0
  6397  001812  6E07               	movwf	NVMalloc@size+1,c
  6398  001814  0E03               	movlw	3
  6399  001816  6E06               	movwf	NVMalloc@size,c
  6400  001818  0E3D               	movlw	low _ustawieniaKarty
  6401  00181A  6E08               	movwf	NVMalloc@location,c
  6402  00181C  0E00               	movlw	high _ustawieniaKarty
  6403  00181E  6E09               	movwf	NVMalloc@location+1,c
  6404  001820  EC8B  F00C         	call	_NVMalloc	;wreg free
  6405  001824  160E               	andwf	NVMInit@result,f,c
  6406                           
  6407                           ;EEPROM.c: 56: result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  6408  001826  0E00               	movlw	0
  6409  001828  6E07               	movwf	NVMalloc@size+1,c
  6410  00182A  0E10               	movlw	16
  6411  00182C  6E06               	movwf	NVMalloc@size,c
  6412  00182E  0E3B               	movlw	low _neighborsAdress
  6413  001830  6E08               	movwf	NVMalloc@location,c
  6414  001832  0E00               	movlw	high _neighborsAdress
  6415  001834  6E09               	movwf	NVMalloc@location+1,c
  6416  001836  EC8B  F00C         	call	_NVMalloc	;wreg free
  6417  00183A  160E               	andwf	NVMInit@result,f,c
  6418  00183C  0012               	return		;funcret
  6419  00183E                     __end_of_NVMInit:
  6420                           	opt callstack 0
  6421                           
  6422 ;; *************** function _NVMalloc *****************
  6423 ;; Defined at:
  6424 ;;		line 24 in file "EEPROM.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  size            2    5[COMRAM] unsigned short 
  6427 ;;  location        2    7[COMRAM] PTR unsigned short 
  6428 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      enum E10294
  6433 ;; Registers used:
  6434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;Total ram usage:        6 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; Hardware stack levels required when called:    3
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_NVMInit
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text50
  6455  001916                     __ptext50:
  6456                           	opt callstack 0
  6457  001916                     _NVMalloc:
  6458                           	opt callstack 25
  6459                           
  6460                           ;EEPROM.c: 28: if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6461                           
  6462                           ;incstack = 0
  6463  001916  5006               	movf	NVMalloc@size,w,c
  6464  001918  242F               	addwf	_nextEEPosition,w,c
  6465  00191A  6E0A               	movwf	??_NVMalloc& (0+255),c
  6466  00191C  5007               	movf	NVMalloc@size+1,w,c
  6467  00191E  2030               	addwfc	_nextEEPosition+1,w,c
  6468  001920  6E0B               	movwf	(??_NVMalloc+1)& (0+255),c
  6469  001922  040A               	decf	??_NVMalloc,w,c
  6470  001924  0E04               	movlw	4
  6471  001926  580B               	subwfb	??_NVMalloc+1,w,c
  6472  001928  A0D8               	btfss	status,0,c
  6473  00192A  D002               	goto	l4491
  6474                           
  6475                           ;EEPROM.c: 29: {;EEPROM.c: 30: return FALSE;
  6476  00192C  0E00               	movlw	0
  6477  00192E  0012               	return	
  6478  001930                     l4491:
  6479                           
  6480                           ;EEPROM.c: 31: };EEPROM.c: 33: *location = nextEEPosition;
  6481  001930  C008  FFD9         	movff	NVMalloc@location,fsr2l
  6482  001934  C009  FFDA         	movff	NVMalloc@location+1,fsr2h
  6483  001938  C02F  FFDE         	movff	_nextEEPosition,postinc2
  6484  00193C  C030  FFDD         	movff	_nextEEPosition+1,postdec2
  6485                           
  6486                           ;EEPROM.c: 34: nextEEPosition += size;
  6487  001940  5006               	movf	NVMalloc@size,w,c
  6488  001942  262F               	addwf	_nextEEPosition,f,c
  6489  001944  5007               	movf	NVMalloc@size+1,w,c
  6490  001946  2230               	addwfc	_nextEEPosition+1,f,c
  6491                           
  6492                           ;EEPROM.c: 35: return TRUE;
  6493  001948  0E01               	movlw	1
  6494  00194A  0012               	return		;funcret
  6495  00194C                     __end_of_NVMalloc:
  6496                           	opt callstack 0
  6497                           
  6498 ;; *************** function _INI_Timer *****************
  6499 ;; Defined at:
  6500 ;;		line 92 in file "TMR1.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;		None
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      unsigned char 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;Total ram usage:        0 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    3
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_INI_All
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text51
  6529  001ABE                     __ptext51:
  6530                           	opt callstack 0
  6531  001ABE                     _INI_Timer:
  6532                           	opt callstack 26
  6533                           
  6534                           ;TMR1.c: 96: IRCF2 = 1;
  6535                           
  6536                           ;incstack = 0
  6537  001ABE  8CD3               	bsf	4051,6,c	;volatile
  6538                           
  6539                           ;TMR1.c: 97: IRCF1 = 1;
  6540  001AC0  8AD3               	bsf	4051,5,c	;volatile
  6541                           
  6542                           ;TMR1.c: 98: IRCF0 = 1;
  6543  001AC2  88D3               	bsf	4051,4,c	;volatile
  6544                           
  6545                           ;TMR1.c: 99: T1CON = 0b00111101;
  6546  001AC4  0E3D               	movlw	61
  6547  001AC6  6ECD               	movwf	4045,c	;volatile
  6548                           
  6549                           ;TMR1.c: 100: TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6550  001AC8  0E9E               	movlw	158
  6551  001ACA  6ECF               	movwf	4047,c	;volatile
  6552                           
  6553                           ;TMR1.c: 101: TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6554  001ACC  0E57               	movlw	87
  6555  001ACE  6ECE               	movwf	4046,c	;volatile
  6556                           
  6557                           ;TMR1.c: 102: TMR1IE=1;
  6558  001AD0  809D               	bsf	3997,0,c	;volatile
  6559                           
  6560                           ;TMR1.c: 103: TMR1ON = 1;
  6561  001AD2  80CD               	bsf	4045,0,c	;volatile
  6562  001AD4  0012               	return		;funcret
  6563  001AD6                     __end_of_INI_Timer:
  6564                           	opt callstack 0
  6565                           
  6566 ;; *************** function _INI_OUTPUT *****************
  6567 ;; Defined at:
  6568 ;;		line 29 in file "INI.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, status,2
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    3
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_INI_All
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text52
  6597  001A80                     __ptext52:
  6598                           	opt callstack 0
  6599  001A80                     _INI_OUTPUT:
  6600                           	opt callstack 26
  6601                           
  6602                           ;INI.c: 33: LATA = 0;
  6603                           
  6604                           ;incstack = 0
  6605  001A80  0E00               	movlw	0
  6606  001A82  6E89               	movwf	3977,c	;volatile
  6607                           
  6608                           ;INI.c: 34: LATB = 0;
  6609  001A84  0E00               	movlw	0
  6610  001A86  6E8A               	movwf	3978,c	;volatile
  6611                           
  6612                           ;INI.c: 35: LATC = 0;
  6613  001A88  0E00               	movlw	0
  6614  001A8A  6E8B               	movwf	3979,c	;volatile
  6615                           
  6616                           ;INI.c: 36: TRISA = 0x0C;
  6617  001A8C  0E0C               	movlw	12
  6618  001A8E  6E92               	movwf	3986,c	;volatile
  6619                           
  6620                           ;INI.c: 37: TRISB = 0b10001000;
  6621  001A90  0E88               	movlw	136
  6622  001A92  6E93               	movwf	3987,c	;volatile
  6623                           
  6624                           ;INI.c: 38: TRISC = 0xBF;
  6625  001A94  0EBF               	movlw	191
  6626  001A96  6E94               	movwf	3988,c	;volatile
  6627                           
  6628                           ;INI.c: 39: RCONbits.IPEN = 1;
  6629  001A98  8ED0               	bsf	4048,7,c	;volatile
  6630                           
  6631                           ;INI.c: 42: DetectorLedRadar.Flags.inicjalizacja = 1;
  6632  001A9A  0100               	movlb	0	; () banked
  6633  001A9C  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6634                           
  6635                           ; BSR set to: 0
  6636  001A9E  0012               	return		;funcret
  6637  001AA0                     __end_of_INI_OUTPUT:
  6638                           	opt callstack 0
  6639                           
  6640 ;; *************** function _INI_LED_Start *****************
  6641 ;; Defined at:
  6642 ;;		line 274 in file "LED.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;		None
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, status,2, status,0, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;Total ram usage:        0 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    4
  6663 ;; This function calls:
  6664 ;;		_LED_Control
  6665 ;; This function is called by:
  6666 ;;		_INI_All
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text53
  6671  0019B4                     __ptext53:
  6672                           	opt callstack 0
  6673  0019B4                     _INI_LED_Start:
  6674                           	opt callstack 25
  6675                           
  6676                           ;LED.c: 276: TRISA = TRISA & 0b00000001;
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;incstack = 0
  6680  0019B4  5092               	movf	3986,w,c	;volatile
  6681  0019B6  0B01               	andlw	1
  6682  0019B8  6E92               	movwf	3986,c	;volatile
  6683                           
  6684                           ;LED.c: 277: TRISB = TRISB & 0b11111100;
  6685  0019BA  5093               	movf	3987,w,c	;volatile
  6686  0019BC  0BFC               	andlw	252
  6687  0019BE  6E93               	movwf	3987,c	;volatile
  6688                           
  6689                           ;LED.c: 278: TRISE = TRISE & 0b11111000;
  6690  0019C0  5096               	movf	3990,w,c	;volatile
  6691  0019C2  0BF8               	andlw	248
  6692  0019C4  6E96               	movwf	3990,c	;volatile
  6693                           
  6694                           ;LED.c: 279: TRISD = TRISD & 0b00000000;
  6695  0019C6  0E00               	movlw	0
  6696  0019C8  6E95               	movwf	3989,c	;volatile
  6697                           
  6698                           ;LED.c: 280: LED_Control(RED,0b0000000000);
  6699  0019CA  0E00               	movlw	0
  6700  0019CC  6E07               	movwf	LED_Control@diode+1,c
  6701  0019CE  0E00               	movlw	0
  6702  0019D0  6E06               	movwf	LED_Control@diode,c
  6703  0019D2  0E00               	movlw	0
  6704  0019D4  EC3C  F005         	call	_LED_Control
  6705                           
  6706                           ;LED.c: 281: LED_Control(GREEN,0b0000000000);
  6707  0019D8  0E00               	movlw	0
  6708  0019DA  6E07               	movwf	LED_Control@diode+1,c
  6709  0019DC  0E00               	movlw	0
  6710  0019DE  6E06               	movwf	LED_Control@diode,c
  6711  0019E0  0E01               	movlw	1
  6712  0019E2  EC3C  F005         	call	_LED_Control
  6713  0019E6  0012               	return		;funcret
  6714  0019E8                     __end_of_INI_LED_Start:
  6715                           	opt callstack 0
  6716                           
  6717 ;; *************** function _LED_Control *****************
  6718 ;; Defined at:
  6719 ;;		line 299 in file "LED.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  color           1    wreg     enum E10511
  6722 ;;  diode           2    5[COMRAM] unsigned int 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  color           1    9[COMRAM] enum E10511
  6725 ;;  cos             2    0        unsigned int 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      unsigned char 
  6728 ;; Registers used:
  6729 ;;		wreg, status,2, status,0
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;Total ram usage:        5 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; Hardware stack levels required when called:    3
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_LED_Error
  6746 ;;		_LED_Update
  6747 ;;		_LED_Light_Pos
  6748 ;;		_INI_LED_Start
  6749 ;;		_LED_Clear
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text54
  6754  000A78                     __ptext54:
  6755                           	opt callstack 0
  6756  000A78                     _LED_Control:
  6757                           	opt callstack 24
  6758                           
  6759                           ;incstack = 0
  6760                           ;LED_Control@color stored from wreg
  6761  000A78  6E0A               	movwf	LED_Control@color,c
  6762                           
  6763                           ;LED.c: 302: if(color == RED)
  6764  000A7A  500A               	movf	LED_Control@color,w,c
  6765  000A7C  A4D8               	btfss	status,2,c
  6766  000A7E  D050               	goto	l422
  6767                           
  6768                           ;LED.c: 303: {;LED.c: 305: if((diode & 0b0000000001)== 0b0000000001)
  6769  000A80  A006               	btfss	LED_Control@diode,0,c
  6770  000A82  D003               	goto	l3963
  6771                           
  6772                           ;LED.c: 306: {;LED.c: 307: LATD = LATD | ~0b11101111;
  6773  000A84  508C               	movf	3980,w,c	;volatile
  6774  000A86  0910               	iorlw	16
  6775  000A88  D002               	goto	L4
  6776  000A8A                     l3963:
  6777                           
  6778                           ;LED.c: 309: else;LED.c: 310: {;LED.c: 311: LATD = LATD &0b11101111;
  6779  000A8A  508C               	movf	3980,w,c	;volatile
  6780  000A8C  0BEF               	andlw	239
  6781  000A8E                     L4:
  6782  000A8E  6E8C               	movwf	3980,c	;volatile
  6783                           
  6784                           ;LED.c: 312: };LED.c: 314: if((diode & 0b0000000010) == 0b0000000010)
  6785  000A90  A206               	btfss	LED_Control@diode,1,c
  6786  000A92  D003               	goto	l3969
  6787                           
  6788                           ;LED.c: 315: {;LED.c: 316: LATD = LATD | ~0b10111111;
  6789  000A94  508C               	movf	3980,w,c	;volatile
  6790  000A96  0940               	iorlw	64
  6791  000A98  D002               	goto	L5
  6792  000A9A                     l3969:
  6793                           
  6794                           ;LED.c: 318: else;LED.c: 319: {;LED.c: 320: LATD = LATD & 0b10111111;
  6795  000A9A  508C               	movf	3980,w,c	;volatile
  6796  000A9C  0BBF               	andlw	191
  6797  000A9E                     L5:
  6798  000A9E  6E8C               	movwf	3980,c	;volatile
  6799                           
  6800                           ;LED.c: 321: };LED.c: 323: if((diode & 0b0000000100) == 0b0000000100)
  6801  000AA0  A406               	btfss	LED_Control@diode,2,c
  6802  000AA2  D003               	goto	l3975
  6803                           
  6804                           ;LED.c: 324: {;LED.c: 325: LATB = LATB | ~0b11111110;
  6805  000AA4  508A               	movf	3978,w,c	;volatile
  6806  000AA6  0901               	iorlw	1
  6807  000AA8  D002               	goto	L6
  6808  000AAA                     l3975:
  6809                           
  6810                           ;LED.c: 327: else;LED.c: 328: {;LED.c: 329: LATB = LATB & 0b11111110;
  6811  000AAA  508A               	movf	3978,w,c	;volatile
  6812  000AAC  0BFE               	andlw	254
  6813  000AAE                     L6:
  6814  000AAE  6E8A               	movwf	3978,c	;volatile
  6815                           
  6816                           ;LED.c: 330: };LED.c: 333: if((diode & 0b0000001000) == 0b0000001000)
  6817  000AB0  A606               	btfss	LED_Control@diode,3,c
  6818  000AB2  D003               	goto	l3981
  6819                           
  6820                           ;LED.c: 334: {;LED.c: 335: LATA = LATA | ~0b11111101;
  6821  000AB4  5089               	movf	3977,w,c	;volatile
  6822  000AB6  0902               	iorlw	2
  6823  000AB8  D002               	goto	L7
  6824  000ABA                     l3981:
  6825                           
  6826                           ;LED.c: 337: else;LED.c: 338: {;LED.c: 339: LATA = LATA & 0b11111101;
  6827  000ABA  5089               	movf	3977,w,c	;volatile
  6828  000ABC  0BFD               	andlw	253
  6829  000ABE                     L7:
  6830  000ABE  6E89               	movwf	3977,c	;volatile
  6831                           
  6832                           ;LED.c: 340: };LED.c: 343: if((diode & 0b0000010000) == 0b0000010000)
  6833  000AC0  A806               	btfss	LED_Control@diode,4,c
  6834  000AC2  D003               	goto	l3987
  6835                           
  6836                           ;LED.c: 344: {;LED.c: 345: LATA = LATA | ~0b11110111;
  6837  000AC4  5089               	movf	3977,w,c	;volatile
  6838  000AC6  0908               	iorlw	8
  6839  000AC8  D002               	goto	L8
  6840  000ACA                     l3987:
  6841                           
  6842                           ;LED.c: 347: else;LED.c: 348: {;LED.c: 349: LATA = LATA & 0b11110111;
  6843  000ACA  5089               	movf	3977,w,c	;volatile
  6844  000ACC  0BF7               	andlw	247
  6845  000ACE                     L8:
  6846  000ACE  6E89               	movwf	3977,c	;volatile
  6847                           
  6848                           ;LED.c: 350: };LED.c: 353: if((diode & 0b0000100000) == 0b0000100000)
  6849  000AD0  AA06               	btfss	LED_Control@diode,5,c
  6850  000AD2  D003               	goto	l3993
  6851                           
  6852                           ;LED.c: 354: {;LED.c: 355: LATA = LATA | ~0b11011111;
  6853  000AD4  5089               	movf	3977,w,c	;volatile
  6854  000AD6  0920               	iorlw	32
  6855  000AD8  D002               	goto	L9
  6856  000ADA                     l3993:
  6857                           
  6858                           ;LED.c: 357: else;LED.c: 358: {;LED.c: 359: LATA = LATA & 0b11011111;
  6859  000ADA  5089               	movf	3977,w,c	;volatile
  6860  000ADC  0BDF               	andlw	223
  6861  000ADE                     L9:
  6862  000ADE  6E89               	movwf	3977,c	;volatile
  6863                           
  6864                           ;LED.c: 360: };LED.c: 362: if((diode & 0b0001000000) == 0b0001000000)
  6865  000AE0  AC06               	btfss	LED_Control@diode,6,c
  6866  000AE2  D003               	goto	l3999
  6867                           
  6868                           ;LED.c: 363: {;LED.c: 364: LATE = LATE | ~0b11111101;
  6869  000AE4  508D               	movf	3981,w,c	;volatile
  6870  000AE6  0902               	iorlw	2
  6871  000AE8  D002               	goto	L10
  6872  000AEA                     l3999:
  6873                           
  6874                           ;LED.c: 366: else;LED.c: 367: {;LED.c: 368: LATE = LATE & 0b11111101;
  6875  000AEA  508D               	movf	3981,w,c	;volatile
  6876  000AEC  0BFD               	andlw	253
  6877  000AEE                     L10:
  6878  000AEE  6E8D               	movwf	3981,c	;volatile
  6879                           
  6880                           ;LED.c: 369: };LED.c: 371: if((diode & 0b0010000000) == 0b0010000000)
  6881  000AF0  AE06               	btfss	LED_Control@diode,7,c
  6882  000AF2  D003               	goto	l4005
  6883                           
  6884                           ;LED.c: 372: {;LED.c: 373: LATA = LATA | ~0b01111111;
  6885  000AF4  5089               	movf	3977,w,c	;volatile
  6886  000AF6  0980               	iorlw	128
  6887  000AF8  D002               	goto	L11
  6888  000AFA                     l4005:
  6889                           
  6890                           ;LED.c: 375: else;LED.c: 376: {;LED.c: 377: LATA = LATA & 0b01111111;
  6891  000AFA  5089               	movf	3977,w,c	;volatile
  6892  000AFC  0B7F               	andlw	127
  6893  000AFE                     L11:
  6894  000AFE  6E89               	movwf	3977,c	;volatile
  6895                           
  6896                           ;LED.c: 378: };LED.c: 381: if((diode & 0b0100000000) == 0b0100000000)
  6897  000B00  A007               	btfss	LED_Control@diode+1,0,c
  6898  000B02  D003               	goto	l4011
  6899                           
  6900                           ;LED.c: 382: {;LED.c: 383: LATD = LATD | ~0b11111110;
  6901  000B04  508C               	movf	3980,w,c	;volatile
  6902  000B06  0901               	iorlw	1
  6903  000B08  D002               	goto	L12
  6904  000B0A                     l4011:
  6905                           
  6906                           ;LED.c: 385: else;LED.c: 386: {;LED.c: 387: LATD = LATD & 0b11111110;
  6907  000B0A  508C               	movf	3980,w,c	;volatile
  6908  000B0C  0BFE               	andlw	254
  6909  000B0E                     L12:
  6910  000B0E  6E8C               	movwf	3980,c	;volatile
  6911                           
  6912                           ;LED.c: 388: };LED.c: 390: if((diode & 0b1000000000) == 0b1000000000)
  6913  000B10  A207               	btfss	LED_Control@diode+1,1,c
  6914  000B12  D003               	goto	l4017
  6915                           
  6916                           ;LED.c: 391: {;LED.c: 392: LATD = LATD | ~0b11111011;
  6917  000B14  508C               	movf	3980,w,c	;volatile
  6918  000B16  0904               	iorlw	4
  6919  000B18  D002               	goto	L13
  6920  000B1A                     l4017:
  6921                           
  6922                           ;LED.c: 394: else;LED.c: 395: {;LED.c: 396: LATD = LATD & 0b11111011;
  6923  000B1A  508C               	movf	3980,w,c	;volatile
  6924  000B1C  0BFB               	andlw	251
  6925  000B1E                     L13:
  6926  000B1E  6E8C               	movwf	3980,c	;volatile
  6927  000B20                     l422:
  6928                           
  6929                           ;LED.c: 397: };LED.c: 399: };LED.c: 401: if(color == GREEN)
  6930  000B20  040A               	decf	LED_Control@color,w,c
  6931  000B22  A4D8               	btfss	status,2,c
  6932  000B24  0012               	return	
  6933                           
  6934                           ;LED.c: 402: {;LED.c: 404: if((diode & 0b0000000001) == 0b0000000001)
  6935  000B26  A006               	btfss	LED_Control@diode,0,c
  6936  000B28  D003               	goto	l4023
  6937                           
  6938                           ;LED.c: 405: {;LED.c: 406: LATD = LATD | ~0b11011111;
  6939  000B2A  508C               	movf	3980,w,c	;volatile
  6940  000B2C  0920               	iorlw	32
  6941  000B2E  D002               	goto	L14
  6942  000B30                     l4023:
  6943                           
  6944                           ;LED.c: 408: else;LED.c: 409: {;LED.c: 410: LATD = LATD & 0b11011111;
  6945  000B30  508C               	movf	3980,w,c	;volatile
  6946  000B32  0BDF               	andlw	223
  6947  000B34                     L14:
  6948  000B34  6E8C               	movwf	3980,c	;volatile
  6949                           
  6950                           ;LED.c: 411: };LED.c: 414: if((diode & 0b0000000010) == 0b0000000010)
  6951  000B36  A206               	btfss	LED_Control@diode,1,c
  6952  000B38  D003               	goto	l4029
  6953                           
  6954                           ;LED.c: 415: {;LED.c: 416: LATD = LATD | ~0b01111111;
  6955  000B3A  508C               	movf	3980,w,c	;volatile
  6956  000B3C  0980               	iorlw	128
  6957  000B3E  D002               	goto	L15
  6958  000B40                     l4029:
  6959                           
  6960                           ;LED.c: 418: else;LED.c: 419: {;LED.c: 420: LATD = LATD & 0b01111111;
  6961  000B40  508C               	movf	3980,w,c	;volatile
  6962  000B42  0B7F               	andlw	127
  6963  000B44                     L15:
  6964  000B44  6E8C               	movwf	3980,c	;volatile
  6965                           
  6966                           ;LED.c: 421: };LED.c: 424: if((diode & 0b0000000100) == 0b0000000100)
  6967  000B46  A406               	btfss	LED_Control@diode,2,c
  6968  000B48  D003               	goto	l4035
  6969                           
  6970                           ;LED.c: 425: {;LED.c: 426: LATB = LATB | ~0b11111101;
  6971  000B4A  508A               	movf	3978,w,c	;volatile
  6972  000B4C  0902               	iorlw	2
  6973  000B4E  D002               	goto	L16
  6974  000B50                     l4035:
  6975                           
  6976                           ;LED.c: 428: else;LED.c: 429: {;LED.c: 430: LATB = LATB & 0b11111101;
  6977  000B50  508A               	movf	3978,w,c	;volatile
  6978  000B52  0BFD               	andlw	253
  6979  000B54                     L16:
  6980  000B54  6E8A               	movwf	3978,c	;volatile
  6981                           
  6982                           ;LED.c: 431: };LED.c: 433: if((diode & 0b0000001000) == 0b0000001000)
  6983  000B56  A606               	btfss	LED_Control@diode,3,c
  6984  000B58  D003               	goto	l4041
  6985                           
  6986                           ;LED.c: 434: {;LED.c: 435: LATA = LATA | ~0b11111011;
  6987  000B5A  5089               	movf	3977,w,c	;volatile
  6988  000B5C  0904               	iorlw	4
  6989  000B5E  D002               	goto	L17
  6990  000B60                     l4041:
  6991                           
  6992                           ;LED.c: 437: else;LED.c: 438: {;LED.c: 439: LATA = LATA & 0b11111011;
  6993  000B60  5089               	movf	3977,w,c	;volatile
  6994  000B62  0BFB               	andlw	251
  6995  000B64                     L17:
  6996  000B64  6E89               	movwf	3977,c	;volatile
  6997                           
  6998                           ;LED.c: 440: };LED.c: 443: if((diode & 0b0000010000) == 0b0000010000)
  6999  000B66  A806               	btfss	LED_Control@diode,4,c
  7000  000B68  D003               	goto	l4047
  7001                           
  7002                           ;LED.c: 444: {;LED.c: 445: LATA = LATA | ~0b11101111;
  7003  000B6A  5089               	movf	3977,w,c	;volatile
  7004  000B6C  0910               	iorlw	16
  7005  000B6E  D002               	goto	L18
  7006  000B70                     l4047:
  7007                           
  7008                           ;LED.c: 447: else;LED.c: 448: {;LED.c: 449: LATA = LATA & 0b11101111;
  7009  000B70  5089               	movf	3977,w,c	;volatile
  7010  000B72  0BEF               	andlw	239
  7011  000B74                     L18:
  7012  000B74  6E89               	movwf	3977,c	;volatile
  7013                           
  7014                           ;LED.c: 450: };LED.c: 453: if((diode & 0b0000100000) == 0b0000100000)
  7015  000B76  AA06               	btfss	LED_Control@diode,5,c
  7016  000B78  D003               	goto	l4053
  7017                           
  7018                           ;LED.c: 454: {;LED.c: 455: LATE = LATE | ~0b11111110;
  7019  000B7A  508D               	movf	3981,w,c	;volatile
  7020  000B7C  0901               	iorlw	1
  7021  000B7E  D002               	goto	L19
  7022  000B80                     l4053:
  7023                           
  7024                           ;LED.c: 457: else;LED.c: 458: {;LED.c: 459: LATE = LATE & 0b11111110;
  7025  000B80  508D               	movf	3981,w,c	;volatile
  7026  000B82  0BFE               	andlw	254
  7027  000B84                     L19:
  7028  000B84  6E8D               	movwf	3981,c	;volatile
  7029                           
  7030                           ;LED.c: 460: };LED.c: 463: if((diode & 0b0001000000) == 0b0001000000)
  7031  000B86  AC06               	btfss	LED_Control@diode,6,c
  7032  000B88  D003               	goto	l4059
  7033                           
  7034                           ;LED.c: 464: {;LED.c: 465: LATE = LATE | ~0b11111011;
  7035  000B8A  508D               	movf	3981,w,c	;volatile
  7036  000B8C  0904               	iorlw	4
  7037  000B8E  D002               	goto	L20
  7038  000B90                     l4059:
  7039                           
  7040                           ;LED.c: 467: else;LED.c: 468: {;LED.c: 469: LATE = LATE & 0b11111011;
  7041  000B90  508D               	movf	3981,w,c	;volatile
  7042  000B92  0BFB               	andlw	251
  7043  000B94                     L20:
  7044  000B94  6E8D               	movwf	3981,c	;volatile
  7045                           
  7046                           ;LED.c: 470: };LED.c: 472: if((diode & 0b0010000000) == 0b0010000000)
  7047  000B96  AE06               	btfss	LED_Control@diode,7,c
  7048  000B98  D003               	goto	l4065
  7049                           
  7050                           ;LED.c: 473: {;LED.c: 474: LATA = LATA | ~0b10111111;
  7051  000B9A  5089               	movf	3977,w,c	;volatile
  7052  000B9C  0940               	iorlw	64
  7053  000B9E  D002               	goto	L21
  7054  000BA0                     l4065:
  7055                           
  7056                           ;LED.c: 476: else;LED.c: 477: {;LED.c: 478: LATA = LATA & 0b10111111;
  7057  000BA0  5089               	movf	3977,w,c	;volatile
  7058  000BA2  0BBF               	andlw	191
  7059  000BA4                     L21:
  7060  000BA4  6E89               	movwf	3977,c	;volatile
  7061                           
  7062                           ;LED.c: 479: };LED.c: 481: if((diode & 0b0100000000) == 0b0100000000)
  7063  000BA6  A007               	btfss	LED_Control@diode+1,0,c
  7064  000BA8  D003               	goto	l4071
  7065                           
  7066                           ;LED.c: 482: {;LED.c: 483: LATD = LATD | ~0b11111101;
  7067  000BAA  508C               	movf	3980,w,c	;volatile
  7068  000BAC  0902               	iorlw	2
  7069  000BAE  D002               	goto	L22
  7070  000BB0                     l4071:
  7071                           
  7072                           ;LED.c: 485: else;LED.c: 486: {;LED.c: 487: LATD = LATD & 0b11111101;
  7073  000BB0  508C               	movf	3980,w,c	;volatile
  7074  000BB2  0BFD               	andlw	253
  7075  000BB4                     L22:
  7076  000BB4  6E8C               	movwf	3980,c	;volatile
  7077                           
  7078                           ;LED.c: 488: };LED.c: 490: if((diode & 0b1000000000) == 0b1000000000)
  7079  000BB6  A207               	btfss	LED_Control@diode+1,1,c
  7080  000BB8  D004               	goto	l4077
  7081                           
  7082                           ;LED.c: 491: {;LED.c: 492: LATD = LATD | ~0b11110111;
  7083  000BBA  508C               	movf	3980,w,c	;volatile
  7084  000BBC  0908               	iorlw	8
  7085  000BBE  6E8C               	movwf	3980,c	;volatile
  7086                           
  7087                           ;LED.c: 493: }
  7088  000BC0  0012               	return	
  7089  000BC2                     l4077:
  7090                           
  7091                           ;LED.c: 494: else;LED.c: 495: {;LED.c: 496: LATD = LATD &0b11110111;
  7092  000BC2  508C               	movf	3980,w,c	;volatile
  7093  000BC4  0BF7               	andlw	247
  7094  000BC6  6E8C               	movwf	3980,c	;volatile
  7095  000BC8  0012               	return		;funcret
  7096  000BCA                     __end_of_LED_Control:
  7097                           	opt callstack 0
  7098                           
  7099 ;; *************** function _INI_GlobalInterrupt *****************
  7100 ;; Defined at:
  7101 ;;		line 78 in file "INI.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		None
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    3
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_INI_All
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text55
  7130  001B0C                     __ptext55:
  7131                           	opt callstack 0
  7132  001B0C                     _INI_GlobalInterrupt:
  7133                           	opt callstack 26
  7134                           
  7135                           ;INI.c: 80: INTCONbits.GIEH=1;
  7136                           
  7137                           ;incstack = 0
  7138  001B0C  8EF2               	bsf	4082,7,c	;volatile
  7139                           
  7140                           ;INI.c: 81: INTCONbits.GIEL=1;
  7141  001B0E  8CF2               	bsf	4082,6,c	;volatile
  7142                           
  7143                           ;INI.c: 82: RCONbits.IPEN=1;
  7144  001B10  8ED0               	bsf	4048,7,c	;volatile
  7145                           
  7146                           ;INI.c: 83: IPEN =1;
  7147  001B12  8ED0               	bsf	4048,7,c	;volatile
  7148                           
  7149                           ;INI.c: 85: PEIE=1;
  7150  001B14  8CF2               	bsf	4082,6,c	;volatile
  7151                           
  7152                           ;INI.c: 86: TMR1IP = 0;
  7153  001B16  909F               	bcf	3999,0,c	;volatile
  7154  001B18  0012               	return		;funcret
  7155  001B1A                     __end_of_INI_GlobalInterrupt:
  7156                           	opt callstack 0
  7157                           
  7158 ;; *************** function _CAN_Setup *****************
  7159 ;; Defined at:
  7160 ;;		line 24 in file "CAN.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      void 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;Total ram usage:        1 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    5
  7181 ;; This function calls:
  7182 ;;		_CAN_SetupClock
  7183 ;;		_CAN_SetupMask
  7184 ;; This function is called by:
  7185 ;;		_INI_All
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text56
  7190  001524                     __ptext56:
  7191                           	opt callstack 0
  7192  001524                     _CAN_Setup:
  7193                           	opt callstack 24
  7194                           
  7195                           ;CAN.c: 29: CANCON = 0x80;
  7196                           
  7197                           ;incstack = 0
  7198  001524  0E80               	movlw	128
  7199  001526  6E6F               	movwf	3951,c	;volatile
  7200  001528                     l4545:
  7201  001528  506E               	movf	3950,w,c	;volatile
  7202  00152A  0BE0               	andlw	224
  7203  00152C  0A80               	xorlw	128
  7204  00152E  A4D8               	btfss	status,2,c
  7205  001530  D7FB               	goto	l4545
  7206                           
  7207                           ;CAN.c: 33: };CAN.c: 35: BSEL0 = 0;
  7208  001532  0E00               	movlw	0
  7209  001534  010D               	movlb	13	; () banked
  7210  001536  6FF8               	movwf	248,b	;volatile
  7211                           
  7212                           ;CAN.c: 36: TXB0CON = 0;
  7213  001538  0E00               	movlw	0
  7214  00153A  010F               	movlb	15	; () banked
  7215  00153C  6F40               	movwf	64,b	;volatile
  7216                           
  7217                           ;CAN.c: 37: RXB0CON = 0;
  7218  00153E  0E00               	movlw	0
  7219  001540  6E60               	movwf	3936,c	;volatile
  7220                           
  7221                           ;CAN.c: 38: RXB1CON = 0;
  7222  001542  0E00               	movlw	0
  7223  001544  6F50               	movwf	80,b	;volatile
  7224                           
  7225                           ;CAN.c: 39: B0CON = 0;
  7226  001546  0E00               	movlw	0
  7227  001548  010E               	movlb	14	; () banked
  7228  00154A  6F20               	movwf	32,b	;volatile
  7229                           
  7230                           ;CAN.c: 40: B1CON = 0;
  7231  00154C  0E00               	movlw	0
  7232  00154E  6F30               	movwf	48,b	;volatile
  7233                           
  7234                           ;CAN.c: 41: PIE3 = 0;
  7235  001550  0E00               	movlw	0
  7236  001552  6EA3               	movwf	4003,c	;volatile
  7237                           
  7238                           ; BSR set to: 14
  7239                           ;CAN.c: 42: IPR3 = 0xFF;
  7240  001554  68A5               	setf	4005,c	;volatile
  7241                           
  7242                           ;CAN.c: 43: PIR3 = 0x00;
  7243  001556  0E00               	movlw	0
  7244  001558  6EA4               	movwf	4004,c	;volatile
  7245                           
  7246                           ;CAN.c: 44: BIE0 = 0;
  7247  00155A  0E00               	movlw	0
  7248  00155C  010D               	movlb	13	; () banked
  7249  00155E  6FFA               	movwf	250,b	;volatile
  7250                           
  7251                           ;CAN.c: 48: ECANCON = 0x90;
  7252  001560  0E90               	movlw	144
  7253  001562  6E77               	movwf	3959,c	;volatile
  7254                           
  7255                           ; BSR set to: 13
  7256                           ;CAN.c: 51: CAN_SetupClock();
  7257  001564  EC09  F00D         	call	_CAN_SetupClock	;wreg free
  7258                           
  7259                           ;CAN.c: 54: CAN_SetupMask();
  7260  001568  EC25  F00A         	call	_CAN_SetupMask	;wreg free
  7261                           
  7262                           ;CAN.c: 56: CIOCON = 0xff;
  7263  00156C  6873               	setf	3955,c	;volatile
  7264                           
  7265                           ;CAN.c: 62: CANCON = 0x00;
  7266  00156E  0E00               	movlw	0
  7267  001570  6E6F               	movwf	3951,c	;volatile
  7268  001572                     l4557:
  7269  001572  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  7270  001576  0EE0               	movlw	224
  7271  001578  1606               	andwf	??_CAN_Setup,f,c
  7272  00157A  B4D8               	btfsc	status,2,c
  7273  00157C  0012               	return	
  7274  00157E  D7F9               	goto	l4557
  7275  001580                     __end_of_CAN_Setup:
  7276                           	opt callstack 0
  7277                           
  7278 ;; *************** function _CAN_SetupMask *****************
  7279 ;; Defined at:
  7280 ;;		line 84 in file "CAN.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    4
  7301 ;; This function calls:
  7302 ;;		_CAN_SetupFilter_Ne
  7303 ;; This function is called by:
  7304 ;;		_CAN_Setup
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text57
  7309  00144A                     __ptext57:
  7310                           	opt callstack 0
  7311  00144A                     _CAN_SetupMask:
  7312                           	opt callstack 24
  7313                           
  7314                           ;CAN.c: 86: MSEL0 = 0x50;
  7315                           
  7316                           ;incstack = 0
  7317  00144A  0E50               	movlw	80
  7318  00144C  010D               	movlb	13	; () banked
  7319  00144E  6FF0               	movwf	240,b	;volatile
  7320                           
  7321                           ;CAN.c: 87: MSEL1 = 0x55;
  7322  001450  0E55               	movlw	85
  7323  001452  6FF1               	movwf	241,b	;volatile
  7324                           
  7325                           ;CAN.c: 88: MSEL2 = 0x55;
  7326  001454  0E55               	movlw	85
  7327  001456  6FF2               	movwf	242,b	;volatile
  7328                           
  7329                           ;CAN.c: 89: MSEL3 = 0x55;
  7330  001458  0E55               	movlw	85
  7331  00145A  6FF3               	movwf	243,b	;volatile
  7332                           
  7333                           ;CAN.c: 92: RXM0SIDH = 0b00000000;
  7334  00145C  0E00               	movlw	0
  7335  00145E  010F               	movlb	15	; () banked
  7336  001460  6F18               	movwf	24,b	;volatile
  7337                           
  7338                           ;CAN.c: 93: RXM0SIDL = 0b00001011;
  7339  001462  0E0B               	movlw	11
  7340  001464  6F19               	movwf	25,b	;volatile
  7341                           
  7342                           ; BSR set to: 15
  7343                           ;CAN.c: 94: RXM0EIDH = 0xFF;
  7344  001466  691A               	setf	26,b	;volatile
  7345                           
  7346                           ; BSR set to: 15
  7347                           ;CAN.c: 95: RXM0EIDL = 0xFF;
  7348  001468  691B               	setf	27,b	;volatile
  7349                           
  7350                           ; BSR set to: 15
  7351                           ;CAN.c: 98: RXM1SIDH = 0xFF;
  7352  00146A  691C               	setf	28,b	;volatile
  7353                           
  7354                           ; BSR set to: 15
  7355                           ;CAN.c: 99: RXM1SIDL = 0xFF;
  7356  00146C  691D               	setf	29,b	;volatile
  7357                           
  7358                           ; BSR set to: 15
  7359                           ;CAN.c: 100: RXM1EIDH = 0xFF;
  7360  00146E  691E               	setf	30,b	;volatile
  7361                           
  7362                           ; BSR set to: 15
  7363                           ;CAN.c: 101: RXM1EIDL = 0xFF;
  7364  001470  691F               	setf	31,b	;volatile
  7365                           
  7366                           ;CAN.c: 104: RXM0SIDH = 0x00;
  7367  001472  0E00               	movlw	0
  7368  001474  6F18               	movwf	24,b	;volatile
  7369                           
  7370                           ;CAN.c: 105: RXM0SIDL = 0x00;
  7371  001476  0E00               	movlw	0
  7372  001478  6F19               	movwf	25,b	;volatile
  7373                           
  7374                           ;CAN.c: 110: RXF0SIDH = 0x00;
  7375  00147A  0E00               	movlw	0
  7376  00147C  6F00               	movwf	0,b	;volatile
  7377                           
  7378                           ;CAN.c: 111: RXF0SIDL = 0x01;
  7379  00147E  0E01               	movlw	1
  7380  001480  6F01               	movwf	1,b	;volatile
  7381                           
  7382                           ; BSR set to: 15
  7383                           ;CAN.c: 112: RXF0SIDLbits.EXIDEN = 1;
  7384  001482  8701               	bsf	1,3,b	;volatile
  7385                           
  7386                           ;CAN.c: 113: RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7387  001484  502E               	movf	_DaneCan+3,w,c
  7388  001486  6F02               	movwf	2,b	;volatile
  7389                           
  7390                           ; BSR set to: 15
  7391                           ;CAN.c: 115: RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7392  001488  C02D  FF03         	movff	_DaneCan+2,3843	;volatile
  7393                           
  7394                           ;CAN.c: 117: RXF1SIDH = 0x00;
  7395  00148C  0E00               	movlw	0
  7396  00148E  6F04               	movwf	4,b	;volatile
  7397                           
  7398                           ;CAN.c: 118: RXF1SIDL = 0x01;
  7399  001490  0E01               	movlw	1
  7400  001492  6F05               	movwf	5,b	;volatile
  7401                           
  7402                           ; BSR set to: 15
  7403                           ;CAN.c: 119: RXF1SIDLbits.EXIDEN = 1;
  7404  001494  8705               	bsf	5,3,b	;volatile
  7405                           
  7406                           ;CAN.c: 120: RXF1EIDH = 0x7F;
  7407  001496  0E7F               	movlw	127
  7408  001498  6F06               	movwf	6,b	;volatile
  7409                           
  7410                           ; BSR set to: 15
  7411                           ;CAN.c: 121: RXF1EIDL = 0xFF;
  7412  00149A  6907               	setf	7,b	;volatile
  7413                           
  7414                           ; BSR set to: 15
  7415                           ;CAN.c: 123: CAN_SetupFilter_Ne();
  7416  00149C  ECA6  F008         	call	_CAN_SetupFilter_Ne	;wreg free
  7417                           
  7418                           ;CAN.c: 126: RXFBCON0 = 0b00000000;
  7419  0014A0  0E00               	movlw	0
  7420  0014A2  010D               	movlb	13	; () banked
  7421  0014A4  6FE0               	movwf	224,b	;volatile
  7422                           
  7423                           ; BSR set to: 13
  7424                           ;CAN.c: 128: RXFBCON1 = 0b00010001;
  7425  0014A6  0E11               	movlw	17
  7426  0014A8  6FE1               	movwf	225,b	;volatile
  7427                           
  7428                           ; BSR set to: 13
  7429                           ;CAN.c: 130: RXFBCON2 = 0b00010001;
  7430  0014AA  0E11               	movlw	17
  7431  0014AC  6FE2               	movwf	226,b	;volatile
  7432                           
  7433                           ; BSR set to: 13
  7434                           ;CAN.c: 132: RXFBCON3 = 0b00010001;
  7435  0014AE  0E11               	movlw	17
  7436  0014B0  6FE3               	movwf	227,b	;volatile
  7437                           
  7438                           ; BSR set to: 13
  7439                           ;CAN.c: 134: RXFBCON4 = 0b00010001;
  7440  0014B2  0E11               	movlw	17
  7441  0014B4  6FE4               	movwf	228,b	;volatile
  7442                           
  7443                           ; BSR set to: 13
  7444                           ;CAN.c: 136: RXFCON0 = 0b11111111;
  7445  0014B6  69D4               	setf	212,b	;volatile
  7446                           
  7447                           ; BSR set to: 13
  7448                           ;CAN.c: 137: RXFCON1 = 0b00000011;
  7449  0014B8  0E03               	movlw	3
  7450  0014BA  6FD5               	movwf	213,b	;volatile
  7451                           
  7452                           ; BSR set to: 13
  7453  0014BC  0012               	return		;funcret
  7454  0014BE                     __end_of_CAN_SetupMask:
  7455                           	opt callstack 0
  7456                           
  7457 ;; *************** function _CAN_SetupFilter_Ne *****************
  7458 ;; Defined at:
  7459 ;;		line 141 in file "CAN.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg, status,2
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7477 ;;Total ram usage:        0 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    3
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_CAN_SetupMask
  7484 ;;		_FRAME_AdressOfNeighbors
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text58
  7489  00114C                     __ptext58:
  7490                           	opt callstack 0
  7491  00114C                     _CAN_SetupFilter_Ne:
  7492                           	opt callstack 24
  7493                           
  7494                           ;CAN.c: 145: RXF2SIDH = 0;
  7495                           
  7496                           ; BSR set to: 13
  7497                           ;incstack = 0
  7498  00114C  0E00               	movlw	0
  7499  00114E  010F               	movlb	15	; () banked
  7500  001150  6F08               	movwf	8,b	;volatile
  7501                           
  7502                           ;CAN.c: 146: RXF2SIDL = 0x20;
  7503  001152  0E20               	movlw	32
  7504  001154  6F09               	movwf	9,b	;volatile
  7505                           
  7506                           ; BSR set to: 15
  7507                           ;CAN.c: 147: RXF2SIDLbits.EXIDEN = 1;
  7508  001156  8709               	bsf	9,3,b	;volatile
  7509                           
  7510                           ;CAN.c: 148: RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7511  001158  504C               	movf	_NeightAdress1+1,w,c	;volatile
  7512  00115A  6F0A               	movwf	10,b	;volatile
  7513                           
  7514                           ; BSR set to: 15
  7515                           ;CAN.c: 149: RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7516  00115C  C04B  FF0B         	movff	_NeightAdress1,3851	;volatile
  7517                           
  7518                           ;CAN.c: 152: RXF3SIDH = 0;
  7519  001160  0E00               	movlw	0
  7520  001162  6F0C               	movwf	12,b	;volatile
  7521                           
  7522                           ;CAN.c: 153: RXF3SIDL = 0x20;
  7523  001164  0E20               	movlw	32
  7524  001166  6F0D               	movwf	13,b	;volatile
  7525                           
  7526                           ; BSR set to: 15
  7527                           ;CAN.c: 154: RXF3SIDLbits.EXIDEN = 1;
  7528  001168  870D               	bsf	13,3,b	;volatile
  7529                           
  7530                           ;CAN.c: 155: RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7531  00116A  5059               	movf	_NeightAdress2+1,w,c	;volatile
  7532  00116C  6F0E               	movwf	14,b	;volatile
  7533                           
  7534                           ; BSR set to: 15
  7535                           ;CAN.c: 156: RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7536  00116E  C058  FF0F         	movff	_NeightAdress2,3855	;volatile
  7537                           
  7538                           ;CAN.c: 158: RXF4SIDH = 0;
  7539  001172  0E00               	movlw	0
  7540  001174  6F10               	movwf	16,b	;volatile
  7541                           
  7542                           ;CAN.c: 159: RXF4SIDL = 0x20;
  7543  001176  0E20               	movlw	32
  7544  001178  6F11               	movwf	17,b	;volatile
  7545                           
  7546                           ; BSR set to: 15
  7547                           ;CAN.c: 160: RXF4SIDLbits.EXIDEN = 1;
  7548  00117A  8711               	bsf	17,3,b	;volatile
  7549                           
  7550                           ;CAN.c: 161: RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7551  00117C  504A               	movf	_NeightAdress3+1,w,c	;volatile
  7552  00117E  6F12               	movwf	18,b	;volatile
  7553                           
  7554                           ; BSR set to: 15
  7555                           ;CAN.c: 162: RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7556  001180  C049  FF13         	movff	_NeightAdress3,3859	;volatile
  7557                           
  7558                           ;CAN.c: 164: RXF5SIDH = 0;
  7559  001184  0E00               	movlw	0
  7560  001186  6F14               	movwf	20,b	;volatile
  7561                           
  7562                           ;CAN.c: 165: RXF5SIDL = 0x20;
  7563  001188  0E20               	movlw	32
  7564  00118A  6F15               	movwf	21,b	;volatile
  7565                           
  7566                           ; BSR set to: 15
  7567                           ;CAN.c: 166: RXF5SIDLbits.EXIDEN = 1;
  7568  00118C  8715               	bsf	21,3,b	;volatile
  7569                           
  7570                           ;CAN.c: 167: RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7571  00118E  5048               	movf	_NeightAdress4+1,w,c	;volatile
  7572  001190  6F16               	movwf	22,b	;volatile
  7573                           
  7574                           ; BSR set to: 15
  7575                           ;CAN.c: 168: RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7576  001192  C047  FF17         	movff	_NeightAdress4,3863	;volatile
  7577                           
  7578                           ;CAN.c: 170: RXF6SIDH = 0;
  7579  001196  0E00               	movlw	0
  7580  001198  010D               	movlb	13	; () banked
  7581  00119A  6F60               	movwf	96,b	;volatile
  7582                           
  7583                           ;CAN.c: 171: RXF6SIDL = 0x20;
  7584  00119C  0E20               	movlw	32
  7585  00119E  6F61               	movwf	97,b	;volatile
  7586                           
  7587                           ; BSR set to: 13
  7588                           ;CAN.c: 172: RXF6SIDLbits.EXIDEN = 1;
  7589  0011A0  8761               	bsf	97,3,b	;volatile
  7590                           
  7591                           ;CAN.c: 173: RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7592  0011A2  5046               	movf	_NeightAdress5+1,w,c	;volatile
  7593  0011A4  6F62               	movwf	98,b	;volatile
  7594                           
  7595                           ; BSR set to: 13
  7596                           ;CAN.c: 174: RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7597  0011A6  C045  FD63         	movff	_NeightAdress5,3427	;volatile
  7598                           
  7599                           ;CAN.c: 176: RXF7SIDH = 0;
  7600  0011AA  0E00               	movlw	0
  7601  0011AC  6F64               	movwf	100,b	;volatile
  7602                           
  7603                           ;CAN.c: 177: RXF7SIDL = 0x20;
  7604  0011AE  0E20               	movlw	32
  7605  0011B0  6F65               	movwf	101,b	;volatile
  7606                           
  7607                           ; BSR set to: 13
  7608                           ;CAN.c: 178: RXF7SIDLbits.EXIDEN = 1;
  7609  0011B2  8765               	bsf	101,3,b	;volatile
  7610                           
  7611                           ;CAN.c: 179: RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7612  0011B4  5044               	movf	_NeightAdress6+1,w,c	;volatile
  7613  0011B6  6F66               	movwf	102,b	;volatile
  7614                           
  7615                           ; BSR set to: 13
  7616                           ;CAN.c: 180: RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7617  0011B8  C043  FD67         	movff	_NeightAdress6,3431	;volatile
  7618                           
  7619                           ;CAN.c: 182: RXF8SIDH = 0;
  7620  0011BC  0E00               	movlw	0
  7621  0011BE  6F68               	movwf	104,b	;volatile
  7622                           
  7623                           ;CAN.c: 183: RXF8SIDL = 0x20;
  7624  0011C0  0E20               	movlw	32
  7625  0011C2  6F69               	movwf	105,b	;volatile
  7626                           
  7627                           ; BSR set to: 13
  7628                           ;CAN.c: 184: RXF8SIDLbits.EXIDEN = 1;
  7629  0011C4  8769               	bsf	105,3,b	;volatile
  7630                           
  7631                           ;CAN.c: 185: RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7632  0011C6  5042               	movf	_NeightAdress7+1,w,c	;volatile
  7633  0011C8  6F6A               	movwf	106,b	;volatile
  7634                           
  7635                           ; BSR set to: 13
  7636                           ;CAN.c: 186: RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7637  0011CA  C041  FD6B         	movff	_NeightAdress7,3435	;volatile
  7638                           
  7639                           ;CAN.c: 188: RXF9SIDH = 0;
  7640  0011CE  0E00               	movlw	0
  7641  0011D0  6F70               	movwf	112,b	;volatile
  7642                           
  7643                           ;CAN.c: 189: RXF9SIDL = 0x20;
  7644  0011D2  0E20               	movlw	32
  7645  0011D4  6F71               	movwf	113,b	;volatile
  7646                           
  7647                           ; BSR set to: 13
  7648                           ;CAN.c: 190: RXF9SIDLbits.EXIDEN = 1;
  7649  0011D6  8771               	bsf	113,3,b	;volatile
  7650                           
  7651                           ;CAN.c: 191: RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7652  0011D8  5040               	movf	_NeightAdress8+1,w,c	;volatile
  7653  0011DA  6F72               	movwf	114,b	;volatile
  7654                           
  7655                           ; BSR set to: 13
  7656                           ;CAN.c: 192: RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7657  0011DC  C03F  FD73         	movff	_NeightAdress8,3443	;volatile
  7658                           
  7659                           ; BSR set to: 13
  7660  0011E0  0012               	return		;funcret
  7661  0011E2                     __end_of_CAN_SetupFilter_Ne:
  7662                           	opt callstack 0
  7663                           
  7664 ;; *************** function _CAN_SetupClock *****************
  7665 ;; Defined at:
  7666 ;;		line 200 in file "CAN.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		None
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;Total ram usage:        0 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    3
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_CAN_Setup
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text59
  7695  001A12                     __ptext59:
  7696                           	opt callstack 0
  7697  001A12                     _CAN_SetupClock:
  7698                           	opt callstack 25
  7699                           
  7700                           ;CAN.c: 202: BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7701                           
  7702                           ; BSR set to: 13
  7703                           ;incstack = 0
  7704  001A12  8070               	bsf	3952,0,c	;volatile
  7705                           
  7706                           ;CAN.c: 203: BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7707  001A14  8270               	bsf	3952,1,c	;volatile
  7708                           
  7709                           ;CAN.c: 204: BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7710  001A16  9470               	bcf	3952,2,c	;volatile
  7711                           
  7712                           ;CAN.c: 205: BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7713  001A18  9670               	bcf	3952,3,c	;volatile
  7714                           
  7715                           ;CAN.c: 206: BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7716  001A1A  9870               	bcf	3952,4,c	;volatile
  7717                           
  7718                           ;CAN.c: 207: BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7719  001A1C  9A70               	bcf	3952,5,c	;volatile
  7720                           
  7721                           ;CAN.c: 209: BRGCON1bits.SJW0 = 1;
  7722  001A1E  8C70               	bsf	3952,6,c	;volatile
  7723                           
  7724                           ;CAN.c: 210: BRGCON1bits.SJW1 = 1;
  7725  001A20  8E70               	bsf	3952,7,c	;volatile
  7726                           
  7727                           ;CAN.c: 212: BRGCON2bits.SEG1PH0 = 1;
  7728  001A22  8671               	bsf	3953,3,c	;volatile
  7729                           
  7730                           ;CAN.c: 213: BRGCON2bits.SEG1PH1 = 1;
  7731  001A24  8871               	bsf	3953,4,c	;volatile
  7732                           
  7733                           ;CAN.c: 214: BRGCON2bits.SEG1PH2 = 1;
  7734  001A26  8A71               	bsf	3953,5,c	;volatile
  7735                           
  7736                           ;CAN.c: 216: BRGCON2bits.PRSEG2 = 1;
  7737  001A28  8471               	bsf	3953,2,c	;volatile
  7738                           
  7739                           ;CAN.c: 217: BRGCON2bits.PRSEG1 = 0;
  7740  001A2A  9271               	bcf	3953,1,c	;volatile
  7741                           
  7742                           ;CAN.c: 218: BRGCON2bits.PRSEG0 = 0;
  7743  001A2C  9071               	bcf	3953,0,c	;volatile
  7744                           
  7745                           ;CAN.c: 220: BRGCON3bits.SEG2PH0 = 1;
  7746  001A2E  8072               	bsf	3954,0,c	;volatile
  7747                           
  7748                           ;CAN.c: 221: BRGCON3bits.SEG2PH1 = 0;
  7749  001A30  9272               	bcf	3954,1,c	;volatile
  7750                           
  7751                           ;CAN.c: 222: BRGCON3bits.SEG2PH2 = 1;
  7752  001A32  8472               	bsf	3954,2,c	;volatile
  7753                           
  7754                           ;CAN.c: 224: BRGCON2bits.SAM = 1;
  7755  001A34  8C71               	bsf	3953,6,c	;volatile
  7756                           
  7757                           ;CAN.c: 225: BRGCON2bits.SEG2PHTS = 1;
  7758  001A36  8E71               	bsf	3953,7,c	;volatile
  7759  001A38  0012               	return		;funcret
  7760  001A3A                     __end_of_CAN_SetupClock:
  7761                           	opt callstack 0
  7762                           
  7763 ;; *************** function _FLASH_Read *****************
  7764 ;; Defined at:
  7765 ;;		line 28 in file "FLASH.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  addr            4    5[COMRAM] long 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  2    5[COMRAM] unsigned int 
  7772 ;; Registers used:
  7773 ;;		None
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7783 ;;Total ram usage:        4 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    3
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text60
  7794  001AD6                     __ptext60:
  7795                           	opt callstack 0
  7796  001AD6                     _FLASH_Read:
  7797                           	opt callstack 27
  7798                           
  7799                           ;FLASH.c: 30: TBLPTR = addr;
  7800                           
  7801                           ;incstack = 0
  7802  001AD6  C006  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  7803  001ADA  C007  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  7804  001ADE  C008  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  7805  001AE2  0008               	tblrd		*	; ;# 
  7806                           
  7807                           ;FLASH.c: 32: return TABLAT;
  7808  001AE4  CFF5 F006          	movff	tablat,?_FLASH_Read	;volatile
  7809  001AE8  6A07               	clrf	?_FLASH_Read+1,c
  7810  001AEA  0012               	return		;funcret
  7811  001AEC                     __end_of_FLASH_Read:
  7812                           	opt callstack 0
  7813                           
  7814 ;; *************** function _ISR_low *****************
  7815 ;; Defined at:
  7816 ;;		line 16 in file "ISR.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;Total ram usage:        3 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    2
  7837 ;; This function calls:
  7838 ;;		_TMR1_Timer_reset
  7839 ;;		i1_TMR1_Update_flag_Set
  7840 ;; This function is called by:
  7841 ;;		Interrupt level 1
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	intcodelo
  7846  000018                     __pintcodelo:
  7847                           	opt callstack 0
  7848  000018                     _ISR_low:
  7849                           	opt callstack 22
  7850                           
  7851                           ;incstack = 0
  7852  000018  805A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7853  00001A  CFD8 F003          	movff	status,??_ISR_low
  7854  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  7855  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  7856                           
  7857                           ;ISR.c: 21: if(TMR1IF==1)
  7858  000026  A09E               	btfss	3998,0,c	;volatile
  7859  000028  D012               	goto	i1l783
  7860                           
  7861                           ;ISR.c: 22: {;ISR.c: 23: TMR1_Timer_reset();
  7862  00002A  EC1D  F00D         	call	_TMR1_Timer_reset	;wreg free
  7863                           
  7864                           ;ISR.c: 26: static BYTE ramkaStanuU8=0;;ISR.c: 29: TMR1_Update_flag_Set(1);
  7865  00002E  0E00               	movlw	0
  7866  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  7867  000032  0E01               	movlw	1
  7868  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  7869  000036  ECC2  F00D         	call	i1_TMR1_Update_flag_Set	;wreg free
  7870                           
  7871                           ;ISR.c: 31: DetectorLedRadar.Flags.obsluzWeWy = 1;
  7872  00003A  0100               	movlb	0	; () banked
  7873  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;ISR.c: 33: if(++ramkaStanuU8 > (2*10))
  7877  00003E  2A38               	incf	ISR_low@ramkaStanuU8,f,c
  7878  000040  0E14               	movlw	20
  7879  000042  6438               	cpfsgt	ISR_low@ramkaStanuU8,c
  7880  000044  D003               	goto	i1l3873
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;ISR.c: 34: {;ISR.c: 35: ramkaStanuU8 = 0;
  7884  000046  0E00               	movlw	0
  7885  000048  6E38               	movwf	ISR_low@ramkaStanuU8,c
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;ISR.c: 36: DaneCan.Flags.wyslijRamkeStanu = 1;
  7889  00004A  802B               	bsf	_DaneCan,0,c
  7890  00004C                     i1l3873:
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;ISR.c: 37: };ISR.c: 41: TMR1IF=0;
  7894  00004C  909E               	bcf	3998,0,c	;volatile
  7895  00004E                     i1l783:
  7896  00004E  C005  FFE0         	movff	??_ISR_low+2,bsr
  7897  000052  C004  FFE8         	movff	??_ISR_low+1,wreg
  7898  000056  C003  FFD8         	movff	??_ISR_low,status
  7899  00005A  905A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7900  00005C  0010               	retfie	
  7901  00005E                     __end_of_ISR_low:
  7902                           	opt callstack 0
  7903                           
  7904 ;; *************** function i1_TMR1_Update_flag_Set *****************
  7905 ;; Defined at:
  7906 ;;		line 32 in file "TMR1.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  a               2    0[COMRAM] unsigned int 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		None
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;Total ram usage:        2 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    1
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_ISR_low
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text62
  7935  001B84                     __ptext62:
  7936                           	opt callstack 0
  7937  001B84                     i1_TMR1_Update_flag_Set:
  7938                           	opt callstack 22
  7939                           
  7940                           ;TMR1.c: 34: TMR1_Update_flag = a;
  7941                           
  7942                           ;incstack = 0
  7943  001B84  C001  F033         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  7944  001B88  C002  F034         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  7945  001B8C  0012               	return		;funcret
  7946  001B8E                     __end_ofi1_TMR1_Update_flag_Set:
  7947                           	opt callstack 0
  7948                           
  7949 ;; *************** function _TMR1_Timer_reset *****************
  7950 ;; Defined at:
  7951 ;;		line 63 in file "TMR1.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  7956 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1    wreg      unsigned char 
  7959 ;; Registers used:
  7960 ;;		wreg, status,2, status,0
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7970 ;;Total ram usage:        2 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; Hardware stack levels required when called:    1
  7973 ;; This function calls:
  7974 ;;		Nothing
  7975 ;; This function is called by:
  7976 ;;		_ISR_low
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text63
  7981  001A3A                     __ptext63:
  7982                           	opt callstack 0
  7983  001A3A                     _TMR1_Timer_reset:
  7984                           	opt callstack 22
  7985                           
  7986                           ;TMR1.c: 69: volatile BYTE t1L = 0, t1H = 0;
  7987                           
  7988                           ;incstack = 0
  7989  001A3A  0E00               	movlw	0
  7990  001A3C  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  7991  001A3E  0E00               	movlw	0
  7992  001A40  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  7993                           
  7994                           ;TMR1.c: 70: t1L = TMR1L;
  7995  001A42  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  7996                           
  7997                           ;TMR1.c: 71: t1H = TMR1H;
  7998  001A46  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  7999                           
  8000                           ;TMR1.c: 72: __nop();
  8001  001A4A  F000               	nop	
  8002                           
  8003                           ;TMR1.c: 73: t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  8004  001A4C  0E9E               	movlw	158
  8005  001A4E  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  8006                           
  8007                           ;TMR1.c: 74: t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  8008  001A50  0E57               	movlw	87
  8009  001A52  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  8010                           
  8011                           ;TMR1.c: 75: TMR1H = t1H;
  8012  001A54  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  8013                           
  8014                           ;TMR1.c: 76: TMR1L = 0x5B;
  8015  001A58  0E5B               	movlw	91
  8016  001A5A  6ECE               	movwf	4046,c	;volatile
  8017  001A5C  0012               	return		;funcret
  8018  001A5E                     __end_of_TMR1_Timer_reset:
  8019                           	opt callstack 0
  8020                           
  8021 ;; *************** function _ISR_high *****************
  8022 ;; Defined at:
  8023 ;;		line 53 in file "ISR.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;		None
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		None
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;Total ram usage:        0 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; This function calls:
  8044 ;;		Nothing
  8045 ;; This function is called by:
  8046 ;;		Interrupt level 2
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	intcode
  8051  000008                     __pintcode:
  8052                           	opt callstack 0
  8053  000008                     _ISR_high:
  8054                           	opt callstack 22
  8055                           
  8056                           ;incstack = 0
  8057  000008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8058  00000A  EDCF  F00D         	call	int_func,f	;refresh shadow registers
  8059                           
  8060                           	psect	intcode_body
  8061  001B9E                     __pintcode_body:
  8062                           	opt callstack 22
  8063  001B9E                     int_func:
  8064                           	opt callstack 22
  8065  001B9E  0006               	pop		; remove dummy address from shadow register refresh
  8066  001BA0  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8067  001BA2  0011               	retfie		f
  8068  001BA4                     __end_of_ISR_high:
  8069                           	opt callstack 0
  8070  0000                     
  8071                           	psect	rparam
  8072  0000                     
  8073                           	psect	temp
  8074  00005A                     btemp:
  8075                           	opt callstack 0
  8076  00005A                     	ds	1
  8077  0000                     int$flags	set	btemp
  8078  0000                     wtemp8	set	btemp+1
  8079  0000                     ttemp5	set	btemp+1
  8080  0000                     ttemp6	set	btemp+4
  8081  0000                     ttemp7	set	btemp+8
  8082                           tosu	equ	0xFFF
  8083                           tosh	equ	0xFFE
  8084                           tosl	equ	0xFFD
  8085                           stkptr	equ	0xFFC
  8086                           pclatu	equ	0xFFB
  8087                           pclath	equ	0xFFA
  8088                           pcl	equ	0xFF9
  8089                           tblptru	equ	0xFF8
  8090                           tblptrh	equ	0xFF7
  8091                           tblptrl	equ	0xFF6
  8092                           tablat	equ	0xFF5
  8093                           prodh	equ	0xFF4
  8094                           prodl	equ	0xFF3
  8095                           indf0	equ	0xFEF
  8096                           postinc0	equ	0xFEE
  8097                           postdec0	equ	0xFED
  8098                           preinc0	equ	0xFEC
  8099                           plusw0	equ	0xFEB
  8100                           fsr0h	equ	0xFEA
  8101                           fsr0l	equ	0xFE9
  8102                           wreg	equ	0xFE8
  8103                           indf1	equ	0xFE7
  8104                           postinc1	equ	0xFE6
  8105                           postdec1	equ	0xFE5
  8106                           preinc1	equ	0xFE4
  8107                           plusw1	equ	0xFE3
  8108                           fsr1h	equ	0xFE2
  8109                           fsr1l	equ	0xFE1
  8110                           bsr	equ	0xFE0
  8111                           indf2	equ	0xFDF
  8112                           postinc2	equ	0xFDE
  8113                           postdec2	equ	0xFDD
  8114                           preinc2	equ	0xFDC
  8115                           plusw2	equ	0xFDB
  8116                           fsr2h	equ	0xFDA
  8117                           fsr2l	equ	0xFD9
  8118                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         692
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      89
    BANK0           160      2     116
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _main->_TRM_DataTransmition
    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_All->_NVMInit
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   32150
                                              0 BANK0      2     2      0
                         _FLASH_Read
                            _INI_All
                         _LED_Update
                          _RADAR_Use
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
 (1) _TRM_DataTransmition                                 18    18      0   18698
                                             25 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 8     6      2   15647
                                             17 COMRAM     8     6      2
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4535
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3646
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3646
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     234
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RADAR_Use                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    7072
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4382
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     467
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     467
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    5840
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    3496
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    3496
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     181
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     588
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     569
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     269
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_low                                              3     3      0      76
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _RADAR_Use
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
         _CAN_SetupFilter_Ne
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      74       5       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      59       1       94.7%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CD      20        0.0%
DATA                 0      0     2ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Aug 02 08:32:47 2019

               __end_of_FRAME_DeviceReset 0D12                     ?_FRAME_AveragingTimes 0006  
                            ___awdiv@sign 000B                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0006  
                       _FRAME_MapPosition 1BA8                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 000C                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 0008                        __size_of_CAN_GenID 0078  
                                     l300 039E                                       l301 0342  
                                     l302 0348                                       l303 034E  
                                     l304 0354                                       l305 035A  
                                     l306 0360                                       l307 0366  
                                     l422 0B20                                       l290 0922  
                                     l291 0920                               ?_LED_Update 0001  
                                     l641 0904                                       l394 1332  
                                     l299 033C                                       l920 197A  
                                     l928 1982                                       l696 0772  
                                     l937 1876                                       l697 076A  
                            __CFG_CPB$OFF 000000                        ??_FRAME_AxisStatus 0008  
                            __CFG_CPD$OFF 000000                        ?_FRAME_MapPosition 0006  
                      __size_of_CAN_Setup 005C                              ?_LED_Control 0006  
                                     wreg 000FE8                     __end_of_CAN_TakeFrame 0580  
                             ?_INI_OUTPUT 0001                    __size_of_INI_LED_Start 0034  
                           NVMInit@result 000E                  ??_MOCK_Klikniecie_Spadek 0008  
                   __end_of_CAN_SendFrame 0A78                              __CFG_LVP$OFF 000000  
                         _neighborsAdress 003B                 TRM_DataTransmition@weWyU8 0037  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 0008  
                            __CFG_WDT$OFF 000000                                      l4011 0B0A  
                                    l4005 0AFA                                      l1445 16D4  
                                    l4023 0B30                                      l4041 0B60  
                                    l4017 0B1A                                      l4121 0F7C  
                                    l4035 0B50                           __end_of_INI_All 1A80  
                                    l4115 0F64                                      l4053 0B80  
                                    l4029 0B40                                      l4205 16CA  
                                    l4133 0FAC                                      l4109 0F4C  
                                    l4071 0BB0                                      l4047 0B70  
                                    l4151 0FF4                                      l4127 0F94  
                                    l4065 0BA0                                      l4145 0FDC  
                                    l4059 0B90                                      l4139 0FC4  
                                    l4077 0BC2                                      l4325 17F0  
                                    l4309 1760                                      l4415 0C8C  
                                    l4193 16A2                                      l4521 1224  
                                    l4513 1206                                      l4433 0D00  
                                    l4425 0CCC                                      l4361 0E22  
                                    l4353 0DFA                                      l4195 16AA  
                                    l4531 1244                                      l4507 11F6  
                                    l4611 051A                                      l4603 04E2  
                                    l4451 166E                                      l4347 0DB4  
                                    l4445 19AA                                      l4621 0542  
                                    l4613 0522                                      l4605 04FC  
                                    l4285 09BC                                      l4429 0CEE  
                                    l4461 1104                                      l4703 081E  
                                    l4519 121C                                      l4535 124E  
                                    l4615 052A                                      l4607 050E  
                                    l4545 1528                                      l4721 08A8  
                                    l4617 0532                                      l4609 0514  
                                    l4625 054A                                      l4289 0A70  
                                    l4481 026C                                      l4473 011C  
                                    l4393 170A                                      l4491 1930  
                                    l4715 087A                                      l4539 125C  
                                    l4619 053A                                      l4627 057C  
                                    l4563 036C                                      l4475 019E  
                                    l3907 18A0                                      l4557 1572  
                                    l4709 084C                                      l4653 1060  
                                    l4661 1096                                      l4581 0476  
                                    l4741 05C2                                      l4727 08D6  
                                    l4655 106A                                      l4647 1034  
                                    l4823 130E                                      l4591 049C  
                                    l4583 047C                                      l4479 0266  
                                    l4751 0608                                      l4743 05D0  
                                    l4593 04A4                                      l4585 0484  
                                    l4761 065A                                      l4753 0616  
                                    l4745 05DE                                      l3963 0A8A  
                                    l4691 07C2                                      l4587 048C  
                                    l4579 0470                                      l4763 0668  
                                    l4755 0624                                      l4747 05EC  
                                    l4771 06F0                                      l4739 05B4  
                                    l3981 0ABA                                      l3949 19EC  
                                    l4589 0494                                      l4597 04AC  
                                    l4765 067E                                      l4757 0632  
                                    l4749 05FA                                      _BIE0 000DFA  
                                    l3975 0AAA                                      l4599 04DE  
                                    l4759 0640                                      l4839 17A2  
                                    l4863 12B4                                      l3993 0ADA  
                                    l3969 0A9A                                      l4697 07F0  
                                    l4769 0694                                      l4873 12D6  
                                    l3987 0ACA                                      l3999 0AEA  
                       _MOC_Frame_Counter 1AFE                                      _LATA 000F89  
                                    _LATB 000F8A                                      u3015 0408  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u3060 109E  
                                    u2195 1976                                      u2196 1978  
                                    u2550 16AE                                      u2615 0992  
                                    _IPR3 000FA5                                      _IPEN 007E87  
                                    _PIE3 000FA3                                      u2730 171A  
                                    u2770 0C1A                                      _PEIE 007F96  
                                    u2780 0C32                                      _LOCK 003A  
                                    u2950 1228                                      u2776 0C1C  
                                    u2786 0C34                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 000A  
                                    _Dane 00D0                           __end_of_ISR_low 005E  
                        LED_Control@diode 0006                      FRAME_AnalogValue@set 0008  
                      ?_MOC_Frame_Counter 0006                                      _main 1266  
                        LED_Control@color 000A                           __end_of_NVMInit 183E  
                         __end_of_NVMRead 19B4                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005A  
                          _CAN_SetupClock 1A12                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 14BE  
           __size_of_TMR1_Update_flag_Get 000A                                      start 005E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_RADAR_Use 000C  
                      __size_of_LED_Error 001E                             __CFG_IESO$OFF 000000  
                      __size_of_LED_Right 004C             __size_of_FRAME_HandleCanFrame 01F8  
                           _LED_Light_Pos 0FFE                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                       ??_MOC_Frame_Counter 0008  
              ??_MOC_Aktualna_Temperatura 0008         FRAME_HandleCanFrame@identyfikator 0019  
                     __size_of_FLASH_Read 0016                        __size_of_INI_Timer 0018  
               __end_of_FRAME_MapPosition 1BAA                             _NeightAdress1 004B  
                           _NeightAdress2 0058                             _NeightAdress3 0049  
                           _NeightAdress4 0047                             _NeightAdress5 0045  
                           _NeightAdress6 0043                             _NeightAdress7 0041  
                           _NeightAdress8 003F                          __end_of_LED_Left 1804  
           __size_of_MOCK_PrzyspieszenieX 000A             __size_of_MOCK_PrzyspieszenieY 000A  
           __size_of_MOCK_PrzyspieszenieZ 000A                     ReadfromEEPROM@Address 0006  
                                   _B0CON 000E20                                     _B1CON 000E30  
                                   _B2CON 000E40                                     _B3CON 000E50  
                                   _B4CON 000E60                                     _B5CON 000E70  
                        __end_of_LOCK_Get 1BA8                                     ?_main 0001  
                        __end_of_LOCK_Set 1B9E                           __end_of___awdiv 1266  
                                   _EEADR 000FA9                                     _BSEL0 000DF8  
                         ___awdiv@divisor 0008                                     _T1CON 000FCD  
                                   _IRCF0 007E9C                                     _IRCF1 007E9D  
       FRAME_ExcitationMultiplier@message 0006                                     _IRCF2 007E9E  
                         __end_of___lwdiv 16DE                                     i1l783 004E  
                     __size_of_FRAME_Plot 0058                           ___awdiv@counter 000A  
                                   _MSEL0 000DF0                                     _MSEL1 000DF1  
                                   _MSEL2 000DF2                                     _MSEL3 000DF3  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_PWRT$OFF 000000  
                                   _Flagi 00C6                    ?_CAN_MoveBuffIntoFrame 0006  
                           __CFG_WRT0$OFF 000000                __size_of_FRAME_AnalogValue 0002  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_ISR_high 1BA4                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
               __end_of_MOC_Frame_Counter 1B0C                            __CFG_EBTRB$OFF 000000  
                 i1TMR1_Update_flag_Set@a 0001                              ?_MOC_NOTWORK 0006  
               __size_of_ReadDataToEEPROM 018E                          __end_of_NVMWrite 18AA  
                        __end_of_NVMalloc 194C                                     tablat 000FF5  
                  __end_of_CAN_SetupClock 1A3A                                     ttemp5 005B  
                                   ttemp6 005E                                     ttemp7 0062  
                                   status 000FD8                                     wtemp8 005B  
                       __end_of_CAN_GenID 13D4                            __CFG_PBADEN$ON 000000  
                     __size_of_LED_Update 007A                            ?_LED_Light_Pos 000D  
                        _TMR1_Timer_reset 1A3A                         __end_of_CAN_Setup 1580  
                           _INI_LED_Start 19B4                     _FRAME_ExcitationValue 183E  
        FRAME_AccelerometerStatus@message 0008                           __initialization 1580  
                     __size_of_INI_OUTPUT 0020                          CAN_GenID@frameID 0008  
                            __end_of_main 12E2                    ??_FRAME_AveragingTimes 0008  
              __size_of_FRAME_DeviceReset 0148                  ?_FRAME_AdressOfNeighbors 0006  
                  __size_of_WritetoEEPROM 0034                          CAN_GenID@message 0006  
               _FRAME_AccelerometerStatus 13D4                                    ??_main 002B  
                  CAN_MoveBuffIntoFrame@i 000A                             __activetblptr 000002  
                            NVMWrite@addr 000B                          _TMR1_Update_flag 0033  
                 WritetoEEPROM@GIE_Status 0035                     __end_of_IsInNeighbors 0FFE  
                         _wartosciSasiada 00D4                         __end_of_RADAR_Use 1B34  
                               ??_INI_All 000F                         __end_of_LED_Error 1ABE  
                       __end_of_LED_Right 1778                      WritetoEEPROM@Address 0006  
         __size_of_MOCK_Klikniecie_Spadek 000A                                 ??_ISR_low 0003  
                               ??_NVMInit 000C                                 ??_NVMRead 000E  
                                  _CANCON 000F6F                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 0006               FRAME_ExcitationMultiplier@i 0009  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 1AD6                                    i1l3873 004C  
                                  _TABLAT 000FF5                           ?_CAN_SetupClock 0001  
                                  _TBLPTR 000FF6                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 0008                            ?_INI_LED_Start 0001  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 000A  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 000D  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 000A  
                                  clear_0 15A8                                    clear_1 15BA  
                                  clear_2 15C6                          ___awdiv@quotient 000C  
                            NVMalloc@size 0006                ??_FRAME_PrzypisanieDokarty 0008  
                ??i1_TMR1_Update_flag_Set 0003                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 004D  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                              ??_FLASH_Read 000A  
     __size_of_FRAME_ExcitationMultiplier 004E                __size_of_MOC_Frame_Counter 000E  
                    __size_of_LED_Control 0152                             _WritetoEEPROM 194C  
                FRAME_MapPosition@message 0006                            FLASH_Read@addr 0006  
                   TMR1_Update_flag_Set@a 0006                                __accesstop 0060  
                 __end_of__initialization 15CC                              ??_FRAME_Plot 000F  
                     ISR_low@ramkaStanuU8 0038                                 ?_LED_Left 0006  
                         ??_LED_Light_Pos 0011                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 0006                                 ?_LOCK_Get 0001  
                               ?_LOCK_Set 0001           __end_of_FRAME_AdressOfNeighbors 032E  
                  _MOCK_Klikniecie_Spadek 1B66                            __pcstackCOMRAM 0001  
                               LED_Left@a 0006                                 LED_Left@b 0008  
                     _INI_GlobalInterrupt 1B0C                                 ?_ISR_high 0001  
                      __end_of_FLASH_Read 1AEC                                 ?_NVMWrite 0009  
                               ?_NVMalloc 0006                              ??_LED_Update 0018  
             __end_of_TRM_DataTransmition 17C2                     _FRAME_SoftwareVersion 14BE  
                      __end_of_FRAME_Plot 168C                              ??_INI_OUTPUT 0006  
                               LOCK_Set@k 0006                   FRAME_AxisStatus@message 0006  
             IsInNeighbors@message_adress 0006                            ?_WritetoEEPROM 0006  
                    ?_INI_GlobalInterrupt 0001                          _ReadDataToEEPROM 0778  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                             NVMWrite@count 000D  
                    __size_of_MOC_NOTWORK 0008                           ??_INI_LED_Start 000B  
                              ??_LED_Left 0008                                ??_LOCK_Get 0006  
                              ??_LOCK_Set 0006                        __end_of_LED_Update 135C  
                      __end_of_INI_OUTPUT 1AA0                                ??_ISR_high 0001  
                     TMR1_Timer_reset@t1H 0002                       TMR1_Timer_reset@t1L 0001  
                                 _ECANCON 000F77                                   _CANSTAT 000F6E  
                              ??_NVMWrite 000F                   ??_CAN_MoveBuffIntoFrame 000A  
                              ??_NVMalloc 000A              __end_of_TMR1_Update_flag_Get 1B84  
            __end_of_TMR1_Update_flag_Set 1B7A           __size_ofi1_TMR1_Update_flag_Set 000A  
            __end_of_FRAME_HandleCanFrame 0778                                   _INI_All 1A5E  
                __end_of_TMR1_Timer_reset 1A5E                                   _RXB0DLC 000F65  
                                 _RXB0CON 000F60                                   _RXB1CON 000F50  
                   ??_INI_GlobalInterrupt 0006                                   _TXB0CON 000F40  
                                 _ISR_low 0018                                   _RXFCON0 000DD4  
                                 _RXFCON1 000DD5                                   _NVMInit 1804  
                                 _NVMRead 1980                                   _DaneCan 002B  
            __end_of_MOCK_PrzyspieszenieX 1B66              __end_of_MOCK_PrzyspieszenieY 1B5C  
            __end_of_MOCK_PrzyspieszenieZ 1B52        __end_of_FRAME_ExcitationMultiplier 172C  
              _FRAME_ExcitationMultiplier 16DE               FRAME_HandleCanFrame@message 0012  
                                 __Hparam 0000          ??_MOC_Wynikowa_wartosc_roznicowa 0008  
         ?_MOC_Wynikowa_wartosc_roznicowa 0006                                   __Lparam 0000  
                  __size_of_CAN_TakeFrame 0252                                 _CAN_GenID 135C  
                                 ___awdiv 11E2                                 _CAN_Setup 1524  
                  __size_of_CAN_SendFrame 0172                                   ___lwdiv 168C  
                       LED_Light_Pos@pos2 0014                                   __pcinit 1580  
                                 __ramtop 0D00    FRAME_DataUpdateAndChangeOption@message 0006  
                                 __ptext0 1266                                   __ptext1 1778  
                                 __ptext2 0580                                   __ptext3 1AA0  
                                 __ptext4 14BE                                   __ptext5 0D12  
                                 __ptext6 1B34                                   __ptext7 1B8E  
                                 __ptext8 1AFE                                   __ptext9 1B3E  
                  ?_FRAME_SoftwareVersion 0006                            _ReadfromEEPROM 1AEC  
                         ??_WritetoEEPROM 0009                    __size_of_CAN_SetupMask 0074  
       __size_of_MOC_Aktualna_Temperatura 000A            FRAME_AdressOfNeighbors@nrRamki 0008  
               ?_MOC_Aktualna_Temperatura 0006          __size_of_FRAME_AdressOfNeighbors 02CC  
                        ??_CAN_SetupClock 0006            FRAME_AdressOfNeighbors@message 0006  
                                 main@adr 00D2                                 _RADAR_Use 1B28  
                               _LED_Error 1AA0                            __pintcode_body 1B9E  
                               _LED_Right 172C                      end_of_initialization 15CC  
    FRAME_SensorExcitationStatus@statwect 0031                             __Lmediumconst 0000  
                                 int_func 1B9E                                 _INI_Timer 1ABE  
                  i1_TMR1_Update_flag_Set 1B84          TRM_DataTransmition@czujnikWeWyU8 0036  
                              ?_CAN_GenID 0006                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ?_CAN_Setup 0001  
           __size_of_FRAME_AveragingTimes 0036                    __end_of_ReadfromEEPROM 1AFE  
                    CAN_SendFrame@message 000B                          NVMalloc@location 0008  
                           LED_Update@Red 0039                             _CAN_TakeFrame 032E  
                             NVMRead@addr 000A                             _CAN_SendFrame 0906  
                              ?_RADAR_Use 0001                                ?_LED_Error 0001  
                             NVMRead@dest 0008               FRAME_AdressOfNeighbors@kier 000E  
                              ?_LED_Right 0006                          _FRAME_AxisStatus 18AA  
                 ??_FRAME_ExcitationValue 0008                                ?_INI_Timer 0001  
                 ?_MOCK_Klikniecie_Spadek 0006                           _ramkaCanRxKarty 0060  
                    _TMR1_Update_flag_Get 1B7A                           _ramkaCanTxKarty 00B5  
                    _TMR1_Update_flag_Set 1B70                             _CAN_SetupMask 144A  
                       __size_of_LED_Left 0042                      _FRAME_HandleCanFrame 0580  
                  __size_of_IsInNeighbors 00CA                         __size_of_LOCK_Get 0004  
                       __size_of_LOCK_Set 0008                         _WriteDataToEEPROM 0E36  
                __end_of_ReadDataToEEPROM 0906                            CAN_TakeFrame@k 0013  
                      ?_WriteDataToEEPROM 0001                           ?_ReadfromEEPROM 0006  
                           __pidataCOMRAM 1B1A                         __size_of_ISR_high 1B9C  
                    _MOCK_PrzyspieszenieX 1B5C                      _MOCK_PrzyspieszenieY 1B52  
                    _MOCK_PrzyspieszenieZ 1B48                                LED_Right@a 0006  
                              LED_Right@b 000A                     MOC_Frame_Counter@zeta 004D  
                       __size_of_NVMWrite 0036                             ??_LED_Control 0008  
                     ??_WriteDataToEEPROM 000F                         __size_of_NVMalloc 0036  
                     start_initialization 1580                            ?_CAN_TakeFrame 000E  
                               _Init_Data 0056                            ?_CAN_SendFrame 000B  
         FRAME_SensorExcitationStatus@tru 000C            __end_of_MOCK_Klikniecie_Spadek 1B70  
                        __CFG_OSC$IRCIO67 000000         __size_of_FRAME_PrzypisanieDokarty 009E  
               ?_FRAME_PrzypisanieDokarty 0006                     ?_TMR1_Update_flag_Get 0006  
                   ?_TMR1_Update_flag_Set 0006                            ?_CAN_SetupMask 0001  
                   __end_of_LED_Light_Pos 10AE                     ?_FRAME_HandleCanFrame 0012  
               __end_of_WriteDataToEEPROM 0F34                               ??_CAN_GenID 0009  
                             ??_CAN_Setup 0006                          __CFG_LPT1OSC$OFF 000000  
                   ?_MOCK_PrzyspieszenieX 0006                     ?_MOCK_PrzyspieszenieY 0006  
                   ?_MOCK_PrzyspieszenieZ 0006                  CAN_MoveBuffIntoFrame@Buf 0008  
    __end_of_FRAME_SensorExcitationStatus 0E36     __size_of_FRAME_SensorExcitationStatus 0124  
                CAN_MoveBuffIntoFrame@Ram 0006              _FRAME_SensorExcitationStatus 0D12  
          __size_of_CAN_MoveBuffIntoFrame 002A                               __pbssBIGRAM 00D4  
           __end_of_CAN_MoveBuffIntoFrame 1A12                           _Fulfillment_Lvl 0053  
                             __pbssCOMRAM 002B                                  ?_INI_All 0001  
                 _FRAME_AdressOfNeighbors 0062                             __pcstackBANK0 00D2  
                           _IsInNeighbors 0F34                         ?_TMR1_Timer_reset 0001  
                         _ustawieniaKarty 003D                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0001   __end_of_FRAME_DataUpdateAndChangeOption 1634  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 0008  
        ?_FRAME_DataUpdateAndChangeOption 0006           _FRAME_DataUpdateAndChangeOption 15DA  
                           ??_MOC_NOTWORK 0008                __end_of_CAN_SetupFilter_Ne 11E2  
                                ?_NVMInit 0001                                  ?_NVMRead 0008  
                      ??_TMR1_Timer_reset 0001                               ??_RADAR_Use 0006  
                             ??_LED_Error 000B                            NVMWrite@source 0009  
                             ??_LED_Right 0008              __size_of_TRM_DataTransmition 004A  
                     __end_of_LED_Control 0BCA               ?_FRAME_ExcitationMultiplier 0006  
                             ??_INI_Timer 0006                     __end_of_INI_LED_Start 19E8  
                        ___lwdiv@dividend 0006                                 __pintcode 0008  
                                ?___awdiv 0006                   ??_FRAME_SoftwareVersion 0008  
        __end_of_MOC_Aktualna_Temperatura 1B48                                  ?___lwdiv 0006  
                       FRAME_Plot@message 000D                               __pintcodelo 0018  
             __end_of_INI_GlobalInterrupt 1B1A                           ??_CAN_TakeFrame 0010  
           ?_FRAME_SensorExcitationStatus 0008    __end_of_MOC_Wynikowa_wartosc_roznicowa 1B3E  
 __size_of_MOC_Wynikowa_wartosc_roznicowa 000A            _MOC_Wynikowa_wartosc_roznicowa 1B34  
                             _COMSTATbits 000F74                            ?_IsInNeighbors 0006  
                         ??_CAN_SendFrame 000D                          ___lwdiv@quotient 000B  
                 ?i1_TMR1_Update_flag_Set 0001               FRAME_AveragingTimes@message 0006  
                  ??_TMR1_Update_flag_Get 0008                    ??_TMR1_Update_flag_Set 0008  
                         ??_CAN_SetupMask 0006                                  _LED_Left 17C2  
                  ??_FRAME_HandleCanFrame 0014                      CAN_TakeFrame@message 000E  
                     __end_of_MOC_NOTWORK 1B96                                  _LOCK_Get 1BA4  
                    CAN_TakeFrame@tempCON 0012                                  _LOCK_Set 1B96  
              __size_of_WriteDataToEEPROM 00FE                                  _RXB0EIDH 000F63  
                                _RXB0EIDL 000F64                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXF0EIDH 000F02  
                                _RXF0EIDL 000F03                                  _RXF1EIDH 000F06  
                                _RXF1EIDL 000F07                                  _RXF2EIDH 000F0A  
                                _RXF2EIDL 000F0B                                  _RXF3EIDH 000F0E  
                                _RXF3EIDL 000F0F                                  _RXF4EIDH 000F12  
                                _RXF4EIDL 000F13                                  _RXF5EIDH 000F16  
                                _RXF5EIDL 000F17                                  _RXF6EIDH 000D62  
                                _RXF6EIDL 000D63                                  _RXF0SIDH 000F00  
                                _RXF7EIDH 000D66                                  _RXF0SIDL 000F01  
                                _RXF7EIDL 000D67                                  _RXF1SIDH 000F04  
                                _RXF8EIDH 000D6A                                  _RXF1SIDL 000F05  
                                _RXF8EIDL 000D6B                                  _RXF2SIDH 000F08  
                                _RXF9EIDH 000D72                                  _RXF2SIDL 000F09  
                                _RXF9EIDL 000D73                                  _RXF3SIDH 000F0C  
                                _RXF3SIDL 000F0D                                  _ISR_high 0008  
                                _RXF4SIDH 000F10                                  _RXF4SIDL 000F11  
                                _RXF5SIDH 000F14                                  _RXF5SIDL 000F15  
                                _RXF6SIDH 000D60                                  _RXF6SIDL 000D61  
                                _RXM0EIDH 000F1A                                  _RXF7SIDH 000D64  
                                _RXM0EIDL 000F1B                                  _RXF7SIDL 000D65  
                                _RXM1EIDH 000F1E                                  _RXF8SIDH 000D68  
                                _RXM1EIDL 000F1F                                  _RXF8SIDL 000D69  
                                _RXF9SIDH 000D70                    ??_MOCK_PrzyspieszenieX 0008  
                  ??_MOCK_PrzyspieszenieY 0008                                  _RXF9SIDL 000D71  
                  ??_MOCK_PrzyspieszenieZ 0008                                  _RXFBCON0 000DE0  
                                _RXFBCON1 000DE1                                  _RXFBCON2 000DE2  
                                _RXFBCON3 000DE3                                  _RXFBCON4 000DE4  
                                _RXM0SIDH 000F18                                  _RXM0SIDL 000F19  
                                _RXM1SIDH 000F1C                                  _RXM1SIDL 000F1D  
                __end_of_FRAME_AxisStatus 18E0                                  _NVMWrite 1874  
                                _NVMalloc 1916                 ??_FRAME_AdressOfNeighbors 000A  
                        _DetectorLedRadar 00CB                               _LED_Control 0A78  
                        __size_of_INI_All 0022              FRAME_ExcitationValue@message 0006  
                   __end_of_WritetoEEPROM 1980            __end_ofi1_TMR1_Update_flag_Set 1B8E  
                          _nextEEPosition 002F                                 copy_data0 1594  
                        __size_of_ISR_low 0046        __size_of_FRAME_AccelerometerStatus 0076  
            __end_of_FRAME_AveragingTimes 1916                          __size_of_NVMInit 003A  
                        __size_of_NVMRead 0034                ?_FRAME_AccelerometerStatus 0008  
          __size_of_FRAME_ExcitationValue 0036             __end_of_FRAME_ExcitationValue 1874  
                              _EECON1bits 000FA6                                  __Hrparam 0000  
                            _RXB0SIDLbits 000F62                          ??_ReadfromEEPROM 0008  
                                __Lrparam 0000                         ?_ReadDataToEEPROM 0001  
                        __size_of___awdiv 0084                          __size_of___lwdiv 0052  
                      ??_ReadDataToEEPROM 000E                           ??_IsInNeighbors 0008  
                _MOC_Aktualna_Temperatura 1B3E           FRAME_PrzypisanieDokarty@message 0006  
                      LED_Light_Pos@flage 0016                        LED_Light_Pos@color 0011  
        __end_of_FRAME_PrzypisanieDokarty 114C                              _RXF0SIDLbits 000F01  
                FRAME_AnalogValue@message 0006                           ___lwdiv@divisor 0008  
                            _RXF1SIDLbits 000F05                                _FLASH_Read 1AD6  
                         ___lwdiv@counter 000A                                  __ptext10 1B96  
                                __ptext11 1BA4                                  __ptext20 1874  
                                __ptext12 0F34                                  __ptext21 194C  
                                __ptext13 10AE                                  __ptext30 1B5C  
                                __ptext22 15DA                                  __ptext14 1634  
                                __ptext31 1B66                                  __ptext23 18AA  
                                __ptext15 1BA8                                  __ptext40 12E2  
                                __ptext32 0906                                  __ptext24 18E0  
                                __ptext16 183E                                  __ptext41 0FFE  
                                __ptext33 135C                                  __ptext25 1BAA  
                                __ptext17 16DE                                  __ptext50 1916  
                                __ptext42 168C                                  __ptext34 032E  
                                __ptext26 0062                                  __ptext18 0BCA  
                                __ptext51 1ABE                                  __ptext43 172C  
                                __ptext35 11E2                                  __ptext27 13D4  
                                __ptext19 0E36                                  __ptext60 1AD6  
                                __ptext52 1A80                                  __ptext44 17C2  
                                __ptext36 19E8                                  __ptext28 1B48  
          ??_FRAME_SensorExcitationStatus 000A                                  __ptext53 19B4  
                                __ptext45 1A5E                                  __ptext37 1B70  
                                __ptext29 1B52                                  __ptext62 1B84  
                                __ptext54 0A78                                  __ptext46 0778  
                                __ptext38 1B7A                                  __ptext63 1A3A  
                                __ptext55 1B0C                                  __ptext47 1980  
                                __ptext39 1B28                                  __ptext56 1524  
                                __ptext48 1AEC                                  __ptext57 144A  
                                __ptext49 1804                                  __ptext58 114C  
                                __ptext59 1A12             TRM_DataTransmition@canMessage 001A  
                            _RXF2SIDLbits 000F09                               _MOC_NOTWORK 1B8E  
                            _RXF3SIDLbits 000F0D                 FRAME_HandleCanFrame@ident 0017  
                            _RXF4SIDLbits 000F11                  FRAME_DeviceReset@message 000F  
       __end_of_FRAME_AccelerometerStatus 144A                              _RXF5SIDLbits 000F15  
                              _FRAME_Plot 1634                             __size_of_main 007C  
                            _RXF6SIDLbits 000D61                              _RXF7SIDLbits 000D65  
                 __size_of_CAN_SetupClock 0028                              _RXF8SIDLbits 000D69  
                            _RXF9SIDLbits 000D71                                  int$flags 005A  
                     _TRM_DataTransmition 1778                               _RXB0DLCbits 000F65  
                              _LED_Update 12E2                               _RXB0CONbits 000F60  
                              _INTCONbits 000FF2                                _INI_OUTPUT 1A80  
                       _FRAME_AnalogValue 1BAA                      ?_TRM_DataTransmition 0001  
            FRAME_SoftwareVersion@message 0006                                  intlevel1 0000  
                                intlevel2 0000                           _czujnikiNaMapie 00CE  
                      ?_FRAME_AnalogValue 0006       FRAME_SensorExcitationStatus@message 0008  
                             _TXB0CONbits 000F40                       ??_FRAME_AnalogValue 000A  
               __size_of_TMR1_Timer_reset 0024                        _CAN_SetupFilter_Ne 114C  
                LED_Light_Pos@fulfillment 000F                      _FRAME_AveragingTimes 18E0  
                     ?_CAN_SetupFilter_Ne 0001            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0BCA             __end_of_FRAME_SoftwareVersion 1524  
                      ?_FRAME_DeviceReset 000F                           LED_Update@Green 0055  
               __end_of_FRAME_AnalogValue 1BAC                    __size_of_LED_Light_Pos 00B0  
                             ?_FLASH_Read 0006                     _CAN_MoveBuffIntoFrame 19E8  
                              _WDTCONbits 000FD1                       ??_FRAME_DeviceReset 0011  
                   ??_TRM_DataTransmition 001A                  _FRAME_PrzypisanieDokarty 10AE  
                  LED_Light_Pos@LED_array 0012                      ??_CAN_SetupFilter_Ne 0006  
                          LED_Update@pos1 0051                            LED_Update@pos2 004F  
                             ?_FRAME_Plot 000D  
