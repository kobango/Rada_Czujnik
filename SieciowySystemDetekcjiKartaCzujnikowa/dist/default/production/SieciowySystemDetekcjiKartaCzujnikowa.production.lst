

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
<<<<<<< HEAD
                                                                                               Mon Jul 22 09:37:27 2019
=======
                                                                                               Tue Jul 30 10:35:02 2019
>>>>>>> test

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4680
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
<<<<<<< HEAD
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4680 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  001584                     __pidataCOMRAM:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for MOC_Frame_Counter@zeta
   112  001584  0011               	dw	17
   113                           
   114                           ;initializer for LED_Update@pos2
   115  001586  0001               	dw	1
   116                           
   117                           ;initializer for LED_Update@pos1
   118  001588  0001               	dw	1
   119                           
   120                           ;initializer for _Fulfillment_Lvl
   121  00158A  0014               	dw	20
   122                           
   123                           ;initializer for LED_Update@Green
   124  00158C  01                 	db	1
   125  0000                     _RXFCON0	set	3540
   126  0000                     _MSEL3	set	3571
   127  0000                     _MSEL2	set	3570
   128  0000                     _MSEL1	set	3569
   129  0000                     _MSEL0	set	3568
   130  0000                     _BIE0	set	3578
   131  0000                     _BSEL0	set	3576
   132  0000                     _B5CON	set	3696
   133  0000                     _B4CON	set	3680
   134  0000                     _B3CON	set	3664
   135  0000                     _B2CON	set	3648
   136  0000                     _B1CON	set	3632
   137  0000                     _B0CON	set	3616
   138  0000                     _TXB0CONbits	set	3904
   139  0000                     _RXF5EIDL	set	3863
   140  0000                     _RXF5EIDH	set	3862
   141  0000                     _RXF5SIDLbits	set	3861
   142  0000                     _RXF4EIDL	set	3859
   143  0000                     _RXF4EIDH	set	3858
   144  0000                     _RXF4SIDLbits	set	3857
   145  0000                     _RXF5SIDL	set	3861
   146  0000                     _RXF5SIDH	set	3860
   147  0000                     _RXF3EIDL	set	3855
   148  0000                     _RXF3EIDH	set	3854
   149  0000                     _RXF3SIDLbits	set	3853
   150  0000                     _RXF3SIDL	set	3853
   151  0000                     _RXF3SIDH	set	3852
   152  0000                     _RXF2EIDL	set	3851
   153  0000                     _RXF2EIDH	set	3850
   154  0000                     _RXF2SIDLbits	set	3849
   155  0000                     _RXF2SIDL	set	3849
   156  0000                     _RXF2SIDH	set	3848
   157  0000                     _RXF1EIDL	set	3847
   158  0000                     _RXF1EIDH	set	3846
   159  0000                     _RXF1SIDLbits	set	3845
   160  0000                     _RXF1SIDL	set	3845
   161  0000                     _RXF1SIDH	set	3844
   162  0000                     _RXF0EIDL	set	3843
   163  0000                     _RXF0EIDH	set	3842
   164  0000                     _RXF0SIDLbits	set	3841
   165  0000                     _RXF0SIDL	set	3841
   166  0000                     _RXF0SIDH	set	3840
   167  0000                     _RXM1EIDL	set	3871
   168  0000                     _RXM1EIDH	set	3870
   169  0000                     _RXM1SIDL	set	3869
   170  0000                     _RXM1SIDH	set	3868
   171  0000                     _RXM0EIDL	set	3867
   172  0000                     _RXM0EIDH	set	3866
   173  0000                     _RXM0SIDL	set	3865
   174  0000                     _RXM0SIDH	set	3864
   175  0000                     _RXB1CON	set	3920
   176  0000                     _TXB0CON	set	3904
   177  0000                     _INTCONbits	set	4082
   178  0000                     _WDTCONbits	set	4049
   179  0000                     _RCONbits	set	4048
   180  0000                     _TRISC	set	3988
   181  0000                     _LATC	set	3979
   182  0000                     _T1CON	set	4045
   183  0000                     _TMR1H	set	4047
   184  0000                     _TMR1L	set	4046
   185  0000                     _LATE	set	3981
   186  0000                     _LATA	set	3977
   187  0000                     _LATB	set	3978
   188  0000                     _LATD	set	3980
   189  0000                     _TRISD	set	3989
   190  0000                     _TRISE	set	3990
   191  0000                     _TRISB	set	3987
   192  0000                     _TRISA	set	3986
   193  0000                     _RXB0DLCbits	set	3941
   194  0000                     _RXB0DLC	set	3941
   195  0000                     _RXB0SIDH	set	3937
   196  0000                     _RXB0SIDLbits	set	3938
   197  0000                     _RXB0SIDL	set	3938
   198  0000                     _RXB0EIDH	set	3939
   199  0000                     _RXB0EIDL	set	3940
   200  0000                     _COMSTATbits	set	3956
   201  0000                     _RXB0CONbits	set	3936
   202  0000                     _BRGCON3bits	set	3954
   203  0000                     _BRGCON2bits	set	3953
   204  0000                     _BRGCON1bits	set	3952
   205  0000                     _CIOCON	set	3955
   206  0000                     _ECANCON	set	3959
   207  0000                     _PIR3	set	4004
   208  0000                     _IPR3	set	4005
   209  0000                     _PIE3	set	4003
   210  0000                     _RXB0CON	set	3936
   211  0000                     _CANSTAT	set	3950
   212  0000                     _CANCON	set	3951
   213  0000                     _RCON	set	4048
   214  0000                     _RXB0D0	set	3942
   215  0000                     _TMR1IF	set	31984
   216  0000                     _TMR1IP	set	31992
   217  0000                     _PEIE	set	32662
   218  0000                     _IPEN	set	32391
   219  0000                     _TMR1ON	set	32360
   220  0000                     _TMR1IE	set	31976
   221  0000                     _IRCF0	set	32412
   222  0000                     _IRCF1	set	32413
   223  0000                     _IRCF2	set	32414
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  001034                     __pcinit:
   229                           	opt callstack 0
   230  001034                     start_initialization:
   231                           	opt callstack 0
   232  001034                     __initialization:
   233                           	opt callstack 0
   234                           
   235                           ; Initialize objects allocated to COMRAM (9 bytes)
   236                           ; load TBLPTR registers with __pidataCOMRAM
   237  001034  0E84               	movlw	low __pidataCOMRAM
   238  001036  6EF6               	movwf	tblptrl,c
   239  001038  0E15               	movlw	high __pidataCOMRAM
   240  00103A  6EF7               	movwf	tblptrh,c
   241  00103C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   242  00103E  6EF8               	movwf	tblptru,c
   243  001040  EE00  F04D         	lfsr	0,__pdataCOMRAM
   244  001044  EE10 F009          	lfsr	1,9
   245  001048                     copy_data0:
   246  001048  0009               	tblrd		*+
   247  00104A  CFF5 FFEE          	movff	tablat,postinc0
   248  00104E  50E5               	movf	postdec1,w,c
   249  001050  50E1               	movf	fsr1l,w,c
   250  001052  E1FA               	bnz	copy_data0
   251                           
   252                           ; Clear objects allocated to BIGRAM (544 bytes)
   253  001054  EE00  F0C6         	lfsr	0,__pbssBIGRAM
   254  001058  EE12 F020          	lfsr	1,544
   255  00105C                     clear_0:
   256  00105C  6AEE               	clrf	postinc0,c
   257  00105E  50E5               	movf	postdec1,w,c
   258  001060  50E1               	movf	fsr1l,w,c
   259  001062  E1FC               	bnz	clear_0
   260  001064  50E2               	movf	fsr1h,w,c
   261  001066  E1FA               	bnz	clear_0
   262                           
   263                           ; Clear objects allocated to BANK0 (102 bytes)
   264  001068  EE00  F060         	lfsr	0,__pbssBANK0
   265  00106C  0E66               	movlw	102
   266  00106E                     clear_1:
   267  00106E  6AEE               	clrf	postinc0,c
   268  001070  06E8               	decf	wreg,f,c
   269  001072  E1FD               	bnz	clear_1
   270                           
   271                           ; Clear objects allocated to COMRAM (21 bytes)
   272  001074  EE00  F038         	lfsr	0,__pbssCOMRAM
   273  001078  0E15               	movlw	21
   274  00107A                     clear_2:
   275  00107A  6AEE               	clrf	postinc0,c
   276  00107C  06E8               	decf	wreg,f,c
   277  00107E  E1FD               	bnz	clear_2
   278  001080                     end_of_initialization:
   279                           	opt callstack 0
   280  001080                     __end_of__initialization:
   281                           	opt callstack 0
   282  001080  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   283  001082  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   284  001084  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  001086  6EF8               	movwf	tblptru,c
   286  001088  0100               	movlb	0
   287  00108A  EFDC  F009         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290  000038                     __pbssCOMRAM:
   291                           	opt callstack 0
   292  000038                     _Flagi:
   293                           	opt callstack 0
   294  000038                     	ds	5
   295  00003D                     _DaneCan:
   296                           	opt callstack 0
   297  00003D                     	ds	4
   298  000041                     _DetectorLedRadar:
   299                           	opt callstack 0
   300  000041                     	ds	3
   301  000044                     _TMR1_Update_flag:
   302                           	opt callstack 0
   303  000044                     	ds	2
   304  000046                     _Dane:
   305                           	opt callstack 0
   306  000046                     	ds	2
   307  000048                     	ds	1
   308  000049                     	ds	1
   309  00004A                     ISR_low@ramkaStanuU8:
   310                           	opt callstack 0
   311  00004A                     	ds	1
   312  00004B                     	ds	1
   313  00004C                     _LOCK:
   314                           	opt callstack 0
   315  00004C                     	ds	1
   316                           
   317                           	psect	dataCOMRAM
   318  00004D                     __pdataCOMRAM:
   319                           	opt callstack 0
   320  00004D                     MOC_Frame_Counter@zeta:
   321                           	opt callstack 0
   322  00004D                     	ds	2
   323  00004F                     LED_Update@pos2:
   324                           	opt callstack 0
   325  00004F                     	ds	2
   326  000051                     LED_Update@pos1:
   327                           	opt callstack 0
   328  000051                     	ds	2
   329  000053                     _Fulfillment_Lvl:
   330                           	opt callstack 0
   331  000053                     	ds	2
   332  000055                     LED_Update@Green:
   333                           	opt callstack 0
   334  000055                     	ds	1
   335                           
   336                           	psect	bssBANK0
   337  000060                     __pbssBANK0:
   338                           	opt callstack 0
   339  000060                     _ramkaCanRxKarty:
   340                           	opt callstack 0
   341  000060                     	ds	85
   342  0000B5                     _ramkaCanTxKarty:
   343                           	opt callstack 0
   344  0000B5                     	ds	17
   345                           
   346                           	psect	bssBIGRAM
   347  0000C6                     __pbssBIGRAM:
   348                           	opt callstack 0
   349  0000C6                     _wartosciSasiada:
   350                           	opt callstack 0
   351  0000C6                     	ds	544
   352                           
   353                           	psect	cstackCOMRAM
   354  000001                     __pcstackCOMRAM:
   355                           	opt callstack 0
   356  000001                     TMR1_Timer_reset@t1L:
   357                           	opt callstack 0
   358  000001                     i1TMR1_Update_flag_Set@a:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362  000001                     	ds	1
   363  000002                     TMR1_Timer_reset@t1H:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x1
   367  000002                     	ds	1
   368  000003                     ??_ISR_low:
   369  000003                     
   370                           ; 1 bytes @ 0x2
   371  000003                     	ds	3
   372  000006                     ??_CAN_Setup:
   373  000006                     ?_TMR1_Update_flag_Get:
   374                           	opt callstack 0
   375  000006                     ?_LED_Right:
   376                           	opt callstack 0
   377  000006                     ?_LED_Left:
   378                           	opt callstack 0
   379  000006                     ?_MOC_Wynikowa_wartosc_roznicowa:
   380                           	opt callstack 0
   381  000006                     ?_MOC_Frame_Counter:
   382                           	opt callstack 0
   383  000006                     ?_MOC_Aktualna_Temperatura:
   384                           	opt callstack 0
   385  000006                     ?_MOC_NOTWORK:
   386                           	opt callstack 0
   387  000006                     ?_MOCK_PrzyspieszenieX:
   388                           	opt callstack 0
   389  000006                     ?_MOCK_PrzyspieszenieY:
   390                           	opt callstack 0
   391  000006                     ?_MOCK_PrzyspieszenieZ:
   392                           	opt callstack 0
   393  000006                     ?_MOCK_Klikniecie_Spadek:
   394                           	opt callstack 0
   395  000006                     ?___wmul:
   396                           	opt callstack 0
   397  000006                     ?___awdiv:
   398                           	opt callstack 0
   399  000006                     ?___lwdiv:
   400                           	opt callstack 0
   401  000006                     LOCK_Set@k:
   402                           	opt callstack 0
   403  000006                     CAN_MoveBuffIntoFrame@Ram:
   404                           	opt callstack 0
   405  000006                     CAN_GenID@message:
   406                           	opt callstack 0
   407  000006                     LED_Right@a:
   408                           	opt callstack 0
   409  000006                     LED_Left@a:
   410                           	opt callstack 0
   411  000006                     LED_Control@diode:
   412                           	opt callstack 0
   413  000006                     TMR1_Update_flag_Set@a:
   414                           	opt callstack 0
   415  000006                     IsInNeighbors@message_adress:
   416                           	opt callstack 0
   417  000006                     FRAME_ExcitationValue@message:
   418                           	opt callstack 0
   419  000006                     FRAME_ExcitationMultiplier@message:
   420                           	opt callstack 0
   421  000006                     FRAME_AveragingTimes@message:
   422                           	opt callstack 0
   423  000006                     FRAME_AxisStatus@message:
   424                           	opt callstack 0
   425  000006                     FRAME_DeviceReset@message:
   426                           	opt callstack 0
   427  000006                     FRAME_MapPosition@message:
   428                           	opt callstack 0
   429  000006                     FRAME_SoftwareVersion@message:
   430                           	opt callstack 0
   431  000006                     FRAME_AnalogValue@message:
   432                           	opt callstack 0
   433  000006                     FRAME_PrzypisanieDokarty@message:
   434                           	opt callstack 0
   435  000006                     ___wmul@multiplier:
   436                           	opt callstack 0
   437  000006                     ___awdiv@dividend:
   438                           	opt callstack 0
   439  000006                     ___lwdiv@dividend:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x5
   443  000006                     	ds	2
   444  000008                     ??_LED_Right:
   445  000008                     ??_IsInNeighbors:
   446  000008                     CAN_GenID@frameID:
   447                           	opt callstack 0
   448  000008                     CAN_MoveBuffIntoFrame@Buf:
   449                           	opt callstack 0
   450  000008                     LED_Left@b:
   451                           	opt callstack 0
   452  000008                     FRAME_AccelerometerStatus@message:
   453                           	opt callstack 0
   454  000008                     FRAME_AnalogValue@set:
   455                           	opt callstack 0
   456  000008                     ___wmul@multiplicand:
   457                           	opt callstack 0
   458  000008                     ___awdiv@divisor:
   459                           	opt callstack 0
   460  000008                     ___lwdiv@divisor:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0x7
   464  000008                     	ds	1
   465  000009                     ??_CAN_GenID:
   466  000009                     FRAME_ExcitationMultiplier@i:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x8
   470  000009                     	ds	1
   471  00000A                     CAN_MoveBuffIntoFrame@i:
   472                           	opt callstack 0
   473  00000A                     LED_Control@color:
   474                           	opt callstack 0
   475  00000A                     ___awdiv@counter:
   476                           	opt callstack 0
   477  00000A                     LED_Right@b:
   478                           	opt callstack 0
   479  00000A                     ___wmul@product:
   480                           	opt callstack 0
   481  00000A                     ___lwdiv@quotient:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x9
   485  00000A                     	ds	1
   486  00000B                     ___awdiv@sign:
   487                           	opt callstack 0
   488  00000B                     CAN_SendFrame@message:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0xA
   492  00000B                     	ds	1
   493  00000C                     ___lwdiv@counter:
   494                           	opt callstack 0
   495  00000C                     IsInNeighbors@i:
   496                           	opt callstack 0
   497  00000C                     FRAME_AdressOfNeighbors@message:
   498                           	opt callstack 0
   499  00000C                     ___awdiv@quotient:
   500                           	opt callstack 0
   501                           
   502                           ; 2 bytes @ 0xB
   503  00000C                     	ds	1
   504  00000D                     ??_CAN_SendFrame:
   505  00000D                     LED_Light_Pos@pos:
   506                           	opt callstack 0
   507  00000D                     FRAME_Plot@message:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0xC
   511  00000D                     	ds	1
   512  00000E                     CAN_TakeFrame@message:
   513                           	opt callstack 0
   514  00000E                     FRAME_SensorExcitationStatus@message:
   515                           	opt callstack 0
   516  00000E                     FRAME_AdressOfNeighbors@nrRamki:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0xD
   520  00000E                     	ds	1
   521  00000F                     ??_FRAME_Plot:
   522  00000F                     LED_Light_Pos@fulfillment:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0xE
   526  00000F                     	ds	1
   527  000010                     ??_CAN_TakeFrame:
   528  000010                     ??_FRAME_AdressOfNeighbors:
   529                           
   530                           ; 1 bytes @ 0xF
   531  000010                     	ds	1
   532  000011                     LED_Light_Pos@color:
   533                           	opt callstack 0
   534  000011                     FRAME_SensorExcitationStatus@theta:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x10
   538  000011                     	ds	1
   539  000012                     CAN_TakeFrame@op_id:
   540                           	opt callstack 0
   541  000012                     LED_Light_Pos@LED_array:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x11
   545  000012                     	ds	2
   546  000014                     CAN_TakeFrame@tempCON:
   547                           	opt callstack 0
   548  000014                     LED_Light_Pos@pos2:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x13
   552  000014                     	ds	1
   553  000015                     CAN_TakeFrame@k:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x14
   557  000015                     	ds	1
   558  000016                     LED_Light_Pos@flage:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x15
   562  000016                     	ds	2
   563  000018                     
   564                           ; 1 bytes @ 0x17
   565  000018                     	ds	6
   566  00001E                     FRAME_AdressOfNeighbors@k:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x1D
   570  00001E                     	ds	2
   571  000020                     FRAME_AdressOfNeighbors@i:
   572                           	opt callstack 0
   573                           
   574                           ; 2 bytes @ 0x1F
   575  000020                     	ds	2
   576  000022                     FRAME_HandleCanFrame@message:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x21
   580  000022                     	ds	2
   581  000024                     ??_FRAME_HandleCanFrame:
   582                           
   583                           ; 1 bytes @ 0x23
   584  000024                     	ds	2
   585  000026                     FRAME_HandleCanFrame@identyfikator:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x25
   589  000026                     	ds	1
   590  000027                     TRM_DataTransmition@canMessage:
   591                           	opt callstack 0
   592                           
   593                           ; 17 bytes @ 0x26
   594  000027                     	ds	17
   595  000038                     
   596                           ; 1 bytes @ 0x37
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 94 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels required when called:    8
   622 ;; This function calls:
   623 ;;		_INI_All
   624 ;;		_LED_Update
   625 ;;		_TMR1_Update_flag_Get
   626 ;;		_TMR1_Update_flag_Set
   627 ;;		_TRM_DataTransmition
   628 ;; This function is called by:
   629 ;;		Startup code after reset
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text0
   634  0013B8                     __ptext0:
   635                           	opt callstack 0
   636  0013B8                     _main:
   637                           	opt callstack 23
   638                           
   639                           ;main.c: 96:     INI_All();
   640                           
   641                           ;incstack = 0
   642  0013B8  EC6E  F00A         	call	_INI_All	;wreg free
   643                           
   644                           ;main.c: 98:     RCON = 0xFF;
   645  0013BC  68D0               	setf	4048,c	;volatile
   646  0013BE                     l3156:
   647                           
   648                           ;main.c: 101:     {;main.c: 102:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   649  0013BE  B041               	btfsc	_DetectorLedRadar,0,c
   650                           
   651                           ;main.c: 103:         {;main.c: 104:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   652  0013C0  9041               	bcf	_DetectorLedRadar,0,c
   653                           
   654                           ;main.c: 108:         if(TMR1_Update_flag_Get()==1)
   655  0013C2  ECB8  F00A         	call	_TMR1_Update_flag_Get	;wreg free
   656  0013C6  0406               	decf	?_TMR1_Update_flag_Get,w,c
   657  0013C8  1007               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   658  0013CA  A4D8               	btfss	status,2,c
   659  0013CC  D008               	goto	l3166
   660                           
   661                           ;main.c: 109:         {;main.c: 110:             LED_Update();
   662  0013CE  EC41  F007         	call	_LED_Update	;wreg free
   663                           
   664                           ;main.c: 111:             TMR1_Update_flag_Set(0);
   665  0013D2  0E00               	movlw	0
   666  0013D4  6E07               	movwf	TMR1_Update_flag_Set@a+1,c
   667  0013D6  0E00               	movlw	0
   668  0013D8  6E06               	movwf	TMR1_Update_flag_Set@a,c
   669  0013DA  ECB3  F00A         	call	_TMR1_Update_flag_Set	;wreg free
   670  0013DE                     l3166:
   671                           
   672                           ;main.c: 115:         TRM_DataTransmition();
   673  0013DE  EC10  F009         	call	_TRM_DataTransmition	;wreg free
   674  0013E2  0004               	clrwdt		;# 
   675                           
   676                           ;main.c: 117:     }
   677  0013E4  D7EC               	goto	l3156
   678  0013E6                     __end_of_main:
   679                           	opt callstack 0
   680                           
   681 ;; *************** function _TRM_DataTransmition *****************
   682 ;; Defined at:
   683 ;;		line 19 in file "TRM.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  canMessage     17   38[COMRAM] struct .
   688 ;;  i               1    0        unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   699 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   701 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   702 ;;Total ram usage:       17 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    7
   705 ;; This function calls:
   706 ;;		_CAN_TakeFrame
   707 ;;		_FRAME_HandleCanFrame
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text1
   714  001220                     __ptext1:
   715                           	opt callstack 0
   716  001220                     _TRM_DataTransmition:
   717                           	opt callstack 23
   718                           
   719                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   720                           
   721                           ;incstack = 0
   722  001220  A03D               	btfss	_DaneCan,0,c
   723  001222  D013               	goto	l3124
   724                           
   725                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   726  001224  0E02               	movlw	2
   727  001226  6E28               	movwf	TRM_DataTransmition@canMessage+1,c
   728                           
   729                           ;TRM.c: 30:         canMessage.id.Val = 0;
   730  001228  0E00               	movlw	0
   731  00122A  6E2B               	movwf	TRM_DataTransmition@canMessage+4,c
   732  00122C  0E00               	movlw	0
   733  00122E  6E2C               	movwf	TRM_DataTransmition@canMessage+5,c
   734  001230  0E00               	movlw	0
   735  001232  6E2D               	movwf	TRM_DataTransmition@canMessage+6,c
   736  001234  0E00               	movlw	0
   737  001236  6E2E               	movwf	TRM_DataTransmition@canMessage+7,c
   738                           
   739                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   740  001238  0E04               	movlw	4
   741  00123A  6E2D               	movwf	TRM_DataTransmition@canMessage+6,c
   742                           
   743                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   744  00123C  0E27               	movlw	low TRM_DataTransmition@canMessage
   745  00123E  6E22               	movwf	FRAME_HandleCanFrame@message,c
   746  001240  0E00               	movlw	high TRM_DataTransmition@canMessage
   747  001242  6E23               	movwf	FRAME_HandleCanFrame@message+1,c
   748  001244  ECD1  F002         	call	_FRAME_HandleCanFrame	;wreg free
   749                           
   750                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   751  001248  903D               	bcf	_DaneCan,0,c
   752  00124A                     l3124:
   753                           
   754                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   755  00124A  0E27               	movlw	low TRM_DataTransmition@canMessage
   756  00124C  6E0E               	movwf	CAN_TakeFrame@message,c
   757  00124E  0E00               	movlw	high TRM_DataTransmition@canMessage
   758  001250  6E0F               	movwf	CAN_TakeFrame@message+1,c
   759  001252  EC8F  F001         	call	_CAN_TakeFrame	;wreg free
   760  001256  0900               	iorlw	0
   761  001258  B4D8               	btfsc	status,2,c
   762  00125A  0012               	return	
   763                           
   764                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   765  00125C  0E27               	movlw	low TRM_DataTransmition@canMessage
   766  00125E  6E22               	movwf	FRAME_HandleCanFrame@message,c
   767  001260  0E00               	movlw	high TRM_DataTransmition@canMessage
   768  001262  6E23               	movwf	FRAME_HandleCanFrame@message+1,c
   769  001264  ECD1  F002         	call	_FRAME_HandleCanFrame	;wreg free
   770                           
   771                           ;TRM.c: 67:         }
   772  001268  0012               	return		;funcret
   773  00126A                     __end_of_TRM_DataTransmition:
   774                           	opt callstack 0
   775                           
   776 ;; *************** function _FRAME_HandleCanFrame *****************
   777 ;; Defined at:
   778 ;;		line 495 in file "FRAME.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  message         2   33[COMRAM] PTR struct .
   781 ;;		 -> TRM_DataTransmition@canMessage(17), 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  identyfikato    1   37[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   796 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   797 ;;Total ram usage:        5 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    6
   800 ;; This function calls:
   801 ;;		_CAN_GenID
   802 ;;		_CAN_SendFrame
   803 ;;		_FRAME_AccelerometerStatus
   804 ;;		_FRAME_AdressOfNeighbors
   805 ;;		_FRAME_AnalogValue
   806 ;;		_FRAME_AveragingTimes
   807 ;;		_FRAME_AxisStatus
   808 ;;		_FRAME_DeviceReset
   809 ;;		_FRAME_ExcitationMultiplier
   810 ;;		_FRAME_ExcitationValue
   811 ;;		_FRAME_MapPosition
   812 ;;		_FRAME_Plot
   813 ;;		_FRAME_PrzypisanieDokarty
   814 ;;		_FRAME_SensorExcitationStatus
   815 ;;		_FRAME_SoftwareVersion
   816 ;;		_LED_Error
   817 ;;		___awdiv
   818 ;; This function is called by:
   819 ;;		_TRM_DataTransmition
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text2
   824  0005A2                     __ptext2:
   825                           	opt callstack 0
   826  0005A2                     _FRAME_HandleCanFrame:
   827                           	opt callstack 23
   828                           
   829                           ;FRAME.c: 495: void FRAME_HandleCanFrame(mID * message);FRAME.c: 496: {;FRAME.c: 497:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
   830                           
   831                           ;incstack = 0
   832  0005A2  EE20 F006          	lfsr	2,6
   833  0005A6  5022               	movf	FRAME_HandleCanFrame@message,w,c
   834  0005A8  26D9               	addwf	fsr2l,f,c
   835  0005AA  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
   836  0005AC  22DA               	addwfc	fsr2h,f,c
   837  0005AE  50DF               	movf	indf2,w,c
   838  0005B0  6E24               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   839  0005B2  5024               	movf	??_FRAME_HandleCanFrame,w,c
   840  0005B4  6E06               	movwf	___awdiv@dividend,c
   841  0005B6  6A07               	clrf	___awdiv@dividend+1,c
   842  0005B8  0E00               	movlw	0
   843  0005BA  6E09               	movwf	___awdiv@divisor+1,c
   844  0005BC  0E04               	movlw	4
   845  0005BE  6E08               	movwf	___awdiv@divisor,c
   846  0005C0  ECFF  F006         	call	___awdiv	;wreg free
   847  0005C4  5006               	movf	?___awdiv,w,c
   848  0005C6  6E26               	movwf	FRAME_HandleCanFrame@identyfikator,c
   849                           
   850                           ;FRAME.c: 500:     switch(identyfikator)
   851  0005C8  D067               	goto	l3072
   852  0005CA                     l3040:
   853                           
   854                           ;FRAME.c: 503:             FRAME_SensorExcitationStatus(message);
   855  0005CA  C022  F00E         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
   856  0005CE  C023  F00F         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
   857  0005D2  EC97  F005         	call	_FRAME_SensorExcitationStatus	;wreg free
   858                           
   859                           ;FRAME.c: 504:             break;
   860  0005D6  D096               	goto	l3074
   861  0005D8                     l3042:
   862                           
   863                           ;FRAME.c: 506:             FRAME_AccelerometerStatus(message);
   864  0005D8  C022  F008         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
   865  0005DC  C023  F009         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
   866  0005E0  EC7E  F007         	call	_FRAME_AccelerometerStatus	;wreg free
   867                           
   868                           ;FRAME.c: 507:             break;
   869  0005E4  D08F               	goto	l3074
   870  0005E6                     l3044:
   871                           
   872                           ;FRAME.c: 509:             FRAME_ExcitationValue(message);
   873  0005E6  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
   874  0005EA  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
   875  0005EE  EC71  F009         	call	_FRAME_ExcitationValue	;wreg free
   876                           
   877                           ;FRAME.c: 510:             break;
   878  0005F2  D088               	goto	l3074
   879  0005F4                     l3046:
   880                           
   881                           ;FRAME.c: 512:             FRAME_ExcitationMultiplier(message);
   882  0005F4  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
   883  0005F8  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
   884  0005FC  ECC3  F008         	call	_FRAME_ExcitationMultiplier	;wreg free
   885                           
   886                           ;FRAME.c: 513:             break;
   887  000600  D081               	goto	l3074
   888  000602                     l3048:
   889                           
   890                           ;FRAME.c: 515:             FRAME_AveragingTimes(message);
   891  000602  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
   892  000606  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
   893  00060A  ECA7  F009         	call	_FRAME_AveragingTimes	;wreg free
   894                           
   895                           ;FRAME.c: 516:             break;
   896  00060E  D07A               	goto	l3074
   897  000610                     l3050:
   898                           
   899                           ;FRAME.c: 518:             FRAME_AxisStatus(message);
   900  000610  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
   901  000614  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
   902  000618  EC8C  F009         	call	_FRAME_AxisStatus	;wreg free
   903                           
   904                           ;FRAME.c: 519:             break;
   905  00061C  D073               	goto	l3074
   906  00061E                     l3052:
   907                           
   908                           ;FRAME.c: 521:             FRAME_DeviceReset(message);
   909  00061E  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
   910  000622  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
   911  000626  EC26  F005         	call	_FRAME_DeviceReset	;wreg free
   912                           
   913                           ;FRAME.c: 522:             break;
   914  00062A  D06C               	goto	l3074
   915  00062C                     l3054:
   916                           
   917                           ;FRAME.c: 524:             FRAME_Plot(message);
   918  00062C  C022  F00D         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
   919  000630  C023  F00E         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
   920  000634  EC47  F008         	call	_FRAME_Plot	;wreg free
   921                           
   922                           ;FRAME.c: 525:             break;
   923  000638  D065               	goto	l3074
   924  00063A                     l3056:
   925                           
   926                           ;FRAME.c: 527:             FRAME_MapPosition(message);
   927  00063A  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
   928  00063E  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
   929  000642  ECD4  F00A         	call	_FRAME_MapPosition	;wreg free
   930                           
   931                           ;FRAME.c: 528:             break;
   932  000646  D05E               	goto	l3074
   933  000648                     l3058:
   934                           
   935                           ;FRAME.c: 530:             FRAME_SoftwareVersion(message);
   936  000648  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
   937  00064C  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
   938  000650  ECB9  F007         	call	_FRAME_SoftwareVersion	;wreg free
   939                           
   940                           ;FRAME.c: 531:             break;
   941  000654  D057               	goto	l3074
   942  000656                     l3060:
   943                           
   944                           ;FRAME.c: 534:             FRAME_AnalogValue(message, identyfikator - 0x0C);
   945  000656  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
   946  00065A  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
   947  00065E  0EF4               	movlw	244
   948  000660  2426               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   949  000662  6E08               	movwf	FRAME_AnalogValue@set,c
   950  000664  6A09               	clrf	FRAME_AnalogValue@set+1,c
   951  000666  0EFF               	movlw	255
   952  000668  2209               	addwfc	FRAME_AnalogValue@set+1,f,c
   953  00066A  ECD5  F00A         	call	_FRAME_AnalogValue	;wreg free
   954                           
   955                           ;FRAME.c: 535:             break;
   956  00066E  D04A               	goto	l3074
   957  000670                     l3062:
   958                           
   959                           ;FRAME.c: 537:             FRAME_PrzypisanieDokarty(message);
   960  000670  C022  F006         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
   961  000674  C023  F007         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
   962  000678  EC56  F009         	call	_FRAME_PrzypisanieDokarty	;wreg free
   963                           
   964                           ;FRAME.c: 538:             break;
   965  00067C  D043               	goto	l3074
   966  00067E                     l3064:
   967                           
   968                           ;FRAME.c: 540:             FRAME_AdressOfNeighbors(message, identyfikator - 0x10);
   969  00067E  C022  F00C         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
   970  000682  C023  F00D         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
   971  000686  0EF0               	movlw	240
   972  000688  2426               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
   973  00068A  6E0E               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
   974  00068C  6A0F               	clrf	FRAME_AdressOfNeighbors@nrRamki+1,c
   975  00068E  0EFF               	movlw	255
   976  000690  220F               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,f,c
   977  000692  EC30  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
   978                           
   979                           ;FRAME.c: 541:             break;
   980  000696  D036               	goto	l3074
   981  000698                     l3072:
   982  000698  5026               	movf	FRAME_HandleCanFrame@identyfikator,w,c
   983  00069A  6E24               	movwf	??_FRAME_HandleCanFrame& (0+255),c
   984  00069C  6A25               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
   985                           
   986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 1, Range of values is 0 to 0
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            4     3 (average)
   992                           ;	Chosen strategy is simple_byte
   993  00069E  5025               	movf	??_FRAME_HandleCanFrame+1,w,c
   994  0006A0  0A00               	xorlw	0	; case 0
   995  0006A2  A4D8               	btfss	status,2,c
   996  0006A4  D792               	goto	l3040
   997                           
   998                           ; Switch size 1, requested type "simple"
   999                           ; Number of cases is 15, Range of values is 1 to 17
  1000                           ; switch strategies available:
  1001                           ; Name         Instructions Cycles
  1002                           ; simple_byte           46    24 (average)
  1003                           ;	Chosen strategy is simple_byte
  1004  0006A6  5024               	movf	??_FRAME_HandleCanFrame,w,c
  1005  0006A8  0A01               	xorlw	1	; case 1
  1006  0006AA  B4D8               	btfsc	status,2,c
  1007  0006AC  D78E               	goto	l3040
  1008  0006AE  0A03               	xorlw	3	; case 2
  1009  0006B0  B4D8               	btfsc	status,2,c
  1010  0006B2  D792               	goto	l3042
  1011  0006B4  0A01               	xorlw	1	; case 3
  1012  0006B6  B4D8               	btfsc	status,2,c
  1013  0006B8  D796               	goto	l3044
  1014  0006BA  0A07               	xorlw	7	; case 4
  1015  0006BC  B4D8               	btfsc	status,2,c
  1016  0006BE  D79A               	goto	l3046
  1017  0006C0  0A01               	xorlw	1	; case 5
  1018  0006C2  B4D8               	btfsc	status,2,c
  1019  0006C4  D79E               	goto	l3048
  1020  0006C6  0A03               	xorlw	3	; case 6
  1021  0006C8  B4D8               	btfsc	status,2,c
  1022  0006CA  D7A2               	goto	l3050
  1023  0006CC  0A01               	xorlw	1	; case 7
  1024  0006CE  B4D8               	btfsc	status,2,c
  1025  0006D0  D7A6               	goto	l3052
  1026  0006D2  0A0E               	xorlw	14	; case 9
  1027  0006D4  B4D8               	btfsc	status,2,c
  1028  0006D6  D7AA               	goto	l3054
  1029  0006D8  0A03               	xorlw	3	; case 10
  1030  0006DA  B4D8               	btfsc	status,2,c
  1031  0006DC  D7AE               	goto	l3056
  1032  0006DE  0A01               	xorlw	1	; case 11
  1033  0006E0  B4D8               	btfsc	status,2,c
  1034  0006E2  D7B2               	goto	l3058
  1035  0006E4  0A07               	xorlw	7	; case 12
  1036  0006E6  B4D8               	btfsc	status,2,c
  1037  0006E8  D7B6               	goto	l3060
  1038  0006EA  0A01               	xorlw	1	; case 13
  1039  0006EC  B4D8               	btfsc	status,2,c
  1040  0006EE  D7B3               	goto	l3060
  1041  0006F0  0A02               	xorlw	2	; case 15
  1042  0006F2  B4D8               	btfsc	status,2,c
  1043  0006F4  D7BD               	goto	l3062
  1044  0006F6  0A1F               	xorlw	31	; case 16
  1045  0006F8  B4D8               	btfsc	status,2,c
  1046  0006FA  D7C1               	goto	l3064
  1047  0006FC  0A01               	xorlw	1	; case 17
  1048  0006FE  B4D8               	btfsc	status,2,c
  1049  000700  D7BE               	goto	l3064
  1050  000702  D763               	goto	l3040
  1051  000704                     l3074:
  1052                           
  1053                           ;FRAME.c: 551:     if(message->message_type == 0x02)
  1054  000704  EE20 F001          	lfsr	2,1
  1055  000708  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1056  00070A  26D9               	addwf	fsr2l,f,c
  1057  00070C  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1058  00070E  22DA               	addwfc	fsr2h,f,c
  1059  000710  0E02               	movlw	2
  1060  000712  18DE               	xorwf	postinc2,w,c
  1061  000714  A4D8               	btfss	status,2,c
  1062  000716  0012               	return	
  1063                           
  1064                           ;FRAME.c: 552:     {;FRAME.c: 554:         message->frame_type = 0x03;
  1065  000718  EE20 F002          	lfsr	2,2
  1066  00071C  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1067  00071E  26D9               	addwf	fsr2l,f,c
  1068  000720  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1069  000722  22DA               	addwfc	fsr2h,f,c
  1070  000724  0E03               	movlw	3
  1071  000726  6EDF               	movwf	indf2,c
  1072                           
  1073                           ;FRAME.c: 555:         message->message_type = 0x01;
  1074  000728  EE20 F001          	lfsr	2,1
  1075  00072C  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1076  00072E  26D9               	addwf	fsr2l,f,c
  1077  000730  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1078  000732  22DA               	addwfc	fsr2h,f,c
  1079  000734  0E01               	movlw	1
  1080  000736  6EDF               	movwf	indf2,c
  1081                           
  1082                           ;FRAME.c: 556:         message->id.Val = 0;
  1083  000738  EE20 F004          	lfsr	2,4
  1084  00073C  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1085  00073E  26D9               	addwf	fsr2l,f,c
  1086  000740  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1087  000742  22DA               	addwfc	fsr2h,f,c
  1088  000744  6ADE               	clrf	postinc2,c
  1089  000746  6ADE               	clrf	postinc2,c
  1090  000748  6ADE               	clrf	postinc2,c
  1091  00074A  6ADD               	clrf	postdec2,c
  1092                           
  1093                           ;FRAME.c: 558:         message->id.v[2] = identyfikator*4;
  1094  00074C  5026               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1095  00074E  0D04               	mullw	4
  1096  000750  EE20 F006          	lfsr	2,6
  1097  000754  5022               	movf	FRAME_HandleCanFrame@message,w,c
  1098  000756  26D9               	addwf	fsr2l,f,c
  1099  000758  5023               	movf	FRAME_HandleCanFrame@message+1,w,c
  1100  00075A  22DA               	addwfc	fsr2h,f,c
  1101  00075C  CFF3 FFDF          	movff	prodl,indf2
  1102                           
  1103                           ;FRAME.c: 559:         CAN_GenID(message,identyfikator);
  1104  000760  C022  F006         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1105  000764  C023  F007         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1106  000768  C026  F008         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1107  00076C  EC5D  F006         	call	_CAN_GenID	;wreg free
  1108                           
  1109                           ;FRAME.c: 560:         CAN_SendFrame(message);
  1110  000770  C022  F00B         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1111  000774  C023  F00C         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1112  000778  ECC6  F003         	call	_CAN_SendFrame	;wreg free
  1113                           
  1114                           ;FRAME.c: 571:        while(RXB0CONbits.FILHIT3)
  1115  00077C  D004               	goto	l561
  1116  00077E                     l562:
  1117                           
  1118                           ;FRAME.c: 572:        {;FRAME.c: 573:            if(TXB0CONbits.TXERR == 1){
  1119  00077E  010F               	movlb	15	; () banked
  1120  000780  B940               	btfsc	64,4,b	;volatile
  1121                           
  1122                           ; BSR set to: 15
  1123                           ;FRAME.c: 574:                LED_Error();
  1124  000782  EC41  F00A         	call	_LED_Error	;wreg free
  1125  000786                     l561:
  1126                           
  1127                           ;FRAME.c: 571:        while(RXB0CONbits.FILHIT3)
  1128  000786  A660               	btfss	3936,3,c	;volatile
  1129  000788  0012               	return	
  1130  00078A  D7F9               	goto	l562
  1131  00078C                     __end_of_FRAME_HandleCanFrame:
  1132                           	opt callstack 0
  1133                           
  1134 ;; *************** function _LED_Error *****************
  1135 ;; Defined at:
  1136 ;;		line 37 in file "LED.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2  283[None  ] unsigned int 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    4
  1157 ;; This function calls:
  1158 ;;		_LED_Control
  1159 ;; This function is called by:
  1160 ;;		_FRAME_HandleCanFrame
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text3
  1165  001482                     __ptext3:
  1166                           	opt callstack 0
  1167  001482                     _LED_Error:
  1168                           	opt callstack 24
  1169                           
  1170                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1171                           
  1172                           ;incstack = 0
  1173  001482  0E02               	movlw	2
  1174  001484  6E07               	movwf	LED_Control@diode+1,c
  1175  001486  0EAA               	movlw	170
  1176  001488  6E06               	movwf	LED_Control@diode,c
  1177  00148A  0E00               	movlw	0
  1178  00148C  EC7D  F004         	call	_LED_Control
  1179                           
  1180                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1181  001490  0E00               	movlw	0
  1182  001492  6E07               	movwf	LED_Control@diode+1,c
  1183  001494  0E00               	movlw	0
  1184  001496  6E06               	movwf	LED_Control@diode,c
  1185  001498  0E01               	movlw	1
  1186  00149A  EC7D  F004         	call	_LED_Control
  1187  00149E  0012               	return		;funcret
  1188  0014A0                     __end_of_LED_Error:
  1189                           	opt callstack 0
  1190                           
  1191 ;; *************** function _FRAME_SoftwareVersion *****************
  1192 ;; Defined at:
  1193 ;;		line 384 in file "FRAME.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  message         2    5[COMRAM] PTR struct .
  1196 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1211 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;Total ram usage:        3 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    3
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_FRAME_HandleCanFrame
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text4
  1223  000F72                     __ptext4:
  1224                           	opt callstack 0
  1225  000F72                     _FRAME_SoftwareVersion:
  1226                           	opt callstack 25
  1227                           
  1228                           ;FRAME.c: 384: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 385: {;FRAME.c: 
      +                          387:     if(message->message_type == 0x02)
  1229                           
  1230                           ;incstack = 0
  1231  000F72  EE20 F001          	lfsr	2,1
  1232  000F76  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1233  000F78  26D9               	addwf	fsr2l,f,c
  1234  000F7A  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1235  000F7C  22DA               	addwfc	fsr2h,f,c
  1236  000F7E  0E02               	movlw	2
  1237  000F80  18DE               	xorwf	postinc2,w,c
  1238  000F82  A4D8               	btfss	status,2,c
  1239  000F84  0012               	return	
  1240                           
  1241                           ;FRAME.c: 388:     {;FRAME.c: 389:         message->data_length = 4;
  1242  000F86  EE20 F010          	lfsr	2,16
  1243  000F8A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1244  000F8C  26D9               	addwf	fsr2l,f,c
  1245  000F8E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1246  000F90  22DA               	addwfc	fsr2h,f,c
  1247  000F92  0E04               	movlw	4
  1248  000F94  6EDF               	movwf	indf2,c
  1249                           
  1250                           ;FRAME.c: 390:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1251  000F96  EE20 F008          	lfsr	2,8
  1252  000F9A  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1253  000F9C  26D9               	addwf	fsr2l,f,c
  1254  000F9E  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1255  000FA0  22DA               	addwfc	fsr2h,f,c
  1256  000FA2  5005               	movf	5,w,c
  1257  000FA4  6EDF               	movwf	indf2,c
  1258                           
  1259                           ;FRAME.c: 391:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1260  000FA6  EE20 F009          	lfsr	2,9
  1261  000FAA  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1262  000FAC  26D9               	addwf	fsr2l,f,c
  1263  000FAE  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1264  000FB0  22DA               	addwfc	fsr2h,f,c
  1265  000FB2  C004 FFDF          	movff	4,indf2
  1266                           
  1267                           ;FRAME.c: 392:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1268  000FB6  EE20 F00A          	lfsr	2,10
  1269  000FBA  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1270  000FBC  26D9               	addwf	fsr2l,f,c
  1271  000FBE  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1272  000FC0  22DA               	addwfc	fsr2h,f,c
  1273  000FC2  500B               	movf	11,w,c
  1274  000FC4  6EDF               	movwf	indf2,c
  1275                           
  1276                           ;FRAME.c: 393:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1277  000FC6  EE20 F00B          	lfsr	2,11
  1278  000FCA  5006               	movf	FRAME_SoftwareVersion@message,w,c
  1279  000FCC  26D9               	addwf	fsr2l,f,c
  1280  000FCE  5007               	movf	FRAME_SoftwareVersion@message+1,w,c
  1281  000FD0  22DA               	addwfc	fsr2h,f,c
  1282  000FD2  C00A FFDF          	movff	10,indf2
  1283                           
  1284                           ;FRAME.c: 394:     }
  1285  000FD6  0012               	return		;funcret
  1286  000FD8                     __end_of_FRAME_SoftwareVersion:
  1287                           	opt callstack 0
  1288                           
  1289 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1290 ;; Defined at:
  1291 ;;		line 33 in file "FRAME.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  message         2   13[COMRAM] PTR struct .
  1294 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  theta           2   16[COMRAM] int 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1310 ;;Total ram usage:        5 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    4
  1313 ;; This function calls:
  1314 ;;		_IsInNeighbors
  1315 ;;		_LOCK_Get
  1316 ;;		_LOCK_Set
  1317 ;;		_MOC_Aktualna_Temperatura
  1318 ;;		_MOC_Frame_Counter
  1319 ;;		_MOC_NOTWORK
  1320 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1321 ;; This function is called by:
  1322 ;;		_FRAME_HandleCanFrame
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text5
  1327  000B2E                     __ptext5:
  1328                           	opt callstack 0
  1329  000B2E                     _FRAME_SensorExcitationStatus:
  1330                           	opt callstack 24
  1331                           
  1332                           ;FRAME.c: 33: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 34: {;FRAM
      +                          E.c: 35:     if(message->message_type == 0x02)
  1333                           
  1334                           ;incstack = 0
  1335  000B2E  EE20 F001          	lfsr	2,1
  1336  000B32  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1337  000B34  26D9               	addwf	fsr2l,f,c
  1338  000B36  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1339  000B38  22DA               	addwfc	fsr2h,f,c
  1340  000B3A  0E02               	movlw	2
  1341  000B3C  18DE               	xorwf	postinc2,w,c
  1342  000B3E  A4D8               	btfss	status,2,c
  1343  000B40  D047               	goto	l2732
  1344                           
  1345                           ;FRAME.c: 36:     {;FRAME.c: 37:         message->data_length = 6;
  1346  000B42  EE20 F010          	lfsr	2,16
  1347  000B46  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1348  000B48  26D9               	addwf	fsr2l,f,c
  1349  000B4A  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1350  000B4C  22DA               	addwfc	fsr2h,f,c
  1351  000B4E  0E06               	movlw	6
  1352  000B50  6EDF               	movwf	indf2,c
  1353                           
  1354                           ;FRAME.c: 43:         message->data[0] = LOCK_Get();
  1355  000B52  EE20 F008          	lfsr	2,8
  1356  000B56  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1357  000B58  26D9               	addwf	fsr2l,f,c
  1358  000B5A  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1359  000B5C  22DA               	addwfc	fsr2h,f,c
  1360  000B5E  ECD2  F00A         	call	_LOCK_Get	;wreg free
  1361  000B62  6EDF               	movwf	indf2,c
  1362                           
  1363                           ;FRAME.c: 44:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1364  000B64  EE20 F009          	lfsr	2,9
  1365  000B68  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1366  000B6A  26D9               	addwf	fsr2l,f,c
  1367  000B6C  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1368  000B6E  22DA               	addwfc	fsr2h,f,c
  1369  000B70  EC95  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1370  000B74  C007  F006         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1371  000B78  6A07               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1372  000B7A  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1373  000B7C  6EDF               	movwf	indf2,c
  1374                           
  1375                           ;FRAME.c: 45:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1376  000B7E  EE20 F00A          	lfsr	2,10
  1377  000B82  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1378  000B84  26D9               	addwf	fsr2l,f,c
  1379  000B86  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1380  000B88  22DA               	addwfc	fsr2h,f,c
  1381  000B8A  EC95  F00A         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1382  000B8E  5006               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1383  000B90  6EDF               	movwf	indf2,c
  1384                           
  1385                           ;FRAME.c: 46:         message->data[3] = MOC_Frame_Counter();
  1386  000B92  EE20 F00B          	lfsr	2,11
  1387  000B96  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1388  000B98  26D9               	addwf	fsr2l,f,c
  1389  000B9A  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1390  000B9C  22DA               	addwfc	fsr2h,f,c
  1391  000B9E  EC87  F00A         	call	_MOC_Frame_Counter	;wreg free
  1392  000BA2  5006               	movf	?_MOC_Frame_Counter,w,c
  1393  000BA4  6EDF               	movwf	indf2,c
  1394                           
  1395                           ;FRAME.c: 47:         message->data[4] = MOC_Aktualna_Temperatura();
  1396  000BA6  EE20 F00C          	lfsr	2,12
  1397  000BAA  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1398  000BAC  26D9               	addwf	fsr2l,f,c
  1399  000BAE  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1400  000BB0  22DA               	addwfc	fsr2h,f,c
  1401  000BB2  EC9A  F00A         	call	_MOC_Aktualna_Temperatura	;wreg free
  1402  000BB6  5006               	movf	?_MOC_Aktualna_Temperatura,w,c
  1403  000BB8  6EDF               	movwf	indf2,c
  1404                           
  1405                           ;FRAME.c: 48:         message->data[5] = MOC_NOTWORK();
  1406  000BBA  EE20 F00D          	lfsr	2,13
  1407  000BBE  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1408  000BC0  26D9               	addwf	fsr2l,f,c
  1409  000BC2  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1410  000BC4  22DA               	addwfc	fsr2h,f,c
  1411  000BC6  ECC7  F00A         	call	_MOC_NOTWORK	;wreg free
  1412  000BCA  5006               	movf	?_MOC_NOTWORK,w,c
  1413  000BCC  6EDF               	movwf	indf2,c
  1414                           
  1415                           ;FRAME.c: 58:     }
  1416  000BCE  0012               	return	
  1417  000BD0                     l2732:
  1418                           
  1419                           ;FRAME.c: 60:     {;FRAME.c: 61:         int theta = message->id.w[0];
  1420  000BD0  EE20 F004          	lfsr	2,4
  1421  000BD4  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1422  000BD6  26D9               	addwf	fsr2l,f,c
  1423  000BD8  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1424  000BDA  22DA               	addwfc	fsr2h,f,c
  1425  000BDC  CFDE F011          	movff	postinc2,FRAME_SensorExcitationStatus@theta
  1426  000BE0  CFDD F012          	movff	postdec2,FRAME_SensorExcitationStatus@theta+1
  1427                           
  1428                           ;FRAME.c: 62:         if(IsInNeighbors(theta))
  1429  000BE4  C011  F006         	movff	FRAME_SensorExcitationStatus@theta,IsInNeighbors@message_adress
  1430  000BE8  C012  F007         	movff	FRAME_SensorExcitationStatus@theta+1,IsInNeighbors@message_adress+1
  1431  000BEC  EC9C  F008         	call	_IsInNeighbors	;wreg free
  1432  000BF0  0900               	iorlw	0
  1433  000BF2  B4D8               	btfsc	status,2,c
  1434  000BF4  0012               	return	
  1435                           
  1436                           ;FRAME.c: 63:         {;FRAME.c: 64:         LOCK_Set(message->data[0]);
  1437  000BF6  EE20 F008          	lfsr	2,8
  1438  000BFA  500E               	movf	FRAME_SensorExcitationStatus@message,w,c
  1439  000BFC  26D9               	addwf	fsr2l,f,c
  1440  000BFE  500F               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1441  000C00  22DA               	addwfc	fsr2h,f,c
  1442  000C02  50DF               	movf	indf2,w,c
  1443  000C04  ECCB  F00A         	call	_LOCK_Set
  1444  000C08  0012               	return		;funcret
  1445  000C0A                     __end_of_FRAME_SensorExcitationStatus:
  1446                           	opt callstack 0
  1447                           
  1448 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1449 ;; Defined at:
  1450 ;;		line 33 in file "MOC_Funct.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  2    5[COMRAM] unsigned int 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1468 ;;Total ram usage:        2 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    3
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_FRAME_SensorExcitationStatus
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text6
  1479  00152A                     __ptext6:
  1480                           	opt callstack 0
  1481  00152A                     _MOC_Wynikowa_wartosc_roznicowa:
  1482                           	opt callstack 24
  1483                           
  1484                           ;MOC_Funct.c: 35:     return 0x0220;
  1485                           
  1486                           ;incstack = 0
  1487  00152A  0E02               	movlw	2
  1488  00152C  6E07               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1489  00152E  0E20               	movlw	32
  1490  001530  6E06               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1491  001532  0012               	return		;funcret
  1492  001534                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1493                           	opt callstack 0
  1494                           
  1495 ;; *************** function _MOC_NOTWORK *****************
  1496 ;; Defined at:
  1497 ;;		line 47 in file "MOC_Funct.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2    5[COMRAM] unsigned int 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;Total ram usage:        2 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    3
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_FRAME_SensorExcitationStatus
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text7
  1526  00158E                     __ptext7:
  1527                           	opt callstack 0
  1528  00158E                     _MOC_NOTWORK:
  1529                           	opt callstack 24
  1530                           
  1531                           ;MOC_Funct.c: 49:     return 0xFF;
  1532                           
  1533                           ;incstack = 0
  1534  00158E  0E00               	movlw	0
  1535  001590  6E07               	movwf	?_MOC_NOTWORK+1,c
  1536  001592  6806               	setf	?_MOC_NOTWORK,c
  1537  001594  0012               	return		;funcret
  1538  001596                     __end_of_MOC_NOTWORK:
  1539                           	opt callstack 0
  1540                           
  1541 ;; *************** function _MOC_Frame_Counter *****************
  1542 ;; Defined at:
  1543 ;;		line 38 in file "MOC_Funct.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2    5[COMRAM] unsigned int 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    3
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_FRAME_SensorExcitationStatus
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text8
  1572  00150E                     __ptext8:
  1573                           	opt callstack 0
  1574  00150E                     _MOC_Frame_Counter:
  1575                           	opt callstack 24
  1576                           
  1577                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1578                           
  1579                           ;incstack = 0
  1580  00150E  504D               	movf	MOC_Frame_Counter@zeta,w,c
  1581  001510  6E06               	movwf	?_MOC_Frame_Counter,c
  1582  001512  504E               	movf	MOC_Frame_Counter@zeta+1,w,c
  1583  001514  6E07               	movwf	?_MOC_Frame_Counter+1,c
  1584  001516  4A4D               	infsnz	MOC_Frame_Counter@zeta,f,c
  1585  001518  2A4E               	incf	MOC_Frame_Counter@zeta+1,f,c
  1586  00151A  0012               	return		;funcret
  1587  00151C                     __end_of_MOC_Frame_Counter:
  1588                           	opt callstack 0
  1589                           
  1590 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1591 ;; Defined at:
  1592 ;;		line 43 in file "MOC_Funct.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2    5[COMRAM] unsigned int 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1609 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    3
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_FRAME_SensorExcitationStatus
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text9
  1621  001534                     __ptext9:
  1622                           	opt callstack 0
  1623  001534                     _MOC_Aktualna_Temperatura:
  1624                           	opt callstack 24
  1625                           
  1626                           ;MOC_Funct.c: 45:     return 0x1B;
  1627                           
  1628                           ;incstack = 0
  1629  001534  0E00               	movlw	0
  1630  001536  6E07               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1631  001538  0E1B               	movlw	27
  1632  00153A  6E06               	movwf	?_MOC_Aktualna_Temperatura,c
  1633  00153C  0012               	return		;funcret
  1634  00153E                     __end_of_MOC_Aktualna_Temperatura:
  1635                           	opt callstack 0
  1636                           
  1637 ;; *************** function _LOCK_Set *****************
  1638 ;; Defined at:
  1639 ;;		line 52 in file "LED.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  k               1    wreg     unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  k               1    5[COMRAM] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;Total ram usage:        1 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    3
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_FRAME_SensorExcitationStatus
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text10
  1668  001596                     __ptext10:
  1669                           	opt callstack 0
  1670  001596                     _LOCK_Set:
  1671                           	opt callstack 24
  1672                           
  1673                           ;incstack = 0
  1674                           ;LOCK_Set@k stored from wreg
  1675  001596  6E06               	movwf	LOCK_Set@k,c
  1676                           
  1677                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1678  001598  C006  F04C         	movff	LOCK_Set@k,_LOCK
  1679  00159C  0012               	return		;funcret
  1680  00159E                     __end_of_LOCK_Set:
  1681                           	opt callstack 0
  1682                           
  1683 ;; *************** function _LOCK_Get *****************
  1684 ;; Defined at:
  1685 ;;		line 57 in file "LED.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      unsigned char 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    3
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_FRAME_SensorExcitationStatus
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text11
  1714  0015A4                     __ptext11:
  1715                           	opt callstack 0
  1716  0015A4                     _LOCK_Get:
  1717                           	opt callstack 24
  1718                           
  1719                           ;LED.c: 59:     return LOCK;
  1720                           
  1721                           ;incstack = 0
  1722  0015A4  504C               	movf	_LOCK,w,c
  1723  0015A6  0012               	return		;funcret
  1724  0015A8                     __end_of_LOCK_Get:
  1725                           	opt callstack 0
  1726                           
  1727 ;; *************** function _IsInNeighbors *****************
  1728 ;; Defined at:
  1729 ;;		line 69 in file "FRAME.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  message_adre    2    5[COMRAM] unsigned int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  i               2   11[COMRAM] unsigned short 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      unsigned char 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1745 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1746 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;Total ram usage:        8 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    3
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_FRAME_SensorExcitationStatus
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text12
  1758  001138                     __ptext12:
  1759                           	opt callstack 0
  1760  001138                     _IsInNeighbors:
  1761                           	opt callstack 24
  1762                           
  1763                           ;FRAME.c: 69: static BYTE IsInNeighbors(UINT message_adress);FRAME.c: 70: {;FRAME.c: 71:
      +                               WORD i;;FRAME.c: 73:     for(i=0; i<4; i++)
  1764                           
  1765                           ;incstack = 0
  1766  001138  0E00               	movlw	0
  1767  00113A  6E0D               	movwf	IsInNeighbors@i+1,c
  1768  00113C  0E00               	movlw	0
  1769  00113E  6E0C               	movwf	IsInNeighbors@i,c
  1770  001140                     l2508:
  1771                           
  1772                           ;FRAME.c: 74:         {;FRAME.c: 75:             if(message_adress == Dane->sasiedzi[i+(
      +                          4*0x10)].adres )
  1773  001140  0E0E               	movlw	14
  1774  001142  6E08               	movwf	??_IsInNeighbors& (0+255),c
  1775  001144  0E01               	movlw	1
  1776  001146  6E09               	movwf	(??_IsInNeighbors+1)& (0+255),c
  1777  001148  90D8               	bcf	status,0,c
  1778  00114A  340C               	rlcf	IsInNeighbors@i,w,c
  1779  00114C  6ED9               	movwf	fsr2l,c
  1780  00114E  340D               	rlcf	IsInNeighbors@i+1,w,c
  1781  001150  6EDA               	movwf	fsr2h,c
  1782  001152  90D8               	bcf	status,0,c
  1783  001154  36D9               	rlcf	fsr2l,f,c
  1784  001156  36DA               	rlcf	fsr2h,f,c
  1785  001158  5008               	movf	??_IsInNeighbors,w,c
  1786  00115A  26D9               	addwf	fsr2l,f,c
  1787  00115C  5009               	movf	??_IsInNeighbors+1,w,c
  1788  00115E  22DA               	addwfc	fsr2h,f,c
  1789  001160  5006               	movf	IsInNeighbors@message_adress,w,c
  1790  001162  18DE               	xorwf	postinc2,w,c
  1791  001164  E106               	bnz	l2514
  1792  001166  5007               	movf	IsInNeighbors@message_adress+1,w,c
  1793  001168  18DE               	xorwf	postinc2,w,c
  1794  00116A  A4D8               	btfss	status,2,c
  1795  00116C  D002               	goto	l2514
  1796                           
  1797                           ;FRAME.c: 76:             {;FRAME.c: 77:                 return 1;
  1798  00116E  0E01               	movlw	1
  1799  001170  0012               	return	
  1800  001172                     l2514:
  1801                           
  1802                           ;FRAME.c: 81:         }
  1803  001172  4A0C               	infsnz	IsInNeighbors@i,f,c
  1804  001174  2A0D               	incf	IsInNeighbors@i+1,f,c
  1805  001176  500D               	movf	IsInNeighbors@i+1,w,c
  1806  001178  E104               	bnz	u1050
  1807  00117A  0E04               	movlw	4
  1808  00117C  5C0C               	subwf	IsInNeighbors@i,w,c
  1809  00117E  A0D8               	btfss	status,0,c
  1810  001180  D7DF               	goto	l2508
  1811  001182                     u1050:
  1812                           
  1813                           ;FRAME.c: 82:     return 0;
  1814  001182  0E00               	movlw	0
  1815  001184  0012               	return		;funcret
  1816  001186                     __end_of_IsInNeighbors:
  1817                           	opt callstack 0
  1818                           
  1819 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  1820 ;; Defined at:
  1821 ;;		line 433 in file "FRAME.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  message         2    5[COMRAM] PTR struct .
  1824 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;Total ram usage:        3 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    3
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_FRAME_HandleCanFrame
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text13
  1851  0012AC                     __ptext13:
  1852                           	opt callstack 0
  1853  0012AC                     _FRAME_PrzypisanieDokarty:
  1854                           	opt callstack 25
  1855                           
  1856                           ;FRAME.c: 433: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 434: {;FRAME.
      +                          c: 435:     if(message->message_type == 0x02)
  1857                           
  1858                           ;incstack = 0
  1859  0012AC  EE20 F001          	lfsr	2,1
  1860  0012B0  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1861  0012B2  26D9               	addwf	fsr2l,f,c
  1862  0012B4  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1863  0012B6  22DA               	addwfc	fsr2h,f,c
  1864  0012B8  0E02               	movlw	2
  1865  0012BA  18DE               	xorwf	postinc2,w,c
  1866  0012BC  A4D8               	btfss	status,2,c
  1867  0012BE  0012               	return	
  1868                           
  1869                           ;FRAME.c: 436:     {;FRAME.c: 437:         message->data_length = 1;
  1870  0012C0  EE20 F010          	lfsr	2,16
  1871  0012C4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1872  0012C6  26D9               	addwf	fsr2l,f,c
  1873  0012C8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1874  0012CA  22DA               	addwfc	fsr2h,f,c
  1875  0012CC  0E01               	movlw	1
  1876  0012CE  6EDF               	movwf	indf2,c
  1877                           
  1878                           ;FRAME.c: 438:         message->data[0] = 0xFF;
  1879  0012D0  EE20 F008          	lfsr	2,8
  1880  0012D4  5006               	movf	FRAME_PrzypisanieDokarty@message,w,c
  1881  0012D6  26D9               	addwf	fsr2l,f,c
  1882  0012D8  5007               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  1883  0012DA  22DA               	addwfc	fsr2h,f,c
  1884  0012DC  0EFF               	movlw	255
  1885  0012DE  6EDF               	movwf	indf2,c
  1886                           
  1887                           ;FRAME.c: 439:     }
  1888  0012E0  0012               	return		;funcret
  1889  0012E2                     __end_of_FRAME_PrzypisanieDokarty:
  1890                           	opt callstack 0
  1891                           
  1892 ;; *************** function _FRAME_Plot *****************
  1893 ;; Defined at:
  1894 ;;		line 338 in file "FRAME.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  message         2   12[COMRAM] PTR struct .
  1897 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;Total ram usage:        3 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    4
  1916 ;; This function calls:
  1917 ;;		___lwdiv
  1918 ;; This function is called by:
  1919 ;;		_FRAME_HandleCanFrame
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text14
  1924  00108E                     __ptext14:
  1925                           	opt callstack 0
  1926  00108E                     _FRAME_Plot:
  1927                           	opt callstack 24
  1928                           
  1929                           ;FRAME.c: 338: static void FRAME_Plot(mID *message);FRAME.c: 339: {;FRAME.c: 341:     if
      +                          (message->message_type == 0x02)
  1930                           
  1931                           ;incstack = 0
  1932  00108E  EE20 F001          	lfsr	2,1
  1933  001092  500D               	movf	FRAME_Plot@message,w,c
  1934  001094  26D9               	addwf	fsr2l,f,c
  1935  001096  500E               	movf	FRAME_Plot@message+1,w,c
  1936  001098  22DA               	addwfc	fsr2h,f,c
  1937  00109A  0E02               	movlw	2
  1938  00109C  18DE               	xorwf	postinc2,w,c
  1939  00109E  A4D8               	btfss	status,2,c
  1940  0010A0  D013               	goto	l2792
  1941                           
  1942                           ;FRAME.c: 342:     {;FRAME.c: 343:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  1943  0010A2  EE20 F008          	lfsr	2,8
  1944  0010A6  500D               	movf	FRAME_Plot@message,w,c
  1945  0010A8  26D9               	addwf	fsr2l,f,c
  1946  0010AA  500E               	movf	FRAME_Plot@message+1,w,c
  1947  0010AC  22DA               	addwfc	fsr2h,f,c
  1948  0010AE  C00C F006          	movff	12,___lwdiv@dividend
  1949  0010B2  C00D F007          	movff	13,___lwdiv@dividend+1
  1950  0010B6  0E00               	movlw	0
  1951  0010B8  6E09               	movwf	___lwdiv@divisor+1,c
  1952  0010BA  0E0A               	movlw	10
  1953  0010BC  6E08               	movwf	___lwdiv@divisor,c
  1954  0010BE  EC73  F008         	call	___lwdiv	;wreg free
  1955  0010C2  5006               	movf	?___lwdiv,w,c
  1956  0010C4  6EDF               	movwf	indf2,c
  1957                           
  1958                           ;FRAME.c: 344:     }
  1959  0010C6  0012               	return	
  1960  0010C8                     l2792:
  1961                           
  1962                           ;FRAME.c: 346:     {;FRAME.c: 347:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  1963  0010C8  EE20 F008          	lfsr	2,8
  1964  0010CC  500D               	movf	FRAME_Plot@message,w,c
  1965  0010CE  26D9               	addwf	fsr2l,f,c
  1966  0010D0  500E               	movf	FRAME_Plot@message+1,w,c
  1967  0010D2  22DA               	addwfc	fsr2h,f,c
  1968  0010D4  50DF               	movf	indf2,w,c
  1969  0010D6  6E0F               	movwf	??_FRAME_Plot& (0+255),c
  1970  0010D8  500F               	movf	??_FRAME_Plot,w,c
  1971  0010DA  0D0A               	mullw	10
  1972  0010DC  CFF3 F00C          	movff	prodl,12
  1973  0010E0  CFF4 F00D          	movff	prodh,13
  1974  0010E4  0012               	return		;funcret
  1975  0010E6                     __end_of_FRAME_Plot:
  1976                           	opt callstack 0
  1977                           
  1978 ;; *************** function _FRAME_MapPosition *****************
  1979 ;; Defined at:
  1980 ;;		line 359 in file "FRAME.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  message         2    5[COMRAM] PTR struct .
  1983 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		None
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;Total ram usage:        2 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    3
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_FRAME_HandleCanFrame
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text15
  2010  0015A8                     __ptext15:
  2011                           	opt callstack 0
  2012  0015A8                     _FRAME_MapPosition:
  2013                           	opt callstack 25
  2014                           
  2015                           ;incstack = 0
  2016  0015A8  0012               	return		;funcret
  2017  0015AA                     __end_of_FRAME_MapPosition:
  2018                           	opt callstack 0
  2019                           
  2020 ;; *************** function _FRAME_ExcitationValue *****************
  2021 ;; Defined at:
  2022 ;;		line 116 in file "FRAME.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  message         2    5[COMRAM] PTR struct .
  2025 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2041 ;;Total ram usage:        3 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    3
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_FRAME_HandleCanFrame
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text16
  2052  0012E2                     __ptext16:
  2053                           	opt callstack 0
  2054  0012E2                     _FRAME_ExcitationValue:
  2055                           	opt callstack 25
  2056                           
  2057                           ;FRAME.c: 116: static void FRAME_ExcitationValue(mID *message);FRAME.c: 117: {;FRAME.c: 
      +                          118:     if(message->message_type == 0x02)
  2058                           
  2059                           ;incstack = 0
  2060  0012E2  EE20 F001          	lfsr	2,1
  2061  0012E6  5006               	movf	FRAME_ExcitationValue@message,w,c
  2062  0012E8  26D9               	addwf	fsr2l,f,c
  2063  0012EA  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2064  0012EC  22DA               	addwfc	fsr2h,f,c
  2065  0012EE  0E02               	movlw	2
  2066  0012F0  18DE               	xorwf	postinc2,w,c
  2067  0012F2  A4D8               	btfss	status,2,c
  2068  0012F4  0012               	return	
  2069                           
  2070                           ;FRAME.c: 119:     {;FRAME.c: 120:         message->data_length = 1;
  2071  0012F6  EE20 F010          	lfsr	2,16
  2072  0012FA  5006               	movf	FRAME_ExcitationValue@message,w,c
  2073  0012FC  26D9               	addwf	fsr2l,f,c
  2074  0012FE  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2075  001300  22DA               	addwfc	fsr2h,f,c
  2076  001302  0E01               	movlw	1
  2077  001304  6EDF               	movwf	indf2,c
  2078                           
  2079                           ;FRAME.c: 125:         message->data[0] = 0xFF;
  2080  001306  EE20 F008          	lfsr	2,8
  2081  00130A  5006               	movf	FRAME_ExcitationValue@message,w,c
  2082  00130C  26D9               	addwf	fsr2l,f,c
  2083  00130E  5007               	movf	FRAME_ExcitationValue@message+1,w,c
  2084  001310  22DA               	addwfc	fsr2h,f,c
  2085  001312  0EFF               	movlw	255
  2086  001314  6EDF               	movwf	indf2,c
  2087                           
  2088                           ;FRAME.c: 126:     }
  2089  001316  0012               	return		;funcret
  2090  001318                     __end_of_FRAME_ExcitationValue:
  2091                           	opt callstack 0
  2092                           
  2093 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2094 ;; Defined at:
  2095 ;;		line 140 in file "FRAME.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  message         2    5[COMRAM] PTR struct .
  2098 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  i               2    8[COMRAM] unsigned short 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;Total ram usage:        5 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    3
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_FRAME_HandleCanFrame
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text17
  2125  001186                     __ptext17:
  2126                           	opt callstack 0
  2127  001186                     _FRAME_ExcitationMultiplier:
  2128                           	opt callstack 25
  2129                           
  2130                           ;FRAME.c: 140: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 141: {;FRAM
      +                          E.c: 142:     WORD i;;FRAME.c: 144:     if(message->message_type == 0x02)
  2131                           
  2132                           ;incstack = 0
  2133  001186  EE20 F001          	lfsr	2,1
  2134  00118A  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2135  00118C  26D9               	addwf	fsr2l,f,c
  2136  00118E  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2137  001190  22DA               	addwfc	fsr2h,f,c
  2138  001192  0E02               	movlw	2
  2139  001194  18DE               	xorwf	postinc2,w,c
  2140  001196  A4D8               	btfss	status,2,c
  2141  001198  0012               	return	
  2142                           
  2143                           ;FRAME.c: 145:     {;FRAME.c: 146:         message->data_length = 1;
  2144  00119A  EE20 F010          	lfsr	2,16
  2145  00119E  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2146  0011A0  26D9               	addwf	fsr2l,f,c
  2147  0011A2  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2148  0011A4  22DA               	addwfc	fsr2h,f,c
  2149  0011A6  0E01               	movlw	1
  2150  0011A8  6EDF               	movwf	indf2,c
  2151                           
  2152                           ;FRAME.c: 147:         for(i=0; i<3; i++)
  2153  0011AA  0E00               	movlw	0
  2154  0011AC  6E0A               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2155  0011AE  0E00               	movlw	0
  2156  0011B0  6E09               	movwf	FRAME_ExcitationMultiplier@i,c
  2157  0011B2                     l2764:
  2158                           
  2159                           ;FRAME.c: 148:         {;FRAME.c: 151:         }
  2160  0011B2  4A09               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2161  0011B4  2A0A               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2162  0011B6  500A               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2163  0011B8  E104               	bnz	u1220
  2164  0011BA  0E03               	movlw	3
  2165  0011BC  5C09               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2166  0011BE  A0D8               	btfss	status,0,c
  2167  0011C0  D7F8               	goto	l2764
  2168  0011C2                     u1220:
  2169                           
  2170                           ;FRAME.c: 152:         message->data[0] = 0xFF;
  2171  0011C2  EE20 F008          	lfsr	2,8
  2172  0011C6  5006               	movf	FRAME_ExcitationMultiplier@message,w,c
  2173  0011C8  26D9               	addwf	fsr2l,f,c
  2174  0011CA  5007               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2175  0011CC  22DA               	addwfc	fsr2h,f,c
  2176  0011CE  0EFF               	movlw	255
  2177  0011D0  6EDF               	movwf	indf2,c
  2178                           
  2179                           ;FRAME.c: 153:     }
  2180  0011D2  0012               	return		;funcret
  2181  0011D4                     __end_of_FRAME_ExcitationMultiplier:
  2182                           	opt callstack 0
  2183                           
  2184 ;; *************** function _FRAME_DeviceReset *****************
  2185 ;; Defined at:
  2186 ;;		line 274 in file "FRAME.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  message         2    5[COMRAM] PTR struct .
  2189 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;Total ram usage:        3 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    3
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_FRAME_HandleCanFrame
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text18
  2216  000A4C                     __ptext18:
  2217                           	opt callstack 0
  2218  000A4C                     _FRAME_DeviceReset:
  2219                           	opt callstack 25
  2220                           
  2221                           ;FRAME.c: 274: static void FRAME_DeviceReset(mID *message);FRAME.c: 275: {;FRAME.c: 276:
      +                               if(message->message_type == 0x02)
  2222                           
  2223                           ;incstack = 0
  2224  000A4C  EE20 F001          	lfsr	2,1
  2225  000A50  5006               	movf	FRAME_DeviceReset@message,w,c
  2226  000A52  26D9               	addwf	fsr2l,f,c
  2227  000A54  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2228  000A56  22DA               	addwfc	fsr2h,f,c
  2229  000A58  0E02               	movlw	2
  2230  000A5A  18DE               	xorwf	postinc2,w,c
  2231  000A5C  A4D8               	btfss	status,2,c
  2232  000A5E  D056               	goto	l2786
  2233                           
  2234                           ;FRAME.c: 277:     {;FRAME.c: 278:         message->data_length = 1;
  2235  000A60  EE20 F010          	lfsr	2,16
  2236  000A64  5006               	movf	FRAME_DeviceReset@message,w,c
  2237  000A66  26D9               	addwf	fsr2l,f,c
  2238  000A68  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2239  000A6A  22DA               	addwfc	fsr2h,f,c
  2240  000A6C  0E01               	movlw	1
  2241  000A6E  6EDF               	movwf	indf2,c
  2242                           
  2243                           ;FRAME.c: 280:         message->data[0] = (RCON>>6) & 0x01;
  2244  000A70  EE20 F008          	lfsr	2,8
  2245  000A74  5006               	movf	FRAME_DeviceReset@message,w,c
  2246  000A76  26D9               	addwf	fsr2l,f,c
  2247  000A78  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2248  000A7A  22DA               	addwfc	fsr2h,f,c
  2249  000A7C  44D0               	rlncf	4048,w,c	;volatile
  2250  000A7E  46E8               	rlncf	wreg,f,c
  2251  000A80  0B03               	andlw	3
  2252  000A82  0B01               	andlw	1
  2253  000A84  6EDF               	movwf	indf2,c
  2254                           
  2255                           ;FRAME.c: 281:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2256  000A86  EE20 F009          	lfsr	2,9
  2257  000A8A  5006               	movf	FRAME_DeviceReset@message,w,c
  2258  000A8C  26D9               	addwf	fsr2l,f,c
  2259  000A8E  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2260  000A90  22DA               	addwfc	fsr2h,f,c
  2261  000A92  A838               	btfss	_Flagi,4,c
  2262  000A94  D002               	goto	u1260
  2263  000A96  0E01               	movlw	1
  2264  000A98  D001               	goto	u1266
  2265  000A9A                     u1260:
  2266  000A9A  0E00               	movlw	0
  2267  000A9C                     u1266:
  2268  000A9C  6EDF               	movwf	indf2,c
  2269                           
  2270                           ;FRAME.c: 282:         message->data[2] = Flagi.pomiarTla;
  2271  000A9E  EE20 F00A          	lfsr	2,10
  2272  000AA2  5006               	movf	FRAME_DeviceReset@message,w,c
  2273  000AA4  26D9               	addwf	fsr2l,f,c
  2274  000AA6  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2275  000AA8  22DA               	addwfc	fsr2h,f,c
  2276  000AAA  A038               	btfss	_Flagi,0,c
  2277  000AAC  D002               	goto	u1270
  2278  000AAE  0E01               	movlw	1
  2279  000AB0  D001               	goto	u1276
  2280  000AB2                     u1270:
  2281  000AB2  0E00               	movlw	0
  2282  000AB4                     u1276:
  2283  000AB4  6EDF               	movwf	indf2,c
  2284                           
  2285                           ;FRAME.c: 283:         message->data[3] = 0;
  2286  000AB6  EE20 F00B          	lfsr	2,11
  2287  000ABA  5006               	movf	FRAME_DeviceReset@message,w,c
  2288  000ABC  26D9               	addwf	fsr2l,f,c
  2289  000ABE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2290  000AC0  22DA               	addwfc	fsr2h,f,c
  2291  000AC2  0E00               	movlw	0
  2292  000AC4  6EDF               	movwf	indf2,c
  2293                           
  2294                           ;FRAME.c: 284:         message->data[4] = Dane->rokU16;
  2295  000AC6  EE20 F00C          	lfsr	2,12
  2296  000ACA  5006               	movf	FRAME_DeviceReset@message,w,c
  2297  000ACC  26D9               	addwf	fsr2l,f,c
  2298  000ACE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2299  000AD0  22DA               	addwfc	fsr2h,f,c
  2300  000AD2  C02E FFDF          	movff	46,indf2
  2301                           
  2302                           ;FRAME.c: 285:         message->data[5] = Dane->miesiacU16;
  2303  000AD6  EE20 F00D          	lfsr	2,13
  2304  000ADA  5006               	movf	FRAME_DeviceReset@message,w,c
  2305  000ADC  26D9               	addwf	fsr2l,f,c
  2306  000ADE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2307  000AE0  22DA               	addwfc	fsr2h,f,c
  2308  000AE2  C030 FFDF          	movff	48,indf2
  2309                           
  2310                           ;FRAME.c: 286:         message->data[6] = Dane->dzienU16;
  2311  000AE6  EE20 F00E          	lfsr	2,14
  2312  000AEA  5006               	movf	FRAME_DeviceReset@message,w,c
  2313  000AEC  26D9               	addwf	fsr2l,f,c
  2314  000AEE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2315  000AF0  22DA               	addwfc	fsr2h,f,c
  2316  000AF2  C032 FFDF          	movff	50,indf2
  2317                           
  2318                           ;FRAME.c: 287:         message->data[7] = Dane->godzinaU16;
  2319  000AF6  EE20 F00F          	lfsr	2,15
  2320  000AFA  5006               	movf	FRAME_DeviceReset@message,w,c
  2321  000AFC  26D9               	addwf	fsr2l,f,c
  2322  000AFE  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2323  000B00  22DA               	addwfc	fsr2h,f,c
  2324  000B02  C034 FFDF          	movff	52,indf2
  2325                           
  2326                           ;FRAME.c: 288:         RCON &= ~(1<<6);
  2327  000B06  9CD0               	bcf	4048,6,c	;volatile
  2328                           
  2329                           ;FRAME.c: 289:         Flagi.wykonanoZapisDoFlash = 0;
  2330  000B08  9838               	bcf	_Flagi,4,c
  2331                           
  2332                           ;FRAME.c: 303:     }
  2333  000B0A  0012               	return	
  2334  000B0C                     l2786:
  2335                           
  2336                           ;FRAME.c: 305:     {;FRAME.c: 306:         message->data_length = 1;
  2337  000B0C  EE20 F010          	lfsr	2,16
  2338  000B10  5006               	movf	FRAME_DeviceReset@message,w,c
  2339  000B12  26D9               	addwf	fsr2l,f,c
  2340  000B14  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2341  000B16  22DA               	addwfc	fsr2h,f,c
  2342  000B18  0E01               	movlw	1
  2343  000B1A  6EDF               	movwf	indf2,c
  2344                           
  2345                           ;FRAME.c: 328:         message->data[0] = 0xFF;
  2346  000B1C  EE20 F008          	lfsr	2,8
  2347  000B20  5006               	movf	FRAME_DeviceReset@message,w,c
  2348  000B22  26D9               	addwf	fsr2l,f,c
  2349  000B24  5007               	movf	FRAME_DeviceReset@message+1,w,c
  2350  000B26  22DA               	addwfc	fsr2h,f,c
  2351  000B28  0EFF               	movlw	255
  2352  000B2A  6EDF               	movwf	indf2,c
  2353  000B2C  0012               	return		;funcret
  2354  000B2E                     __end_of_FRAME_DeviceReset:
  2355                           	opt callstack 0
  2356                           
  2357 ;; *************** function _FRAME_AxisStatus *****************
  2358 ;; Defined at:
  2359 ;;		line 227 in file "FRAME.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  message         2    5[COMRAM] PTR struct .
  2362 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  i               2    0        unsigned short 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;Total ram usage:        3 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_FRAME_HandleCanFrame
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text19
  2389  001318                     __ptext19:
  2390                           	opt callstack 0
  2391  001318                     _FRAME_AxisStatus:
  2392                           	opt callstack 25
  2393                           
  2394                           ;FRAME.c: 227: static void FRAME_AxisStatus(mID *message);FRAME.c: 228: {;FRAME.c: 229: 
      +                              WORD i;;FRAME.c: 231:     if(message->message_type == 0x02)
  2395                           
  2396                           ;incstack = 0
  2397  001318  EE20 F001          	lfsr	2,1
  2398  00131C  5006               	movf	FRAME_AxisStatus@message,w,c
  2399  00131E  26D9               	addwf	fsr2l,f,c
  2400  001320  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2401  001322  22DA               	addwfc	fsr2h,f,c
  2402  001324  0E02               	movlw	2
  2403  001326  18DE               	xorwf	postinc2,w,c
  2404  001328  A4D8               	btfss	status,2,c
  2405  00132A  0012               	return	
  2406                           
  2407                           ;FRAME.c: 232:     {;FRAME.c: 233:         message->data_length = 1;
  2408  00132C  EE20 F010          	lfsr	2,16
  2409  001330  5006               	movf	FRAME_AxisStatus@message,w,c
  2410  001332  26D9               	addwf	fsr2l,f,c
  2411  001334  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2412  001336  22DA               	addwfc	fsr2h,f,c
  2413  001338  0E01               	movlw	1
  2414  00133A  6EDF               	movwf	indf2,c
  2415                           
  2416                           ;FRAME.c: 244:         message->data[0] = 0xFF;
  2417  00133C  EE20 F008          	lfsr	2,8
  2418  001340  5006               	movf	FRAME_AxisStatus@message,w,c
  2419  001342  26D9               	addwf	fsr2l,f,c
  2420  001344  5007               	movf	FRAME_AxisStatus@message+1,w,c
  2421  001346  22DA               	addwfc	fsr2h,f,c
  2422  001348  0EFF               	movlw	255
  2423  00134A  6EDF               	movwf	indf2,c
  2424                           
  2425                           ;FRAME.c: 245:     }
  2426  00134C  0012               	return		;funcret
  2427  00134E                     __end_of_FRAME_AxisStatus:
  2428                           	opt callstack 0
  2429                           
  2430 ;; *************** function _FRAME_AveragingTimes *****************
  2431 ;; Defined at:
  2432 ;;		line 168 in file "FRAME.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  message         2    5[COMRAM] PTR struct .
  2435 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2450 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2451 ;;Total ram usage:        3 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    3
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_FRAME_HandleCanFrame
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text20
  2462  00134E                     __ptext20:
  2463                           	opt callstack 0
  2464  00134E                     _FRAME_AveragingTimes:
  2465                           	opt callstack 25
  2466                           
  2467                           ;FRAME.c: 168: static void FRAME_AveragingTimes(mID *message);FRAME.c: 169: {;FRAME.c: 1
      +                          70:     if(message->message_type == 0x02)
  2468                           
  2469                           ;incstack = 0
  2470  00134E  EE20 F001          	lfsr	2,1
  2471  001352  5006               	movf	FRAME_AveragingTimes@message,w,c
  2472  001354  26D9               	addwf	fsr2l,f,c
  2473  001356  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2474  001358  22DA               	addwfc	fsr2h,f,c
  2475  00135A  0E02               	movlw	2
  2476  00135C  18DE               	xorwf	postinc2,w,c
  2477  00135E  A4D8               	btfss	status,2,c
  2478  001360  0012               	return	
  2479                           
  2480                           ;FRAME.c: 171:     {;FRAME.c: 172:         message->data_length = 1;
  2481  001362  EE20 F010          	lfsr	2,16
  2482  001366  5006               	movf	FRAME_AveragingTimes@message,w,c
  2483  001368  26D9               	addwf	fsr2l,f,c
  2484  00136A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2485  00136C  22DA               	addwfc	fsr2h,f,c
  2486  00136E  0E01               	movlw	1
  2487  001370  6EDF               	movwf	indf2,c
  2488                           
  2489                           ;FRAME.c: 180:         message->data[0] = 0xFF;
  2490  001372  EE20 F008          	lfsr	2,8
  2491  001376  5006               	movf	FRAME_AveragingTimes@message,w,c
  2492  001378  26D9               	addwf	fsr2l,f,c
  2493  00137A  5007               	movf	FRAME_AveragingTimes@message+1,w,c
  2494  00137C  22DA               	addwfc	fsr2h,f,c
  2495  00137E  0EFF               	movlw	255
  2496  001380  6EDF               	movwf	indf2,c
  2497                           
  2498                           ;FRAME.c: 181:     }
  2499  001382  0012               	return		;funcret
  2500  001384                     __end_of_FRAME_AveragingTimes:
  2501                           	opt callstack 0
  2502                           
  2503 ;; *************** function _FRAME_AnalogValue *****************
  2504 ;; Defined at:
  2505 ;;		line 407 in file "FRAME.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  message         2    5[COMRAM] PTR struct .
  2508 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2509 ;;  set             2    7[COMRAM] unsigned short 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  i               2    0        unsigned short 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		None
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2525 ;;Total ram usage:        4 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    3
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_FRAME_HandleCanFrame
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text21
  2536  0015AA                     __ptext21:
  2537                           	opt callstack 0
  2538  0015AA                     _FRAME_AnalogValue:
  2539                           	opt callstack 25
  2540                           
  2541                           ;incstack = 0
  2542  0015AA  0012               	return		;funcret
  2543  0015AC                     __end_of_FRAME_AnalogValue:
  2544                           	opt callstack 0
  2545                           
  2546 ;; *************** function _FRAME_AdressOfNeighbors *****************
  2547 ;; Defined at:
  2548 ;;		line 451 in file "FRAME.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  message         2   11[COMRAM] PTR struct .
  2551 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2552 ;;  nrRamki         2   13[COMRAM] unsigned short 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  k               2   29[COMRAM] unsigned short 
  2555 ;;  i               2   31[COMRAM] unsigned short 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;Total ram usage:       22 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    5
  2572 ;; This function calls:
  2573 ;;		_LED_Clear
  2574 ;;		___wmul
  2575 ;; This function is called by:
  2576 ;;		_FRAME_HandleCanFrame
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text22
  2581  000060                     __ptext22:
  2582                           	opt callstack 0
  2583  000060                     _FRAME_AdressOfNeighbors:
  2584                           	opt callstack 23
  2585                           
  2586                           ;FRAME.c: 451: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          452: {;FRAME.c: 453:     WORD i;;FRAME.c: 457:     if(message->message_type == 0x02)
  2587                           
  2588                           ;incstack = 0
  2589  000060  EE20 F001          	lfsr	2,1
  2590  000064  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  2591  000066  26D9               	addwf	fsr2l,f,c
  2592  000068  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2593  00006A  22DA               	addwfc	fsr2h,f,c
  2594  00006C  0E02               	movlw	2
  2595  00006E  18DE               	xorwf	postinc2,w,c
  2596  000070  A4D8               	btfss	status,2,c
  2597  000072  D07F               	goto	l2818
  2598                           
  2599                           ;FRAME.c: 458:     {;FRAME.c: 460:         message->data_length = 8;
  2600  000074  EE20 F010          	lfsr	2,16
  2601  000078  500C               	movf	FRAME_AdressOfNeighbors@message,w,c
  2602  00007A  26D9               	addwf	fsr2l,f,c
  2603  00007C  500D               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  2604  00007E  22DA               	addwfc	fsr2h,f,c
  2605  000080  0E08               	movlw	8
  2606  000082  6EDF               	movwf	indf2,c
  2607                           
  2608                           ;FRAME.c: 461:         for(i=0; i<4; i++)
  2609  000084  0E00               	movlw	0
  2610  000086  6E21               	movwf	FRAME_AdressOfNeighbors@i+1,c
  2611  000088  0E00               	movlw	0
  2612  00008A  6E20               	movwf	FRAME_AdressOfNeighbors@i,c
  2613  00008C                     l2812:
  2614                           
  2615                           ;FRAME.c: 462:         {;FRAME.c: 463:             message->data[2*i] = (BYTE)(Dane->sas
      +                          iedzi[i+(4*nrRamki)].adres >> 8);
  2616  00008C  C020  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  2617  000090  C021  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  2618  000094  90D8               	bcf	status,0,c
  2619  000096  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2620  000098  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2621  00009A  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2622  00009E  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2623  0000A2  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  2624  0000A4  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2625  0000A6  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2626  0000A8  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2627  0000AA  0E08               	movlw	8
  2628  0000AC  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2629  0000AE  6ED9               	movwf	fsr2l,c
  2630  0000B0  0E00               	movlw	0
  2631  0000B2  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2632  0000B4  6EDA               	movwf	fsr2h,c
  2633  0000B6  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  2634  0000BA  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  2635  0000BE  90D8               	bcf	status,0,c
  2636  0000C0  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2637  0000C2  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2638  0000C4  90D8               	bcf	status,0,c
  2639  0000C6  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2640  0000C8  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2641  0000CA  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2642  0000CC  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2643  0000CE  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2644  0000D0  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2645  0000D2  90D8               	bcf	status,0,c
  2646  0000D4  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2647  0000D6  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2648  0000D8  90D8               	bcf	status,0,c
  2649  0000DA  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2650  0000DC  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2651  0000DE  0E0E               	movlw	14
  2652  0000E0  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2653  0000E2  6EE1               	movwf	fsr1l,c
  2654  0000E4  0E00               	movlw	0
  2655  0000E6  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2656  0000E8  6EE2               	movwf	fsr1h,c
  2657  0000EA  CFE6 F016          	movff	postinc1,??_FRAME_AdressOfNeighbors+6
  2658  0000EE  CFE5 F017          	movff	postdec1,??_FRAME_AdressOfNeighbors+7
  2659  0000F2  C017  F016         	movff	??_FRAME_AdressOfNeighbors+7,??_FRAME_AdressOfNeighbors+6
  2660  0000F6  6A17               	clrf	??_FRAME_AdressOfNeighbors+7,c
  2661  0000F8  5016               	movf	??_FRAME_AdressOfNeighbors+6,w,c
  2662  0000FA  6EDF               	movwf	indf2,c
  2663                           
  2664                           ;FRAME.c: 464:             message->data[(2*i)+1] = (BYTE)Dane->sasiedzi[i+(4*nrRamki)].
      +                          adres;
  2665  0000FC  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2666  000100  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2667  000104  90D8               	bcf	status,0,c
  2668  000106  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2669  000108  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2670  00010A  90D8               	bcf	status,0,c
  2671  00010C  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2672  00010E  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2673  000110  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2674  000112  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  2675  000114  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2676  000116  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  2677  000118  90D8               	bcf	status,0,c
  2678  00011A  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2679  00011C  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2680  00011E  90D8               	bcf	status,0,c
  2681  000120  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2682  000122  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2683  000124  0E0E               	movlw	14
  2684  000126  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  2685  000128  6ED9               	movwf	fsr2l,c
  2686  00012A  0E00               	movlw	0
  2687  00012C  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  2688  00012E  6EDA               	movwf	fsr2h,c
  2689  000130  C020  F012         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+2
  2690  000134  C021  F013         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+3
  2691  000138  90D8               	bcf	status,0,c
  2692  00013A  3612               	rlcf	??_FRAME_AdressOfNeighbors+2,f,c
  2693  00013C  3613               	rlcf	??_FRAME_AdressOfNeighbors+3,f,c
  2694  00013E  C00C  F014         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+4
  2695  000142  C00D  F015         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+5
  2696  000146  5012               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  2697  000148  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2698  00014A  5013               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  2699  00014C  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2700  00014E  0E09               	movlw	9
  2701  000150  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2702  000152  6EE1               	movwf	fsr1l,c
  2703  000154  0E00               	movlw	0
  2704  000156  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2705  000158  6EE2               	movwf	fsr1h,c
  2706  00015A  CFDF FFE7          	movff	indf2,indf1
  2707                           
  2708                           ;FRAME.c: 465:         }
  2709  00015E  4A20               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  2710  000160  2A21               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  2711  000162  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2712  000164  E105               	bnz	u1320
  2713  000166  0E04               	movlw	4
  2714  000168  5C20               	subwf	FRAME_AdressOfNeighbors@i,w,c
  2715  00016A  B0D8               	btfsc	status,0,c
  2716  00016C  0012               	return	
  2717  00016E  D78E               	goto	l2812
  2718  000170                     u1320:
  2719  000170  0012               	return	
  2720  000172                     l2818:
  2721                           
  2722                           ;FRAME.c: 469:     {;FRAME.c: 470:         for(i=0; i<4; i++)
  2723  000172  0E00               	movlw	0
  2724  000174  6E21               	movwf	FRAME_AdressOfNeighbors@i+1,c
  2725  000176  0E00               	movlw	0
  2726  000178  6E20               	movwf	FRAME_AdressOfNeighbors@i,c
  2727  00017A                     l2824:
  2728                           
  2729                           ;FRAME.c: 471:         {;FRAME.c: 472:             Dane->sasiedzi[i+(4*nrRamki)].adres =
      +                           ((WORD)message->data[2*i] << 8) |
  2730  00017A  C020  F010         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors
  2731  00017E  C021  F011         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+1
  2732  000182  90D8               	bcf	status,0,c
  2733  000184  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2734  000186  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2735  000188  C00C  F012         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+2
  2736  00018C  C00D  F013         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+3
  2737  000190  5010               	movf	??_FRAME_AdressOfNeighbors,w,c
  2738  000192  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2739  000194  5011               	movf	??_FRAME_AdressOfNeighbors+1,w,c
  2740  000196  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2741  000198  0E08               	movlw	8
  2742  00019A  2412               	addwf	??_FRAME_AdressOfNeighbors+2,w,c
  2743  00019C  6ED9               	movwf	fsr2l,c
  2744  00019E  0E00               	movlw	0
  2745  0001A0  2013               	addwfc	??_FRAME_AdressOfNeighbors+3,w,c
  2746  0001A2  6EDA               	movwf	fsr2h,c
  2747  0001A4  50DF               	movf	indf2,w,c
  2748  0001A6  6E14               	movwf	(??_FRAME_AdressOfNeighbors+4)& (0+255),c
  2749  0001A8  5014               	movf	??_FRAME_AdressOfNeighbors+4,w,c
  2750  0001AA  6E16               	movwf	(??_FRAME_AdressOfNeighbors+6)& (0+255),c
  2751  0001AC  6A15               	clrf	(??_FRAME_AdressOfNeighbors+5)& (0+255),c
  2752  0001AE  C020  F017         	movff	FRAME_AdressOfNeighbors@i,??_FRAME_AdressOfNeighbors+7
  2753  0001B2  C021  F018         	movff	FRAME_AdressOfNeighbors@i+1,??_FRAME_AdressOfNeighbors+8
  2754  0001B6  90D8               	bcf	status,0,c
  2755  0001B8  3617               	rlcf	??_FRAME_AdressOfNeighbors+7,f,c
  2756  0001BA  3618               	rlcf	??_FRAME_AdressOfNeighbors+8,f,c
  2757  0001BC  C00C  F019         	movff	FRAME_AdressOfNeighbors@message,??_FRAME_AdressOfNeighbors+9
  2758  0001C0  C00D  F01A         	movff	FRAME_AdressOfNeighbors@message+1,??_FRAME_AdressOfNeighbors+10
  2759  0001C4  5017               	movf	??_FRAME_AdressOfNeighbors+7,w,c
  2760  0001C6  2619               	addwf	??_FRAME_AdressOfNeighbors+9,f,c
  2761  0001C8  5018               	movf	??_FRAME_AdressOfNeighbors+8,w,c
  2762  0001CA  221A               	addwfc	??_FRAME_AdressOfNeighbors+10,f,c
  2763  0001CC  0E09               	movlw	9
  2764  0001CE  2419               	addwf	??_FRAME_AdressOfNeighbors+9,w,c
  2765  0001D0  6ED9               	movwf	fsr2l,c
  2766  0001D2  0E00               	movlw	0
  2767  0001D4  201A               	addwfc	??_FRAME_AdressOfNeighbors+10,w,c
  2768  0001D6  6EDA               	movwf	fsr2h,c
  2769  0001D8  50DF               	movf	indf2,w,c
  2770  0001DA  6E1B               	movwf	(??_FRAME_AdressOfNeighbors+11)& (0+255),c
  2771  0001DC  501B               	movf	??_FRAME_AdressOfNeighbors+11,w,c
  2772  0001DE  1215               	iorwf	??_FRAME_AdressOfNeighbors+5,f,c
  2773  0001E0  0E00               	movlw	0
  2774  0001E2  1216               	iorwf	??_FRAME_AdressOfNeighbors+6,f,c
  2775  0001E4  C00E  F01C         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+12
  2776  0001E8  C00F  F01D         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+13
  2777  0001EC  90D8               	bcf	status,0,c
  2778  0001EE  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2779  0001F0  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2780  0001F2  90D8               	bcf	status,0,c
  2781  0001F4  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2782  0001F6  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2783  0001F8  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2784  0001FA  261C               	addwf	??_FRAME_AdressOfNeighbors+12,f,c
  2785  0001FC  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2786  0001FE  221D               	addwfc	??_FRAME_AdressOfNeighbors+13,f,c
  2787  000200  90D8               	bcf	status,0,c
  2788  000202  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2789  000204  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2790  000206  90D8               	bcf	status,0,c
  2791  000208  361C               	rlcf	??_FRAME_AdressOfNeighbors+12,f,c
  2792  00020A  361D               	rlcf	??_FRAME_AdressOfNeighbors+13,f,c
  2793  00020C  0E0E               	movlw	14
  2794  00020E  241C               	addwf	??_FRAME_AdressOfNeighbors+12,w,c
  2795  000210  6ED9               	movwf	fsr2l,c
  2796  000212  0E00               	movlw	0
  2797  000214  201D               	addwfc	??_FRAME_AdressOfNeighbors+13,w,c
  2798  000216  6EDA               	movwf	fsr2h,c
  2799  000218  C015  FFDE         	movff	??_FRAME_AdressOfNeighbors+5,postinc2
  2800  00021C  C016  FFDD         	movff	??_FRAME_AdressOfNeighbors+6,postdec2
  2801                           
  2802                           ;FRAME.c: 476:             Dane->sasiedzi[i+(4*nrRamki)].pointerNaSasiada = &wartosciSas
      +                          iada[i+(4*nrRamki)];
  2803  000220  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2804  000224  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2805  000228  90D8               	bcf	status,0,c
  2806  00022A  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2807  00022C  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2808  00022E  90D8               	bcf	status,0,c
  2809  000230  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2810  000232  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2811  000234  C010  F006         	movff	??_FRAME_AdressOfNeighbors,___wmul@multiplier
  2812  000238  C011  F007         	movff	??_FRAME_AdressOfNeighbors+1,___wmul@multiplier+1
  2813  00023C  0E00               	movlw	0
  2814  00023E  6E09               	movwf	___wmul@multiplicand+1,c
  2815  000240  0E44               	movlw	68
  2816  000242  6E08               	movwf	___wmul@multiplicand,c
  2817  000244  EC1C  F00A         	call	___wmul	;wreg free
  2818  000248  0EC6               	movlw	low _wartosciSasiada
  2819  00024A  6E12               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  2820  00024C  0E00               	movlw	high _wartosciSasiada
  2821  00024E  6E13               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  2822  000250  5006               	movf	?___wmul,w,c
  2823  000252  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2824  000254  5007               	movf	?___wmul+1,w,c
  2825  000256  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2826  000258  C020  F006         	movff	FRAME_AdressOfNeighbors@i,___wmul@multiplier
  2827  00025C  C021  F007         	movff	FRAME_AdressOfNeighbors@i+1,___wmul@multiplier+1
  2828  000260  0E00               	movlw	0
  2829  000262  6E09               	movwf	___wmul@multiplicand+1,c
  2830  000264  0E44               	movlw	68
  2831  000266  6E08               	movwf	___wmul@multiplicand,c
  2832  000268  EC1C  F00A         	call	___wmul	;wreg free
  2833  00026C  5006               	movf	?___wmul,w,c
  2834  00026E  2612               	addwf	??_FRAME_AdressOfNeighbors+2,f,c
  2835  000270  5007               	movf	?___wmul+1,w,c
  2836  000272  2213               	addwfc	??_FRAME_AdressOfNeighbors+3,f,c
  2837  000274  C00E  F014         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors+4
  2838  000278  C00F  F015         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+5
  2839  00027C  90D8               	bcf	status,0,c
  2840  00027E  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2841  000280  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2842  000282  90D8               	bcf	status,0,c
  2843  000284  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2844  000286  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2845  000288  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2846  00028A  2614               	addwf	??_FRAME_AdressOfNeighbors+4,f,c
  2847  00028C  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2848  00028E  2215               	addwfc	??_FRAME_AdressOfNeighbors+5,f,c
  2849  000290  90D8               	bcf	status,0,c
  2850  000292  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2851  000294  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2852  000296  90D8               	bcf	status,0,c
  2853  000298  3614               	rlcf	??_FRAME_AdressOfNeighbors+4,f,c
  2854  00029A  3615               	rlcf	??_FRAME_AdressOfNeighbors+5,f,c
  2855  00029C  0E10               	movlw	16
  2856  00029E  2414               	addwf	??_FRAME_AdressOfNeighbors+4,w,c
  2857  0002A0  6ED9               	movwf	fsr2l,c
  2858  0002A2  0E00               	movlw	0
  2859  0002A4  2015               	addwfc	??_FRAME_AdressOfNeighbors+5,w,c
  2860  0002A6  6EDA               	movwf	fsr2h,c
  2861  0002A8  C012  FFDE         	movff	??_FRAME_AdressOfNeighbors+2,postinc2
  2862  0002AC  C013  FFDD         	movff	??_FRAME_AdressOfNeighbors+3,postdec2
  2863                           
  2864                           ;FRAME.c: 477:             if(Dane->sasiedzi[i+(4*nrRamki)].adres==16){
  2865  0002B0  C00E  F010         	movff	FRAME_AdressOfNeighbors@nrRamki,??_FRAME_AdressOfNeighbors
  2866  0002B4  C00F  F011         	movff	FRAME_AdressOfNeighbors@nrRamki+1,??_FRAME_AdressOfNeighbors+1
  2867  0002B8  90D8               	bcf	status,0,c
  2868  0002BA  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2869  0002BC  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2870  0002BE  90D8               	bcf	status,0,c
  2871  0002C0  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2872  0002C2  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2873  0002C4  5020               	movf	FRAME_AdressOfNeighbors@i,w,c
  2874  0002C6  2610               	addwf	??_FRAME_AdressOfNeighbors,f,c
  2875  0002C8  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2876  0002CA  2211               	addwfc	??_FRAME_AdressOfNeighbors+1,f,c
  2877  0002CC  90D8               	bcf	status,0,c
  2878  0002CE  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2879  0002D0  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2880  0002D2  90D8               	bcf	status,0,c
  2881  0002D4  3610               	rlcf	??_FRAME_AdressOfNeighbors,f,c
  2882  0002D6  3611               	rlcf	??_FRAME_AdressOfNeighbors+1,f,c
  2883  0002D8  0E0E               	movlw	14
  2884  0002DA  2410               	addwf	??_FRAME_AdressOfNeighbors,w,c
  2885  0002DC  6ED9               	movwf	fsr2l,c
  2886  0002DE  0E00               	movlw	0
  2887  0002E0  2011               	addwfc	??_FRAME_AdressOfNeighbors+1,w,c
  2888  0002E2  6EDA               	movwf	fsr2h,c
  2889  0002E4  0E10               	movlw	16
  2890  0002E6  18DE               	xorwf	postinc2,w,c
  2891  0002E8  10DE               	iorwf	postinc2,w,c
  2892  0002EA  A4D8               	btfss	status,2,c
  2893  0002EC  D00E               	goto	u1340
  2894                           
  2895                           ;FRAME.c: 478:                 WORD k;;FRAME.c: 479:                 for(k=0;k<100;k++)
  2896  0002EE  0E00               	movlw	0
  2897  0002F0  6E1F               	movwf	FRAME_AdressOfNeighbors@k+1,c
  2898  0002F2  0E00               	movlw	0
  2899  0002F4  6E1E               	movwf	FRAME_AdressOfNeighbors@k,c
  2900  0002F6                     l2836:
  2901                           
  2902                           ;FRAME.c: 480:                 {;FRAME.c: 481:                     LED_Clear();
  2903  0002F6  EC50  F00A         	call	_LED_Clear	;wreg free
  2904                           
  2905                           ;FRAME.c: 482:                 }
  2906  0002FA  4A1E               	infsnz	FRAME_AdressOfNeighbors@k,f,c
  2907  0002FC  2A1F               	incf	FRAME_AdressOfNeighbors@k+1,f,c
  2908  0002FE  501F               	movf	FRAME_AdressOfNeighbors@k+1,w,c
  2909  000300  E104               	bnz	u1340
  2910  000302  0E64               	movlw	100
  2911  000304  5C1E               	subwf	FRAME_AdressOfNeighbors@k,w,c
  2912  000306  A0D8               	btfss	status,0,c
  2913  000308  D7F6               	goto	l2836
  2914  00030A                     u1340:
  2915                           
  2916                           ;FRAME.c: 485:         }
  2917  00030A  4A20               	infsnz	FRAME_AdressOfNeighbors@i,f,c
  2918  00030C  2A21               	incf	FRAME_AdressOfNeighbors@i+1,f,c
  2919  00030E  5021               	movf	FRAME_AdressOfNeighbors@i+1,w,c
  2920  000310  E105               	bnz	u1350
  2921  000312  0E04               	movlw	4
  2922  000314  5C20               	subwf	FRAME_AdressOfNeighbors@i,w,c
  2923  000316  B0D8               	btfsc	status,0,c
  2924  000318  0012               	return	
  2925  00031A  D72F               	goto	l2824
  2926  00031C                     u1350:
  2927  00031C  0012               	return		;funcret
  2928  00031E                     __end_of_FRAME_AdressOfNeighbors:
  2929                           	opt callstack 0
  2930                           
  2931 ;; *************** function ___wmul *****************
  2932 ;; Defined at:
  2933 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  multiplier      2    5[COMRAM] unsigned int 
  2936 ;;  multiplicand    2    7[COMRAM] unsigned int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  product         2    9[COMRAM] unsigned int 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  2    5[COMRAM] unsigned int 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, prodl, prodh
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;Total ram usage:        6 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    3
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_IsInNeighbors
  2959 ;;		_FRAME_AdressOfNeighbors
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text23
  2964  001438                     __ptext23:
  2965                           	opt callstack 0
  2966  001438                     ___wmul:
  2967                           	opt callstack 24
  2968                           
  2969                           ;incstack = 0
  2970  001438  5006               	movf	___wmul@multiplier,w,c
  2971  00143A  0208               	mulwf	___wmul@multiplicand,c
  2972  00143C  CFF3 F00A          	movff	prodl,___wmul@product
  2973  001440  CFF4 F00B          	movff	prodh,___wmul@product+1
  2974  001444  5006               	movf	___wmul@multiplier,w,c
  2975  001446  0209               	mulwf	___wmul@multiplicand+1,c
  2976  001448  50F3               	movf	prodl,w,c
  2977  00144A  260B               	addwf	___wmul@product+1,f,c
  2978  00144C  5007               	movf	___wmul@multiplier+1,w,c
  2979  00144E  0208               	mulwf	___wmul@multiplicand,c
  2980  001450  50F3               	movf	prodl,w,c
  2981  001452  260B               	addwf	___wmul@product+1,f,c
  2982  001454  C00A  F006         	movff	___wmul@product,?___wmul
  2983  001458  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  2984  00145C  0012               	return		;funcret
  2985  00145E                     __end_of___wmul:
  2986                           	opt callstack 0
  2987                           
  2988 ;; *************** function _LED_Clear *****************
  2989 ;; Defined at:
  2990 ;;		line 45 in file "LED.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2  286[None  ] unsigned int 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    4
  3011 ;; This function calls:
  3012 ;;		_LED_Control
  3013 ;; This function is called by:
  3014 ;;		_FRAME_AdressOfNeighbors
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text24
  3019  0014A0                     __ptext24:
  3020                           	opt callstack 0
  3021  0014A0                     _LED_Clear:
  3022                           	opt callstack 23
  3023                           
  3024                           ;LED.c: 47:     LED_Control(RED,0b0000000000);
  3025                           
  3026                           ;incstack = 0
  3027  0014A0  0E00               	movlw	0
  3028  0014A2  6E07               	movwf	LED_Control@diode+1,c
  3029  0014A4  0E00               	movlw	0
  3030  0014A6  6E06               	movwf	LED_Control@diode,c
  3031  0014A8  0E00               	movlw	0
  3032  0014AA  EC7D  F004         	call	_LED_Control
  3033                           
  3034                           ;LED.c: 48:     LED_Control(GREEN,0b1010101010);
  3035  0014AE  0E02               	movlw	2
  3036  0014B0  6E07               	movwf	LED_Control@diode+1,c
  3037  0014B2  0EAA               	movlw	170
  3038  0014B4  6E06               	movwf	LED_Control@diode,c
  3039  0014B6  0E01               	movlw	1
  3040  0014B8  EC7D  F004         	call	_LED_Control
  3041  0014BC  0012               	return		;funcret
  3042  0014BE                     __end_of_LED_Clear:
  3043                           	opt callstack 0
  3044                           
  3045 ;; *************** function _FRAME_AccelerometerStatus *****************
  3046 ;; Defined at:
  3047 ;;		line 91 in file "FRAME.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  message         2    7[COMRAM] PTR struct .
  3050 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3066 ;;Total ram usage:        3 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    4
  3069 ;; This function calls:
  3070 ;;		_MOCK_Klikniecie_Spadek
  3071 ;;		_MOCK_PrzyspieszenieX
  3072 ;;		_MOCK_PrzyspieszenieY
  3073 ;;		_MOCK_PrzyspieszenieZ
  3074 ;; This function is called by:
  3075 ;;		_FRAME_HandleCanFrame
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text25
  3080  000EFC                     __ptext25:
  3081                           	opt callstack 0
  3082  000EFC                     _FRAME_AccelerometerStatus:
  3083                           	opt callstack 24
  3084                           
  3085                           ;FRAME.c: 91: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 92: {;FRAME.c
      +                          : 93:     if(message->message_type == 0x02)
  3086                           
  3087                           ;incstack = 0
  3088  000EFC  EE20 F001          	lfsr	2,1
  3089  000F00  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3090  000F02  26D9               	addwf	fsr2l,f,c
  3091  000F04  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3092  000F06  22DA               	addwfc	fsr2h,f,c
  3093  000F08  0E02               	movlw	2
  3094  000F0A  18DE               	xorwf	postinc2,w,c
  3095  000F0C  A4D8               	btfss	status,2,c
  3096  000F0E  0012               	return	
  3097                           
  3098                           ;FRAME.c: 94:     {;FRAME.c: 95:         message->data_length = 4;
  3099  000F10  EE20 F010          	lfsr	2,16
  3100  000F14  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3101  000F16  26D9               	addwf	fsr2l,f,c
  3102  000F18  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3103  000F1A  22DA               	addwfc	fsr2h,f,c
  3104  000F1C  0E04               	movlw	4
  3105  000F1E  6EDF               	movwf	indf2,c
  3106                           
  3107                           ;FRAME.c: 99:         message->data[0] = MOCK_PrzyspieszenieX();
  3108  000F20  EE20 F008          	lfsr	2,8
  3109  000F24  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3110  000F26  26D9               	addwf	fsr2l,f,c
  3111  000F28  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3112  000F2A  22DA               	addwfc	fsr2h,f,c
  3113  000F2C  ECA9  F00A         	call	_MOCK_PrzyspieszenieX	;wreg free
  3114  000F30  5006               	movf	?_MOCK_PrzyspieszenieX,w,c
  3115  000F32  6EDF               	movwf	indf2,c
  3116                           
  3117                           ;FRAME.c: 100:         message->data[1] = MOCK_PrzyspieszenieY();
  3118  000F34  EE20 F009          	lfsr	2,9
  3119  000F38  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3120  000F3A  26D9               	addwf	fsr2l,f,c
  3121  000F3C  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3122  000F3E  22DA               	addwfc	fsr2h,f,c
  3123  000F40  ECA4  F00A         	call	_MOCK_PrzyspieszenieY	;wreg free
  3124  000F44  5006               	movf	?_MOCK_PrzyspieszenieY,w,c
  3125  000F46  6EDF               	movwf	indf2,c
  3126                           
  3127                           ;FRAME.c: 101:         message->data[2] = MOCK_PrzyspieszenieZ();
  3128  000F48  EE20 F00A          	lfsr	2,10
  3129  000F4C  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3130  000F4E  26D9               	addwf	fsr2l,f,c
  3131  000F50  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3132  000F52  22DA               	addwfc	fsr2h,f,c
  3133  000F54  EC9F  F00A         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3134  000F58  5006               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3135  000F5A  6EDF               	movwf	indf2,c
  3136                           
  3137                           ;FRAME.c: 102:         message->data[3] = MOCK_Klikniecie_Spadek();
  3138  000F5C  EE20 F00B          	lfsr	2,11
  3139  000F60  5008               	movf	FRAME_AccelerometerStatus@message,w,c
  3140  000F62  26D9               	addwf	fsr2l,f,c
  3141  000F64  5009               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3142  000F66  22DA               	addwfc	fsr2h,f,c
  3143  000F68  ECAE  F00A         	call	_MOCK_Klikniecie_Spadek	;wreg free
  3144  000F6C  5006               	movf	?_MOCK_Klikniecie_Spadek,w,c
  3145  000F6E  6EDF               	movwf	indf2,c
  3146                           
  3147                           ;FRAME.c: 103:     }
  3148  000F70  0012               	return		;funcret
  3149  000F72                     __end_of_FRAME_AccelerometerStatus:
  3150                           	opt callstack 0
  3151                           
  3152 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  3153 ;; Defined at:
  3154 ;;		line 72 in file "MOC_Funct.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2    5[COMRAM] unsigned int 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;Total ram usage:        2 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    3
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_FRAME_AccelerometerStatus
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text26
  3183  00153E                     __ptext26:
  3184                           	opt callstack 0
  3185  00153E                     _MOCK_PrzyspieszenieZ:
  3186                           	opt callstack 24
  3187                           
  3188                           ;MOC_Funct.c: 74:     return 0xFE;
  3189                           
  3190                           ;incstack = 0
  3191  00153E  0E00               	movlw	0
  3192  001540  6E07               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  3193  001542  0EFE               	movlw	254
  3194  001544  6E06               	movwf	?_MOCK_PrzyspieszenieZ,c
  3195  001546  0012               	return		;funcret
  3196  001548                     __end_of_MOCK_PrzyspieszenieZ:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _MOCK_PrzyspieszenieY *****************
  3200 ;; Defined at:
  3201 ;;		line 68 in file "MOC_Funct.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2    5[COMRAM] unsigned int 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;Total ram usage:        2 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    3
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_FRAME_AccelerometerStatus
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text27
  3230  001548                     __ptext27:
  3231                           	opt callstack 0
  3232  001548                     _MOCK_PrzyspieszenieY:
  3233                           	opt callstack 24
  3234                           
  3235                           ;MOC_Funct.c: 70:     return 0xFE;
  3236                           
  3237                           ;incstack = 0
  3238  001548  0E00               	movlw	0
  3239  00154A  6E07               	movwf	?_MOCK_PrzyspieszenieY+1,c
  3240  00154C  0EFE               	movlw	254
  3241  00154E  6E06               	movwf	?_MOCK_PrzyspieszenieY,c
  3242  001550  0012               	return		;funcret
  3243  001552                     __end_of_MOCK_PrzyspieszenieY:
  3244                           	opt callstack 0
  3245                           
  3246 ;; *************** function _MOCK_PrzyspieszenieX *****************
  3247 ;; Defined at:
  3248 ;;		line 63 in file "MOC_Funct.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2    5[COMRAM] unsigned int 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;Total ram usage:        2 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    3
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_FRAME_AccelerometerStatus
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text28
  3277  001552                     __ptext28:
  3278                           	opt callstack 0
  3279  001552                     _MOCK_PrzyspieszenieX:
  3280                           	opt callstack 24
  3281                           
  3282                           ;MOC_Funct.c: 65:     return 0xFE;
  3283                           
  3284                           ;incstack = 0
  3285  001552  0E00               	movlw	0
  3286  001554  6E07               	movwf	?_MOCK_PrzyspieszenieX+1,c
  3287  001556  0EFE               	movlw	254
  3288  001558  6E06               	movwf	?_MOCK_PrzyspieszenieX,c
  3289  00155A  0012               	return		;funcret
  3290  00155C                     __end_of_MOCK_PrzyspieszenieX:
  3291                           	opt callstack 0
  3292                           
  3293 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  3294 ;; Defined at:
  3295 ;;		line 76 in file "MOC_Funct.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  2    5[COMRAM] unsigned int 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;Total ram usage:        2 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    3
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_FRAME_AccelerometerStatus
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text29
  3324  00155C                     __ptext29:
  3325                           	opt callstack 0
  3326  00155C                     _MOCK_Klikniecie_Spadek:
  3327                           	opt callstack 24
  3328                           
  3329                           ;MOC_Funct.c: 78:     return 0b00000000;
  3330                           
  3331                           ;incstack = 0
  3332  00155C  0E00               	movlw	0
  3333  00155E  6E07               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  3334  001560  0E00               	movlw	0
  3335  001562  6E06               	movwf	?_MOCK_Klikniecie_Spadek,c
  3336  001564  0012               	return		;funcret
  3337  001566                     __end_of_MOCK_Klikniecie_Spadek:
  3338                           	opt callstack 0
  3339                           
  3340 ;; *************** function _CAN_SendFrame *****************
  3341 ;; Defined at:
  3342 ;;		line 205 in file "CAN.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  message         2   10[COMRAM] PTR struct .
  3345 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;Total ram usage:        5 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    4
  3364 ;; This function calls:
  3365 ;;		_CAN_MoveBuffIntoFrame
  3366 ;; This function is called by:
  3367 ;;		_FRAME_HandleCanFrame
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text30
  3372  00078C                     __ptext30:
  3373                           	opt callstack 0
  3374  00078C                     _CAN_SendFrame:
  3375                           	opt callstack 24
  3376                           
  3377                           ;CAN.c: 210:     {;CAN.c: 211:         ECANCON = 0x83;
  3378                           
  3379                           ;incstack = 0
  3380                           ;CAN.c: 205: void CAN_SendFrame(mID * message);CAN.c: 206: {;CAN.c: 209:     for(;;)
  3381  00078C  0E83               	movlw	131
  3382  00078E  6E77               	movwf	3959,c	;volatile
  3383                           
  3384                           ;CAN.c: 212:         if(!RXB0CONbits.FILHIT3)
  3385  000790  A660               	btfss	3936,3,c	;volatile
  3386  000792  D00A               	goto	l207
  3387                           
  3388                           ;CAN.c: 217:         ECANCON = 0x84;
  3389  000794  0E84               	movlw	132
  3390  000796  6E77               	movwf	3959,c	;volatile
  3391                           
  3392                           ;CAN.c: 218:         if(!RXB0CONbits.FILHIT3)
  3393  000798  A660               	btfss	3936,3,c	;volatile
  3394  00079A  D006               	goto	l207
  3395                           
  3396                           ;CAN.c: 223:         ECANCON = 0x85;
  3397  00079C  0E85               	movlw	133
  3398  00079E  6E77               	movwf	3959,c	;volatile
  3399                           
  3400                           ;CAN.c: 224:         if(!RXB0CONbits.FILHIT3)
  3401  0007A0  A660               	btfss	3936,3,c	;volatile
  3402  0007A2  D002               	goto	l207
  3403  0007A4  D7F3               	goto	_CAN_SendFrame
  3404  0007A6                     l208:
  3405  0007A6  00FF               	reset		;# 
  3406  0007A8                     l207:
  3407                           
  3408                           ;CAN.c: 231:     while(COMSTATbits.TXWARN)
  3409  0007A8  B474               	btfsc	3956,2,c	;volatile
  3410  0007AA  D7FD               	goto	l208
  3411                           
  3412                           ;CAN.c: 235:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  3413  0007AC  0E00               	movlw	0
  3414  0007AE  6E43               	movwf	_DetectorLedRadar+2,c
  3415                           
  3416                           ;CAN.c: 236:     RXB0EIDL = message->id.v[0];
  3417  0007B0  EE20 F004          	lfsr	2,4
  3418  0007B4  500B               	movf	CAN_SendFrame@message,w,c
  3419  0007B6  26D9               	addwf	fsr2l,f,c
  3420  0007B8  500C               	movf	CAN_SendFrame@message+1,w,c
  3421  0007BA  22DA               	addwfc	fsr2h,f,c
  3422  0007BC  50DF               	movf	indf2,w,c
  3423  0007BE  6E64               	movwf	3940,c	;volatile
  3424                           
  3425                           ;CAN.c: 237:     RXB0EIDH = message->id.v[1];
  3426  0007C0  EE20 F005          	lfsr	2,5
  3427  0007C4  500B               	movf	CAN_SendFrame@message,w,c
  3428  0007C6  26D9               	addwf	fsr2l,f,c
  3429  0007C8  500C               	movf	CAN_SendFrame@message+1,w,c
  3430  0007CA  22DA               	addwfc	fsr2h,f,c
  3431  0007CC  50DF               	movf	indf2,w,c
  3432  0007CE  6E63               	movwf	3939,c	;volatile
  3433                           
  3434                           ;CAN.c: 238:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  3435  0007D0  EE20 F006          	lfsr	2,6
  3436  0007D4  500B               	movf	CAN_SendFrame@message,w,c
  3437  0007D6  26D9               	addwf	fsr2l,f,c
  3438  0007D8  500C               	movf	CAN_SendFrame@message+1,w,c
  3439  0007DA  22DA               	addwfc	fsr2h,f,c
  3440  0007DC  50DF               	movf	indf2,w,c
  3441  0007DE  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3442  0007E0  0E03               	movlw	3
  3443  0007E2  160D               	andwf	??_CAN_SendFrame,f,c
  3444  0007E4  EE20 F006          	lfsr	2,6
  3445  0007E8  500B               	movf	CAN_SendFrame@message,w,c
  3446  0007EA  26D9               	addwf	fsr2l,f,c
  3447  0007EC  500C               	movf	CAN_SendFrame@message+1,w,c
  3448  0007EE  22DA               	addwfc	fsr2h,f,c
  3449  0007F0  50DF               	movf	indf2,w,c
  3450  0007F2  0BFC               	andlw	252
  3451  0007F4  0D08               	mullw	8
  3452  0007F6  50F3               	movf	prodl,w,c
  3453  0007F8  100D               	iorwf	??_CAN_SendFrame,w,c
  3454  0007FA  6E62               	movwf	3938,c	;volatile
  3455                           
  3456                           ;CAN.c: 239:     RXB0SIDLbits.EXID = 1;
  3457  0007FC  8662               	bsf	3938,3,c	;volatile
  3458                           
  3459                           ;CAN.c: 240:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  3460  0007FE  EE20 F006          	lfsr	2,6
  3461  000802  500B               	movf	CAN_SendFrame@message,w,c
  3462  000804  26D9               	addwf	fsr2l,f,c
  3463  000806  500C               	movf	CAN_SendFrame@message+1,w,c
  3464  000808  22DA               	addwfc	fsr2h,f,c
  3465  00080A  CFDE F00D          	movff	postinc2,??_CAN_SendFrame
  3466  00080E  CFDD F00E          	movff	postdec2,??_CAN_SendFrame+1
  3467  000812  0E05               	movlw	5
  3468  000814  6E0F               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  3469  000816                     u1135:
  3470  000816  90D8               	bcf	status,0,c
  3471  000818  320E               	rrcf	??_CAN_SendFrame+1,f,c
  3472  00081A  320D               	rrcf	??_CAN_SendFrame,f,c
  3473  00081C  2E0F               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  3474  00081E  D7FB               	goto	u1135
  3475  000820  500D               	movf	??_CAN_SendFrame,w,c
  3476  000822  6E61               	movwf	3937,c	;volatile
  3477                           
  3478                           ;CAN.c: 242:     RXB0DLC = 0;
  3479  000824  0E00               	movlw	0
  3480  000826  6E65               	movwf	3941,c	;volatile
  3481                           
  3482                           ;CAN.c: 244:     if(message->message_type==0x02)
  3483  000828  EE20 F001          	lfsr	2,1
  3484  00082C  500B               	movf	CAN_SendFrame@message,w,c
  3485  00082E  26D9               	addwf	fsr2l,f,c
  3486  000830  500C               	movf	CAN_SendFrame@message+1,w,c
  3487  000832  22DA               	addwfc	fsr2h,f,c
  3488  000834  0E02               	movlw	2
  3489  000836  18DE               	xorwf	postinc2,w,c
  3490  000838  A4D8               	btfss	status,2,c
  3491  00083A  D002               	goto	l2670
  3492                           
  3493                           ;CAN.c: 245:     {;CAN.c: 246:         RXB0DLCbits.RXRTR = 1;
  3494  00083C  8C65               	bsf	3941,6,c	;volatile
  3495                           
  3496                           ;CAN.c: 247:     }
  3497  00083E  D05A               	goto	l2674
  3498  000840                     l2670:
  3499                           
  3500                           ;CAN.c: 249:     {;CAN.c: 250:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  3501  000840  EE20 F010          	lfsr	2,16
  3502  000844  500B               	movf	CAN_SendFrame@message,w,c
  3503  000846  26D9               	addwf	fsr2l,f,c
  3504  000848  500C               	movf	CAN_SendFrame@message+1,w,c
  3505  00084A  22DA               	addwfc	fsr2h,f,c
  3506  00084C  50DF               	movf	indf2,w,c
  3507  00084E  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3508  000850  0E0F               	movlw	15
  3509  000852  160D               	andwf	??_CAN_SendFrame,f,c
  3510  000854  5065               	movf	3941,w,c	;volatile
  3511  000856  180D               	xorwf	??_CAN_SendFrame,w,c
  3512  000858  0BFE               	andlw	-2
  3513  00085A  180D               	xorwf	??_CAN_SendFrame,w,c
  3514  00085C  6E65               	movwf	3941,c	;volatile
  3515                           
  3516                           ;CAN.c: 251:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  3517  00085E  EE20 F010          	lfsr	2,16
  3518  000862  500B               	movf	CAN_SendFrame@message,w,c
  3519  000864  26D9               	addwf	fsr2l,f,c
  3520  000866  500C               	movf	CAN_SendFrame@message+1,w,c
  3521  000868  22DA               	addwfc	fsr2h,f,c
  3522  00086A  50DF               	movf	indf2,w,c
  3523  00086C  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3524  00086E  90D8               	bcf	status,0,c
  3525  000870  320D               	rrcf	??_CAN_SendFrame,f,c
  3526  000872  0E07               	movlw	7
  3527  000874  160D               	andwf	??_CAN_SendFrame,f,c
  3528  000876  460D               	rlncf	??_CAN_SendFrame,f,c
  3529  000878  5065               	movf	3941,w,c	;volatile
  3530  00087A  180D               	xorwf	??_CAN_SendFrame,w,c
  3531  00087C  0BFD               	andlw	-3
  3532  00087E  180D               	xorwf	??_CAN_SendFrame,w,c
  3533  000880  6E65               	movwf	3941,c	;volatile
  3534                           
  3535                           ;CAN.c: 252:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  3536  000882  EE20 F010          	lfsr	2,16
  3537  000886  500B               	movf	CAN_SendFrame@message,w,c
  3538  000888  26D9               	addwf	fsr2l,f,c
  3539  00088A  500C               	movf	CAN_SendFrame@message+1,w,c
  3540  00088C  22DA               	addwfc	fsr2h,f,c
  3541  00088E  50DF               	movf	indf2,w,c
  3542  000890  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3543  000892  90D8               	bcf	status,0,c
  3544  000894  320D               	rrcf	??_CAN_SendFrame,f,c
  3545  000896  90D8               	bcf	status,0,c
  3546  000898  320D               	rrcf	??_CAN_SendFrame,f,c
  3547  00089A  0E03               	movlw	3
  3548  00089C  160D               	andwf	??_CAN_SendFrame,f,c
  3549  00089E  460D               	rlncf	??_CAN_SendFrame,f,c
  3550  0008A0  460D               	rlncf	??_CAN_SendFrame,f,c
  3551  0008A2  5065               	movf	3941,w,c	;volatile
  3552  0008A4  180D               	xorwf	??_CAN_SendFrame,w,c
  3553  0008A6  0BFB               	andlw	-5
  3554  0008A8  180D               	xorwf	??_CAN_SendFrame,w,c
  3555  0008AA  6E65               	movwf	3941,c	;volatile
  3556                           
  3557                           ;CAN.c: 253:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  3558  0008AC  EE20 F010          	lfsr	2,16
  3559  0008B0  500B               	movf	CAN_SendFrame@message,w,c
  3560  0008B2  26D9               	addwf	fsr2l,f,c
  3561  0008B4  500C               	movf	CAN_SendFrame@message+1,w,c
  3562  0008B6  22DA               	addwfc	fsr2h,f,c
  3563  0008B8  50DF               	movf	indf2,w,c
  3564  0008BA  6E0D               	movwf	??_CAN_SendFrame& (0+255),c
  3565  0008BC  90D8               	bcf	status,0,c
  3566  0008BE  320D               	rrcf	??_CAN_SendFrame,f,c
  3567  0008C0  90D8               	bcf	status,0,c
  3568  0008C2  320D               	rrcf	??_CAN_SendFrame,f,c
  3569  0008C4  90D8               	bcf	status,0,c
  3570  0008C6  320D               	rrcf	??_CAN_SendFrame,f,c
  3571  0008C8  0E01               	movlw	1
  3572  0008CA  160D               	andwf	??_CAN_SendFrame,f,c
  3573  0008CC  460D               	rlncf	??_CAN_SendFrame,f,c
  3574  0008CE  460D               	rlncf	??_CAN_SendFrame,f,c
  3575  0008D0  460D               	rlncf	??_CAN_SendFrame,f,c
  3576  0008D2  5065               	movf	3941,w,c	;volatile
  3577  0008D4  180D               	xorwf	??_CAN_SendFrame,w,c
  3578  0008D6  0BF7               	andlw	-9
  3579  0008D8  180D               	xorwf	??_CAN_SendFrame,w,c
  3580  0008DA  6E65               	movwf	3941,c	;volatile
  3581                           
  3582                           ;CAN.c: 255:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  3583  0008DC  0E66               	movlw	102
  3584  0008DE  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  3585  0008E0  0E0F               	movlw	15
  3586  0008E2  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  3587  0008E4  0E08               	movlw	8
  3588  0008E6  240B               	addwf	CAN_SendFrame@message,w,c
  3589  0008E8  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  3590  0008EA  0E00               	movlw	0
  3591  0008EC  200C               	addwfc	CAN_SendFrame@message+1,w,c
  3592  0008EE  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  3593  0008F0  ECF3  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  3594  0008F4                     l2674:
  3595                           
  3596                           ;CAN.c: 258:     RXB0CONbits.FILHIT3 = 1;
  3597  0008F4  8660               	bsf	3936,3,c	;volatile
  3598                           
  3599                           ;CAN.c: 260:     DetectorLedRadar.Flags.ramkaTx = 1;
  3600  0008F6  8841               	bsf	_DetectorLedRadar,4,c
  3601  0008F8  0012               	return		;funcret
  3602  0008FA                     __end_of_CAN_SendFrame:
  3603                           	opt callstack 0
  3604                           
  3605 ;; *************** function _CAN_GenID *****************
  3606 ;; Defined at:
  3607 ;;		line 406 in file "CAN.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  message         2    5[COMRAM] PTR struct .
  3610 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3611 ;;  frameID         1    7[COMRAM] unsigned char 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3623 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;Total ram usage:        7 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    3
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_FRAME_HandleCanFrame
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text31
  3638  000CBA                     __ptext31:
  3639                           	opt callstack 0
  3640  000CBA                     _CAN_GenID:
  3641                           	opt callstack 25
  3642                           
  3643                           ;CAN.c: 406: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 407: {;CAN.c: 409:     m
      +                          essage->frame_type = 0x03;
  3644                           
  3645                           ;incstack = 0
  3646  000CBA  EE20 F002          	lfsr	2,2
  3647  000CBE  5006               	movf	CAN_GenID@message,w,c
  3648  000CC0  26D9               	addwf	fsr2l,f,c
  3649  000CC2  5007               	movf	CAN_GenID@message+1,w,c
  3650  000CC4  22DA               	addwfc	fsr2h,f,c
  3651  000CC6  0E03               	movlw	3
  3652  000CC8  6EDF               	movwf	indf2,c
  3653                           
  3654                           ;CAN.c: 410:     message->message_type = 0x01;
  3655  000CCA  EE20 F001          	lfsr	2,1
  3656  000CCE  5006               	movf	CAN_GenID@message,w,c
  3657  000CD0  26D9               	addwf	fsr2l,f,c
  3658  000CD2  5007               	movf	CAN_GenID@message+1,w,c
  3659  000CD4  22DA               	addwfc	fsr2h,f,c
  3660  000CD6  0E01               	movlw	1
  3661  000CD8  6EDF               	movwf	indf2,c
  3662                           
  3663                           ;CAN.c: 411:     message->id.w[1] = (WORD)frameID * (WORD)4;
  3664  000CDA  5008               	movf	CAN_GenID@frameID,w,c
  3665  000CDC  6E09               	movwf	??_CAN_GenID& (0+255),c
  3666  000CDE  6A0A               	clrf	(??_CAN_GenID+1)& (0+255),c
  3667  000CE0  90D8               	bcf	status,0,c
  3668  000CE2  3609               	rlcf	??_CAN_GenID,f,c
  3669  000CE4  360A               	rlcf	??_CAN_GenID+1,f,c
  3670  000CE6  90D8               	bcf	status,0,c
  3671  000CE8  3609               	rlcf	??_CAN_GenID,f,c
  3672  000CEA  360A               	rlcf	??_CAN_GenID+1,f,c
  3673  000CEC  EE20 F006          	lfsr	2,6
  3674  000CF0  5006               	movf	CAN_GenID@message,w,c
  3675  000CF2  26D9               	addwf	fsr2l,f,c
  3676  000CF4  5007               	movf	CAN_GenID@message+1,w,c
  3677  000CF6  22DA               	addwfc	fsr2h,f,c
  3678  000CF8  C009  FFDE         	movff	??_CAN_GenID,postinc2
  3679  000CFC  C00A  FFDD         	movff	??_CAN_GenID+1,postdec2
  3680                           
  3681                           ;CAN.c: 412:     message->id.w[0] = DaneCan.adresCAN + 0x012c;
  3682  000D00  0E2C               	movlw	44
  3683  000D02  6E09               	movwf	??_CAN_GenID& (0+255),c
  3684  000D04  0E01               	movlw	1
  3685  000D06  6E0A               	movwf	(??_CAN_GenID+1)& (0+255),c
  3686  000D08  EE20  F03F         	lfsr	2,_DaneCan+2
  3687  000D0C  CFDE F00B          	movff	postinc2,??_CAN_GenID+2
  3688  000D10  CFDD F00C          	movff	postdec2,??_CAN_GenID+3
  3689  000D14  5009               	movf	??_CAN_GenID,w,c
  3690  000D16  260B               	addwf	??_CAN_GenID+2,f,c
  3691  000D18  500A               	movf	??_CAN_GenID+1,w,c
  3692  000D1A  220C               	addwfc	??_CAN_GenID+3,f,c
  3693  000D1C  EE20 F004          	lfsr	2,4
  3694  000D20  5006               	movf	CAN_GenID@message,w,c
  3695  000D22  26D9               	addwf	fsr2l,f,c
  3696  000D24  5007               	movf	CAN_GenID@message+1,w,c
  3697  000D26  22DA               	addwfc	fsr2h,f,c
  3698  000D28  C00B  FFDE         	movff	??_CAN_GenID+2,postinc2
  3699  000D2C  C00C  FFDD         	movff	??_CAN_GenID+3,postdec2
  3700                           
  3701                           ;CAN.c: 413:     message->id.v[2] |= 0x01;
  3702  000D30  EE20 F006          	lfsr	2,6
  3703  000D34  5006               	movf	CAN_GenID@message,w,c
  3704  000D36  26D9               	addwf	fsr2l,f,c
  3705  000D38  5007               	movf	CAN_GenID@message+1,w,c
  3706  000D3A  22DA               	addwfc	fsr2h,f,c
  3707  000D3C  0E00               	movlw	0
  3708  000D3E  80DB               	bsf	plusw2,0,c
  3709                           
  3710                           ;CAN.c: 415:     message ->id.bits.b16 = 0;
  3711  000D40  EE20 F006          	lfsr	2,6
  3712  000D44  5006               	movf	CAN_GenID@message,w,c
  3713  000D46  26D9               	addwf	fsr2l,f,c
  3714  000D48  5007               	movf	CAN_GenID@message+1,w,c
  3715  000D4A  22DA               	addwfc	fsr2h,f,c
  3716  000D4C  90DF               	bcf	indf2,0,c
  3717                           
  3718                           ;CAN.c: 416:     message ->id.bits.b17 = 0;
  3719  000D4E  EE20 F006          	lfsr	2,6
  3720  000D52  5006               	movf	CAN_GenID@message,w,c
  3721  000D54  26D9               	addwf	fsr2l,f,c
  3722  000D56  5007               	movf	CAN_GenID@message+1,w,c
  3723  000D58  22DA               	addwfc	fsr2h,f,c
  3724  000D5A  92DF               	bcf	indf2,1,c
  3725  000D5C  0012               	return		;funcret
  3726  000D5E                     __end_of_CAN_GenID:
  3727                           	opt callstack 0
  3728                           
  3729 ;; *************** function _CAN_TakeFrame *****************
  3730 ;; Defined at:
  3731 ;;		line 269 in file "CAN.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  message         2   13[COMRAM] PTR struct .
  3734 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  op_id           2   17[COMRAM] unsigned int 
  3737 ;;  k               1   20[COMRAM] unsigned char 
  3738 ;;  tempCON         1   19[COMRAM] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      enum E10433
  3741 ;; Registers used:
  3742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;Total ram usage:        8 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    4
  3755 ;; This function calls:
  3756 ;;		_CAN_MoveBuffIntoFrame
  3757 ;;		___awdiv
  3758 ;; This function is called by:
  3759 ;;		_TRM_DataTransmition
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text32
  3764  00031E                     __ptext32:
  3765                           	opt callstack 0
  3766  00031E                     _CAN_TakeFrame:
  3767                           	opt callstack 25
  3768                           
  3769                           ;CAN.c: 269: BOOL CAN_TakeFrame(mID * message);CAN.c: 270: {;CAN.c: 271:     BYTE k, tem
      +                          pCON;;CAN.c: 273:     k = CANCON&0x0F;
  3770                           
  3771                           ;incstack = 0
  3772  00031E  506F               	movf	3951,w,c	;volatile
  3773  000320  0B0F               	andlw	15
  3774  000322  6E15               	movwf	CAN_TakeFrame@k,c
  3775                           
  3776                           ;CAN.c: 275:     ECANCON = 0x90 | k;
  3777  000324  5015               	movf	CAN_TakeFrame@k,w,c
  3778  000326  0990               	iorlw	144
  3779  000328  6E77               	movwf	3959,c	;volatile
  3780                           
  3781                           ;CAN.c: 278:     switch(k)
  3782  00032A  D018               	goto	l2912
  3783  00032C                     l216:
  3784                           
  3785                           ;CAN.c: 281:             tempCON = RXB0CON;
  3786  00032C  CF60 F014          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  3787                           
  3788                           ;CAN.c: 282:             break;
  3789  000330  D035               	goto	l217
  3790  000332                     l218:
  3791                           
  3792                           ;CAN.c: 284:             tempCON = RXB1CON;
  3793  000332  CF50 F014          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  3794                           
  3795                           ;CAN.c: 285:             break;
  3796  000336  D032               	goto	l217
  3797  000338                     l219:
  3798                           
  3799                           ;CAN.c: 287:             tempCON = B0CON;
  3800  000338  CE20 F014          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  3801                           
  3802                           ;CAN.c: 288:             break;
  3803  00033C  D02F               	goto	l217
  3804  00033E                     l220:
  3805                           
  3806                           ;CAN.c: 290:             tempCON = B1CON;
  3807  00033E  CE30 F014          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  3808                           
  3809                           ;CAN.c: 291:             break;
  3810  000342  D02C               	goto	l217
  3811  000344                     l221:
  3812                           
  3813                           ;CAN.c: 293:             tempCON = B2CON;
  3814  000344  CE40 F014          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  3815                           
  3816                           ;CAN.c: 294:             break;
  3817  000348  D029               	goto	l217
  3818  00034A                     l222:
  3819                           
  3820                           ;CAN.c: 296:             tempCON = B3CON;
  3821  00034A  CE50 F014          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  3822                           
  3823                           ;CAN.c: 297:             break;
  3824  00034E  D026               	goto	l217
  3825  000350                     l223:
  3826                           
  3827                           ;CAN.c: 299:             tempCON = B4CON;
  3828  000350  CE60 F014          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  3829                           
  3830                           ;CAN.c: 300:             break;
  3831  000354  D023               	goto	l217
  3832  000356                     l224:
  3833                           
  3834                           ;CAN.c: 302:             tempCON = B5CON;
  3835  000356  CE70 F014          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  3836                           
  3837                           ;CAN.c: 303:             break;
  3838  00035A  D020               	goto	l217
  3839  00035C                     l2912:
  3840  00035C  5015               	movf	CAN_TakeFrame@k,w,c
  3841  00035E  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3842  000360  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3843                           
  3844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3845                           ; Switch size 1, requested type "simple"
  3846                           ; Number of cases is 1, Range of values is 0 to 0
  3847                           ; switch strategies available:
  3848                           ; Name         Instructions Cycles
  3849                           ; simple_byte            4     3 (average)
  3850                           ;	Chosen strategy is simple_byte
  3851  000362  5011               	movf	??_CAN_TakeFrame+1,w,c
  3852  000364  0A00               	xorlw	0	; case 0
  3853  000366  A4D8               	btfss	status,2,c
  3854  000368  D019               	goto	l217
  3855                           
  3856                           ; Switch size 1, requested type "simple"
  3857                           ; Number of cases is 8, Range of values is 0 to 7
  3858                           ; switch strategies available:
  3859                           ; Name         Instructions Cycles
  3860                           ; simple_byte           25    13 (average)
  3861                           ;	Chosen strategy is simple_byte
  3862  00036A  5010               	movf	??_CAN_TakeFrame,w,c
  3863  00036C  0A00               	xorlw	0	; case 0
  3864  00036E  B4D8               	btfsc	status,2,c
  3865  000370  D7DD               	goto	l216
  3866  000372  0A01               	xorlw	1	; case 1
  3867  000374  B4D8               	btfsc	status,2,c
  3868  000376  D7DD               	goto	l218
  3869  000378  0A03               	xorlw	3	; case 2
  3870  00037A  B4D8               	btfsc	status,2,c
  3871  00037C  D7DD               	goto	l219
  3872  00037E  0A01               	xorlw	1	; case 3
  3873  000380  B4D8               	btfsc	status,2,c
  3874  000382  D7DD               	goto	l220
  3875  000384  0A07               	xorlw	7	; case 4
  3876  000386  B4D8               	btfsc	status,2,c
  3877  000388  D7DD               	goto	l221
  3878  00038A  0A01               	xorlw	1	; case 5
  3879  00038C  B4D8               	btfsc	status,2,c
  3880  00038E  D7DD               	goto	l222
  3881  000390  0A03               	xorlw	3	; case 6
  3882  000392  B4D8               	btfsc	status,2,c
  3883  000394  D7DD               	goto	l223
  3884  000396  0A01               	xorlw	1	; case 7
  3885  000398  B4D8               	btfsc	status,2,c
  3886  00039A  D7DD               	goto	l224
  3887  00039C                     l217:
  3888                           
  3889                           ;CAN.c: 307:     if((tempCON & 0x80) > 0)
  3890  00039C  AE14               	btfss	CAN_TakeFrame@tempCON,7,c
  3891  00039E  D0A9               	goto	l2950
  3892                           
  3893                           ;CAN.c: 308:     {;CAN.c: 309:         message->buffer = RXB0CON & 0x1F;
  3894  0003A0  EE20 F003          	lfsr	2,3
  3895  0003A4  500E               	movf	CAN_TakeFrame@message,w,c
  3896  0003A6  26D9               	addwf	fsr2l,f,c
  3897  0003A8  500F               	movf	CAN_TakeFrame@message+1,w,c
  3898  0003AA  22DA               	addwfc	fsr2h,f,c
  3899  0003AC  5060               	movf	3936,w,c	;volatile
  3900  0003AE  0B1F               	andlw	31
  3901  0003B0  6EDF               	movwf	indf2,c
  3902                           
  3903                           ;CAN.c: 310:         message->id.v[0] = RXB0EIDL;
  3904  0003B2  EE20 F004          	lfsr	2,4
  3905  0003B6  500E               	movf	CAN_TakeFrame@message,w,c
  3906  0003B8  26D9               	addwf	fsr2l,f,c
  3907  0003BA  500F               	movf	CAN_TakeFrame@message+1,w,c
  3908  0003BC  22DA               	addwfc	fsr2h,f,c
  3909  0003BE  CF64 FFDF          	movff	3940,indf2	;volatile
  3910                           
  3911                           ;CAN.c: 311:         message->id.v[1] = RXB0EIDH;
  3912  0003C2  EE20 F005          	lfsr	2,5
  3913  0003C6  500E               	movf	CAN_TakeFrame@message,w,c
  3914  0003C8  26D9               	addwf	fsr2l,f,c
  3915  0003CA  500F               	movf	CAN_TakeFrame@message+1,w,c
  3916  0003CC  22DA               	addwfc	fsr2h,f,c
  3917  0003CE  CF63 FFDF          	movff	3939,indf2	;volatile
  3918                           
  3919                           ;CAN.c: 312:         UINT op_id = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  3920  0003D2  CF62 F006          	movff	3938,___awdiv@dividend	;volatile
  3921  0003D6  6A07               	clrf	___awdiv@dividend+1,c
  3922  0003D8  0E00               	movlw	0
  3923  0003DA  6E09               	movwf	___awdiv@divisor+1,c
  3924  0003DC  0E08               	movlw	8
  3925  0003DE  6E08               	movwf	___awdiv@divisor,c
  3926  0003E0  ECFF  F006         	call	___awdiv	;wreg free
  3927  0003E4  CF62 F010          	movff	3938,??_CAN_TakeFrame	;volatile
  3928  0003E8  0E03               	movlw	3
  3929  0003EA  1610               	andwf	??_CAN_TakeFrame,f,c
  3930  0003EC  5010               	movf	??_CAN_TakeFrame,w,c
  3931  0003EE  1006               	iorwf	?___awdiv,w,c
  3932  0003F0  6E12               	movwf	CAN_TakeFrame@op_id,c
  3933  0003F2  5007               	movf	?___awdiv+1,w,c
  3934  0003F4  6E13               	movwf	CAN_TakeFrame@op_id+1,c
  3935                           
  3936                           ;CAN.c: 313:         message->id.v[2] = op_id;
  3937  0003F6  EE20 F006          	lfsr	2,6
  3938  0003FA  500E               	movf	CAN_TakeFrame@message,w,c
  3939  0003FC  26D9               	addwf	fsr2l,f,c
  3940  0003FE  500F               	movf	CAN_TakeFrame@message+1,w,c
  3941  000400  22DA               	addwfc	fsr2h,f,c
  3942  000402  C012  FFDF         	movff	CAN_TakeFrame@op_id,indf2
  3943                           
  3944                           ;CAN.c: 315:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  3945  000406  5061               	movf	3937,w,c	;volatile
  3946  000408  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  3947  00040A  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  3948  00040C  0E05               	movlw	5
  3949  00040E                     u1455:
  3950  00040E  90D8               	bcf	status,0,c
  3951  000410  3610               	rlcf	??_CAN_TakeFrame,f,c
  3952  000412  3611               	rlcf	??_CAN_TakeFrame+1,f,c
  3953  000414  2EE8               	decfsz	wreg,f,c
  3954  000416  D7FB               	goto	u1455
  3955  000418  EE20 F006          	lfsr	2,6
  3956  00041C  500E               	movf	CAN_TakeFrame@message,w,c
  3957  00041E  26D9               	addwf	fsr2l,f,c
  3958  000420  500F               	movf	CAN_TakeFrame@message+1,w,c
  3959  000422  22DA               	addwfc	fsr2h,f,c
  3960  000424  5010               	movf	??_CAN_TakeFrame,w,c
  3961  000426  12DE               	iorwf	postinc2,f,c
  3962  000428  5011               	movf	??_CAN_TakeFrame+1,w,c
  3963  00042A  12DD               	iorwf	postdec2,f,c
  3964                           
  3965                           ;CAN.c: 316:         message->frame_type=0x03;
  3966  00042C  EE20 F002          	lfsr	2,2
  3967  000430  500E               	movf	CAN_TakeFrame@message,w,c
  3968  000432  26D9               	addwf	fsr2l,f,c
  3969  000434  500F               	movf	CAN_TakeFrame@message+1,w,c
  3970  000436  22DA               	addwfc	fsr2h,f,c
  3971  000438  0E03               	movlw	3
  3972  00043A  6EDF               	movwf	indf2,c
  3973                           
  3974                           ;CAN.c: 320:         if(RXB0DLCbits.RXRTR == 0)
  3975  00043C  BC65               	btfsc	3941,6,c	;volatile
  3976  00043E  D068               	goto	l2956
  3977                           
  3978                           ;CAN.c: 321:         {;CAN.c: 322:             message->message_type = 0x01;
  3979  000440  EE20 F001          	lfsr	2,1
  3980  000444  500E               	movf	CAN_TakeFrame@message,w,c
  3981  000446  26D9               	addwf	fsr2l,f,c
  3982  000448  500F               	movf	CAN_TakeFrame@message+1,w,c
  3983  00044A  22DA               	addwfc	fsr2h,f,c
  3984  00044C  0E01               	movlw	1
  3985  00044E  6EDF               	movwf	indf2,c
  3986                           
  3987                           ;CAN.c: 323:             message->data_length= RXB0DLC & 0x0F;
  3988  000450  EE20 F010          	lfsr	2,16
  3989  000454  500E               	movf	CAN_TakeFrame@message,w,c
  3990  000456  26D9               	addwf	fsr2l,f,c
  3991  000458  500F               	movf	CAN_TakeFrame@message+1,w,c
  3992  00045A  22DA               	addwfc	fsr2h,f,c
  3993  00045C  5065               	movf	3941,w,c	;volatile
  3994  00045E  0B0F               	andlw	15
  3995  000460  6EDF               	movwf	indf2,c
  3996                           
  3997                           ;CAN.c: 324:             if(message->data_length > 8)
  3998  000462  EE20 F010          	lfsr	2,16
  3999  000466  500E               	movf	CAN_TakeFrame@message,w,c
  4000  000468  26D9               	addwf	fsr2l,f,c
  4001  00046A  500F               	movf	CAN_TakeFrame@message+1,w,c
  4002  00046C  22DA               	addwfc	fsr2h,f,c
  4003  00046E  0E08               	movlw	8
  4004  000470  64DF               	cpfsgt	indf2,c
  4005  000472  D041               	goto	l2954
  4006  000474  D01E               	goto	l2948
  4007  000476                     l2930:
  4008                           
  4009                           ;CAN.c: 330:                         RXB0CON = 0;
  4010  000476  0E00               	movlw	0
  4011  000478  6E60               	movwf	3936,c	;volatile
  4012                           
  4013                           ;CAN.c: 331:                         break;
  4014  00047A  D03B               	goto	l2950
  4015  00047C                     l2932:
  4016                           
  4017                           ;CAN.c: 333:                         RXB1CON = 0;
  4018  00047C  0E00               	movlw	0
  4019  00047E  010F               	movlb	15	; () banked
  4020  000480  D00E               	goto	L1
  4021  000482                     l2934:
  4022                           
  4023                           ;CAN.c: 336:                         B0CON = 0;
  4024  000482  0E00               	movlw	0
  4025  000484  010E               	movlb	14	; () banked
  4026  000486  6F20               	movwf	32,b	;volatile
  4027                           
  4028                           ;CAN.c: 337:                         break;
  4029  000488  D034               	goto	l2950
  4030  00048A                     l2936:
  4031                           
  4032                           ;CAN.c: 339:                         B1CON = 0;
  4033  00048A  0E00               	movlw	0
  4034  00048C  010E               	movlb	14	; () banked
  4035  00048E  6F30               	movwf	48,b	;volatile
  4036                           
  4037                           ;CAN.c: 340:                         break;
  4038  000490  D030               	goto	l2950
  4039  000492                     l2938:
  4040                           
  4041                           ;CAN.c: 342:                         B2CON = 0;
  4042  000492  0E00               	movlw	0
  4043  000494  010E               	movlb	14	; () banked
  4044  000496  6F40               	movwf	64,b	;volatile
  4045                           
  4046                           ;CAN.c: 343:                         break;
  4047  000498  D02C               	goto	l2950
  4048  00049A                     l2940:
  4049                           
  4050                           ;CAN.c: 345:                         B3CON = 0;
  4051  00049A  0E00               	movlw	0
  4052  00049C  010E               	movlb	14	; () banked
  4053  00049E                     L1:
  4054  00049E  6F50               	movwf	80,b	;volatile
  4055                           
  4056                           ;CAN.c: 346:                         break;
  4057  0004A0  D028               	goto	l2950
  4058  0004A2                     l2942:
  4059                           
  4060                           ;CAN.c: 348:                         B4CON = 0;
  4061  0004A2  0E00               	movlw	0
  4062  0004A4  010E               	movlb	14	; () banked
  4063  0004A6  6F60               	movwf	96,b	;volatile
  4064                           
  4065                           ;CAN.c: 349:                         break;
  4066  0004A8  D024               	goto	l2950
  4067  0004AA                     l2944:
  4068                           
  4069                           ;CAN.c: 351:                         B5CON = 0;
  4070  0004AA  0E00               	movlw	0
  4071  0004AC  010E               	movlb	14	; () banked
  4072  0004AE  6F70               	movwf	112,b	;volatile
  4073                           
  4074                           ;CAN.c: 352:                         break;
  4075  0004B0  D020               	goto	l2950
  4076  0004B2                     l2948:
  4077  0004B2  5015               	movf	CAN_TakeFrame@k,w,c
  4078  0004B4  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4079  0004B6  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4080                           
  4081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4082                           ; Switch size 1, requested type "simple"
  4083                           ; Number of cases is 1, Range of values is 0 to 0
  4084                           ; switch strategies available:
  4085                           ; Name         Instructions Cycles
  4086                           ; simple_byte            4     3 (average)
  4087                           ;	Chosen strategy is simple_byte
  4088  0004B8  5011               	movf	??_CAN_TakeFrame+1,w,c
  4089  0004BA  0A00               	xorlw	0	; case 0
  4090  0004BC  A4D8               	btfss	status,2,c
  4091  0004BE  D019               	goto	l2950
  4092                           
  4093                           ; Switch size 1, requested type "simple"
  4094                           ; Number of cases is 8, Range of values is 0 to 7
  4095                           ; switch strategies available:
  4096                           ; Name         Instructions Cycles
  4097                           ; simple_byte           25    13 (average)
  4098                           ;	Chosen strategy is simple_byte
  4099  0004C0  5010               	movf	??_CAN_TakeFrame,w,c
  4100  0004C2  0A00               	xorlw	0	; case 0
  4101  0004C4  B4D8               	btfsc	status,2,c
  4102  0004C6  D7D7               	goto	l2930
  4103  0004C8  0A01               	xorlw	1	; case 1
  4104  0004CA  B4D8               	btfsc	status,2,c
  4105  0004CC  D7D7               	goto	l2932
  4106  0004CE  0A03               	xorlw	3	; case 2
  4107  0004D0  B4D8               	btfsc	status,2,c
  4108  0004D2  D7D7               	goto	l2934
  4109  0004D4  0A01               	xorlw	1	; case 3
  4110  0004D6  B4D8               	btfsc	status,2,c
  4111  0004D8  D7D8               	goto	l2936
  4112  0004DA  0A07               	xorlw	7	; case 4
  4113  0004DC  B4D8               	btfsc	status,2,c
  4114  0004DE  D7D9               	goto	l2938
  4115  0004E0  0A01               	xorlw	1	; case 5
  4116  0004E2  B4D8               	btfsc	status,2,c
  4117  0004E4  D7DA               	goto	l2940
  4118  0004E6  0A03               	xorlw	3	; case 6
  4119  0004E8  B4D8               	btfsc	status,2,c
  4120  0004EA  D7DB               	goto	l2942
  4121  0004EC  0A01               	xorlw	1	; case 7
  4122  0004EE  B4D8               	btfsc	status,2,c
  4123  0004F0  D7DC               	goto	l2944
  4124  0004F2                     l2950:
  4125                           
  4126                           ;CAN.c: 354:                 return FALSE;
  4127  0004F2  0E00               	movlw	0
  4128  0004F4  0012               	return	
  4129  0004F6                     l2954:
  4130                           
  4131                           ;CAN.c: 356:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4132  0004F6  0E08               	movlw	8
  4133  0004F8  240E               	addwf	CAN_TakeFrame@message,w,c
  4134  0004FA  6E06               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4135  0004FC  0E00               	movlw	0
  4136  0004FE  200F               	addwfc	CAN_TakeFrame@message+1,w,c
  4137  000500  6E07               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4138  000502  0E66               	movlw	102
  4139  000504  6E08               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4140  000506  0E0F               	movlw	15
  4141  000508  6E09               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4142  00050A  ECF3  F009         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4143                           
  4144                           ;CAN.c: 357:         }
  4145  00050E  D027               	goto	l2976
  4146  000510                     l2956:
  4147                           
  4148                           ;CAN.c: 360:         {;CAN.c: 361:             message->message_type=0x02;
  4149  000510  EE20 F001          	lfsr	2,1
  4150  000514  500E               	movf	CAN_TakeFrame@message,w,c
  4151  000516  26D9               	addwf	fsr2l,f,c
  4152  000518  500F               	movf	CAN_TakeFrame@message+1,w,c
  4153  00051A  22DA               	addwfc	fsr2h,f,c
  4154  00051C  0E02               	movlw	2
  4155  00051E  6EDF               	movwf	indf2,c
  4156  000520  D01E               	goto	l2976
  4157  000522                     l2958:
  4158                           
  4159                           ;CAN.c: 367:                 RXB0CON = 0;
  4160  000522  0E00               	movlw	0
  4161  000524  6E60               	movwf	3936,c	;volatile
  4162                           
  4163                           ;CAN.c: 368:                 break;
  4164  000526  D03B               	goto	l2978
  4165  000528                     l2960:
  4166                           
  4167                           ;CAN.c: 370:                 RXB1CON = 0;
  4168  000528  0E00               	movlw	0
  4169  00052A  010F               	movlb	15	; () banked
  4170  00052C  D00E               	goto	L2
  4171  00052E                     l2962:
  4172                           
  4173                           ;CAN.c: 373:                 B0CON = 0;
  4174  00052E  0E00               	movlw	0
  4175  000530  010E               	movlb	14	; () banked
  4176  000532  6F20               	movwf	32,b	;volatile
  4177                           
  4178                           ;CAN.c: 374:                 break;
  4179  000534  D034               	goto	l2978
  4180  000536                     l2964:
  4181                           
  4182                           ;CAN.c: 376:                 B1CON = 0;
  4183  000536  0E00               	movlw	0
  4184  000538  010E               	movlb	14	; () banked
  4185  00053A  6F30               	movwf	48,b	;volatile
  4186                           
  4187                           ;CAN.c: 377:                 break;
  4188  00053C  D030               	goto	l2978
  4189  00053E                     l2966:
  4190                           
  4191                           ;CAN.c: 379:                 B2CON = 0;
  4192  00053E  0E00               	movlw	0
  4193  000540  010E               	movlb	14	; () banked
  4194  000542  6F40               	movwf	64,b	;volatile
  4195                           
  4196                           ;CAN.c: 380:                 break;
  4197  000544  D02C               	goto	l2978
  4198  000546                     l2968:
  4199                           
  4200                           ;CAN.c: 382:                 B3CON = 0;
  4201  000546  0E00               	movlw	0
  4202  000548  010E               	movlb	14	; () banked
  4203  00054A                     L2:
  4204  00054A  6F50               	movwf	80,b	;volatile
  4205                           
  4206                           ;CAN.c: 383:                 break;
  4207  00054C  D028               	goto	l2978
  4208  00054E                     l2970:
  4209                           
  4210                           ;CAN.c: 385:                 B4CON = 0;
  4211  00054E  0E00               	movlw	0
  4212  000550  010E               	movlb	14	; () banked
  4213  000552  6F60               	movwf	96,b	;volatile
  4214                           
  4215                           ;CAN.c: 386:                 break;
  4216  000554  D024               	goto	l2978
  4217  000556                     l2972:
  4218                           
  4219                           ;CAN.c: 388:                 B5CON = 0;
  4220  000556  0E00               	movlw	0
  4221  000558  010E               	movlb	14	; () banked
  4222  00055A  6F70               	movwf	112,b	;volatile
  4223                           
  4224                           ;CAN.c: 389:                 break;
  4225  00055C  D020               	goto	l2978
  4226  00055E                     l2976:
  4227  00055E  5015               	movf	CAN_TakeFrame@k,w,c
  4228  000560  6E10               	movwf	??_CAN_TakeFrame& (0+255),c
  4229  000562  6A11               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4230                           
  4231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4232                           ; Switch size 1, requested type "simple"
  4233                           ; Number of cases is 1, Range of values is 0 to 0
  4234                           ; switch strategies available:
  4235                           ; Name         Instructions Cycles
  4236                           ; simple_byte            4     3 (average)
  4237                           ;	Chosen strategy is simple_byte
  4238  000564  5011               	movf	??_CAN_TakeFrame+1,w,c
  4239  000566  0A00               	xorlw	0	; case 0
  4240  000568  A4D8               	btfss	status,2,c
  4241  00056A  D019               	goto	l2978
  4242                           
  4243                           ; Switch size 1, requested type "simple"
  4244                           ; Number of cases is 8, Range of values is 0 to 7
  4245                           ; switch strategies available:
  4246                           ; Name         Instructions Cycles
  4247                           ; simple_byte           25    13 (average)
  4248                           ;	Chosen strategy is simple_byte
  4249  00056C  5010               	movf	??_CAN_TakeFrame,w,c
  4250  00056E  0A00               	xorlw	0	; case 0
  4251  000570  B4D8               	btfsc	status,2,c
  4252  000572  D7D7               	goto	l2958
  4253  000574  0A01               	xorlw	1	; case 1
  4254  000576  B4D8               	btfsc	status,2,c
  4255  000578  D7D7               	goto	l2960
  4256  00057A  0A03               	xorlw	3	; case 2
  4257  00057C  B4D8               	btfsc	status,2,c
  4258  00057E  D7D7               	goto	l2962
  4259  000580  0A01               	xorlw	1	; case 3
  4260  000582  B4D8               	btfsc	status,2,c
  4261  000584  D7D8               	goto	l2964
  4262  000586  0A07               	xorlw	7	; case 4
  4263  000588  B4D8               	btfsc	status,2,c
  4264  00058A  D7D9               	goto	l2966
  4265  00058C  0A01               	xorlw	1	; case 5
  4266  00058E  B4D8               	btfsc	status,2,c
  4267  000590  D7DA               	goto	l2968
  4268  000592  0A03               	xorlw	3	; case 6
  4269  000594  B4D8               	btfsc	status,2,c
  4270  000596  D7DB               	goto	l2970
  4271  000598  0A01               	xorlw	1	; case 7
  4272  00059A  B4D8               	btfsc	status,2,c
  4273  00059C  D7DC               	goto	l2972
  4274  00059E                     l2978:
  4275                           
  4276                           ;CAN.c: 391:         return TRUE;
  4277  00059E  0E01               	movlw	1
  4278  0005A0  0012               	return		;funcret
  4279  0005A2                     __end_of_CAN_TakeFrame:
  4280                           	opt callstack 0
  4281                           
  4282 ;; *************** function ___awdiv *****************
  4283 ;; Defined at:
  4284 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  dividend        2    5[COMRAM] int 
  4287 ;;  divisor         2    7[COMRAM] int 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  quotient        2   11[COMRAM] int 
  4290 ;;  sign            1   10[COMRAM] unsigned char 
  4291 ;;  counter         1    9[COMRAM] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  2    5[COMRAM] int 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;Total ram usage:        8 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    3
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_CAN_TakeFrame
  4312 ;;		_FRAME_HandleCanFrame
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text33
  4317  000DFE                     __ptext33:
  4318                           	opt callstack 0
  4319  000DFE                     ___awdiv:
  4320                           	opt callstack 25
  4321                           
  4322                           ;incstack = 0
  4323  000DFE  0E00               	movlw	0
  4324  000E00  6E0B               	movwf	___awdiv@sign,c
  4325  000E02  AE09               	btfss	___awdiv@divisor+1,7,c
  4326  000E04  D006               	goto	l2854
  4327  000E06  6C08               	negf	___awdiv@divisor,c
  4328  000E08  1E09               	comf	___awdiv@divisor+1,f,c
  4329  000E0A  B0D8               	btfsc	status,0,c
  4330  000E0C  2A09               	incf	___awdiv@divisor+1,f,c
  4331  000E0E  0E01               	movlw	1
  4332  000E10  6E0B               	movwf	___awdiv@sign,c
  4333  000E12                     l2854:
  4334  000E12  AE07               	btfss	___awdiv@dividend+1,7,c
  4335  000E14  D006               	goto	l2860
  4336  000E16  6C06               	negf	___awdiv@dividend,c
  4337  000E18  1E07               	comf	___awdiv@dividend+1,f,c
  4338  000E1A  B0D8               	btfsc	status,0,c
  4339  000E1C  2A07               	incf	___awdiv@dividend+1,f,c
  4340  000E1E  0E01               	movlw	1
  4341  000E20  1A0B               	xorwf	___awdiv@sign,f,c
  4342  000E22                     l2860:
  4343  000E22  0E00               	movlw	0
  4344  000E24  6E0D               	movwf	___awdiv@quotient+1,c
  4345  000E26  0E00               	movlw	0
  4346  000E28  6E0C               	movwf	___awdiv@quotient,c
  4347  000E2A  5008               	movf	___awdiv@divisor,w,c
  4348  000E2C  1009               	iorwf	___awdiv@divisor+1,w,c
  4349  000E2E  B4D8               	btfsc	status,2,c
  4350  000E30  D01C               	goto	l2882
  4351  000E32  0E01               	movlw	1
  4352  000E34  6E0A               	movwf	___awdiv@counter,c
  4353  000E36  D004               	goto	l2868
  4354  000E38                     l2866:
  4355  000E38  90D8               	bcf	status,0,c
  4356  000E3A  3608               	rlcf	___awdiv@divisor,f,c
  4357  000E3C  3609               	rlcf	___awdiv@divisor+1,f,c
  4358  000E3E  2A0A               	incf	___awdiv@counter,f,c
  4359  000E40                     l2868:
  4360  000E40  AE09               	btfss	___awdiv@divisor+1,7,c
  4361  000E42  D7FA               	goto	l2866
  4362  000E44                     u1390:
  4363  000E44  90D8               	bcf	status,0,c
  4364  000E46  360C               	rlcf	___awdiv@quotient,f,c
  4365  000E48  360D               	rlcf	___awdiv@quotient+1,f,c
  4366  000E4A  5008               	movf	___awdiv@divisor,w,c
  4367  000E4C  5C06               	subwf	___awdiv@dividend,w,c
  4368  000E4E  5009               	movf	___awdiv@divisor+1,w,c
  4369  000E50  5807               	subwfb	___awdiv@dividend+1,w,c
  4370  000E52  A0D8               	btfss	status,0,c
  4371  000E54  D005               	goto	l2878
  4372  000E56  5008               	movf	___awdiv@divisor,w,c
  4373  000E58  5E06               	subwf	___awdiv@dividend,f,c
  4374  000E5A  5009               	movf	___awdiv@divisor+1,w,c
  4375  000E5C  5A07               	subwfb	___awdiv@dividend+1,f,c
  4376  000E5E  800C               	bsf	___awdiv@quotient,0,c
  4377  000E60                     l2878:
  4378  000E60  90D8               	bcf	status,0,c
  4379  000E62  3209               	rrcf	___awdiv@divisor+1,f,c
  4380  000E64  3208               	rrcf	___awdiv@divisor,f,c
  4381  000E66  2E0A               	decfsz	___awdiv@counter,f,c
  4382  000E68  D7ED               	goto	u1390
  4383  000E6A                     l2882:
  4384  000E6A  500B               	movf	___awdiv@sign,w,c
  4385  000E6C  B4D8               	btfsc	status,2,c
  4386  000E6E  D004               	goto	l2886
  4387  000E70  6C0C               	negf	___awdiv@quotient,c
  4388  000E72  1E0D               	comf	___awdiv@quotient+1,f,c
  4389  000E74  B0D8               	btfsc	status,0,c
  4390  000E76  2A0D               	incf	___awdiv@quotient+1,f,c
  4391  000E78                     l2886:
  4392  000E78  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  4393  000E7C  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  4394  000E80  0012               	return		;funcret
  4395  000E82                     __end_of___awdiv:
  4396                           	opt callstack 0
  4397                           
  4398 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  4399 ;; Defined at:
  4400 ;;		line 191 in file "CAN.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  4403 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4404 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  4405 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  i               1    9[COMRAM] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;Total ram usage:        5 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    3
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_CAN_SendFrame
  4428 ;;		_CAN_TakeFrame
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text34
  4433  0013E6                     __ptext34:
  4434                           	opt callstack 0
  4435  0013E6                     _CAN_MoveBuffIntoFrame:
  4436                           	opt callstack 24
  4437                           
  4438                           ;CAN.c: 191: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 192: {;CAN.c
      +                          : 193:     BYTE i;;CAN.c: 194:     for(i=0; i<8; ++i)
  4439                           
  4440                           ;incstack = 0
  4441  0013E6  0E00               	movlw	0
  4442  0013E8  6E0A               	movwf	CAN_MoveBuffIntoFrame@i,c
  4443  0013EA                     l2470:
  4444                           
  4445                           ;CAN.c: 195:     {;CAN.c: 196:         Ram[i]=(*(Buf+i));
  4446  0013EA  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4447  0013EC  2408               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  4448  0013EE  6ED9               	movwf	fsr2l,c
  4449  0013F0  0E00               	movlw	0
  4450  0013F2  2009               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  4451  0013F4  6EDA               	movwf	fsr2h,c
  4452  0013F6  500A               	movf	CAN_MoveBuffIntoFrame@i,w,c
  4453  0013F8  2406               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  4454  0013FA  6EE1               	movwf	fsr1l,c
  4455  0013FC  0E00               	movlw	0
  4456  0013FE  2007               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  4457  001400  6EE2               	movwf	fsr1h,c
  4458  001402  CFDF FFE7          	movff	indf2,indf1
  4459                           
  4460                           ;CAN.c: 197:     }
  4461  001406  2A0A               	incf	CAN_MoveBuffIntoFrame@i,f,c
  4462  001408  0E07               	movlw	7
  4463  00140A  640A               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  4464  00140C  D7EE               	goto	l2470
  4465  00140E  0012               	return	
  4466  001410                     __end_of_CAN_MoveBuffIntoFrame:
  4467                           	opt callstack 0
  4468                           
  4469 ;; *************** function _TMR1_Update_flag_Set *****************
  4470 ;; Defined at:
  4471 ;;		line 32 in file "TMR1.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  a               2    5[COMRAM] unsigned int 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		None
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    3
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text35
  4500  001566                     __ptext35:
  4501                           	opt callstack 0
  4502  001566                     _TMR1_Update_flag_Set:
  4503                           	opt callstack 27
  4504                           
  4505                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  4506                           
  4507                           ;incstack = 0
  4508  001566  C006  F044         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  4509  00156A  C007  F045         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  4510  00156E  0012               	return		;funcret
  4511  001570                     __end_of_TMR1_Update_flag_Set:
  4512                           	opt callstack 0
  4513                           
  4514 ;; *************** function _TMR1_Update_flag_Get *****************
  4515 ;; Defined at:
  4516 ;;		line 47 in file "TMR1.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  2    5[COMRAM] unsigned int 
  4523 ;; Registers used:
  4524 ;;		None
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;Total ram usage:        2 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    3
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text36
  4545  001570                     __ptext36:
  4546                           	opt callstack 0
  4547  001570                     _TMR1_Update_flag_Get:
  4548                           	opt callstack 27
  4549                           
  4550                           ;TMR1.c: 49:     return TMR1_Update_flag;
  4551                           
  4552                           ;incstack = 0
  4553  001570  C044  F006         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  4554  001574  C045  F007         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  4555  001578  0012               	return		;funcret
  4556  00157A                     __end_of_TMR1_Update_flag_Get:
  4557                           	opt callstack 0
  4558                           
  4559 ;; *************** function _LED_Update *****************
  4560 ;; Defined at:
  4561 ;;		line 105 in file "LED.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      unsigned char 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;Total ram usage:        0 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    5
  4582 ;; This function calls:
  4583 ;;		_LED_Control
  4584 ;;		_LED_Left
  4585 ;;		_LED_Light_Pos
  4586 ;;		_LED_Right
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text37
  4593  000E82                     __ptext37:
  4594                           	opt callstack 0
  4595  000E82                     _LED_Update:
  4596                           	opt callstack 25
  4597                           
  4598                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  4599                           
  4600                           ;incstack = 0
  4601  000E82  504C               	movf	_LOCK,w,c
  4602  000E84  A4D8               	btfss	status,2,c
  4603  000E86  D013               	goto	l3108
  4604                           
  4605                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  4606  000E88  0E00               	movlw	0
  4607  000E8A  6E07               	movwf	LED_Control@diode+1,c
  4608  000E8C  0E00               	movlw	0
  4609  000E8E  6E06               	movwf	LED_Control@diode,c
  4610  000E90  0E00               	movlw	0
  4611  000E92  EC7D  F004         	call	_LED_Control
  4612                           
  4613                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  4614  000E96  C04F  F00D         	movff	LED_Update@pos2,LED_Light_Pos@pos
  4615  000E9A  C050  F00E         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  4616  000E9E  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4617  000EA2  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4618  000EA6  5055               	movf	LED_Update@Green,w,c
  4619  000EA8  EC05  F006         	call	_LED_Light_Pos
  4620                           
  4621                           ;LED.c: 117:     }
  4622  000EAC  D012               	goto	l311
  4623  000EAE                     l3108:
  4624                           
  4625                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  4626  000EAE  0E00               	movlw	0
  4627  000EB0  6E07               	movwf	LED_Control@diode+1,c
  4628  000EB2  0E00               	movlw	0
  4629  000EB4  6E06               	movwf	LED_Control@diode,c
  4630  000EB6  5055               	movf	LED_Update@Green,w,c
  4631  000EB8  EC7D  F004         	call	_LED_Control
  4632                           
  4633                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  4634  000EBC  C051  F00D         	movff	LED_Update@pos1,LED_Light_Pos@pos
  4635  000EC0  C052  F00E         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  4636  000EC4  C053  F00F         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  4637  000EC8  C054  F010         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  4638  000ECC  0E00               	movlw	0
  4639  000ECE  EC05  F006         	call	_LED_Light_Pos
  4640  000ED2                     l311:
  4641                           
  4642                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  4643  000ED2  C051  F006         	movff	LED_Update@pos1,LED_Right@a
  4644  000ED6  C052  F007         	movff	LED_Update@pos1+1,LED_Right@a+1
  4645  000EDA  ECEA  F008         	call	_LED_Right	;wreg free
  4646  000EDE  C006  F051         	movff	?_LED_Right,LED_Update@pos1
  4647  000EE2  C007  F052         	movff	?_LED_Right+1,LED_Update@pos1+1
  4648                           
  4649                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  4650  000EE6  C04F  F006         	movff	LED_Update@pos2,LED_Left@a
  4651  000EEA  C050  F007         	movff	LED_Update@pos2+1,LED_Left@a+1
  4652  000EEE  EC35  F009         	call	_LED_Left	;wreg free
  4653  000EF2  C006  F04F         	movff	?_LED_Left,LED_Update@pos2
  4654  000EF6  C007  F050         	movff	?_LED_Left+1,LED_Update@pos2+1
  4655  000EFA  0012               	return		;funcret
  4656  000EFC                     __end_of_LED_Update:
  4657                           	opt callstack 0
  4658                           
  4659 ;; *************** function _LED_Light_Pos *****************
  4660 ;; Defined at:
  4661 ;;		line 196 in file "LED.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  color           1    wreg     enum E10644
  4664 ;;  pos             2   12[COMRAM] unsigned int 
  4665 ;;  fulfillment     2   14[COMRAM] unsigned int 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  color           1   16[COMRAM] enum E10644
  4668 ;;  flage           2   21[COMRAM] unsigned int 
  4669 ;;  pos2            2   19[COMRAM] unsigned int 
  4670 ;;  LED_array       2   17[COMRAM] unsigned int 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  2   12[COMRAM] unsigned int 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4681 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;Total ram usage:       11 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    4
  4687 ;; This function calls:
  4688 ;;		_LED_Control
  4689 ;;		_LED_Left
  4690 ;;		_LED_Right
  4691 ;;		___lwdiv
  4692 ;; This function is called by:
  4693 ;;		_LED_Update
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text38
  4698  000C0A                     __ptext38:
  4699                           	opt callstack 0
  4700  000C0A                     _LED_Light_Pos:
  4701                           	opt callstack 25
  4702                           
  4703                           ;incstack = 0
  4704                           ;LED_Light_Pos@color stored from wreg
  4705  000C0A  6E11               	movwf	LED_Light_Pos@color,c
  4706                           
  4707                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  4708  000C0C  C00D  F014         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  4709  000C10  C00E  F015         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  4710                           
  4711                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  4712  000C14  0E00               	movlw	0
  4713  000C16  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4714  000C18  0E00               	movlw	0
  4715  000C1A  6E12               	movwf	LED_Light_Pos@LED_array,c
  4716                           
  4717                           ;LED.c: 200:     UINT flage = fulfillment/10;
  4718  000C1C  C00F  F006         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  4719  000C20  C010  F007         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  4720  000C24  0E00               	movlw	0
  4721  000C26  6E09               	movwf	___lwdiv@divisor+1,c
  4722  000C28  0E0A               	movlw	10
  4723  000C2A  6E08               	movwf	___lwdiv@divisor,c
  4724  000C2C  EC73  F008         	call	___lwdiv	;wreg free
  4725  000C30  C006  F016         	movff	?___lwdiv,LED_Light_Pos@flage
  4726  000C34  C007  F017         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  4727                           
  4728                           ;LED.c: 201:     if(color == RED)
  4729  000C38  5011               	movf	LED_Light_Pos@color,w,c
  4730  000C3A  B4D8               	btfsc	status,2,c
  4731  000C3C  D017               	goto	l3016
  4732  000C3E  D031               	goto	l3024
  4733  000C40                     l3010:
  4734                           
  4735                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  4736  000C40  5012               	movf	LED_Light_Pos@LED_array,w,c
  4737  000C42  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4738  000C44  6E12               	movwf	LED_Light_Pos@LED_array,c
  4739  000C46  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4740  000C48  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4741  000C4A  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4742                           
  4743                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  4744  000C4C  C014  F006         	movff	LED_Light_Pos@pos2,LED_Left@a
  4745  000C50  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  4746  000C54  EC35  F009         	call	_LED_Left	;wreg free
  4747  000C58  C006  F014         	movff	?_LED_Left,LED_Light_Pos@pos2
  4748  000C5C  C007  F015         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  4749                           
  4750                           ;LED.c: 207:             flage = flage - 1;
  4751  000C60  0EFF               	movlw	255
  4752  000C62  2416               	addwf	LED_Light_Pos@flage,w,c
  4753  000C64  6E16               	movwf	LED_Light_Pos@flage,c
  4754  000C66  0EFF               	movlw	255
  4755  000C68  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4756  000C6A  6E17               	movwf	LED_Light_Pos@flage+1,c
  4757  000C6C                     l3016:
  4758                           
  4759                           ;LED.c: 203:         while(flage>0)
  4760  000C6C  5016               	movf	LED_Light_Pos@flage,w,c
  4761  000C6E  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4762  000C70  B4D8               	btfsc	status,2,c
  4763  000C72  D01B               	goto	u1500
  4764  000C74  D7E5               	goto	l3010
  4765  000C76                     l3018:
  4766                           
  4767                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  4768  000C76  5012               	movf	LED_Light_Pos@LED_array,w,c
  4769  000C78  1014               	iorwf	LED_Light_Pos@pos2,w,c
  4770  000C7A  6E12               	movwf	LED_Light_Pos@LED_array,c
  4771  000C7C  5013               	movf	LED_Light_Pos@LED_array+1,w,c
  4772  000C7E  1015               	iorwf	LED_Light_Pos@pos2+1,w,c
  4773  000C80  6E13               	movwf	LED_Light_Pos@LED_array+1,c
  4774                           
  4775                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  4776  000C82  C014  F006         	movff	LED_Light_Pos@pos2,LED_Right@a
  4777  000C86  C015  F007         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  4778  000C8A  ECEA  F008         	call	_LED_Right	;wreg free
  4779  000C8E  C006  F014         	movff	?_LED_Right,LED_Light_Pos@pos2
  4780  000C92  C007  F015         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  4781                           
  4782                           ;LED.c: 216:             flage = flage - 1;
  4783  000C96  0EFF               	movlw	255
  4784  000C98  2416               	addwf	LED_Light_Pos@flage,w,c
  4785  000C9A  6E16               	movwf	LED_Light_Pos@flage,c
  4786  000C9C  0EFF               	movlw	255
  4787  000C9E  2017               	addwfc	LED_Light_Pos@flage+1,w,c
  4788  000CA0  6E17               	movwf	LED_Light_Pos@flage+1,c
  4789  000CA2                     l3024:
  4790                           
  4791                           ;LED.c: 212:         while(flage>0)
  4792  000CA2  5016               	movf	LED_Light_Pos@flage,w,c
  4793  000CA4  1017               	iorwf	LED_Light_Pos@flage+1,w,c
  4794  000CA6  A4D8               	btfss	status,2,c
  4795  000CA8  D7E6               	goto	l3018
  4796  000CAA                     u1500:
  4797                           
  4798                           ;LED.c: 219:     LED_Control(color, LED_array);
  4799  000CAA  C012  F006         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  4800  000CAE  C013  F007         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  4801  000CB2  5011               	movf	LED_Light_Pos@color,w,c
  4802  000CB4  EC7D  F004         	call	_LED_Control
  4803  000CB8  0012               	return		;funcret
  4804  000CBA                     __end_of_LED_Light_Pos:
  4805                           	opt callstack 0
  4806                           
  4807 ;; *************** function ___lwdiv *****************
  4808 ;; Defined at:
  4809 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  dividend        2    5[COMRAM] unsigned int 
  4812 ;;  divisor         2    7[COMRAM] unsigned int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  quotient        2    9[COMRAM] unsigned int 
  4815 ;;  counter         1   11[COMRAM] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  2    5[COMRAM] unsigned int 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;Total ram usage:        7 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    3
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_LED_Light_Pos
  4836 ;;		_FRAME_Plot
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text39
  4841  0010E6                     __ptext39:
  4842                           	opt callstack 0
  4843  0010E6                     ___lwdiv:
  4844                           	opt callstack 24
  4845                           
  4846                           ;incstack = 0
  4847  0010E6  0E00               	movlw	0
  4848  0010E8  6E0B               	movwf	___lwdiv@quotient+1,c
  4849  0010EA  0E00               	movlw	0
  4850  0010EC  6E0A               	movwf	___lwdiv@quotient,c
  4851  0010EE  5008               	movf	___lwdiv@divisor,w,c
  4852  0010F0  1009               	iorwf	___lwdiv@divisor+1,w,c
  4853  0010F2  B4D8               	btfsc	status,2,c
  4854  0010F4  D01C               	goto	l1192
  4855  0010F6  0E01               	movlw	1
  4856  0010F8  6E0C               	movwf	___lwdiv@counter,c
  4857  0010FA  D004               	goto	l2552
  4858  0010FC                     l2550:
  4859  0010FC  90D8               	bcf	status,0,c
  4860  0010FE  3608               	rlcf	___lwdiv@divisor,f,c
  4861  001100  3609               	rlcf	___lwdiv@divisor+1,f,c
  4862  001102  2A0C               	incf	___lwdiv@counter,f,c
  4863  001104                     l2552:
  4864  001104  AE09               	btfss	___lwdiv@divisor+1,7,c
  4865  001106  D7FA               	goto	l2550
  4866  001108                     u1070:
  4867  001108  90D8               	bcf	status,0,c
  4868  00110A  360A               	rlcf	___lwdiv@quotient,f,c
  4869  00110C  360B               	rlcf	___lwdiv@quotient+1,f,c
  4870  00110E  5008               	movf	___lwdiv@divisor,w,c
  4871  001110  5C06               	subwf	___lwdiv@dividend,w,c
  4872  001112  5009               	movf	___lwdiv@divisor+1,w,c
  4873  001114  5807               	subwfb	___lwdiv@dividend+1,w,c
  4874  001116  A0D8               	btfss	status,0,c
  4875  001118  D005               	goto	l2562
  4876  00111A  5008               	movf	___lwdiv@divisor,w,c
  4877  00111C  5E06               	subwf	___lwdiv@dividend,f,c
  4878  00111E  5009               	movf	___lwdiv@divisor+1,w,c
  4879  001120  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4880  001122  800A               	bsf	___lwdiv@quotient,0,c
  4881  001124                     l2562:
  4882  001124  90D8               	bcf	status,0,c
  4883  001126  3209               	rrcf	___lwdiv@divisor+1,f,c
  4884  001128  3208               	rrcf	___lwdiv@divisor,f,c
  4885  00112A  2E0C               	decfsz	___lwdiv@counter,f,c
  4886  00112C  D7ED               	goto	u1070
  4887  00112E                     l1192:
  4888  00112E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4889  001132  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4890  001136  0012               	return		;funcret
  4891  001138                     __end_of___lwdiv:
  4892                           	opt callstack 0
  4893                           
  4894 ;; *************** function _LED_Right *****************
  4895 ;; Defined at:
  4896 ;;		line 140 in file "LED.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  a               2    5[COMRAM] unsigned int 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  b               2    9[COMRAM] unsigned int 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  2    5[COMRAM] unsigned int 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;Total ram usage:        6 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    3
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_LED_Update
  4921 ;;		_LED_Light_Pos
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text40
  4926  0011D4                     __ptext40:
  4927                           	opt callstack 0
  4928  0011D4                     _LED_Right:
  4929                           	opt callstack 26
  4930                           
  4931                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  4932                           
  4933                           ;incstack = 0
  4934  0011D4  A006               	btfss	LED_Right@a,0,c
  4935  0011D6  D018               	goto	l2694
  4936                           
  4937                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  4938  0011D8  0EFE               	movlw	254
  4939  0011DA  1406               	andwf	LED_Right@a,w,c
  4940  0011DC  6E0A               	movwf	LED_Right@b,c
  4941  0011DE  0E03               	movlw	3
  4942  0011E0  1407               	andwf	LED_Right@a+1,w,c
  4943  0011E2  6E0B               	movwf	LED_Right@b+1,c
  4944                           
  4945                           ;LED.c: 145:         b = b >> 1;
  4946  0011E4  90D8               	bcf	status,0,c
  4947  0011E6  300B               	rrcf	LED_Right@b+1,w,c
  4948  0011E8  6E08               	movwf	??_LED_Right& (0+255),c
  4949  0011EA  300A               	rrcf	LED_Right@b,w,c
  4950  0011EC  6E0A               	movwf	LED_Right@b,c
  4951  0011EE  C008  F00B         	movff	??_LED_Right,LED_Right@b+1
  4952                           
  4953                           ;LED.c: 146:         b = b | 0b1000000000;
  4954  0011F2  0E00               	movlw	0
  4955  0011F4  100A               	iorwf	LED_Right@b,w,c
  4956  0011F6  6E0A               	movwf	LED_Right@b,c
  4957  0011F8  0E02               	movlw	2
  4958  0011FA  100B               	iorwf	LED_Right@b+1,w,c
  4959  0011FC  6E0B               	movwf	LED_Right@b+1,c
  4960                           
  4961                           ;LED.c: 147:         return b;
  4962  0011FE  C00A  F006         	movff	LED_Right@b,?_LED_Right
  4963  001202  C00B  F007         	movff	LED_Right@b+1,?_LED_Right+1
  4964  001206  0012               	return	
  4965  001208                     l2694:
  4966                           
  4967                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  4968  001208  90D8               	bcf	status,0,c
  4969  00120A  3007               	rrcf	LED_Right@a+1,w,c
  4970  00120C  6E08               	movwf	??_LED_Right& (0+255),c
  4971  00120E  3006               	rrcf	LED_Right@a,w,c
  4972  001210  6E06               	movwf	LED_Right@a,c
  4973  001212  C008  F007         	movff	??_LED_Right,LED_Right@a+1
  4974                           
  4975                           ;LED.c: 152:         return a;
  4976  001216  C006  F006         	movff	LED_Right@a,?_LED_Right
  4977  00121A  C007  F007         	movff	LED_Right@a+1,?_LED_Right+1
  4978  00121E  0012               	return		;funcret
  4979  001220                     __end_of_LED_Right:
  4980                           	opt callstack 0
  4981                           
  4982 ;; *************** function _LED_Left *****************
  4983 ;; Defined at:
  4984 ;;		line 167 in file "LED.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  a               2    5[COMRAM] unsigned int 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  b               2    7[COMRAM] unsigned int 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  2    5[COMRAM] unsigned int 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;Total ram usage:        4 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    3
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_LED_Update
  5009 ;;		_LED_Light_Pos
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text41
  5014  00126A                     __ptext41:
  5015                           	opt callstack 0
  5016  00126A                     _LED_Left:
  5017                           	opt callstack 25
  5018                           
  5019                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5020                           
  5021                           ;incstack = 0
  5022  00126A  A207               	btfss	LED_Left@a+1,1,c
  5023  00126C  D015               	goto	l2710
  5024                           
  5025                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5026  00126E  0EFF               	movlw	255
  5027  001270  1406               	andwf	LED_Left@a,w,c
  5028  001272  6E08               	movwf	LED_Left@b,c
  5029  001274  0E01               	movlw	1
  5030  001276  1407               	andwf	LED_Left@a+1,w,c
  5031  001278  6E09               	movwf	LED_Left@b+1,c
  5032                           
  5033                           ;LED.c: 172:         b = b << 1;
  5034  00127A  90D8               	bcf	status,0,c
  5035  00127C  3408               	rlcf	LED_Left@b,w,c
  5036  00127E  6E08               	movwf	LED_Left@b,c
  5037  001280  3409               	rlcf	LED_Left@b+1,w,c
  5038  001282  6E09               	movwf	LED_Left@b+1,c
  5039                           
  5040                           ;LED.c: 173:         b = b | 0b0000000001;
  5041  001284  0E01               	movlw	1
  5042  001286  1008               	iorwf	LED_Left@b,w,c
  5043  001288  6E08               	movwf	LED_Left@b,c
  5044  00128A  5009               	movf	LED_Left@b+1,w,c
  5045  00128C  6E09               	movwf	LED_Left@b+1,c
  5046                           
  5047                           ;LED.c: 174:         return b;
  5048  00128E  C008  F006         	movff	LED_Left@b,?_LED_Left
  5049  001292  C009  F007         	movff	LED_Left@b+1,?_LED_Left+1
  5050  001296  0012               	return	
  5051  001298                     l2710:
  5052                           
  5053                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5054  001298  90D8               	bcf	status,0,c
  5055  00129A  3406               	rlcf	LED_Left@a,w,c
  5056  00129C  6E06               	movwf	LED_Left@a,c
  5057  00129E  3407               	rlcf	LED_Left@a+1,w,c
  5058  0012A0  6E07               	movwf	LED_Left@a+1,c
  5059                           
  5060                           ;LED.c: 179:         return a;
  5061  0012A2  C006  F006         	movff	LED_Left@a,?_LED_Left
  5062  0012A6  C007  F007         	movff	LED_Left@a+1,?_LED_Left+1
  5063  0012AA  0012               	return		;funcret
  5064  0012AC                     __end_of_LED_Left:
  5065                           	opt callstack 0
  5066                           
  5067 ;; *************** function _INI_All *****************
  5068 ;; Defined at:
  5069 ;;		line 52 in file "INI.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    5
  5090 ;; This function calls:
  5091 ;;		_CAN_Setup
  5092 ;;		_INI_GlobalInterrupt
  5093 ;;		_INI_LED_Start
  5094 ;;		_INI_OUTPUT
  5095 ;;		_INI_Timer
  5096 ;; This function is called by:
  5097 ;;		_main
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text42
  5102  0014DC                     __ptext42:
  5103                           	opt callstack 0
  5104  0014DC                     _INI_All:
  5105                           	opt callstack 25
  5106                           
  5107                           ;INI.c: 55:     WDTCONbits.SWDTEN = 1;
  5108                           
  5109                           ;incstack = 0
  5110  0014DC  80D1               	bsf	4049,0,c	;volatile
  5111  0014DE  0004               	clrwdt		;# 
  5112                           
  5113                           ;INI.c: 64:     INI_OUTPUT();
  5114  0014E0  EC5F  F00A         	call	_INI_OUTPUT	;wreg free
  5115                           
  5116                           ;INI.c: 66:     CAN_Setup();
  5117  0014E4  ECEC  F007         	call	_CAN_Setup	;wreg free
  5118                           
  5119                           ;INI.c: 67:     INI_GlobalInterrupt();
  5120  0014E8  EC8E  F00A         	call	_INI_GlobalInterrupt	;wreg free
  5121                           
  5122                           ;INI.c: 69:     INI_Timer();
  5123  0014EC  EC7B  F00A         	call	_INI_Timer	;wreg free
  5124                           
  5125                           ;INI.c: 71:     INI_LED_Start();
  5126  0014F0  ECC2  F009         	call	_INI_LED_Start	;wreg free
  5127  0014F4  0012               	return		;funcret
  5128  0014F6                     __end_of_INI_All:
  5129                           	opt callstack 0
  5130                           
  5131 ;; *************** function _INI_Timer *****************
  5132 ;; Defined at:
  5133 ;;		line 92 in file "TMR1.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      unsigned char 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    3
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_INI_All
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text43
  5162  0014F6                     __ptext43:
  5163                           	opt callstack 0
  5164  0014F6                     _INI_Timer:
  5165                           	opt callstack 26
  5166                           
  5167                           ;TMR1.c: 96:     IRCF2 = 1;
  5168                           
  5169                           ;incstack = 0
  5170  0014F6  8CD3               	bsf	4051,6,c	;volatile
  5171                           
  5172                           ;TMR1.c: 97:     IRCF1 = 1;
  5173  0014F8  8AD3               	bsf	4051,5,c	;volatile
  5174                           
  5175                           ;TMR1.c: 98:     IRCF0 = 1;
  5176  0014FA  88D3               	bsf	4051,4,c	;volatile
  5177                           
  5178                           ;TMR1.c: 99:     T1CON = 0b00111101;
  5179  0014FC  0E3D               	movlw	61
  5180  0014FE  6ECD               	movwf	4045,c	;volatile
  5181                           
  5182                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  5183  001500  0E9E               	movlw	158
  5184  001502  6ECF               	movwf	4047,c	;volatile
  5185                           
  5186                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  5187  001504  0E57               	movlw	87
  5188  001506  6ECE               	movwf	4046,c	;volatile
  5189                           
  5190                           ;TMR1.c: 102:     TMR1IE=1;
  5191  001508  809D               	bsf	3997,0,c	;volatile
  5192                           
  5193                           ;TMR1.c: 103:     TMR1ON = 1;
  5194  00150A  80CD               	bsf	4045,0,c	;volatile
  5195  00150C  0012               	return		;funcret
  5196  00150E                     __end_of_INI_Timer:
  5197                           	opt callstack 0
  5198                           
  5199 ;; *************** function _INI_OUTPUT *****************
  5200 ;; Defined at:
  5201 ;;		line 27 in file "INI.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    3
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_INI_All
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text44
  5230  0014BE                     __ptext44:
  5231                           	opt callstack 0
  5232  0014BE                     _INI_OUTPUT:
  5233                           	opt callstack 26
  5234                           
  5235                           ;INI.c: 31:     LATA = 0;
  5236                           
  5237                           ;incstack = 0
  5238  0014BE  0E00               	movlw	0
  5239  0014C0  6E89               	movwf	3977,c	;volatile
  5240                           
  5241                           ;INI.c: 32:     LATB = 0;
  5242  0014C2  0E00               	movlw	0
  5243  0014C4  6E8A               	movwf	3978,c	;volatile
  5244                           
  5245                           ;INI.c: 33:     LATC = 0;
  5246  0014C6  0E00               	movlw	0
  5247  0014C8  6E8B               	movwf	3979,c	;volatile
  5248                           
  5249                           ;INI.c: 34:     TRISA = 0x0C;
  5250  0014CA  0E0C               	movlw	12
  5251  0014CC  6E92               	movwf	3986,c	;volatile
  5252                           
  5253                           ;INI.c: 35:     TRISB = 0b10001000;
  5254  0014CE  0E88               	movlw	136
  5255  0014D0  6E93               	movwf	3987,c	;volatile
  5256                           
  5257                           ;INI.c: 36:     TRISC = 0xBF;
  5258  0014D2  0EBF               	movlw	191
  5259  0014D4  6E94               	movwf	3988,c	;volatile
  5260                           
  5261                           ;INI.c: 37:     RCONbits.IPEN = 1;
  5262  0014D6  8ED0               	bsf	4048,7,c	;volatile
  5263                           
  5264                           ;INI.c: 40:     DetectorLedRadar.Flags.inicjalizacja = 1;
  5265  0014D8  8641               	bsf	_DetectorLedRadar,3,c
  5266  0014DA  0012               	return		;funcret
  5267  0014DC                     __end_of_INI_OUTPUT:
  5268                           	opt callstack 0
  5269                           
  5270 ;; *************** function _INI_LED_Start *****************
  5271 ;; Defined at:
  5272 ;;		line 231 in file "LED.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5290 ;;Total ram usage:        0 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    4
  5293 ;; This function calls:
  5294 ;;		_LED_Control
  5295 ;; This function is called by:
  5296 ;;		_INI_All
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text45
  5301  001384                     __ptext45:
  5302                           	opt callstack 0
  5303  001384                     _INI_LED_Start:
  5304                           	opt callstack 25
  5305                           
  5306                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  5307                           
  5308                           ;incstack = 0
  5309  001384  5092               	movf	3986,w,c	;volatile
  5310  001386  0B01               	andlw	1
  5311  001388  6E92               	movwf	3986,c	;volatile
  5312                           
  5313                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  5314  00138A  5093               	movf	3987,w,c	;volatile
  5315  00138C  0BFC               	andlw	252
  5316  00138E  6E93               	movwf	3987,c	;volatile
  5317                           
  5318                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  5319  001390  5096               	movf	3990,w,c	;volatile
  5320  001392  0BF8               	andlw	248
  5321  001394  6E96               	movwf	3990,c	;volatile
  5322                           
  5323                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  5324  001396  0E00               	movlw	0
  5325  001398  6E95               	movwf	3989,c	;volatile
  5326                           
  5327                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  5328  00139A  0E00               	movlw	0
  5329  00139C  6E07               	movwf	LED_Control@diode+1,c
  5330  00139E  0E00               	movlw	0
  5331  0013A0  6E06               	movwf	LED_Control@diode,c
  5332  0013A2  0E00               	movlw	0
  5333  0013A4  EC7D  F004         	call	_LED_Control
  5334                           
  5335                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  5336  0013A8  0E00               	movlw	0
  5337  0013AA  6E07               	movwf	LED_Control@diode+1,c
  5338  0013AC  0E00               	movlw	0
  5339  0013AE  6E06               	movwf	LED_Control@diode,c
  5340  0013B0  0E01               	movlw	1
  5341  0013B2  EC7D  F004         	call	_LED_Control
  5342  0013B6  0012               	return		;funcret
  5343  0013B8                     __end_of_INI_LED_Start:
  5344                           	opt callstack 0
  5345                           
  5346 ;; *************** function _LED_Control *****************
  5347 ;; Defined at:
  5348 ;;		line 256 in file "LED.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  color           1    wreg     enum E10644
  5351 ;;  diode           2    5[COMRAM] unsigned int 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  color           1    9[COMRAM] enum E10644
  5354 ;;  cos             2    0        unsigned int 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      unsigned char 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;Total ram usage:        5 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    3
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_LED_Error
  5375 ;;		_LED_Clear
  5376 ;;		_LED_Update
  5377 ;;		_LED_Light_Pos
  5378 ;;		_INI_LED_Start
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text46
  5383  0008FA                     __ptext46:
  5384                           	opt callstack 0
  5385  0008FA                     _LED_Control:
  5386                           	opt callstack 24
  5387                           
  5388                           ;incstack = 0
  5389                           ;LED_Control@color stored from wreg
  5390  0008FA  6E0A               	movwf	LED_Control@color,c
  5391                           
  5392                           ;LED.c: 259:     if(color == RED)
  5393  0008FC  500A               	movf	LED_Control@color,w,c
  5394  0008FE  A4D8               	btfss	status,2,c
  5395  000900  D050               	goto	l339
  5396                           
  5397                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  5398  000902  A006               	btfss	LED_Control@diode,0,c
  5399  000904  D003               	goto	l2346
  5400                           
  5401                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  5402  000906  508C               	movf	3980,w,c	;volatile
  5403  000908  0910               	iorlw	16
  5404  00090A  D002               	goto	L3
  5405  00090C                     l2346:
  5406                           
  5407                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  5408  00090C  508C               	movf	3980,w,c	;volatile
  5409  00090E  0BEF               	andlw	239
  5410  000910                     L3:
  5411  000910  6E8C               	movwf	3980,c	;volatile
  5412                           
  5413                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  5414  000912  A206               	btfss	LED_Control@diode,1,c
  5415  000914  D003               	goto	l2352
  5416                           
  5417                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  5418  000916  508C               	movf	3980,w,c	;volatile
  5419  000918  0940               	iorlw	64
  5420  00091A  D002               	goto	L4
  5421  00091C                     l2352:
  5422                           
  5423                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  5424  00091C  508C               	movf	3980,w,c	;volatile
  5425  00091E  0BBF               	andlw	191
  5426  000920                     L4:
  5427  000920  6E8C               	movwf	3980,c	;volatile
  5428                           
  5429                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  5430  000922  A406               	btfss	LED_Control@diode,2,c
  5431  000924  D003               	goto	l2358
  5432                           
  5433                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  5434  000926  508A               	movf	3978,w,c	;volatile
  5435  000928  0901               	iorlw	1
  5436  00092A  D002               	goto	L5
  5437  00092C                     l2358:
  5438                           
  5439                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  5440  00092C  508A               	movf	3978,w,c	;volatile
  5441  00092E  0BFE               	andlw	254
  5442  000930                     L5:
  5443  000930  6E8A               	movwf	3978,c	;volatile
  5444                           
  5445                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  5446  000932  A606               	btfss	LED_Control@diode,3,c
  5447  000934  D003               	goto	l2364
  5448                           
  5449                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  5450  000936  5089               	movf	3977,w,c	;volatile
  5451  000938  0902               	iorlw	2
  5452  00093A  D002               	goto	L6
  5453  00093C                     l2364:
  5454                           
  5455                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  5456  00093C  5089               	movf	3977,w,c	;volatile
  5457  00093E  0BFD               	andlw	253
  5458  000940                     L6:
  5459  000940  6E89               	movwf	3977,c	;volatile
  5460                           
  5461                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  5462  000942  A806               	btfss	LED_Control@diode,4,c
  5463  000944  D003               	goto	l2370
  5464                           
  5465                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  5466  000946  5089               	movf	3977,w,c	;volatile
  5467  000948  0908               	iorlw	8
  5468  00094A  D002               	goto	L7
  5469  00094C                     l2370:
  5470                           
  5471                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  5472  00094C  5089               	movf	3977,w,c	;volatile
  5473  00094E  0BF7               	andlw	247
  5474  000950                     L7:
  5475  000950  6E89               	movwf	3977,c	;volatile
  5476                           
  5477                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  5478  000952  AA06               	btfss	LED_Control@diode,5,c
  5479  000954  D003               	goto	l2376
  5480                           
  5481                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  5482  000956  5089               	movf	3977,w,c	;volatile
  5483  000958  0920               	iorlw	32
  5484  00095A  D002               	goto	L8
  5485  00095C                     l2376:
  5486                           
  5487                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  5488  00095C  5089               	movf	3977,w,c	;volatile
  5489  00095E  0BDF               	andlw	223
  5490  000960                     L8:
  5491  000960  6E89               	movwf	3977,c	;volatile
  5492                           
  5493                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  5494  000962  AC06               	btfss	LED_Control@diode,6,c
  5495  000964  D003               	goto	l2382
  5496                           
  5497                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  5498  000966  508D               	movf	3981,w,c	;volatile
  5499  000968  0902               	iorlw	2
  5500  00096A  D002               	goto	L9
  5501  00096C                     l2382:
  5502                           
  5503                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  5504  00096C  508D               	movf	3981,w,c	;volatile
  5505  00096E  0BFD               	andlw	253
  5506  000970                     L9:
  5507  000970  6E8D               	movwf	3981,c	;volatile
  5508                           
  5509                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  5510  000972  AE06               	btfss	LED_Control@diode,7,c
  5511  000974  D003               	goto	l2388
  5512                           
  5513                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  5514  000976  5089               	movf	3977,w,c	;volatile
  5515  000978  0980               	iorlw	128
  5516  00097A  D002               	goto	L10
  5517  00097C                     l2388:
  5518                           
  5519                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  5520  00097C  5089               	movf	3977,w,c	;volatile
  5521  00097E  0B7F               	andlw	127
  5522  000980                     L10:
  5523  000980  6E89               	movwf	3977,c	;volatile
  5524                           
  5525                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  5526  000982  A007               	btfss	LED_Control@diode+1,0,c
  5527  000984  D003               	goto	l2394
  5528                           
  5529                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  5530  000986  508C               	movf	3980,w,c	;volatile
  5531  000988  0901               	iorlw	1
  5532  00098A  D002               	goto	L11
  5533  00098C                     l2394:
  5534                           
  5535                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  5536  00098C  508C               	movf	3980,w,c	;volatile
  5537  00098E  0BFE               	andlw	254
  5538  000990                     L11:
  5539  000990  6E8C               	movwf	3980,c	;volatile
  5540                           
  5541                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  5542  000992  A207               	btfss	LED_Control@diode+1,1,c
  5543  000994  D003               	goto	l2400
  5544                           
  5545                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  5546  000996  508C               	movf	3980,w,c	;volatile
  5547  000998  0904               	iorlw	4
  5548  00099A  D002               	goto	L12
  5549  00099C                     l2400:
  5550                           
  5551                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  5552  00099C  508C               	movf	3980,w,c	;volatile
  5553  00099E  0BFB               	andlw	251
  5554  0009A0                     L12:
  5555  0009A0  6E8C               	movwf	3980,c	;volatile
  5556  0009A2                     l339:
  5557                           
  5558                           ;LED.c: 358:     if(color == GREEN)
  5559  0009A2  040A               	decf	LED_Control@color,w,c
  5560  0009A4  A4D8               	btfss	status,2,c
  5561  0009A6  0012               	return	
  5562                           
  5563                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  5564  0009A8  A006               	btfss	LED_Control@diode,0,c
  5565  0009AA  D003               	goto	l2406
  5566                           
  5567                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  5568  0009AC  508C               	movf	3980,w,c	;volatile
  5569  0009AE  0920               	iorlw	32
  5570  0009B0  D002               	goto	L13
  5571  0009B2                     l2406:
  5572                           
  5573                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  5574  0009B2  508C               	movf	3980,w,c	;volatile
  5575  0009B4  0BDF               	andlw	223
  5576  0009B6                     L13:
  5577  0009B6  6E8C               	movwf	3980,c	;volatile
  5578                           
  5579                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  5580  0009B8  A206               	btfss	LED_Control@diode,1,c
  5581  0009BA  D003               	goto	l2412
  5582                           
  5583                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  5584  0009BC  508C               	movf	3980,w,c	;volatile
  5585  0009BE  0980               	iorlw	128
  5586  0009C0  D002               	goto	L14
  5587  0009C2                     l2412:
  5588                           
  5589                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  5590  0009C2  508C               	movf	3980,w,c	;volatile
  5591  0009C4  0B7F               	andlw	127
  5592  0009C6                     L14:
  5593  0009C6  6E8C               	movwf	3980,c	;volatile
  5594                           
  5595                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  5596  0009C8  A406               	btfss	LED_Control@diode,2,c
  5597  0009CA  D003               	goto	l2418
  5598                           
  5599                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  5600  0009CC  508A               	movf	3978,w,c	;volatile
  5601  0009CE  0902               	iorlw	2
  5602  0009D0  D002               	goto	L15
  5603  0009D2                     l2418:
  5604                           
  5605                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  5606  0009D2  508A               	movf	3978,w,c	;volatile
  5607  0009D4  0BFD               	andlw	253
  5608  0009D6                     L15:
  5609  0009D6  6E8A               	movwf	3978,c	;volatile
  5610                           
  5611                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  5612  0009D8  A606               	btfss	LED_Control@diode,3,c
  5613  0009DA  D003               	goto	l2424
  5614                           
  5615                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  5616  0009DC  5089               	movf	3977,w,c	;volatile
  5617  0009DE  0904               	iorlw	4
  5618  0009E0  D002               	goto	L16
  5619  0009E2                     l2424:
  5620                           
  5621                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  5622  0009E2  5089               	movf	3977,w,c	;volatile
  5623  0009E4  0BFB               	andlw	251
  5624  0009E6                     L16:
  5625  0009E6  6E89               	movwf	3977,c	;volatile
  5626                           
  5627                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  5628  0009E8  A806               	btfss	LED_Control@diode,4,c
  5629  0009EA  D003               	goto	l2430
  5630                           
  5631                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  5632  0009EC  5089               	movf	3977,w,c	;volatile
  5633  0009EE  0910               	iorlw	16
  5634  0009F0  D002               	goto	L17
  5635  0009F2                     l2430:
  5636                           
  5637                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  5638  0009F2  5089               	movf	3977,w,c	;volatile
  5639  0009F4  0BEF               	andlw	239
  5640  0009F6                     L17:
  5641  0009F6  6E89               	movwf	3977,c	;volatile
  5642                           
  5643                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  5644  0009F8  AA06               	btfss	LED_Control@diode,5,c
  5645  0009FA  D003               	goto	l2436
  5646                           
  5647                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  5648  0009FC  508D               	movf	3981,w,c	;volatile
  5649  0009FE  0901               	iorlw	1
  5650  000A00  D002               	goto	L18
  5651  000A02                     l2436:
  5652                           
  5653                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  5654  000A02  508D               	movf	3981,w,c	;volatile
  5655  000A04  0BFE               	andlw	254
  5656  000A06                     L18:
  5657  000A06  6E8D               	movwf	3981,c	;volatile
  5658                           
  5659                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  5660  000A08  AC06               	btfss	LED_Control@diode,6,c
  5661  000A0A  D003               	goto	l2442
  5662                           
  5663                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  5664  000A0C  508D               	movf	3981,w,c	;volatile
  5665  000A0E  0904               	iorlw	4
  5666  000A10  D002               	goto	L19
  5667  000A12                     l2442:
  5668                           
  5669                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  5670  000A12  508D               	movf	3981,w,c	;volatile
  5671  000A14  0BFB               	andlw	251
  5672  000A16                     L19:
  5673  000A16  6E8D               	movwf	3981,c	;volatile
  5674                           
  5675                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  5676  000A18  AE06               	btfss	LED_Control@diode,7,c
  5677  000A1A  D003               	goto	l2448
  5678                           
  5679                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  5680  000A1C  5089               	movf	3977,w,c	;volatile
  5681  000A1E  0940               	iorlw	64
  5682  000A20  D002               	goto	L20
  5683  000A22                     l2448:
  5684                           
  5685                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  5686  000A22  5089               	movf	3977,w,c	;volatile
  5687  000A24  0BBF               	andlw	191
  5688  000A26                     L20:
  5689  000A26  6E89               	movwf	3977,c	;volatile
  5690                           
  5691                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  5692  000A28  A007               	btfss	LED_Control@diode+1,0,c
  5693  000A2A  D003               	goto	l2454
  5694                           
  5695                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  5696  000A2C  508C               	movf	3980,w,c	;volatile
  5697  000A2E  0902               	iorlw	2
  5698  000A30  D002               	goto	L21
  5699  000A32                     l2454:
  5700                           
  5701                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  5702  000A32  508C               	movf	3980,w,c	;volatile
  5703  000A34  0BFD               	andlw	253
  5704  000A36                     L21:
  5705  000A36  6E8C               	movwf	3980,c	;volatile
  5706                           
  5707                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  5708  000A38  A207               	btfss	LED_Control@diode+1,1,c
  5709  000A3A  D004               	goto	l2460
  5710                           
  5711                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  5712  000A3C  508C               	movf	3980,w,c	;volatile
  5713  000A3E  0908               	iorlw	8
  5714  000A40  6E8C               	movwf	3980,c	;volatile
  5715                           
  5716                           ;LED.c: 450:         }
  5717  000A42  0012               	return	
  5718  000A44                     l2460:
  5719                           
  5720                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  5721  000A44  508C               	movf	3980,w,c	;volatile
  5722  000A46  0BF7               	andlw	247
  5723  000A48  6E8C               	movwf	3980,c	;volatile
  5724  000A4A  0012               	return		;funcret
  5725  000A4C                     __end_of_LED_Control:
  5726                           	opt callstack 0
  5727                           
  5728 ;; *************** function _INI_GlobalInterrupt *****************
  5729 ;; Defined at:
  5730 ;;		line 74 in file "INI.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		None
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    3
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_INI_All
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text47
  5759  00151C                     __ptext47:
  5760                           	opt callstack 0
  5761  00151C                     _INI_GlobalInterrupt:
  5762                           	opt callstack 26
  5763                           
  5764                           ;INI.c: 76: INTCONbits.GIEH=1;
  5765                           
  5766                           ;incstack = 0
  5767  00151C  8EF2               	bsf	4082,7,c	;volatile
  5768                           
  5769                           ;INI.c: 77: INTCONbits.GIEL=1;
  5770  00151E  8CF2               	bsf	4082,6,c	;volatile
  5771                           
  5772                           ;INI.c: 78: RCONbits.IPEN=1;
  5773  001520  8ED0               	bsf	4048,7,c	;volatile
  5774                           
  5775                           ;INI.c: 79: IPEN =1;
  5776  001522  8ED0               	bsf	4048,7,c	;volatile
  5777                           
  5778                           ;INI.c: 81: PEIE=1;
  5779  001524  8CF2               	bsf	4082,6,c	;volatile
  5780                           
  5781                           ;INI.c: 82: TMR1IP = 0;
  5782  001526  909F               	bcf	3999,0,c	;volatile
  5783  001528  0012               	return		;funcret
  5784  00152A                     __end_of_INI_GlobalInterrupt:
  5785                           	opt callstack 0
  5786                           
  5787 ;; *************** function _CAN_Setup *****************
  5788 ;; Defined at:
  5789 ;;		line 22 in file "CAN.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;Total ram usage:        1 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    4
  5810 ;; This function calls:
  5811 ;;		_CAN_SetupClock
  5812 ;;		_CAN_SetupMask
  5813 ;; This function is called by:
  5814 ;;		_INI_All
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text48
  5819  000FD8                     __ptext48:
  5820                           	opt callstack 0
  5821  000FD8                     _CAN_Setup:
  5822                           	opt callstack 25
  5823                           
  5824                           ;CAN.c: 27:     CANCON = 0x80;
  5825                           
  5826                           ;incstack = 0
  5827  000FD8  0E80               	movlw	128
  5828  000FDA  6E6F               	movwf	3951,c	;volatile
  5829  000FDC                     l2892:
  5830                           
  5831                           ;CAN.c: 28:     while((CANSTAT & 0xE0)!=0x80)
  5832  000FDC  506E               	movf	3950,w,c	;volatile
  5833  000FDE  0BE0               	andlw	224
  5834  000FE0  0A80               	xorlw	128
  5835  000FE2  A4D8               	btfss	status,2,c
  5836  000FE4  D7FB               	goto	l2892
  5837                           
  5838                           ;CAN.c: 33:     BSEL0 = 0;
  5839  000FE6  0E00               	movlw	0
  5840  000FE8  010D               	movlb	13	; () banked
  5841  000FEA  6FF8               	movwf	248,b	;volatile
  5842                           
  5843                           ;CAN.c: 34:     TXB0CON = 0;
  5844  000FEC  0E00               	movlw	0
  5845  000FEE  010F               	movlb	15	; () banked
  5846  000FF0  6F40               	movwf	64,b	;volatile
  5847                           
  5848                           ;CAN.c: 35:     RXB0CON = 0;
  5849  000FF2  0E00               	movlw	0
  5850  000FF4  6E60               	movwf	3936,c	;volatile
  5851                           
  5852                           ;CAN.c: 36:     RXB1CON = 0;
  5853  000FF6  0E00               	movlw	0
  5854  000FF8  6F50               	movwf	80,b	;volatile
  5855                           
  5856                           ;CAN.c: 37:     B0CON = 0;
  5857  000FFA  0E00               	movlw	0
  5858  000FFC  010E               	movlb	14	; () banked
  5859  000FFE  6F20               	movwf	32,b	;volatile
  5860                           
  5861                           ;CAN.c: 38:     B1CON = 0;
  5862  001000  0E00               	movlw	0
  5863  001002  6F30               	movwf	48,b	;volatile
  5864                           
  5865                           ;CAN.c: 39:     PIE3 = 0;
  5866  001004  0E00               	movlw	0
  5867  001006  6EA3               	movwf	4003,c	;volatile
  5868                           
  5869                           ; BSR set to: 14
  5870                           ;CAN.c: 40:     IPR3 = 0xFF;
  5871  001008  68A5               	setf	4005,c	;volatile
  5872                           
  5873                           ;CAN.c: 41:     PIR3 = 0x00;
  5874  00100A  0E00               	movlw	0
  5875  00100C  6EA4               	movwf	4004,c	;volatile
  5876                           
  5877                           ;CAN.c: 42:     BIE0 = 0;
  5878  00100E  0E00               	movlw	0
  5879  001010  010D               	movlb	13	; () banked
  5880  001012  6FFA               	movwf	250,b	;volatile
  5881                           
  5882                           ;CAN.c: 45:     ECANCON = 0x90;
  5883  001014  0E90               	movlw	144
  5884  001016  6E77               	movwf	3959,c	;volatile
  5885                           
  5886                           ; BSR set to: 13
  5887                           ;CAN.c: 48:     CAN_SetupClock();
  5888  001018  EC08  F00A         	call	_CAN_SetupClock	;wreg free
  5889                           
  5890                           ;CAN.c: 51:     CAN_SetupMask();
  5891  00101C  ECAF  F006         	call	_CAN_SetupMask	;wreg free
  5892                           
  5893                           ;CAN.c: 53:     CIOCON = 0xff;
  5894  001020  6873               	setf	3955,c	;volatile
  5895                           
  5896                           ;CAN.c: 59:     CANCON = 0x00;
  5897  001022  0E00               	movlw	0
  5898  001024  6E6F               	movwf	3951,c	;volatile
  5899  001026                     l2906:
  5900                           
  5901                           ;CAN.c: 60:     while((CANSTAT & 0xE0) != 0x00)
  5902  001026  CF6E F006          	movff	3950,??_CAN_Setup	;volatile
  5903  00102A  0EE0               	movlw	224
  5904  00102C  1606               	andwf	??_CAN_Setup,f,c
  5905  00102E  B4D8               	btfsc	status,2,c
  5906  001030  0012               	return	
  5907  001032  D7F9               	goto	l2906
  5908  001034                     __end_of_CAN_Setup:
  5909                           	opt callstack 0
  5910                           
  5911 ;; *************** function _CAN_SetupMask *****************
  5912 ;; Defined at:
  5913 ;;		line 81 in file "CAN.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;Total ram usage:        0 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    3
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_CAN_Setup
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text49
  5942  000D5E                     __ptext49:
  5943                           	opt callstack 0
  5944  000D5E                     _CAN_SetupMask:
  5945                           	opt callstack 25
  5946                           
  5947                           ;CAN.c: 83:     MSEL0 = 0x50;
  5948                           
  5949                           ;incstack = 0
  5950  000D5E  0E50               	movlw	80
  5951  000D60  010D               	movlb	13	; () banked
  5952  000D62  6FF0               	movwf	240,b	;volatile
  5953                           
  5954                           ;CAN.c: 84:     MSEL1 = 0x55;
  5955  000D64  0E55               	movlw	85
  5956  000D66  6FF1               	movwf	241,b	;volatile
  5957                           
  5958                           ;CAN.c: 85:     MSEL2 = 0x55;
  5959  000D68  0E55               	movlw	85
  5960  000D6A  6FF2               	movwf	242,b	;volatile
  5961                           
  5962                           ;CAN.c: 86:     MSEL3 = 0x55;
  5963  000D6C  0E55               	movlw	85
  5964  000D6E  6FF3               	movwf	243,b	;volatile
  5965                           
  5966                           ;CAN.c: 89:     RXM0SIDH = 0b00000000;
  5967  000D70  0E00               	movlw	0
  5968  000D72  010F               	movlb	15	; () banked
  5969  000D74  6F18               	movwf	24,b	;volatile
  5970                           
  5971                           ;CAN.c: 90:     RXM0SIDL = 0b00001011;
  5972  000D76  0E0B               	movlw	11
  5973  000D78  6F19               	movwf	25,b	;volatile
  5974                           
  5975                           ; BSR set to: 15
  5976                           ;CAN.c: 91:     RXM0EIDH = 0xFF;
  5977  000D7A  691A               	setf	26,b	;volatile
  5978                           
  5979                           ; BSR set to: 15
  5980                           ;CAN.c: 92:     RXM0EIDL = 0xFF;
  5981  000D7C  691B               	setf	27,b	;volatile
  5982                           
  5983                           ; BSR set to: 15
  5984                           ;CAN.c: 95:     RXM1SIDH = 0xFF;
  5985  000D7E  691C               	setf	28,b	;volatile
  5986                           
  5987                           ; BSR set to: 15
  5988                           ;CAN.c: 96:     RXM1SIDL = 0xFF;
  5989  000D80  691D               	setf	29,b	;volatile
  5990                           
  5991                           ;CAN.c: 97:     RXM1EIDH = 0;
  5992  000D82  0E00               	movlw	0
  5993  000D84  6F1E               	movwf	30,b	;volatile
  5994                           
  5995                           ;CAN.c: 98:     RXM1EIDL = 0;
  5996  000D86  0E00               	movlw	0
  5997  000D88  6F1F               	movwf	31,b	;volatile
  5998                           
  5999                           ;CAN.c: 101:     RXF0SIDH = 0x00;
  6000  000D8A  0E00               	movlw	0
  6001  000D8C  6F00               	movwf	0,b	;volatile
  6002                           
  6003                           ;CAN.c: 102:     RXF0SIDL = 0x01;
  6004  000D8E  0E01               	movlw	1
  6005  000D90  6F01               	movwf	1,b	;volatile
  6006                           
  6007                           ; BSR set to: 15
  6008                           ;CAN.c: 103:     RXF0SIDLbits.EXIDEN = 1;
  6009  000D92  8701               	bsf	1,3,b	;volatile
  6010                           
  6011                           ;CAN.c: 104:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  6012  000D94  5040               	movf	_DaneCan+3,w,c
  6013  000D96  6F02               	movwf	2,b	;volatile
  6014                           
  6015                           ; BSR set to: 15
  6016                           ;CAN.c: 105:  RXF0EIDH |= 0x40;
  6017  000D98  8D02               	bsf	2,6,b	;volatile
  6018                           
  6019                           ; BSR set to: 15
  6020                           ;CAN.c: 106:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  6021  000D9A  C03F  FF03         	movff	_DaneCan+2,3843	;volatile
  6022                           
  6023                           ; BSR set to: 15
  6024                           ;CAN.c: 108:     RXF1SIDH = 0x00;
  6025  000D9E  0E00               	movlw	0
  6026  000DA0  6F04               	movwf	4,b	;volatile
  6027                           
  6028                           ; BSR set to: 15
  6029                           ;CAN.c: 109:     RXF1SIDL = 0x01;
  6030  000DA2  0E01               	movlw	1
  6031  000DA4  6F05               	movwf	5,b	;volatile
  6032                           
  6033                           ; BSR set to: 15
  6034                           ;CAN.c: 110:     RXF1SIDLbits.EXIDEN = 1;
  6035  000DA6  8705               	bsf	5,3,b	;volatile
  6036                           
  6037                           ; BSR set to: 15
  6038                           ;CAN.c: 111:     RXF1EIDH = 0x7F;
  6039  000DA8  0E7F               	movlw	127
  6040  000DAA  6F06               	movwf	6,b	;volatile
  6041                           
  6042                           ; BSR set to: 15
  6043                           ;CAN.c: 112:     RXF1EIDL = 0xFF;
  6044  000DAC  6907               	setf	7,b	;volatile
  6045                           
  6046                           ; BSR set to: 15
  6047                           ;CAN.c: 115:     RXF2SIDH = 0x00;
  6048  000DAE  0E00               	movlw	0
  6049  000DB0  6F08               	movwf	8,b	;volatile
  6050                           
  6051                           ; BSR set to: 15
  6052                           ;CAN.c: 116:     RXF2SIDL = 0x20;
  6053  000DB2  0E20               	movlw	32
  6054  000DB4  6F09               	movwf	9,b	;volatile
  6055                           
  6056                           ; BSR set to: 15
  6057                           ;CAN.c: 117:     RXF2SIDLbits.EXIDEN = 1;
  6058  000DB6  8709               	bsf	9,3,b	;volatile
  6059                           
  6060                           ; BSR set to: 15
  6061                           ;CAN.c: 118:     RXF2EIDH = 0;
  6062  000DB8  0E00               	movlw	0
  6063  000DBA  6F0A               	movwf	10,b	;volatile
  6064                           
  6065                           ; BSR set to: 15
  6066                           ;CAN.c: 119:     RXF2EIDL = 0;
  6067  000DBC  0E00               	movlw	0
  6068  000DBE  6F0B               	movwf	11,b	;volatile
  6069                           
  6070                           ; BSR set to: 15
  6071                           ;CAN.c: 122:     RXF3SIDH = 0x00;
  6072  000DC0  0E00               	movlw	0
  6073  000DC2  6F0C               	movwf	12,b	;volatile
  6074                           
  6075                           ; BSR set to: 15
  6076                           ;CAN.c: 123:     RXF3SIDL = 0x40;
  6077  000DC4  0E40               	movlw	64
  6078  000DC6  6F0D               	movwf	13,b	;volatile
  6079                           
  6080                           ; BSR set to: 15
  6081                           ;CAN.c: 124:     RXF3SIDLbits.EXIDEN = 1;
  6082  000DC8  870D               	bsf	13,3,b	;volatile
  6083                           
  6084                           ; BSR set to: 15
  6085                           ;CAN.c: 125:     RXF3EIDH = 0;
  6086  000DCA  0E00               	movlw	0
  6087  000DCC  6F0E               	movwf	14,b	;volatile
  6088                           
  6089                           ; BSR set to: 15
  6090                           ;CAN.c: 126:     RXF3EIDL = 0;
  6091  000DCE  0E00               	movlw	0
  6092  000DD0  6F0F               	movwf	15,b	;volatile
  6093                           
  6094                           ; BSR set to: 15
  6095                           ;CAN.c: 129:     RXF5SIDH = 0b00000010;
  6096  000DD2  0E02               	movlw	2
  6097  000DD4  6F14               	movwf	20,b	;volatile
  6098                           
  6099                           ; BSR set to: 15
  6100                           ;CAN.c: 130:     RXF5SIDL = 0b00000000;
  6101  000DD6  0E00               	movlw	0
  6102  000DD8  6F15               	movwf	21,b	;volatile
  6103                           
  6104                           ; BSR set to: 15
  6105                           ;CAN.c: 131:     RXF4SIDLbits.EXIDEN = 1;
  6106  000DDA  8711               	bsf	17,3,b	;volatile
  6107                           
  6108                           ; BSR set to: 15
  6109                           ;CAN.c: 132:     RXF4EIDH = 0;
  6110  000DDC  0E00               	movlw	0
  6111  000DDE  6F12               	movwf	18,b	;volatile
  6112                           
  6113                           ; BSR set to: 15
  6114                           ;CAN.c: 133:     RXF4EIDL = 0;
  6115  000DE0  0E00               	movlw	0
  6116  000DE2  6F13               	movwf	19,b	;volatile
  6117                           
  6118                           ; BSR set to: 15
  6119                           ;CAN.c: 136:     RXF5SIDH = 0b00000010;
  6120  000DE4  0E02               	movlw	2
  6121  000DE6  6F14               	movwf	20,b	;volatile
  6122                           
  6123                           ; BSR set to: 15
  6124                           ;CAN.c: 137:     RXF5SIDL = 0b00100000;
  6125  000DE8  0E20               	movlw	32
  6126  000DEA  6F15               	movwf	21,b	;volatile
  6127                           
  6128                           ; BSR set to: 15
  6129                           ;CAN.c: 138:     RXF5SIDLbits.EXIDEN = 1;
  6130  000DEC  8715               	bsf	21,3,b	;volatile
  6131                           
  6132                           ; BSR set to: 15
  6133                           ;CAN.c: 139:     RXF5EIDH = 0;
  6134  000DEE  0E00               	movlw	0
  6135  000DF0  6F16               	movwf	22,b	;volatile
  6136                           
  6137                           ; BSR set to: 15
  6138                           ;CAN.c: 140:     RXF5EIDL = 0;
  6139  000DF2  0E00               	movlw	0
  6140  000DF4  6F17               	movwf	23,b	;volatile
  6141                           
  6142                           ; BSR set to: 15
  6143                           ;CAN.c: 148:     RXFCON0 = 0b00111111;
  6144  000DF6  0E3F               	movlw	63
  6145  000DF8  010D               	movlb	13	; () banked
  6146  000DFA  6FD4               	movwf	212,b	;volatile
  6147                           
  6148                           ; BSR set to: 13
  6149  000DFC  0012               	return		;funcret
  6150  000DFE                     __end_of_CAN_SetupMask:
  6151                           	opt callstack 0
  6152                           
  6153 ;; *************** function _CAN_SetupClock *****************
  6154 ;; Defined at:
  6155 ;;		line 158 in file "CAN.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		None
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    3
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_CAN_Setup
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text50
  6184  001410                     __ptext50:
  6185                           	opt callstack 0
  6186  001410                     _CAN_SetupClock:
  6187                           	opt callstack 25
  6188                           
  6189                           ;CAN.c: 160:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  6190                           
  6191                           ; BSR set to: 13
  6192                           ;incstack = 0
  6193  001410  8070               	bsf	3952,0,c	;volatile
  6194                           
  6195                           ;CAN.c: 161:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  6196  001412  8270               	bsf	3952,1,c	;volatile
  6197                           
  6198                           ;CAN.c: 162:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  6199  001414  9470               	bcf	3952,2,c	;volatile
  6200                           
  6201                           ;CAN.c: 163:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  6202  001416  9670               	bcf	3952,3,c	;volatile
  6203                           
  6204                           ;CAN.c: 164:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  6205  001418  9870               	bcf	3952,4,c	;volatile
  6206                           
  6207                           ;CAN.c: 165:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  6208  00141A  9A70               	bcf	3952,5,c	;volatile
  6209                           
  6210                           ;CAN.c: 167:     BRGCON1bits.SJW0 = 1;
  6211  00141C  8C70               	bsf	3952,6,c	;volatile
  6212                           
  6213                           ;CAN.c: 168:     BRGCON1bits.SJW1 = 1;
  6214  00141E  8E70               	bsf	3952,7,c	;volatile
  6215                           
  6216                           ;CAN.c: 170:     BRGCON2bits.SEG1PH0 = 1;
  6217  001420  8671               	bsf	3953,3,c	;volatile
  6218                           
  6219                           ;CAN.c: 171:     BRGCON2bits.SEG1PH1 = 1;
  6220  001422  8871               	bsf	3953,4,c	;volatile
  6221                           
  6222                           ;CAN.c: 172:     BRGCON2bits.SEG1PH2 = 1;
  6223  001424  8A71               	bsf	3953,5,c	;volatile
  6224                           
  6225                           ;CAN.c: 174:     BRGCON2bits.PRSEG2 = 1;
  6226  001426  8471               	bsf	3953,2,c	;volatile
  6227                           
  6228                           ;CAN.c: 175:     BRGCON2bits.PRSEG1 = 0;
  6229  001428  9271               	bcf	3953,1,c	;volatile
  6230                           
  6231                           ;CAN.c: 176:     BRGCON2bits.PRSEG0 = 0;
  6232  00142A  9071               	bcf	3953,0,c	;volatile
  6233                           
  6234                           ;CAN.c: 178:     BRGCON3bits.SEG2PH0 = 1;
  6235  00142C  8072               	bsf	3954,0,c	;volatile
  6236                           
  6237                           ;CAN.c: 179:     BRGCON3bits.SEG2PH1 = 0;
  6238  00142E  9272               	bcf	3954,1,c	;volatile
  6239                           
  6240                           ;CAN.c: 180:     BRGCON3bits.SEG2PH2 = 1;
  6241  001430  8472               	bsf	3954,2,c	;volatile
  6242                           
  6243                           ;CAN.c: 182:     BRGCON2bits.SAM = 1;
  6244  001432  8C71               	bsf	3953,6,c	;volatile
  6245                           
  6246                           ;CAN.c: 183:     BRGCON2bits.SEG2PHTS = 1;
  6247  001434  8E71               	bsf	3953,7,c	;volatile
  6248  001436  0012               	return		;funcret
  6249  001438                     __end_of_CAN_SetupClock:
  6250                           	opt callstack 0
  6251                           
  6252 ;; *************** function _ISR_low *****************
  6253 ;; Defined at:
  6254 ;;		line 16 in file "ISR.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;		None
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1    wreg      void 
  6261 ;; Registers used:
  6262 ;;		wreg, status,2, status,0, cstack
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;Total ram usage:        3 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    2
  6275 ;; This function calls:
  6276 ;;		_TMR1_Timer_reset
  6277 ;;		i1_TMR1_Update_flag_Set
  6278 ;; This function is called by:
  6279 ;;		Interrupt level 1
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	intcodelo
  6284  000018                     __pintcodelo:
  6285                           	opt callstack 0
  6286  000018                     _ISR_low:
  6287                           	opt callstack 23
  6288                           
  6289                           ;incstack = 0
  6290  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6291  00001A  CFD8 F003          	movff	status,??_ISR_low
  6292  00001E  CFE8 F004          	movff	wreg,??_ISR_low+1
  6293  000022  CFE0 F005          	movff	bsr,??_ISR_low+2
  6294                           
  6295                           ;ISR.c: 21:     if(TMR1IF==1)
  6296  000026  A09E               	btfss	3998,0,c	;volatile
  6297  000028  D011               	goto	i1l628
  6298                           
  6299                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  6300  00002A  EC2F  F00A         	call	_TMR1_Timer_reset	;wreg free
  6301                           
  6302                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  6303  00002E  0E00               	movlw	0
  6304  000030  6E02               	movwf	i1TMR1_Update_flag_Set@a+1,c
  6305  000032  0E01               	movlw	1
  6306  000034  6E01               	movwf	i1TMR1_Update_flag_Set@a,c
  6307  000036  ECBD  F00A         	call	i1_TMR1_Update_flag_Set	;wreg free
  6308                           
  6309                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  6310  00003A  8041               	bsf	_DetectorLedRadar,0,c
  6311                           
  6312                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  6313  00003C  2A4A               	incf	ISR_low@ramkaStanuU8,f,c
  6314  00003E  0E14               	movlw	20
  6315  000040  644A               	cpfsgt	ISR_low@ramkaStanuU8,c
  6316  000042  D003               	goto	i1l3182
  6317                           
  6318                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  6319  000044  0E00               	movlw	0
  6320  000046  6E4A               	movwf	ISR_low@ramkaStanuU8,c
  6321                           
  6322                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  6323  000048  803D               	bsf	_DaneCan,0,c
  6324  00004A                     i1l3182:
  6325                           
  6326                           ;ISR.c: 41:             TMR1IF=0;
  6327  00004A  909E               	bcf	3998,0,c	;volatile
  6328  00004C                     i1l628:
  6329  00004C  C005  FFE0         	movff	??_ISR_low+2,bsr
  6330  000050  C004  FFE8         	movff	??_ISR_low+1,wreg
  6331  000054  C003  FFD8         	movff	??_ISR_low,status
  6332  000058  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6333  00005A  0010               	retfie	
  6334  00005C                     __end_of_ISR_low:
  6335                           	opt callstack 0
  6336                           
  6337 ;; *************** function i1_TMR1_Update_flag_Set *****************
  6338 ;; Defined at:
  6339 ;;		line 32 in file "TMR1.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  a               2    0[COMRAM] unsigned int 
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;		None
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      void 
  6346 ;; Registers used:
  6347 ;;		None
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;Total ram usage:        2 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_ISR_low
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text52
  6368  00157A                     __ptext52:
  6369                           	opt callstack 0
  6370  00157A                     i1_TMR1_Update_flag_Set:
  6371                           	opt callstack 23
  6372                           
  6373                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  6374                           
  6375                           ;incstack = 0
  6376  00157A  C001  F044         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  6377  00157E  C002  F045         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  6378  001582  0012               	return		;funcret
  6379  001584                     __end_ofi1_TMR1_Update_flag_Set:
  6380                           	opt callstack 0
  6381                           
  6382 ;; *************** function _TMR1_Timer_reset *****************
  6383 ;; Defined at:
  6384 ;;		line 63 in file "TMR1.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  6389 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      unsigned char 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;Total ram usage:        2 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_ISR_low
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text53
  6414  00145E                     __ptext53:
  6415                           	opt callstack 0
  6416  00145E                     _TMR1_Timer_reset:
  6417                           	opt callstack 23
  6418                           
  6419                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  6420                           
  6421                           ;incstack = 0
  6422  00145E  0E00               	movlw	0
  6423  001460  6E01               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  6424  001462  0E00               	movlw	0
  6425  001464  6E02               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  6426                           
  6427                           ;TMR1.c: 70:     t1L = TMR1L;
  6428  001466  CFCE F001          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  6429                           
  6430                           ;TMR1.c: 71:     t1H = TMR1H;
  6431  00146A  CFCF F002          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  6432                           
  6433                           ;TMR1.c: 72:     __nop();
  6434  00146E  F000               	nop	
  6435                           
  6436                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6437  001470  0E9E               	movlw	158
  6438  001472  2602               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  6439                           
  6440                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6441  001474  0E57               	movlw	87
  6442  001476  2601               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  6443                           
  6444                           ;TMR1.c: 75:     TMR1H = t1H;
  6445  001478  C002  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  6446                           
  6447                           ;TMR1.c: 76:     TMR1L = 0x5B;
  6448  00147C  0E5B               	movlw	91
  6449  00147E  6ECE               	movwf	4046,c	;volatile
  6450  001480  0012               	return		;funcret
  6451  001482                     __end_of_TMR1_Timer_reset:
  6452                           	opt callstack 0
  6453                           
  6454 ;; *************** function _ISR_high *****************
  6455 ;; Defined at:
  6456 ;;		line 53 in file "ISR.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      void 
  6463 ;; Registers used:
  6464 ;;		None
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		Interrupt level 2
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	intcode
  6484  000008                     __pintcode:
  6485                           	opt callstack 0
  6486  000008                     _ISR_high:
  6487                           	opt callstack 23
  6488                           
  6489                           ;incstack = 0
  6490  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6491  00000A  EDCF  F00A         	call	int_func,f	;refresh shadow registers
  6492                           
  6493                           	psect	intcode_body
  6494  00159E                     __pintcode_body:
  6495                           	opt callstack 23
  6496  00159E                     int_func:
  6497                           	opt callstack 23
  6498  00159E  0006               	pop		; remove dummy address from shadow register refresh
  6499  0015A0  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6500  0015A2  0011               	retfie		f
  6501  0015A4                     __end_of_ISR_high:
  6502                           	opt callstack 0
  6503  0000                     
  6504                           	psect	rparam
  6505  0000                     
  6506                           	psect	temp
  6507  000056                     btemp:
  6508                           	opt callstack 0
  6509  000056                     	ds	1
  6510  0000                     int$flags	set	btemp
  6511  0000                     wtemp8	set	btemp+1
  6512  0000                     ttemp5	set	btemp+1
  6513  0000                     ttemp6	set	btemp+4
  6514  0000                     ttemp7	set	btemp+8
  6515                           tosu	equ	0xFFF
  6516                           tosh	equ	0xFFE
  6517                           tosl	equ	0xFFD
  6518                           stkptr	equ	0xFFC
  6519                           pclatu	equ	0xFFB
  6520                           pclath	equ	0xFFA
  6521                           pcl	equ	0xFF9
  6522                           tblptru	equ	0xFF8
  6523                           tblptrh	equ	0xFF7
  6524                           tblptrl	equ	0xFF6
  6525                           tablat	equ	0xFF5
  6526                           prodh	equ	0xFF4
  6527                           prodl	equ	0xFF3
  6528                           indf0	equ	0xFEF
  6529                           postinc0	equ	0xFEE
  6530                           postdec0	equ	0xFED
  6531                           preinc0	equ	0xFEC
  6532                           plusw0	equ	0xFEB
  6533                           fsr0h	equ	0xFEA
  6534                           fsr0l	equ	0xFE9
  6535                           wreg	equ	0xFE8
  6536                           indf1	equ	0xFE7
  6537                           postinc1	equ	0xFE6
  6538                           postdec1	equ	0xFE5
  6539                           preinc1	equ	0xFE4
  6540                           plusw1	equ	0xFE3
  6541                           fsr1h	equ	0xFE2
  6542                           fsr1l	equ	0xFE1
  6543                           bsr	equ	0xFE0
  6544                           indf2	equ	0xFDF
  6545                           postinc2	equ	0xFDE
  6546                           postdec2	equ	0xFDD
  6547                           preinc2	equ	0xFDC
  6548                           plusw2	equ	0xFDB
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8
=======
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4680 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataCOMRAM
   119  001C28                     __pidataCOMRAM:
   120                           	opt callstack 0
   121                           
   122                           ;initializer for MOC_Frame_Counter@zeta
   123  001C28  0011               	dw	17
   124                           
   125                           ;initializer for LED_Update@pos2
   126  001C2A  0001               	dw	1
   127                           
   128                           ;initializer for LED_Update@pos1
   129  001C2C  0001               	dw	1
   130                           
   131                           ;initializer for _Fulfillment_Lvl
   132  001C2E  0014               	dw	20
   133                           
   134                           ;initializer for LED_Update@Green
   135  001C30  01                 	db	1
   136                           
   137                           ;initializer for _Init_Data
   138  001C31  FFFF               	dw	65535
   139                           
   140                           ;initializer for _NeightAdress2
   141  001C33  012A               	dw	298
   142  0000                     _RXF9EIDL	set	3443
   143  0000                     _RXF9EIDH	set	3442
   144  0000                     _RXF9SIDLbits	set	3441
   145  0000                     _RXF9SIDL	set	3441
   146  0000                     _RXF9SIDH	set	3440
   147  0000                     _RXF8EIDL	set	3435
   148  0000                     _RXF8EIDH	set	3434
   149  0000                     _RXF8SIDLbits	set	3433
   150  0000                     _RXF8SIDL	set	3433
   151  0000                     _RXF8SIDH	set	3432
   152  0000                     _RXF7EIDL	set	3431
   153  0000                     _RXF7EIDH	set	3430
   154  0000                     _RXF7SIDLbits	set	3429
   155  0000                     _RXF7SIDL	set	3429
   156  0000                     _RXF7SIDH	set	3428
   157  0000                     _RXF6EIDL	set	3427
   158  0000                     _RXF6EIDH	set	3426
   159  0000                     _RXF6SIDLbits	set	3425
   160  0000                     _RXF6SIDL	set	3425
   161  0000                     _RXF6SIDH	set	3424
   162  0000                     _RXFCON1	set	3541
   163  0000                     _RXFCON0	set	3540
   164  0000                     _RXFBCON4	set	3556
   165  0000                     _RXFBCON3	set	3555
   166  0000                     _RXFBCON2	set	3554
   167  0000                     _RXFBCON1	set	3553
   168  0000                     _RXFBCON0	set	3552
   169  0000                     _MSEL3	set	3571
   170  0000                     _MSEL2	set	3570
   171  0000                     _MSEL1	set	3569
   172  0000                     _MSEL0	set	3568
   173  0000                     _BIE0	set	3578
   174  0000                     _BSEL0	set	3576
   175  0000                     _B5CON	set	3696
   176  0000                     _B4CON	set	3680
   177  0000                     _B3CON	set	3664
   178  0000                     _B2CON	set	3648
   179  0000                     _B1CON	set	3632
   180  0000                     _B0CON	set	3616
   181  0000                     _TXB0CONbits	set	3904
   182  0000                     _RXF5EIDL	set	3863
   183  0000                     _RXF5EIDH	set	3862
   184  0000                     _RXF5SIDLbits	set	3861
   185  0000                     _RXF5SIDL	set	3861
   186  0000                     _RXF5SIDH	set	3860
   187  0000                     _RXF4EIDL	set	3859
   188  0000                     _RXF4EIDH	set	3858
   189  0000                     _RXF4SIDLbits	set	3857
   190  0000                     _RXF4SIDL	set	3857
   191  0000                     _RXF4SIDH	set	3856
   192  0000                     _RXF3EIDL	set	3855
   193  0000                     _RXF3EIDH	set	3854
   194  0000                     _RXF3SIDLbits	set	3853
   195  0000                     _RXF3SIDL	set	3853
   196  0000                     _RXF3SIDH	set	3852
   197  0000                     _RXF2EIDL	set	3851
   198  0000                     _RXF2EIDH	set	3850
   199  0000                     _RXF2SIDLbits	set	3849
   200  0000                     _RXF2SIDL	set	3849
   201  0000                     _RXF2SIDH	set	3848
   202  0000                     _RXF1EIDL	set	3847
   203  0000                     _RXF1EIDH	set	3846
   204  0000                     _RXF1SIDLbits	set	3845
   205  0000                     _RXF1SIDL	set	3845
   206  0000                     _RXF1SIDH	set	3844
   207  0000                     _RXF0EIDL	set	3843
   208  0000                     _RXF0EIDH	set	3842
   209  0000                     _RXF0SIDLbits	set	3841
   210  0000                     _RXF0SIDL	set	3841
   211  0000                     _RXF0SIDH	set	3840
   212  0000                     _RXM1EIDL	set	3871
   213  0000                     _RXM1EIDH	set	3870
   214  0000                     _RXM1SIDL	set	3869
   215  0000                     _RXM1SIDH	set	3868
   216  0000                     _RXM0EIDL	set	3867
   217  0000                     _RXM0EIDH	set	3866
   218  0000                     _RXM0SIDL	set	3865
   219  0000                     _RXM0SIDH	set	3864
   220  0000                     _RXB1CON	set	3920
   221  0000                     _TXB0CON	set	3904
   222  0000                     _TBLPTR	set	4086
   223  0000                     _TABLAT	set	4085
   224  0000                     _EECON2	set	4007
   225  0000                     _EEDATA	set	4008
   226  0000                     _EECON1bits	set	4006
   227  0000                     _EEADR	set	4009
   228  0000                     _EEADRH	set	4010
   229  0000                     _INTCONbits	set	4082
   230  0000                     _WDTCONbits	set	4049
   231  0000                     _RCONbits	set	4048
   232  0000                     _TRISC	set	3988
   233  0000                     _LATC	set	3979
   234  0000                     _T1CON	set	4045
   235  0000                     _TMR1H	set	4047
   236  0000                     _TMR1L	set	4046
   237  0000                     _LATE	set	3981
   238  0000                     _LATA	set	3977
   239  0000                     _LATB	set	3978
   240  0000                     _LATD	set	3980
   241  0000                     _TRISD	set	3989
   242  0000                     _TRISE	set	3990
   243  0000                     _TRISB	set	3987
   244  0000                     _TRISA	set	3986
   245  0000                     _RXB0DLCbits	set	3941
   246  0000                     _RXB0DLC	set	3941
   247  0000                     _RXB0SIDH	set	3937
   248  0000                     _RXB0SIDLbits	set	3938
   249  0000                     _RXB0SIDL	set	3938
   250  0000                     _RXB0EIDH	set	3939
   251  0000                     _RXB0EIDL	set	3940
   252  0000                     _COMSTATbits	set	3956
   253  0000                     _RXB0CONbits	set	3936
   254  0000                     _BRGCON3bits	set	3954
   255  0000                     _BRGCON2bits	set	3953
   256  0000                     _BRGCON1bits	set	3952
   257  0000                     _CIOCON	set	3955
   258  0000                     _ECANCON	set	3959
   259  0000                     _PIR3	set	4004
   260  0000                     _IPR3	set	4005
   261  0000                     _PIE3	set	4003
   262  0000                     _RXB0CON	set	3936
   263  0000                     _CANSTAT	set	3950
   264  0000                     _CANCON	set	3951
   265  0000                     _RCON	set	4048
   266  0000                     _RXB0D0	set	3942
   267  0000                     _TMR1IF	set	31984
   268  0000                     _TMR1IP	set	31992
   269  0000                     _PEIE	set	32662
   270  0000                     _IPEN	set	32391
   271  0000                     _TMR1ON	set	32360
   272  0000                     _TMR1IE	set	31976
   273  0000                     _IRCF0	set	32412
   274  0000                     _IRCF1	set	32413
   275  0000                     _IRCF2	set	32414
   276                           
   277                           ; #config settings
   278  0000                     
   279                           	psect	cinit
   280  00168C                     __pcinit:
   281                           	opt callstack 0
   282  00168C                     start_initialization:
   283                           	opt callstack 0
   284  00168C                     __initialization:
   285                           	opt callstack 0
   286                           
   287                           ; Initialize objects allocated to COMRAM (13 bytes)
   288                           ; load TBLPTR registers with __pidataCOMRAM
   289  00168C  0E28               	movlw	low __pidataCOMRAM
   290  00168E  6EF6               	movwf	tblptrl,c
   291  001690  0E1C               	movlw	high __pidataCOMRAM
   292  001692  6EF7               	movwf	tblptrh,c
   293  001694  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   294  001696  6EF8               	movwf	tblptru,c
   295  001698  EE00  F03F         	lfsr	0,__pdataCOMRAM
   296  00169C  EE10 F00D          	lfsr	1,13
   297  0016A0                     copy_data0:
   298  0016A0  0009               	tblrd		*+
   299  0016A2  CFF5 FFEE          	movff	tablat,postinc0
   300  0016A6  50E5               	movf	postdec1,w,c
   301  0016A8  50E1               	movf	fsr1l,w,c
   302  0016AA  E1FA               	bnz	copy_data0
   303                           
   304                           ; Clear objects allocated to BIGRAM (544 bytes)
   305  0016AC  EE00  F0E3         	lfsr	0,__pbssBIGRAM
   306  0016B0  EE12 F020          	lfsr	1,544
   307  0016B4                     clear_0:
   308  0016B4  6AEE               	clrf	postinc0,c
   309  0016B6  50E5               	movf	postdec1,w,c
   310  0016B8  50E1               	movf	fsr1l,w,c
   311  0016BA  E1FC               	bnz	clear_0
   312  0016BC  50E2               	movf	fsr1h,w,c
   313  0016BE  E1FA               	bnz	clear_0
   314                           
   315                           ; Clear objects allocated to BANK0 (114 bytes)
   316  0016C0  EE00  F060         	lfsr	0,__pbssBANK0
   317  0016C4  0E72               	movlw	114
   318  0016C6                     clear_1:
   319  0016C6  6AEE               	clrf	postinc0,c
   320  0016C8  06E8               	decf	wreg,f,c
   321  0016CA  E1FD               	bnz	clear_1
   322                           
   323                           ; Clear objects allocated to COMRAM (34 bytes)
   324  0016CC  EE00  F001         	lfsr	0,__pbssCOMRAM
   325  0016D0  0E22               	movlw	34
   326  0016D2                     clear_2:
   327  0016D2  6AEE               	clrf	postinc0,c
   328  0016D4  06E8               	decf	wreg,f,c
   329  0016D6  E1FD               	bnz	clear_2
   330  0016D8                     end_of_initialization:
   331                           	opt callstack 0
   332  0016D8                     __end_of__initialization:
   333                           	opt callstack 0
   334  0016D8  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   335  0016DA  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   336  0016DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337  0016DE  6EF8               	movwf	tblptru,c
   338  0016E0  0100               	movlb	0
   339  0016E2  EFAA  F007         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342  000001                     __pbssCOMRAM:
   343                           	opt callstack 0
   344  000001                     _DaneCan:
   345                           	opt callstack 0
   346  000001                     	ds	4
   347  000005                     _nextEEPosition:
   348                           	opt callstack 0
   349  000005                     	ds	2
   350  000007                     FRAME_SensorExcitationStatus@statwect:
   351                           	opt callstack 0
   352  000007                     	ds	2
   353  000009                     _TMR1_Update_flag:
   354                           	opt callstack 0
   355  000009                     	ds	2
   356  00000B                     WritetoEEPROM@GIE_Status:
   357                           	opt callstack 0
   358  00000B                     	ds	1
   359  00000C                     	ds	1
   360  00000D                     	ds	1
   361  00000E                     ISR_low@ramkaStanuU8:
   362                           	opt callstack 0
   363  00000E                     	ds	1
   364  00000F                     	ds	1
   365  000010                     _LOCK:
   366                           	opt callstack 0
   367  000010                     	ds	1
   368  000011                     _neighborsAdress:
   369                           	opt callstack 0
   370  000011                     	ds	2
   371  000013                     _ustawieniaKarty:
   372                           	opt callstack 0
   373  000013                     	ds	2
   374  000015                     _NeightAdress8:
   375                           	opt callstack 0
   376  000015                     	ds	2
   377  000017                     _NeightAdress7:
   378                           	opt callstack 0
   379  000017                     	ds	2
   380  000019                     _NeightAdress6:
   381                           	opt callstack 0
   382  000019                     	ds	2
   383  00001B                     _NeightAdress5:
   384                           	opt callstack 0
   385  00001B                     	ds	2
   386  00001D                     _NeightAdress4:
   387                           	opt callstack 0
   388  00001D                     	ds	2
   389  00001F                     _NeightAdress3:
   390                           	opt callstack 0
   391  00001F                     	ds	2
   392  000021                     _NeightAdress1:
   393                           	opt callstack 0
   394  000021                     	ds	2
   395                           
   396                           	psect	dataCOMRAM
   397  00003F                     __pdataCOMRAM:
   398                           	opt callstack 0
   399  00003F                     MOC_Frame_Counter@zeta:
   400                           	opt callstack 0
   401  00003F                     	ds	2
   402  000041                     LED_Update@pos2:
   403                           	opt callstack 0
   404  000041                     	ds	2
   405  000043                     LED_Update@pos1:
   406                           	opt callstack 0
   407  000043                     	ds	2
   408  000045                     _Fulfillment_Lvl:
   409                           	opt callstack 0
   410  000045                     	ds	2
   411  000047                     LED_Update@Green:
   412                           	opt callstack 0
   413  000047                     	ds	1
   414  000048                     _Init_Data:
   415                           	opt callstack 0
   416  000048                     	ds	2
   417  00004A                     _NeightAdress2:
   418                           	opt callstack 0
   419  00004A                     	ds	2
   420                           
   421                           	psect	bssBANK0
   422  000060                     __pbssBANK0:
   423                           	opt callstack 0
   424  000060                     _ramkaCanRxKarty:
   425                           	opt callstack 0
   426  000060                     	ds	85
   427  0000B5                     _ramkaCanTxKarty:
   428                           	opt callstack 0
   429  0000B5                     	ds	17
   430  0000C6                     _Flagi:
   431                           	opt callstack 0
   432  0000C6                     	ds	5
   433  0000CB                     _DetectorLedRadar:
   434                           	opt callstack 0
   435  0000CB                     	ds	3
   436  0000CE                     _czujnikiNaMapie:
   437                           	opt callstack 0
   438  0000CE                     	ds	2
   439  0000D0                     _Dane:
   440                           	opt callstack 0
   441  0000D0                     	ds	2
   442                           
   443                           	psect	bssBIGRAM
   444  0000E3                     __pbssBIGRAM:
   445                           	opt callstack 0
   446  0000E3                     _wartosciSasiada:
   447                           	opt callstack 0
   448  0000E3                     	ds	544
   449                           
   450                           	psect	cstackBANK0
   451  0000D2                     __pcstackBANK0:
   452                           	opt callstack 0
   453  0000D2                     TRM_DataTransmition@canMessage:
   454                           	opt callstack 0
   455                           
   456                           ; 17 bytes @ 0x0
   457  0000D2                     	ds	17
   458                           
   459                           	psect	cstackCOMRAM
   460  000023                     __pcstackCOMRAM:
   461                           	opt callstack 0
   462  000023                     TMR1_Timer_reset@t1L:
   463                           	opt callstack 0
   464  000023                     i1TMR1_Update_flag_Set@a:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x0
   468  000023                     	ds	1
   469  000024                     TMR1_Timer_reset@t1H:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x1
   473  000024                     	ds	1
   474  000025                     ??_ISR_low:
   475  000025                     
   476                           ; 1 bytes @ 0x2
   477  000025                     	ds	3
   478  000028                     ??_CAN_Setup:
   479  000028                     ?_FLASH_Read:
   480                           	opt callstack 0
   481  000028                     ?_TMR1_Update_flag_Get:
   482                           	opt callstack 0
   483  000028                     ?_LED_Right:
   484                           	opt callstack 0
   485  000028                     ?_LED_Left:
   486                           	opt callstack 0
   487  000028                     ?_MOC_Wynikowa_wartosc_roznicowa:
   488                           	opt callstack 0
   489  000028                     ?_MOC_Frame_Counter:
   490                           	opt callstack 0
   491  000028                     ?_MOC_Aktualna_Temperatura:
   492                           	opt callstack 0
   493  000028                     ?_MOC_NOTWORK:
   494                           	opt callstack 0
   495  000028                     ?_IsInNeighbors:
   496                           	opt callstack 0
   497  000028                     ?_MOCK_PrzyspieszenieX:
   498                           	opt callstack 0
   499  000028                     ?_MOCK_PrzyspieszenieY:
   500                           	opt callstack 0
   501  000028                     ?_MOCK_PrzyspieszenieZ:
   502                           	opt callstack 0
   503  000028                     ?_MOCK_Klikniecie_Spadek:
   504                           	opt callstack 0
   505  000028                     ?___awdiv:
   506                           	opt callstack 0
   507  000028                     ?___lwdiv:
   508                           	opt callstack 0
   509  000028                     LOCK_Set@k:
   510                           	opt callstack 0
   511  000028                     CAN_MoveBuffIntoFrame@Ram:
   512                           	opt callstack 0
   513  000028                     CAN_GenID@message:
   514                           	opt callstack 0
   515  000028                     LED_Right@a:
   516                           	opt callstack 0
   517  000028                     LED_Left@a:
   518                           	opt callstack 0
   519  000028                     LED_Control@diode:
   520                           	opt callstack 0
   521  000028                     TMR1_Update_flag_Set@a:
   522                           	opt callstack 0
   523  000028                     IsInNeighbors@message_adress:
   524                           	opt callstack 0
   525  000028                     FRAME_ExcitationValue@message:
   526                           	opt callstack 0
   527  000028                     FRAME_ExcitationMultiplier@message:
   528                           	opt callstack 0
   529  000028                     FRAME_AveragingTimes@message:
   530                           	opt callstack 0
   531  000028                     FRAME_AxisStatus@message:
   532                           	opt callstack 0
   533  000028                     FRAME_DataUpdateAndChangeOption@message:
   534                           	opt callstack 0
   535  000028                     FRAME_MapPosition@message:
   536                           	opt callstack 0
   537  000028                     FRAME_SoftwareVersion@message:
   538                           	opt callstack 0
   539  000028                     FRAME_AnalogValue@message:
   540                           	opt callstack 0
   541  000028                     FRAME_PrzypisanieDokarty@message:
   542                           	opt callstack 0
   543  000028                     FRAME_AdressOfNeighbors@message:
   544                           	opt callstack 0
   545  000028                     NVMalloc@size:
   546                           	opt callstack 0
   547  000028                     ReadfromEEPROM@Address:
   548                           	opt callstack 0
   549  000028                     WritetoEEPROM@Address:
   550                           	opt callstack 0
   551  000028                     ___awdiv@dividend:
   552                           	opt callstack 0
   553  000028                     ___lwdiv@dividend:
   554                           	opt callstack 0
   555  000028                     FLASH_Read@addr:
   556                           	opt callstack 0
   557  000028                     FLASH_Write@addr:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0x5
   561  000028                     	ds	2
   562  00002A                     ??_LED_Right:
   563  00002A                     ??_FRAME_DataUpdateAndChangeOption:
   564  00002A                     ??_FRAME_PrzypisanieDokarty:
   565  00002A                     CAN_GenID@frameID:
   566                           	opt callstack 0
   567  00002A                     WritetoEEPROM@Data:
   568                           	opt callstack 0
   569  00002A                     CAN_MoveBuffIntoFrame@Buf:
   570                           	opt callstack 0
   571  00002A                     LED_Left@b:
   572                           	opt callstack 0
   573  00002A                     FRAME_SensorExcitationStatus@message:
   574                           	opt callstack 0
   575  00002A                     FRAME_AccelerometerStatus@message:
   576                           	opt callstack 0
   577  00002A                     FRAME_AnalogValue@set:
   578                           	opt callstack 0
   579  00002A                     FRAME_AdressOfNeighbors@nrRamki:
   580                           	opt callstack 0
   581  00002A                     NVMalloc@location:
   582                           	opt callstack 0
   583  00002A                     NVMRead@dest:
   584                           	opt callstack 0
   585  00002A                     ___awdiv@divisor:
   586                           	opt callstack 0
   587  00002A                     ___lwdiv@divisor:
   588                           	opt callstack 0
   589                           
   590                           ; 2 bytes @ 0x7
   591  00002A                     	ds	1
   592  00002B                     ??_CAN_GenID:
   593  00002B                     FRAME_ExcitationMultiplier@i:
   594                           	opt callstack 0
   595  00002B                     NVMWrite@source:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0x8
   599  00002B                     	ds	1
   600  00002C                     ??_FRAME_SensorExcitationStatus:
   601  00002C                     ??_FRAME_AdressOfNeighbors:
   602  00002C                     ??_NVMalloc:
   603  00002C                     CAN_MoveBuffIntoFrame@i:
   604                           	opt callstack 0
   605  00002C                     LED_Control@color:
   606                           	opt callstack 0
   607  00002C                     ___awdiv@counter:
   608                           	opt callstack 0
   609  00002C                     ___lwdiv@counter:
   610                           	opt callstack 0
   611  00002C                     LED_Right@b:
   612                           	opt callstack 0
   613  00002C                     NVMRead@addr:
   614                           	opt callstack 0
   615  00002C                     FLASH_Write@val:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x9
   619  00002C                     	ds	1
   620  00002D                     ___awdiv@sign:
   621                           	opt callstack 0
   622  00002D                     CAN_SendFrame@message:
   623                           	opt callstack 0
   624  00002D                     NVMWrite@addr:
   625                           	opt callstack 0
   626  00002D                     ___lwdiv@quotient:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0xA
   630  00002D                     	ds	1
   631  00002E                     ??_FLASH_Write:
   632  00002E                     FRAME_SensorExcitationStatus@tru:
   633                           	opt callstack 0
   634  00002E                     NVMRead@count:
   635                           	opt callstack 0
   636  00002E                     ___awdiv@quotient:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0xB
   640  00002E                     	ds	1
   641  00002F                     ??_CAN_SendFrame:
   642  00002F                     LED_Light_Pos@pos:
   643                           	opt callstack 0
   644  00002F                     FRAME_Plot@message:
   645                           	opt callstack 0
   646  00002F                     NVMWrite@count:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0xC
   650  00002F                     	ds	1
   651  000030                     NVMInit@result:
   652                           	opt callstack 0
   653  000030                     CAN_TakeFrame@message:
   654                           	opt callstack 0
   655  000030                     FRAME_AdressOfNeighbors@kier:
   656                           	opt callstack 0
   657  000030                     FLASH_Write@GIEBitValue:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0xD
   661  000030                     	ds	1
   662  000031                     ??_FRAME_Plot:
   663  000031                     LED_Light_Pos@fulfillment:
   664                           	opt callstack 0
   665  000031                     FRAME_DeviceReset@message:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0xE
   669  000031                     	ds	1
   670  000032                     ??_CAN_TakeFrame:
   671  000032                     FLASH_Write@flashWrBufPtr:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0xF
   675  000032                     	ds	1
   676  000033                     LED_Light_Pos@color:
   677                           	opt callstack 0
   678                           
   679                           ; 1 bytes @ 0x10
   680  000033                     	ds	1
   681  000034                     CAN_TakeFrame@tempCON:
   682                           	opt callstack 0
   683  000034                     LED_Light_Pos@LED_array:
   684                           	opt callstack 0
   685  000034                     FRAME_HandleCanFrame@message:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x11
   689  000034                     	ds	1
   690  000035                     CAN_TakeFrame@k:
   691                           	opt callstack 0
   692                           
   693                           ; 1 bytes @ 0x12
   694  000035                     	ds	1
   695  000036                     ??_FRAME_HandleCanFrame:
   696  000036                     LED_Light_Pos@pos2:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x13
   700  000036                     	ds	2
   701  000038                     LED_Light_Pos@flage:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x15
   705  000038                     	ds	2
   706  00003A                     FRAME_HandleCanFrame@ident:
   707                           	opt callstack 0
   708                           
   709                           ; 2 bytes @ 0x17
   710  00003A                     	ds	2
   711  00003C                     FRAME_HandleCanFrame@identyfikator:
   712                           	opt callstack 0
   713                           
   714                           ; 1 bytes @ 0x19
   715  00003C                     	ds	1
   716  00003D                     main@adr:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x1A
   720  00003D                     	ds	2
   721                           
   722 ;;
   723 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   724 ;;
   725 ;; *************** function _main *****************
   726 ;; Defined at:
   727 ;;		line 100 in file "main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  adr             2   26[COMRAM] int 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels required when called:    9
   747 ;; This function calls:
   748 ;;		_FLASH_Read
   749 ;;		_FLASH_Write
   750 ;;		_INI_All
   751 ;;		_LED_Update
   752 ;;		_TMR1_Update_flag_Get
   753 ;;		_TMR1_Update_flag_Set
   754 ;;		_TRM_DataTransmition
   755 ;; This function is called by:
   756 ;;		Startup code after reset
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text0
   761  000F54                     __ptext0:
   762                           	opt callstack 0
   763  000F54                     _main:
   764                           	opt callstack 22
   765                           
   766                           ;main.c: 103:     int adr = FLASH_Read(0x200000);
   767                           
   768                           ;incstack = 0
   769  000F54  0E00               	movlw	0
   770  000F56  6E28               	movwf	FLASH_Read@addr,c
   771  000F58  0E00               	movlw	0
   772  000F5A  6E29               	movwf	FLASH_Read@addr+1,c
   773  000F5C  0E20               	movlw	32
   774  000F5E  6E2A               	movwf	FLASH_Read@addr+2,c
   775  000F60  0E00               	movlw	0
   776  000F62  6E2B               	movwf	FLASH_Read@addr+3,c
   777  000F64  ECF2  F00D         	call	_FLASH_Read	;wreg free
   778  000F68  C028  F03D         	movff	?_FLASH_Read,main@adr
   779  000F6C  C029  F03E         	movff	?_FLASH_Read+1,main@adr+1
   780                           
   781                           ;main.c: 104:      adr |= FLASH_Read(0x200001)<<8;
   782  000F70  0E01               	movlw	1
   783  000F72  6E28               	movwf	FLASH_Read@addr,c
   784  000F74  0E00               	movlw	0
   785  000F76  6E29               	movwf	FLASH_Read@addr+1,c
   786  000F78  0E20               	movlw	32
   787  000F7A  6E2A               	movwf	FLASH_Read@addr+2,c
   788  000F7C  0E00               	movlw	0
   789  000F7E  6E2B               	movwf	FLASH_Read@addr+3,c
   790  000F80  ECF2  F00D         	call	_FLASH_Read	;wreg free
   791  000F84  C028  F029         	movff	?_FLASH_Read,?_FLASH_Read+1
   792  000F88  6A28               	clrf	?_FLASH_Read,c
   793  000F8A  5028               	movf	?_FLASH_Read,w,c
   794  000F8C  123D               	iorwf	main@adr,f,c
   795  000F8E  5029               	movf	?_FLASH_Read+1,w,c
   796  000F90  123E               	iorwf	main@adr+1,f,c
   797                           
   798                           ;main.c: 108:      FLASH_Write(0x200000,0x76);
   799  000F92  0E00               	movlw	0
   800  000F94  6E28               	movwf	FLASH_Write@addr,c
   801  000F96  0E00               	movlw	0
   802  000F98  6E29               	movwf	FLASH_Write@addr+1,c
   803  000F9A  0E20               	movlw	32
   804  000F9C  6E2A               	movwf	FLASH_Write@addr+2,c
   805  000F9E  0E00               	movlw	0
   806  000FA0  6E2B               	movwf	FLASH_Write@addr+3,c
   807  000FA2  0E00               	movlw	0
   808  000FA4  6E2D               	movwf	FLASH_Write@val+1,c
   809  000FA6  0E76               	movlw	118
   810  000FA8  6E2C               	movwf	FLASH_Write@val,c
   811  000FAA  ECB9  F009         	call	_FLASH_Write	;wreg free
   812                           
   813                           ;main.c: 109:      FLASH_Write(0x200001,0x00);
   814  000FAE  0E01               	movlw	1
   815  000FB0  6E28               	movwf	FLASH_Write@addr,c
   816  000FB2  0E00               	movlw	0
   817  000FB4  6E29               	movwf	FLASH_Write@addr+1,c
   818  000FB6  0E20               	movlw	32
   819  000FB8  6E2A               	movwf	FLASH_Write@addr+2,c
   820  000FBA  0E00               	movlw	0
   821  000FBC  6E2B               	movwf	FLASH_Write@addr+3,c
   822  000FBE  0E00               	movlw	0
   823  000FC0  6E2D               	movwf	FLASH_Write@val+1,c
   824  000FC2  0E00               	movlw	0
   825  000FC4  6E2C               	movwf	FLASH_Write@val,c
   826  000FC6  ECB9  F009         	call	_FLASH_Write	;wreg free
   827                           
   828                           ;main.c: 111:      adr = FLASH_Read(0x200000);
   829  000FCA  0E00               	movlw	0
   830  000FCC  6E28               	movwf	FLASH_Read@addr,c
   831  000FCE  0E00               	movlw	0
   832  000FD0  6E29               	movwf	FLASH_Read@addr+1,c
   833  000FD2  0E20               	movlw	32
   834  000FD4  6E2A               	movwf	FLASH_Read@addr+2,c
   835  000FD6  0E00               	movlw	0
   836  000FD8  6E2B               	movwf	FLASH_Read@addr+3,c
   837  000FDA  ECF2  F00D         	call	_FLASH_Read	;wreg free
   838  000FDE  C028  F03D         	movff	?_FLASH_Read,main@adr
   839  000FE2  C029  F03E         	movff	?_FLASH_Read+1,main@adr+1
   840                           
   841                           ;main.c: 112:      adr |= FLASH_Read(0x200001)<<8;
   842  000FE6  0E01               	movlw	1
   843  000FE8  6E28               	movwf	FLASH_Read@addr,c
   844  000FEA  0E00               	movlw	0
   845  000FEC  6E29               	movwf	FLASH_Read@addr+1,c
   846  000FEE  0E20               	movlw	32
   847  000FF0  6E2A               	movwf	FLASH_Read@addr+2,c
   848  000FF2  0E00               	movlw	0
   849  000FF4  6E2B               	movwf	FLASH_Read@addr+3,c
   850  000FF6  ECF2  F00D         	call	_FLASH_Read	;wreg free
   851  000FFA  C028  F029         	movff	?_FLASH_Read,?_FLASH_Read+1
   852  000FFE  6A28               	clrf	?_FLASH_Read,c
   853  001000  5028               	movf	?_FLASH_Read,w,c
   854  001002  123D               	iorwf	main@adr,f,c
   855  001004  5029               	movf	?_FLASH_Read+1,w,c
   856  001006  123E               	iorwf	main@adr+1,f,c
   857                           
   858                           ;main.c: 114:     DaneCan.adresCAN = adr;
   859  001008  C03D  F003         	movff	main@adr,_DaneCan+2
   860  00100C  C03E  F004         	movff	main@adr+1,_DaneCan+3
   861                           
   862                           ;main.c: 115:     INI_All();
   863  001010  ECB6  F00D         	call	_INI_All	;wreg free
   864                           
   865                           ;main.c: 117:     RCON = 0xFF;
   866  001014  68D0               	setf	4048,c	;volatile
   867  001016                     l4835:
   868                           
   869                           ;main.c: 120:     {;main.c: 121:         if(DetectorLedRadar.Flags.obsluzWeWy == 1)
   870  001016  0100               	movlb	0	; () banked
   871  001018  B1CB               	btfsc	_DetectorLedRadar& (0+255),0,b
   872                           
   873                           ; BSR set to: 0
   874                           ;main.c: 122:         {;main.c: 123:             DetectorLedRadar.Flags.obsluzWeWy = 0;
   875  00101A  91CB               	bcf	_DetectorLedRadar& (0+255),0,b
   876                           
   877                           ; BSR set to: 0
   878                           ;main.c: 127:         if(TMR1_Update_flag_Get()==1)
   879  00101C  EC3E  F00E         	call	_TMR1_Update_flag_Get	;wreg free
   880  001020  0428               	decf	?_TMR1_Update_flag_Get,w,c
   881  001022  1029               	iorwf	?_TMR1_Update_flag_Get+1,w,c
   882  001024  A4D8               	btfss	status,2,c
   883  001026  D008               	goto	l4845
   884                           
   885                           ;main.c: 128:         {;main.c: 129:             LED_Update();
   886  001028  ECF7  F009         	call	_LED_Update	;wreg free
   887                           
   888                           ;main.c: 130:             TMR1_Update_flag_Set(0);
   889  00102C  0E00               	movlw	0
   890  00102E  6E29               	movwf	TMR1_Update_flag_Set@a+1,c
   891  001030  0E00               	movlw	0
   892  001032  6E28               	movwf	TMR1_Update_flag_Set@a,c
   893  001034  EC39  F00E         	call	_TMR1_Update_flag_Set	;wreg free
   894  001038                     l4845:
   895                           
   896                           ;main.c: 135:         TRM_DataTransmition();
   897  001038  EC1C  F00C         	call	_TRM_DataTransmition	;wreg free
   898  00103C  0004               	clrwdt		;# 
   899                           
   900                           ;main.c: 137:     }
   901  00103E  D7EB               	goto	l4835
   902  001040                     __end_of_main:
   903                           	opt callstack 0
   904                           
   905 ;; *************** function _TRM_DataTransmition *****************
   906 ;; Defined at:
   907 ;;		line 19 in file "TRM.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  canMessage     17    0[BANK0 ] struct .
   912 ;;  i               1    0        unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   923 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   925 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   926 ;;Total ram usage:       17 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    8
   929 ;; This function calls:
   930 ;;		_CAN_TakeFrame
   931 ;;		_FRAME_HandleCanFrame
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text1
   938  001838                     __ptext1:
   939                           	opt callstack 0
   940  001838                     _TRM_DataTransmition:
   941                           	opt callstack 22
   942                           
   943                           ;TRM.c: 21:     static BYTE weWyU8 = 0, czujnikWeWyU8 = 0;;TRM.c: 22:     BYTE i;;TRM.c:
      +                           23:     mID canMessage;;TRM.c: 26:     if(DaneCan.Flags.wyslijRamkeStanu)
   944                           
   945                           ;incstack = 0
   946  001838  A001               	btfss	_DaneCan,0,c
   947  00183A  D014               	goto	l4809
   948                           
   949                           ;TRM.c: 27:     {;TRM.c: 29:         canMessage.message_type = 0x02;
   950  00183C  0E02               	movlw	2
   951  00183E  0100               	movlb	0	; () banked
   952  001840  6FD3               	movwf	(TRM_DataTransmition@canMessage+1)& (0+255),b
   953                           
   954                           ;TRM.c: 30:         canMessage.id.Val = 0;
   955  001842  0E00               	movlw	0
   956  001844  6FD6               	movwf	(TRM_DataTransmition@canMessage+4)& (0+255),b
   957  001846  0E00               	movlw	0
   958  001848  6FD7               	movwf	(TRM_DataTransmition@canMessage+5)& (0+255),b
   959  00184A  0E00               	movlw	0
   960  00184C  6FD8               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   961  00184E  0E00               	movlw	0
   962  001850  6FD9               	movwf	(TRM_DataTransmition@canMessage+7)& (0+255),b
   963                           
   964                           ;TRM.c: 31:         canMessage.id.v[2] = 0x01 *4;
   965  001852  0E04               	movlw	4
   966  001854  6FD8               	movwf	(TRM_DataTransmition@canMessage+6)& (0+255),b
   967                           
   968                           ; BSR set to: 0
   969                           ;TRM.c: 32:         FRAME_HandleCanFrame(&canMessage);
   970  001856  0ED2               	movlw	low TRM_DataTransmition@canMessage
   971  001858  6E34               	movwf	FRAME_HandleCanFrame@message,c
   972  00185A  0E00               	movlw	high TRM_DataTransmition@canMessage
   973  00185C  6E35               	movwf	FRAME_HandleCanFrame@message+1,c
   974  00185E  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   975                           
   976                           ;TRM.c: 49:         DaneCan.Flags.wyslijRamkeStanu = 0;
   977  001862  9001               	bcf	_DaneCan,0,c
   978  001864                     l4809:
   979                           
   980                           ;TRM.c: 59:     if(CAN_TakeFrame(&canMessage))
   981  001864  0ED2               	movlw	low TRM_DataTransmition@canMessage
   982  001866  6E30               	movwf	CAN_TakeFrame@message,c
   983  001868  0E00               	movlw	high TRM_DataTransmition@canMessage
   984  00186A  6E31               	movwf	CAN_TakeFrame@message+1,c
   985  00186C  EC97  F001         	call	_CAN_TakeFrame	;wreg free
   986  001870  0900               	iorlw	0
   987  001872  B4D8               	btfsc	status,2,c
   988  001874  0012               	return	
   989                           
   990                           ;TRM.c: 64:         {;TRM.c: 66:             FRAME_HandleCanFrame(&canMessage);
   991  001876  0ED2               	movlw	low TRM_DataTransmition@canMessage
   992  001878  6E34               	movwf	FRAME_HandleCanFrame@message,c
   993  00187A  0E00               	movlw	high TRM_DataTransmition@canMessage
   994  00187C  6E35               	movwf	FRAME_HandleCanFrame@message+1,c
   995  00187E  ECD5  F002         	call	_FRAME_HandleCanFrame	;wreg free
   996                           
   997                           ;TRM.c: 67:         }
   998  001882  0012               	return		;funcret
   999  001884                     __end_of_TRM_DataTransmition:
  1000                           	opt callstack 0
  1001                           
  1002 ;; *************** function _FRAME_HandleCanFrame *****************
  1003 ;; Defined at:
  1004 ;;		line 685 in file "FRAME.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  message         2   17[COMRAM] PTR struct .
  1007 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  ident           2   23[COMRAM] unsigned short 
  1010 ;;  alfa            2    0        int 
  1011 ;;  identyfikato    1   25[COMRAM] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1022 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1024 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1025 ;;Total ram usage:        9 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    7
  1028 ;; This function calls:
  1029 ;;		_CAN_GenID
  1030 ;;		_CAN_SendFrame
  1031 ;;		_FRAME_AccelerometerStatus
  1032 ;;		_FRAME_AdressOfNeighbors
  1033 ;;		_FRAME_AnalogValue
  1034 ;;		_FRAME_AveragingTimes
  1035 ;;		_FRAME_AxisStatus
  1036 ;;		_FRAME_DeviceReset
  1037 ;;		_FRAME_ExcitationMultiplier
  1038 ;;		_FRAME_ExcitationValue
  1039 ;;		_FRAME_MapPosition
  1040 ;;		_FRAME_Plot
  1041 ;;		_FRAME_PrzypisanieDokarty
  1042 ;;		_FRAME_SensorExcitationStatus
  1043 ;;		_FRAME_SoftwareVersion
  1044 ;;		_LED_Error
  1045 ;;		___awdiv
  1046 ;; This function is called by:
  1047 ;;		_TRM_DataTransmition
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text2
  1052  0005AA                     __ptext2:
  1053                           	opt callstack 0
  1054  0005AA                     _FRAME_HandleCanFrame:
  1055                           	opt callstack 22
  1056                           
  1057                           ;FRAME.c: 685: void FRAME_HandleCanFrame(mID * message);FRAME.c: 686: {;FRAME.c: 687:   
      +                            BYTE identyfikator = (BYTE) message->id.v[2]/4;
  1058                           
  1059                           ;incstack = 0
  1060  0005AA  EE20 F006          	lfsr	2,6
  1061  0005AE  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1062  0005B0  26D9               	addwf	fsr2l,f,c
  1063  0005B2  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1064  0005B4  22DA               	addwfc	fsr2h,f,c
  1065  0005B6  50DF               	movf	indf2,w,c
  1066  0005B8  6E36               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1067  0005BA  5036               	movf	??_FRAME_HandleCanFrame,w,c
  1068  0005BC  6E28               	movwf	___awdiv@dividend,c
  1069  0005BE  6A29               	clrf	___awdiv@dividend+1,c
  1070  0005C0  0E00               	movlw	0
  1071  0005C2  6E2B               	movwf	___awdiv@divisor+1,c
  1072  0005C4  0E04               	movlw	4
  1073  0005C6  6E2A               	movwf	___awdiv@divisor,c
  1074  0005C8  EC77  F009         	call	___awdiv	;wreg free
  1075  0005CC  5028               	movf	?___awdiv,w,c
  1076  0005CE  6E3C               	movwf	FRAME_HandleCanFrame@identyfikator,c
  1077                           
  1078                           ;FRAME.c: 690:     if(identyfikator != 0x01)
  1079  0005D0  043C               	decf	FRAME_HandleCanFrame@identyfikator,w,c
  1080  0005D2  B4D8               	btfsc	status,2,c
  1081  0005D4  D074               	goto	l4759
  1082                           
  1083                           ;FRAME.c: 691:     {;FRAME.c: 692:         WORD ident = identyfikator;
  1084  0005D6  C03C  F03A         	movff	FRAME_HandleCanFrame@identyfikator,FRAME_HandleCanFrame@ident
  1085  0005DA  6A3B               	clrf	FRAME_HandleCanFrame@ident+1,c
  1086  0005DC  D070               	goto	l4759
  1087  0005DE                     l4729:
  1088                           
  1089                           ;FRAME.c: 699:             FRAME_SensorExcitationStatus(message);
  1090  0005DE  C034  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_SensorExcitationStatus@message
  1091  0005E2  C035  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_SensorExcitationStatus@message+1
  1092  0005E6  ECA5  F006         	call	_FRAME_SensorExcitationStatus	;wreg free
  1093                           
  1094                           ;FRAME.c: 700:             break;
  1095  0005EA  D09E               	goto	l4761
  1096  0005EC                     l4731:
  1097                           
  1098                           ;FRAME.c: 702:             FRAME_AccelerometerStatus(message);
  1099  0005EC  C034  F02A         	movff	FRAME_HandleCanFrame@message,FRAME_AccelerometerStatus@message
  1100  0005F0  C035  F02B         	movff	FRAME_HandleCanFrame@message+1,FRAME_AccelerometerStatus@message+1
  1101  0005F4  EC70  F00A         	call	_FRAME_AccelerometerStatus	;wreg free
  1102                           
  1103                           ;FRAME.c: 703:             break;
  1104  0005F8  D097               	goto	l4761
  1105  0005FA                     l4733:
  1106                           
  1107                           ;FRAME.c: 705:             FRAME_ExcitationValue(message);
  1108  0005FA  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationValue@message
  1109  0005FE  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationValue@message+1
  1110  000602  ECA6  F00C         	call	_FRAME_ExcitationValue	;wreg free
  1111                           
  1112                           ;FRAME.c: 706:             break;
  1113  000606  D090               	goto	l4761
  1114  000608                     l4735:
  1115                           
  1116                           ;FRAME.c: 708:             FRAME_ExcitationMultiplier(message);
  1117  000608  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_ExcitationMultiplier@message
  1118  00060C  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_ExcitationMultiplier@message+1
  1119  000610  ECF5  F00B         	call	_FRAME_ExcitationMultiplier	;wreg free
  1120                           
  1121                           ;FRAME.c: 709:             break;
  1122  000614  D089               	goto	l4761
  1123  000616                     l4737:
  1124                           
  1125                           ;FRAME.c: 711:             FRAME_AveragingTimes(message);
  1126  000616  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AveragingTimes@message
  1127  00061A  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AveragingTimes@message+1
  1128  00061E  ECF7  F00C         	call	_FRAME_AveragingTimes	;wreg free
  1129                           
  1130                           ;FRAME.c: 712:             break;
  1131  000622  D082               	goto	l4761
  1132  000624                     l4739:
  1133                           
  1134                           ;FRAME.c: 714:             FRAME_AxisStatus(message);
  1135  000624  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AxisStatus@message
  1136  000628  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AxisStatus@message+1
  1137  00062C  ECDC  F00C         	call	_FRAME_AxisStatus	;wreg free
  1138                           
  1139                           ;FRAME.c: 715:             break;
  1140  000630  D07B               	goto	l4761
  1141  000632                     l4741:
  1142                           
  1143                           ;FRAME.c: 717:             FRAME_DeviceReset(message);
  1144  000632  C034  F031         	movff	FRAME_HandleCanFrame@message,FRAME_DeviceReset@message
  1145  000636  C035  F032         	movff	FRAME_HandleCanFrame@message+1,FRAME_DeviceReset@message+1
  1146  00063A  EC01  F006         	call	_FRAME_DeviceReset	;wreg free
  1147                           
  1148                           ;FRAME.c: 718:             break;
  1149  00063E  D074               	goto	l4761
  1150  000640                     l4743:
  1151                           
  1152                           ;FRAME.c: 720:             FRAME_Plot(message);
  1153  000640  C034  F02F         	movff	FRAME_HandleCanFrame@message,FRAME_Plot@message
  1154  000644  C035  F030         	movff	FRAME_HandleCanFrame@message+1,FRAME_Plot@message+1
  1155  000648  ECA0  F00B         	call	_FRAME_Plot	;wreg free
  1156                           
  1157                           ;FRAME.c: 721:             break;
  1158  00064C  D06D               	goto	l4761
  1159  00064E                     l4745:
  1160                           
  1161                           ;FRAME.c: 723:             FRAME_MapPosition(message);
  1162  00064E  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_MapPosition@message
  1163  000652  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_MapPosition@message+1
  1164  000656  EC55  F00E         	call	_FRAME_MapPosition	;wreg free
  1165                           
  1166                           ;FRAME.c: 724:             break;
  1167  00065A  D066               	goto	l4761
  1168  00065C                     l4747:
  1169                           
  1170                           ;FRAME.c: 726:             FRAME_SoftwareVersion(message);
  1171  00065C  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_SoftwareVersion@message
  1172  000660  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_SoftwareVersion@message+1
  1173  000664  ECE5  F00A         	call	_FRAME_SoftwareVersion	;wreg free
  1174                           
  1175                           ;FRAME.c: 727:             break;
  1176  000668  D05F               	goto	l4761
  1177  00066A                     l4749:
  1178                           
  1179                           ;FRAME.c: 730:             FRAME_AnalogValue(message, identyfikator - 0x0C);
  1180  00066A  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AnalogValue@message
  1181  00066E  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AnalogValue@message+1
  1182  000672  0EF4               	movlw	244
  1183  000674  243C               	addwf	FRAME_HandleCanFrame@identyfikator,w,c
  1184  000676  6E2A               	movwf	FRAME_AnalogValue@set,c
  1185  000678  6A2B               	clrf	FRAME_AnalogValue@set+1,c
  1186  00067A  0EFF               	movlw	255
  1187  00067C  222B               	addwfc	FRAME_AnalogValue@set+1,f,c
  1188  00067E  EC56  F00E         	call	_FRAME_AnalogValue	;wreg free
  1189                           
  1190                           ;FRAME.c: 731:             break;
  1191  000682  D052               	goto	l4761
  1192  000684                     l4751:
  1193                           
  1194                           ;FRAME.c: 733:             FRAME_PrzypisanieDokarty(message);
  1195  000684  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_PrzypisanieDokarty@message
  1196  000688  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_PrzypisanieDokarty@message+1
  1197  00068C  ECDD  F008         	call	_FRAME_PrzypisanieDokarty	;wreg free
  1198                           
  1199                           ;FRAME.c: 734:             break;
  1200  000690  D04B               	goto	l4761
  1201  000692                     l4753:
  1202                           
  1203                           ;FRAME.c: 736:             FRAME_AdressOfNeighbors(message,0x10);
  1204  000692  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1205  000696  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1206  00069A  0E00               	movlw	0
  1207  00069C  6E2B               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1208  00069E  0E10               	movlw	16
  1209  0006A0  6E2A               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1210  0006A2  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1211                           
  1212                           ;FRAME.c: 737:             break;
  1213  0006A6  D040               	goto	l4761
  1214  0006A8                     l4755:
  1215                           
  1216                           ;FRAME.c: 739:             FRAME_AdressOfNeighbors(message,0x11);
  1217  0006A8  C034  F028         	movff	FRAME_HandleCanFrame@message,FRAME_AdressOfNeighbors@message
  1218  0006AC  C035  F029         	movff	FRAME_HandleCanFrame@message+1,FRAME_AdressOfNeighbors@message+1
  1219  0006B0  0E00               	movlw	0
  1220  0006B2  6E2B               	movwf	FRAME_AdressOfNeighbors@nrRamki+1,c
  1221  0006B4  0E11               	movlw	17
  1222  0006B6  6E2A               	movwf	FRAME_AdressOfNeighbors@nrRamki,c
  1223  0006B8  EC31  F000         	call	_FRAME_AdressOfNeighbors	;wreg free
  1224                           
  1225                           ;FRAME.c: 740:             break;
  1226  0006BC  D035               	goto	l4761
  1227  0006BE                     l4759:
  1228  0006BE  503C               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1229  0006C0  6E36               	movwf	??_FRAME_HandleCanFrame& (0+255),c
  1230  0006C2  6A37               	clrf	(??_FRAME_HandleCanFrame+1)& (0+255),c
  1231                           
  1232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1233                           ; Switch size 1, requested type "simple"
  1234                           ; Number of cases is 1, Range of values is 0 to 0
  1235                           ; switch strategies available:
  1236                           ; Name         Instructions Cycles
  1237                           ; simple_byte            4     3 (average)
  1238                           ;	Chosen strategy is simple_byte
  1239  0006C4  5037               	movf	??_FRAME_HandleCanFrame+1,w,c
  1240  0006C6  0A00               	xorlw	0	; case 0
  1241  0006C8  A4D8               	btfss	status,2,c
  1242  0006CA  D02E               	goto	l4761
  1243                           
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 15, Range of values is 1 to 17
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte           46    24 (average)
  1249                           ;	Chosen strategy is simple_byte
  1250  0006CC  5036               	movf	??_FRAME_HandleCanFrame,w,c
  1251  0006CE  0A01               	xorlw	1	; case 1
  1252  0006D0  B4D8               	btfsc	status,2,c
  1253  0006D2  D785               	goto	l4729
  1254  0006D4  0A03               	xorlw	3	; case 2
  1255  0006D6  B4D8               	btfsc	status,2,c
  1256  0006D8  D789               	goto	l4731
  1257  0006DA  0A01               	xorlw	1	; case 3
  1258  0006DC  B4D8               	btfsc	status,2,c
  1259  0006DE  D78D               	goto	l4733
  1260  0006E0  0A07               	xorlw	7	; case 4
  1261  0006E2  B4D8               	btfsc	status,2,c
  1262  0006E4  D791               	goto	l4735
  1263  0006E6  0A01               	xorlw	1	; case 5
  1264  0006E8  B4D8               	btfsc	status,2,c
  1265  0006EA  D795               	goto	l4737
  1266  0006EC  0A03               	xorlw	3	; case 6
  1267  0006EE  B4D8               	btfsc	status,2,c
  1268  0006F0  D799               	goto	l4739
  1269  0006F2  0A01               	xorlw	1	; case 7
  1270  0006F4  B4D8               	btfsc	status,2,c
  1271  0006F6  D79D               	goto	l4741
  1272  0006F8  0A0E               	xorlw	14	; case 9
  1273  0006FA  B4D8               	btfsc	status,2,c
  1274  0006FC  D7A1               	goto	l4743
  1275  0006FE  0A03               	xorlw	3	; case 10
  1276  000700  B4D8               	btfsc	status,2,c
  1277  000702  D7A5               	goto	l4745
  1278  000704  0A01               	xorlw	1	; case 11
  1279  000706  B4D8               	btfsc	status,2,c
  1280  000708  D7A9               	goto	l4747
  1281  00070A  0A07               	xorlw	7	; case 12
  1282  00070C  B4D8               	btfsc	status,2,c
  1283  00070E  D7AD               	goto	l4749
  1284  000710  0A01               	xorlw	1	; case 13
  1285  000712  B4D8               	btfsc	status,2,c
  1286  000714  D7AA               	goto	l4749
  1287  000716  0A02               	xorlw	2	; case 15
  1288  000718  B4D8               	btfsc	status,2,c
  1289  00071A  D7B4               	goto	l4751
  1290  00071C  0A1F               	xorlw	31	; case 16
  1291  00071E  B4D8               	btfsc	status,2,c
  1292  000720  D7B8               	goto	l4753
  1293  000722  0A01               	xorlw	1	; case 17
  1294  000724  B4D8               	btfsc	status,2,c
  1295  000726  D7C0               	goto	l4755
  1296  000728                     l4761:
  1297                           
  1298                           ;FRAME.c: 749:     if(message->message_type == 0x02)
  1299  000728  EE20 F001          	lfsr	2,1
  1300  00072C  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1301  00072E  26D9               	addwf	fsr2l,f,c
  1302  000730  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1303  000732  22DA               	addwfc	fsr2h,f,c
  1304  000734  0E02               	movlw	2
  1305  000736  18DE               	xorwf	postinc2,w,c
  1306  000738  A4D8               	btfss	status,2,c
  1307  00073A  0012               	return	
  1308                           
  1309                           ;FRAME.c: 750:     {;FRAME.c: 752:         message->frame_type = 0x03;
  1310  00073C  EE20 F002          	lfsr	2,2
  1311  000740  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1312  000742  26D9               	addwf	fsr2l,f,c
  1313  000744  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1314  000746  22DA               	addwfc	fsr2h,f,c
  1315  000748  0E03               	movlw	3
  1316  00074A  6EDF               	movwf	indf2,c
  1317                           
  1318                           ;FRAME.c: 753:         message->message_type = 0x01;
  1319  00074C  EE20 F001          	lfsr	2,1
  1320  000750  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1321  000752  26D9               	addwf	fsr2l,f,c
  1322  000754  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1323  000756  22DA               	addwfc	fsr2h,f,c
  1324  000758  0E01               	movlw	1
  1325  00075A  6EDF               	movwf	indf2,c
  1326                           
  1327                           ;FRAME.c: 754:         message->id.Val = 0;
  1328  00075C  EE20 F004          	lfsr	2,4
  1329  000760  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1330  000762  26D9               	addwf	fsr2l,f,c
  1331  000764  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1332  000766  22DA               	addwfc	fsr2h,f,c
  1333  000768  6ADE               	clrf	postinc2,c
  1334  00076A  6ADE               	clrf	postinc2,c
  1335  00076C  6ADE               	clrf	postinc2,c
  1336  00076E  6ADD               	clrf	postdec2,c
  1337                           
  1338                           ;FRAME.c: 756:         message->id.v[2] = identyfikator*4;
  1339  000770  503C               	movf	FRAME_HandleCanFrame@identyfikator,w,c
  1340  000772  0D04               	mullw	4
  1341  000774  EE20 F006          	lfsr	2,6
  1342  000778  5034               	movf	FRAME_HandleCanFrame@message,w,c
  1343  00077A  26D9               	addwf	fsr2l,f,c
  1344  00077C  5035               	movf	FRAME_HandleCanFrame@message+1,w,c
  1345  00077E  22DA               	addwfc	fsr2h,f,c
  1346  000780  CFF3 FFDF          	movff	prodl,indf2
  1347                           
  1348                           ;FRAME.c: 757:         CAN_GenID(message,identyfikator);
  1349  000784  C034  F028         	movff	FRAME_HandleCanFrame@message,CAN_GenID@message
  1350  000788  C035  F029         	movff	FRAME_HandleCanFrame@message+1,CAN_GenID@message+1
  1351  00078C  C03C  F02A         	movff	FRAME_HandleCanFrame@identyfikator,CAN_GenID@frameID
  1352  000790  EC34  F00A         	call	_CAN_GenID	;wreg free
  1353                           
  1354                           ;FRAME.c: 758:         CAN_SendFrame(message);
  1355  000794  C034  F02D         	movff	FRAME_HandleCanFrame@message,CAN_SendFrame@message
  1356  000798  C035  F02E         	movff	FRAME_HandleCanFrame@message+1,CAN_SendFrame@message+1
  1357  00079C  EC9F  F004         	call	_CAN_SendFrame	;wreg free
  1358                           
  1359                           ;FRAME.c: 769:        while(RXB0CONbits.FILHIT3)
  1360  0007A0  D004               	goto	l708
  1361  0007A2                     l709:
  1362                           
  1363                           ;FRAME.c: 770:        {;FRAME.c: 771:            if(TXB0CONbits.TXERR == 1){
  1364  0007A2  010F               	movlb	15	; () banked
  1365  0007A4  B940               	btfsc	64,4,b	;volatile
  1366                           
  1367                           ; BSR set to: 15
  1368                           ;FRAME.c: 772:                LED_Error();
  1369  0007A6  ECD7  F00D         	call	_LED_Error	;wreg free
  1370  0007AA                     l708:
  1371                           
  1372                           ;FRAME.c: 769:        while(RXB0CONbits.FILHIT3)
  1373  0007AA  A660               	btfss	3936,3,c	;volatile
  1374  0007AC  0012               	return	
  1375  0007AE  D7F9               	goto	l709
  1376  0007B0                     __end_of_FRAME_HandleCanFrame:
  1377                           	opt callstack 0
  1378                           
  1379 ;; *************** function _LED_Error *****************
  1380 ;; Defined at:
  1381 ;;		line 37 in file "LED.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  2  366[None  ] unsigned int 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    4
  1402 ;; This function calls:
  1403 ;;		_LED_Control
  1404 ;; This function is called by:
  1405 ;;		_FRAME_HandleCanFrame
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text3
  1410  001BAE                     __ptext3:
  1411                           	opt callstack 0
  1412  001BAE                     _LED_Error:
  1413                           	opt callstack 24
  1414                           
  1415                           ;LED.c: 39:     LED_Control(RED,0b1010101010);
  1416                           
  1417                           ;incstack = 0
  1418  001BAE  0E02               	movlw	2
  1419  001BB0  6E29               	movwf	LED_Control@diode+1,c
  1420  001BB2  0EAA               	movlw	170
  1421  001BB4  6E28               	movwf	LED_Control@diode,c
  1422  001BB6  0E00               	movlw	0
  1423  001BB8  EC58  F005         	call	_LED_Control
  1424                           
  1425                           ;LED.c: 40:     LED_Control(GREEN,0b0000000000);
  1426  001BBC  0E00               	movlw	0
  1427  001BBE  6E29               	movwf	LED_Control@diode+1,c
  1428  001BC0  0E00               	movlw	0
  1429  001BC2  6E28               	movwf	LED_Control@diode,c
  1430  001BC4  0E01               	movlw	1
  1431  001BC6  EC58  F005         	call	_LED_Control
  1432  001BCA  0012               	return		;funcret
  1433  001BCC                     __end_of_LED_Error:
  1434                           	opt callstack 0
  1435                           
  1436 ;; *************** function _FRAME_SoftwareVersion *****************
  1437 ;; Defined at:
  1438 ;;		line 519 in file "FRAME.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  message         2    5[COMRAM] PTR struct .
  1441 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    3
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_FRAME_HandleCanFrame
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text4
  1468  0015CA                     __ptext4:
  1469                           	opt callstack 0
  1470  0015CA                     _FRAME_SoftwareVersion:
  1471                           	opt callstack 25
  1472                           
  1473                           ;FRAME.c: 519: static void FRAME_SoftwareVersion(mID *message);FRAME.c: 520: {;FRAME.c: 
      +                          522:     if(message->message_type == 0x02)
  1474                           
  1475                           ;incstack = 0
  1476  0015CA  EE20 F001          	lfsr	2,1
  1477  0015CE  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1478  0015D0  26D9               	addwf	fsr2l,f,c
  1479  0015D2  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1480  0015D4  22DA               	addwfc	fsr2h,f,c
  1481  0015D6  0E02               	movlw	2
  1482  0015D8  18DE               	xorwf	postinc2,w,c
  1483  0015DA  A4D8               	btfss	status,2,c
  1484  0015DC  0012               	return	
  1485                           
  1486                           ;FRAME.c: 523:     {;FRAME.c: 524:         message->data_length = 4;
  1487  0015DE  EE20 F010          	lfsr	2,16
  1488  0015E2  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1489  0015E4  26D9               	addwf	fsr2l,f,c
  1490  0015E6  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1491  0015E8  22DA               	addwfc	fsr2h,f,c
  1492  0015EA  0E04               	movlw	4
  1493  0015EC  6EDF               	movwf	indf2,c
  1494                           
  1495                           ;FRAME.c: 525:         message->data[0] = (unsigned char)(Dane->wersjaOprogramowaniaU16 
      +                          >> 8);
  1496  0015EE  EE20 F008          	lfsr	2,8
  1497  0015F2  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1498  0015F4  26D9               	addwf	fsr2l,f,c
  1499  0015F6  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1500  0015F8  22DA               	addwfc	fsr2h,f,c
  1501  0015FA  5005               	movf	5,w,c
  1502  0015FC  6EDF               	movwf	indf2,c
  1503                           
  1504                           ;FRAME.c: 526:         message->data[1] = (unsigned char)Dane->wersjaOprogramowaniaU16;
  1505  0015FE  EE20 F009          	lfsr	2,9
  1506  001602  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1507  001604  26D9               	addwf	fsr2l,f,c
  1508  001606  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1509  001608  22DA               	addwfc	fsr2h,f,c
  1510  00160A  C004 FFDF          	movff	4,indf2
  1511                           
  1512                           ;FRAME.c: 527:         message->data[2] = (unsigned char)(Dane->wersjaSprzetuU16 >> 8);
  1513  00160E  EE20 F00A          	lfsr	2,10
  1514  001612  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1515  001614  26D9               	addwf	fsr2l,f,c
  1516  001616  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1517  001618  22DA               	addwfc	fsr2h,f,c
  1518  00161A  500B               	movf	11,w,c
  1519  00161C  6EDF               	movwf	indf2,c
  1520                           
  1521                           ;FRAME.c: 528:         message->data[3] = (unsigned char)Dane->wersjaSprzetuU16;
  1522  00161E  EE20 F00B          	lfsr	2,11
  1523  001622  5028               	movf	FRAME_SoftwareVersion@message,w,c
  1524  001624  26D9               	addwf	fsr2l,f,c
  1525  001626  5029               	movf	FRAME_SoftwareVersion@message+1,w,c
  1526  001628  22DA               	addwfc	fsr2h,f,c
  1527  00162A  C00A FFDF          	movff	10,indf2
  1528                           
  1529                           ;FRAME.c: 529:     }
  1530  00162E  0012               	return		;funcret
  1531  001630                     __end_of_FRAME_SoftwareVersion:
  1532                           	opt callstack 0
  1533                           
  1534 ;; *************** function _FRAME_SensorExcitationStatus *****************
  1535 ;; Defined at:
  1536 ;;		line 48 in file "FRAME.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  message         2    7[COMRAM] PTR struct .
  1539 ;;		 -> TRM_DataTransmition@canMessage(17), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  tru             2   11[COMRAM] unsigned int 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1554 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1555 ;;Total ram usage:        6 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    4
  1558 ;; This function calls:
  1559 ;;		_IsInNeighbors
  1560 ;;		_LOCK_Get
  1561 ;;		_LOCK_Set
  1562 ;;		_MOC_Aktualna_Temperatura
  1563 ;;		_MOC_Frame_Counter
  1564 ;;		_MOC_NOTWORK
  1565 ;;		_MOC_Wynikowa_wartosc_roznicowa
  1566 ;; This function is called by:
  1567 ;;		_FRAME_HandleCanFrame
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text5
  1572  000D4A                     __ptext5:
  1573                           	opt callstack 0
  1574  000D4A                     _FRAME_SensorExcitationStatus:
  1575                           	opt callstack 24
  1576                           
  1577                           ;FRAME.c: 48: static void FRAME_SensorExcitationStatus(mID *message);FRAME.c: 49: {;FRAM
      +                          E.c: 51:     static UINT statwect = 0b00000000;;FRAME.c: 52:     if(message->message_typ
      +                          e == 0x02)
  1578                           
  1579                           ;incstack = 0
  1580  000D4A  EE20 F001          	lfsr	2,1
  1581  000D4E  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1582  000D50  26D9               	addwf	fsr2l,f,c
  1583  000D52  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1584  000D54  22DA               	addwfc	fsr2h,f,c
  1585  000D56  0E02               	movlw	2
  1586  000D58  18DE               	xorwf	postinc2,w,c
  1587  000D5A  A4D8               	btfss	status,2,c
  1588  000D5C  D047               	goto	l4417
  1589                           
  1590                           ;FRAME.c: 53:     {;FRAME.c: 54:         message->data_length = 6;
  1591  000D5E  EE20 F010          	lfsr	2,16
  1592  000D62  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1593  000D64  26D9               	addwf	fsr2l,f,c
  1594  000D66  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1595  000D68  22DA               	addwfc	fsr2h,f,c
  1596  000D6A  0E06               	movlw	6
  1597  000D6C  6EDF               	movwf	indf2,c
  1598                           
  1599                           ;FRAME.c: 60:         message->data[0] = LOCK_Get();
  1600  000D6E  EE20 F008          	lfsr	2,8
  1601  000D72  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1602  000D74  26D9               	addwf	fsr2l,f,c
  1603  000D76  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1604  000D78  22DA               	addwfc	fsr2h,f,c
  1605  000D7A  EC53  F00E         	call	_LOCK_Get	;wreg free
  1606  000D7E  6EDF               	movwf	indf2,c
  1607                           
  1608                           ;FRAME.c: 61:         message->data[1] = MOC_Wynikowa_wartosc_roznicowa() >> 8 ;
  1609  000D80  EE20 F009          	lfsr	2,9
  1610  000D84  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1611  000D86  26D9               	addwf	fsr2l,f,c
  1612  000D88  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1613  000D8A  22DA               	addwfc	fsr2h,f,c
  1614  000D8C  EC1B  F00E         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1615  000D90  C029  F028         	movff	?_MOC_Wynikowa_wartosc_roznicowa+1,?_MOC_Wynikowa_wartosc_roznicowa
  1616  000D94  6A29               	clrf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1617  000D96  5028               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1618  000D98  6EDF               	movwf	indf2,c
  1619                           
  1620                           ;FRAME.c: 62:         message->data[2] = MOC_Wynikowa_wartosc_roznicowa() & 0x00FF;
  1621  000D9A  EE20 F00A          	lfsr	2,10
  1622  000D9E  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1623  000DA0  26D9               	addwf	fsr2l,f,c
  1624  000DA2  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1625  000DA4  22DA               	addwfc	fsr2h,f,c
  1626  000DA6  EC1B  F00E         	call	_MOC_Wynikowa_wartosc_roznicowa	;wreg free
  1627  000DAA  5028               	movf	?_MOC_Wynikowa_wartosc_roznicowa,w,c
  1628  000DAC  6EDF               	movwf	indf2,c
  1629                           
  1630                           ;FRAME.c: 63:         message->data[3] = MOC_Frame_Counter();
  1631  000DAE  EE20 F00B          	lfsr	2,11
  1632  000DB2  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1633  000DB4  26D9               	addwf	fsr2l,f,c
  1634  000DB6  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1635  000DB8  22DA               	addwfc	fsr2h,f,c
  1636  000DBA  EC06  F00E         	call	_MOC_Frame_Counter	;wreg free
  1637  000DBE  5028               	movf	?_MOC_Frame_Counter,w,c
  1638  000DC0  6EDF               	movwf	indf2,c
  1639                           
  1640                           ;FRAME.c: 64:         message->data[4] = MOC_Aktualna_Temperatura();
  1641  000DC2  EE20 F00C          	lfsr	2,12
  1642  000DC6  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1643  000DC8  26D9               	addwf	fsr2l,f,c
  1644  000DCA  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1645  000DCC  22DA               	addwfc	fsr2h,f,c
  1646  000DCE  EC20  F00E         	call	_MOC_Aktualna_Temperatura	;wreg free
  1647  000DD2  5028               	movf	?_MOC_Aktualna_Temperatura,w,c
  1648  000DD4  6EDF               	movwf	indf2,c
  1649                           
  1650                           ;FRAME.c: 65:         message->data[5] = MOC_NOTWORK();
  1651  000DD6  EE20 F00D          	lfsr	2,13
  1652  000DDA  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1653  000DDC  26D9               	addwf	fsr2l,f,c
  1654  000DDE  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1655  000DE0  22DA               	addwfc	fsr2h,f,c
  1656  000DE2  EC48  F00E         	call	_MOC_NOTWORK	;wreg free
  1657  000DE6  5028               	movf	?_MOC_NOTWORK,w,c
  1658  000DE8  6EDF               	movwf	indf2,c
  1659                           
  1660                           ;FRAME.c: 75:     }
  1661  000DEA  0012               	return	
  1662  000DEC                     l4417:
  1663                           
  1664                           ;FRAME.c: 77:     {;FRAME.c: 79:         UINT tru = IsInNeighbors(message->id.w[0]);
  1665  000DEC  EE20 F004          	lfsr	2,4
  1666  000DF0  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1667  000DF2  26D9               	addwf	fsr2l,f,c
  1668  000DF4  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1669  000DF6  22DA               	addwfc	fsr2h,f,c
  1670  000DF8  CFDE F028          	movff	postinc2,IsInNeighbors@message_adress
  1671  000DFC  CFDD F029          	movff	postdec2,IsInNeighbors@message_adress+1
  1672  000E00  EC20  F008         	call	_IsInNeighbors	;wreg free
  1673  000E04  C028  F02E         	movff	?_IsInNeighbors,FRAME_SensorExcitationStatus@tru
  1674  000E08  C029  F02F         	movff	?_IsInNeighbors+1,FRAME_SensorExcitationStatus@tru+1
  1675                           
  1676                           ;FRAME.c: 82:         if(message->data[0]==0)
  1677  000E0C  EE20 F008          	lfsr	2,8
  1678  000E10  502A               	movf	FRAME_SensorExcitationStatus@message,w,c
  1679  000E12  26D9               	addwf	fsr2l,f,c
  1680  000E14  502B               	movf	FRAME_SensorExcitationStatus@message+1,w,c
  1681  000E16  22DA               	addwfc	fsr2h,f,c
  1682  000E18  50DF               	movf	indf2,w,c
  1683  000E1A  A4D8               	btfss	status,2,c
  1684  000E1C  D00A               	goto	l4423
  1685                           
  1686                           ;FRAME.c: 83:         {;FRAME.c: 85:             statwect = statwect &( ~tru );
  1687  000E1E  1C2E               	comf	FRAME_SensorExcitationStatus@tru,w,c
  1688  000E20  6E2C               	movwf	??_FRAME_SensorExcitationStatus& (0+255),c
  1689  000E22  1C2F               	comf	FRAME_SensorExcitationStatus@tru+1,w,c
  1690  000E24  6E2D               	movwf	(??_FRAME_SensorExcitationStatus+1)& (0+255),c
  1691  000E26  5007               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1692  000E28  142C               	andwf	??_FRAME_SensorExcitationStatus,w,c
  1693  000E2A  6E07               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1694  000E2C  5008               	movf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1695  000E2E  142D               	andwf	??_FRAME_SensorExcitationStatus+1,w,c
  1696  000E30  D005               	goto	L1
  1697  000E32                     l4423:
  1698                           
  1699                           ;FRAME.c: 88:         {;FRAME.c: 89:             statwect = statwect| tru;
  1700  000E32  502E               	movf	FRAME_SensorExcitationStatus@tru,w,c
  1701  000E34  1007               	iorwf	FRAME_SensorExcitationStatus@statwect,w,c
  1702  000E36  6E07               	movwf	FRAME_SensorExcitationStatus@statwect,c
  1703  000E38  502F               	movf	FRAME_SensorExcitationStatus@tru+1,w,c
  1704  000E3A  1008               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1705  000E3C                     L1:
  1706  000E3C  6E08               	movwf	FRAME_SensorExcitationStatus@statwect+1,c
  1707                           
  1708                           ;FRAME.c: 92:         if(statwect>0)
  1709                           
  1710                           ;FRAME.c: 90:         }
  1711  000E3E  5007               	movf	FRAME_SensorExcitationStatus@statwect,w,c
  1712  000E40  1008               	iorwf	FRAME_SensorExcitationStatus@statwect+1,w,c
  1713  000E42  B4D8               	btfsc	status,2,c
  1714  000E44  D004               	goto	l4427
  1715                           
  1716                           ;FRAME.c: 93:         {;FRAME.c: 94:         LOCK_Set(1);
  1717  000E46  0E01               	movlw	1
  1718  000E48  EC4C  F00E         	call	_LOCK_Set
  1719                           
  1720                           ;FRAME.c: 95:         }
  1721  000E4C  0012               	return	
  1722  000E4E                     l4427:
  1723                           
  1724                           ;FRAME.c: 97:         {;FRAME.c: 98:         LOCK_Set(0);
  1725  000E4E  0E00               	movlw	0
  1726  000E50  EC4C  F00E         	call	_LOCK_Set
  1727  000E54  0012               	return		;funcret
  1728  000E56                     __end_of_FRAME_SensorExcitationStatus:
  1729                           	opt callstack 0
  1730                           
  1731 ;; *************** function _MOC_Wynikowa_wartosc_roznicowa *****************
  1732 ;; Defined at:
  1733 ;;		line 33 in file "MOC_Funct.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2    5[COMRAM] unsigned int 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    3
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_FRAME_SensorExcitationStatus
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text6
  1762  001C36                     __ptext6:
  1763                           	opt callstack 0
  1764  001C36                     _MOC_Wynikowa_wartosc_roznicowa:
  1765                           	opt callstack 24
  1766                           
  1767                           ;MOC_Funct.c: 35:     return 0x0220;
  1768                           
  1769                           ;incstack = 0
  1770  001C36  0E02               	movlw	2
  1771  001C38  6E29               	movwf	?_MOC_Wynikowa_wartosc_roznicowa+1,c
  1772  001C3A  0E20               	movlw	32
  1773  001C3C  6E28               	movwf	?_MOC_Wynikowa_wartosc_roznicowa,c
  1774  001C3E  0012               	return		;funcret
  1775  001C40                     __end_of_MOC_Wynikowa_wartosc_roznicowa:
  1776                           	opt callstack 0
  1777                           
  1778 ;; *************** function _MOC_NOTWORK *****************
  1779 ;; Defined at:
  1780 ;;		line 47 in file "MOC_Funct.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2    5[COMRAM] unsigned int 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;Total ram usage:        2 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    3
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_FRAME_SensorExcitationStatus
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text7
  1809  001C90                     __ptext7:
  1810                           	opt callstack 0
  1811  001C90                     _MOC_NOTWORK:
  1812                           	opt callstack 24
  1813                           
  1814                           ;MOC_Funct.c: 49:     return 0xFF;
  1815                           
  1816                           ;incstack = 0
  1817  001C90  0E00               	movlw	0
  1818  001C92  6E29               	movwf	?_MOC_NOTWORK+1,c
  1819  001C94  6828               	setf	?_MOC_NOTWORK,c
  1820  001C96  0012               	return		;funcret
  1821  001C98                     __end_of_MOC_NOTWORK:
  1822                           	opt callstack 0
  1823                           
  1824 ;; *************** function _MOC_Frame_Counter *****************
  1825 ;; Defined at:
  1826 ;;		line 38 in file "MOC_Funct.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  2    5[COMRAM] unsigned int 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;Total ram usage:        2 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    3
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_FRAME_SensorExcitationStatus
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text8
  1855  001C0C                     __ptext8:
  1856                           	opt callstack 0
  1857  001C0C                     _MOC_Frame_Counter:
  1858                           	opt callstack 24
  1859                           
  1860                           ;MOC_Funct.c: 40:     static UINT zeta = 0x11;;MOC_Funct.c: 41:     return zeta++;
  1861                           
  1862                           ;incstack = 0
  1863  001C0C  503F               	movf	MOC_Frame_Counter@zeta,w,c
  1864  001C0E  6E28               	movwf	?_MOC_Frame_Counter,c
  1865  001C10  5040               	movf	MOC_Frame_Counter@zeta+1,w,c
  1866  001C12  6E29               	movwf	?_MOC_Frame_Counter+1,c
  1867  001C14  4A3F               	infsnz	MOC_Frame_Counter@zeta,f,c
  1868  001C16  2A40               	incf	MOC_Frame_Counter@zeta+1,f,c
  1869  001C18  0012               	return		;funcret
  1870  001C1A                     __end_of_MOC_Frame_Counter:
  1871                           	opt callstack 0
  1872                           
  1873 ;; *************** function _MOC_Aktualna_Temperatura *****************
  1874 ;; Defined at:
  1875 ;;		line 43 in file "MOC_Funct.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2    5[COMRAM] unsigned int 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    3
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		_FRAME_SensorExcitationStatus
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text9
  1904  001C40                     __ptext9:
  1905                           	opt callstack 0
  1906  001C40                     _MOC_Aktualna_Temperatura:
  1907                           	opt callstack 24
  1908                           
  1909                           ;MOC_Funct.c: 45:     return 0x1B;
  1910                           
  1911                           ;incstack = 0
  1912  001C40  0E00               	movlw	0
  1913  001C42  6E29               	movwf	?_MOC_Aktualna_Temperatura+1,c
  1914  001C44  0E1B               	movlw	27
  1915  001C46  6E28               	movwf	?_MOC_Aktualna_Temperatura,c
  1916  001C48  0012               	return		;funcret
  1917  001C4A                     __end_of_MOC_Aktualna_Temperatura:
  1918                           	opt callstack 0
  1919                           
  1920 ;; *************** function _LOCK_Set *****************
  1921 ;; Defined at:
  1922 ;;		line 52 in file "LED.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  k               1    wreg     unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  k               1    5[COMRAM] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;Total ram usage:        1 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    3
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_FRAME_SensorExcitationStatus
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text10
  1951  001C98                     __ptext10:
  1952                           	opt callstack 0
  1953  001C98                     _LOCK_Set:
  1954                           	opt callstack 24
  1955                           
  1956                           ;incstack = 0
  1957                           ;LOCK_Set@k stored from wreg
  1958  001C98  6E28               	movwf	LOCK_Set@k,c
  1959                           
  1960                           ;LED.c: 52: void LOCK_Set(BYTE k);LED.c: 53: {;LED.c: 54:     LOCK = k;
  1961  001C9A  C028  F010         	movff	LOCK_Set@k,_LOCK
  1962  001C9E  0012               	return		;funcret
  1963  001CA0                     __end_of_LOCK_Set:
  1964                           	opt callstack 0
  1965                           
  1966 ;; *************** function _LOCK_Get *****************
  1967 ;; Defined at:
  1968 ;;		line 57 in file "LED.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      unsigned char 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    3
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_FRAME_SensorExcitationStatus
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text11
  1997  001CA6                     __ptext11:
  1998                           	opt callstack 0
  1999  001CA6                     _LOCK_Get:
  2000                           	opt callstack 24
  2001                           
  2002                           ;LED.c: 59:     return LOCK;
  2003                           
  2004                           ;incstack = 0
  2005  001CA6  5010               	movf	_LOCK,w,c
  2006  001CA8  0012               	return		;funcret
  2007  001CAA                     __end_of_LOCK_Get:
  2008                           	opt callstack 0
  2009                           
  2010 ;; *************** function _IsInNeighbors *****************
  2011 ;; Defined at:
  2012 ;;		line 103 in file "FRAME.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  message_adre    2    5[COMRAM] unsigned int 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  i               2    0        unsigned short 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  2    5[COMRAM] unsigned int 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2030 ;;Total ram usage:        2 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    3
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_FRAME_SensorExcitationStatus
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text12
  2041  001040                     __ptext12:
  2042                           	opt callstack 0
  2043  001040                     _IsInNeighbors:
  2044                           	opt callstack 24
  2045                           
  2046                           ;FRAME.c: 103: UINT IsInNeighbors(UINT message_adress);FRAME.c: 104: {;FRAME.c: 105:    
      +                           WORD i;;FRAME.c: 107:     if(NeightAdress1==message_adress)
  2047                           
  2048                           ;incstack = 0
  2049  001040  5028               	movf	IsInNeighbors@message_adress,w,c
  2050  001042  1821               	xorwf	_NeightAdress1,w,c	;volatile
  2051  001044  E109               	bnz	l4225
  2052  001046  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2053  001048  1822               	xorwf	_NeightAdress1+1,w,c	;volatile
  2054  00104A  A4D8               	btfss	status,2,c
  2055  00104C  D005               	goto	l4225
  2056                           
  2057                           ;FRAME.c: 108:     {;FRAME.c: 109:         return 0b1;
  2058  00104E  0E00               	movlw	0
  2059  001050  6E29               	movwf	?_IsInNeighbors+1,c
  2060  001052  0E01               	movlw	1
  2061  001054  6E28               	movwf	?_IsInNeighbors,c
  2062  001056  0012               	return	
  2063  001058                     l4225:
  2064                           
  2065                           ;FRAME.c: 111:     if(NeightAdress2==message_adress)
  2066  001058  5028               	movf	IsInNeighbors@message_adress,w,c
  2067  00105A  184A               	xorwf	_NeightAdress2,w,c	;volatile
  2068  00105C  E109               	bnz	l4231
  2069  00105E  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2070  001060  184B               	xorwf	_NeightAdress2+1,w,c	;volatile
  2071  001062  A4D8               	btfss	status,2,c
  2072  001064  D005               	goto	l4231
  2073                           
  2074                           ;FRAME.c: 112:     {;FRAME.c: 113:         return 0b10;
  2075  001066  0E00               	movlw	0
  2076  001068  6E29               	movwf	?_IsInNeighbors+1,c
  2077  00106A  0E02               	movlw	2
  2078  00106C  6E28               	movwf	?_IsInNeighbors,c
  2079  00106E  0012               	return	
  2080  001070                     l4231:
  2081                           
  2082                           ;FRAME.c: 115:     if(NeightAdress3==message_adress)
  2083  001070  5028               	movf	IsInNeighbors@message_adress,w,c
  2084  001072  181F               	xorwf	_NeightAdress3,w,c	;volatile
  2085  001074  E109               	bnz	l4237
  2086  001076  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2087  001078  1820               	xorwf	_NeightAdress3+1,w,c	;volatile
  2088  00107A  A4D8               	btfss	status,2,c
  2089  00107C  D005               	goto	l4237
  2090                           
  2091                           ;FRAME.c: 116:     {;FRAME.c: 117:         return 0b100;
  2092  00107E  0E00               	movlw	0
  2093  001080  6E29               	movwf	?_IsInNeighbors+1,c
  2094  001082  0E04               	movlw	4
  2095  001084  6E28               	movwf	?_IsInNeighbors,c
  2096  001086  0012               	return	
  2097  001088                     l4237:
  2098                           
  2099                           ;FRAME.c: 119:     if(NeightAdress4==message_adress)
  2100  001088  5028               	movf	IsInNeighbors@message_adress,w,c
  2101  00108A  181D               	xorwf	_NeightAdress4,w,c	;volatile
  2102  00108C  E109               	bnz	l4243
  2103  00108E  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2104  001090  181E               	xorwf	_NeightAdress4+1,w,c	;volatile
  2105  001092  A4D8               	btfss	status,2,c
  2106  001094  D005               	goto	l4243
  2107                           
  2108                           ;FRAME.c: 120:     {;FRAME.c: 121:         return 0b1000;
  2109  001096  0E00               	movlw	0
  2110  001098  6E29               	movwf	?_IsInNeighbors+1,c
  2111  00109A  0E08               	movlw	8
  2112  00109C  6E28               	movwf	?_IsInNeighbors,c
  2113  00109E  0012               	return	
  2114  0010A0                     l4243:
  2115                           
  2116                           ;FRAME.c: 123:     if(NeightAdress5==message_adress)
  2117  0010A0  5028               	movf	IsInNeighbors@message_adress,w,c
  2118  0010A2  181B               	xorwf	_NeightAdress5,w,c	;volatile
  2119  0010A4  E109               	bnz	l4249
  2120  0010A6  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2121  0010A8  181C               	xorwf	_NeightAdress5+1,w,c	;volatile
  2122  0010AA  A4D8               	btfss	status,2,c
  2123  0010AC  D005               	goto	l4249
  2124                           
  2125                           ;FRAME.c: 124:     {;FRAME.c: 125:         return 0b10000;
  2126  0010AE  0E00               	movlw	0
  2127  0010B0  6E29               	movwf	?_IsInNeighbors+1,c
  2128  0010B2  0E10               	movlw	16
  2129  0010B4  6E28               	movwf	?_IsInNeighbors,c
  2130  0010B6  0012               	return	
  2131  0010B8                     l4249:
  2132                           
  2133                           ;FRAME.c: 127:     if(NeightAdress6==message_adress)
  2134  0010B8  5028               	movf	IsInNeighbors@message_adress,w,c
  2135  0010BA  1819               	xorwf	_NeightAdress6,w,c	;volatile
  2136  0010BC  E109               	bnz	l4255
  2137  0010BE  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2138  0010C0  181A               	xorwf	_NeightAdress6+1,w,c	;volatile
  2139  0010C2  A4D8               	btfss	status,2,c
  2140  0010C4  D005               	goto	l4255
  2141                           
  2142                           ;FRAME.c: 128:     {;FRAME.c: 129:         return 0b100000;
  2143  0010C6  0E00               	movlw	0
  2144  0010C8  6E29               	movwf	?_IsInNeighbors+1,c
  2145  0010CA  0E20               	movlw	32
  2146  0010CC  6E28               	movwf	?_IsInNeighbors,c
  2147  0010CE  0012               	return	
  2148  0010D0                     l4255:
  2149                           
  2150                           ;FRAME.c: 131:     if(NeightAdress7==message_adress)
  2151  0010D0  5028               	movf	IsInNeighbors@message_adress,w,c
  2152  0010D2  1817               	xorwf	_NeightAdress7,w,c	;volatile
  2153  0010D4  E109               	bnz	l4261
  2154  0010D6  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2155  0010D8  1818               	xorwf	_NeightAdress7+1,w,c	;volatile
  2156  0010DA  A4D8               	btfss	status,2,c
  2157  0010DC  D005               	goto	l4261
  2158                           
  2159                           ;FRAME.c: 132:     {;FRAME.c: 133:         return 0b1000000;
  2160  0010DE  0E00               	movlw	0
  2161  0010E0  6E29               	movwf	?_IsInNeighbors+1,c
  2162  0010E2  0E40               	movlw	64
  2163  0010E4  6E28               	movwf	?_IsInNeighbors,c
  2164  0010E6  0012               	return	
  2165  0010E8                     l4261:
  2166                           
  2167                           ;FRAME.c: 135:     if(NeightAdress8==message_adress)
  2168  0010E8  5028               	movf	IsInNeighbors@message_adress,w,c
  2169  0010EA  1815               	xorwf	_NeightAdress8,w,c	;volatile
  2170  0010EC  E109               	bnz	l4267
  2171  0010EE  5029               	movf	IsInNeighbors@message_adress+1,w,c
  2172  0010F0  1816               	xorwf	_NeightAdress8+1,w,c	;volatile
  2173  0010F2  A4D8               	btfss	status,2,c
  2174  0010F4  D005               	goto	l4267
  2175                           
  2176                           ;FRAME.c: 136:     {;FRAME.c: 137:         return 0b10000000;
  2177  0010F6  0E00               	movlw	0
  2178  0010F8  6E29               	movwf	?_IsInNeighbors+1,c
  2179  0010FA  0E80               	movlw	128
  2180  0010FC  6E28               	movwf	?_IsInNeighbors,c
  2181  0010FE  0012               	return	
  2182  001100                     l4267:
  2183                           
  2184                           ;FRAME.c: 153:     return 0;
  2185  001100  0E00               	movlw	0
  2186  001102  6E29               	movwf	?_IsInNeighbors+1,c
  2187  001104  0E00               	movlw	0
  2188  001106  6E28               	movwf	?_IsInNeighbors,c
  2189  001108  0012               	return		;funcret
  2190  00110A                     __end_of_IsInNeighbors:
  2191                           	opt callstack 0
  2192                           
  2193 ;; *************** function _FRAME_PrzypisanieDokarty *****************
  2194 ;; Defined at:
  2195 ;;		line 568 in file "FRAME.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  message         2    5[COMRAM] PTR struct .
  2198 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;Total ram usage:        6 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    3
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_FRAME_HandleCanFrame
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text13
  2225  0011BA                     __ptext13:
  2226                           	opt callstack 0
  2227  0011BA                     _FRAME_PrzypisanieDokarty:
  2228                           	opt callstack 25
  2229                           
  2230                           ;FRAME.c: 568: static void FRAME_PrzypisanieDokarty(mID *message);FRAME.c: 569: {;FRAME.
      +                          c: 570:     if(message->message_type == 0x02)
  2231                           
  2232                           ;incstack = 0
  2233  0011BA  EE20 F001          	lfsr	2,1
  2234  0011BE  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2235  0011C0  26D9               	addwf	fsr2l,f,c
  2236  0011C2  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2237  0011C4  22DA               	addwfc	fsr2h,f,c
  2238  0011C6  0E02               	movlw	2
  2239  0011C8  18DE               	xorwf	postinc2,w,c
  2240  0011CA  A4D8               	btfss	status,2,c
  2241  0011CC  D021               	goto	l4511
  2242                           
  2243                           ;FRAME.c: 571:     {;FRAME.c: 572:         message->data_length = 3;
  2244  0011CE  EE20 F010          	lfsr	2,16
  2245  0011D2  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2246  0011D4  26D9               	addwf	fsr2l,f,c
  2247  0011D6  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2248  0011D8  22DA               	addwfc	fsr2h,f,c
  2249  0011DA  0E03               	movlw	3
  2250  0011DC  6EDF               	movwf	indf2,c
  2251                           
  2252                           ;FRAME.c: 573:         message->data[0] = (unsigned char)Dane->NrKarty >> 8 ;
  2253  0011DE  EE20 F008          	lfsr	2,8
  2254  0011E2  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2255  0011E4  26D9               	addwf	fsr2l,f,c
  2256  0011E6  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2257  0011E8  22DA               	addwfc	fsr2h,f,c
  2258  0011EA  0E00               	movlw	0
  2259  0011EC  6EDF               	movwf	indf2,c
  2260                           
  2261                           ;FRAME.c: 574:         message->data[1] = (unsigned char)Dane->NrKarty ;
  2262  0011EE  EE20 F009          	lfsr	2,9
  2263  0011F2  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2264  0011F4  26D9               	addwf	fsr2l,f,c
  2265  0011F6  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2266  0011F8  22DA               	addwfc	fsr2h,f,c
  2267  0011FA  C040 FFDF          	movff	64,indf2
  2268                           
  2269                           ;FRAME.c: 575:         message->data[2] = (unsigned char)Dane->Nr_WeWy ;
  2270  0011FE  EE20 F00A          	lfsr	2,10
  2271  001202  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2272  001204  26D9               	addwf	fsr2l,f,c
  2273  001206  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2274  001208  22DA               	addwfc	fsr2h,f,c
  2275  00120A  C042 FFDF          	movff	66,indf2
  2276                           
  2277                           ;FRAME.c: 577:     }
  2278  00120E  0012               	return	
  2279  001210                     l4511:
  2280                           
  2281                           ;FRAME.c: 579:     {;FRAME.c: 580:          Dane->NrKarty = (message->data[0] << 8) | (m
      +                          essage->data[1]);
  2282  001210  EE20 F008          	lfsr	2,8
  2283  001214  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2284  001216  26D9               	addwf	fsr2l,f,c
  2285  001218  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2286  00121A  22DA               	addwfc	fsr2h,f,c
  2287  00121C  50DF               	movf	indf2,w,c
  2288  00121E  6E2A               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2289  001220  502A               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2290  001222  6E2C               	movwf	(??_FRAME_PrzypisanieDokarty+2)& (0+255),c
  2291  001224  6A2B               	clrf	(??_FRAME_PrzypisanieDokarty+1)& (0+255),c
  2292  001226  EE20 F009          	lfsr	2,9
  2293  00122A  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2294  00122C  26D9               	addwf	fsr2l,f,c
  2295  00122E  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2296  001230  22DA               	addwfc	fsr2h,f,c
  2297  001232  50DF               	movf	indf2,w,c
  2298  001234  6E2D               	movwf	(??_FRAME_PrzypisanieDokarty+3)& (0+255),c
  2299  001236  502D               	movf	??_FRAME_PrzypisanieDokarty+3,w,c
  2300  001238  102B               	iorwf	??_FRAME_PrzypisanieDokarty+1,w,c
  2301  00123A  6E40               	movwf	64,c
  2302  00123C  502C               	movf	??_FRAME_PrzypisanieDokarty+2,w,c
  2303  00123E  6E41               	movwf	65,c
  2304                           
  2305                           ;FRAME.c: 581:          Dane->Nr_WeWy = (message->data[2]);
  2306  001240  EE20 F00A          	lfsr	2,10
  2307  001244  5028               	movf	FRAME_PrzypisanieDokarty@message,w,c
  2308  001246  26D9               	addwf	fsr2l,f,c
  2309  001248  5029               	movf	FRAME_PrzypisanieDokarty@message+1,w,c
  2310  00124A  22DA               	addwfc	fsr2h,f,c
  2311  00124C  50DF               	movf	indf2,w,c
  2312  00124E  6E2A               	movwf	??_FRAME_PrzypisanieDokarty& (0+255),c
  2313  001250  502A               	movf	??_FRAME_PrzypisanieDokarty,w,c
  2314  001252  6E42               	movwf	66,c
  2315  001254  6A43               	clrf	67,c
  2316  001256  0012               	return		;funcret
  2317  001258                     __end_of_FRAME_PrzypisanieDokarty:
  2318                           	opt callstack 0
  2319                           
  2320 ;; *************** function _FRAME_Plot *****************
  2321 ;; Defined at:
  2322 ;;		line 473 in file "FRAME.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  message         2   12[COMRAM] PTR struct .
  2325 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;Total ram usage:        3 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    4
  2344 ;; This function calls:
  2345 ;;		___lwdiv
  2346 ;; This function is called by:
  2347 ;;		_FRAME_HandleCanFrame
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text14
  2352  001740                     __ptext14:
  2353                           	opt callstack 0
  2354  001740                     _FRAME_Plot:
  2355                           	opt callstack 24
  2356                           
  2357                           ;FRAME.c: 473: static void FRAME_Plot(mID *message);FRAME.c: 474: {;FRAME.c: 476:     if
      +                          (message->message_type == 0x02)
  2358                           
  2359                           ;incstack = 0
  2360  001740  EE20 F001          	lfsr	2,1
  2361  001744  502F               	movf	FRAME_Plot@message,w,c
  2362  001746  26D9               	addwf	fsr2l,f,c
  2363  001748  5030               	movf	FRAME_Plot@message+1,w,c
  2364  00174A  22DA               	addwfc	fsr2h,f,c
  2365  00174C  0E02               	movlw	2
  2366  00174E  18DE               	xorwf	postinc2,w,c
  2367  001750  A4D8               	btfss	status,2,c
  2368  001752  D013               	goto	l4501
  2369                           
  2370                           ;FRAME.c: 477:     {;FRAME.c: 478:         message->data[0] = (BYTE)(Dane->timerRysowani
      +                          aWykresuU16/10);
  2371  001754  EE20 F008          	lfsr	2,8
  2372  001758  502F               	movf	FRAME_Plot@message,w,c
  2373  00175A  26D9               	addwf	fsr2l,f,c
  2374  00175C  5030               	movf	FRAME_Plot@message+1,w,c
  2375  00175E  22DA               	addwfc	fsr2h,f,c
  2376  001760  C00C F028          	movff	12,___lwdiv@dividend
  2377  001764  C00D F029          	movff	13,___lwdiv@dividend+1
  2378  001768  0E00               	movlw	0
  2379  00176A  6E2B               	movwf	___lwdiv@divisor+1,c
  2380  00176C  0E0A               	movlw	10
  2381  00176E  6E2A               	movwf	___lwdiv@divisor,c
  2382  001770  ECCC  F00B         	call	___lwdiv	;wreg free
  2383  001774  5028               	movf	?___lwdiv,w,c
  2384  001776  6EDF               	movwf	indf2,c
  2385                           
  2386                           ;FRAME.c: 479:     }
  2387  001778  0012               	return	
  2388  00177A                     l4501:
  2389                           
  2390                           ;FRAME.c: 481:     {;FRAME.c: 482:         Dane->timerRysowaniaWykresuU16 = (WORD)messag
      +                          e->data[0]*10;
  2391  00177A  EE20 F008          	lfsr	2,8
  2392  00177E  502F               	movf	FRAME_Plot@message,w,c
  2393  001780  26D9               	addwf	fsr2l,f,c
  2394  001782  5030               	movf	FRAME_Plot@message+1,w,c
  2395  001784  22DA               	addwfc	fsr2h,f,c
  2396  001786  50DF               	movf	indf2,w,c
  2397  001788  6E31               	movwf	??_FRAME_Plot& (0+255),c
  2398  00178A  5031               	movf	??_FRAME_Plot,w,c
  2399  00178C  0D0A               	mullw	10
  2400  00178E  CFF3 F00C          	movff	prodl,12
  2401  001792  CFF4 F00D          	movff	prodh,13
  2402  001796  0012               	return		;funcret
  2403  001798                     __end_of_FRAME_Plot:
  2404                           	opt callstack 0
  2405                           
  2406 ;; *************** function _FRAME_MapPosition *****************
  2407 ;; Defined at:
  2408 ;;		line 494 in file "FRAME.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  message         2    5[COMRAM] PTR struct .
  2411 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		None
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2427 ;;Total ram usage:        2 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    3
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_FRAME_HandleCanFrame
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text15
  2438  001CAA                     __ptext15:
  2439                           	opt callstack 0
  2440  001CAA                     _FRAME_MapPosition:
  2441                           	opt callstack 25
  2442                           
  2443                           ;incstack = 0
  2444  001CAA  0012               	return		;funcret
  2445  001CAC                     __end_of_FRAME_MapPosition:
  2446                           	opt callstack 0
  2447                           
  2448 ;; *************** function _FRAME_ExcitationValue *****************
  2449 ;; Defined at:
  2450 ;;		line 187 in file "FRAME.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  message         2    5[COMRAM] PTR struct .
  2453 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;Total ram usage:        3 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    3
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_FRAME_HandleCanFrame
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text16
  2480  00194C                     __ptext16:
  2481                           	opt callstack 0
  2482  00194C                     _FRAME_ExcitationValue:
  2483                           	opt callstack 25
  2484                           
  2485                           ;FRAME.c: 187: static void FRAME_ExcitationValue(mID *message);FRAME.c: 188: {;FRAME.c: 
      +                          189:     if(message->message_type == 0x02)
  2486                           
  2487                           ;incstack = 0
  2488  00194C  EE20 F001          	lfsr	2,1
  2489  001950  5028               	movf	FRAME_ExcitationValue@message,w,c
  2490  001952  26D9               	addwf	fsr2l,f,c
  2491  001954  5029               	movf	FRAME_ExcitationValue@message+1,w,c
  2492  001956  22DA               	addwfc	fsr2h,f,c
  2493  001958  0E02               	movlw	2
  2494  00195A  18DE               	xorwf	postinc2,w,c
  2495  00195C  A4D8               	btfss	status,2,c
  2496  00195E  0012               	return	
  2497                           
  2498                           ;FRAME.c: 190:     {;FRAME.c: 191:         message->data_length = 1;
  2499  001960  EE20 F010          	lfsr	2,16
  2500  001964  5028               	movf	FRAME_ExcitationValue@message,w,c
  2501  001966  26D9               	addwf	fsr2l,f,c
  2502  001968  5029               	movf	FRAME_ExcitationValue@message+1,w,c
  2503  00196A  22DA               	addwfc	fsr2h,f,c
  2504  00196C  0E01               	movlw	1
  2505  00196E  6EDF               	movwf	indf2,c
  2506                           
  2507                           ;FRAME.c: 196:         message->data[0] = 0xFF;
  2508  001970  EE20 F008          	lfsr	2,8
  2509  001974  5028               	movf	FRAME_ExcitationValue@message,w,c
  2510  001976  26D9               	addwf	fsr2l,f,c
  2511  001978  5029               	movf	FRAME_ExcitationValue@message+1,w,c
  2512  00197A  22DA               	addwfc	fsr2h,f,c
  2513  00197C  0EFF               	movlw	255
  2514  00197E  6EDF               	movwf	indf2,c
  2515                           
  2516                           ;FRAME.c: 197:     }
  2517  001980  0012               	return		;funcret
  2518  001982                     __end_of_FRAME_ExcitationValue:
  2519                           	opt callstack 0
  2520                           
  2521 ;; *************** function _FRAME_ExcitationMultiplier *****************
  2522 ;; Defined at:
  2523 ;;		line 211 in file "FRAME.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  message         2    5[COMRAM] PTR struct .
  2526 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  i               2    8[COMRAM] unsigned short 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2541 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;Total ram usage:        5 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    3
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_FRAME_HandleCanFrame
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text17
  2553  0017EA                     __ptext17:
  2554                           	opt callstack 0
  2555  0017EA                     _FRAME_ExcitationMultiplier:
  2556                           	opt callstack 25
  2557                           
  2558                           ;FRAME.c: 211: static void FRAME_ExcitationMultiplier(mID *message);FRAME.c: 212: {;FRAM
      +                          E.c: 213:     WORD i;;FRAME.c: 215:     if(message->message_type == 0x02)
  2559                           
  2560                           ;incstack = 0
  2561  0017EA  EE20 F001          	lfsr	2,1
  2562  0017EE  5028               	movf	FRAME_ExcitationMultiplier@message,w,c
  2563  0017F0  26D9               	addwf	fsr2l,f,c
  2564  0017F2  5029               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2565  0017F4  22DA               	addwfc	fsr2h,f,c
  2566  0017F6  0E02               	movlw	2
  2567  0017F8  18DE               	xorwf	postinc2,w,c
  2568  0017FA  A4D8               	btfss	status,2,c
  2569  0017FC  0012               	return	
  2570                           
  2571                           ;FRAME.c: 216:     {;FRAME.c: 217:         message->data_length = 1;
  2572  0017FE  EE20 F010          	lfsr	2,16
  2573  001802  5028               	movf	FRAME_ExcitationMultiplier@message,w,c
  2574  001804  26D9               	addwf	fsr2l,f,c
  2575  001806  5029               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2576  001808  22DA               	addwfc	fsr2h,f,c
  2577  00180A  0E01               	movlw	1
  2578  00180C  6EDF               	movwf	indf2,c
  2579                           
  2580                           ;FRAME.c: 218:         for(i=0; i<3; i++)
  2581  00180E  0E00               	movlw	0
  2582  001810  6E2C               	movwf	FRAME_ExcitationMultiplier@i+1,c
  2583  001812  0E00               	movlw	0
  2584  001814  6E2B               	movwf	FRAME_ExcitationMultiplier@i,c
  2585  001816                     l4455:
  2586                           
  2587                           ;FRAME.c: 219:         {;FRAME.c: 222:         }
  2588  001816  4A2B               	infsnz	FRAME_ExcitationMultiplier@i,f,c
  2589  001818  2A2C               	incf	FRAME_ExcitationMultiplier@i+1,f,c
  2590  00181A  502C               	movf	FRAME_ExcitationMultiplier@i+1,w,c
  2591  00181C  E104               	bnz	u2650
  2592  00181E  0E03               	movlw	3
  2593  001820  5C2B               	subwf	FRAME_ExcitationMultiplier@i,w,c
  2594  001822  A0D8               	btfss	status,0,c
  2595  001824  D7F8               	goto	l4455
  2596  001826                     u2650:
  2597                           
  2598                           ;FRAME.c: 223:         message->data[0] = 0xFF;
  2599  001826  EE20 F008          	lfsr	2,8
  2600  00182A  5028               	movf	FRAME_ExcitationMultiplier@message,w,c
  2601  00182C  26D9               	addwf	fsr2l,f,c
  2602  00182E  5029               	movf	FRAME_ExcitationMultiplier@message+1,w,c
  2603  001830  22DA               	addwfc	fsr2h,f,c
  2604  001832  0EFF               	movlw	255
  2605  001834  6EDF               	movwf	indf2,c
  2606                           
  2607                           ;FRAME.c: 224:     }
  2608  001836  0012               	return		;funcret
  2609  001838                     __end_of_FRAME_ExcitationMultiplier:
  2610                           	opt callstack 0
  2611                           
  2612 ;; *************** function _FRAME_DeviceReset *****************
  2613 ;; Defined at:
  2614 ;;		line 345 in file "FRAME.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  message         2   14[COMRAM] PTR struct .
  2617 ;;		 -> TRM_DataTransmition@canMessage(17), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2633 ;;Total ram usage:        3 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    6
  2636 ;; This function calls:
  2637 ;;		_FRAME_DataUpdateAndChangeOption
  2638 ;;		_WriteDataToEEPROM
  2639 ;; This function is called by:
  2640 ;;		_FRAME_HandleCanFrame
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text18
  2645  000C02                     __ptext18:
  2646                           	opt callstack 0
  2647  000C02                     _FRAME_DeviceReset:
  2648                           	opt callstack 22
  2649                           
  2650                           ;FRAME.c: 345: static void FRAME_DeviceReset(mID *message);FRAME.c: 346: {;FRAME.c: 347:
      +                               if(message->message_type == 0x02)
  2651                           
  2652                           ;incstack = 0
  2653  000C02  EE20 F001          	lfsr	2,1
  2654  000C06  5031               	movf	FRAME_DeviceReset@message,w,c
  2655  000C08  26D9               	addwf	fsr2l,f,c
  2656  000C0A  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2657  000C0C  22DA               	addwfc	fsr2h,f,c
  2658  000C0E  0E02               	movlw	2
  2659  000C10  18DE               	xorwf	postinc2,w,c
  2660  000C12  A4D8               	btfss	status,2,c
  2661  000C14  D057               	goto	l4477
  2662                           
  2663                           ;FRAME.c: 348:     {;FRAME.c: 349:         message->data_length = 1;
  2664  000C16  EE20 F010          	lfsr	2,16
  2665  000C1A  5031               	movf	FRAME_DeviceReset@message,w,c
  2666  000C1C  26D9               	addwf	fsr2l,f,c
  2667  000C1E  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2668  000C20  22DA               	addwfc	fsr2h,f,c
  2669  000C22  0E01               	movlw	1
  2670  000C24  6EDF               	movwf	indf2,c
  2671                           
  2672                           ;FRAME.c: 351:         message->data[0] = (RCON>>6) & 0x01;
  2673  000C26  EE20 F008          	lfsr	2,8
  2674  000C2A  5031               	movf	FRAME_DeviceReset@message,w,c
  2675  000C2C  26D9               	addwf	fsr2l,f,c
  2676  000C2E  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2677  000C30  22DA               	addwfc	fsr2h,f,c
  2678  000C32  44D0               	rlncf	4048,w,c	;volatile
  2679  000C34  46E8               	rlncf	wreg,f,c
  2680  000C36  0B03               	andlw	3
  2681  000C38  0B01               	andlw	1
  2682  000C3A  6EDF               	movwf	indf2,c
  2683                           
  2684                           ;FRAME.c: 352:         message->data[1] = Flagi.wykonanoZapisDoFlash;
  2685  000C3C  EE20 F009          	lfsr	2,9
  2686  000C40  5031               	movf	FRAME_DeviceReset@message,w,c
  2687  000C42  26D9               	addwf	fsr2l,f,c
  2688  000C44  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2689  000C46  22DA               	addwfc	fsr2h,f,c
  2690  000C48  0100               	movlb	0	; () banked
  2691  000C4A  A9C6               	btfss	_Flagi& (0+255),4,b
  2692  000C4C  D002               	goto	u2690
  2693  000C4E  0E01               	movlw	1
  2694  000C50  D001               	goto	u2696
  2695  000C52                     u2690:
  2696  000C52  0E00               	movlw	0
  2697  000C54                     u2696:
  2698  000C54  6EDF               	movwf	indf2,c
  2699                           
  2700                           ;FRAME.c: 353:         message->data[2] = Flagi.pomiarTla;
  2701  000C56  EE20 F00A          	lfsr	2,10
  2702  000C5A  5031               	movf	FRAME_DeviceReset@message,w,c
  2703  000C5C  26D9               	addwf	fsr2l,f,c
  2704  000C5E  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2705  000C60  22DA               	addwfc	fsr2h,f,c
  2706  000C62  A1C6               	btfss	_Flagi& (0+255),0,b
  2707  000C64  D002               	goto	u2700
  2708  000C66  0E01               	movlw	1
  2709  000C68  D001               	goto	u2706
  2710  000C6A                     u2700:
  2711  000C6A  0E00               	movlw	0
  2712  000C6C                     u2706:
  2713  000C6C  6EDF               	movwf	indf2,c
  2714                           
  2715                           ;FRAME.c: 354:         message->data[3] = 0;
  2716  000C6E  EE20 F00B          	lfsr	2,11
  2717  000C72  5031               	movf	FRAME_DeviceReset@message,w,c
  2718  000C74  26D9               	addwf	fsr2l,f,c
  2719  000C76  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2720  000C78  22DA               	addwfc	fsr2h,f,c
  2721  000C7A  0E00               	movlw	0
  2722  000C7C  6EDF               	movwf	indf2,c
  2723                           
  2724                           ;FRAME.c: 355:         message->data[4] = Dane->rokU16;
  2725  000C7E  EE20 F00C          	lfsr	2,12
  2726  000C82  5031               	movf	FRAME_DeviceReset@message,w,c
  2727  000C84  26D9               	addwf	fsr2l,f,c
  2728  000C86  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2729  000C88  22DA               	addwfc	fsr2h,f,c
  2730  000C8A  C036 FFDF          	movff	54,indf2
  2731                           
  2732                           ;FRAME.c: 356:         message->data[5] = Dane->miesiacU16;
  2733  000C8E  EE20 F00D          	lfsr	2,13
  2734  000C92  5031               	movf	FRAME_DeviceReset@message,w,c
  2735  000C94  26D9               	addwf	fsr2l,f,c
  2736  000C96  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2737  000C98  22DA               	addwfc	fsr2h,f,c
  2738  000C9A  C038 FFDF          	movff	56,indf2
  2739                           
  2740                           ;FRAME.c: 357:         message->data[6] = Dane->dzienU16;
  2741  000C9E  EE20 F00E          	lfsr	2,14
  2742  000CA2  5031               	movf	FRAME_DeviceReset@message,w,c
  2743  000CA4  26D9               	addwf	fsr2l,f,c
  2744  000CA6  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2745  000CA8  22DA               	addwfc	fsr2h,f,c
  2746  000CAA  C03A FFDF          	movff	58,indf2
  2747                           
  2748                           ;FRAME.c: 358:         message->data[7] = Dane->godzinaU16;
  2749  000CAE  EE20 F00F          	lfsr	2,15
  2750  000CB2  5031               	movf	FRAME_DeviceReset@message,w,c
  2751  000CB4  26D9               	addwf	fsr2l,f,c
  2752  000CB6  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2753  000CB8  22DA               	addwfc	fsr2h,f,c
  2754  000CBA  C03C FFDF          	movff	60,indf2
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;FRAME.c: 359:         RCON &= ~(1<<6);
  2758  000CBE  9CD0               	bcf	4048,6,c	;volatile
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;FRAME.c: 360:         Flagi.wykonanoZapisDoFlash = 0;
  2762  000CC0  99C6               	bcf	_Flagi& (0+255),4,b
  2763                           
  2764                           ;FRAME.c: 374:     }
  2765  000CC2  0012               	return	
  2766  000CC4                     l4477:
  2767                           
  2768                           ;FRAME.c: 376:     {;FRAME.c: 377:         message->data_length = 1;
  2769  000CC4  EE20 F010          	lfsr	2,16
  2770  000CC8  5031               	movf	FRAME_DeviceReset@message,w,c
  2771  000CCA  26D9               	addwf	fsr2l,f,c
  2772  000CCC  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2773  000CCE  22DA               	addwfc	fsr2h,f,c
  2774  000CD0  0E01               	movlw	1
  2775  000CD2  6EDF               	movwf	indf2,c
  2776                           
  2777                           ;FRAME.c: 379:         if(message->data[2])
  2778  000CD4  EE20 F00A          	lfsr	2,10
  2779  000CD8  5031               	movf	FRAME_DeviceReset@message,w,c
  2780  000CDA  26D9               	addwf	fsr2l,f,c
  2781  000CDC  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2782  000CDE  22DA               	addwfc	fsr2h,f,c
  2783  000CE0  50DF               	movf	indf2,w,c
  2784  000CE2  B4D8               	btfsc	status,2,c
  2785  000CE4  D00F               	goto	l4487
  2786                           
  2787                           ;FRAME.c: 380:         {;FRAME.c: 381:             Flagi.pomiarTla = 1;
  2788  000CE6  0100               	movlb	0	; () banked
  2789  000CE8  81C6               	bsf	_Flagi& (0+255),0,b
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;FRAME.c: 382:             if(message->data[1])
  2793  000CEA  EE20 F009          	lfsr	2,9
  2794  000CEE  5031               	movf	FRAME_DeviceReset@message,w,c
  2795  000CF0  26D9               	addwf	fsr2l,f,c
  2796  000CF2  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2797  000CF4  22DA               	addwfc	fsr2h,f,c
  2798  000CF6  50DF               	movf	indf2,w,c
  2799  000CF8  B4D8               	btfsc	status,2,c
  2800  000CFA  D01E               	goto	l4495
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;FRAME.c: 383:             {;FRAME.c: 384:                 Flagi.zapisDoFlash = 1;
  2804  000CFC  87C6               	bsf	_Flagi& (0+255),3,b
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;FRAME.c: 385:                 WriteDataToEEPROM();
  2808  000CFE  EC2B  F007         	call	_WriteDataToEEPROM	;wreg free
  2809  000D02  D01A               	goto	l4495
  2810  000D04                     l4487:
  2811                           
  2812                           ;FRAME.c: 389:         {;FRAME.c: 390:             if(message->data[1])
  2813  000D04  EE20 F009          	lfsr	2,9
  2814  000D08  5031               	movf	FRAME_DeviceReset@message,w,c
  2815  000D0A  26D9               	addwf	fsr2l,f,c
  2816  000D0C  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2817  000D0E  22DA               	addwfc	fsr2h,f,c
  2818  000D10  50DF               	movf	indf2,w,c
  2819  000D12  B4D8               	btfsc	status,2,c
  2820  000D14  D008               	goto	l4491
  2821                           
  2822                           ;FRAME.c: 391:             {;FRAME.c: 392:                 FRAME_DataUpdateAndChangeOpti
      +                          on(message);
  2823  000D16  C031  F028         	movff	FRAME_DeviceReset@message,FRAME_DataUpdateAndChangeOption@message
  2824  000D1A  C032  F029         	movff	FRAME_DeviceReset@message+1,FRAME_DataUpdateAndChangeOption@message+1
  2825  000D1E  EC73  F00B         	call	_FRAME_DataUpdateAndChangeOption	;wreg free
  2826                           
  2827                           ;FRAME.c: 393:                 WriteDataToEEPROM();
  2828  000D22  EC2B  F007         	call	_WriteDataToEEPROM	;wreg free
  2829  000D26                     l4491:
  2830                           
  2831                           ;FRAME.c: 396:             if(message->data[0])
  2832  000D26  EE20 F008          	lfsr	2,8
  2833  000D2A  5031               	movf	FRAME_DeviceReset@message,w,c
  2834  000D2C  26D9               	addwf	fsr2l,f,c
  2835  000D2E  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2836  000D30  22DA               	addwfc	fsr2h,f,c
  2837  000D32  50DF               	movf	indf2,w,c
  2838  000D34  A4D8               	btfss	status,2,c
  2839  000D36  00FF               	reset		;# 
  2840  000D38                     l4495:
  2841                           
  2842                           ;FRAME.c: 401:         message->data[0] = 0xFF;
  2843  000D38  EE20 F008          	lfsr	2,8
  2844  000D3C  5031               	movf	FRAME_DeviceReset@message,w,c
  2845  000D3E  26D9               	addwf	fsr2l,f,c
  2846  000D40  5032               	movf	FRAME_DeviceReset@message+1,w,c
  2847  000D42  22DA               	addwfc	fsr2h,f,c
  2848  000D44  0EFF               	movlw	255
  2849  000D46  6EDF               	movwf	indf2,c
  2850  000D48  0012               	return		;funcret
  2851  000D4A                     __end_of_FRAME_DeviceReset:
  2852                           	opt callstack 0
  2853                           
  2854 ;; *************** function _WriteDataToEEPROM *****************
  2855 ;; Defined at:
  2856 ;;		line 453 in file "FRAME.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;Total ram usage:        0 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    5
  2877 ;; This function calls:
  2878 ;;		_NVMWrite
  2879 ;; This function is called by:
  2880 ;;		_FRAME_DeviceReset
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text19
  2885  000E56                     __ptext19:
  2886                           	opt callstack 0
  2887  000E56                     _WriteDataToEEPROM:
  2888                           	opt callstack 22
  2889                           
  2890                           ;FRAME.c: 455:     NVMWrite(&Init_Data,10,2);
  2891                           
  2892                           ;incstack = 0
  2893  000E56  0E48               	movlw	low _Init_Data
  2894  000E58  6E2B               	movwf	NVMWrite@source,c
  2895  000E5A  0E00               	movlw	high _Init_Data
  2896  000E5C  6E2C               	movwf	NVMWrite@source+1,c
  2897  000E5E  0E00               	movlw	0
  2898  000E60  6E2E               	movwf	NVMWrite@addr+1,c
  2899  000E62  0E0A               	movlw	10
  2900  000E64  6E2D               	movwf	NVMWrite@addr,c
  2901  000E66  0E00               	movlw	0
  2902  000E68  6E30               	movwf	NVMWrite@count+1,c
  2903  000E6A  0E02               	movlw	2
  2904  000E6C  6E2F               	movwf	NVMWrite@count,c
  2905  000E6E  ECC1  F00C         	call	_NVMWrite	;wreg free
  2906                           
  2907                           ;FRAME.c: 456:     NVMWrite(&NeightAdress1,15,2);
  2908  000E72  0E21               	movlw	low _NeightAdress1
  2909  000E74  6E2B               	movwf	NVMWrite@source,c
  2910  000E76  0E00               	movlw	high _NeightAdress1
  2911  000E78  6E2C               	movwf	NVMWrite@source+1,c
  2912  000E7A  0E00               	movlw	0
  2913  000E7C  6E2E               	movwf	NVMWrite@addr+1,c
  2914  000E7E  0E0F               	movlw	15
  2915  000E80  6E2D               	movwf	NVMWrite@addr,c
  2916  000E82  0E00               	movlw	0
  2917  000E84  6E30               	movwf	NVMWrite@count+1,c
  2918  000E86  0E02               	movlw	2
  2919  000E88  6E2F               	movwf	NVMWrite@count,c
  2920  000E8A  ECC1  F00C         	call	_NVMWrite	;wreg free
  2921                           
  2922                           ;FRAME.c: 457:     NVMWrite(&NeightAdress2,20,2);
  2923  000E8E  0E4A               	movlw	low _NeightAdress2
  2924  000E90  6E2B               	movwf	NVMWrite@source,c
  2925  000E92  0E00               	movlw	high _NeightAdress2
  2926  000E94  6E2C               	movwf	NVMWrite@source+1,c
  2927  000E96  0E00               	movlw	0
  2928  000E98  6E2E               	movwf	NVMWrite@addr+1,c
  2929  000E9A  0E14               	movlw	20
  2930  000E9C  6E2D               	movwf	NVMWrite@addr,c
  2931  000E9E  0E00               	movlw	0
  2932  000EA0  6E30               	movwf	NVMWrite@count+1,c
  2933  000EA2  0E02               	movlw	2
  2934  000EA4  6E2F               	movwf	NVMWrite@count,c
  2935  000EA6  ECC1  F00C         	call	_NVMWrite	;wreg free
  2936                           
  2937                           ;FRAME.c: 458:     NVMWrite(&NeightAdress3,30,2);
  2938  000EAA  0E1F               	movlw	low _NeightAdress3
  2939  000EAC  6E2B               	movwf	NVMWrite@source,c
  2940  000EAE  0E00               	movlw	high _NeightAdress3
  2941  000EB0  6E2C               	movwf	NVMWrite@source+1,c
  2942  000EB2  0E00               	movlw	0
  2943  000EB4  6E2E               	movwf	NVMWrite@addr+1,c
  2944  000EB6  0E1E               	movlw	30
  2945  000EB8  6E2D               	movwf	NVMWrite@addr,c
  2946  000EBA  0E00               	movlw	0
  2947  000EBC  6E30               	movwf	NVMWrite@count+1,c
  2948  000EBE  0E02               	movlw	2
  2949  000EC0  6E2F               	movwf	NVMWrite@count,c
  2950  000EC2  ECC1  F00C         	call	_NVMWrite	;wreg free
  2951                           
  2952                           ;FRAME.c: 459:     NVMWrite(&NeightAdress4,40,2);
  2953  000EC6  0E1D               	movlw	low _NeightAdress4
  2954  000EC8  6E2B               	movwf	NVMWrite@source,c
  2955  000ECA  0E00               	movlw	high _NeightAdress4
  2956  000ECC  6E2C               	movwf	NVMWrite@source+1,c
  2957  000ECE  0E00               	movlw	0
  2958  000ED0  6E2E               	movwf	NVMWrite@addr+1,c
  2959  000ED2  0E28               	movlw	40
  2960  000ED4  6E2D               	movwf	NVMWrite@addr,c
  2961  000ED6  0E00               	movlw	0
  2962  000ED8  6E30               	movwf	NVMWrite@count+1,c
  2963  000EDA  0E02               	movlw	2
  2964  000EDC  6E2F               	movwf	NVMWrite@count,c
  2965  000EDE  ECC1  F00C         	call	_NVMWrite	;wreg free
  2966                           
  2967                           ;FRAME.c: 460:     NVMWrite(&NeightAdress5,50,2);
  2968  000EE2  0E1B               	movlw	low _NeightAdress5
  2969  000EE4  6E2B               	movwf	NVMWrite@source,c
  2970  000EE6  0E00               	movlw	high _NeightAdress5
  2971  000EE8  6E2C               	movwf	NVMWrite@source+1,c
  2972  000EEA  0E00               	movlw	0
  2973  000EEC  6E2E               	movwf	NVMWrite@addr+1,c
  2974  000EEE  0E32               	movlw	50
  2975  000EF0  6E2D               	movwf	NVMWrite@addr,c
  2976  000EF2  0E00               	movlw	0
  2977  000EF4  6E30               	movwf	NVMWrite@count+1,c
  2978  000EF6  0E02               	movlw	2
  2979  000EF8  6E2F               	movwf	NVMWrite@count,c
  2980  000EFA  ECC1  F00C         	call	_NVMWrite	;wreg free
  2981                           
  2982                           ;FRAME.c: 461:     NVMWrite(&NeightAdress6,60,2);
  2983  000EFE  0E19               	movlw	low _NeightAdress6
  2984  000F00  6E2B               	movwf	NVMWrite@source,c
  2985  000F02  0E00               	movlw	high _NeightAdress6
  2986  000F04  6E2C               	movwf	NVMWrite@source+1,c
  2987  000F06  0E00               	movlw	0
  2988  000F08  6E2E               	movwf	NVMWrite@addr+1,c
  2989  000F0A  0E3C               	movlw	60
  2990  000F0C  6E2D               	movwf	NVMWrite@addr,c
  2991  000F0E  0E00               	movlw	0
  2992  000F10  6E30               	movwf	NVMWrite@count+1,c
  2993  000F12  0E02               	movlw	2
  2994  000F14  6E2F               	movwf	NVMWrite@count,c
  2995  000F16  ECC1  F00C         	call	_NVMWrite	;wreg free
  2996                           
  2997                           ;FRAME.c: 462:     NVMWrite(&NeightAdress7,70,2);
  2998  000F1A  0E17               	movlw	low _NeightAdress7
  2999  000F1C  6E2B               	movwf	NVMWrite@source,c
  3000  000F1E  0E00               	movlw	high _NeightAdress7
  3001  000F20  6E2C               	movwf	NVMWrite@source+1,c
  3002  000F22  0E00               	movlw	0
  3003  000F24  6E2E               	movwf	NVMWrite@addr+1,c
  3004  000F26  0E46               	movlw	70
  3005  000F28  6E2D               	movwf	NVMWrite@addr,c
  3006  000F2A  0E00               	movlw	0
  3007  000F2C  6E30               	movwf	NVMWrite@count+1,c
  3008  000F2E  0E02               	movlw	2
  3009  000F30  6E2F               	movwf	NVMWrite@count,c
  3010  000F32  ECC1  F00C         	call	_NVMWrite	;wreg free
  3011                           
  3012                           ;FRAME.c: 463:     NVMWrite(&NeightAdress8,80,2);
  3013  000F36  0E15               	movlw	low _NeightAdress8
  3014  000F38  6E2B               	movwf	NVMWrite@source,c
  3015  000F3A  0E00               	movlw	high _NeightAdress8
  3016  000F3C  6E2C               	movwf	NVMWrite@source+1,c
  3017  000F3E  0E00               	movlw	0
  3018  000F40  6E2E               	movwf	NVMWrite@addr+1,c
  3019  000F42  0E50               	movlw	80
  3020  000F44  6E2D               	movwf	NVMWrite@addr,c
  3021  000F46  0E00               	movlw	0
  3022  000F48  6E30               	movwf	NVMWrite@count+1,c
  3023  000F4A  0E02               	movlw	2
  3024  000F4C  6E2F               	movwf	NVMWrite@count,c
  3025  000F4E  ECC1  F00C         	call	_NVMWrite	;wreg free
  3026  000F52  0012               	return		;funcret
  3027  000F54                     __end_of_WriteDataToEEPROM:
  3028                           	opt callstack 0
  3029                           
  3030 ;; *************** function _NVMWrite *****************
  3031 ;; Defined at:
  3032 ;;		line 90 in file "EEPROM.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  source          2    8[COMRAM] PTR unsigned char 
  3035 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  3036 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  3037 ;;		 -> NeightAdress1(2), 
  3038 ;;  addr            2   10[COMRAM] unsigned short 
  3039 ;;  count           2   12[COMRAM] unsigned short 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3051 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;Total ram usage:        6 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    4
  3058 ;; This function calls:
  3059 ;;		_WritetoEEPROM
  3060 ;; This function is called by:
  3061 ;;		_WriteDataToEEPROM
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text20
  3066  001982                     __ptext20:
  3067                           	opt callstack 0
  3068  001982                     _NVMWrite:
  3069                           	opt callstack 22
  3070                           
  3071                           ;EEPROM.c: 90: void NVMWrite(BYTE *source, WORD addr, WORD count);EEPROM.c: 91: {;EEPROM
      +                          .c: 92:     while(count > 0)
  3072                           
  3073                           ;incstack = 0
  3074  001982  D015               	goto	l4023
  3075  001984                     l949:
  3076  001984  B2A6               	btfsc	4006,1,c	;volsfr
  3077  001986  D7FE               	goto	l949
  3078                           
  3079                           ;EEPROM.c: 95:         WritetoEEPROM(addr++,*source);
  3080  001988  C02D  F028         	movff	NVMWrite@addr,WritetoEEPROM@Address
  3081  00198C  C02E  F029         	movff	NVMWrite@addr+1,WritetoEEPROM@Address+1
  3082  001990  C02B  FFD9         	movff	NVMWrite@source,fsr2l
  3083  001994  C02C  FFDA         	movff	NVMWrite@source+1,fsr2h
  3084  001998  50DF               	movf	indf2,w,c
  3085  00199A  6E2A               	movwf	WritetoEEPROM@Data,c
  3086  00199C  EC2D  F00D         	call	_WritetoEEPROM	;wreg free
  3087  0019A0  4A2D               	infsnz	NVMWrite@addr,f,c
  3088  0019A2  2A2E               	incf	NVMWrite@addr+1,f,c
  3089                           
  3090                           ;EEPROM.c: 96:         count--;
  3091  0019A4  062F               	decf	NVMWrite@count,f,c
  3092  0019A6  A0D8               	btfss	status,0,c
  3093  0019A8  0630               	decf	NVMWrite@count+1,f,c
  3094                           
  3095                           ;EEPROM.c: 97:         source++;
  3096  0019AA  4A2B               	infsnz	NVMWrite@source,f,c
  3097  0019AC  2A2C               	incf	NVMWrite@source+1,f,c
  3098  0019AE                     l4023:
  3099                           
  3100                           ;EEPROM.c: 92:     while(count > 0)
  3101  0019AE  502F               	movf	NVMWrite@count,w,c
  3102  0019B0  1030               	iorwf	NVMWrite@count+1,w,c
  3103  0019B2  B4D8               	btfsc	status,2,c
  3104  0019B4  0012               	return	
  3105  0019B6  D7E6               	goto	l949
  3106  0019B8                     __end_of_NVMWrite:
  3107                           	opt callstack 0
  3108                           
  3109 ;; *************** function _WritetoEEPROM *****************
  3110 ;; Defined at:
  3111 ;;		line 61 in file "EEPROM.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  Address         2    5[COMRAM] unsigned short 
  3114 ;;  Data            1    7[COMRAM] unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3126 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;Total ram usage:        3 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    3
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_NVMWrite
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text21
  3141  001A5A                     __ptext21:
  3142                           	opt callstack 0
  3143  001A5A                     _WritetoEEPROM:
  3144                           	opt callstack 22
  3145                           
  3146                           ;EEPROM.c: 61: static void WritetoEEPROM(WORD Address, BYTE Data);EEPROM.c: 62: {;EEPROM
      +                          .c: 63:     static BYTE GIE_Status;;EEPROM.c: 65:     EEADRH = (BYTE)(Address>>8);
  3147                           
  3148                           ;incstack = 0
  3149  001A5A  5029               	movf	WritetoEEPROM@Address+1,w,c
  3150  001A5C  6EAA               	movwf	4010,c	;volatile
  3151                           
  3152                           ;EEPROM.c: 66:     EEADR = (BYTE)Address;
  3153  001A5E  C028  FFA9         	movff	WritetoEEPROM@Address,4009	;volatile
  3154                           
  3155                           ;EEPROM.c: 67:     EEDATA = Data;
  3156  001A62  C02A  FFA8         	movff	WritetoEEPROM@Data,4008	;volatile
  3157                           
  3158                           ;EEPROM.c: 68:     EECON1bits.WREN = 1;
  3159  001A66  84A6               	bsf	4006,2,c	;volsfr
  3160                           
  3161                           ;EEPROM.c: 69:     GIE_Status = INTCONbits.GIE;
  3162  001A68  0E00               	movlw	0
  3163  001A6A  BEF2               	btfsc	4082,7,c	;volatile
  3164  001A6C  0E01               	movlw	1
  3165  001A6E  6E0B               	movwf	WritetoEEPROM@GIE_Status,c
  3166                           
  3167                           ;EEPROM.c: 70:     INTCONbits.GIE = 0;
  3168  001A70  9EF2               	bcf	4082,7,c	;volatile
  3169                           
  3170                           ;EEPROM.c: 71:     EECON2 = 0x55;
  3171  001A72  0E55               	movlw	85
  3172  001A74  6EA7               	movwf	4007,c	;volsfr
  3173                           
  3174                           ;EEPROM.c: 72:     EECON2 = 0xAA;
  3175  001A76  0EAA               	movlw	170
  3176  001A78  6EA7               	movwf	4007,c	;volsfr
  3177                           
  3178                           ;EEPROM.c: 73:     EECON1bits.WR = 1;
  3179  001A7A  82A6               	bsf	4006,1,c	;volsfr
  3180                           
  3181                           ;EEPROM.c: 74:     INTCONbits.GIE = GIE_Status;
  3182  001A7C  B00B               	btfsc	WritetoEEPROM@GIE_Status,0,c
  3183  001A7E  D002               	bra	u2155
  3184  001A80  9EF2               	bcf	4082,7,c	;volatile
  3185  001A82  D001               	bra	u2156
  3186  001A84                     u2155:
  3187  001A84  8EF2               	bsf	4082,7,c	;volatile
  3188  001A86                     u2156:
  3189                           
  3190                           ;EEPROM.c: 75:     EECON1bits.WREN = 0;
  3191  001A86  94A6               	bcf	4006,2,c	;volsfr
  3192  001A88                     l932:
  3193  001A88  B2A6               	btfsc	4006,1,c	;volsfr
  3194  001A8A  D7FE               	goto	l932
  3195  001A8C  0012               	return	
  3196  001A8E                     __end_of_WritetoEEPROM:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _FRAME_DataUpdateAndChangeOption *****************
  3200 ;; Defined at:
  3201 ;;		line 329 in file "FRAME.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  message         2    5[COMRAM] PTR struct .
  3204 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;Total ram usage:        3 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    3
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_FRAME_DeviceReset
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text22
  3231  0016E6                     __ptext22:
  3232                           	opt callstack 0
  3233  0016E6                     _FRAME_DataUpdateAndChangeOption:
  3234                           	opt callstack 24
  3235                           
  3236                           ;FRAME.c: 329: static void FRAME_DataUpdateAndChangeOption(mID *message);FRAME.c: 330: {
      +                          ;FRAME.c: 332:     Dane->rokU16 = message->data[4];
  3237                           
  3238                           ;incstack = 0
  3239  0016E6  EE20 F00C          	lfsr	2,12
  3240  0016EA  5028               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3241  0016EC  26D9               	addwf	fsr2l,f,c
  3242  0016EE  5029               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3243  0016F0  22DA               	addwfc	fsr2h,f,c
  3244  0016F2  50DF               	movf	indf2,w,c
  3245  0016F4  6E2A               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3246  0016F6  502A               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3247  0016F8  6E36               	movwf	54,c
  3248  0016FA  6A37               	clrf	55,c
  3249                           
  3250                           ;FRAME.c: 333:     Dane->miesiacU16 = message->data[5];
  3251  0016FC  EE20 F00D          	lfsr	2,13
  3252  001700  5028               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3253  001702  26D9               	addwf	fsr2l,f,c
  3254  001704  5029               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3255  001706  22DA               	addwfc	fsr2h,f,c
  3256  001708  50DF               	movf	indf2,w,c
  3257  00170A  6E2A               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3258  00170C  502A               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3259  00170E  6E38               	movwf	56,c
  3260  001710  6A39               	clrf	57,c
  3261                           
  3262                           ;FRAME.c: 334:     Dane->dzienU16 = message->data[6];
  3263  001712  EE20 F00E          	lfsr	2,14
  3264  001716  5028               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3265  001718  26D9               	addwf	fsr2l,f,c
  3266  00171A  5029               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3267  00171C  22DA               	addwfc	fsr2h,f,c
  3268  00171E  50DF               	movf	indf2,w,c
  3269  001720  6E2A               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3270  001722  502A               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3271  001724  6E3A               	movwf	58,c
  3272  001726  6A3B               	clrf	59,c
  3273                           
  3274                           ;FRAME.c: 335:     Dane->godzinaU16 = message->data[7];
  3275  001728  EE20 F00F          	lfsr	2,15
  3276  00172C  5028               	movf	FRAME_DataUpdateAndChangeOption@message,w,c
  3277  00172E  26D9               	addwf	fsr2l,f,c
  3278  001730  5029               	movf	FRAME_DataUpdateAndChangeOption@message+1,w,c
  3279  001732  22DA               	addwfc	fsr2h,f,c
  3280  001734  50DF               	movf	indf2,w,c
  3281  001736  6E2A               	movwf	??_FRAME_DataUpdateAndChangeOption& (0+255),c
  3282  001738  502A               	movf	??_FRAME_DataUpdateAndChangeOption,w,c
  3283  00173A  6E3C               	movwf	60,c
  3284  00173C  6A3D               	clrf	61,c
  3285  00173E  0012               	return		;funcret
  3286  001740                     __end_of_FRAME_DataUpdateAndChangeOption:
  3287                           	opt callstack 0
  3288                           
  3289 ;; *************** function _FRAME_AxisStatus *****************
  3290 ;; Defined at:
  3291 ;;		line 298 in file "FRAME.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  message         2    5[COMRAM] PTR struct .
  3294 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  i               2    0        unsigned short 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;Total ram usage:        3 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    3
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_FRAME_HandleCanFrame
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text23
  3321  0019B8                     __ptext23:
  3322                           	opt callstack 0
  3323  0019B8                     _FRAME_AxisStatus:
  3324                           	opt callstack 25
  3325                           
  3326                           ;FRAME.c: 298: static void FRAME_AxisStatus(mID *message);FRAME.c: 299: {;FRAME.c: 300: 
      +                              WORD i;;FRAME.c: 302:     if(message->message_type == 0x02)
  3327                           
  3328                           ;incstack = 0
  3329  0019B8  EE20 F001          	lfsr	2,1
  3330  0019BC  5028               	movf	FRAME_AxisStatus@message,w,c
  3331  0019BE  26D9               	addwf	fsr2l,f,c
  3332  0019C0  5029               	movf	FRAME_AxisStatus@message+1,w,c
  3333  0019C2  22DA               	addwfc	fsr2h,f,c
  3334  0019C4  0E02               	movlw	2
  3335  0019C6  18DE               	xorwf	postinc2,w,c
  3336  0019C8  A4D8               	btfss	status,2,c
  3337  0019CA  0012               	return	
  3338                           
  3339                           ;FRAME.c: 303:     {;FRAME.c: 304:         message->data_length = 1;
  3340  0019CC  EE20 F010          	lfsr	2,16
  3341  0019D0  5028               	movf	FRAME_AxisStatus@message,w,c
  3342  0019D2  26D9               	addwf	fsr2l,f,c
  3343  0019D4  5029               	movf	FRAME_AxisStatus@message+1,w,c
  3344  0019D6  22DA               	addwfc	fsr2h,f,c
  3345  0019D8  0E01               	movlw	1
  3346  0019DA  6EDF               	movwf	indf2,c
  3347                           
  3348                           ;FRAME.c: 315:         message->data[0] = 0xFF;
  3349  0019DC  EE20 F008          	lfsr	2,8
  3350  0019E0  5028               	movf	FRAME_AxisStatus@message,w,c
  3351  0019E2  26D9               	addwf	fsr2l,f,c
  3352  0019E4  5029               	movf	FRAME_AxisStatus@message+1,w,c
  3353  0019E6  22DA               	addwfc	fsr2h,f,c
  3354  0019E8  0EFF               	movlw	255
  3355  0019EA  6EDF               	movwf	indf2,c
  3356                           
  3357                           ;FRAME.c: 316:     }
  3358  0019EC  0012               	return		;funcret
  3359  0019EE                     __end_of_FRAME_AxisStatus:
  3360                           	opt callstack 0
  3361                           
  3362 ;; *************** function _FRAME_AveragingTimes *****************
  3363 ;; Defined at:
  3364 ;;		line 239 in file "FRAME.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  message         2    5[COMRAM] PTR struct .
  3367 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;Total ram usage:        3 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    3
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_FRAME_HandleCanFrame
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text24
  3394  0019EE                     __ptext24:
  3395                           	opt callstack 0
  3396  0019EE                     _FRAME_AveragingTimes:
  3397                           	opt callstack 25
  3398                           
  3399                           ;FRAME.c: 239: static void FRAME_AveragingTimes(mID *message);FRAME.c: 240: {;FRAME.c: 2
      +                          41:     if(message->message_type == 0x02)
  3400                           
  3401                           ;incstack = 0
  3402  0019EE  EE20 F001          	lfsr	2,1
  3403  0019F2  5028               	movf	FRAME_AveragingTimes@message,w,c
  3404  0019F4  26D9               	addwf	fsr2l,f,c
  3405  0019F6  5029               	movf	FRAME_AveragingTimes@message+1,w,c
  3406  0019F8  22DA               	addwfc	fsr2h,f,c
  3407  0019FA  0E02               	movlw	2
  3408  0019FC  18DE               	xorwf	postinc2,w,c
  3409  0019FE  A4D8               	btfss	status,2,c
  3410  001A00  0012               	return	
  3411                           
  3412                           ;FRAME.c: 242:     {;FRAME.c: 243:         message->data_length = 1;
  3413  001A02  EE20 F010          	lfsr	2,16
  3414  001A06  5028               	movf	FRAME_AveragingTimes@message,w,c
  3415  001A08  26D9               	addwf	fsr2l,f,c
  3416  001A0A  5029               	movf	FRAME_AveragingTimes@message+1,w,c
  3417  001A0C  22DA               	addwfc	fsr2h,f,c
  3418  001A0E  0E01               	movlw	1
  3419  001A10  6EDF               	movwf	indf2,c
  3420                           
  3421                           ;FRAME.c: 251:         message->data[0] = 0xFF;
  3422  001A12  EE20 F008          	lfsr	2,8
  3423  001A16  5028               	movf	FRAME_AveragingTimes@message,w,c
  3424  001A18  26D9               	addwf	fsr2l,f,c
  3425  001A1A  5029               	movf	FRAME_AveragingTimes@message+1,w,c
  3426  001A1C  22DA               	addwfc	fsr2h,f,c
  3427  001A1E  0EFF               	movlw	255
  3428  001A20  6EDF               	movwf	indf2,c
  3429                           
  3430                           ;FRAME.c: 252:     }
  3431  001A22  0012               	return		;funcret
  3432  001A24                     __end_of_FRAME_AveragingTimes:
  3433                           	opt callstack 0
  3434                           
  3435 ;; *************** function _FRAME_AnalogValue *****************
  3436 ;; Defined at:
  3437 ;;		line 542 in file "FRAME.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  message         2    5[COMRAM] PTR struct .
  3440 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3441 ;;  set             2    7[COMRAM] unsigned short 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  i               2    0        unsigned short 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		None
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3453 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;Total ram usage:        4 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    3
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_FRAME_HandleCanFrame
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text25
  3468  001CAC                     __ptext25:
  3469                           	opt callstack 0
  3470  001CAC                     _FRAME_AnalogValue:
  3471                           	opt callstack 25
  3472                           
  3473                           ;incstack = 0
  3474  001CAC  0012               	return		;funcret
  3475  001CAE                     __end_of_FRAME_AnalogValue:
  3476                           	opt callstack 0
  3477                           
  3478 ;; *************** function _FRAME_AdressOfNeighbors *****************
  3479 ;; Defined at:
  3480 ;;		line 590 in file "FRAME.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  message         2    5[COMRAM] PTR struct .
  3483 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3484 ;;  nrRamki         2    7[COMRAM] unsigned short 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  kier            2   13[COMRAM] unsigned short 
  3487 ;;  it              2    0        unsigned short 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3499 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3500 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;Total ram usage:       10 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    4
  3504 ;; This function calls:
  3505 ;;		_CAN_SetupFilter_Ne
  3506 ;; This function is called by:
  3507 ;;		_FRAME_HandleCanFrame
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text26
  3512  000062                     __ptext26:
  3513                           	opt callstack 0
  3514  000062                     _FRAME_AdressOfNeighbors:
  3515                           	opt callstack 24
  3516                           
  3517                           ;FRAME.c: 590: static void FRAME_AdressOfNeighbors(mID *message, WORD nrRamki);FRAME.c: 
      +                          591: {;FRAME.c: 592:     WORD it;;FRAME.c: 595:     WORD kier = (nrRamki-0x10);
  3518                           
  3519                           ;incstack = 0
  3520  000062  0EF0               	movlw	240
  3521  000064  242A               	addwf	FRAME_AdressOfNeighbors@nrRamki,w,c
  3522  000066  6E30               	movwf	FRAME_AdressOfNeighbors@kier,c
  3523  000068  0EFF               	movlw	255
  3524  00006A  202B               	addwfc	FRAME_AdressOfNeighbors@nrRamki+1,w,c
  3525  00006C  6E31               	movwf	FRAME_AdressOfNeighbors@kier+1,c
  3526                           
  3527                           ;FRAME.c: 596:     if(message->message_type == 0x02)
  3528  00006E  EE20 F001          	lfsr	2,1
  3529  000072  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3530  000074  26D9               	addwf	fsr2l,f,c
  3531  000076  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3532  000078  22DA               	addwfc	fsr2h,f,c
  3533  00007A  0E02               	movlw	2
  3534  00007C  18DE               	xorwf	postinc2,w,c
  3535  00007E  A4D8               	btfss	status,2,c
  3536  000080  D08E               	goto	l4525
  3537                           
  3538                           ;FRAME.c: 597:     {;FRAME.c: 599:         message->data_length = 8;
  3539  000082  EE20 F010          	lfsr	2,16
  3540  000086  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3541  000088  26D9               	addwf	fsr2l,f,c
  3542  00008A  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3543  00008C  22DA               	addwfc	fsr2h,f,c
  3544  00008E  0E08               	movlw	8
  3545  000090  6EDF               	movwf	indf2,c
  3546                           
  3547                           ;FRAME.c: 601:         if(kier == 0)
  3548  000092  5030               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3549  000094  1031               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3550  000096  A4D8               	btfss	status,2,c
  3551  000098  D041               	goto	l4523
  3552                           
  3553                           ;FRAME.c: 602:         {;FRAME.c: 603:         message->data[0] = (NeightAdress1>> 8);
  3554  00009A  EE20 F008          	lfsr	2,8
  3555  00009E  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3556  0000A0  26D9               	addwf	fsr2l,f,c
  3557  0000A2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3558  0000A4  22DA               	addwfc	fsr2h,f,c
  3559  0000A6  5022               	movf	_NeightAdress1+1,w,c	;volatile
  3560  0000A8  6EDF               	movwf	indf2,c
  3561                           
  3562                           ;FRAME.c: 604:         message->data[1] = NeightAdress1 & 0b11111111;
  3563  0000AA  EE20 F009          	lfsr	2,9
  3564  0000AE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3565  0000B0  26D9               	addwf	fsr2l,f,c
  3566  0000B2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3567  0000B4  22DA               	addwfc	fsr2h,f,c
  3568  0000B6  C021  FFDF         	movff	_NeightAdress1,indf2	;volatile
  3569                           
  3570                           ;FRAME.c: 605:         message->data[2] = (NeightAdress2>> 8);
  3571  0000BA  EE20 F00A          	lfsr	2,10
  3572  0000BE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3573  0000C0  26D9               	addwf	fsr2l,f,c
  3574  0000C2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3575  0000C4  22DA               	addwfc	fsr2h,f,c
  3576  0000C6  504B               	movf	_NeightAdress2+1,w,c	;volatile
  3577  0000C8  6EDF               	movwf	indf2,c
  3578                           
  3579                           ;FRAME.c: 606:         message->data[3] = NeightAdress2 & 0b11111111;
  3580  0000CA  EE20 F00B          	lfsr	2,11
  3581  0000CE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3582  0000D0  26D9               	addwf	fsr2l,f,c
  3583  0000D2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3584  0000D4  22DA               	addwfc	fsr2h,f,c
  3585  0000D6  C04A  FFDF         	movff	_NeightAdress2,indf2	;volatile
  3586                           
  3587                           ;FRAME.c: 607:         message->data[4] = (NeightAdress3>> 8);
  3588  0000DA  EE20 F00C          	lfsr	2,12
  3589  0000DE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3590  0000E0  26D9               	addwf	fsr2l,f,c
  3591  0000E2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3592  0000E4  22DA               	addwfc	fsr2h,f,c
  3593  0000E6  5020               	movf	_NeightAdress3+1,w,c	;volatile
  3594  0000E8  6EDF               	movwf	indf2,c
  3595                           
  3596                           ;FRAME.c: 608:         message->data[5] = NeightAdress3 & 0b11111111;
  3597  0000EA  EE20 F00D          	lfsr	2,13
  3598  0000EE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3599  0000F0  26D9               	addwf	fsr2l,f,c
  3600  0000F2  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3601  0000F4  22DA               	addwfc	fsr2h,f,c
  3602  0000F6  C01F  FFDF         	movff	_NeightAdress3,indf2	;volatile
  3603                           
  3604                           ;FRAME.c: 609:         message->data[6] = (NeightAdress4>> 8);
  3605  0000FA  EE20 F00E          	lfsr	2,14
  3606  0000FE  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3607  000100  26D9               	addwf	fsr2l,f,c
  3608  000102  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3609  000104  22DA               	addwfc	fsr2h,f,c
  3610  000106  501E               	movf	_NeightAdress4+1,w,c	;volatile
  3611  000108  6EDF               	movwf	indf2,c
  3612                           
  3613                           ;FRAME.c: 610:         message->data[7] = NeightAdress4 & 0b11111111;
  3614  00010A  EE20 F00F          	lfsr	2,15
  3615  00010E  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3616  000110  26D9               	addwf	fsr2l,f,c
  3617  000112  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3618  000114  22DA               	addwfc	fsr2h,f,c
  3619  000116  C01D  FFDF         	movff	_NeightAdress4,indf2	;volatile
  3620                           
  3621                           ;FRAME.c: 611:         }
  3622  00011A  0012               	return	
  3623  00011C                     l4523:
  3624                           
  3625                           ;FRAME.c: 613:         {;FRAME.c: 614:         message->data[0] = (NeightAdress5>> 8);
  3626  00011C  EE20 F008          	lfsr	2,8
  3627  000120  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3628  000122  26D9               	addwf	fsr2l,f,c
  3629  000124  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3630  000126  22DA               	addwfc	fsr2h,f,c
  3631  000128  501C               	movf	_NeightAdress5+1,w,c	;volatile
  3632  00012A  6EDF               	movwf	indf2,c
  3633                           
  3634                           ;FRAME.c: 615:         message->data[1] = NeightAdress5 & 0b11111111;
  3635  00012C  EE20 F009          	lfsr	2,9
  3636  000130  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3637  000132  26D9               	addwf	fsr2l,f,c
  3638  000134  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3639  000136  22DA               	addwfc	fsr2h,f,c
  3640  000138  C01B  FFDF         	movff	_NeightAdress5,indf2	;volatile
  3641                           
  3642                           ;FRAME.c: 616:         message->data[2] = (NeightAdress6>> 8);
  3643  00013C  EE20 F00A          	lfsr	2,10
  3644  000140  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3645  000142  26D9               	addwf	fsr2l,f,c
  3646  000144  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3647  000146  22DA               	addwfc	fsr2h,f,c
  3648  000148  501A               	movf	_NeightAdress6+1,w,c	;volatile
  3649  00014A  6EDF               	movwf	indf2,c
  3650                           
  3651                           ;FRAME.c: 617:         message->data[3] = NeightAdress6 & 0b11111111;
  3652  00014C  EE20 F00B          	lfsr	2,11
  3653  000150  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3654  000152  26D9               	addwf	fsr2l,f,c
  3655  000154  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3656  000156  22DA               	addwfc	fsr2h,f,c
  3657  000158  C019  FFDF         	movff	_NeightAdress6,indf2	;volatile
  3658                           
  3659                           ;FRAME.c: 618:         message->data[4] = (NeightAdress7>> 8);
  3660  00015C  EE20 F00C          	lfsr	2,12
  3661  000160  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3662  000162  26D9               	addwf	fsr2l,f,c
  3663  000164  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3664  000166  22DA               	addwfc	fsr2h,f,c
  3665  000168  5018               	movf	_NeightAdress7+1,w,c	;volatile
  3666  00016A  6EDF               	movwf	indf2,c
  3667                           
  3668                           ;FRAME.c: 619:         message->data[5] = NeightAdress7 & 0b11111111;
  3669  00016C  EE20 F00D          	lfsr	2,13
  3670  000170  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3671  000172  26D9               	addwf	fsr2l,f,c
  3672  000174  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3673  000176  22DA               	addwfc	fsr2h,f,c
  3674  000178  C017  FFDF         	movff	_NeightAdress7,indf2	;volatile
  3675                           
  3676                           ;FRAME.c: 620:         message->data[6] = (NeightAdress8>> 8);
  3677  00017C  EE20 F00E          	lfsr	2,14
  3678  000180  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3679  000182  26D9               	addwf	fsr2l,f,c
  3680  000184  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3681  000186  22DA               	addwfc	fsr2h,f,c
  3682  000188  5016               	movf	_NeightAdress8+1,w,c	;volatile
  3683  00018A  6EDF               	movwf	indf2,c
  3684                           
  3685                           ;FRAME.c: 621:         message->data[7] = NeightAdress8 & 0b11111111;
  3686  00018C  EE20 F00F          	lfsr	2,15
  3687  000190  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3688  000192  26D9               	addwf	fsr2l,f,c
  3689  000194  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3690  000196  22DA               	addwfc	fsr2h,f,c
  3691  000198  C015  FFDF         	movff	_NeightAdress8,indf2	;volatile
  3692  00019C  0012               	return	
  3693  00019E                     l4525:
  3694                           
  3695                           ;FRAME.c: 628:     {;FRAME.c: 631:         if(kier == 0)
  3696  00019E  5030               	movf	FRAME_AdressOfNeighbors@kier,w,c
  3697  0001A0  1031               	iorwf	FRAME_AdressOfNeighbors@kier+1,w,c
  3698  0001A2  A4D8               	btfss	status,2,c
  3699  0001A4  D063               	goto	l4531
  3700                           
  3701                           ;FRAME.c: 632:         {;FRAME.c: 633:          NeightAdress1 = (message->data[0] << 8)|
      +                           message->data[1];
  3702  0001A6  EE20 F008          	lfsr	2,8
  3703  0001AA  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3704  0001AC  26D9               	addwf	fsr2l,f,c
  3705  0001AE  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3706  0001B0  22DA               	addwfc	fsr2h,f,c
  3707  0001B2  50DF               	movf	indf2,w,c
  3708  0001B4  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3709  0001B6  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3710  0001B8  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3711  0001BA  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3712  0001BC  EE20 F009          	lfsr	2,9
  3713  0001C0  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3714  0001C2  26D9               	addwf	fsr2l,f,c
  3715  0001C4  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3716  0001C6  22DA               	addwfc	fsr2h,f,c
  3717  0001C8  50DF               	movf	indf2,w,c
  3718  0001CA  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3719  0001CC  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3720  0001CE  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3721  0001D0  6E21               	movwf	_NeightAdress1,c	;volatile
  3722  0001D2  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3723  0001D4  6E22               	movwf	_NeightAdress1+1,c	;volatile
  3724                           
  3725                           ;FRAME.c: 634:          NeightAdress2 = (message->data[2] << 8)| message->data[3];
  3726  0001D6  EE20 F00A          	lfsr	2,10
  3727  0001DA  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3728  0001DC  26D9               	addwf	fsr2l,f,c
  3729  0001DE  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3730  0001E0  22DA               	addwfc	fsr2h,f,c
  3731  0001E2  50DF               	movf	indf2,w,c
  3732  0001E4  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3733  0001E6  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3734  0001E8  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3735  0001EA  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3736  0001EC  EE20 F00B          	lfsr	2,11
  3737  0001F0  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3738  0001F2  26D9               	addwf	fsr2l,f,c
  3739  0001F4  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3740  0001F6  22DA               	addwfc	fsr2h,f,c
  3741  0001F8  50DF               	movf	indf2,w,c
  3742  0001FA  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3743  0001FC  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3744  0001FE  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3745  000200  6E4A               	movwf	_NeightAdress2,c	;volatile
  3746  000202  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3747  000204  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  3748                           
  3749                           ;FRAME.c: 635:          NeightAdress3 = (message->data[4] << 8)| message->data[5];
  3750  000206  EE20 F00C          	lfsr	2,12
  3751  00020A  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3752  00020C  26D9               	addwf	fsr2l,f,c
  3753  00020E  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3754  000210  22DA               	addwfc	fsr2h,f,c
  3755  000212  50DF               	movf	indf2,w,c
  3756  000214  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3757  000216  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3758  000218  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3759  00021A  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3760  00021C  EE20 F00D          	lfsr	2,13
  3761  000220  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3762  000222  26D9               	addwf	fsr2l,f,c
  3763  000224  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3764  000226  22DA               	addwfc	fsr2h,f,c
  3765  000228  50DF               	movf	indf2,w,c
  3766  00022A  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3767  00022C  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3768  00022E  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3769  000230  6E1F               	movwf	_NeightAdress3,c	;volatile
  3770  000232  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3771  000234  6E20               	movwf	_NeightAdress3+1,c	;volatile
  3772                           
  3773                           ;FRAME.c: 636:          NeightAdress4 = (message->data[6] << 8)| message->data[7];
  3774  000236  EE20 F00E          	lfsr	2,14
  3775  00023A  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3776  00023C  26D9               	addwf	fsr2l,f,c
  3777  00023E  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3778  000240  22DA               	addwfc	fsr2h,f,c
  3779  000242  50DF               	movf	indf2,w,c
  3780  000244  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3781  000246  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3782  000248  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3783  00024A  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3784  00024C  EE20 F00F          	lfsr	2,15
  3785  000250  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3786  000252  26D9               	addwf	fsr2l,f,c
  3787  000254  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3788  000256  22DA               	addwfc	fsr2h,f,c
  3789  000258  50DF               	movf	indf2,w,c
  3790  00025A  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3791  00025C  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3792  00025E  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3793  000260  6E1D               	movwf	_NeightAdress4,c	;volatile
  3794  000262  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3795  000264  6E1E               	movwf	_NeightAdress4+1,c	;volatile
  3796  000266                     l4529:
  3797                           
  3798                           ;FRAME.c: 637:          CAN_SetupFilter_Ne();
  3799  000266  EC2C  F009         	call	_CAN_SetupFilter_Ne	;wreg free
  3800                           
  3801                           ;FRAME.c: 640:         }
  3802  00026A  0012               	return	
  3803  00026C                     l4531:
  3804                           
  3805                           ;FRAME.c: 642:         {;FRAME.c: 643:          NeightAdress5 = (message->data[0] << 8)|
      +                           message->data[1];
  3806  00026C  EE20 F008          	lfsr	2,8
  3807  000270  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3808  000272  26D9               	addwf	fsr2l,f,c
  3809  000274  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3810  000276  22DA               	addwfc	fsr2h,f,c
  3811  000278  50DF               	movf	indf2,w,c
  3812  00027A  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3813  00027C  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3814  00027E  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3815  000280  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3816  000282  EE20 F009          	lfsr	2,9
  3817  000286  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3818  000288  26D9               	addwf	fsr2l,f,c
  3819  00028A  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3820  00028C  22DA               	addwfc	fsr2h,f,c
  3821  00028E  50DF               	movf	indf2,w,c
  3822  000290  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3823  000292  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3824  000294  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3825  000296  6E1B               	movwf	_NeightAdress5,c	;volatile
  3826  000298  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3827  00029A  6E1C               	movwf	_NeightAdress5+1,c	;volatile
  3828                           
  3829                           ;FRAME.c: 644:          NeightAdress6 = (message->data[2] << 8)| message->data[3];
  3830  00029C  EE20 F00A          	lfsr	2,10
  3831  0002A0  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3832  0002A2  26D9               	addwf	fsr2l,f,c
  3833  0002A4  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3834  0002A6  22DA               	addwfc	fsr2h,f,c
  3835  0002A8  50DF               	movf	indf2,w,c
  3836  0002AA  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3837  0002AC  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3838  0002AE  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3839  0002B0  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3840  0002B2  EE20 F00B          	lfsr	2,11
  3841  0002B6  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3842  0002B8  26D9               	addwf	fsr2l,f,c
  3843  0002BA  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3844  0002BC  22DA               	addwfc	fsr2h,f,c
  3845  0002BE  50DF               	movf	indf2,w,c
  3846  0002C0  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3847  0002C2  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3848  0002C4  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3849  0002C6  6E19               	movwf	_NeightAdress6,c	;volatile
  3850  0002C8  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3851  0002CA  6E1A               	movwf	_NeightAdress6+1,c	;volatile
  3852                           
  3853                           ;FRAME.c: 645:          NeightAdress7 = (message->data[4] << 8)| message->data[5];
  3854  0002CC  EE20 F00C          	lfsr	2,12
  3855  0002D0  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3856  0002D2  26D9               	addwf	fsr2l,f,c
  3857  0002D4  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3858  0002D6  22DA               	addwfc	fsr2h,f,c
  3859  0002D8  50DF               	movf	indf2,w,c
  3860  0002DA  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3861  0002DC  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3862  0002DE  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3863  0002E0  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3864  0002E2  EE20 F00D          	lfsr	2,13
  3865  0002E6  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3866  0002E8  26D9               	addwf	fsr2l,f,c
  3867  0002EA  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3868  0002EC  22DA               	addwfc	fsr2h,f,c
  3869  0002EE  50DF               	movf	indf2,w,c
  3870  0002F0  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3871  0002F2  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3872  0002F4  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3873  0002F6  6E17               	movwf	_NeightAdress7,c	;volatile
  3874  0002F8  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3875  0002FA  6E18               	movwf	_NeightAdress7+1,c	;volatile
  3876                           
  3877                           ;FRAME.c: 646:          NeightAdress8 = (message->data[6] << 8)| message->data[7];
  3878  0002FC  EE20 F00E          	lfsr	2,14
  3879  000300  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3880  000302  26D9               	addwf	fsr2l,f,c
  3881  000304  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3882  000306  22DA               	addwfc	fsr2h,f,c
  3883  000308  50DF               	movf	indf2,w,c
  3884  00030A  6E2C               	movwf	??_FRAME_AdressOfNeighbors& (0+255),c
  3885  00030C  502C               	movf	??_FRAME_AdressOfNeighbors,w,c
  3886  00030E  6E2E               	movwf	(??_FRAME_AdressOfNeighbors+2)& (0+255),c
  3887  000310  6A2D               	clrf	(??_FRAME_AdressOfNeighbors+1)& (0+255),c
  3888  000312  EE20 F00F          	lfsr	2,15
  3889  000316  5028               	movf	FRAME_AdressOfNeighbors@message,w,c
  3890  000318  26D9               	addwf	fsr2l,f,c
  3891  00031A  5029               	movf	FRAME_AdressOfNeighbors@message+1,w,c
  3892  00031C  22DA               	addwfc	fsr2h,f,c
  3893  00031E  50DF               	movf	indf2,w,c
  3894  000320  6E2F               	movwf	(??_FRAME_AdressOfNeighbors+3)& (0+255),c
  3895  000322  502F               	movf	??_FRAME_AdressOfNeighbors+3,w,c
  3896  000324  102D               	iorwf	??_FRAME_AdressOfNeighbors+1,w,c
  3897  000326  6E15               	movwf	_NeightAdress8,c	;volatile
  3898  000328  502E               	movf	??_FRAME_AdressOfNeighbors+2,w,c
  3899  00032A  6E16               	movwf	_NeightAdress8+1,c	;volatile
  3900  00032C  D79C               	goto	l4529
  3901  00032E                     __end_of_FRAME_AdressOfNeighbors:
  3902                           	opt callstack 0
  3903                           
  3904 ;; *************** function _FRAME_AccelerometerStatus *****************
  3905 ;; Defined at:
  3906 ;;		line 162 in file "FRAME.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  message         2    7[COMRAM] PTR struct .
  3909 ;;		 -> TRM_DataTransmition@canMessage(17), 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;Total ram usage:        3 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    4
  3928 ;; This function calls:
  3929 ;;		_MOCK_Klikniecie_Spadek
  3930 ;;		_MOCK_PrzyspieszenieX
  3931 ;;		_MOCK_PrzyspieszenieY
  3932 ;;		_MOCK_PrzyspieszenieZ
  3933 ;; This function is called by:
  3934 ;;		_FRAME_HandleCanFrame
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text27
  3939  0014E0                     __ptext27:
  3940                           	opt callstack 0
  3941  0014E0                     _FRAME_AccelerometerStatus:
  3942                           	opt callstack 24
  3943                           
  3944                           ;FRAME.c: 162: static void FRAME_AccelerometerStatus(mID *message);FRAME.c: 163: {;FRAME
      +                          .c: 164:     if(message->message_type == 0x02)
  3945                           
  3946                           ;incstack = 0
  3947  0014E0  EE20 F001          	lfsr	2,1
  3948  0014E4  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3949  0014E6  26D9               	addwf	fsr2l,f,c
  3950  0014E8  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3951  0014EA  22DA               	addwfc	fsr2h,f,c
  3952  0014EC  0E02               	movlw	2
  3953  0014EE  18DE               	xorwf	postinc2,w,c
  3954  0014F0  A4D8               	btfss	status,2,c
  3955  0014F2  0012               	return	
  3956                           
  3957                           ;FRAME.c: 165:     {;FRAME.c: 166:         message->data_length = 4;
  3958  0014F4  EE20 F010          	lfsr	2,16
  3959  0014F8  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3960  0014FA  26D9               	addwf	fsr2l,f,c
  3961  0014FC  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3962  0014FE  22DA               	addwfc	fsr2h,f,c
  3963  001500  0E04               	movlw	4
  3964  001502  6EDF               	movwf	indf2,c
  3965                           
  3966                           ;FRAME.c: 170:         message->data[0] = MOCK_PrzyspieszenieX();
  3967  001504  EE20 F008          	lfsr	2,8
  3968  001508  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3969  00150A  26D9               	addwf	fsr2l,f,c
  3970  00150C  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3971  00150E  22DA               	addwfc	fsr2h,f,c
  3972  001510  EC2F  F00E         	call	_MOCK_PrzyspieszenieX	;wreg free
  3973  001514  5028               	movf	?_MOCK_PrzyspieszenieX,w,c
  3974  001516  6EDF               	movwf	indf2,c
  3975                           
  3976                           ;FRAME.c: 171:         message->data[1] = MOCK_PrzyspieszenieY();
  3977  001518  EE20 F009          	lfsr	2,9
  3978  00151C  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3979  00151E  26D9               	addwf	fsr2l,f,c
  3980  001520  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3981  001522  22DA               	addwfc	fsr2h,f,c
  3982  001524  EC2A  F00E         	call	_MOCK_PrzyspieszenieY	;wreg free
  3983  001528  5028               	movf	?_MOCK_PrzyspieszenieY,w,c
  3984  00152A  6EDF               	movwf	indf2,c
  3985                           
  3986                           ;FRAME.c: 172:         message->data[2] = MOCK_PrzyspieszenieZ();
  3987  00152C  EE20 F00A          	lfsr	2,10
  3988  001530  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3989  001532  26D9               	addwf	fsr2l,f,c
  3990  001534  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  3991  001536  22DA               	addwfc	fsr2h,f,c
  3992  001538  EC25  F00E         	call	_MOCK_PrzyspieszenieZ	;wreg free
  3993  00153C  5028               	movf	?_MOCK_PrzyspieszenieZ,w,c
  3994  00153E  6EDF               	movwf	indf2,c
  3995                           
  3996                           ;FRAME.c: 173:         message->data[3] = MOCK_Klikniecie_Spadek();
  3997  001540  EE20 F00B          	lfsr	2,11
  3998  001544  502A               	movf	FRAME_AccelerometerStatus@message,w,c
  3999  001546  26D9               	addwf	fsr2l,f,c
  4000  001548  502B               	movf	FRAME_AccelerometerStatus@message+1,w,c
  4001  00154A  22DA               	addwfc	fsr2h,f,c
  4002  00154C  EC34  F00E         	call	_MOCK_Klikniecie_Spadek	;wreg free
  4003  001550  5028               	movf	?_MOCK_Klikniecie_Spadek,w,c
  4004  001552  6EDF               	movwf	indf2,c
  4005                           
  4006                           ;FRAME.c: 174:     }
  4007  001554  0012               	return		;funcret
  4008  001556                     __end_of_FRAME_AccelerometerStatus:
  4009                           	opt callstack 0
  4010                           
  4011 ;; *************** function _MOCK_PrzyspieszenieZ *****************
  4012 ;; Defined at:
  4013 ;;		line 72 in file "MOC_Funct.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2    5[COMRAM] unsigned int 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;Total ram usage:        2 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    3
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_FRAME_AccelerometerStatus
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text28
  4042  001C4A                     __ptext28:
  4043                           	opt callstack 0
  4044  001C4A                     _MOCK_PrzyspieszenieZ:
  4045                           	opt callstack 24
  4046                           
  4047                           ;MOC_Funct.c: 74:     return 0xFE;
  4048                           
  4049                           ;incstack = 0
  4050  001C4A  0E00               	movlw	0
  4051  001C4C  6E29               	movwf	?_MOCK_PrzyspieszenieZ+1,c
  4052  001C4E  0EFE               	movlw	254
  4053  001C50  6E28               	movwf	?_MOCK_PrzyspieszenieZ,c
  4054  001C52  0012               	return		;funcret
  4055  001C54                     __end_of_MOCK_PrzyspieszenieZ:
  4056                           	opt callstack 0
  4057                           
  4058 ;; *************** function _MOCK_PrzyspieszenieY *****************
  4059 ;; Defined at:
  4060 ;;		line 68 in file "MOC_Funct.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;		None
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  2    5[COMRAM] unsigned int 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;Total ram usage:        2 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    3
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_FRAME_AccelerometerStatus
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text29
  4089  001C54                     __ptext29:
  4090                           	opt callstack 0
  4091  001C54                     _MOCK_PrzyspieszenieY:
  4092                           	opt callstack 24
  4093                           
  4094                           ;MOC_Funct.c: 70:     return 0xFE;
  4095                           
  4096                           ;incstack = 0
  4097  001C54  0E00               	movlw	0
  4098  001C56  6E29               	movwf	?_MOCK_PrzyspieszenieY+1,c
  4099  001C58  0EFE               	movlw	254
  4100  001C5A  6E28               	movwf	?_MOCK_PrzyspieszenieY,c
  4101  001C5C  0012               	return		;funcret
  4102  001C5E                     __end_of_MOCK_PrzyspieszenieY:
  4103                           	opt callstack 0
  4104                           
  4105 ;; *************** function _MOCK_PrzyspieszenieX *****************
  4106 ;; Defined at:
  4107 ;;		line 63 in file "MOC_Funct.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  2    5[COMRAM] unsigned int 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;Total ram usage:        2 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    3
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_FRAME_AccelerometerStatus
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text30
  4136  001C5E                     __ptext30:
  4137                           	opt callstack 0
  4138  001C5E                     _MOCK_PrzyspieszenieX:
  4139                           	opt callstack 24
  4140                           
  4141                           ;MOC_Funct.c: 65:     return 0xFE;
  4142                           
  4143                           ;incstack = 0
  4144  001C5E  0E00               	movlw	0
  4145  001C60  6E29               	movwf	?_MOCK_PrzyspieszenieX+1,c
  4146  001C62  0EFE               	movlw	254
  4147  001C64  6E28               	movwf	?_MOCK_PrzyspieszenieX,c
  4148  001C66  0012               	return		;funcret
  4149  001C68                     __end_of_MOCK_PrzyspieszenieX:
  4150                           	opt callstack 0
  4151                           
  4152 ;; *************** function _MOCK_Klikniecie_Spadek *****************
  4153 ;; Defined at:
  4154 ;;		line 76 in file "MOC_Funct.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  2    5[COMRAM] unsigned int 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;Total ram usage:        2 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    3
  4175 ;; This function calls:
  4176 ;;		Nothing
  4177 ;; This function is called by:
  4178 ;;		_FRAME_AccelerometerStatus
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text31
  4183  001C68                     __ptext31:
  4184                           	opt callstack 0
  4185  001C68                     _MOCK_Klikniecie_Spadek:
  4186                           	opt callstack 24
  4187                           
  4188                           ;MOC_Funct.c: 78:     return 0b00000000;
  4189                           
  4190                           ;incstack = 0
  4191  001C68  0E00               	movlw	0
  4192  001C6A  6E29               	movwf	?_MOCK_Klikniecie_Spadek+1,c
  4193  001C6C  0E00               	movlw	0
  4194  001C6E  6E28               	movwf	?_MOCK_Klikniecie_Spadek,c
  4195  001C70  0012               	return		;funcret
  4196  001C72                     __end_of_MOCK_Klikniecie_Spadek:
  4197                           	opt callstack 0
  4198                           
  4199 ;; *************** function _CAN_SendFrame *****************
  4200 ;; Defined at:
  4201 ;;		line 247 in file "CAN.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  message         2   10[COMRAM] PTR struct .
  4204 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4220 ;;Total ram usage:        5 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    4
  4223 ;; This function calls:
  4224 ;;		_CAN_MoveBuffIntoFrame
  4225 ;; This function is called by:
  4226 ;;		_FRAME_HandleCanFrame
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text32
  4231  00093E                     __ptext32:
  4232                           	opt callstack 0
  4233  00093E                     _CAN_SendFrame:
  4234                           	opt callstack 24
  4235                           
  4236                           ;CAN.c: 252:     {;CAN.c: 253:         ECANCON = 0x83;
  4237                           
  4238                           ;incstack = 0
  4239                           ;CAN.c: 247: void CAN_SendFrame(mID * message);CAN.c: 248: {;CAN.c: 251:     for(;;)
  4240  00093E  0E83               	movlw	131
  4241  000940  6E77               	movwf	3959,c	;volatile
  4242                           
  4243                           ;CAN.c: 254:         if(!RXB0CONbits.FILHIT3)
  4244  000942  A660               	btfss	3936,3,c	;volatile
  4245  000944  D00A               	goto	l290
  4246                           
  4247                           ;CAN.c: 259:         ECANCON = 0x84;
  4248  000946  0E84               	movlw	132
  4249  000948  6E77               	movwf	3959,c	;volatile
  4250                           
  4251                           ;CAN.c: 260:         if(!RXB0CONbits.FILHIT3)
  4252  00094A  A660               	btfss	3936,3,c	;volatile
  4253  00094C  D006               	goto	l290
  4254                           
  4255                           ;CAN.c: 265:         ECANCON = 0x85;
  4256  00094E  0E85               	movlw	133
  4257  000950  6E77               	movwf	3959,c	;volatile
  4258                           
  4259                           ;CAN.c: 266:         if(!RXB0CONbits.FILHIT3)
  4260  000952  A660               	btfss	3936,3,c	;volatile
  4261  000954  D002               	goto	l290
  4262  000956  D7F3               	goto	_CAN_SendFrame
  4263  000958                     l291:
  4264  000958  00FF               	reset		;# 
  4265  00095A                     l290:
  4266                           
  4267                           ;CAN.c: 273:     while(COMSTATbits.TXWARN)
  4268  00095A  B474               	btfsc	3956,2,c	;volatile
  4269  00095C  D7FD               	goto	l291
  4270                           
  4271                           ;CAN.c: 277:     DetectorLedRadar.timerRamkiTxCANU8 = 0;
  4272  00095E  0E00               	movlw	0
  4273  000960  0100               	movlb	0	; () banked
  4274  000962  6FCD               	movwf	(_DetectorLedRadar+2)& (0+255),b
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;CAN.c: 278:     RXB0EIDL = message->id.v[0];
  4278  000964  EE20 F004          	lfsr	2,4
  4279  000968  502D               	movf	CAN_SendFrame@message,w,c
  4280  00096A  26D9               	addwf	fsr2l,f,c
  4281  00096C  502E               	movf	CAN_SendFrame@message+1,w,c
  4282  00096E  22DA               	addwfc	fsr2h,f,c
  4283  000970  50DF               	movf	indf2,w,c
  4284  000972  6E64               	movwf	3940,c	;volatile
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;CAN.c: 279:     RXB0EIDH = message->id.v[1];
  4288  000974  EE20 F005          	lfsr	2,5
  4289  000978  502D               	movf	CAN_SendFrame@message,w,c
  4290  00097A  26D9               	addwf	fsr2l,f,c
  4291  00097C  502E               	movf	CAN_SendFrame@message+1,w,c
  4292  00097E  22DA               	addwfc	fsr2h,f,c
  4293  000980  50DF               	movf	indf2,w,c
  4294  000982  6E63               	movwf	3939,c	;volatile
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;CAN.c: 280:     RXB0SIDL = ((message->id.v[2]&0xFC)*8) | (message->id.v[2] & (0x03));
  4298  000984  EE20 F006          	lfsr	2,6
  4299  000988  502D               	movf	CAN_SendFrame@message,w,c
  4300  00098A  26D9               	addwf	fsr2l,f,c
  4301  00098C  502E               	movf	CAN_SendFrame@message+1,w,c
  4302  00098E  22DA               	addwfc	fsr2h,f,c
  4303  000990  50DF               	movf	indf2,w,c
  4304  000992  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4305  000994  0E03               	movlw	3
  4306  000996  162F               	andwf	??_CAN_SendFrame,f,c
  4307  000998  EE20 F006          	lfsr	2,6
  4308  00099C  502D               	movf	CAN_SendFrame@message,w,c
  4309  00099E  26D9               	addwf	fsr2l,f,c
  4310  0009A0  502E               	movf	CAN_SendFrame@message+1,w,c
  4311  0009A2  22DA               	addwfc	fsr2h,f,c
  4312  0009A4  50DF               	movf	indf2,w,c
  4313  0009A6  0BFC               	andlw	252
  4314  0009A8  0D08               	mullw	8
  4315  0009AA  50F3               	movf	prodl,w,c
  4316  0009AC  102F               	iorwf	??_CAN_SendFrame,w,c
  4317  0009AE  6E62               	movwf	3938,c	;volatile
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;CAN.c: 281:     RXB0SIDLbits.EXID = 1;
  4321  0009B0  8662               	bsf	3938,3,c	;volatile
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;CAN.c: 282:     RXB0SIDH = (BYTE)(message->id.w[1]/32);
  4325  0009B2  EE20 F006          	lfsr	2,6
  4326  0009B6  502D               	movf	CAN_SendFrame@message,w,c
  4327  0009B8  26D9               	addwf	fsr2l,f,c
  4328  0009BA  502E               	movf	CAN_SendFrame@message+1,w,c
  4329  0009BC  22DA               	addwfc	fsr2h,f,c
  4330  0009BE  CFDE F02F          	movff	postinc2,??_CAN_SendFrame
  4331  0009C2  CFDD F030          	movff	postdec2,??_CAN_SendFrame+1
  4332  0009C6  0E05               	movlw	5
  4333  0009C8  6E31               	movwf	(??_CAN_SendFrame+2)& (0+255),c
  4334  0009CA                     u2575:
  4335  0009CA  90D8               	bcf	status,0,c
  4336  0009CC  3230               	rrcf	??_CAN_SendFrame+1,f,c
  4337  0009CE  322F               	rrcf	??_CAN_SendFrame,f,c
  4338  0009D0  2E31               	decfsz	(??_CAN_SendFrame+2)& (0+255),f,c
  4339  0009D2  D7FB               	goto	u2575
  4340  0009D4  502F               	movf	??_CAN_SendFrame,w,c
  4341  0009D6  6E61               	movwf	3937,c	;volatile
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;CAN.c: 284:     RXB0DLC = 0;
  4345  0009D8  0E00               	movlw	0
  4346  0009DA  6E65               	movwf	3941,c	;volatile
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;CAN.c: 286:     if(message->message_type==0x02)
  4350  0009DC  EE20 F001          	lfsr	2,1
  4351  0009E0  502D               	movf	CAN_SendFrame@message,w,c
  4352  0009E2  26D9               	addwf	fsr2l,f,c
  4353  0009E4  502E               	movf	CAN_SendFrame@message+1,w,c
  4354  0009E6  22DA               	addwfc	fsr2h,f,c
  4355  0009E8  0E02               	movlw	2
  4356  0009EA  18DE               	xorwf	postinc2,w,c
  4357  0009EC  A4D8               	btfss	status,2,c
  4358  0009EE  D002               	goto	l4387
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;CAN.c: 287:     {;CAN.c: 288:         RXB0DLCbits.RXRTR = 1;
  4362  0009F0  8C65               	bsf	3941,6,c	;volatile
  4363                           
  4364                           ;CAN.c: 289:     }
  4365  0009F2  D05A               	goto	l4391
  4366  0009F4                     l4387:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;CAN.c: 291:     {;CAN.c: 292:         RXB0DLCbits.DLC0 = (message->data_length & 0x0F);
  4370  0009F4  EE20 F010          	lfsr	2,16
  4371  0009F8  502D               	movf	CAN_SendFrame@message,w,c
  4372  0009FA  26D9               	addwf	fsr2l,f,c
  4373  0009FC  502E               	movf	CAN_SendFrame@message+1,w,c
  4374  0009FE  22DA               	addwfc	fsr2h,f,c
  4375  000A00  50DF               	movf	indf2,w,c
  4376  000A02  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4377  000A04  0E0F               	movlw	15
  4378  000A06  162F               	andwf	??_CAN_SendFrame,f,c
  4379  000A08  5065               	movf	3941,w,c	;volatile
  4380  000A0A  182F               	xorwf	??_CAN_SendFrame,w,c
  4381  000A0C  0BFE               	andlw	-2
  4382  000A0E  182F               	xorwf	??_CAN_SendFrame,w,c
  4383  000A10  6E65               	movwf	3941,c	;volatile
  4384                           
  4385                           ;CAN.c: 293:         RXB0DLCbits.DLC1 = ((message->data_length & 0x0F)>> 1);
  4386  000A12  EE20 F010          	lfsr	2,16
  4387  000A16  502D               	movf	CAN_SendFrame@message,w,c
  4388  000A18  26D9               	addwf	fsr2l,f,c
  4389  000A1A  502E               	movf	CAN_SendFrame@message+1,w,c
  4390  000A1C  22DA               	addwfc	fsr2h,f,c
  4391  000A1E  50DF               	movf	indf2,w,c
  4392  000A20  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4393  000A22  90D8               	bcf	status,0,c
  4394  000A24  322F               	rrcf	??_CAN_SendFrame,f,c
  4395  000A26  0E07               	movlw	7
  4396  000A28  162F               	andwf	??_CAN_SendFrame,f,c
  4397  000A2A  462F               	rlncf	??_CAN_SendFrame,f,c
  4398  000A2C  5065               	movf	3941,w,c	;volatile
  4399  000A2E  182F               	xorwf	??_CAN_SendFrame,w,c
  4400  000A30  0BFD               	andlw	-3
  4401  000A32  182F               	xorwf	??_CAN_SendFrame,w,c
  4402  000A34  6E65               	movwf	3941,c	;volatile
  4403                           
  4404                           ;CAN.c: 294:         RXB0DLCbits.DLC2 = ((message->data_length & 0x0F)>> 2);
  4405  000A36  EE20 F010          	lfsr	2,16
  4406  000A3A  502D               	movf	CAN_SendFrame@message,w,c
  4407  000A3C  26D9               	addwf	fsr2l,f,c
  4408  000A3E  502E               	movf	CAN_SendFrame@message+1,w,c
  4409  000A40  22DA               	addwfc	fsr2h,f,c
  4410  000A42  50DF               	movf	indf2,w,c
  4411  000A44  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4412  000A46  90D8               	bcf	status,0,c
  4413  000A48  322F               	rrcf	??_CAN_SendFrame,f,c
  4414  000A4A  90D8               	bcf	status,0,c
  4415  000A4C  322F               	rrcf	??_CAN_SendFrame,f,c
  4416  000A4E  0E03               	movlw	3
  4417  000A50  162F               	andwf	??_CAN_SendFrame,f,c
  4418  000A52  462F               	rlncf	??_CAN_SendFrame,f,c
  4419  000A54  462F               	rlncf	??_CAN_SendFrame,f,c
  4420  000A56  5065               	movf	3941,w,c	;volatile
  4421  000A58  182F               	xorwf	??_CAN_SendFrame,w,c
  4422  000A5A  0BFB               	andlw	-5
  4423  000A5C  182F               	xorwf	??_CAN_SendFrame,w,c
  4424  000A5E  6E65               	movwf	3941,c	;volatile
  4425                           
  4426                           ;CAN.c: 295:         RXB0DLCbits.DLC3 = ((message->data_length & 0x0F)>> 3);
  4427  000A60  EE20 F010          	lfsr	2,16
  4428  000A64  502D               	movf	CAN_SendFrame@message,w,c
  4429  000A66  26D9               	addwf	fsr2l,f,c
  4430  000A68  502E               	movf	CAN_SendFrame@message+1,w,c
  4431  000A6A  22DA               	addwfc	fsr2h,f,c
  4432  000A6C  50DF               	movf	indf2,w,c
  4433  000A6E  6E2F               	movwf	??_CAN_SendFrame& (0+255),c
  4434  000A70  90D8               	bcf	status,0,c
  4435  000A72  322F               	rrcf	??_CAN_SendFrame,f,c
  4436  000A74  90D8               	bcf	status,0,c
  4437  000A76  322F               	rrcf	??_CAN_SendFrame,f,c
  4438  000A78  90D8               	bcf	status,0,c
  4439  000A7A  322F               	rrcf	??_CAN_SendFrame,f,c
  4440  000A7C  0E01               	movlw	1
  4441  000A7E  162F               	andwf	??_CAN_SendFrame,f,c
  4442  000A80  462F               	rlncf	??_CAN_SendFrame,f,c
  4443  000A82  462F               	rlncf	??_CAN_SendFrame,f,c
  4444  000A84  462F               	rlncf	??_CAN_SendFrame,f,c
  4445  000A86  5065               	movf	3941,w,c	;volatile
  4446  000A88  182F               	xorwf	??_CAN_SendFrame,w,c
  4447  000A8A  0BF7               	andlw	-9
  4448  000A8C  182F               	xorwf	??_CAN_SendFrame,w,c
  4449  000A8E  6E65               	movwf	3941,c	;volatile
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;CAN.c: 297:         CAN_MoveBuffIntoFrame(&RXB0D0, message->data);
  4453  000A90  0E66               	movlw	102
  4454  000A92  6E28               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4455  000A94  0E0F               	movlw	15
  4456  000A96  6E29               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4457  000A98  0E08               	movlw	8
  4458  000A9A  242D               	addwf	CAN_SendFrame@message,w,c
  4459  000A9C  6E2A               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4460  000A9E  0E00               	movlw	0
  4461  000AA0  202E               	addwfc	CAN_SendFrame@message+1,w,c
  4462  000AA2  6E2B               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4463  000AA4  EC7B  F00D         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4464  000AA8                     l4391:
  4465                           
  4466                           ;CAN.c: 300:     RXB0CONbits.FILHIT3 = 1;
  4467  000AA8  8660               	bsf	3936,3,c	;volatile
  4468                           
  4469                           ;CAN.c: 302:     DetectorLedRadar.Flags.ramkaTx = 1;
  4470  000AAA  0100               	movlb	0	; () banked
  4471  000AAC  89CB               	bsf	_DetectorLedRadar& (0+255),4,b
  4472                           
  4473                           ; BSR set to: 0
  4474  000AAE  0012               	return		;funcret
  4475  000AB0                     __end_of_CAN_SendFrame:
  4476                           	opt callstack 0
  4477                           
  4478 ;; *************** function _CAN_GenID *****************
  4479 ;; Defined at:
  4480 ;;		line 446 in file "CAN.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  message         2    5[COMRAM] PTR struct .
  4483 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4484 ;;  frameID         1    7[COMRAM] unsigned char 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4496 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4499 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;Total ram usage:        5 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    3
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_FRAME_HandleCanFrame
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text33
  4511  001468                     __ptext33:
  4512                           	opt callstack 0
  4513  001468                     _CAN_GenID:
  4514                           	opt callstack 25
  4515                           
  4516                           ;CAN.c: 446: void CAN_GenID(mID * message, BYTE frameID);CAN.c: 447: {;CAN.c: 449:     m
      +                          essage->frame_type = 0x03;
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;incstack = 0
  4520  001468  EE20 F002          	lfsr	2,2
  4521  00146C  5028               	movf	CAN_GenID@message,w,c
  4522  00146E  26D9               	addwf	fsr2l,f,c
  4523  001470  5029               	movf	CAN_GenID@message+1,w,c
  4524  001472  22DA               	addwfc	fsr2h,f,c
  4525  001474  0E03               	movlw	3
  4526  001476  6EDF               	movwf	indf2,c
  4527                           
  4528                           ;CAN.c: 450:     message->message_type = 0x01;
  4529  001478  EE20 F001          	lfsr	2,1
  4530  00147C  5028               	movf	CAN_GenID@message,w,c
  4531  00147E  26D9               	addwf	fsr2l,f,c
  4532  001480  5029               	movf	CAN_GenID@message+1,w,c
  4533  001482  22DA               	addwfc	fsr2h,f,c
  4534  001484  0E01               	movlw	1
  4535  001486  6EDF               	movwf	indf2,c
  4536                           
  4537                           ;CAN.c: 451:     message->id.w[1] = (WORD)frameID * (WORD)4;
  4538  001488  502A               	movf	CAN_GenID@frameID,w,c
  4539  00148A  6E2B               	movwf	??_CAN_GenID& (0+255),c
  4540  00148C  6A2C               	clrf	(??_CAN_GenID+1)& (0+255),c
  4541  00148E  90D8               	bcf	status,0,c
  4542  001490  362B               	rlcf	??_CAN_GenID,f,c
  4543  001492  362C               	rlcf	??_CAN_GenID+1,f,c
  4544  001494  90D8               	bcf	status,0,c
  4545  001496  362B               	rlcf	??_CAN_GenID,f,c
  4546  001498  362C               	rlcf	??_CAN_GenID+1,f,c
  4547  00149A  EE20 F006          	lfsr	2,6
  4548  00149E  5028               	movf	CAN_GenID@message,w,c
  4549  0014A0  26D9               	addwf	fsr2l,f,c
  4550  0014A2  5029               	movf	CAN_GenID@message+1,w,c
  4551  0014A4  22DA               	addwfc	fsr2h,f,c
  4552  0014A6  C02B  FFDE         	movff	??_CAN_GenID,postinc2
  4553  0014AA  C02C  FFDD         	movff	??_CAN_GenID+1,postdec2
  4554                           
  4555                           ;CAN.c: 452:     message->id.w[0] = DaneCan.adresCAN;
  4556  0014AE  EE20 F004          	lfsr	2,4
  4557  0014B2  5028               	movf	CAN_GenID@message,w,c
  4558  0014B4  26D9               	addwf	fsr2l,f,c
  4559  0014B6  5029               	movf	CAN_GenID@message+1,w,c
  4560  0014B8  22DA               	addwfc	fsr2h,f,c
  4561  0014BA  C003  FFDE         	movff	_DaneCan+2,postinc2
  4562  0014BE  C004  FFDD         	movff	_DaneCan+3,postdec2
  4563                           
  4564                           ;CAN.c: 455:     message ->id.bits.b16 = 0;
  4565  0014C2  EE20 F006          	lfsr	2,6
  4566  0014C6  5028               	movf	CAN_GenID@message,w,c
  4567  0014C8  26D9               	addwf	fsr2l,f,c
  4568  0014CA  5029               	movf	CAN_GenID@message+1,w,c
  4569  0014CC  22DA               	addwfc	fsr2h,f,c
  4570  0014CE  90DF               	bcf	indf2,0,c
  4571                           
  4572                           ;CAN.c: 456:     message ->id.bits.b17 = 0;
  4573  0014D0  EE20 F006          	lfsr	2,6
  4574  0014D4  5028               	movf	CAN_GenID@message,w,c
  4575  0014D6  26D9               	addwf	fsr2l,f,c
  4576  0014D8  5029               	movf	CAN_GenID@message+1,w,c
  4577  0014DA  22DA               	addwfc	fsr2h,f,c
  4578  0014DC  92DF               	bcf	indf2,1,c
  4579  0014DE  0012               	return		;funcret
  4580  0014E0                     __end_of_CAN_GenID:
  4581                           	opt callstack 0
  4582                           
  4583 ;; *************** function _CAN_TakeFrame *****************
  4584 ;; Defined at:
  4585 ;;		line 311 in file "CAN.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  message         2   13[COMRAM] PTR struct .
  4588 ;;		 -> TRM_DataTransmition@canMessage(17), 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  k               1   18[COMRAM] unsigned char 
  4591 ;;  tempCON         1   17[COMRAM] unsigned char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      enum E10433
  4594 ;; Registers used:
  4595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;Total ram usage:        6 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    4
  4608 ;; This function calls:
  4609 ;;		_CAN_MoveBuffIntoFrame
  4610 ;;		___awdiv
  4611 ;; This function is called by:
  4612 ;;		_TRM_DataTransmition
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text34
  4617  00032E                     __ptext34:
  4618                           	opt callstack 0
  4619  00032E                     _CAN_TakeFrame:
  4620                           	opt callstack 25
  4621                           
  4622                           ;CAN.c: 311: BOOL CAN_TakeFrame(mID * message);CAN.c: 312: {;CAN.c: 313:     BYTE k, tem
      +                          pCON;;CAN.c: 315:     k = CANCON&0x0F;
  4623                           
  4624                           ;incstack = 0
  4625  00032E  506F               	movf	3951,w,c	;volatile
  4626  000330  0B0F               	andlw	15
  4627  000332  6E35               	movwf	CAN_TakeFrame@k,c
  4628                           
  4629                           ;CAN.c: 317:     ECANCON = 0x90 | k;
  4630  000334  5035               	movf	CAN_TakeFrame@k,w,c
  4631  000336  0990               	iorlw	144
  4632  000338  6E77               	movwf	3959,c	;volatile
  4633                           
  4634                           ;CAN.c: 320:     switch(k)
  4635  00033A  D018               	goto	l4599
  4636  00033C                     l299:
  4637                           
  4638                           ;CAN.c: 323:             tempCON = RXB0CON;
  4639  00033C  CF60 F034          	movff	3936,CAN_TakeFrame@tempCON	;volatile
  4640                           
  4641                           ;CAN.c: 324:             break;
  4642  000340  D035               	goto	l300
  4643  000342                     l301:
  4644                           
  4645                           ;CAN.c: 326:             tempCON = RXB1CON;
  4646  000342  CF50 F034          	movff	3920,CAN_TakeFrame@tempCON	;volatile
  4647                           
  4648                           ;CAN.c: 327:             break;
  4649  000346  D032               	goto	l300
  4650  000348                     l302:
  4651                           
  4652                           ;CAN.c: 329:             tempCON = B0CON;
  4653  000348  CE20 F034          	movff	3616,CAN_TakeFrame@tempCON	;volatile
  4654                           
  4655                           ;CAN.c: 330:             break;
  4656  00034C  D02F               	goto	l300
  4657  00034E                     l303:
  4658                           
  4659                           ;CAN.c: 332:             tempCON = B1CON;
  4660  00034E  CE30 F034          	movff	3632,CAN_TakeFrame@tempCON	;volatile
  4661                           
  4662                           ;CAN.c: 333:             break;
  4663  000352  D02C               	goto	l300
  4664  000354                     l304:
  4665                           
  4666                           ;CAN.c: 335:             tempCON = B2CON;
  4667  000354  CE40 F034          	movff	3648,CAN_TakeFrame@tempCON	;volatile
  4668                           
  4669                           ;CAN.c: 336:             break;
  4670  000358  D029               	goto	l300
  4671  00035A                     l305:
  4672                           
  4673                           ;CAN.c: 338:             tempCON = B3CON;
  4674  00035A  CE50 F034          	movff	3664,CAN_TakeFrame@tempCON	;volatile
  4675                           
  4676                           ;CAN.c: 339:             break;
  4677  00035E  D026               	goto	l300
  4678  000360                     l306:
  4679                           
  4680                           ;CAN.c: 341:             tempCON = B4CON;
  4681  000360  CE60 F034          	movff	3680,CAN_TakeFrame@tempCON	;volatile
  4682                           
  4683                           ;CAN.c: 342:             break;
  4684  000364  D023               	goto	l300
  4685  000366                     l307:
  4686                           
  4687                           ;CAN.c: 344:             tempCON = B5CON;
  4688  000366  CE70 F034          	movff	3696,CAN_TakeFrame@tempCON	;volatile
  4689                           
  4690                           ;CAN.c: 345:             break;
  4691  00036A  D020               	goto	l300
  4692  00036C                     l4599:
  4693  00036C  5035               	movf	CAN_TakeFrame@k,w,c
  4694  00036E  6E32               	movwf	??_CAN_TakeFrame& (0+255),c
  4695  000370  6A33               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4696                           
  4697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4698                           ; Switch size 1, requested type "simple"
  4699                           ; Number of cases is 1, Range of values is 0 to 0
  4700                           ; switch strategies available:
  4701                           ; Name         Instructions Cycles
  4702                           ; simple_byte            4     3 (average)
  4703                           ;	Chosen strategy is simple_byte
  4704  000372  5033               	movf	??_CAN_TakeFrame+1,w,c
  4705  000374  0A00               	xorlw	0	; case 0
  4706  000376  A4D8               	btfss	status,2,c
  4707  000378  D019               	goto	l300
  4708                           
  4709                           ; Switch size 1, requested type "simple"
  4710                           ; Number of cases is 8, Range of values is 0 to 7
  4711                           ; switch strategies available:
  4712                           ; Name         Instructions Cycles
  4713                           ; simple_byte           25    13 (average)
  4714                           ;	Chosen strategy is simple_byte
  4715  00037A  5032               	movf	??_CAN_TakeFrame,w,c
  4716  00037C  0A00               	xorlw	0	; case 0
  4717  00037E  B4D8               	btfsc	status,2,c
  4718  000380  D7DD               	goto	l299
  4719  000382  0A01               	xorlw	1	; case 1
  4720  000384  B4D8               	btfsc	status,2,c
  4721  000386  D7DD               	goto	l301
  4722  000388  0A03               	xorlw	3	; case 2
  4723  00038A  B4D8               	btfsc	status,2,c
  4724  00038C  D7DD               	goto	l302
  4725  00038E  0A01               	xorlw	1	; case 3
  4726  000390  B4D8               	btfsc	status,2,c
  4727  000392  D7DD               	goto	l303
  4728  000394  0A07               	xorlw	7	; case 4
  4729  000396  B4D8               	btfsc	status,2,c
  4730  000398  D7DD               	goto	l304
  4731  00039A  0A01               	xorlw	1	; case 5
  4732  00039C  B4D8               	btfsc	status,2,c
  4733  00039E  D7DD               	goto	l305
  4734  0003A0  0A03               	xorlw	3	; case 6
  4735  0003A2  B4D8               	btfsc	status,2,c
  4736  0003A4  D7DD               	goto	l306
  4737  0003A6  0A01               	xorlw	1	; case 7
  4738  0003A8  B4D8               	btfsc	status,2,c
  4739  0003AA  D7DD               	goto	l307
  4740  0003AC                     l300:
  4741                           
  4742                           ;CAN.c: 349:     if((tempCON & 0x80) > 0)
  4743  0003AC  AE34               	btfss	CAN_TakeFrame@tempCON,7,c
  4744  0003AE  D0A5               	goto	l4635
  4745                           
  4746                           ;CAN.c: 350:     {;CAN.c: 351:         message->buffer = RXB0CON & 0x1F;
  4747  0003B0  EE20 F003          	lfsr	2,3
  4748  0003B4  5030               	movf	CAN_TakeFrame@message,w,c
  4749  0003B6  26D9               	addwf	fsr2l,f,c
  4750  0003B8  5031               	movf	CAN_TakeFrame@message+1,w,c
  4751  0003BA  22DA               	addwfc	fsr2h,f,c
  4752  0003BC  5060               	movf	3936,w,c	;volatile
  4753  0003BE  0B1F               	andlw	31
  4754  0003C0  6EDF               	movwf	indf2,c
  4755                           
  4756                           ;CAN.c: 352:         message->id.v[0] = RXB0EIDL;
  4757  0003C2  EE20 F004          	lfsr	2,4
  4758  0003C6  5030               	movf	CAN_TakeFrame@message,w,c
  4759  0003C8  26D9               	addwf	fsr2l,f,c
  4760  0003CA  5031               	movf	CAN_TakeFrame@message+1,w,c
  4761  0003CC  22DA               	addwfc	fsr2h,f,c
  4762  0003CE  CF64 FFDF          	movff	3940,indf2	;volatile
  4763                           
  4764                           ;CAN.c: 353:         message->id.v[1] = RXB0EIDH;
  4765  0003D2  EE20 F005          	lfsr	2,5
  4766  0003D6  5030               	movf	CAN_TakeFrame@message,w,c
  4767  0003D8  26D9               	addwf	fsr2l,f,c
  4768  0003DA  5031               	movf	CAN_TakeFrame@message+1,w,c
  4769  0003DC  22DA               	addwfc	fsr2h,f,c
  4770  0003DE  CF63 FFDF          	movff	3939,indf2	;volatile
  4771                           
  4772                           ;CAN.c: 354:         message->id.v[2] = (RXB0SIDL/8) | (RXB0SIDL&0x03);
  4773  0003E2  EE20 F006          	lfsr	2,6
  4774  0003E6  5030               	movf	CAN_TakeFrame@message,w,c
  4775  0003E8  26D9               	addwf	fsr2l,f,c
  4776  0003EA  5031               	movf	CAN_TakeFrame@message+1,w,c
  4777  0003EC  22DA               	addwfc	fsr2h,f,c
  4778  0003EE  CF62 F032          	movff	3938,??_CAN_TakeFrame	;volatile
  4779  0003F2  0E03               	movlw	3
  4780  0003F4  1632               	andwf	??_CAN_TakeFrame,f,c
  4781  0003F6  CF62 F028          	movff	3938,___awdiv@dividend	;volatile
  4782  0003FA  6A29               	clrf	___awdiv@dividend+1,c
  4783  0003FC  0E00               	movlw	0
  4784  0003FE  6E2B               	movwf	___awdiv@divisor+1,c
  4785  000400  0E08               	movlw	8
  4786  000402  6E2A               	movwf	___awdiv@divisor,c
  4787  000404  EC77  F009         	call	___awdiv	;wreg free
  4788  000408  5028               	movf	?___awdiv,w,c
  4789  00040A  1032               	iorwf	??_CAN_TakeFrame,w,c
  4790  00040C  6EDF               	movwf	indf2,c
  4791                           
  4792                           ;CAN.c: 355:         message->id.w[1] |= (WORD)RXB0SIDH*32;
  4793  00040E  5061               	movf	3937,w,c	;volatile
  4794  000410  6E32               	movwf	??_CAN_TakeFrame& (0+255),c
  4795  000412  6A33               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4796  000414  0E05               	movlw	5
  4797  000416                     u2905:
  4798  000416  90D8               	bcf	status,0,c
  4799  000418  3632               	rlcf	??_CAN_TakeFrame,f,c
  4800  00041A  3633               	rlcf	??_CAN_TakeFrame+1,f,c
  4801  00041C  2EE8               	decfsz	wreg,f,c
  4802  00041E  D7FB               	goto	u2905
  4803  000420  EE20 F006          	lfsr	2,6
  4804  000424  5030               	movf	CAN_TakeFrame@message,w,c
  4805  000426  26D9               	addwf	fsr2l,f,c
  4806  000428  5031               	movf	CAN_TakeFrame@message+1,w,c
  4807  00042A  22DA               	addwfc	fsr2h,f,c
  4808  00042C  5032               	movf	??_CAN_TakeFrame,w,c
  4809  00042E  12DE               	iorwf	postinc2,f,c
  4810  000430  5033               	movf	??_CAN_TakeFrame+1,w,c
  4811  000432  12DD               	iorwf	postdec2,f,c
  4812                           
  4813                           ;CAN.c: 356:         message->frame_type=0x03;
  4814  000434  EE20 F002          	lfsr	2,2
  4815  000438  5030               	movf	CAN_TakeFrame@message,w,c
  4816  00043A  26D9               	addwf	fsr2l,f,c
  4817  00043C  5031               	movf	CAN_TakeFrame@message+1,w,c
  4818  00043E  22DA               	addwfc	fsr2h,f,c
  4819  000440  0E03               	movlw	3
  4820  000442  6EDF               	movwf	indf2,c
  4821                           
  4822                           ;CAN.c: 360:         if(RXB0DLCbits.RXRTR == 0)
  4823  000444  BC65               	btfsc	3941,6,c	;volatile
  4824  000446  D068               	goto	l4641
  4825                           
  4826                           ;CAN.c: 361:         {;CAN.c: 362:             message->message_type = 0x01;
  4827  000448  EE20 F001          	lfsr	2,1
  4828  00044C  5030               	movf	CAN_TakeFrame@message,w,c
  4829  00044E  26D9               	addwf	fsr2l,f,c
  4830  000450  5031               	movf	CAN_TakeFrame@message+1,w,c
  4831  000452  22DA               	addwfc	fsr2h,f,c
  4832  000454  0E01               	movlw	1
  4833  000456  6EDF               	movwf	indf2,c
  4834                           
  4835                           ;CAN.c: 363:             message->data_length= RXB0DLC & 0x0F;
  4836  000458  EE20 F010          	lfsr	2,16
  4837  00045C  5030               	movf	CAN_TakeFrame@message,w,c
  4838  00045E  26D9               	addwf	fsr2l,f,c
  4839  000460  5031               	movf	CAN_TakeFrame@message+1,w,c
  4840  000462  22DA               	addwfc	fsr2h,f,c
  4841  000464  5065               	movf	3941,w,c	;volatile
  4842  000466  0B0F               	andlw	15
  4843  000468  6EDF               	movwf	indf2,c
  4844                           
  4845                           ;CAN.c: 364:             if(message->data_length > 8)
  4846  00046A  EE20 F010          	lfsr	2,16
  4847  00046E  5030               	movf	CAN_TakeFrame@message,w,c
  4848  000470  26D9               	addwf	fsr2l,f,c
  4849  000472  5031               	movf	CAN_TakeFrame@message+1,w,c
  4850  000474  22DA               	addwfc	fsr2h,f,c
  4851  000476  0E08               	movlw	8
  4852  000478  64DF               	cpfsgt	indf2,c
  4853  00047A  D041               	goto	l4639
  4854  00047C  D01E               	goto	l4633
  4855  00047E                     l4615:
  4856                           
  4857                           ;CAN.c: 370:                         RXB0CON = 0;
  4858  00047E  0E00               	movlw	0
  4859  000480  6E60               	movwf	3936,c	;volatile
  4860                           
  4861                           ;CAN.c: 371:                         break;
  4862  000482  D03B               	goto	l4635
  4863  000484                     l4617:
  4864                           
  4865                           ;CAN.c: 373:                         RXB1CON = 0;
  4866  000484  0E00               	movlw	0
  4867  000486  010F               	movlb	15	; () banked
  4868  000488  D00E               	goto	L2
  4869  00048A                     l4619:
  4870                           
  4871                           ;CAN.c: 376:                         B0CON = 0;
  4872  00048A  0E00               	movlw	0
  4873  00048C  010E               	movlb	14	; () banked
  4874  00048E  6F20               	movwf	32,b	;volatile
  4875                           
  4876                           ;CAN.c: 377:                         break;
  4877  000490  D034               	goto	l4635
  4878  000492                     l4621:
  4879                           
  4880                           ;CAN.c: 379:                         B1CON = 0;
  4881  000492  0E00               	movlw	0
  4882  000494  010E               	movlb	14	; () banked
  4883  000496  6F30               	movwf	48,b	;volatile
  4884                           
  4885                           ;CAN.c: 380:                         break;
  4886  000498  D030               	goto	l4635
  4887  00049A                     l4623:
  4888                           
  4889                           ;CAN.c: 382:                         B2CON = 0;
  4890  00049A  0E00               	movlw	0
  4891  00049C  010E               	movlb	14	; () banked
  4892  00049E  6F40               	movwf	64,b	;volatile
  4893                           
  4894                           ;CAN.c: 383:                         break;
  4895  0004A0  D02C               	goto	l4635
  4896  0004A2                     l4625:
  4897                           
  4898                           ;CAN.c: 385:                         B3CON = 0;
  4899  0004A2  0E00               	movlw	0
  4900  0004A4  010E               	movlb	14	; () banked
  4901  0004A6                     L2:
  4902  0004A6  6F50               	movwf	80,b	;volatile
  4903                           
  4904                           ;CAN.c: 386:                         break;
  4905  0004A8  D028               	goto	l4635
  4906  0004AA                     l4627:
  4907                           
  4908                           ;CAN.c: 388:                         B4CON = 0;
  4909  0004AA  0E00               	movlw	0
  4910  0004AC  010E               	movlb	14	; () banked
  4911  0004AE  6F60               	movwf	96,b	;volatile
  4912                           
  4913                           ;CAN.c: 389:                         break;
  4914  0004B0  D024               	goto	l4635
  4915  0004B2                     l4629:
  4916                           
  4917                           ;CAN.c: 391:                         B5CON = 0;
  4918  0004B2  0E00               	movlw	0
  4919  0004B4  010E               	movlb	14	; () banked
  4920  0004B6  6F70               	movwf	112,b	;volatile
  4921                           
  4922                           ;CAN.c: 392:                         break;
  4923  0004B8  D020               	goto	l4635
  4924  0004BA                     l4633:
  4925  0004BA  5035               	movf	CAN_TakeFrame@k,w,c
  4926  0004BC  6E32               	movwf	??_CAN_TakeFrame& (0+255),c
  4927  0004BE  6A33               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  4928                           
  4929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4930                           ; Switch size 1, requested type "simple"
  4931                           ; Number of cases is 1, Range of values is 0 to 0
  4932                           ; switch strategies available:
  4933                           ; Name         Instructions Cycles
  4934                           ; simple_byte            4     3 (average)
  4935                           ;	Chosen strategy is simple_byte
  4936  0004C0  5033               	movf	??_CAN_TakeFrame+1,w,c
  4937  0004C2  0A00               	xorlw	0	; case 0
  4938  0004C4  A4D8               	btfss	status,2,c
  4939  0004C6  D019               	goto	l4635
  4940                           
  4941                           ; Switch size 1, requested type "simple"
  4942                           ; Number of cases is 8, Range of values is 0 to 7
  4943                           ; switch strategies available:
  4944                           ; Name         Instructions Cycles
  4945                           ; simple_byte           25    13 (average)
  4946                           ;	Chosen strategy is simple_byte
  4947  0004C8  5032               	movf	??_CAN_TakeFrame,w,c
  4948  0004CA  0A00               	xorlw	0	; case 0
  4949  0004CC  B4D8               	btfsc	status,2,c
  4950  0004CE  D7D7               	goto	l4615
  4951  0004D0  0A01               	xorlw	1	; case 1
  4952  0004D2  B4D8               	btfsc	status,2,c
  4953  0004D4  D7D7               	goto	l4617
  4954  0004D6  0A03               	xorlw	3	; case 2
  4955  0004D8  B4D8               	btfsc	status,2,c
  4956  0004DA  D7D7               	goto	l4619
  4957  0004DC  0A01               	xorlw	1	; case 3
  4958  0004DE  B4D8               	btfsc	status,2,c
  4959  0004E0  D7D8               	goto	l4621
  4960  0004E2  0A07               	xorlw	7	; case 4
  4961  0004E4  B4D8               	btfsc	status,2,c
  4962  0004E6  D7D9               	goto	l4623
  4963  0004E8  0A01               	xorlw	1	; case 5
  4964  0004EA  B4D8               	btfsc	status,2,c
  4965  0004EC  D7DA               	goto	l4625
  4966  0004EE  0A03               	xorlw	3	; case 6
  4967  0004F0  B4D8               	btfsc	status,2,c
  4968  0004F2  D7DB               	goto	l4627
  4969  0004F4  0A01               	xorlw	1	; case 7
  4970  0004F6  B4D8               	btfsc	status,2,c
  4971  0004F8  D7DC               	goto	l4629
  4972  0004FA                     l4635:
  4973                           
  4974                           ;CAN.c: 394:                 return FALSE;
  4975  0004FA  0E00               	movlw	0
  4976  0004FC  0012               	return	
  4977  0004FE                     l4639:
  4978                           
  4979                           ;CAN.c: 396:             CAN_MoveBuffIntoFrame(message->data, &RXB0D0);
  4980  0004FE  0E08               	movlw	8
  4981  000500  2430               	addwf	CAN_TakeFrame@message,w,c
  4982  000502  6E28               	movwf	CAN_MoveBuffIntoFrame@Ram,c
  4983  000504  0E00               	movlw	0
  4984  000506  2031               	addwfc	CAN_TakeFrame@message+1,w,c
  4985  000508  6E29               	movwf	CAN_MoveBuffIntoFrame@Ram+1,c
  4986  00050A  0E66               	movlw	102
  4987  00050C  6E2A               	movwf	CAN_MoveBuffIntoFrame@Buf,c
  4988  00050E  0E0F               	movlw	15
  4989  000510  6E2B               	movwf	CAN_MoveBuffIntoFrame@Buf+1,c
  4990  000512  EC7B  F00D         	call	_CAN_MoveBuffIntoFrame	;wreg free
  4991                           
  4992                           ;CAN.c: 397:         }
  4993  000516  D027               	goto	l4661
  4994  000518                     l4641:
  4995                           
  4996                           ;CAN.c: 400:         {;CAN.c: 401:             message->message_type=0x02;
  4997  000518  EE20 F001          	lfsr	2,1
  4998  00051C  5030               	movf	CAN_TakeFrame@message,w,c
  4999  00051E  26D9               	addwf	fsr2l,f,c
  5000  000520  5031               	movf	CAN_TakeFrame@message+1,w,c
  5001  000522  22DA               	addwfc	fsr2h,f,c
  5002  000524  0E02               	movlw	2
  5003  000526  6EDF               	movwf	indf2,c
  5004  000528  D01E               	goto	l4661
  5005  00052A                     l4643:
  5006                           
  5007                           ;CAN.c: 407:                 RXB0CON = 0;
  5008  00052A  0E00               	movlw	0
  5009  00052C  6E60               	movwf	3936,c	;volatile
  5010                           
  5011                           ;CAN.c: 408:                 break;
  5012  00052E  D03B               	goto	l4663
  5013  000530                     l4645:
  5014                           
  5015                           ;CAN.c: 410:                 RXB1CON = 0;
  5016  000530  0E00               	movlw	0
  5017  000532  010F               	movlb	15	; () banked
  5018  000534  D00E               	goto	L3
  5019  000536                     l4647:
  5020                           
  5021                           ;CAN.c: 413:                 B0CON = 0;
  5022  000536  0E00               	movlw	0
  5023  000538  010E               	movlb	14	; () banked
  5024  00053A  6F20               	movwf	32,b	;volatile
  5025                           
  5026                           ;CAN.c: 414:                 break;
  5027  00053C  D034               	goto	l4663
  5028  00053E                     l4649:
  5029                           
  5030                           ;CAN.c: 416:                 B1CON = 0;
  5031  00053E  0E00               	movlw	0
  5032  000540  010E               	movlb	14	; () banked
  5033  000542  6F30               	movwf	48,b	;volatile
  5034                           
  5035                           ;CAN.c: 417:                 break;
  5036  000544  D030               	goto	l4663
  5037  000546                     l4651:
  5038                           
  5039                           ;CAN.c: 419:                 B2CON = 0;
  5040  000546  0E00               	movlw	0
  5041  000548  010E               	movlb	14	; () banked
  5042  00054A  6F40               	movwf	64,b	;volatile
  5043                           
  5044                           ;CAN.c: 420:                 break;
  5045  00054C  D02C               	goto	l4663
  5046  00054E                     l4653:
  5047                           
  5048                           ;CAN.c: 422:                 B3CON = 0;
  5049  00054E  0E00               	movlw	0
  5050  000550  010E               	movlb	14	; () banked
  5051  000552                     L3:
  5052  000552  6F50               	movwf	80,b	;volatile
  5053                           
  5054                           ;CAN.c: 423:                 break;
  5055  000554  D028               	goto	l4663
  5056  000556                     l4655:
  5057                           
  5058                           ;CAN.c: 425:                 B4CON = 0;
  5059  000556  0E00               	movlw	0
  5060  000558  010E               	movlb	14	; () banked
  5061  00055A  6F60               	movwf	96,b	;volatile
  5062                           
  5063                           ;CAN.c: 426:                 break;
  5064  00055C  D024               	goto	l4663
  5065  00055E                     l4657:
  5066                           
  5067                           ;CAN.c: 428:                 B5CON = 0;
  5068  00055E  0E00               	movlw	0
  5069  000560  010E               	movlb	14	; () banked
  5070  000562  6F70               	movwf	112,b	;volatile
  5071                           
  5072                           ;CAN.c: 429:                 break;
  5073  000564  D020               	goto	l4663
  5074  000566                     l4661:
  5075  000566  5035               	movf	CAN_TakeFrame@k,w,c
  5076  000568  6E32               	movwf	??_CAN_TakeFrame& (0+255),c
  5077  00056A  6A33               	clrf	(??_CAN_TakeFrame+1)& (0+255),c
  5078                           
  5079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5080                           ; Switch size 1, requested type "simple"
  5081                           ; Number of cases is 1, Range of values is 0 to 0
  5082                           ; switch strategies available:
  5083                           ; Name         Instructions Cycles
  5084                           ; simple_byte            4     3 (average)
  5085                           ;	Chosen strategy is simple_byte
  5086  00056C  5033               	movf	??_CAN_TakeFrame+1,w,c
  5087  00056E  0A00               	xorlw	0	; case 0
  5088  000570  A4D8               	btfss	status,2,c
  5089  000572  D019               	goto	l4663
  5090                           
  5091                           ; Switch size 1, requested type "simple"
  5092                           ; Number of cases is 8, Range of values is 0 to 7
  5093                           ; switch strategies available:
  5094                           ; Name         Instructions Cycles
  5095                           ; simple_byte           25    13 (average)
  5096                           ;	Chosen strategy is simple_byte
  5097  000574  5032               	movf	??_CAN_TakeFrame,w,c
  5098  000576  0A00               	xorlw	0	; case 0
  5099  000578  B4D8               	btfsc	status,2,c
  5100  00057A  D7D7               	goto	l4643
  5101  00057C  0A01               	xorlw	1	; case 1
  5102  00057E  B4D8               	btfsc	status,2,c
  5103  000580  D7D7               	goto	l4645
  5104  000582  0A03               	xorlw	3	; case 2
  5105  000584  B4D8               	btfsc	status,2,c
  5106  000586  D7D7               	goto	l4647
  5107  000588  0A01               	xorlw	1	; case 3
  5108  00058A  B4D8               	btfsc	status,2,c
  5109  00058C  D7D8               	goto	l4649
  5110  00058E  0A07               	xorlw	7	; case 4
  5111  000590  B4D8               	btfsc	status,2,c
  5112  000592  D7D9               	goto	l4651
  5113  000594  0A01               	xorlw	1	; case 5
  5114  000596  B4D8               	btfsc	status,2,c
  5115  000598  D7DA               	goto	l4653
  5116  00059A  0A03               	xorlw	3	; case 6
  5117  00059C  B4D8               	btfsc	status,2,c
  5118  00059E  D7DB               	goto	l4655
  5119  0005A0  0A01               	xorlw	1	; case 7
  5120  0005A2  B4D8               	btfsc	status,2,c
  5121  0005A4  D7DC               	goto	l4657
  5122  0005A6                     l4663:
  5123                           
  5124                           ;CAN.c: 431:         return TRUE;
  5125  0005A6  0E01               	movlw	1
  5126  0005A8  0012               	return		;funcret
  5127  0005AA                     __end_of_CAN_TakeFrame:
  5128                           	opt callstack 0
  5129                           
  5130 ;; *************** function ___awdiv *****************
  5131 ;; Defined at:
  5132 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  dividend        2    5[COMRAM] int 
  5135 ;;  divisor         2    7[COMRAM] int 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  quotient        2   11[COMRAM] int 
  5138 ;;  sign            1   10[COMRAM] unsigned char 
  5139 ;;  counter         1    9[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  2    5[COMRAM] int 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;Total ram usage:        8 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    3
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_CAN_TakeFrame
  5160 ;;		_FRAME_HandleCanFrame
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text35
  5165  0012EE                     __ptext35:
  5166                           	opt callstack 0
  5167  0012EE                     ___awdiv:
  5168                           	opt callstack 25
  5169                           
  5170                           ;incstack = 0
  5171  0012EE  0E00               	movlw	0
  5172  0012F0  6E2D               	movwf	___awdiv@sign,c
  5173  0012F2  AE2B               	btfss	___awdiv@divisor+1,7,c
  5174  0012F4  D006               	goto	l4543
  5175  0012F6  6C2A               	negf	___awdiv@divisor,c
  5176  0012F8  1E2B               	comf	___awdiv@divisor+1,f,c
  5177  0012FA  B0D8               	btfsc	status,0,c
  5178  0012FC  2A2B               	incf	___awdiv@divisor+1,f,c
  5179  0012FE  0E01               	movlw	1
  5180  001300  6E2D               	movwf	___awdiv@sign,c
  5181  001302                     l4543:
  5182  001302  AE29               	btfss	___awdiv@dividend+1,7,c
  5183  001304  D006               	goto	l4549
  5184  001306  6C28               	negf	___awdiv@dividend,c
  5185  001308  1E29               	comf	___awdiv@dividend+1,f,c
  5186  00130A  B0D8               	btfsc	status,0,c
  5187  00130C  2A29               	incf	___awdiv@dividend+1,f,c
  5188  00130E  0E01               	movlw	1
  5189  001310  1A2D               	xorwf	___awdiv@sign,f,c
  5190  001312                     l4549:
  5191  001312  0E00               	movlw	0
  5192  001314  6E2F               	movwf	___awdiv@quotient+1,c
  5193  001316  0E00               	movlw	0
  5194  001318  6E2E               	movwf	___awdiv@quotient,c
  5195  00131A  502A               	movf	___awdiv@divisor,w,c
  5196  00131C  102B               	iorwf	___awdiv@divisor+1,w,c
  5197  00131E  B4D8               	btfsc	status,2,c
  5198  001320  D01C               	goto	l4571
  5199  001322  0E01               	movlw	1
  5200  001324  6E2C               	movwf	___awdiv@counter,c
  5201  001326  D004               	goto	l4557
  5202  001328                     l4555:
  5203  001328  90D8               	bcf	status,0,c
  5204  00132A  362A               	rlcf	___awdiv@divisor,f,c
  5205  00132C  362B               	rlcf	___awdiv@divisor+1,f,c
  5206  00132E  2A2C               	incf	___awdiv@counter,f,c
  5207  001330                     l4557:
  5208  001330  AE2B               	btfss	___awdiv@divisor+1,7,c
  5209  001332  D7FA               	goto	l4555
  5210  001334                     u2840:
  5211  001334  90D8               	bcf	status,0,c
  5212  001336  362E               	rlcf	___awdiv@quotient,f,c
  5213  001338  362F               	rlcf	___awdiv@quotient+1,f,c
  5214  00133A  502A               	movf	___awdiv@divisor,w,c
  5215  00133C  5C28               	subwf	___awdiv@dividend,w,c
  5216  00133E  502B               	movf	___awdiv@divisor+1,w,c
  5217  001340  5829               	subwfb	___awdiv@dividend+1,w,c
  5218  001342  A0D8               	btfss	status,0,c
  5219  001344  D005               	goto	l4567
  5220  001346  502A               	movf	___awdiv@divisor,w,c
  5221  001348  5E28               	subwf	___awdiv@dividend,f,c
  5222  00134A  502B               	movf	___awdiv@divisor+1,w,c
  5223  00134C  5A29               	subwfb	___awdiv@dividend+1,f,c
  5224  00134E  802E               	bsf	___awdiv@quotient,0,c
  5225  001350                     l4567:
  5226  001350  90D8               	bcf	status,0,c
  5227  001352  322B               	rrcf	___awdiv@divisor+1,f,c
  5228  001354  322A               	rrcf	___awdiv@divisor,f,c
  5229  001356  2E2C               	decfsz	___awdiv@counter,f,c
  5230  001358  D7ED               	goto	u2840
  5231  00135A                     l4571:
  5232  00135A  502D               	movf	___awdiv@sign,w,c
  5233  00135C  B4D8               	btfsc	status,2,c
  5234  00135E  D004               	goto	l4575
  5235  001360  6C2E               	negf	___awdiv@quotient,c
  5236  001362  1E2F               	comf	___awdiv@quotient+1,f,c
  5237  001364  B0D8               	btfsc	status,0,c
  5238  001366  2A2F               	incf	___awdiv@quotient+1,f,c
  5239  001368                     l4575:
  5240  001368  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  5241  00136C  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  5242  001370  0012               	return		;funcret
  5243  001372                     __end_of___awdiv:
  5244                           	opt callstack 0
  5245                           
  5246 ;; *************** function _CAN_MoveBuffIntoFrame *****************
  5247 ;; Defined at:
  5248 ;;		line 233 in file "CAN.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  Ram             2    5[COMRAM] PTR unsigned char 
  5251 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5252 ;;  Buf             2    7[COMRAM] PTR unsigned char 
  5253 ;;		 -> TRM_DataTransmition@canMessage(17), RXB0D0(1), 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  i               1    9[COMRAM] unsigned char 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;Total ram usage:        5 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    3
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_CAN_SendFrame
  5276 ;;		_CAN_TakeFrame
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text36
  5281  001AF6                     __ptext36:
  5282                           	opt callstack 0
  5283  001AF6                     _CAN_MoveBuffIntoFrame:
  5284                           	opt callstack 24
  5285                           
  5286                           ;CAN.c: 233: static void CAN_MoveBuffIntoFrame(BYTE* Ram, BYTE* Buf);CAN.c: 234: {;CAN.c
      +                          : 235:     BYTE i;;CAN.c: 236:     for(i=0; i<8; ++i)
  5287                           
  5288                           ;incstack = 0
  5289  001AF6  0E00               	movlw	0
  5290  001AF8  6E2C               	movwf	CAN_MoveBuffIntoFrame@i,c
  5291  001AFA                     l4065:
  5292                           
  5293                           ;CAN.c: 237:     {;CAN.c: 238:         Ram[i]=(*(Buf+i));
  5294  001AFA  502C               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5295  001AFC  242A               	addwf	CAN_MoveBuffIntoFrame@Buf,w,c
  5296  001AFE  6ED9               	movwf	fsr2l,c
  5297  001B00  0E00               	movlw	0
  5298  001B02  202B               	addwfc	CAN_MoveBuffIntoFrame@Buf+1,w,c
  5299  001B04  6EDA               	movwf	fsr2h,c
  5300  001B06  502C               	movf	CAN_MoveBuffIntoFrame@i,w,c
  5301  001B08  2428               	addwf	CAN_MoveBuffIntoFrame@Ram,w,c
  5302  001B0A  6EE1               	movwf	fsr1l,c
  5303  001B0C  0E00               	movlw	0
  5304  001B0E  2029               	addwfc	CAN_MoveBuffIntoFrame@Ram+1,w,c
  5305  001B10  6EE2               	movwf	fsr1h,c
  5306  001B12  CFDF FFE7          	movff	indf2,indf1
  5307                           
  5308                           ;CAN.c: 239:     }
  5309  001B16  2A2C               	incf	CAN_MoveBuffIntoFrame@i,f,c
  5310  001B18  0E07               	movlw	7
  5311  001B1A  642C               	cpfsgt	CAN_MoveBuffIntoFrame@i,c
  5312  001B1C  D7EE               	goto	l4065
  5313  001B1E  0012               	return	
  5314  001B20                     __end_of_CAN_MoveBuffIntoFrame:
  5315                           	opt callstack 0
  5316                           
  5317 ;; *************** function _TMR1_Update_flag_Set *****************
  5318 ;; Defined at:
  5319 ;;		line 32 in file "TMR1.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  a               2    5[COMRAM] unsigned int 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		None
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;Total ram usage:        2 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    3
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_main
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text37
  5348  001C72                     __ptext37:
  5349                           	opt callstack 0
  5350  001C72                     _TMR1_Update_flag_Set:
  5351                           	opt callstack 27
  5352                           
  5353                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  5354                           
  5355                           ;incstack = 0
  5356  001C72  C028  F009         	movff	TMR1_Update_flag_Set@a,_TMR1_Update_flag
  5357  001C76  C029  F00A         	movff	TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  5358  001C7A  0012               	return		;funcret
  5359  001C7C                     __end_of_TMR1_Update_flag_Set:
  5360                           	opt callstack 0
  5361                           
  5362 ;; *************** function _TMR1_Update_flag_Get *****************
  5363 ;; Defined at:
  5364 ;;		line 47 in file "TMR1.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  2    5[COMRAM] unsigned int 
  5371 ;; Registers used:
  5372 ;;		None
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        2 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    3
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_main
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text38
  5393  001C7C                     __ptext38:
  5394                           	opt callstack 0
  5395  001C7C                     _TMR1_Update_flag_Get:
  5396                           	opt callstack 27
  5397                           
  5398                           ;TMR1.c: 49:     return TMR1_Update_flag;
  5399                           
  5400                           ;incstack = 0
  5401  001C7C  C009  F028         	movff	_TMR1_Update_flag,?_TMR1_Update_flag_Get
  5402  001C80  C00A  F029         	movff	_TMR1_Update_flag+1,?_TMR1_Update_flag_Get+1
  5403  001C84  0012               	return		;funcret
  5404  001C86                     __end_of_TMR1_Update_flag_Get:
  5405                           	opt callstack 0
  5406                           
  5407 ;; *************** function _LED_Update *****************
  5408 ;; Defined at:
  5409 ;;		line 105 in file "LED.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;		None
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;		None
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      unsigned char 
  5416 ;; Registers used:
  5417 ;;		wreg, status,2, status,0, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5427 ;;Total ram usage:        0 bytes
  5428 ;; Hardware stack levels used:    1
  5429 ;; Hardware stack levels required when called:    5
  5430 ;; This function calls:
  5431 ;;		_LED_Control
  5432 ;;		_LED_Left
  5433 ;;		_LED_Light_Pos
  5434 ;;		_LED_Right
  5435 ;; This function is called by:
  5436 ;;		_main
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text39
  5441  0013EE                     __ptext39:
  5442                           	opt callstack 0
  5443  0013EE                     _LED_Update:
  5444                           	opt callstack 25
  5445                           
  5446                           ;LED.c: 107:     static LED_RGA_type Red = RED;;LED.c: 108:     static LED_RGA_type Gree
      +                          n = GREEN;;LED.c: 109:     static UINT pos1 = 0b0000000001;;LED.c: 110:     static UINT 
      +                          pos2 = 0b0000000001;;LED.c: 112:     if(LOCK == 0)
  5447                           
  5448                           ;incstack = 0
  5449  0013EE  5010               	movf	_LOCK,w,c
  5450  0013F0  A4D8               	btfss	status,2,c
  5451  0013F2  D013               	goto	l4795
  5452                           
  5453                           ;LED.c: 113:     {;LED.c: 114:     LED_Control(RED,0b0000000000);
  5454  0013F4  0E00               	movlw	0
  5455  0013F6  6E29               	movwf	LED_Control@diode+1,c
  5456  0013F8  0E00               	movlw	0
  5457  0013FA  6E28               	movwf	LED_Control@diode,c
  5458  0013FC  0E00               	movlw	0
  5459  0013FE  EC58  F005         	call	_LED_Control
  5460                           
  5461                           ;LED.c: 115:     LED_Light_Pos(Green,pos2,Fulfillment_Lvl);
  5462  001402  C041  F02F         	movff	LED_Update@pos2,LED_Light_Pos@pos
  5463  001406  C042  F030         	movff	LED_Update@pos2+1,LED_Light_Pos@pos+1
  5464  00140A  C045  F031         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5465  00140E  C046  F032         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5466  001412  5047               	movf	LED_Update@Green,w,c
  5467  001414  EC85  F008         	call	_LED_Light_Pos
  5468                           
  5469                           ;LED.c: 117:     }
  5470  001418  D012               	goto	l394
  5471  00141A                     l4795:
  5472                           
  5473                           ;LED.c: 119:     {;LED.c: 120:     LED_Control(Green,0b0000000000);
  5474  00141A  0E00               	movlw	0
  5475  00141C  6E29               	movwf	LED_Control@diode+1,c
  5476  00141E  0E00               	movlw	0
  5477  001420  6E28               	movwf	LED_Control@diode,c
  5478  001422  5047               	movf	LED_Update@Green,w,c
  5479  001424  EC58  F005         	call	_LED_Control
  5480                           
  5481                           ;LED.c: 121:     LED_Light_Pos(RED,pos1,Fulfillment_Lvl);
  5482  001428  C043  F02F         	movff	LED_Update@pos1,LED_Light_Pos@pos
  5483  00142C  C044  F030         	movff	LED_Update@pos1+1,LED_Light_Pos@pos+1
  5484  001430  C045  F031         	movff	_Fulfillment_Lvl,LED_Light_Pos@fulfillment
  5485  001434  C046  F032         	movff	_Fulfillment_Lvl+1,LED_Light_Pos@fulfillment+1
  5486  001438  0E00               	movlw	0
  5487  00143A  EC85  F008         	call	_LED_Light_Pos
  5488  00143E                     l394:
  5489                           
  5490                           ;LED.c: 123:     pos1 = LED_Right(pos1);
  5491  00143E  C043  F028         	movff	LED_Update@pos1,LED_Right@a
  5492  001442  C044  F029         	movff	LED_Update@pos1+1,LED_Right@a+1
  5493  001446  EC42  F00C         	call	_LED_Right	;wreg free
  5494  00144A  C028  F043         	movff	?_LED_Right,LED_Update@pos1
  5495  00144E  C029  F044         	movff	?_LED_Right+1,LED_Update@pos1+1
  5496                           
  5497                           ;LED.c: 124:     pos2 = LED_Left(pos2);
  5498  001452  C041  F028         	movff	LED_Update@pos2,LED_Left@a
  5499  001456  C042  F029         	movff	LED_Update@pos2+1,LED_Left@a+1
  5500  00145A  EC68  F00C         	call	_LED_Left	;wreg free
  5501  00145E  C028  F041         	movff	?_LED_Left,LED_Update@pos2
  5502  001462  C029  F042         	movff	?_LED_Left+1,LED_Update@pos2+1
  5503  001466  0012               	return		;funcret
  5504  001468                     __end_of_LED_Update:
  5505                           	opt callstack 0
  5506                           
  5507 ;; *************** function _LED_Light_Pos *****************
  5508 ;; Defined at:
  5509 ;;		line 196 in file "LED.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  color           1    wreg     enum E10644
  5512 ;;  pos             2   12[COMRAM] unsigned int 
  5513 ;;  fulfillment     2   14[COMRAM] unsigned int 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  color           1   16[COMRAM] enum E10644
  5516 ;;  flage           2   21[COMRAM] unsigned int 
  5517 ;;  pos2            2   19[COMRAM] unsigned int 
  5518 ;;  LED_array       2   17[COMRAM] unsigned int 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  2   12[COMRAM] unsigned int 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;Total ram usage:       11 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    4
  5535 ;; This function calls:
  5536 ;;		_LED_Control
  5537 ;;		_LED_Left
  5538 ;;		_LED_Right
  5539 ;;		___lwdiv
  5540 ;; This function is called by:
  5541 ;;		_LED_Update
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text40
  5546  00110A                     __ptext40:
  5547                           	opt callstack 0
  5548  00110A                     _LED_Light_Pos:
  5549                           	opt callstack 25
  5550                           
  5551                           ;incstack = 0
  5552                           ;LED_Light_Pos@color stored from wreg
  5553  00110A  6E33               	movwf	LED_Light_Pos@color,c
  5554                           
  5555                           ;LED.c: 196: UINT LED_Light_Pos(LED_RGA_type color,UINT pos, UINT fulfillment);LED.c: 19
      +                          7: {;LED.c: 198:     UINT pos2 =pos;
  5556  00110C  C02F  F036         	movff	LED_Light_Pos@pos,LED_Light_Pos@pos2
  5557  001110  C030  F037         	movff	LED_Light_Pos@pos+1,LED_Light_Pos@pos2+1
  5558                           
  5559                           ;LED.c: 199:     UINT LED_array = 0b0000000000;
  5560  001114  0E00               	movlw	0
  5561  001116  6E35               	movwf	LED_Light_Pos@LED_array+1,c
  5562  001118  0E00               	movlw	0
  5563  00111A  6E34               	movwf	LED_Light_Pos@LED_array,c
  5564                           
  5565                           ;LED.c: 200:     UINT flage = fulfillment/10;
  5566  00111C  C031  F028         	movff	LED_Light_Pos@fulfillment,___lwdiv@dividend
  5567  001120  C032  F029         	movff	LED_Light_Pos@fulfillment+1,___lwdiv@dividend+1
  5568  001124  0E00               	movlw	0
  5569  001126  6E2B               	movwf	___lwdiv@divisor+1,c
  5570  001128  0E0A               	movlw	10
  5571  00112A  6E2A               	movwf	___lwdiv@divisor,c
  5572  00112C  ECCC  F00B         	call	___lwdiv	;wreg free
  5573  001130  C028  F038         	movff	?___lwdiv,LED_Light_Pos@flage
  5574  001134  C029  F039         	movff	?___lwdiv+1,LED_Light_Pos@flage+1
  5575                           
  5576                           ;LED.c: 201:     if(color == RED)
  5577  001138  5033               	movf	LED_Light_Pos@color,w,c
  5578  00113A  B4D8               	btfsc	status,2,c
  5579  00113C  D017               	goto	l4701
  5580  00113E  D031               	goto	l4709
  5581  001140                     l4695:
  5582                           
  5583                           ;LED.c: 204:         {;LED.c: 205:             LED_array = pos2|LED_array;
  5584  001140  5034               	movf	LED_Light_Pos@LED_array,w,c
  5585  001142  1036               	iorwf	LED_Light_Pos@pos2,w,c
  5586  001144  6E34               	movwf	LED_Light_Pos@LED_array,c
  5587  001146  5035               	movf	LED_Light_Pos@LED_array+1,w,c
  5588  001148  1037               	iorwf	LED_Light_Pos@pos2+1,w,c
  5589  00114A  6E35               	movwf	LED_Light_Pos@LED_array+1,c
  5590                           
  5591                           ;LED.c: 206:             pos2 = LED_Left(pos2);
  5592  00114C  C036  F028         	movff	LED_Light_Pos@pos2,LED_Left@a
  5593  001150  C037  F029         	movff	LED_Light_Pos@pos2+1,LED_Left@a+1
  5594  001154  EC68  F00C         	call	_LED_Left	;wreg free
  5595  001158  C028  F036         	movff	?_LED_Left,LED_Light_Pos@pos2
  5596  00115C  C029  F037         	movff	?_LED_Left+1,LED_Light_Pos@pos2+1
  5597                           
  5598                           ;LED.c: 207:             flage = flage - 1;
  5599  001160  0EFF               	movlw	255
  5600  001162  2438               	addwf	LED_Light_Pos@flage,w,c
  5601  001164  6E38               	movwf	LED_Light_Pos@flage,c
  5602  001166  0EFF               	movlw	255
  5603  001168  2039               	addwfc	LED_Light_Pos@flage+1,w,c
  5604  00116A  6E39               	movwf	LED_Light_Pos@flage+1,c
  5605  00116C                     l4701:
  5606                           
  5607                           ;LED.c: 203:         while(flage>0)
  5608  00116C  5038               	movf	LED_Light_Pos@flage,w,c
  5609  00116E  1039               	iorwf	LED_Light_Pos@flage+1,w,c
  5610  001170  B4D8               	btfsc	status,2,c
  5611  001172  D01B               	goto	u2950
  5612  001174  D7E5               	goto	l4695
  5613  001176                     l4703:
  5614                           
  5615                           ;LED.c: 213:         {;LED.c: 214:             LED_array = pos2|LED_array;
  5616  001176  5034               	movf	LED_Light_Pos@LED_array,w,c
  5617  001178  1036               	iorwf	LED_Light_Pos@pos2,w,c
  5618  00117A  6E34               	movwf	LED_Light_Pos@LED_array,c
  5619  00117C  5035               	movf	LED_Light_Pos@LED_array+1,w,c
  5620  00117E  1037               	iorwf	LED_Light_Pos@pos2+1,w,c
  5621  001180  6E35               	movwf	LED_Light_Pos@LED_array+1,c
  5622                           
  5623                           ;LED.c: 215:             pos2 = LED_Right(pos2);
  5624  001182  C036  F028         	movff	LED_Light_Pos@pos2,LED_Right@a
  5625  001186  C037  F029         	movff	LED_Light_Pos@pos2+1,LED_Right@a+1
  5626  00118A  EC42  F00C         	call	_LED_Right	;wreg free
  5627  00118E  C028  F036         	movff	?_LED_Right,LED_Light_Pos@pos2
  5628  001192  C029  F037         	movff	?_LED_Right+1,LED_Light_Pos@pos2+1
  5629                           
  5630                           ;LED.c: 216:             flage = flage - 1;
  5631  001196  0EFF               	movlw	255
  5632  001198  2438               	addwf	LED_Light_Pos@flage,w,c
  5633  00119A  6E38               	movwf	LED_Light_Pos@flage,c
  5634  00119C  0EFF               	movlw	255
  5635  00119E  2039               	addwfc	LED_Light_Pos@flage+1,w,c
  5636  0011A0  6E39               	movwf	LED_Light_Pos@flage+1,c
  5637  0011A2                     l4709:
  5638                           
  5639                           ;LED.c: 212:         while(flage>0)
  5640  0011A2  5038               	movf	LED_Light_Pos@flage,w,c
  5641  0011A4  1039               	iorwf	LED_Light_Pos@flage+1,w,c
  5642  0011A6  A4D8               	btfss	status,2,c
  5643  0011A8  D7E6               	goto	l4703
  5644  0011AA                     u2950:
  5645                           
  5646                           ;LED.c: 219:     LED_Control(color, LED_array);
  5647  0011AA  C034  F028         	movff	LED_Light_Pos@LED_array,LED_Control@diode
  5648  0011AE  C035  F029         	movff	LED_Light_Pos@LED_array+1,LED_Control@diode+1
  5649  0011B2  5033               	movf	LED_Light_Pos@color,w,c
  5650  0011B4  EC58  F005         	call	_LED_Control
  5651  0011B8  0012               	return		;funcret
  5652  0011BA                     __end_of_LED_Light_Pos:
  5653                           	opt callstack 0
  5654                           
  5655 ;; *************** function ___lwdiv *****************
  5656 ;; Defined at:
  5657 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  dividend        2    5[COMRAM] unsigned int 
  5660 ;;  divisor         2    7[COMRAM] unsigned int 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  quotient        2   10[COMRAM] unsigned int 
  5663 ;;  counter         1    9[COMRAM] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  2    5[COMRAM] unsigned int 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;Total ram usage:        7 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    3
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_LED_Light_Pos
  5684 ;;		_FRAME_Plot
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text41
  5689  001798                     __ptext41:
  5690                           	opt callstack 0
  5691  001798                     ___lwdiv:
  5692                           	opt callstack 24
  5693                           
  5694                           ;incstack = 0
  5695  001798  0E00               	movlw	0
  5696  00179A  6E2E               	movwf	___lwdiv@quotient+1,c
  5697  00179C  0E00               	movlw	0
  5698  00179E  6E2D               	movwf	___lwdiv@quotient,c
  5699  0017A0  502A               	movf	___lwdiv@divisor,w,c
  5700  0017A2  102B               	iorwf	___lwdiv@divisor+1,w,c
  5701  0017A4  B4D8               	btfsc	status,2,c
  5702  0017A6  D01C               	goto	l1463
  5703  0017A8  0E01               	movlw	1
  5704  0017AA  6E2C               	movwf	___lwdiv@counter,c
  5705  0017AC  D004               	goto	l4299
  5706  0017AE                     l4297:
  5707  0017AE  90D8               	bcf	status,0,c
  5708  0017B0  362A               	rlcf	___lwdiv@divisor,f,c
  5709  0017B2  362B               	rlcf	___lwdiv@divisor+1,f,c
  5710  0017B4  2A2C               	incf	___lwdiv@counter,f,c
  5711  0017B6                     l4299:
  5712  0017B6  AE2B               	btfss	___lwdiv@divisor+1,7,c
  5713  0017B8  D7FA               	goto	l4297
  5714  0017BA                     u2510:
  5715  0017BA  90D8               	bcf	status,0,c
  5716  0017BC  362D               	rlcf	___lwdiv@quotient,f,c
  5717  0017BE  362E               	rlcf	___lwdiv@quotient+1,f,c
  5718  0017C0  502A               	movf	___lwdiv@divisor,w,c
  5719  0017C2  5C28               	subwf	___lwdiv@dividend,w,c
  5720  0017C4  502B               	movf	___lwdiv@divisor+1,w,c
  5721  0017C6  5829               	subwfb	___lwdiv@dividend+1,w,c
  5722  0017C8  A0D8               	btfss	status,0,c
  5723  0017CA  D005               	goto	l4309
  5724  0017CC  502A               	movf	___lwdiv@divisor,w,c
  5725  0017CE  5E28               	subwf	___lwdiv@dividend,f,c
  5726  0017D0  502B               	movf	___lwdiv@divisor+1,w,c
  5727  0017D2  5A29               	subwfb	___lwdiv@dividend+1,f,c
  5728  0017D4  802D               	bsf	___lwdiv@quotient,0,c
  5729  0017D6                     l4309:
  5730  0017D6  90D8               	bcf	status,0,c
  5731  0017D8  322B               	rrcf	___lwdiv@divisor+1,f,c
  5732  0017DA  322A               	rrcf	___lwdiv@divisor,f,c
  5733  0017DC  2E2C               	decfsz	___lwdiv@counter,f,c
  5734  0017DE  D7ED               	goto	u2510
  5735  0017E0                     l1463:
  5736  0017E0  C02D  F028         	movff	___lwdiv@quotient,?___lwdiv
  5737  0017E4  C02E  F029         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5738  0017E8  0012               	return		;funcret
  5739  0017EA                     __end_of___lwdiv:
  5740                           	opt callstack 0
  5741                           
  5742 ;; *************** function _LED_Right *****************
  5743 ;; Defined at:
  5744 ;;		line 140 in file "LED.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  a               2    5[COMRAM] unsigned int 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  b               2    9[COMRAM] unsigned int 
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  2    5[COMRAM] unsigned int 
  5751 ;; Registers used:
  5752 ;;		wreg, status,2, status,0
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;Total ram usage:        6 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:    3
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_LED_Update
  5769 ;;		_LED_Light_Pos
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text42
  5774  001884                     __ptext42:
  5775                           	opt callstack 0
  5776  001884                     _LED_Right:
  5777                           	opt callstack 26
  5778                           
  5779                           ;LED.c: 140: UINT LED_Right(UINT a);LED.c: 141: {;LED.c: 142:     if ((a & 0b0000000001)
      +                           == 0b0000000001)
  5780                           
  5781                           ;incstack = 0
  5782  001884  A028               	btfss	LED_Right@a,0,c
  5783  001886  D018               	goto	l3267
  5784                           
  5785                           ;LED.c: 143:     {;LED.c: 144:         UINT b = a & 0b1111111110;
  5786  001888  0EFE               	movlw	254
  5787  00188A  1428               	andwf	LED_Right@a,w,c
  5788  00188C  6E2C               	movwf	LED_Right@b,c
  5789  00188E  0E03               	movlw	3
  5790  001890  1429               	andwf	LED_Right@a+1,w,c
  5791  001892  6E2D               	movwf	LED_Right@b+1,c
  5792                           
  5793                           ;LED.c: 145:         b = b >> 1;
  5794  001894  90D8               	bcf	status,0,c
  5795  001896  302D               	rrcf	LED_Right@b+1,w,c
  5796  001898  6E2A               	movwf	??_LED_Right& (0+255),c
  5797  00189A  302C               	rrcf	LED_Right@b,w,c
  5798  00189C  6E2C               	movwf	LED_Right@b,c
  5799  00189E  C02A  F02D         	movff	??_LED_Right,LED_Right@b+1
  5800                           
  5801                           ;LED.c: 146:         b = b | 0b1000000000;
  5802  0018A2  0E00               	movlw	0
  5803  0018A4  102C               	iorwf	LED_Right@b,w,c
  5804  0018A6  6E2C               	movwf	LED_Right@b,c
  5805  0018A8  0E02               	movlw	2
  5806  0018AA  102D               	iorwf	LED_Right@b+1,w,c
  5807  0018AC  6E2D               	movwf	LED_Right@b+1,c
  5808                           
  5809                           ;LED.c: 147:         return b;
  5810  0018AE  C02C  F028         	movff	LED_Right@b,?_LED_Right
  5811  0018B2  C02D  F029         	movff	LED_Right@b+1,?_LED_Right+1
  5812  0018B6  0012               	return	
  5813  0018B8                     l3267:
  5814                           
  5815                           ;LED.c: 150:     {;LED.c: 151:         a =a >> 1;
  5816  0018B8  90D8               	bcf	status,0,c
  5817  0018BA  3029               	rrcf	LED_Right@a+1,w,c
  5818  0018BC  6E2A               	movwf	??_LED_Right& (0+255),c
  5819  0018BE  3028               	rrcf	LED_Right@a,w,c
  5820  0018C0  6E28               	movwf	LED_Right@a,c
  5821  0018C2  C02A  F029         	movff	??_LED_Right,LED_Right@a+1
  5822                           
  5823                           ;LED.c: 152:         return a;
  5824  0018C6  C028  F028         	movff	LED_Right@a,?_LED_Right
  5825  0018CA  C029  F029         	movff	LED_Right@a+1,?_LED_Right+1
  5826  0018CE  0012               	return		;funcret
  5827  0018D0                     __end_of_LED_Right:
  5828                           	opt callstack 0
  5829                           
  5830 ;; *************** function _LED_Left *****************
  5831 ;; Defined at:
  5832 ;;		line 167 in file "LED.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  a               2    5[COMRAM] unsigned int 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  b               2    7[COMRAM] unsigned int 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  2    5[COMRAM] unsigned int 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2, status,0
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;Total ram usage:        4 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    3
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_LED_Update
  5857 ;;		_LED_Light_Pos
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text43
  5862  0018D0                     __ptext43:
  5863                           	opt callstack 0
  5864  0018D0                     _LED_Left:
  5865                           	opt callstack 25
  5866                           
  5867                           ;LED.c: 167: UINT LED_Left(UINT a);LED.c: 168: {;LED.c: 169:     if ((a & 0b1000000000) 
      +                          == 0b1000000000)
  5868                           
  5869                           ;incstack = 0
  5870  0018D0  A229               	btfss	LED_Left@a+1,1,c
  5871  0018D2  D015               	goto	l3283
  5872                           
  5873                           ;LED.c: 170:     {;LED.c: 171:         UINT b = a & 0b0111111111;
  5874  0018D4  0EFF               	movlw	255
  5875  0018D6  1428               	andwf	LED_Left@a,w,c
  5876  0018D8  6E2A               	movwf	LED_Left@b,c
  5877  0018DA  0E01               	movlw	1
  5878  0018DC  1429               	andwf	LED_Left@a+1,w,c
  5879  0018DE  6E2B               	movwf	LED_Left@b+1,c
  5880                           
  5881                           ;LED.c: 172:         b = b << 1;
  5882  0018E0  90D8               	bcf	status,0,c
  5883  0018E2  342A               	rlcf	LED_Left@b,w,c
  5884  0018E4  6E2A               	movwf	LED_Left@b,c
  5885  0018E6  342B               	rlcf	LED_Left@b+1,w,c
  5886  0018E8  6E2B               	movwf	LED_Left@b+1,c
  5887                           
  5888                           ;LED.c: 173:         b = b | 0b0000000001;
  5889  0018EA  0E01               	movlw	1
  5890  0018EC  102A               	iorwf	LED_Left@b,w,c
  5891  0018EE  6E2A               	movwf	LED_Left@b,c
  5892  0018F0  502B               	movf	LED_Left@b+1,w,c
  5893  0018F2  6E2B               	movwf	LED_Left@b+1,c
  5894                           
  5895                           ;LED.c: 174:         return b;
  5896  0018F4  C02A  F028         	movff	LED_Left@b,?_LED_Left
  5897  0018F8  C02B  F029         	movff	LED_Left@b+1,?_LED_Left+1
  5898  0018FC  0012               	return	
  5899  0018FE                     l3283:
  5900                           
  5901                           ;LED.c: 177:     {;LED.c: 178:         a = a << 1;
  5902  0018FE  90D8               	bcf	status,0,c
  5903  001900  3428               	rlcf	LED_Left@a,w,c
  5904  001902  6E28               	movwf	LED_Left@a,c
  5905  001904  3429               	rlcf	LED_Left@a+1,w,c
  5906  001906  6E29               	movwf	LED_Left@a+1,c
  5907                           
  5908                           ;LED.c: 179:         return a;
  5909  001908  C028  F028         	movff	LED_Left@a,?_LED_Left
  5910  00190C  C029  F029         	movff	LED_Left@a+1,?_LED_Left+1
  5911  001910  0012               	return		;funcret
  5912  001912                     __end_of_LED_Left:
  5913                           	opt callstack 0
  5914                           
  5915 ;; *************** function _INI_All *****************
  5916 ;; Defined at:
  5917 ;;		line 54 in file "INI.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;		None
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;		None
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;Total ram usage:        0 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    6
  5938 ;; This function calls:
  5939 ;;		_CAN_Setup
  5940 ;;		_INI_GlobalInterrupt
  5941 ;;		_INI_LED_Start
  5942 ;;		_INI_OUTPUT
  5943 ;;		_INI_Timer
  5944 ;;		_NVMInit
  5945 ;;		_ReadDataToEEPROM
  5946 ;; This function is called by:
  5947 ;;		_main
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text44
  5952  001B6C                     __ptext44:
  5953                           	opt callstack 0
  5954  001B6C                     _INI_All:
  5955                           	opt callstack 24
  5956                           
  5957                           ;INI.c: 57:     WDTCONbits.SWDTEN = 1;
  5958                           
  5959                           ;incstack = 0
  5960  001B6C  80D1               	bsf	4049,0,c	;volatile
  5961                           
  5962                           ;INI.c: 60:     NVMInit();
  5963  001B6E  EC89  F00C         	call	_NVMInit	;wreg free
  5964                           
  5965                           ;INI.c: 62:     ReadDataToEEPROM();
  5966  001B72  ECD8  F003         	call	_ReadDataToEEPROM	;wreg free
  5967  001B76  0004               	clrwdt		;# 
  5968                           
  5969                           ;INI.c: 66:     INI_OUTPUT();
  5970  001B78  ECC7  F00D         	call	_INI_OUTPUT	;wreg free
  5971                           
  5972                           ;INI.c: 68:     CAN_Setup();
  5973  001B7C  EC18  F00B         	call	_CAN_Setup	;wreg free
  5974                           
  5975                           ;INI.c: 69:     INI_GlobalInterrupt();
  5976  001B80  EC0D  F00E         	call	_INI_GlobalInterrupt	;wreg free
  5977                           
  5978                           ;INI.c: 71:     INI_Timer();
  5979  001B84  ECE6  F00D         	call	_INI_Timer	;wreg free
  5980                           
  5981                           ;INI.c: 73:     INI_LED_Start();
  5982  001B88  EC61  F00D         	call	_INI_LED_Start	;wreg free
  5983  001B8C  0012               	return		;funcret
  5984  001B8E                     __end_of_INI_All:
  5985                           	opt callstack 0
  5986                           
  5987 ;; *************** function _ReadDataToEEPROM *****************
  5988 ;; Defined at:
  5989 ;;		line 405 in file "FRAME.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;		None
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;		None
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  1    wreg      void 
  5996 ;; Registers used:
  5997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;Total ram usage:        0 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; Hardware stack levels required when called:    5
  6010 ;; This function calls:
  6011 ;;		_NVMRead
  6012 ;; This function is called by:
  6013 ;;		_INI_All
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text45
  6018  0007B0                     __ptext45:
  6019                           	opt callstack 0
  6020  0007B0                     _ReadDataToEEPROM:
  6021                           	opt callstack 24
  6022                           
  6023                           ;FRAME.c: 408:     NVMRead(&Init_Data,10,2);
  6024                           
  6025                           ;incstack = 0
  6026  0007B0  0E48               	movlw	low _Init_Data
  6027  0007B2  6E2A               	movwf	NVMRead@dest,c
  6028  0007B4  0E00               	movlw	high _Init_Data
  6029  0007B6  6E2B               	movwf	NVMRead@dest+1,c
  6030  0007B8  0E00               	movlw	0
  6031  0007BA  6E2D               	movwf	NVMRead@addr+1,c
  6032  0007BC  0E0A               	movlw	10
  6033  0007BE  6E2C               	movwf	NVMRead@addr,c
  6034  0007C0  0E00               	movlw	0
  6035  0007C2  6E2F               	movwf	NVMRead@count+1,c
  6036  0007C4  0E02               	movlw	2
  6037  0007C6  6E2E               	movwf	NVMRead@count,c
  6038  0007C8  EC47  F00D         	call	_NVMRead	;wreg free
  6039                           
  6040                           ;FRAME.c: 409:     NVMRead(&NeightAdress1,15,2);
  6041  0007CC  0E21               	movlw	low _NeightAdress1
  6042  0007CE  6E2A               	movwf	NVMRead@dest,c
  6043  0007D0  0E00               	movlw	high _NeightAdress1
  6044  0007D2  6E2B               	movwf	NVMRead@dest+1,c
  6045  0007D4  0E00               	movlw	0
  6046  0007D6  6E2D               	movwf	NVMRead@addr+1,c
  6047  0007D8  0E0F               	movlw	15
  6048  0007DA  6E2C               	movwf	NVMRead@addr,c
  6049  0007DC  0E00               	movlw	0
  6050  0007DE  6E2F               	movwf	NVMRead@count+1,c
  6051  0007E0  0E02               	movlw	2
  6052  0007E2  6E2E               	movwf	NVMRead@count,c
  6053  0007E4  EC47  F00D         	call	_NVMRead	;wreg free
  6054                           
  6055                           ;FRAME.c: 410:     if(NeightAdress1==0xFFFF)
  6056  0007E8  2821               	incf	_NeightAdress1,w,c	;volatile
  6057  0007EA  E107               	bnz	l3653
  6058  0007EC  2822               	incf	_NeightAdress1+1,w,c	;volatile
  6059  0007EE  A4D8               	btfss	status,2,c
  6060  0007F0  D004               	goto	l3653
  6061                           
  6062                           ;FRAME.c: 411:     {;FRAME.c: 412:         NeightAdress1=0x0000;
  6063  0007F2  0E00               	movlw	0
  6064  0007F4  6E22               	movwf	_NeightAdress1+1,c	;volatile
  6065  0007F6  0E00               	movlw	0
  6066  0007F8  6E21               	movwf	_NeightAdress1,c	;volatile
  6067  0007FA                     l3653:
  6068                           
  6069                           ;FRAME.c: 414:     NVMRead(&NeightAdress2,20,2);
  6070  0007FA  0E4A               	movlw	low _NeightAdress2
  6071  0007FC  6E2A               	movwf	NVMRead@dest,c
  6072  0007FE  0E00               	movlw	high _NeightAdress2
  6073  000800  6E2B               	movwf	NVMRead@dest+1,c
  6074  000802  0E00               	movlw	0
  6075  000804  6E2D               	movwf	NVMRead@addr+1,c
  6076  000806  0E14               	movlw	20
  6077  000808  6E2C               	movwf	NVMRead@addr,c
  6078  00080A  0E00               	movlw	0
  6079  00080C  6E2F               	movwf	NVMRead@count+1,c
  6080  00080E  0E02               	movlw	2
  6081  000810  6E2E               	movwf	NVMRead@count,c
  6082  000812  EC47  F00D         	call	_NVMRead	;wreg free
  6083                           
  6084                           ;FRAME.c: 415:     if(NeightAdress2==0xFFFF)
  6085  000816  284A               	incf	_NeightAdress2,w,c	;volatile
  6086  000818  E107               	bnz	l3659
  6087  00081A  284B               	incf	_NeightAdress2+1,w,c	;volatile
  6088  00081C  A4D8               	btfss	status,2,c
  6089  00081E  D004               	goto	l3659
  6090                           
  6091                           ;FRAME.c: 416:     {;FRAME.c: 417:         NeightAdress2=0x0000;
  6092  000820  0E00               	movlw	0
  6093  000822  6E4B               	movwf	_NeightAdress2+1,c	;volatile
  6094  000824  0E00               	movlw	0
  6095  000826  6E4A               	movwf	_NeightAdress2,c	;volatile
  6096  000828                     l3659:
  6097                           
  6098                           ;FRAME.c: 419:     NVMRead(&NeightAdress3,30,2);
  6099  000828  0E1F               	movlw	low _NeightAdress3
  6100  00082A  6E2A               	movwf	NVMRead@dest,c
  6101  00082C  0E00               	movlw	high _NeightAdress3
  6102  00082E  6E2B               	movwf	NVMRead@dest+1,c
  6103  000830  0E00               	movlw	0
  6104  000832  6E2D               	movwf	NVMRead@addr+1,c
  6105  000834  0E1E               	movlw	30
  6106  000836  6E2C               	movwf	NVMRead@addr,c
  6107  000838  0E00               	movlw	0
  6108  00083A  6E2F               	movwf	NVMRead@count+1,c
  6109  00083C  0E02               	movlw	2
  6110  00083E  6E2E               	movwf	NVMRead@count,c
  6111  000840  EC47  F00D         	call	_NVMRead	;wreg free
  6112                           
  6113                           ;FRAME.c: 420:     if(NeightAdress3==0xFFFF)
  6114  000844  281F               	incf	_NeightAdress3,w,c	;volatile
  6115  000846  E107               	bnz	l3665
  6116  000848  2820               	incf	_NeightAdress3+1,w,c	;volatile
  6117  00084A  A4D8               	btfss	status,2,c
  6118  00084C  D004               	goto	l3665
  6119                           
  6120                           ;FRAME.c: 421:     {;FRAME.c: 422:         NeightAdress3=0x0000;
  6121  00084E  0E00               	movlw	0
  6122  000850  6E20               	movwf	_NeightAdress3+1,c	;volatile
  6123  000852  0E00               	movlw	0
  6124  000854  6E1F               	movwf	_NeightAdress3,c	;volatile
  6125  000856                     l3665:
  6126                           
  6127                           ;FRAME.c: 424:     NVMRead(&NeightAdress4,40,2);
  6128  000856  0E1D               	movlw	low _NeightAdress4
  6129  000858  6E2A               	movwf	NVMRead@dest,c
  6130  00085A  0E00               	movlw	high _NeightAdress4
  6131  00085C  6E2B               	movwf	NVMRead@dest+1,c
  6132  00085E  0E00               	movlw	0
  6133  000860  6E2D               	movwf	NVMRead@addr+1,c
  6134  000862  0E28               	movlw	40
  6135  000864  6E2C               	movwf	NVMRead@addr,c
  6136  000866  0E00               	movlw	0
  6137  000868  6E2F               	movwf	NVMRead@count+1,c
  6138  00086A  0E02               	movlw	2
  6139  00086C  6E2E               	movwf	NVMRead@count,c
  6140  00086E  EC47  F00D         	call	_NVMRead	;wreg free
  6141                           
  6142                           ;FRAME.c: 425:     if(NeightAdress4==0xFFFF)
  6143  000872  281D               	incf	_NeightAdress4,w,c	;volatile
  6144  000874  E107               	bnz	l3671
  6145  000876  281E               	incf	_NeightAdress4+1,w,c	;volatile
  6146  000878  A4D8               	btfss	status,2,c
  6147  00087A  D004               	goto	l3671
  6148                           
  6149                           ;FRAME.c: 426:     {;FRAME.c: 427:         NeightAdress4=0x0000;
  6150  00087C  0E00               	movlw	0
  6151  00087E  6E1E               	movwf	_NeightAdress4+1,c	;volatile
  6152  000880  0E00               	movlw	0
  6153  000882  6E1D               	movwf	_NeightAdress4,c	;volatile
  6154  000884                     l3671:
  6155                           
  6156                           ;FRAME.c: 429:     NVMRead(&NeightAdress5,50,2);
  6157  000884  0E1B               	movlw	low _NeightAdress5
  6158  000886  6E2A               	movwf	NVMRead@dest,c
  6159  000888  0E00               	movlw	high _NeightAdress5
  6160  00088A  6E2B               	movwf	NVMRead@dest+1,c
  6161  00088C  0E00               	movlw	0
  6162  00088E  6E2D               	movwf	NVMRead@addr+1,c
  6163  000890  0E32               	movlw	50
  6164  000892  6E2C               	movwf	NVMRead@addr,c
  6165  000894  0E00               	movlw	0
  6166  000896  6E2F               	movwf	NVMRead@count+1,c
  6167  000898  0E02               	movlw	2
  6168  00089A  6E2E               	movwf	NVMRead@count,c
  6169  00089C  EC47  F00D         	call	_NVMRead	;wreg free
  6170                           
  6171                           ;FRAME.c: 430:     if(NeightAdress5==0xFFFF)
  6172  0008A0  281B               	incf	_NeightAdress5,w,c	;volatile
  6173  0008A2  E107               	bnz	l3677
  6174  0008A4  281C               	incf	_NeightAdress5+1,w,c	;volatile
  6175  0008A6  A4D8               	btfss	status,2,c
  6176  0008A8  D004               	goto	l3677
  6177                           
  6178                           ;FRAME.c: 431:     {;FRAME.c: 432:         NeightAdress5=0x0000;
  6179  0008AA  0E00               	movlw	0
  6180  0008AC  6E1C               	movwf	_NeightAdress5+1,c	;volatile
  6181  0008AE  0E00               	movlw	0
  6182  0008B0  6E1B               	movwf	_NeightAdress5,c	;volatile
  6183  0008B2                     l3677:
  6184                           
  6185                           ;FRAME.c: 434:     NVMRead(&NeightAdress6,60,2);
  6186  0008B2  0E19               	movlw	low _NeightAdress6
  6187  0008B4  6E2A               	movwf	NVMRead@dest,c
  6188  0008B6  0E00               	movlw	high _NeightAdress6
  6189  0008B8  6E2B               	movwf	NVMRead@dest+1,c
  6190  0008BA  0E00               	movlw	0
  6191  0008BC  6E2D               	movwf	NVMRead@addr+1,c
  6192  0008BE  0E3C               	movlw	60
  6193  0008C0  6E2C               	movwf	NVMRead@addr,c
  6194  0008C2  0E00               	movlw	0
  6195  0008C4  6E2F               	movwf	NVMRead@count+1,c
  6196  0008C6  0E02               	movlw	2
  6197  0008C8  6E2E               	movwf	NVMRead@count,c
  6198  0008CA  EC47  F00D         	call	_NVMRead	;wreg free
  6199                           
  6200                           ;FRAME.c: 435:     if(NeightAdress6==0xFFFF)
  6201  0008CE  2819               	incf	_NeightAdress6,w,c	;volatile
  6202  0008D0  E107               	bnz	l3683
  6203  0008D2  281A               	incf	_NeightAdress6+1,w,c	;volatile
  6204  0008D4  A4D8               	btfss	status,2,c
  6205  0008D6  D004               	goto	l3683
  6206                           
  6207                           ;FRAME.c: 436:     {;FRAME.c: 437:         NeightAdress6=0x0000;
  6208  0008D8  0E00               	movlw	0
  6209  0008DA  6E1A               	movwf	_NeightAdress6+1,c	;volatile
  6210  0008DC  0E00               	movlw	0
  6211  0008DE  6E19               	movwf	_NeightAdress6,c	;volatile
  6212  0008E0                     l3683:
  6213                           
  6214                           ;FRAME.c: 439:     NVMRead(&NeightAdress7,70,2);
  6215  0008E0  0E17               	movlw	low _NeightAdress7
  6216  0008E2  6E2A               	movwf	NVMRead@dest,c
  6217  0008E4  0E00               	movlw	high _NeightAdress7
  6218  0008E6  6E2B               	movwf	NVMRead@dest+1,c
  6219  0008E8  0E00               	movlw	0
  6220  0008EA  6E2D               	movwf	NVMRead@addr+1,c
  6221  0008EC  0E46               	movlw	70
  6222  0008EE  6E2C               	movwf	NVMRead@addr,c
  6223  0008F0  0E00               	movlw	0
  6224  0008F2  6E2F               	movwf	NVMRead@count+1,c
  6225  0008F4  0E02               	movlw	2
  6226  0008F6  6E2E               	movwf	NVMRead@count,c
  6227  0008F8  EC47  F00D         	call	_NVMRead	;wreg free
  6228                           
  6229                           ;FRAME.c: 440:     if(NeightAdress7==0xFFFF)
  6230  0008FC  2817               	incf	_NeightAdress7,w,c	;volatile
  6231  0008FE  E107               	bnz	l3689
  6232  000900  2818               	incf	_NeightAdress7+1,w,c	;volatile
  6233  000902  A4D8               	btfss	status,2,c
  6234  000904  D004               	goto	l3689
  6235                           
  6236                           ;FRAME.c: 441:     {;FRAME.c: 442:         NeightAdress7=0x0000;
  6237  000906  0E00               	movlw	0
  6238  000908  6E18               	movwf	_NeightAdress7+1,c	;volatile
  6239  00090A  0E00               	movlw	0
  6240  00090C  6E17               	movwf	_NeightAdress7,c	;volatile
  6241  00090E                     l3689:
  6242                           
  6243                           ;FRAME.c: 444:     NVMRead(&NeightAdress8,80,2);
  6244  00090E  0E15               	movlw	low _NeightAdress8
  6245  000910  6E2A               	movwf	NVMRead@dest,c
  6246  000912  0E00               	movlw	high _NeightAdress8
  6247  000914  6E2B               	movwf	NVMRead@dest+1,c
  6248  000916  0E00               	movlw	0
  6249  000918  6E2D               	movwf	NVMRead@addr+1,c
  6250  00091A  0E50               	movlw	80
  6251  00091C  6E2C               	movwf	NVMRead@addr,c
  6252  00091E  0E00               	movlw	0
  6253  000920  6E2F               	movwf	NVMRead@count+1,c
  6254  000922  0E02               	movlw	2
  6255  000924  6E2E               	movwf	NVMRead@count,c
  6256  000926  EC47  F00D         	call	_NVMRead	;wreg free
  6257                           
  6258                           ;FRAME.c: 445:     if(NeightAdress8==0xFFFF)
  6259  00092A  2815               	incf	_NeightAdress8,w,c	;volatile
  6260  00092C  E107               	bnz	l653
  6261  00092E  2816               	incf	_NeightAdress8+1,w,c	;volatile
  6262  000930  A4D8               	btfss	status,2,c
  6263  000932  0012               	return	
  6264                           
  6265                           ;FRAME.c: 446:     {;FRAME.c: 447:         NeightAdress8=0x0000;
  6266  000934  0E00               	movlw	0
  6267  000936  6E16               	movwf	_NeightAdress8+1,c	;volatile
  6268  000938  0E00               	movlw	0
  6269  00093A  6E15               	movwf	_NeightAdress8,c	;volatile
  6270  00093C                     l653:
  6271  00093C  0012               	return		;funcret
  6272  00093E                     __end_of_ReadDataToEEPROM:
  6273                           	opt callstack 0
  6274                           
  6275 ;; *************** function _NVMRead *****************
  6276 ;; Defined at:
  6277 ;;		line 79 in file "EEPROM.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  dest            2    7[COMRAM] PTR unsigned char 
  6280 ;;		 -> Init_Data(2), NeightAdress8(2), NeightAdress7(2), NeightAdress6(2), 
  6281 ;;		 -> NeightAdress5(2), NeightAdress4(2), NeightAdress3(2), NeightAdress2(2), 
  6282 ;;		 -> NeightAdress1(2), 
  6283 ;;  addr            2    9[COMRAM] unsigned short 
  6284 ;;  count           2   11[COMRAM] unsigned short 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6296 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;Total ram usage:        6 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    4
  6303 ;; This function calls:
  6304 ;;		_ReadfromEEPROM
  6305 ;; This function is called by:
  6306 ;;		_ReadDataToEEPROM
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text46
  6311  001A8E                     __ptext46:
  6312                           	opt callstack 0
  6313  001A8E                     _NVMRead:
  6314                           	opt callstack 24
  6315                           
  6316                           ;EEPROM.c: 79: void NVMRead(BYTE *dest, WORD addr, WORD count);EEPROM.c: 80: {;EEPROM.c:
      +                           81:     while( count > 0 )
  6317                           
  6318                           ;incstack = 0
  6319  001A8E  D014               	goto	l3395
  6320  001A90                     l940:
  6321  001A90  B2A6               	btfsc	4006,1,c	;volsfr
  6322  001A92  D7FE               	goto	l940
  6323                           
  6324                           ;EEPROM.c: 84:         *dest++ = ReadfromEEPROM(addr++);
  6325  001A94  C02C  F028         	movff	NVMRead@addr,ReadfromEEPROM@Address
  6326  001A98  C02D  F029         	movff	NVMRead@addr+1,ReadfromEEPROM@Address+1
  6327  001A9C  ECFD  F00D         	call	_ReadfromEEPROM	;wreg free
  6328  001AA0  C02A  FFD9         	movff	NVMRead@dest,fsr2l
  6329  001AA4  C02B  FFDA         	movff	NVMRead@dest+1,fsr2h
  6330  001AA8  6EDF               	movwf	indf2,c
  6331  001AAA  4A2C               	infsnz	NVMRead@addr,f,c
  6332  001AAC  2A2D               	incf	NVMRead@addr+1,f,c
  6333  001AAE  4A2A               	infsnz	NVMRead@dest,f,c
  6334  001AB0  2A2B               	incf	NVMRead@dest+1,f,c
  6335                           
  6336                           ;EEPROM.c: 85:         count--;
  6337  001AB2  062E               	decf	NVMRead@count,f,c
  6338  001AB4  A0D8               	btfss	status,0,c
  6339  001AB6  062F               	decf	NVMRead@count+1,f,c
  6340  001AB8                     l3395:
  6341                           
  6342                           ;EEPROM.c: 81:     while( count > 0 )
  6343  001AB8  502E               	movf	NVMRead@count,w,c
  6344  001ABA  102F               	iorwf	NVMRead@count+1,w,c
  6345  001ABC  B4D8               	btfsc	status,2,c
  6346  001ABE  0012               	return	
  6347  001AC0  D7E7               	goto	l940
  6348  001AC2                     __end_of_NVMRead:
  6349                           	opt callstack 0
  6350                           
  6351 ;; *************** function _ReadfromEEPROM *****************
  6352 ;; Defined at:
  6353 ;;		line 45 in file "EEPROM.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  Address         2    5[COMRAM] unsigned short 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  1    wreg      unsigned char 
  6360 ;; Registers used:
  6361 ;;		wreg, status,2
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;Total ram usage:        2 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:    3
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_NVMRead
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text47
  6382  001BFA                     __ptext47:
  6383                           	opt callstack 0
  6384  001BFA                     _ReadfromEEPROM:
  6385                           	opt callstack 24
  6386                           
  6387                           ;EEPROM.c: 45: static BYTE ReadfromEEPROM(WORD Address);EEPROM.c: 46: {;EEPROM.c: 47:   
      +                            EEADRH = (BYTE)(Address>>8);
  6388                           
  6389                           ;incstack = 0
  6390  001BFA  5029               	movf	ReadfromEEPROM@Address+1,w,c
  6391  001BFC  6EAA               	movwf	4010,c	;volatile
  6392                           
  6393                           ;EEPROM.c: 48:     EEADR = (BYTE)Address;
  6394  001BFE  C028  FFA9         	movff	ReadfromEEPROM@Address,4009	;volatile
  6395                           
  6396                           ;EEPROM.c: 49:     EECON1bits.RD = 1;
  6397  001C02  80A6               	bsf	4006,0,c	;volsfr
  6398                           
  6399                           ;EEPROM.c: 50:     EECON1bits.EEPGD = 0;
  6400  001C04  9EA6               	bcf	4006,7,c	;volsfr
  6401                           
  6402                           ;EEPROM.c: 51:     EECON1bits.CFGS = 0;
  6403  001C06  9CA6               	bcf	4006,6,c	;volsfr
  6404                           
  6405                           ;EEPROM.c: 52:     return EEDATA;
  6406  001C08  50A8               	movf	4008,w,c	;volatile
  6407  001C0A  0012               	return		;funcret
  6408  001C0C                     __end_of_ReadfromEEPROM:
  6409                           	opt callstack 0
  6410                           
  6411 ;; *************** function _NVMInit *****************
  6412 ;; Defined at:
  6413 ;;		line 26 in file "EEPROM.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;		None
  6416 ;; Auto vars:     Size  Location     Type
  6417 ;;  NeightAdress    2    0        unsigned int 
  6418 ;;  result          1   13[COMRAM] enum E10433
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      enum E10433
  6421 ;; Registers used:
  6422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;Total ram usage:        3 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    4
  6435 ;; This function calls:
  6436 ;;		_NVMalloc
  6437 ;; This function is called by:
  6438 ;;		_INI_All
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text48
  6443  001912                     __ptext48:
  6444                           	opt callstack 0
  6445  001912                     _NVMInit:
  6446                           	opt callstack 25
  6447                           
  6448                           ;EEPROM.c: 28:     BOOL result = TRUE;
  6449                           
  6450                           ;incstack = 0
  6451  001912  0E01               	movlw	1
  6452  001914  6E30               	movwf	NVMInit@result,c
  6453                           
  6454                           ;EEPROM.c: 30:     nextEEPosition = 0;
  6455  001916  0E00               	movlw	0
  6456  001918  6E06               	movwf	_nextEEPosition+1,c
  6457  00191A  0E00               	movlw	0
  6458  00191C  6E05               	movwf	_nextEEPosition,c
  6459                           
  6460                           ;EEPROM.c: 32:     result &= NVMalloc(sizeof(KartaStruct), &ustawieniaKarty);
  6461  00191E  0E00               	movlw	0
  6462  001920  6E29               	movwf	NVMalloc@size+1,c
  6463  001922  0E03               	movlw	3
  6464  001924  6E28               	movwf	NVMalloc@size,c
  6465  001926  0E13               	movlw	low _ustawieniaKarty
  6466  001928  6E2A               	movwf	NVMalloc@location,c
  6467  00192A  0E00               	movlw	high _ustawieniaKarty
  6468  00192C  6E2B               	movwf	NVMalloc@location+1,c
  6469  00192E  EC12  F00D         	call	_NVMalloc	;wreg free
  6470  001932  1630               	andwf	NVMInit@result,f,c
  6471                           
  6472                           ;EEPROM.c: 33:     result &= NVMalloc(8*sizeof(NeightAdress_Example), &neighborsAdress);
  6473  001934  0E00               	movlw	0
  6474  001936  6E29               	movwf	NVMalloc@size+1,c
  6475  001938  0E10               	movlw	16
  6476  00193A  6E28               	movwf	NVMalloc@size,c
  6477  00193C  0E11               	movlw	low _neighborsAdress
  6478  00193E  6E2A               	movwf	NVMalloc@location,c
  6479  001940  0E00               	movlw	high _neighborsAdress
  6480  001942  6E2B               	movwf	NVMalloc@location+1,c
  6481  001944  EC12  F00D         	call	_NVMalloc	;wreg free
  6482  001948  1630               	andwf	NVMInit@result,f,c
  6483  00194A  0012               	return		;funcret
  6484  00194C                     __end_of_NVMInit:
  6485                           	opt callstack 0
  6486                           
  6487 ;; *************** function _NVMalloc *****************
  6488 ;; Defined at:
  6489 ;;		line 11 in file "EEPROM.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  size            2    5[COMRAM] unsigned short 
  6492 ;;  location        2    7[COMRAM] PTR unsigned short 
  6493 ;;		 -> neighborsAdress(2), ustawieniaKarty(2), 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      enum E10433
  6498 ;; Registers used:
  6499 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;Total ram usage:        6 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    3
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_NVMInit
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text49
  6520  001A24                     __ptext49:
  6521                           	opt callstack 0
  6522  001A24                     _NVMalloc:
  6523                           	opt callstack 25
  6524                           
  6525                           ;EEPROM.c: 11: BOOL NVMalloc(WORD size, WORD *location);EEPROM.c: 12: {;EEPROM.c: 15:   
      +                            if ((nextEEPosition + (WORD)size) > (WORD)0x400)
  6526                           
  6527                           ;incstack = 0
  6528  001A24  5028               	movf	NVMalloc@size,w,c
  6529  001A26  2405               	addwf	_nextEEPosition,w,c
  6530  001A28  6E2C               	movwf	??_NVMalloc& (0+255),c
  6531  001A2A  5029               	movf	NVMalloc@size+1,w,c
  6532  001A2C  2006               	addwfc	_nextEEPosition+1,w,c
  6533  001A2E  6E2D               	movwf	(??_NVMalloc+1)& (0+255),c
  6534  001A30  042C               	decf	??_NVMalloc,w,c
  6535  001A32  0E04               	movlw	4
  6536  001A34  582D               	subwfb	??_NVMalloc+1,w,c
  6537  001A36  A0D8               	btfss	status,0,c
  6538  001A38  D002               	goto	l3441
  6539                           
  6540                           ;EEPROM.c: 16:     {;EEPROM.c: 17:         return FALSE;
  6541  001A3A  0E00               	movlw	0
  6542  001A3C  0012               	return	
  6543  001A3E                     l3441:
  6544                           
  6545                           ;EEPROM.c: 20:     *location = nextEEPosition;
  6546  001A3E  C02A  FFD9         	movff	NVMalloc@location,fsr2l
  6547  001A42  C02B  FFDA         	movff	NVMalloc@location+1,fsr2h
  6548  001A46  C005  FFDE         	movff	_nextEEPosition,postinc2
  6549  001A4A  C006  FFDD         	movff	_nextEEPosition+1,postdec2
  6550                           
  6551                           ;EEPROM.c: 21:     nextEEPosition += size;
  6552  001A4E  5028               	movf	NVMalloc@size,w,c
  6553  001A50  2605               	addwf	_nextEEPosition,f,c
  6554  001A52  5029               	movf	NVMalloc@size+1,w,c
  6555  001A54  2206               	addwfc	_nextEEPosition+1,f,c
  6556                           
  6557                           ;EEPROM.c: 22:     return TRUE;
  6558  001A56  0E01               	movlw	1
  6559  001A58  0012               	return		;funcret
  6560  001A5A                     __end_of_NVMalloc:
  6561                           	opt callstack 0
  6562                           
  6563 ;; *************** function _INI_Timer *****************
  6564 ;; Defined at:
  6565 ;;		line 92 in file "TMR1.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      unsigned char 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    3
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_INI_All
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text50
  6594  001BCC                     __ptext50:
  6595                           	opt callstack 0
  6596  001BCC                     _INI_Timer:
  6597                           	opt callstack 26
  6598                           
  6599                           ;TMR1.c: 96:     IRCF2 = 1;
  6600                           
  6601                           ;incstack = 0
  6602  001BCC  8CD3               	bsf	4051,6,c	;volatile
  6603                           
  6604                           ;TMR1.c: 97:     IRCF1 = 1;
  6605  001BCE  8AD3               	bsf	4051,5,c	;volatile
  6606                           
  6607                           ;TMR1.c: 98:     IRCF0 = 1;
  6608  001BD0  88D3               	bsf	4051,4,c	;volatile
  6609                           
  6610                           ;TMR1.c: 99:     T1CON = 0b00111101;
  6611  001BD2  0E3D               	movlw	61
  6612  001BD4  6ECD               	movwf	4045,c	;volatile
  6613                           
  6614                           ;TMR1.c: 100:     TMR1H= (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  6615  001BD6  0E9E               	movlw	158
  6616  001BD8  6ECF               	movwf	4047,c	;volatile
  6617                           
  6618                           ;TMR1.c: 101:     TMR1L=(UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  6619  001BDA  0E57               	movlw	87
  6620  001BDC  6ECE               	movwf	4046,c	;volatile
  6621                           
  6622                           ;TMR1.c: 102:     TMR1IE=1;
  6623  001BDE  809D               	bsf	3997,0,c	;volatile
  6624                           
  6625                           ;TMR1.c: 103:     TMR1ON = 1;
  6626  001BE0  80CD               	bsf	4045,0,c	;volatile
  6627  001BE2  0012               	return		;funcret
  6628  001BE4                     __end_of_INI_Timer:
  6629                           	opt callstack 0
  6630                           
  6631 ;; *************** function _INI_OUTPUT *****************
  6632 ;; Defined at:
  6633 ;;		line 29 in file "INI.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    3
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_INI_All
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text51
  6662  001B8E                     __ptext51:
  6663                           	opt callstack 0
  6664  001B8E                     _INI_OUTPUT:
  6665                           	opt callstack 26
  6666                           
  6667                           ;INI.c: 33:     LATA = 0;
  6668                           
  6669                           ;incstack = 0
  6670  001B8E  0E00               	movlw	0
  6671  001B90  6E89               	movwf	3977,c	;volatile
  6672                           
  6673                           ;INI.c: 34:     LATB = 0;
  6674  001B92  0E00               	movlw	0
  6675  001B94  6E8A               	movwf	3978,c	;volatile
  6676                           
  6677                           ;INI.c: 35:     LATC = 0;
  6678  001B96  0E00               	movlw	0
  6679  001B98  6E8B               	movwf	3979,c	;volatile
  6680                           
  6681                           ;INI.c: 36:     TRISA = 0x0C;
  6682  001B9A  0E0C               	movlw	12
  6683  001B9C  6E92               	movwf	3986,c	;volatile
  6684                           
  6685                           ;INI.c: 37:     TRISB = 0b10001000;
  6686  001B9E  0E88               	movlw	136
  6687  001BA0  6E93               	movwf	3987,c	;volatile
  6688                           
  6689                           ;INI.c: 38:     TRISC = 0xBF;
  6690  001BA2  0EBF               	movlw	191
  6691  001BA4  6E94               	movwf	3988,c	;volatile
  6692                           
  6693                           ;INI.c: 39:     RCONbits.IPEN = 1;
  6694  001BA6  8ED0               	bsf	4048,7,c	;volatile
  6695                           
  6696                           ;INI.c: 42:     DetectorLedRadar.Flags.inicjalizacja = 1;
  6697  001BA8  0100               	movlb	0	; () banked
  6698  001BAA  87CB               	bsf	_DetectorLedRadar& (0+255),3,b
  6699                           
  6700                           ; BSR set to: 0
  6701  001BAC  0012               	return		;funcret
  6702  001BAE                     __end_of_INI_OUTPUT:
  6703                           	opt callstack 0
  6704                           
  6705 ;; *************** function _INI_LED_Start *****************
  6706 ;; Defined at:
  6707 ;;		line 231 in file "LED.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;Total ram usage:        0 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    4
  6728 ;; This function calls:
  6729 ;;		_LED_Control
  6730 ;; This function is called by:
  6731 ;;		_INI_All
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text52
  6736  001AC2                     __ptext52:
  6737                           	opt callstack 0
  6738  001AC2                     _INI_LED_Start:
  6739                           	opt callstack 25
  6740                           
  6741                           ;LED.c: 233:     TRISA = TRISA & 0b00000001;
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;incstack = 0
  6745  001AC2  5092               	movf	3986,w,c	;volatile
  6746  001AC4  0B01               	andlw	1
  6747  001AC6  6E92               	movwf	3986,c	;volatile
  6748                           
  6749                           ;LED.c: 234:     TRISB = TRISB & 0b11111100;
  6750  001AC8  5093               	movf	3987,w,c	;volatile
  6751  001ACA  0BFC               	andlw	252
  6752  001ACC  6E93               	movwf	3987,c	;volatile
  6753                           
  6754                           ;LED.c: 235:     TRISE = TRISE & 0b11111000;
  6755  001ACE  5096               	movf	3990,w,c	;volatile
  6756  001AD0  0BF8               	andlw	248
  6757  001AD2  6E96               	movwf	3990,c	;volatile
  6758                           
  6759                           ;LED.c: 236:     TRISD = TRISD & 0b00000000;
  6760  001AD4  0E00               	movlw	0
  6761  001AD6  6E95               	movwf	3989,c	;volatile
  6762                           
  6763                           ;LED.c: 237:     LED_Control(RED,0b0000000000);
  6764  001AD8  0E00               	movlw	0
  6765  001ADA  6E29               	movwf	LED_Control@diode+1,c
  6766  001ADC  0E00               	movlw	0
  6767  001ADE  6E28               	movwf	LED_Control@diode,c
  6768  001AE0  0E00               	movlw	0
  6769  001AE2  EC58  F005         	call	_LED_Control
  6770                           
  6771                           ;LED.c: 238:     LED_Control(GREEN,0b0000000000);
  6772  001AE6  0E00               	movlw	0
  6773  001AE8  6E29               	movwf	LED_Control@diode+1,c
  6774  001AEA  0E00               	movlw	0
  6775  001AEC  6E28               	movwf	LED_Control@diode,c
  6776  001AEE  0E01               	movlw	1
  6777  001AF0  EC58  F005         	call	_LED_Control
  6778  001AF4  0012               	return		;funcret
  6779  001AF6                     __end_of_INI_LED_Start:
  6780                           	opt callstack 0
  6781                           
  6782 ;; *************** function _LED_Control *****************
  6783 ;; Defined at:
  6784 ;;		line 256 in file "LED.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  color           1    wreg     enum E10644
  6787 ;;  diode           2    5[COMRAM] unsigned int 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  color           1    9[COMRAM] enum E10644
  6790 ;;  cos             2    0        unsigned int 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      unsigned char 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;Total ram usage:        5 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    3
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_LED_Error
  6811 ;;		_LED_Update
  6812 ;;		_LED_Light_Pos
  6813 ;;		_INI_LED_Start
  6814 ;;		_LED_Clear
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text53
  6819  000AB0                     __ptext53:
  6820                           	opt callstack 0
  6821  000AB0                     _LED_Control:
  6822                           	opt callstack 24
  6823                           
  6824                           ;incstack = 0
  6825                           ;LED_Control@color stored from wreg
  6826  000AB0  6E2C               	movwf	LED_Control@color,c
  6827                           
  6828                           ;LED.c: 259:     if(color == RED)
  6829  000AB2  502C               	movf	LED_Control@color,w,c
  6830  000AB4  A4D8               	btfss	status,2,c
  6831  000AB6  D050               	goto	l422
  6832                           
  6833                           ;LED.c: 260:     {;LED.c: 262:         if((diode & 0b0000000001)== 0b0000000001)
  6834  000AB8  A028               	btfss	LED_Control@diode,0,c
  6835  000ABA  D003               	goto	l4079
  6836                           
  6837                           ;LED.c: 263:         {;LED.c: 264:             LATD = LATD | ~0b11101111;
  6838  000ABC  508C               	movf	3980,w,c	;volatile
  6839  000ABE  0910               	iorlw	16
  6840  000AC0  D002               	goto	L4
  6841  000AC2                     l4079:
  6842                           
  6843                           ;LED.c: 267:         {;LED.c: 268:             LATD = LATD &0b11101111;
  6844  000AC2  508C               	movf	3980,w,c	;volatile
  6845  000AC4  0BEF               	andlw	239
  6846  000AC6                     L4:
  6847  000AC6  6E8C               	movwf	3980,c	;volatile
  6848                           
  6849                           ;LED.c: 271:         if((diode & 0b0000000010) == 0b0000000010)
  6850  000AC8  A228               	btfss	LED_Control@diode,1,c
  6851  000ACA  D003               	goto	l4085
  6852                           
  6853                           ;LED.c: 272:         {;LED.c: 273:             LATD = LATD | ~0b10111111;
  6854  000ACC  508C               	movf	3980,w,c	;volatile
  6855  000ACE  0940               	iorlw	64
  6856  000AD0  D002               	goto	L5
  6857  000AD2                     l4085:
  6858                           
  6859                           ;LED.c: 276:         {;LED.c: 277:             LATD = LATD & 0b10111111;
  6860  000AD2  508C               	movf	3980,w,c	;volatile
  6861  000AD4  0BBF               	andlw	191
  6862  000AD6                     L5:
  6863  000AD6  6E8C               	movwf	3980,c	;volatile
  6864                           
  6865                           ;LED.c: 280:         if((diode & 0b0000000100) == 0b0000000100)
  6866  000AD8  A428               	btfss	LED_Control@diode,2,c
  6867  000ADA  D003               	goto	l4091
  6868                           
  6869                           ;LED.c: 281:         {;LED.c: 282:             LATB = LATB | ~0b11111110;
  6870  000ADC  508A               	movf	3978,w,c	;volatile
  6871  000ADE  0901               	iorlw	1
  6872  000AE0  D002               	goto	L6
  6873  000AE2                     l4091:
  6874                           
  6875                           ;LED.c: 285:         {;LED.c: 286:             LATB = LATB & 0b11111110;
  6876  000AE2  508A               	movf	3978,w,c	;volatile
  6877  000AE4  0BFE               	andlw	254
  6878  000AE6                     L6:
  6879  000AE6  6E8A               	movwf	3978,c	;volatile
  6880                           
  6881                           ;LED.c: 290:         if((diode & 0b0000001000) == 0b0000001000)
  6882  000AE8  A628               	btfss	LED_Control@diode,3,c
  6883  000AEA  D003               	goto	l4097
  6884                           
  6885                           ;LED.c: 291:         {;LED.c: 292:             LATA = LATA | ~0b11111101;
  6886  000AEC  5089               	movf	3977,w,c	;volatile
  6887  000AEE  0902               	iorlw	2
  6888  000AF0  D002               	goto	L7
  6889  000AF2                     l4097:
  6890                           
  6891                           ;LED.c: 295:         {;LED.c: 296:             LATA = LATA & 0b11111101;
  6892  000AF2  5089               	movf	3977,w,c	;volatile
  6893  000AF4  0BFD               	andlw	253
  6894  000AF6                     L7:
  6895  000AF6  6E89               	movwf	3977,c	;volatile
  6896                           
  6897                           ;LED.c: 300:         if((diode & 0b0000010000) == 0b0000010000)
  6898  000AF8  A828               	btfss	LED_Control@diode,4,c
  6899  000AFA  D003               	goto	l4103
  6900                           
  6901                           ;LED.c: 301:         {;LED.c: 302:             LATA = LATA | ~0b11110111;
  6902  000AFC  5089               	movf	3977,w,c	;volatile
  6903  000AFE  0908               	iorlw	8
  6904  000B00  D002               	goto	L8
  6905  000B02                     l4103:
  6906                           
  6907                           ;LED.c: 305:         {;LED.c: 306:             LATA = LATA & 0b11110111;
  6908  000B02  5089               	movf	3977,w,c	;volatile
  6909  000B04  0BF7               	andlw	247
  6910  000B06                     L8:
  6911  000B06  6E89               	movwf	3977,c	;volatile
  6912                           
  6913                           ;LED.c: 310:         if((diode & 0b0000100000) == 0b0000100000)
  6914  000B08  AA28               	btfss	LED_Control@diode,5,c
  6915  000B0A  D003               	goto	l4109
  6916                           
  6917                           ;LED.c: 311:         {;LED.c: 312:             LATA = LATA | ~0b11011111;
  6918  000B0C  5089               	movf	3977,w,c	;volatile
  6919  000B0E  0920               	iorlw	32
  6920  000B10  D002               	goto	L9
  6921  000B12                     l4109:
  6922                           
  6923                           ;LED.c: 315:         {;LED.c: 316:             LATA = LATA & 0b11011111;
  6924  000B12  5089               	movf	3977,w,c	;volatile
  6925  000B14  0BDF               	andlw	223
  6926  000B16                     L9:
  6927  000B16  6E89               	movwf	3977,c	;volatile
  6928                           
  6929                           ;LED.c: 319:         if((diode & 0b0001000000) == 0b0001000000)
  6930  000B18  AC28               	btfss	LED_Control@diode,6,c
  6931  000B1A  D003               	goto	l4115
  6932                           
  6933                           ;LED.c: 320:         {;LED.c: 321:             LATE = LATE | ~0b11111101;
  6934  000B1C  508D               	movf	3981,w,c	;volatile
  6935  000B1E  0902               	iorlw	2
  6936  000B20  D002               	goto	L10
  6937  000B22                     l4115:
  6938                           
  6939                           ;LED.c: 324:         {;LED.c: 325:             LATE = LATE & 0b11111101;
  6940  000B22  508D               	movf	3981,w,c	;volatile
  6941  000B24  0BFD               	andlw	253
  6942  000B26                     L10:
  6943  000B26  6E8D               	movwf	3981,c	;volatile
  6944                           
  6945                           ;LED.c: 328:         if((diode & 0b0010000000) == 0b0010000000)
  6946  000B28  AE28               	btfss	LED_Control@diode,7,c
  6947  000B2A  D003               	goto	l4121
  6948                           
  6949                           ;LED.c: 329:         {;LED.c: 330:             LATA = LATA | ~0b01111111;
  6950  000B2C  5089               	movf	3977,w,c	;volatile
  6951  000B2E  0980               	iorlw	128
  6952  000B30  D002               	goto	L11
  6953  000B32                     l4121:
  6954                           
  6955                           ;LED.c: 333:         {;LED.c: 334:             LATA = LATA & 0b01111111;
  6956  000B32  5089               	movf	3977,w,c	;volatile
  6957  000B34  0B7F               	andlw	127
  6958  000B36                     L11:
  6959  000B36  6E89               	movwf	3977,c	;volatile
  6960                           
  6961                           ;LED.c: 338:         if((diode & 0b0100000000) == 0b0100000000)
  6962  000B38  A029               	btfss	LED_Control@diode+1,0,c
  6963  000B3A  D003               	goto	l4127
  6964                           
  6965                           ;LED.c: 339:         {;LED.c: 340:             LATD = LATD | ~0b11111110;
  6966  000B3C  508C               	movf	3980,w,c	;volatile
  6967  000B3E  0901               	iorlw	1
  6968  000B40  D002               	goto	L12
  6969  000B42                     l4127:
  6970                           
  6971                           ;LED.c: 343:         {;LED.c: 344:             LATD = LATD & 0b11111110;
  6972  000B42  508C               	movf	3980,w,c	;volatile
  6973  000B44  0BFE               	andlw	254
  6974  000B46                     L12:
  6975  000B46  6E8C               	movwf	3980,c	;volatile
  6976                           
  6977                           ;LED.c: 347:         if((diode & 0b1000000000) == 0b1000000000)
  6978  000B48  A229               	btfss	LED_Control@diode+1,1,c
  6979  000B4A  D003               	goto	l4133
  6980                           
  6981                           ;LED.c: 348:         {;LED.c: 349:             LATD = LATD | ~0b11111011;
  6982  000B4C  508C               	movf	3980,w,c	;volatile
  6983  000B4E  0904               	iorlw	4
  6984  000B50  D002               	goto	L13
  6985  000B52                     l4133:
  6986                           
  6987                           ;LED.c: 352:         {;LED.c: 353:             LATD = LATD & 0b11111011;
  6988  000B52  508C               	movf	3980,w,c	;volatile
  6989  000B54  0BFB               	andlw	251
  6990  000B56                     L13:
  6991  000B56  6E8C               	movwf	3980,c	;volatile
  6992  000B58                     l422:
  6993                           
  6994                           ;LED.c: 358:     if(color == GREEN)
  6995  000B58  042C               	decf	LED_Control@color,w,c
  6996  000B5A  A4D8               	btfss	status,2,c
  6997  000B5C  0012               	return	
  6998                           
  6999                           ;LED.c: 359:     {;LED.c: 361:         if((diode & 0b0000000001) == 0b0000000001)
  7000  000B5E  A028               	btfss	LED_Control@diode,0,c
  7001  000B60  D003               	goto	l4139
  7002                           
  7003                           ;LED.c: 362:         {;LED.c: 363:             LATD = LATD | ~0b11011111;
  7004  000B62  508C               	movf	3980,w,c	;volatile
  7005  000B64  0920               	iorlw	32
  7006  000B66  D002               	goto	L14
  7007  000B68                     l4139:
  7008                           
  7009                           ;LED.c: 366:         {;LED.c: 367:             LATD = LATD & 0b11011111;
  7010  000B68  508C               	movf	3980,w,c	;volatile
  7011  000B6A  0BDF               	andlw	223
  7012  000B6C                     L14:
  7013  000B6C  6E8C               	movwf	3980,c	;volatile
  7014                           
  7015                           ;LED.c: 371:         if((diode & 0b0000000010) == 0b0000000010)
  7016  000B6E  A228               	btfss	LED_Control@diode,1,c
  7017  000B70  D003               	goto	l4145
  7018                           
  7019                           ;LED.c: 372:         {;LED.c: 373:             LATD = LATD | ~0b01111111;
  7020  000B72  508C               	movf	3980,w,c	;volatile
  7021  000B74  0980               	iorlw	128
  7022  000B76  D002               	goto	L15
  7023  000B78                     l4145:
  7024                           
  7025                           ;LED.c: 376:         {;LED.c: 377:             LATD = LATD & 0b01111111;
  7026  000B78  508C               	movf	3980,w,c	;volatile
  7027  000B7A  0B7F               	andlw	127
  7028  000B7C                     L15:
  7029  000B7C  6E8C               	movwf	3980,c	;volatile
  7030                           
  7031                           ;LED.c: 381:         if((diode & 0b0000000100) == 0b0000000100)
  7032  000B7E  A428               	btfss	LED_Control@diode,2,c
  7033  000B80  D003               	goto	l4151
  7034                           
  7035                           ;LED.c: 382:         {;LED.c: 383:             LATB = LATB | ~0b11111101;
  7036  000B82  508A               	movf	3978,w,c	;volatile
  7037  000B84  0902               	iorlw	2
  7038  000B86  D002               	goto	L16
  7039  000B88                     l4151:
  7040                           
  7041                           ;LED.c: 386:         {;LED.c: 387:             LATB = LATB & 0b11111101;
  7042  000B88  508A               	movf	3978,w,c	;volatile
  7043  000B8A  0BFD               	andlw	253
  7044  000B8C                     L16:
  7045  000B8C  6E8A               	movwf	3978,c	;volatile
  7046                           
  7047                           ;LED.c: 390:         if((diode & 0b0000001000) == 0b0000001000)
  7048  000B8E  A628               	btfss	LED_Control@diode,3,c
  7049  000B90  D003               	goto	l4157
  7050                           
  7051                           ;LED.c: 391:         {;LED.c: 392:             LATA = LATA | ~0b11111011;
  7052  000B92  5089               	movf	3977,w,c	;volatile
  7053  000B94  0904               	iorlw	4
  7054  000B96  D002               	goto	L17
  7055  000B98                     l4157:
  7056                           
  7057                           ;LED.c: 395:         {;LED.c: 396:             LATA = LATA & 0b11111011;
  7058  000B98  5089               	movf	3977,w,c	;volatile
  7059  000B9A  0BFB               	andlw	251
  7060  000B9C                     L17:
  7061  000B9C  6E89               	movwf	3977,c	;volatile
  7062                           
  7063                           ;LED.c: 400:         if((diode & 0b0000010000) == 0b0000010000)
  7064  000B9E  A828               	btfss	LED_Control@diode,4,c
  7065  000BA0  D003               	goto	l4163
  7066                           
  7067                           ;LED.c: 401:         {;LED.c: 402:             LATA = LATA | ~0b11101111;
  7068  000BA2  5089               	movf	3977,w,c	;volatile
  7069  000BA4  0910               	iorlw	16
  7070  000BA6  D002               	goto	L18
  7071  000BA8                     l4163:
  7072                           
  7073                           ;LED.c: 405:         {;LED.c: 406:             LATA = LATA & 0b11101111;
  7074  000BA8  5089               	movf	3977,w,c	;volatile
  7075  000BAA  0BEF               	andlw	239
  7076  000BAC                     L18:
  7077  000BAC  6E89               	movwf	3977,c	;volatile
  7078                           
  7079                           ;LED.c: 410:         if((diode & 0b0000100000) == 0b0000100000)
  7080  000BAE  AA28               	btfss	LED_Control@diode,5,c
  7081  000BB0  D003               	goto	l4169
  7082                           
  7083                           ;LED.c: 411:         {;LED.c: 412:             LATE = LATE | ~0b11111110;
  7084  000BB2  508D               	movf	3981,w,c	;volatile
  7085  000BB4  0901               	iorlw	1
  7086  000BB6  D002               	goto	L19
  7087  000BB8                     l4169:
  7088                           
  7089                           ;LED.c: 415:         {;LED.c: 416:             LATE = LATE & 0b11111110;
  7090  000BB8  508D               	movf	3981,w,c	;volatile
  7091  000BBA  0BFE               	andlw	254
  7092  000BBC                     L19:
  7093  000BBC  6E8D               	movwf	3981,c	;volatile
  7094                           
  7095                           ;LED.c: 420:         if((diode & 0b0001000000) == 0b0001000000)
  7096  000BBE  AC28               	btfss	LED_Control@diode,6,c
  7097  000BC0  D003               	goto	l4175
  7098                           
  7099                           ;LED.c: 421:         {;LED.c: 422:             LATE = LATE | ~0b11111011;
  7100  000BC2  508D               	movf	3981,w,c	;volatile
  7101  000BC4  0904               	iorlw	4
  7102  000BC6  D002               	goto	L20
  7103  000BC8                     l4175:
  7104                           
  7105                           ;LED.c: 425:         {;LED.c: 426:             LATE = LATE & 0b11111011;
  7106  000BC8  508D               	movf	3981,w,c	;volatile
  7107  000BCA  0BFB               	andlw	251
  7108  000BCC                     L20:
  7109  000BCC  6E8D               	movwf	3981,c	;volatile
  7110                           
  7111                           ;LED.c: 429:         if((diode & 0b0010000000) == 0b0010000000)
  7112  000BCE  AE28               	btfss	LED_Control@diode,7,c
  7113  000BD0  D003               	goto	l4181
  7114                           
  7115                           ;LED.c: 430:         {;LED.c: 431:             LATA = LATA | ~0b10111111;
  7116  000BD2  5089               	movf	3977,w,c	;volatile
  7117  000BD4  0940               	iorlw	64
  7118  000BD6  D002               	goto	L21
  7119  000BD8                     l4181:
  7120                           
  7121                           ;LED.c: 434:         {;LED.c: 435:             LATA = LATA & 0b10111111;
  7122  000BD8  5089               	movf	3977,w,c	;volatile
  7123  000BDA  0BBF               	andlw	191
  7124  000BDC                     L21:
  7125  000BDC  6E89               	movwf	3977,c	;volatile
  7126                           
  7127                           ;LED.c: 438:         if((diode & 0b0100000000) == 0b0100000000)
  7128  000BDE  A029               	btfss	LED_Control@diode+1,0,c
  7129  000BE0  D003               	goto	l4187
  7130                           
  7131                           ;LED.c: 439:         {;LED.c: 440:             LATD = LATD | ~0b11111101;
  7132  000BE2  508C               	movf	3980,w,c	;volatile
  7133  000BE4  0902               	iorlw	2
  7134  000BE6  D002               	goto	L22
  7135  000BE8                     l4187:
  7136                           
  7137                           ;LED.c: 443:         {;LED.c: 444:             LATD = LATD & 0b11111101;
  7138  000BE8  508C               	movf	3980,w,c	;volatile
  7139  000BEA  0BFD               	andlw	253
  7140  000BEC                     L22:
  7141  000BEC  6E8C               	movwf	3980,c	;volatile
  7142                           
  7143                           ;LED.c: 447:         if((diode & 0b1000000000) == 0b1000000000)
  7144  000BEE  A229               	btfss	LED_Control@diode+1,1,c
  7145  000BF0  D004               	goto	l4193
  7146                           
  7147                           ;LED.c: 448:         {;LED.c: 449:             LATD = LATD | ~0b11110111;
  7148  000BF2  508C               	movf	3980,w,c	;volatile
  7149  000BF4  0908               	iorlw	8
  7150  000BF6  6E8C               	movwf	3980,c	;volatile
  7151                           
  7152                           ;LED.c: 450:         }
  7153  000BF8  0012               	return	
  7154  000BFA                     l4193:
  7155                           
  7156                           ;LED.c: 452:         {;LED.c: 453:             LATD = LATD &0b11110111;
  7157  000BFA  508C               	movf	3980,w,c	;volatile
  7158  000BFC  0BF7               	andlw	247
  7159  000BFE  6E8C               	movwf	3980,c	;volatile
  7160  000C00  0012               	return		;funcret
  7161  000C02                     __end_of_LED_Control:
  7162                           	opt callstack 0
  7163                           
  7164 ;; *************** function _INI_GlobalInterrupt *****************
  7165 ;; Defined at:
  7166 ;;		line 78 in file "INI.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;		None
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		None
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;Total ram usage:        0 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    3
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_INI_All
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text54
  7195  001C1A                     __ptext54:
  7196                           	opt callstack 0
  7197  001C1A                     _INI_GlobalInterrupt:
  7198                           	opt callstack 26
  7199                           
  7200                           ;INI.c: 80: INTCONbits.GIEH=1;
  7201                           
  7202                           ;incstack = 0
  7203  001C1A  8EF2               	bsf	4082,7,c	;volatile
  7204                           
  7205                           ;INI.c: 81: INTCONbits.GIEL=1;
  7206  001C1C  8CF2               	bsf	4082,6,c	;volatile
  7207                           
  7208                           ;INI.c: 82: RCONbits.IPEN=1;
  7209  001C1E  8ED0               	bsf	4048,7,c	;volatile
  7210                           
  7211                           ;INI.c: 83: IPEN =1;
  7212  001C20  8ED0               	bsf	4048,7,c	;volatile
  7213                           
  7214                           ;INI.c: 85: PEIE=1;
  7215  001C22  8CF2               	bsf	4082,6,c	;volatile
  7216                           
  7217                           ;INI.c: 86: TMR1IP = 0;
  7218  001C24  909F               	bcf	3999,0,c	;volatile
  7219  001C26  0012               	return		;funcret
  7220  001C28                     __end_of_INI_GlobalInterrupt:
  7221                           	opt callstack 0
  7222                           
  7223 ;; *************** function _CAN_Setup *****************
  7224 ;; Defined at:
  7225 ;;		line 24 in file "CAN.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;		None
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0, cstack
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;Total ram usage:        1 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:    5
  7246 ;; This function calls:
  7247 ;;		_CAN_SetupClock
  7248 ;;		_CAN_SetupMask
  7249 ;; This function is called by:
  7250 ;;		_INI_All
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text55
  7255  001630                     __ptext55:
  7256                           	opt callstack 0
  7257  001630                     _CAN_Setup:
  7258                           	opt callstack 24
  7259                           
  7260                           ;CAN.c: 29:     CANCON = 0x80;
  7261                           
  7262                           ;incstack = 0
  7263  001630  0E80               	movlw	128
  7264  001632  6E6F               	movwf	3951,c	;volatile
  7265  001634                     l4581:
  7266                           
  7267                           ;CAN.c: 30:     while((CANSTAT & 0xE0)!=0x80)
  7268  001634  506E               	movf	3950,w,c	;volatile
  7269  001636  0BE0               	andlw	224
  7270  001638  0A80               	xorlw	128
  7271  00163A  A4D8               	btfss	status,2,c
  7272  00163C  D7FB               	goto	l4581
  7273                           
  7274                           ;CAN.c: 35:     BSEL0 = 0;
  7275  00163E  0E00               	movlw	0
  7276  001640  010D               	movlb	13	; () banked
  7277  001642  6FF8               	movwf	248,b	;volatile
  7278                           
  7279                           ;CAN.c: 36:     TXB0CON = 0;
  7280  001644  0E00               	movlw	0
  7281  001646  010F               	movlb	15	; () banked
  7282  001648  6F40               	movwf	64,b	;volatile
  7283                           
  7284                           ;CAN.c: 37:     RXB0CON = 0;
  7285  00164A  0E00               	movlw	0
  7286  00164C  6E60               	movwf	3936,c	;volatile
  7287                           
  7288                           ;CAN.c: 38:     RXB1CON = 0;
  7289  00164E  0E00               	movlw	0
  7290  001650  6F50               	movwf	80,b	;volatile
  7291                           
  7292                           ;CAN.c: 39:     B0CON = 0;
  7293  001652  0E00               	movlw	0
  7294  001654  010E               	movlb	14	; () banked
  7295  001656  6F20               	movwf	32,b	;volatile
  7296                           
  7297                           ;CAN.c: 40:     B1CON = 0;
  7298  001658  0E00               	movlw	0
  7299  00165A  6F30               	movwf	48,b	;volatile
  7300                           
  7301                           ;CAN.c: 41:     PIE3 = 0;
  7302  00165C  0E00               	movlw	0
  7303  00165E  6EA3               	movwf	4003,c	;volatile
  7304                           
  7305                           ; BSR set to: 14
  7306                           ;CAN.c: 42:     IPR3 = 0xFF;
  7307  001660  68A5               	setf	4005,c	;volatile
  7308                           
  7309                           ;CAN.c: 43:     PIR3 = 0x00;
  7310  001662  0E00               	movlw	0
  7311  001664  6EA4               	movwf	4004,c	;volatile
  7312                           
  7313                           ;CAN.c: 44:     BIE0 = 0;
  7314  001666  0E00               	movlw	0
  7315  001668  010D               	movlb	13	; () banked
  7316  00166A  6FFA               	movwf	250,b	;volatile
  7317                           
  7318                           ;CAN.c: 48:     ECANCON = 0x90;
  7319  00166C  0E90               	movlw	144
  7320  00166E  6E77               	movwf	3959,c	;volatile
  7321                           
  7322                           ; BSR set to: 13
  7323                           ;CAN.c: 51:     CAN_SetupClock();
  7324  001670  EC90  F00D         	call	_CAN_SetupClock	;wreg free
  7325                           
  7326                           ;CAN.c: 54:     CAN_SetupMask();
  7327  001674  ECAB  F00A         	call	_CAN_SetupMask	;wreg free
  7328                           
  7329                           ;CAN.c: 56:     CIOCON = 0xff;
  7330  001678  6873               	setf	3955,c	;volatile
  7331                           
  7332                           ;CAN.c: 62:     CANCON = 0x00;
  7333  00167A  0E00               	movlw	0
  7334  00167C  6E6F               	movwf	3951,c	;volatile
  7335  00167E                     l4593:
  7336                           
  7337                           ;CAN.c: 63:     while((CANSTAT & 0xE0) != 0x00)
  7338  00167E  CF6E F028          	movff	3950,??_CAN_Setup	;volatile
  7339  001682  0EE0               	movlw	224
  7340  001684  1628               	andwf	??_CAN_Setup,f,c
  7341  001686  B4D8               	btfsc	status,2,c
  7342  001688  0012               	return	
  7343  00168A  D7F9               	goto	l4593
  7344  00168C                     __end_of_CAN_Setup:
  7345                           	opt callstack 0
  7346                           
  7347 ;; *************** function _CAN_SetupMask *****************
  7348 ;; Defined at:
  7349 ;;		line 84 in file "CAN.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;Total ram usage:        0 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    4
  7370 ;; This function calls:
  7371 ;;		_CAN_SetupFilter_Ne
  7372 ;; This function is called by:
  7373 ;;		_CAN_Setup
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text56
  7378  001556                     __ptext56:
  7379                           	opt callstack 0
  7380  001556                     _CAN_SetupMask:
  7381                           	opt callstack 24
  7382                           
  7383                           ;CAN.c: 86:     MSEL0 = 0x50;
  7384                           
  7385                           ;incstack = 0
  7386  001556  0E50               	movlw	80
  7387  001558  010D               	movlb	13	; () banked
  7388  00155A  6FF0               	movwf	240,b	;volatile
  7389                           
  7390                           ;CAN.c: 87:     MSEL1 = 0x55;
  7391  00155C  0E55               	movlw	85
  7392  00155E  6FF1               	movwf	241,b	;volatile
  7393                           
  7394                           ;CAN.c: 88:     MSEL2 = 0x55;
  7395  001560  0E55               	movlw	85
  7396  001562  6FF2               	movwf	242,b	;volatile
  7397                           
  7398                           ;CAN.c: 89:     MSEL3 = 0x55;
  7399  001564  0E55               	movlw	85
  7400  001566  6FF3               	movwf	243,b	;volatile
  7401                           
  7402                           ;CAN.c: 92:     RXM0SIDH = 0b00000000;
  7403  001568  0E00               	movlw	0
  7404  00156A  010F               	movlb	15	; () banked
  7405  00156C  6F18               	movwf	24,b	;volatile
  7406                           
  7407                           ;CAN.c: 93:     RXM0SIDL = 0b00001011;
  7408  00156E  0E0B               	movlw	11
  7409  001570  6F19               	movwf	25,b	;volatile
  7410                           
  7411                           ; BSR set to: 15
  7412                           ;CAN.c: 94:     RXM0EIDH = 0xFF;
  7413  001572  691A               	setf	26,b	;volatile
  7414                           
  7415                           ; BSR set to: 15
  7416                           ;CAN.c: 95:     RXM0EIDL = 0xFF;
  7417  001574  691B               	setf	27,b	;volatile
  7418                           
  7419                           ; BSR set to: 15
  7420                           ;CAN.c: 98:     RXM1SIDH = 0xFF;
  7421  001576  691C               	setf	28,b	;volatile
  7422                           
  7423                           ; BSR set to: 15
  7424                           ;CAN.c: 99:     RXM1SIDL = 0xFF;
  7425  001578  691D               	setf	29,b	;volatile
  7426                           
  7427                           ; BSR set to: 15
  7428                           ;CAN.c: 100:     RXM1EIDH = 0xFF;
  7429  00157A  691E               	setf	30,b	;volatile
  7430                           
  7431                           ; BSR set to: 15
  7432                           ;CAN.c: 101:     RXM1EIDL = 0xFF;
  7433  00157C  691F               	setf	31,b	;volatile
  7434                           
  7435                           ;CAN.c: 104:     RXM0SIDH = 0x00;
  7436  00157E  0E00               	movlw	0
  7437  001580  6F18               	movwf	24,b	;volatile
  7438                           
  7439                           ;CAN.c: 105:     RXM0SIDL = 0x00;
  7440  001582  0E00               	movlw	0
  7441  001584  6F19               	movwf	25,b	;volatile
  7442                           
  7443                           ;CAN.c: 110:     RXF0SIDH = 0x00;
  7444  001586  0E00               	movlw	0
  7445  001588  6F00               	movwf	0,b	;volatile
  7446                           
  7447                           ;CAN.c: 111:     RXF0SIDL = 0x01;
  7448  00158A  0E01               	movlw	1
  7449  00158C  6F01               	movwf	1,b	;volatile
  7450                           
  7451                           ; BSR set to: 15
  7452                           ;CAN.c: 112:     RXF0SIDLbits.EXIDEN = 1;
  7453  00158E  8701               	bsf	1,3,b	;volatile
  7454                           
  7455                           ;CAN.c: 113:     RXF0EIDH = (BYTE)(DaneCan.adresCAN>>8);
  7456  001590  5004               	movf	_DaneCan+3,w,c
  7457  001592  6F02               	movwf	2,b	;volatile
  7458                           
  7459                           ; BSR set to: 15
  7460                           ;CAN.c: 115:     RXF0EIDL = (BYTE)DaneCan.adresCAN;
  7461  001594  C003  FF03         	movff	_DaneCan+2,3843	;volatile
  7462                           
  7463                           ;CAN.c: 117:     RXF1SIDH = 0x00;
  7464  001598  0E00               	movlw	0
  7465  00159A  6F04               	movwf	4,b	;volatile
  7466                           
  7467                           ;CAN.c: 118:     RXF1SIDL = 0x01;
  7468  00159C  0E01               	movlw	1
  7469  00159E  6F05               	movwf	5,b	;volatile
  7470                           
  7471                           ; BSR set to: 15
  7472                           ;CAN.c: 119:     RXF1SIDLbits.EXIDEN = 1;
  7473  0015A0  8705               	bsf	5,3,b	;volatile
  7474                           
  7475                           ;CAN.c: 120:     RXF1EIDH = 0x7F;
  7476  0015A2  0E7F               	movlw	127
  7477  0015A4  6F06               	movwf	6,b	;volatile
  7478                           
  7479                           ; BSR set to: 15
  7480                           ;CAN.c: 121:     RXF1EIDL = 0xFF;
  7481  0015A6  6907               	setf	7,b	;volatile
  7482                           
  7483                           ; BSR set to: 15
  7484                           ;CAN.c: 123:     CAN_SetupFilter_Ne();
  7485  0015A8  EC2C  F009         	call	_CAN_SetupFilter_Ne	;wreg free
  7486                           
  7487                           ;CAN.c: 126:     RXFBCON0 = 0b00000000;
  7488  0015AC  0E00               	movlw	0
  7489  0015AE  010D               	movlb	13	; () banked
  7490  0015B0  6FE0               	movwf	224,b	;volatile
  7491                           
  7492                           ; BSR set to: 13
  7493                           ;CAN.c: 128:     RXFBCON1 = 0b00010001;
  7494  0015B2  0E11               	movlw	17
  7495  0015B4  6FE1               	movwf	225,b	;volatile
  7496                           
  7497                           ; BSR set to: 13
  7498                           ;CAN.c: 130:     RXFBCON2 = 0b00010001;
  7499  0015B6  0E11               	movlw	17
  7500  0015B8  6FE2               	movwf	226,b	;volatile
  7501                           
  7502                           ; BSR set to: 13
  7503                           ;CAN.c: 132:     RXFBCON3 = 0b00010001;
  7504  0015BA  0E11               	movlw	17
  7505  0015BC  6FE3               	movwf	227,b	;volatile
  7506                           
  7507                           ; BSR set to: 13
  7508                           ;CAN.c: 134:     RXFBCON4 = 0b00010001;
  7509  0015BE  0E11               	movlw	17
  7510  0015C0  6FE4               	movwf	228,b	;volatile
  7511                           
  7512                           ; BSR set to: 13
  7513                           ;CAN.c: 136:     RXFCON0 = 0b11111111;
  7514  0015C2  69D4               	setf	212,b	;volatile
  7515                           
  7516                           ; BSR set to: 13
  7517                           ;CAN.c: 137:     RXFCON1 = 0b00000011;
  7518  0015C4  0E03               	movlw	3
  7519  0015C6  6FD5               	movwf	213,b	;volatile
  7520                           
  7521                           ; BSR set to: 13
  7522  0015C8  0012               	return		;funcret
  7523  0015CA                     __end_of_CAN_SetupMask:
  7524                           	opt callstack 0
  7525                           
  7526 ;; *************** function _CAN_SetupFilter_Ne *****************
  7527 ;; Defined at:
  7528 ;;		line 141 in file "CAN.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      void 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7546 ;;Total ram usage:        0 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    3
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_CAN_SetupMask
  7553 ;;		_FRAME_AdressOfNeighbors
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text57
  7558  001258                     __ptext57:
  7559                           	opt callstack 0
  7560  001258                     _CAN_SetupFilter_Ne:
  7561                           	opt callstack 24
  7562                           
  7563                           ;CAN.c: 145:     RXF2SIDH = 0;
  7564                           
  7565                           ; BSR set to: 13
  7566                           ;incstack = 0
  7567  001258  0E00               	movlw	0
  7568  00125A  010F               	movlb	15	; () banked
  7569  00125C  6F08               	movwf	8,b	;volatile
  7570                           
  7571                           ;CAN.c: 146:     RXF2SIDL = 0x20;
  7572  00125E  0E20               	movlw	32
  7573  001260  6F09               	movwf	9,b	;volatile
  7574                           
  7575                           ; BSR set to: 15
  7576                           ;CAN.c: 147:     RXF2SIDLbits.EXIDEN = 1;
  7577  001262  8709               	bsf	9,3,b	;volatile
  7578                           
  7579                           ;CAN.c: 148:     RXF2EIDH = (BYTE)(NeightAdress1>>8);
  7580  001264  5022               	movf	_NeightAdress1+1,w,c	;volatile
  7581  001266  6F0A               	movwf	10,b	;volatile
  7582                           
  7583                           ; BSR set to: 15
  7584                           ;CAN.c: 149:     RXF2EIDL = (BYTE)(NeightAdress1 & 0xFF);
  7585  001268  C021  FF0B         	movff	_NeightAdress1,3851	;volatile
  7586                           
  7587                           ;CAN.c: 152:     RXF3SIDH = 0;
  7588  00126C  0E00               	movlw	0
  7589  00126E  6F0C               	movwf	12,b	;volatile
  7590                           
  7591                           ;CAN.c: 153:     RXF3SIDL = 0x20;
  7592  001270  0E20               	movlw	32
  7593  001272  6F0D               	movwf	13,b	;volatile
  7594                           
  7595                           ; BSR set to: 15
  7596                           ;CAN.c: 154:     RXF3SIDLbits.EXIDEN = 1;
  7597  001274  870D               	bsf	13,3,b	;volatile
  7598                           
  7599                           ;CAN.c: 155:     RXF3EIDH = (BYTE)(NeightAdress2>>8);
  7600  001276  504B               	movf	_NeightAdress2+1,w,c	;volatile
  7601  001278  6F0E               	movwf	14,b	;volatile
  7602                           
  7603                           ; BSR set to: 15
  7604                           ;CAN.c: 156:     RXF3EIDL = (BYTE)(NeightAdress2 & 0xFF);
  7605  00127A  C04A  FF0F         	movff	_NeightAdress2,3855	;volatile
  7606                           
  7607                           ;CAN.c: 158:     RXF4SIDH = 0;
  7608  00127E  0E00               	movlw	0
  7609  001280  6F10               	movwf	16,b	;volatile
  7610                           
  7611                           ;CAN.c: 159:     RXF4SIDL = 0x20;
  7612  001282  0E20               	movlw	32
  7613  001284  6F11               	movwf	17,b	;volatile
  7614                           
  7615                           ; BSR set to: 15
  7616                           ;CAN.c: 160:     RXF4SIDLbits.EXIDEN = 1;
  7617  001286  8711               	bsf	17,3,b	;volatile
  7618                           
  7619                           ;CAN.c: 161:     RXF4EIDH = (BYTE)(NeightAdress3>>8);
  7620  001288  5020               	movf	_NeightAdress3+1,w,c	;volatile
  7621  00128A  6F12               	movwf	18,b	;volatile
  7622                           
  7623                           ; BSR set to: 15
  7624                           ;CAN.c: 162:     RXF4EIDL = (BYTE)(NeightAdress3 & 0xFF);
  7625  00128C  C01F  FF13         	movff	_NeightAdress3,3859	;volatile
  7626                           
  7627                           ;CAN.c: 164:     RXF5SIDH = 0;
  7628  001290  0E00               	movlw	0
  7629  001292  6F14               	movwf	20,b	;volatile
  7630                           
  7631                           ;CAN.c: 165:     RXF5SIDL = 0x20;
  7632  001294  0E20               	movlw	32
  7633  001296  6F15               	movwf	21,b	;volatile
  7634                           
  7635                           ; BSR set to: 15
  7636                           ;CAN.c: 166:     RXF5SIDLbits.EXIDEN = 1;
  7637  001298  8715               	bsf	21,3,b	;volatile
  7638                           
  7639                           ;CAN.c: 167:     RXF5EIDH = (BYTE)(NeightAdress4>>8);
  7640  00129A  501E               	movf	_NeightAdress4+1,w,c	;volatile
  7641  00129C  6F16               	movwf	22,b	;volatile
  7642                           
  7643                           ; BSR set to: 15
  7644                           ;CAN.c: 168:     RXF5EIDL = (BYTE)(NeightAdress4 & 0xFF);
  7645  00129E  C01D  FF17         	movff	_NeightAdress4,3863	;volatile
  7646                           
  7647                           ;CAN.c: 170:     RXF6SIDH = 0;
  7648  0012A2  0E00               	movlw	0
  7649  0012A4  010D               	movlb	13	; () banked
  7650  0012A6  6F60               	movwf	96,b	;volatile
  7651                           
  7652                           ;CAN.c: 171:     RXF6SIDL = 0x20;
  7653  0012A8  0E20               	movlw	32
  7654  0012AA  6F61               	movwf	97,b	;volatile
  7655                           
  7656                           ; BSR set to: 13
  7657                           ;CAN.c: 172:     RXF6SIDLbits.EXIDEN = 1;
  7658  0012AC  8761               	bsf	97,3,b	;volatile
  7659                           
  7660                           ;CAN.c: 173:     RXF6EIDH = (BYTE)(NeightAdress5>>8);
  7661  0012AE  501C               	movf	_NeightAdress5+1,w,c	;volatile
  7662  0012B0  6F62               	movwf	98,b	;volatile
  7663                           
  7664                           ; BSR set to: 13
  7665                           ;CAN.c: 174:     RXF6EIDL = (BYTE)(NeightAdress5 & 0xFF);
  7666  0012B2  C01B  FD63         	movff	_NeightAdress5,3427	;volatile
  7667                           
  7668                           ;CAN.c: 176:     RXF7SIDH = 0;
  7669  0012B6  0E00               	movlw	0
  7670  0012B8  6F64               	movwf	100,b	;volatile
  7671                           
  7672                           ;CAN.c: 177:     RXF7SIDL = 0x20;
  7673  0012BA  0E20               	movlw	32
  7674  0012BC  6F65               	movwf	101,b	;volatile
  7675                           
  7676                           ; BSR set to: 13
  7677                           ;CAN.c: 178:     RXF7SIDLbits.EXIDEN = 1;
  7678  0012BE  8765               	bsf	101,3,b	;volatile
  7679                           
  7680                           ;CAN.c: 179:     RXF7EIDH = (BYTE)(NeightAdress6>>8);
  7681  0012C0  501A               	movf	_NeightAdress6+1,w,c	;volatile
  7682  0012C2  6F66               	movwf	102,b	;volatile
  7683                           
  7684                           ; BSR set to: 13
  7685                           ;CAN.c: 180:     RXF7EIDL = (BYTE)(NeightAdress6 & 0xFF);
  7686  0012C4  C019  FD67         	movff	_NeightAdress6,3431	;volatile
  7687                           
  7688                           ;CAN.c: 182:     RXF8SIDH = 0;
  7689  0012C8  0E00               	movlw	0
  7690  0012CA  6F68               	movwf	104,b	;volatile
  7691                           
  7692                           ;CAN.c: 183:     RXF8SIDL = 0x20;
  7693  0012CC  0E20               	movlw	32
  7694  0012CE  6F69               	movwf	105,b	;volatile
  7695                           
  7696                           ; BSR set to: 13
  7697                           ;CAN.c: 184:     RXF8SIDLbits.EXIDEN = 1;
  7698  0012D0  8769               	bsf	105,3,b	;volatile
  7699                           
  7700                           ;CAN.c: 185:     RXF8EIDH = (BYTE)(NeightAdress7>>8);
  7701  0012D2  5018               	movf	_NeightAdress7+1,w,c	;volatile
  7702  0012D4  6F6A               	movwf	106,b	;volatile
  7703                           
  7704                           ; BSR set to: 13
  7705                           ;CAN.c: 186:     RXF8EIDL = (BYTE)(NeightAdress7 & 0xFF);
  7706  0012D6  C017  FD6B         	movff	_NeightAdress7,3435	;volatile
  7707                           
  7708                           ;CAN.c: 188:     RXF9SIDH = 0;
  7709  0012DA  0E00               	movlw	0
  7710  0012DC  6F70               	movwf	112,b	;volatile
  7711                           
  7712                           ;CAN.c: 189:     RXF9SIDL = 0x20;
  7713  0012DE  0E20               	movlw	32
  7714  0012E0  6F71               	movwf	113,b	;volatile
  7715                           
  7716                           ; BSR set to: 13
  7717                           ;CAN.c: 190:     RXF9SIDLbits.EXIDEN = 1;
  7718  0012E2  8771               	bsf	113,3,b	;volatile
  7719                           
  7720                           ;CAN.c: 191:     RXF9EIDH = (BYTE)(NeightAdress8>>8);
  7721  0012E4  5016               	movf	_NeightAdress8+1,w,c	;volatile
  7722  0012E6  6F72               	movwf	114,b	;volatile
  7723                           
  7724                           ; BSR set to: 13
  7725                           ;CAN.c: 192:     RXF9EIDL = (BYTE)(NeightAdress8 & 0xFF);
  7726  0012E8  C015  FD73         	movff	_NeightAdress8,3443	;volatile
  7727                           
  7728                           ; BSR set to: 13
  7729  0012EC  0012               	return		;funcret
  7730  0012EE                     __end_of_CAN_SetupFilter_Ne:
  7731                           	opt callstack 0
  7732                           
  7733 ;; *************** function _CAN_SetupClock *****************
  7734 ;; Defined at:
  7735 ;;		line 200 in file "CAN.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;		None
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;		None
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  1    wreg      void 
  7742 ;; Registers used:
  7743 ;;		None
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7753 ;;Total ram usage:        0 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:    3
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_CAN_Setup
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text58
  7764  001B20                     __ptext58:
  7765                           	opt callstack 0
  7766  001B20                     _CAN_SetupClock:
  7767                           	opt callstack 25
  7768                           
  7769                           ;CAN.c: 202:     BRGCON1bits.BRP0 = (((32000000/4)/(2*20*50000))-1) & 0b000001;
  7770                           
  7771                           ; BSR set to: 13
  7772                           ;incstack = 0
  7773  001B20  8070               	bsf	3952,0,c	;volatile
  7774                           
  7775                           ;CAN.c: 203:     BRGCON1bits.BRP1 = ((((32000000/4)/(2*20*50000))-1) >> 1) & 0b000001;
  7776  001B22  8270               	bsf	3952,1,c	;volatile
  7777                           
  7778                           ;CAN.c: 204:     BRGCON1bits.BRP2 = ((((32000000/4)/(2*20*50000))-1) >> 2) & 0b000001;
  7779  001B24  9470               	bcf	3952,2,c	;volatile
  7780                           
  7781                           ;CAN.c: 205:     BRGCON1bits.BRP3 = ((((32000000/4)/(2*20*50000))-1) >> 3) & 0b000001;
  7782  001B26  9670               	bcf	3952,3,c	;volatile
  7783                           
  7784                           ;CAN.c: 206:     BRGCON1bits.BRP4 = ((((32000000/4)/(2*20*50000))-1) >> 4) & 0b000001;
  7785  001B28  9870               	bcf	3952,4,c	;volatile
  7786                           
  7787                           ;CAN.c: 207:     BRGCON1bits.BRP5 = ((((32000000/4)/(2*20*50000))-1) >> 5) & 0b000001;
  7788  001B2A  9A70               	bcf	3952,5,c	;volatile
  7789                           
  7790                           ;CAN.c: 209:     BRGCON1bits.SJW0 = 1;
  7791  001B2C  8C70               	bsf	3952,6,c	;volatile
  7792                           
  7793                           ;CAN.c: 210:     BRGCON1bits.SJW1 = 1;
  7794  001B2E  8E70               	bsf	3952,7,c	;volatile
  7795                           
  7796                           ;CAN.c: 212:     BRGCON2bits.SEG1PH0 = 1;
  7797  001B30  8671               	bsf	3953,3,c	;volatile
  7798                           
  7799                           ;CAN.c: 213:     BRGCON2bits.SEG1PH1 = 1;
  7800  001B32  8871               	bsf	3953,4,c	;volatile
  7801                           
  7802                           ;CAN.c: 214:     BRGCON2bits.SEG1PH2 = 1;
  7803  001B34  8A71               	bsf	3953,5,c	;volatile
  7804                           
  7805                           ;CAN.c: 216:     BRGCON2bits.PRSEG2 = 1;
  7806  001B36  8471               	bsf	3953,2,c	;volatile
  7807                           
  7808                           ;CAN.c: 217:     BRGCON2bits.PRSEG1 = 0;
  7809  001B38  9271               	bcf	3953,1,c	;volatile
  7810                           
  7811                           ;CAN.c: 218:     BRGCON2bits.PRSEG0 = 0;
  7812  001B3A  9071               	bcf	3953,0,c	;volatile
  7813                           
  7814                           ;CAN.c: 220:     BRGCON3bits.SEG2PH0 = 1;
  7815  001B3C  8072               	bsf	3954,0,c	;volatile
  7816                           
  7817                           ;CAN.c: 221:     BRGCON3bits.SEG2PH1 = 0;
  7818  001B3E  9272               	bcf	3954,1,c	;volatile
  7819                           
  7820                           ;CAN.c: 222:     BRGCON3bits.SEG2PH2 = 1;
  7821  001B40  8472               	bsf	3954,2,c	;volatile
  7822                           
  7823                           ;CAN.c: 224:     BRGCON2bits.SAM = 1;
  7824  001B42  8C71               	bsf	3953,6,c	;volatile
  7825                           
  7826                           ;CAN.c: 225:     BRGCON2bits.SEG2PHTS = 1;
  7827  001B44  8E71               	bsf	3953,7,c	;volatile
  7828  001B46  0012               	return		;funcret
  7829  001B48                     __end_of_CAN_SetupClock:
  7830                           	opt callstack 0
  7831                           
  7832 ;; *************** function _FLASH_Write *****************
  7833 ;; Defined at:
  7834 ;;		line 23 in file "FLASH.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  addr            4    5[COMRAM] long 
  7837 ;;  val             2    9[COMRAM] unsigned int 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  flashWrBufPt    2   15[COMRAM] PTR unsigned int 
  7840 ;;		 -> FLASH_Write@val(2), 
  7841 ;;  GIEBitValue     2   13[COMRAM] unsigned int 
  7842 ;;  i               2    0        int 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7852 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7855 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7856 ;;Total ram usage:       12 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    3
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_main
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text59
  7867  001372                     __ptext59:
  7868                           	opt callstack 0
  7869  001372                     _FLASH_Write:
  7870                           	opt callstack 27
  7871                           
  7872                           ;FLASH.c: 23: void FLASH_Write(long int addr,UINT val);FLASH.c: 24: {;FLASH.c: 25:     U
      +                          INT *flashWrBufPtr = &val;
  7873                           
  7874                           ;incstack = 0
  7875  001372  0E2C               	movlw	low FLASH_Write@val
  7876  001374  6E32               	movwf	FLASH_Write@flashWrBufPtr,c
  7877  001376  0E00               	movlw	high FLASH_Write@val
  7878  001378  6E33               	movwf	FLASH_Write@flashWrBufPtr+1,c
  7879                           
  7880                           ;FLASH.c: 26:     int i;;FLASH.c: 27:    UINT GIEBitValue = INTCONbits.GIE;
  7881  00137A  AEF2               	btfss	4082,7,c	;volatile
  7882  00137C  D003               	goto	u2060
  7883  00137E  6A2E               	clrf	??_FLASH_Write& (0+255),c
  7884  001380  2A2E               	incf	??_FLASH_Write& (0+255),f,c
  7885  001382  D001               	goto	u2068
  7886  001384                     u2060:
  7887  001384  6A2E               	clrf	??_FLASH_Write& (0+255),c
  7888  001386                     u2068:
  7889  001386  502E               	movf	??_FLASH_Write,w,c
  7890  001388  6E30               	movwf	FLASH_Write@GIEBitValue,c
  7891  00138A  6A31               	clrf	FLASH_Write@GIEBitValue+1,c
  7892                           
  7893                           ;FLASH.c: 30:     TBLPTR = addr;
  7894  00138C  C028  FFF6         	movff	FLASH_Write@addr,tblptrl	;volatile
  7895  001390  C029  FFF7         	movff	FLASH_Write@addr+1,tblptrh	;volatile
  7896  001394  C02A  FFF8         	movff	FLASH_Write@addr+2,tblptru	;volatile
  7897                           
  7898                           ;FLASH.c: 34:     TABLAT = (flashWrBufPtr[0] >> 8);
  7899  001398  C032  FFD9         	movff	FLASH_Write@flashWrBufPtr,fsr2l
  7900  00139C  C033  FFDA         	movff	FLASH_Write@flashWrBufPtr+1,fsr2h
  7901  0013A0  CFDE F02E          	movff	postinc2,??_FLASH_Write
  7902  0013A4  CFDD F02F          	movff	postdec2,??_FLASH_Write+1
  7903  0013A8  C02F  F02E         	movff	??_FLASH_Write+1,??_FLASH_Write
  7904  0013AC  6A2F               	clrf	??_FLASH_Write+1,c
  7905  0013AE  502E               	movf	??_FLASH_Write,w,c
  7906  0013B0  6EF5               	movwf	tablat,c	;volatile
  7907  0013B2  000C               	tblwt		*	;# 
  7908                           
  7909                           ;FLASH.c: 36:     TABLAT = (flashWrBufPtr[0] & 0xff);
  7910  0013B4  C032  FFD9         	movff	FLASH_Write@flashWrBufPtr,fsr2l
  7911  0013B8  C033  FFDA         	movff	FLASH_Write@flashWrBufPtr+1,fsr2h
  7912  0013BC  50DF               	movf	indf2,w,c
  7913  0013BE  6EF5               	movwf	tablat,c	;volatile
  7914  0013C0  000C               	tblwt		*	;# 
  7915                           
  7916                           ;FLASH.c: 40:     TBLPTR = addr;
  7917  0013C2  C028  FFF6         	movff	FLASH_Write@addr,tblptrl	;volatile
  7918  0013C6  C029  FFF7         	movff	FLASH_Write@addr+1,tblptrh	;volatile
  7919  0013CA  C02A  FFF8         	movff	FLASH_Write@addr+2,tblptru	;volatile
  7920                           
  7921                           ;FLASH.c: 42:     EECON1bits.EEPGD = 1;
  7922  0013CE  8EA6               	bsf	4006,7,c	;volsfr
  7923                           
  7924                           ;FLASH.c: 43:     EECON1bits.CFGS = 0;
  7925  0013D0  9CA6               	bcf	4006,6,c	;volsfr
  7926                           
  7927                           ;FLASH.c: 44:     EECON1bits.WREN = 1;
  7928  0013D2  84A6               	bsf	4006,2,c	;volsfr
  7929                           
  7930                           ;FLASH.c: 46:     INTCONbits.GIE = 0;
  7931  0013D4  9EF2               	bcf	4082,7,c	;volatile
  7932                           
  7933                           ;FLASH.c: 47:     EECON2 = 0x55;
  7934  0013D6  0E55               	movlw	85
  7935  0013D8  6EA7               	movwf	4007,c	;volsfr
  7936                           
  7937                           ;FLASH.c: 48:     EECON2 = 0xAA;
  7938  0013DA  0EAA               	movlw	170
  7939  0013DC  6EA7               	movwf	4007,c	;volsfr
  7940                           
  7941                           ;FLASH.c: 49:     EECON1bits.WR = 1;
  7942  0013DE  82A6               	bsf	4006,1,c	;volsfr
  7943                           
  7944                           ;FLASH.c: 50:     INTCONbits.GIE = GIEBitValue;
  7945  0013E0  B030               	btfsc	FLASH_Write@GIEBitValue,0,c
  7946  0013E2  D002               	bra	u2075
  7947  0013E4  9EF2               	bcf	4082,7,c	;volatile
  7948  0013E6  D001               	bra	u2076
  7949  0013E8                     u2075:
  7950  0013E8  8EF2               	bsf	4082,7,c	;volatile
  7951  0013EA                     u2076:
  7952                           
  7953                           ;FLASH.c: 51:     EECON1bits.WREN = 0;
  7954  0013EA  94A6               	bcf	4006,2,c	;volsfr
  7955  0013EC  0012               	return		;funcret
  7956  0013EE                     __end_of_FLASH_Write:
  7957                           	opt callstack 0
  7958                           
  7959 ;; *************** function _FLASH_Read *****************
  7960 ;; Defined at:
  7961 ;;		line 16 in file "FLASH.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  addr            4    5[COMRAM] long 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  2    5[COMRAM] unsigned int 
  7968 ;; Registers used:
  7969 ;;		None
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;Total ram usage:        4 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    3
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_main
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text60
  7990  001BE4                     __ptext60:
  7991                           	opt callstack 0
  7992  001BE4                     _FLASH_Read:
  7993                           	opt callstack 27
  7994                           
  7995                           ;FLASH.c: 16: UINT FLASH_Read(long int addr);FLASH.c: 17: {;FLASH.c: 18:     TBLPTR = ad
      +                          dr;
  7996                           
  7997                           ;incstack = 0
  7998  001BE4  C028  FFF6         	movff	FLASH_Read@addr,tblptrl	;volatile
  7999  001BE8  C029  FFF7         	movff	FLASH_Read@addr+1,tblptrh	;volatile
  8000  001BEC  C02A  FFF8         	movff	FLASH_Read@addr+2,tblptru	;volatile
  8001  001BF0  0008               	tblrd		*	; ;# 
  8002                           
  8003                           ;FLASH.c: 20:     return TABLAT;
  8004  001BF2  CFF5 F028          	movff	tablat,?_FLASH_Read	;volatile
  8005  001BF6  6A29               	clrf	?_FLASH_Read+1,c
  8006  001BF8  0012               	return		;funcret
  8007  001BFA                     __end_of_FLASH_Read:
  8008                           	opt callstack 0
  8009                           
  8010 ;; *************** function _ISR_low *****************
  8011 ;; Defined at:
  8012 ;;		line 16 in file "ISR.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;		None
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;Total ram usage:        3 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; Hardware stack levels required when called:    2
  8033 ;; This function calls:
  8034 ;;		_TMR1_Timer_reset
  8035 ;;		i1_TMR1_Update_flag_Set
  8036 ;; This function is called by:
  8037 ;;		Interrupt level 1
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	intcodelo
  8042  000018                     __pintcodelo:
  8043                           	opt callstack 0
  8044  000018                     _ISR_low:
  8045                           	opt callstack 22
  8046                           
  8047                           ;incstack = 0
  8048  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8049  00001A  CFD8 F025          	movff	status,??_ISR_low
  8050  00001E  CFE8 F026          	movff	wreg,??_ISR_low+1
  8051  000022  CFE0 F027          	movff	bsr,??_ISR_low+2
  8052                           
  8053                           ;ISR.c: 21:     if(TMR1IF==1)
  8054  000026  A09E               	btfss	3998,0,c	;volatile
  8055  000028  D012               	goto	i1l795
  8056                           
  8057                           ;ISR.c: 22:         {;ISR.c: 23:             TMR1_Timer_reset();
  8058  00002A  ECA4  F00D         	call	_TMR1_Timer_reset	;wreg free
  8059                           
  8060                           ;ISR.c: 26:             static BYTE ramkaStanuU8=0;;ISR.c: 29:             TMR1_Update_f
      +                          lag_Set(1);
  8061  00002E  0E00               	movlw	0
  8062  000030  6E24               	movwf	i1TMR1_Update_flag_Set@a+1,c
  8063  000032  0E01               	movlw	1
  8064  000034  6E23               	movwf	i1TMR1_Update_flag_Set@a,c
  8065  000036  EC43  F00E         	call	i1_TMR1_Update_flag_Set	;wreg free
  8066                           
  8067                           ;ISR.c: 31:             DetectorLedRadar.Flags.obsluzWeWy = 1;
  8068  00003A  0100               	movlb	0	; () banked
  8069  00003C  81CB               	bsf	_DetectorLedRadar& (0+255),0,b
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;ISR.c: 33:             if(++ramkaStanuU8 > (2*10))
  8073  00003E  2A0E               	incf	ISR_low@ramkaStanuU8,f,c
  8074  000040  0E14               	movlw	20
  8075  000042  640E               	cpfsgt	ISR_low@ramkaStanuU8,c
  8076  000044  D003               	goto	i1l3909
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;ISR.c: 34:                 {;ISR.c: 35:                     ramkaStanuU8 = 0;
  8080  000046  0E00               	movlw	0
  8081  000048  6E0E               	movwf	ISR_low@ramkaStanuU8,c
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;ISR.c: 36:                     DaneCan.Flags.wyslijRamkeStanu = 1;
  8085  00004A  8001               	bsf	_DaneCan,0,c
  8086  00004C                     i1l3909:
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;ISR.c: 41:             TMR1IF=0;
  8090  00004C  909E               	bcf	3998,0,c	;volatile
  8091  00004E                     i1l795:
  8092  00004E  C027  FFE0         	movff	??_ISR_low+2,bsr
  8093  000052  C026  FFE8         	movff	??_ISR_low+1,wreg
  8094  000056  C025  FFD8         	movff	??_ISR_low,status
  8095  00005A  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8096  00005C  0010               	retfie	
  8097  00005E                     __end_of_ISR_low:
  8098                           	opt callstack 0
  8099                           
  8100 ;; *************** function i1_TMR1_Update_flag_Set *****************
  8101 ;; Defined at:
  8102 ;;		line 32 in file "TMR1.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  a               2    0[COMRAM] unsigned int 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		None
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;Total ram usage:        2 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    1
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_ISR_low
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           	psect	text62
  8131  001C86                     __ptext62:
  8132                           	opt callstack 0
  8133  001C86                     i1_TMR1_Update_flag_Set:
  8134                           	opt callstack 22
  8135                           
  8136                           ;TMR1.c: 32: void TMR1_Update_flag_Set(UINT a);TMR1.c: 33: {;TMR1.c: 34:     TMR1_Update
      +                          _flag = a;
  8137                           
  8138                           ;incstack = 0
  8139  001C86  C023  F009         	movff	i1TMR1_Update_flag_Set@a,_TMR1_Update_flag
  8140  001C8A  C024  F00A         	movff	i1TMR1_Update_flag_Set@a+1,_TMR1_Update_flag+1
  8141  001C8E  0012               	return		;funcret
  8142  001C90                     __end_ofi1_TMR1_Update_flag_Set:
  8143                           	opt callstack 0
  8144                           
  8145 ;; *************** function _TMR1_Timer_reset *****************
  8146 ;; Defined at:
  8147 ;;		line 63 in file "TMR1.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;		None
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;  t1H             1    1[COMRAM] volatile unsigned char 
  8152 ;;  t1L             1    0[COMRAM] volatile unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      unsigned char 
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;Total ram usage:        2 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:    1
  8169 ;; This function calls:
  8170 ;;		Nothing
  8171 ;; This function is called by:
  8172 ;;		_ISR_low
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           	psect	text63
  8177  001B48                     __ptext63:
  8178                           	opt callstack 0
  8179  001B48                     _TMR1_Timer_reset:
  8180                           	opt callstack 22
  8181                           
  8182                           ;TMR1.c: 69:     volatile BYTE t1L = 0, t1H = 0;
  8183                           
  8184                           ;incstack = 0
  8185  001B48  0E00               	movlw	0
  8186  001B4A  6E23               	movwf	TMR1_Timer_reset@t1L,c	;volatile
  8187  001B4C  0E00               	movlw	0
  8188  001B4E  6E24               	movwf	TMR1_Timer_reset@t1H,c	;volatile
  8189                           
  8190                           ;TMR1.c: 70:     t1L = TMR1L;
  8191  001B50  CFCE F023          	movff	4046,TMR1_Timer_reset@t1L	;volatile
  8192                           
  8193                           ;TMR1.c: 71:     t1H = TMR1H;
  8194  001B54  CFCF F024          	movff	4047,TMR1_Timer_reset@t1H	;volatile
  8195                           
  8196                           ;TMR1.c: 72:     __nop();
  8197  001B58  F000               	nop	
  8198                           
  8199                           ;TMR1.c: 73:     t1H += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) >> 8);
  8200  001B5A  0E9E               	movlw	158
  8201  001B5C  2624               	addwf	TMR1_Timer_reset@t1H,f,c	;volatile
  8202                           
  8203                           ;TMR1.c: 74:     t1L += (UINT8)((0xFFFF - (((8000000/8)/4)/10)) & 0xFF);
  8204  001B5E  0E57               	movlw	87
  8205  001B60  2623               	addwf	TMR1_Timer_reset@t1L,f,c	;volatile
  8206                           
  8207                           ;TMR1.c: 75:     TMR1H = t1H;
  8208  001B62  C024  FFCF         	movff	TMR1_Timer_reset@t1H,4047	;volatile
  8209                           
  8210                           ;TMR1.c: 76:     TMR1L = 0x5B;
  8211  001B66  0E5B               	movlw	91
  8212  001B68  6ECE               	movwf	4046,c	;volatile
  8213  001B6A  0012               	return		;funcret
  8214  001B6C                     __end_of_TMR1_Timer_reset:
  8215                           	opt callstack 0
  8216                           
  8217 ;; *************** function _ISR_high *****************
  8218 ;; Defined at:
  8219 ;;		line 53 in file "ISR.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;		None
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;		None
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  1    wreg      void 
  8226 ;; Registers used:
  8227 ;;		None
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;Total ram usage:        0 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; This function calls:
  8240 ;;		Nothing
  8241 ;; This function is called by:
  8242 ;;		Interrupt level 2
  8243 ;; This function uses a non-reentrant model
  8244 ;;
  8245                           
  8246                           	psect	intcode
  8247  000008                     __pintcode:
  8248                           	opt callstack 0
  8249  000008                     _ISR_high:
  8250                           	opt callstack 22
  8251                           
  8252                           ;incstack = 0
  8253  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8254  00000A  ED50  F00E         	call	int_func,f	;refresh shadow registers
  8255                           
  8256                           	psect	intcode_body
  8257  001CA0                     __pintcode_body:
  8258                           	opt callstack 22
  8259  001CA0                     int_func:
  8260                           	opt callstack 22
  8261  001CA0  0006               	pop		; remove dummy address from shadow register refresh
  8262  001CA2  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8263  001CA4  0011               	retfie		f
  8264  001CA6                     __end_of_ISR_high:
  8265                           	opt callstack 0
  8266  0000                     
  8267                           	psect	rparam
  8268  0000                     
  8269                           	psect	temp
  8270  00004C                     btemp:
  8271                           	opt callstack 0
  8272  00004C                     	ds	1
  8273  0000                     int$flags	set	btemp
  8274  0000                     wtemp8	set	btemp+1
  8275  0000                     ttemp5	set	btemp+1
  8276  0000                     ttemp6	set	btemp+4
  8277  0000                     ttemp7	set	btemp+8
  8278                           tosu	equ	0xFFF
  8279                           tosh	equ	0xFFE
  8280                           tosl	equ	0xFFD
  8281                           stkptr	equ	0xFFC
  8282                           pclatu	equ	0xFFB
  8283                           pclath	equ	0xFFA
  8284                           pcl	equ	0xFF9
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           indf0	equ	0xFEF
  8292                           postinc0	equ	0xFEE
  8293                           postdec0	equ	0xFED
  8294                           preinc0	equ	0xFEC
  8295                           plusw0	equ	0xFEB
  8296                           fsr0h	equ	0xFEA
  8297                           fsr0l	equ	0xFE9
  8298                           wreg	equ	0xFE8
  8299                           indf1	equ	0xFE7
  8300                           postinc1	equ	0xFE6
  8301                           postdec1	equ	0xFE5
  8302                           preinc1	equ	0xFE4
  8303                           plusw1	equ	0xFE3
  8304                           fsr1h	equ	0xFE2
  8305                           fsr1l	equ	0xFE1
  8306                           bsr	equ	0xFE0
  8307                           indf2	equ	0xFDF
  8308                           postinc2	equ	0xFDE
  8309                           postdec2	equ	0xFDD
  8310                           preinc2	equ	0xFDC
  8311                           plusw2	equ	0xFDB
  8312                           fsr2h	equ	0xFDA
  8313                           fsr2l	equ	0xFD9
  8314                           status	equ	0xFD8
>>>>>>> test


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         692
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      75
    BANK0           160     17     131
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    FRAME_AnalogValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_MapPosition@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FLASH_Write@flashWrBufPtr	PTR unsigned int  size(2) Largest target is 2
		 -> FLASH_Write@val(COMRAM[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 2
		 -> Init_Data(COMRAM[2]), NeightAdress8(COMRAM[2]), NeightAdress7(COMRAM[2]), NeightAdress6(COMRAM[2]), 
		 -> NeightAdress5(COMRAM[2]), NeightAdress4(COMRAM[2]), NeightAdress3(COMRAM[2]), NeightAdress2(COMRAM[2]), 
		 -> NeightAdress1(COMRAM[2]), 

    NVMalloc@location	PTR unsigned short  size(2) Largest target is 2
		 -> neighborsAdress(COMRAM[2]), ustawieniaKarty(COMRAM[2]), 

    FRAME_HandleCanFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AdressOfNeighbors@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_PrzypisanieDokarty@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SoftwareVersion@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_Plot@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DeviceReset@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_DataUpdateAndChangeOption@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    Dane	PTR struct DaneStruct size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FRAME_AxisStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AveragingTimes@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationMultiplier@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_ExcitationValue@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_AccelerometerStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    FRAME_SensorExcitationStatus@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(COMRAM[17]), 

    CAN_GenID@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_TakeFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_SendFrame@message	PTR struct . size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), 

    CAN_MoveBuffIntoFrame@Buf	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 

    CAN_MoveBuffIntoFrame@Ram	PTR unsigned char  size(2) Largest target is 17
		 -> TRM_DataTransmition@canMessage(BANK0[17]), RXB0D0(SFR_3[1]), 


Critical Paths under _main in COMRAM

    _TRM_DataTransmition->_FRAME_HandleCanFrame
    _FRAME_HandleCanFrame->_FRAME_DeviceReset
    _LED_Error->_LED_Control
    _FRAME_SensorExcitationStatus->_IsInNeighbors
<<<<<<< HEAD
    _FRAME_Plot->___lwdiv
    _FRAME_AdressOfNeighbors->___wmul
    _LED_Clear->_LED_Control
=======
    _FRAME_SensorExcitationStatus->_MOC_Aktualna_Temperatura
    _FRAME_SensorExcitationStatus->_MOC_Frame_Counter
    _FRAME_SensorExcitationStatus->_MOC_NOTWORK
    _FRAME_SensorExcitationStatus->_MOC_Wynikowa_wartosc_roznicowa
    _FRAME_Plot->___lwdiv
    _WriteDataToEEPROM->_NVMWrite
    _NVMWrite->_WritetoEEPROM
>>>>>>> test
    _FRAME_AccelerometerStatus->_MOCK_Klikniecie_Spadek
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieX
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieY
    _FRAME_AccelerometerStatus->_MOCK_PrzyspieszenieZ
    _CAN_SendFrame->_CAN_MoveBuffIntoFrame
    _CAN_TakeFrame->___awdiv
    _LED_Update->_LED_Light_Pos
    _LED_Light_Pos->___lwdiv
    _INI_All->_NVMInit
    _ReadDataToEEPROM->_NVMRead
    _NVMRead->_ReadfromEEPROM
    _NVMInit->_NVMalloc
    _INI_LED_Start->_LED_Control

Critical Paths under _ISR_low in COMRAM

    _ISR_low->_TMR1_Timer_reset
    _ISR_low->i1_TMR1_Update_flag_Set

Critical Paths under _ISR_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_TRM_DataTransmition

Critical Paths under _ISR_low in BANK0

    None.

Critical Paths under _ISR_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_low in BANK1

    None.

Critical Paths under _ISR_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_low in BANK2

    None.

Critical Paths under _ISR_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_low in BANK3

    None.

Critical Paths under _ISR_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_low in BANK4

    None.

Critical Paths under _ISR_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_low in BANK5

    None.

Critical Paths under _ISR_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_low in BANK6

    None.

Critical Paths under _ISR_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_low in BANK7

    None.

Critical Paths under _ISR_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_low in BANK8

    None.

Critical Paths under _ISR_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_low in BANK9

    None.

Critical Paths under _ISR_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_low in BANK10

    None.

Critical Paths under _ISR_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_low in BANK11

    None.

Critical Paths under _ISR_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_low in BANK12

    None.

Critical Paths under _ISR_high in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (0) _main                                                 0     0      0   21960
=======
 (0) _main                                                 2     2      0   31826
                                             26 COMRAM     2     2      0
                         _FLASH_Read
                        _FLASH_Write
>>>>>>> test
                            _INI_All
                         _LED_Update
               _TMR1_Update_flag_Get
               _TMR1_Update_flag_Set
                _TRM_DataTransmition
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (1) _TRM_DataTransmition                                 18    18      0   14735
                                             38 COMRAM    17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 5     3      2   12730
                                             33 COMRAM     5     3      2
=======
 (1) _TRM_DataTransmition                                 18    18      0   18698
                                              0 BANK0     17    17      0
                      _CAN_TakeFrame
               _FRAME_HandleCanFrame
 ---------------------------------------------------------------------------------
 (2) _FRAME_HandleCanFrame                                 9     7      2   15647
                                             17 COMRAM     9     7      2
>>>>>>> test
                          _CAN_GenID
                      _CAN_SendFrame
          _FRAME_AccelerometerStatus
            _FRAME_AdressOfNeighbors
                  _FRAME_AnalogValue
               _FRAME_AveragingTimes
                   _FRAME_AxisStatus
                  _FRAME_DeviceReset
         _FRAME_ExcitationMultiplier
              _FRAME_ExcitationValue
                  _FRAME_MapPosition
                         _FRAME_Plot
           _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
              _FRAME_SoftwareVersion
                          _LED_Error
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _LED_Error                                            0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_SoftwareVersion                                3     1      2     305
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (3) _FRAME_SensorExcitationStatus                         5     3      2     664
                                             13 COMRAM     5     3      2
=======
 (3) _FRAME_SensorExcitationStatus                         6     4      2     892
                                              7 COMRAM     6     4      2
>>>>>>> test
                      _IsInNeighbors
                           _LOCK_Get
                           _LOCK_Set
           _MOC_Aktualna_Temperatura
                  _MOC_Frame_Counter
                        _MOC_NOTWORK
     _MOC_Wynikowa_wartosc_roznicowa
 ---------------------------------------------------------------------------------
 (4) _MOC_Wynikowa_wartosc_roznicowa                       2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_NOTWORK                                          2     0      2       0
                                              5 COMRAM     2     0      2
<<<<<<< HEAD
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        8     6      2     193
                                              5 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             3     1      2     169
                                              5 COMRAM     3     1      2
=======
>>>>>>> test
 ---------------------------------------------------------------------------------
 (4) _MOC_Frame_Counter                                    2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOC_Aktualna_Temperatura                             2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LOCK_Set                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LOCK_Get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _IsInNeighbors                                        4     2      2     367
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_PrzypisanieDokarty                             6     4      2     367
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_Plot                                           3     1      2     929
                                             12 COMRAM     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _FRAME_MapPosition                                    2     0      2     119
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationValue                                3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_ExcitationMultiplier                           5     3      2     280
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_DeviceReset                                    3     1      2    4535
                                             14 COMRAM     3     1      2
    _FRAME_DataUpdateAndChangeOption
                  _WriteDataToEEPROM
 ---------------------------------------------------------------------------------
 (4) _WriteDataToEEPROM                                    0     0      0    3646
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (5) _NVMWrite                                             6     0      6    3646
                                              8 COMRAM     6     0      6
                      _WritetoEEPROM
 ---------------------------------------------------------------------------------
 (6) _WritetoEEPROM                                        3     0      3     331
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _FRAME_DataUpdateAndChangeOption                      3     1      2     243
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AxisStatus                                     5     3      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AveragingTimes                                 3     1      2     212
                                              5 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FRAME_AnalogValue                                    6     2      4     238
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (3) _FRAME_AdressOfNeighbors                             22    18      4    5041
                                             11 COMRAM    22    18      4
                          _LED_Clear
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2595
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _LED_Clear                                            0     0      0    1412
                        _LED_Control
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     235
=======
 (3) _FRAME_AdressOfNeighbors                             12     8      4    1626
                                              5 COMRAM    10     6      4
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (3) _FRAME_AccelerometerStatus                            3     1      2     305
>>>>>>> test
                                              7 COMRAM     3     1      2
             _MOCK_Klikniecie_Spadek
               _MOCK_PrzyspieszenieX
               _MOCK_PrzyspieszenieY
               _MOCK_PrzyspieszenieZ
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieZ                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieY                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_PrzyspieszenieX                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _MOCK_Klikniecie_Spadek                               2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CAN_SendFrame                                        5     3      2    1128
                                             10 COMRAM     5     3      2
              _CAN_MoveBuffIntoFrame
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (3) _CAN_GenID                                            7     4      3     382
                                              5 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        8     6      2    1645
                                             13 COMRAM     8     6      2
=======
 (3) _CAN_GenID                                            5     2      3     455
                                              5 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (2) _CAN_TakeFrame                                        6     4      2    2121
                                             13 COMRAM     6     4      2
>>>>>>> test
              _CAN_MoveBuffIntoFrame
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     811
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CAN_MoveBuffIntoFrame                                5     1      4     668
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Set                                 2     0      2     202
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_Update_flag_Get                                 2     0      2       0
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LED_Update                                           0     0      0    6660
                        _LED_Control
                           _LED_Left
                      _LED_Light_Pos
                          _LED_Right
 ---------------------------------------------------------------------------------
 (2) _LED_Light_Pos                                       11     7      4    4176
                                             12 COMRAM    11     7      4
                        _LED_Control
                           _LED_Left
                          _LED_Right
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     717
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_Right                                            6     4      2     364
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _LED_Left                                             4     2      2     364
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INI_All                                              0     0      0    5241
                          _CAN_Setup
                _INI_GlobalInterrupt
                      _INI_LED_Start
                         _INI_OUTPUT
                          _INI_Timer
                            _NVMInit
                   _ReadDataToEEPROM
 ---------------------------------------------------------------------------------
 (2) _ReadDataToEEPROM                                     0     0      0    2997
                            _NVMRead
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              6     0      6    2997
                                              7 COMRAM     6     0      6
                     _ReadfromEEPROM
 ---------------------------------------------------------------------------------
 (4) _ReadfromEEPROM                                       2     0      2     147
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVMInit                                              3     3      0     488
                                             11 COMRAM     3     3      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (3) _NVMalloc                                             6     2      4     478
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _INI_Timer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_OUTPUT                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INI_LED_Start                                        0     0      0    1756
                        _LED_Control
 ---------------------------------------------------------------------------------
 (4) _LED_Control                                          5     3      2    1756
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _INI_GlobalInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CAN_Setup                                            1     1      0       0
                                              5 COMRAM     1     1      0
                     _CAN_SetupClock
                      _CAN_SetupMask
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupMask                                        0     0      0       0
                 _CAN_SetupFilter_Ne
 ---------------------------------------------------------------------------------
 (4) _CAN_SetupFilter_Ne                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CAN_SetupClock                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FLASH_Write                                         14     8      6     548
                                              5 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _FLASH_Read                                           4     0      4     434
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (6) _ISR_low                                              3     3      0      76
=======
 (7) _ISR_low                                              3     3      0      76
>>>>>>> test
                                              2 COMRAM     3     3      0
                   _TMR1_Timer_reset
             i1_TMR1_Update_flag_Set
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (7) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
=======
 (8) i1_TMR1_Update_flag_Set                               2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_Timer_reset                                     2     2      0      28
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_high                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
>>>>>>> test
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_Read
   _FLASH_Write
   _INI_All
     _CAN_Setup
       _CAN_SetupClock
       _CAN_SetupMask
         _CAN_SetupFilter_Ne
     _INI_GlobalInterrupt
     _INI_LED_Start
       _LED_Control
     _INI_OUTPUT
     _INI_Timer
     _NVMInit
       _NVMalloc
     _ReadDataToEEPROM
       _NVMRead
         _ReadfromEEPROM
   _LED_Update
     _LED_Control
     _LED_Left
     _LED_Light_Pos
       _LED_Control
       _LED_Left
       _LED_Right
       ___lwdiv
     _LED_Right
   _TMR1_Update_flag_Get
   _TMR1_Update_flag_Set
   _TRM_DataTransmition
     _CAN_TakeFrame
       _CAN_MoveBuffIntoFrame
       ___awdiv
     _FRAME_HandleCanFrame
       _CAN_GenID
       _CAN_SendFrame
         _CAN_MoveBuffIntoFrame
       _FRAME_AccelerometerStatus
         _MOCK_Klikniecie_Spadek
         _MOCK_PrzyspieszenieX
         _MOCK_PrzyspieszenieY
         _MOCK_PrzyspieszenieZ
       _FRAME_AdressOfNeighbors
<<<<<<< HEAD
         _LED_Clear
           _LED_Control
         ___wmul
=======
         _CAN_SetupFilter_Ne
>>>>>>> test
       _FRAME_AnalogValue
       _FRAME_AveragingTimes
       _FRAME_AxisStatus
       _FRAME_DeviceReset
         _FRAME_DataUpdateAndChangeOption
         _WriteDataToEEPROM
           _NVMWrite
             _WritetoEEPROM
       _FRAME_ExcitationMultiplier
       _FRAME_ExcitationValue
       _FRAME_MapPosition
       _FRAME_Plot
         ___lwdiv
       _FRAME_PrzypisanieDokarty
       _FRAME_SensorExcitationStatus
         _IsInNeighbors
         _LOCK_Get
         _LOCK_Set
         _MOC_Aktualna_Temperatura
         _MOC_Frame_Counter
         _MOC_NOTWORK
         _MOC_Wynikowa_wartosc_roznicowa
       _FRAME_SoftwareVersion
       _LED_Error
         _LED_Control
       ___awdiv

 _ISR_low (ROOT)
   _TMR1_Timer_reset
   i1_TMR1_Update_flag_Set

 _ISR_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0     220      31       16.4%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      4B       1       79.8%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      20        0.0%
DATA                 0      0     2EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
<<<<<<< HEAD
Symbol Table                                                                                   Mon Jul 22 09:37:27 2019

              __end_of_FRAME_DeviceReset 0B2E                    ?_FRAME_AveragingTimes 0006  
                           ___awdiv@sign 000B                                       bsr 000FE0  
                    ___wmul@multiplicand 0008                              __CFG_BORV$3 000000  
                      ?_FRAME_AxisStatus 0006                        _FRAME_MapPosition 15A8  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                     __size_of_CAN_GenID 00A4                                      l220 033E  
                                    l221 0344                                      l222 034A  
                                    l311 0ED2                                      l223 0350  
                                    l207 07A8                                      l224 0356  
                                    l216 032C                                      l208 07A6  
                                    l217 039C                                      l218 0332  
                                    l219 0338                                      l339 09A2  
                            ?_LED_Update 0001                                      l561 0786  
                                    l562 077E                             __CFG_CPB$OFF 000000  
                     ??_FRAME_AxisStatus 0008                             __CFG_CPD$OFF 000000  
                     ?_FRAME_MapPosition 0006                       __size_of_CAN_Setup 005C  
                           ?_LED_Control 0006                                      wreg 000FE8  
                  __end_of_CAN_TakeFrame 05A2                              ?_INI_OUTPUT 0001  
                 __size_of_INI_LED_Start 0034                 ??_MOCK_Klikniecie_Spadek 0008  
                  __end_of_CAN_SendFrame 08FA                             __CFG_LVP$OFF 000000  
              TRM_DataTransmition@weWyU8 0049             __size_of_INI_GlobalInterrupt 000E  
                    ??_FRAME_MapPosition 0008                             __CFG_WDT$OFF 000000  
                                   l3010 0C40                                     l2400 099C  
                                   l1192 112E                                     l3016 0C6C  
                                   l3024 0CA2                                     l3040 05CA  
                                   l3018 0C76                                     l3050 0610  
                                   l3042 05D8                                     l2412 09C2  
                                   l3108 0EAE                                     l3060 0656  
                                   l3052 061E                                     l3044 05E6  
                                   l3124 124A                                     l2430 09F2  
                                   l2406 09B2                                     l3062 0670  
                                   l3054 062C                                     l3046 05F4  
                                   l2424 09E2                                     l2352 091C  
                                   l3064 067E                                     l3056 063A  
                                   l3048 0602                                     l3072 0698  
                                   l2442 0A12                                     l2418 09D2  
                                   l2370 094C                                     l2346 090C  
                                   l2514 1172                                     l3058 0648  
                                   l3074 0704                          __end_of_INI_All 14F6  
                                   l2460 0A44                                     l2436 0A02  
                                   l2364 093C                                     l2508 1140  
                                   l3156 13BE                                     l2454 0A32  
                                   l2382 096C                                     l2358 092C  
                                   l2710 1298                                     l2550 10FC  
                                   l2470 13EA                                     l3166 13DE  
                                   l2448 0A22                                     l2376 095C  
                                   l2552 1104                                     l2394 098C  
                                   l2562 1124                                     l2388 097C  
                                   l2812 008C                                     l2732 0BD0  
                                   l2670 0840                                     l2912 035C  
                                   l2824 017A                                     l2906 1026  
                                   l2930 0476                                     l2674 08F4  
                                   l2818 0172                                     l2860 0E22  
                                   l2940 049A                                     l2932 047C  
                                   l2836 02F6                                     l2764 11B2  
                                   l2694 1208                                     l2854 0E12  
                                   l2942 04A2                                     l2934 0482  
                                   l2950 04F2                                     l2960 0528  
                                   l2944 04AA                                     l2936 048A  
                                   l2792 10C8                                     l2866 0E38  
                                   l2882 0E6A                                     l2970 054E  
                                   l2962 052E                                     l2938 0492  
                                   l2954 04F6                                     l2786 0B0C  
                                   l2892 0FDC                                     l2868 0E40  
                                   l2972 0556                                     l2964 0536  
                                   l2948 04B2                                     l2956 0510  
                                   l2886 0E78                                     l2878 0E60  
                                   l2966 053E                                     l2958 0522  
                                   l2968 0546                                     l2976 055E  
                                   l2978 059E                                     _BIE0 000DFA  
                      _MOC_Frame_Counter 150E                                     u1050 1182  
                                   u1220 11C2                                     u1070 1108  
                                   u1135 0816                                     u1320 0170  
                                   u1500 0CAA                                     u1340 030A  
                                   u1260 0A9A                                     _LATA 000F89  
                                   u1350 031C                                     u1270 0AB2  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u1266 0A9C                                     u1276 0AB4  
                                   u1390 0E44                                     u1455 040E  
                                   _IPR3 000FA5                                     _IPEN 007E87  
                                   _PIE3 000FA3                                     _PEIE 007F96  
                                   _LOCK 004C                                     _PIR3 000FA4  
                                   _RCON 000FD0              ??_FRAME_AccelerometerStatus 000A  
                                   _Dane 0046                          __end_of_ISR_low 005C  
                       LED_Control@diode 0006                     FRAME_AnalogValue@set 0008  
                     ?_MOC_Frame_Counter 0006                                     _main 13B8  
                       LED_Control@color 000A                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 0056  
                         _CAN_SetupClock 1410                       __size_of_LED_Clear 001E  
                                   prodh 000FF4                                     prodl 000FF3  
                  __end_of_CAN_SetupMask 0DFE            __size_of_TMR1_Update_flag_Get 000A  
                                   start 005C            __size_of_TMR1_Update_flag_Set 000A  
                     __size_of_LED_Error 001E                            __CFG_IESO$OFF 000000  
                     __size_of_LED_Right 004C            __size_of_FRAME_HandleCanFrame 01EA  
                          _LED_Light_Pos 0C0A                            __CFG_MCLRE$ON 000000  
                           ___param_bank 000000                      ??_MOC_Frame_Counter 0008  
                         IsInNeighbors@i 000C               ??_MOC_Aktualna_Temperatura 0008  
      FRAME_HandleCanFrame@identyfikator 0026                       __size_of_INI_Timer 0018  
              __end_of_FRAME_MapPosition 15AA                         __end_of_LED_Left 12AC  
          __size_of_MOCK_PrzyspieszenieX 000A            __size_of_MOCK_PrzyspieszenieY 000A  
          __size_of_MOCK_PrzyspieszenieZ 000A                                    _B0CON 000E20  
                                  _B1CON 000E30                                    _B2CON 000E40  
                                  _B3CON 000E50                                    _B4CON 000E60  
                                  _B5CON 000E70                         __end_of_LOCK_Get 15A8  
                                  ?_main 0001                         __end_of_LOCK_Set 159E  
                        __end_of___awdiv 0E82                                    _BSEL0 000DF8  
                        ___awdiv@divisor 0008                                    _T1CON 000FCD  
                                  _IRCF0 007E9C                                    _IRCF1 007E9D  
      FRAME_ExcitationMultiplier@message 0006                                    _IRCF2 007E9E  
                        __end_of___lwdiv 1138                                    i1l628 004C  
                    __size_of_FRAME_Plot 0058                          ___awdiv@counter 000A  
                                  _MSEL0 000DF0                                    _MSEL1 000DF1  
                                  _MSEL2 000DF2                                    _MSEL3 000DF3  
                                  _TMR1H 000FCF                                    _TMR1L 000FCE  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                            __CFG_PWRT$OFF 000000  
                                  _Flagi 0038                   ?_CAN_MoveBuffIntoFrame 0006  
                          __CFG_WRT0$OFF 000000               __size_of_FRAME_AnalogValue 0002  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                       __end_of_ISR_high 15A4                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
              __end_of_MOC_Frame_Counter 151C                           __CFG_EBTRB$OFF 000000  
                i1TMR1_Update_flag_Set@a 0001                             ?_MOC_NOTWORK 0006  
                                  tablat 000FF5                   __end_of_CAN_SetupClock 1438  
                                  plusw2 000FDB                                    ttemp5 0057  
                                  ttemp6 005A                                    ttemp7 005E  
                                  status 000FD8                                    wtemp8 0057  
                      __end_of_CAN_GenID 0D5E                           __CFG_PBADEN$ON 000000  
                    __size_of_LED_Update 007A                           ?_LED_Light_Pos 000D  
                       _TMR1_Timer_reset 145E                        __end_of_CAN_Setup 1034  
                          _INI_LED_Start 1384                    _FRAME_ExcitationValue 12E2  
       FRAME_AccelerometerStatus@message 0008                          __initialization 1034  
                    __size_of_INI_OUTPUT 001E                         CAN_GenID@frameID 0008  
                           __end_of_main 13E6                   ??_FRAME_AveragingTimes 0008  
             __size_of_FRAME_DeviceReset 00E2                 ?_FRAME_AdressOfNeighbors 000C  
                       CAN_GenID@message 0006                _FRAME_AccelerometerStatus 0EFC  
                                 ??_main 0038                   CAN_MoveBuffIntoFrame@i 000A  
                          __activetblptr 000002                         _TMR1_Update_flag 0044  
                      __end_of_LED_Clear 14BE                    __end_of_IsInNeighbors 1186  
                        _wartosciSasiada 00C6                                ??_INI_All 000B  
                      __end_of_LED_Error 14A0                        __end_of_LED_Right 1220  
        __size_of_MOCK_Klikniecie_Spadek 000A                                ??_ISR_low 0003  
                                 _CANCON 000F6F                         ___awdiv@dividend 0006  
            FRAME_ExcitationMultiplier@i 0009                                   _CIOCON 000F73  
                        __CFG_BBSIZ$1024 000000                        __end_of_INI_Timer 150E  
                                 i1l3182 004A                          ?_CAN_SetupClock 0001  
                                 _RXB0D0 000F66                                   _TMR1IE 007CE8  
                                 _TMR1IF 007CF0                                   _TMR1IP 007CF8  
                                 _TMR1ON 007E68             ??_FRAME_ExcitationMultiplier 0008  
                         ?_INI_LED_Start 0001                           __CFG_XINST$OFF 000000  
                                 ___wmul 1438                                ??___awdiv 000A  
                         __CFG_STVREN$ON 000000                         LED_Light_Pos@pos 000D  
             __size_of_FRAME_MapPosition 0002                                ??___lwdiv 000A  
                                 clear_0 105C                                   clear_1 106E  
                                 clear_2 107A                         ___awdiv@quotient 000C  
             ??_FRAME_PrzypisanieDokarty 0008                 ??i1_TMR1_Update_flag_Set 0003  
                        __CFG_BOREN$BOHW 000000                             __pdataCOMRAM 004D  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8      __size_of_FRAME_ExcitationMultiplier 004E  
             __size_of_MOC_Frame_Counter 000E                     __size_of_LED_Control 0152  
               FRAME_MapPosition@message 0006                    TMR1_Update_flag_Set@a 0006  
                             __accesstop 0060                  __end_of__initialization 1080  
                           ??_FRAME_Plot 000F                      ISR_low@ramkaStanuU8 004A  
                              ?_LED_Left 0006                          ??_LED_Light_Pos 0011  
                          ___rparam_used 000001                   ?_FRAME_ExcitationValue 0006  
                              ?_LOCK_Get 0001                                ?_LOCK_Set 0001  
        __end_of_FRAME_AdressOfNeighbors 031E                   _MOCK_Klikniecie_Spadek 155C  
                         __pcstackCOMRAM 0001                                LED_Left@a 0006  
                              LED_Left@b 0008                      _INI_GlobalInterrupt 151C  
                              ?_ISR_high 0001                             ??_LED_Update 0018  
            __end_of_TRM_DataTransmition 126A                    _FRAME_SoftwareVersion 0F72  
                     __end_of_FRAME_Plot 10E6                             ??_INI_OUTPUT 0006  
                              LOCK_Set@k 0006                  FRAME_AxisStatus@message 0006  
            IsInNeighbors@message_adress 0006                     ?_INI_GlobalInterrupt 0001  
              __size_of_FRAME_AxisStatus 0036                               __pbssBANK0 0060  
                   __size_of_MOC_NOTWORK 0008                          ??_INI_LED_Start 000B  
                             ??_LED_Left 0008                               ??_LOCK_Get 0006  
                             ??_LOCK_Set 0006                       __end_of_LED_Update 0EFC  
                     __end_of_INI_OUTPUT 14DC                                  ?___wmul 0006  
                             ??_ISR_high 0001                      TMR1_Timer_reset@t1H 0002  
                    TMR1_Timer_reset@t1L 0001                                  _ECANCON 000F77  
                                _CANSTAT 000F6E                  ??_CAN_MoveBuffIntoFrame 000A  
           __end_of_TMR1_Update_flag_Get 157A             __end_of_TMR1_Update_flag_Set 1570  
        __size_ofi1_TMR1_Update_flag_Set 000A             __end_of_FRAME_HandleCanFrame 078C  
                                _INI_All 14DC                 __end_of_TMR1_Timer_reset 1482  
                                _RXB0DLC 000F65                                  _RXB0CON 000F60  
                                _RXB1CON 000F50                    ??_INI_GlobalInterrupt 0006  
                                _TXB0CON 000F40                                  _ISR_low 0018  
                                _RXFCON0 000DD4                                  _DaneCan 003D  
           __end_of_MOCK_PrzyspieszenieX 155C             __end_of_MOCK_PrzyspieszenieY 1552  
           __end_of_MOCK_PrzyspieszenieZ 1548       __end_of_FRAME_ExcitationMultiplier 11D4  
             _FRAME_ExcitationMultiplier 1186              FRAME_HandleCanFrame@message 0022  
                                __Hparam 0000         ??_MOC_Wynikowa_wartosc_roznicowa 0008  
        ?_MOC_Wynikowa_wartosc_roznicowa 0006                                  __Lparam 0000  
                 __size_of_CAN_TakeFrame 0284                                _CAN_GenID 0CBA  
                                ___awdiv 0DFE                                _CAN_Setup 0FD8  
                        __size_of___wmul 0026                   __size_of_CAN_SendFrame 016E  
                                ___lwdiv 10E6                        LED_Light_Pos@pos2 0014  
                                __pcinit 1034                                  __ramtop 0D00  
                                __ptext0 13B8                                  __ptext1 1220  
                                __ptext2 05A2                                  __ptext3 1482  
                                __ptext4 0F72                                  __ptext5 0B2E  
                                __ptext6 152A                                  __ptext7 158E  
                                __ptext8 150E                                  __ptext9 1534  
                 ?_FRAME_SoftwareVersion 0006                   __size_of_CAN_SetupMask 00A0  
      __size_of_MOC_Aktualna_Temperatura 000A           FRAME_AdressOfNeighbors@nrRamki 000E  
              ?_MOC_Aktualna_Temperatura 0006         __size_of_FRAME_AdressOfNeighbors 02BE  
                       ??_CAN_SetupClock 0006           FRAME_AdressOfNeighbors@message 000C  
                              _LED_Clear 14A0                                _LED_Error 1482  
                         __pintcode_body 159E                                _LED_Right 11D4  
                   end_of_initialization 1080                            __Lmediumconst 0000  
                                int_func 159E                                _INI_Timer 14F6  
                 i1_TMR1_Update_flag_Set 157A         TRM_DataTransmition@czujnikWeWyU8 0048  
                             ?_CAN_GenID 0006                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                             ?_CAN_Setup 0001            __size_of_FRAME_AveragingTimes 0036  
      FRAME_SensorExcitationStatus@theta 0011                     CAN_SendFrame@message 000B  
                          LED_Update@Red 004B                            _CAN_TakeFrame 031E  
                             ?_LED_Clear 0001                            _CAN_SendFrame 078C  
                             ?_LED_Error 0001                               ?_LED_Right 0006  
                       _FRAME_AxisStatus 1318                  ??_FRAME_ExcitationValue 0008  
                             ?_INI_Timer 0001                  ?_MOCK_Klikniecie_Spadek 0006  
                        _ramkaCanRxKarty 0060                     _TMR1_Update_flag_Get 1570  
                        _ramkaCanTxKarty 00B5                     _TMR1_Update_flag_Set 1566  
                          _CAN_SetupMask 0D5E                        __size_of_LED_Left 0042  
                   _FRAME_HandleCanFrame 05A2                   __size_of_IsInNeighbors 004E  
                      __size_of_LOCK_Get 0004                        __size_of_LOCK_Set 0008  
                         CAN_TakeFrame@k 0015                           __end_of___wmul 145E  
                          __pidataCOMRAM 1584                        __size_of_ISR_high 159C  
                   _MOCK_PrzyspieszenieX 1552                     _MOCK_PrzyspieszenieY 1548  
                   _MOCK_PrzyspieszenieZ 153E                               LED_Right@a 0006  
                             LED_Right@b 000A                    MOC_Frame_Counter@zeta 004D  
                          ??_LED_Control 0008                      start_initialization 1034  
                         ?_CAN_TakeFrame 000E                           ?_CAN_SendFrame 000B  
         __end_of_MOCK_Klikniecie_Spadek 1566                         __CFG_OSC$IRCIO67 000000  
      __size_of_FRAME_PrzypisanieDokarty 0036                ?_FRAME_PrzypisanieDokarty 0006  
                  ?_TMR1_Update_flag_Get 0006                    ?_TMR1_Update_flag_Set 0006  
                         ?_CAN_SetupMask 0001                    __end_of_LED_Light_Pos 0CBA  
                  ?_FRAME_HandleCanFrame 0022                              ??_CAN_GenID 0009  
                               ??___wmul 000A                              ??_CAN_Setup 0006  
                       __CFG_LPT1OSC$OFF 000000                    ?_MOCK_PrzyspieszenieX 0006  
                  ?_MOCK_PrzyspieszenieY 0006                    ?_MOCK_PrzyspieszenieZ 0006  
               CAN_MoveBuffIntoFrame@Buf 0008     __end_of_FRAME_SensorExcitationStatus 0C0A  
  __size_of_FRAME_SensorExcitationStatus 00DC                 CAN_MoveBuffIntoFrame@Ram 0006  
           _FRAME_SensorExcitationStatus 0B2E           __size_of_CAN_MoveBuffIntoFrame 002A  
                            __pbssBIGRAM 00C6            __end_of_CAN_MoveBuffIntoFrame 1410  
                        _Fulfillment_Lvl 0053                              __pbssCOMRAM 0038  
                               ?_INI_All 0001                  _FRAME_AdressOfNeighbors 0060  
                          _IsInNeighbors 1138                        ?_TMR1_Timer_reset 0001  
                            _BRGCON1bits 000F70                              _BRGCON2bits 000F71  
                            _BRGCON3bits 000F72                                 ?_ISR_low 0001  
                            ??_LED_Clear 000B                            ??_MOC_NOTWORK 0008  
                     ??_TMR1_Timer_reset 0001                              ??_LED_Error 000B  
                            ??_LED_Right 0008             __size_of_TRM_DataTransmition 004A  
               FRAME_AdressOfNeighbors@i 0020                 FRAME_AdressOfNeighbors@k 001E  
                    __end_of_LED_Control 0A4C              ?_FRAME_ExcitationMultiplier 0006  
                            ??_INI_Timer 0006                    __end_of_INI_LED_Start 13B8  
                       ___lwdiv@dividend 0006                                __pintcode 0008  
                               ?___awdiv 0006                  ??_FRAME_SoftwareVersion 0008  
       __end_of_MOC_Aktualna_Temperatura 153E                                 ?___lwdiv 0006  
                      FRAME_Plot@message 000D                              __pintcodelo 0018  
                     CAN_TakeFrame@op_id 0012              __end_of_INI_GlobalInterrupt 152A  
                        ??_CAN_TakeFrame 0010            ?_FRAME_SensorExcitationStatus 000E  
 __end_of_MOC_Wynikowa_wartosc_roznicowa 1534  __size_of_MOC_Wynikowa_wartosc_roznicowa 000A  
         _MOC_Wynikowa_wartosc_roznicowa 152A                              _COMSTATbits 000F74  
                         ?_IsInNeighbors 0006                          ??_CAN_SendFrame 000D  
                       ___lwdiv@quotient 000A                  ?i1_TMR1_Update_flag_Set 0001  
            FRAME_AveragingTimes@message 0006                   ??_TMR1_Update_flag_Get 0008  
                 ??_TMR1_Update_flag_Set 0008                          ??_CAN_SetupMask 0006  
                         ___wmul@product 000A                                 _LED_Left 126A  
                 ??_FRAME_HandleCanFrame 0024                     CAN_TakeFrame@message 000E  
                    __end_of_MOC_NOTWORK 1596                                 _LOCK_Get 15A4  
                   CAN_TakeFrame@tempCON 0014                                 _LOCK_Set 1596  
                               _RXB0EIDH 000F63                                 _RXB0EIDL 000F64  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                               _RXB0SIDH 000F61                                 _RXB0SIDL 000F62  
                               _RXF0EIDH 000F02                                 _RXF0EIDL 000F03  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXF2EIDH 000F0A                                 _RXF2EIDL 000F0B  
                               _RXF3EIDH 000F0E                                 _RXF3EIDL 000F0F  
                               _RXF4EIDH 000F12                                 _RXF4EIDL 000F13  
                               _RXF5EIDH 000F16                                 _RXF5EIDL 000F17  
                               _RXF0SIDH 000F00                                 _RXF0SIDL 000F01  
                               _RXF1SIDH 000F04                                 _RXF1SIDL 000F05  
                               _RXF2SIDH 000F08                                 _RXF2SIDL 000F09  
                               _RXF3SIDH 000F0C                                 _RXF3SIDL 000F0D  
                               _ISR_high 0008                                 _RXF5SIDH 000F14  
                               _RXF5SIDL 000F15                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                                 _RXM1EIDH 000F1E  
                               _RXM1EIDL 000F1F                   ??_MOCK_PrzyspieszenieX 0008  
                 ??_MOCK_PrzyspieszenieY 0008                   ??_MOCK_PrzyspieszenieZ 0008  
                               _RXM0SIDH 000F18                                 _RXM0SIDL 000F19  
                               _RXM1SIDH 000F1C                                 _RXM1SIDL 000F1D  
               __end_of_FRAME_AxisStatus 134E                ??_FRAME_AdressOfNeighbors 0010  
                      ___wmul@multiplier 0006                         _DetectorLedRadar 0041  
                            _LED_Control 08FA                         __size_of_INI_All 001A  
           FRAME_ExcitationValue@message 0006           __end_ofi1_TMR1_Update_flag_Set 1584  
                              copy_data0 1048                         __size_of_ISR_low 0044  
     __size_of_FRAME_AccelerometerStatus 0076             __end_of_FRAME_AveragingTimes 1384  
             ?_FRAME_AccelerometerStatus 0008           __size_of_FRAME_ExcitationValue 0036  
          __end_of_FRAME_ExcitationValue 1318                                 __Hrparam 0000  
                           _RXB0SIDLbits 000F62                                 __Lrparam 0000  
                       __size_of___awdiv 0084                         __size_of___lwdiv 0052  
                        ??_IsInNeighbors 0008                 _MOC_Aktualna_Temperatura 1534  
        FRAME_PrzypisanieDokarty@message 0006                       LED_Light_Pos@flage 0016  
                     LED_Light_Pos@color 0011         __end_of_FRAME_PrzypisanieDokarty 12E2  
                           _RXF0SIDLbits 000F01                 FRAME_AnalogValue@message 0006  
                        ___lwdiv@divisor 0008                             _RXF1SIDLbits 000F05  
                        ___lwdiv@counter 000C                                 __ptext10 1596  
                               __ptext11 15A4                                 __ptext20 134E  
                               __ptext12 1138                                 __ptext21 15AA  
                               __ptext13 12AC                                 __ptext30 078C  
                               __ptext22 0060                                 __ptext14 108E  
                               __ptext31 0CBA                                 __ptext23 1438  
                               __ptext15 15A8                                 __ptext40 11D4  
                               __ptext32 031E                                 __ptext24 14A0  
                               __ptext16 12E2                                 __ptext41 126A  
                               __ptext33 0DFE                                 __ptext25 0EFC  
                               __ptext17 1186                                 __ptext50 1410  
                               __ptext42 14DC                                 __ptext34 13E6  
                               __ptext26 153E                                 __ptext18 0A4C  
                               __ptext43 14F6                                 __ptext35 1566  
                               __ptext27 1548                                 __ptext19 1318  
                               __ptext52 157A                                 __ptext44 14BE  
                               __ptext36 1570                                 __ptext28 1552  
         ??_FRAME_SensorExcitationStatus 0010                                 __ptext53 145E  
                               __ptext45 1384                                 __ptext37 0E82  
                               __ptext29 155C                                 __ptext46 08FA  
                               __ptext38 0C0A                                 __ptext47 151C  
                               __ptext39 10E6                                 __ptext48 0FD8  
                               __ptext49 0D5E            TRM_DataTransmition@canMessage 0027  
                           _RXF2SIDLbits 000F09                              _MOC_NOTWORK 158E  
                           _RXF3SIDLbits 000F0D                             _RXF4SIDLbits 000F11  
               FRAME_DeviceReset@message 0006        __end_of_FRAME_AccelerometerStatus 0F72  
                           _RXF5SIDLbits 000F15                               _FRAME_Plot 108E  
                          __size_of_main 002E                  __size_of_CAN_SetupClock 0028  
                               int$flags 0056                      _TRM_DataTransmition 1220  
                            _RXB0DLCbits 000F65                               _LED_Update 0E82  
                            _RXB0CONbits 000F60                               _INTCONbits 000FF2  
                             _INI_OUTPUT 14BE                        _FRAME_AnalogValue 15AA  
                   ?_TRM_DataTransmition 0001             FRAME_SoftwareVersion@message 0006  
                               intlevel1 0000                                 intlevel2 0000  
                     ?_FRAME_AnalogValue 0006      FRAME_SensorExcitationStatus@message 000E  
                            _TXB0CONbits 000F40                      ??_FRAME_AnalogValue 000A  
              __size_of_TMR1_Timer_reset 0024                 LED_Light_Pos@fulfillment 000F  
                   _FRAME_AveragingTimes 134E           __size_of_FRAME_SoftwareVersion 0066  
                      _FRAME_DeviceReset 0A4C            __end_of_FRAME_SoftwareVersion 0FD8  
                     ?_FRAME_DeviceReset 0006                          LED_Update@Green 0055  
              __end_of_FRAME_AnalogValue 15AC                   __size_of_LED_Light_Pos 00B0  
                  _CAN_MoveBuffIntoFrame 13E6                               _WDTCONbits 000FD1  
                    ??_FRAME_DeviceReset 0008                    ??_TRM_DataTransmition 0027  
               _FRAME_PrzypisanieDokarty 12AC                   LED_Light_Pos@LED_array 0012  
                         LED_Update@pos1 0051                           LED_Update@pos2 004F  
                            ?_FRAME_Plot 000D  
=======
Symbol Table                                                                                   Tue Jul 30 10:35:02 2019

               __end_of_FRAME_DeviceReset 0D4A                     ?_FRAME_AveragingTimes 0028  
                            ___awdiv@sign 002D                                        bsr 000FE0  
                             __CFG_BORV$3 000000                         ?_FRAME_AxisStatus 0028  
                       _FRAME_MapPosition 1CAA                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            NVMRead@count 002E                              __CFG_CP3$OFF 000000  
                       WritetoEEPROM@Data 002A                        __size_of_CAN_GenID 0078  
                                     l300 03AC                                       l301 0342  
                                     l302 0348                                       l303 034E  
                                     l304 0354                                       l305 035A  
                                     l306 0360                                       l307 0366  
                                     l422 0B58                                       l290 095A  
                                     l291 0958                               ?_LED_Update 0023  
                                     l394 143E                                       l299 033C  
                                     l708 07AA                                       l653 093C  
                                     l709 07A2                                       l940 1A90  
                                     l932 1A88                                       l949 1984  
                            __CFG_CPB$OFF 000000                        ??_FRAME_AxisStatus 002A  
                            __CFG_CPD$OFF 000000                        ?_FRAME_MapPosition 0028  
                      __size_of_CAN_Setup 005C                              ?_LED_Control 0028  
                                     wreg 000FE8                     __end_of_CAN_TakeFrame 05AA  
                             ?_INI_OUTPUT 0023                    __size_of_INI_LED_Start 0034  
                           NVMInit@result 0030                  ??_MOCK_Klikniecie_Spadek 002A  
                   __end_of_CAN_SendFrame 0AB0                              __CFG_LVP$OFF 000000  
                         _neighborsAdress 0011                 TRM_DataTransmition@weWyU8 000D  
            __size_of_INI_GlobalInterrupt 000E                       ??_FRAME_MapPosition 002A  
                            __CFG_WDT$OFF 000000                                      l4103 0B02  
                                    l1463 17E0                                      l4023 19AE  
                                    l4121 0B32                                      l4115 0B22  
                         __end_of_INI_All 1B8E                                      l4133 0B52  
                                    l4109 0B12                                      l4151 0B88  
                                    l4127 0B42                                      l4231 1070  
                                    l4145 0B78                                      l3441 1A3E  
                                    l4065 1AFA                                      l4225 1058  
                                    l4163 0BA8                                      l4139 0B68  
                                    l4091 0AE2                                      l3283 18FE  
                                    l3267 18B8                                      l4243 10A0  
                                    l4181 0BD8                                      l4157 0B98  
                                    l4085 0AD2                                      l4309 17D6  
                                    l4501 177A                                      l4261 10E8  
                                    l4237 1088                                      l4175 0BC8  
                                    l4079 0AC2                                      l4511 1210  
                                    l4255 10D0                                      l4423 0E32  
                                    l4193 0BFA                                      l4169 0BB8  
                                    l4097 0AF2                                      l4249 10B8  
                                    l4417 0DEC                                      l4187 0BE8  
                                    l3395 1AB8                                      l4531 026C  
                                    l4523 011C                                      l4267 1100  
                                    l4427 0E4E                                      l3653 07FA  
                                    l4701 116C                                      l4621 0492  
                                    l4525 019E                                      l3671 0884  
                                    l4703 1176                                      l4543 1302  
                                    l4623 049A                                      l4615 047E  
                                    l4391 0AA8                                      l4455 1816  
                                    l3665 0856                                      l4297 17AE  
                                    l4625 04A2                                      l4617 0484  
                                    l4633 04BA                                      l4641 0518  
                                    l4529 0266                                      l3683 08E0  
                                    l3659 0828                                      l4299 17B6  
                                    l4555 1328                                      l4571 135A  
                                    l4651 0546                                      l4643 052A  
                                    l4627 04AA                                      l4619 048A  
                                    l4635 04FA                                      l4387 09F4  
                                    l4491 0D26                                      l4731 05EC  
                                    l4581 1634                                      l3677 08B2  
                                    l4709 11A2                                      l4557 1330  
                                    l4549 1312                                      l4653 054E  
                                    l4645 0530                                      l4661 0566  
                                    l4629 04B2                                      l4477 0CC4  
                                    l4741 0632                                      l4733 05FA  
                                    l4575 1368                                      l4567 1350  
                                    l4655 0556                                      l4647 0536  
                                    l4663 05A6                                      l4639 04FE  
                                    l4495 0D38                                      l4487 0D04  
                                    l4751 0684                                      l4743 0640  
                                    l4735 0608                                      l4593 167E  
                                    l3689 090E                                      l4657 055E  
                                    l4649 053E                                      l4753 0692  
                                    l4745 064E                                      l4737 0616  
                                    l4761 0728                                      l4729 05DE  
                                    l4809 1864                                      l4755 06A8  
                                    l4747 065C                                      l4739 0624  
                                    l4835 1016                                      l4749 066A  
                                    l4845 1038                                      _BIE0 000DFA  
                                    l4695 1140                                      l4599 036C  
                                    l4759 06BE                                      l4795 141A  
                       _MOC_Frame_Counter 1C0C                                      u2060 1384  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u2075 13E8  
                                    u2155 1A84                                      u2076 13EA  
                                    u2068 1386                                      u2156 1A86  
                                    u2510 17BA                                      u2700 0C6A  
                                    _IPR3 000FA5                                      _IPEN 007E87  
                                    _PIE3 000FA3                                      u2706 0C6C  
                                    u2650 1826                                      u2575 09CA  
                                    u2840 1334                                      u2905 0416  
                                    u2690 0C52                                      _PEIE 007F96  
                                    _LOCK 0010                                      u2950 11AA  
                                    u2696 0C54                                      _PIR3 000FA4  
                                    _RCON 000FD0               ??_FRAME_AccelerometerStatus 002C  
                                    _Dane 00D0                           __end_of_ISR_low 005E  
                        LED_Control@diode 0028                      FRAME_AnalogValue@set 002A  
                      ?_MOC_Frame_Counter 0028                                      _main 0F54  
                        LED_Control@color 002C                           __end_of_NVMInit 194C  
                         __end_of_NVMRead 1AC2                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 004C  
                          _CAN_SetupClock 1B20                                      prodh 000FF4  
                                    prodl 000FF3                     __end_of_CAN_SetupMask 15CA  
           __size_of_TMR1_Update_flag_Get 000A                                      start 005E  
           __size_of_TMR1_Update_flag_Set 000A                        __size_of_LED_Error 001E  
                           __CFG_IESO$OFF 000000                        __size_of_LED_Right 004C  
           __size_of_FRAME_HandleCanFrame 0206                             _LED_Light_Pos 110A  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                     ??_MOC_Frame_Counter 002A                ??_MOC_Aktualna_Temperatura 002A  
       FRAME_HandleCanFrame@identyfikator 003C                       __size_of_FLASH_Read 0016  
                      __size_of_INI_Timer 0018                 __end_of_FRAME_MapPosition 1CAC  
                           _NeightAdress1 0021                             _NeightAdress2 004A  
                           _NeightAdress3 001F                             _NeightAdress4 001D  
                           _NeightAdress5 001B                             _NeightAdress6 0019  
                           _NeightAdress7 0017                             _NeightAdress8 0015  
                        __end_of_LED_Left 1912             __size_of_MOCK_PrzyspieszenieX 000A  
           __size_of_MOCK_PrzyspieszenieY 000A             __size_of_MOCK_PrzyspieszenieZ 000A  
                   ReadfromEEPROM@Address 0028                                     _B0CON 000E20  
                                   _B1CON 000E30                                     _B2CON 000E40  
                                   _B3CON 000E50                                     _B4CON 000E60  
                                   _B5CON 000E70                          __end_of_LOCK_Get 1CAA  
                                   ?_main 0023                          __end_of_LOCK_Set 1CA0  
                         __end_of___awdiv 1372                                     _EEADR 000FA9  
                                   _BSEL0 000DF8                           ___awdiv@divisor 002A  
                                   _T1CON 000FCD                                     _IRCF0 007E9C  
                                   _IRCF1 007E9D         FRAME_ExcitationMultiplier@message 0028  
                                   _IRCF2 007E9E                           __end_of___lwdiv 17EA  
                                   i1l795 004E                       __size_of_FRAME_Plot 0058  
                         ___awdiv@counter 002C                                     _MSEL0 000DF0  
                                   _MSEL1 000DF1                                     _MSEL2 000DF2  
                                   _MSEL3 000DF3                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_PWRT$OFF 000000                                     _Flagi 00C6  
                  ?_CAN_MoveBuffIntoFrame 0028                             __CFG_WRT0$OFF 000000  
              __size_of_FRAME_AnalogValue 0002                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_ISR_high 1CA6  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                 __end_of_MOC_Frame_Counter 1C1A  
                          __CFG_EBTRB$OFF 000000                   i1TMR1_Update_flag_Set@a 0023  
                            ?_MOC_NOTWORK 0028                 __size_of_ReadDataToEEPROM 018E  
                        __end_of_NVMWrite 19B8                          __end_of_NVMalloc 1A5A  
                                   tablat 000FF5                    __end_of_CAN_SetupClock 1B48  
                                   ttemp5 004D                                     ttemp6 0050  
                                   ttemp7 0054                                     status 000FD8  
                                   wtemp8 004D                         __end_of_CAN_GenID 14E0  
                          __CFG_PBADEN$ON 000000                       __size_of_LED_Update 007A  
                          ?_LED_Light_Pos 002F                          _TMR1_Timer_reset 1B48  
                       __end_of_CAN_Setup 168C                             _INI_LED_Start 1AC2  
                FLASH_Write@flashWrBufPtr 0032                     _FRAME_ExcitationValue 194C  
        FRAME_AccelerometerStatus@message 002A                           __initialization 168C  
                     __size_of_INI_OUTPUT 0020                          CAN_GenID@frameID 002A  
                            __end_of_main 1040                    ??_FRAME_AveragingTimes 002A  
              __size_of_FRAME_DeviceReset 0148                  ?_FRAME_AdressOfNeighbors 0028  
                  __size_of_WritetoEEPROM 0034                          CAN_GenID@message 0028  
               _FRAME_AccelerometerStatus 14E0                      __size_of_FLASH_Write 007C  
                                  ??_main 003D                    CAN_MoveBuffIntoFrame@i 002C  
                           __activetblptr 000002                              NVMWrite@addr 002D  
                        _TMR1_Update_flag 0009                   WritetoEEPROM@GIE_Status 000B  
                   __end_of_IsInNeighbors 110A                           _wartosciSasiada 00E3  
                               ??_INI_All 0031                         __end_of_LED_Error 1BCC  
                       __end_of_LED_Right 18D0                      WritetoEEPROM@Address 0028  
         __size_of_MOCK_Klikniecie_Spadek 000A                                 ??_ISR_low 0025  
                               ??_NVMInit 002E                                 ??_NVMRead 0030  
                                  _CANCON 000F6F                                    _EEADRH 000FAA  
                                  _EEDATA 000FA8                                    _EECON2 000FA7  
                        ___awdiv@dividend 0028               FRAME_ExcitationMultiplier@i 002B  
                                  _CIOCON 000F73                           __CFG_BBSIZ$1024 000000  
                       __end_of_INI_Timer 1BE4                                    i1l3909 004C  
                                  _TABLAT 000FF5                           ?_CAN_SetupClock 0023  
                                  _TBLPTR 000FF6                                    _RXB0D0 000F66  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1IP 007CF8                                    _TMR1ON 007E68  
            ??_FRAME_ExcitationMultiplier 002A                            ?_INI_LED_Start 0023  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 002C  
                          __CFG_STVREN$ON 000000                          LED_Light_Pos@pos 002F  
              __size_of_FRAME_MapPosition 0002                                 ??___lwdiv 002C  
                                  clear_0 16B4                                    clear_1 16C6  
                                  clear_2 16D2                          ___awdiv@quotient 002E  
                            NVMalloc@size 0028                ??_FRAME_PrzypisanieDokarty 002A  
                ??i1_TMR1_Update_flag_Set 0025                           __CFG_BOREN$BOHW 000000  
                 __size_of_ReadfromEEPROM 0012                              __pdataCOMRAM 003F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                              ??_FLASH_Read 002C  
     __size_of_FRAME_ExcitationMultiplier 004E                __size_of_MOC_Frame_Counter 000E  
                    __size_of_LED_Control 0152                             _WritetoEEPROM 1A5A  
                FRAME_MapPosition@message 0028                            FLASH_Read@addr 0028  
                   TMR1_Update_flag_Set@a 0028                                __accesstop 0060  
                 __end_of__initialization 16D8                              ??_FRAME_Plot 0031  
                     ISR_low@ramkaStanuU8 000E                                 ?_LED_Left 0028  
                         ??_LED_Light_Pos 0033                             ___rparam_used 000001  
                  ?_FRAME_ExcitationValue 0028                                 ?_LOCK_Get 0023  
                               ?_LOCK_Set 0023           __end_of_FRAME_AdressOfNeighbors 032E  
                  _MOCK_Klikniecie_Spadek 1C68                            __pcstackCOMRAM 0023  
                               LED_Left@a 0028                                 LED_Left@b 002A  
                     _INI_GlobalInterrupt 1C1A                                 ?_ISR_high 0023  
                      __end_of_FLASH_Read 1BFA                                 ?_NVMWrite 002B  
                               ?_NVMalloc 0028                              ??_LED_Update 003A  
             __end_of_TRM_DataTransmition 1884                     _FRAME_SoftwareVersion 15CA  
                      __end_of_FRAME_Plot 1798                              ??_INI_OUTPUT 0028  
                               LOCK_Set@k 0028                   FRAME_AxisStatus@message 0028  
             IsInNeighbors@message_adress 0028                            ?_WritetoEEPROM 0028  
                    ?_INI_GlobalInterrupt 0023                          _ReadDataToEEPROM 07B0  
               __size_of_FRAME_AxisStatus 0036                                __pbssBANK0 0060  
             __size_of_CAN_SetupFilter_Ne 0096                            FLASH_Write@val 002C  
                           NVMWrite@count 002F                      __size_of_MOC_NOTWORK 0008  
                         ??_INI_LED_Start 002D                                ??_LED_Left 002A  
                              ??_LOCK_Get 0028                                ??_LOCK_Set 0028  
                      __end_of_LED_Update 1468                        __end_of_INI_OUTPUT 1BAE  
                              ??_ISR_high 0023                       TMR1_Timer_reset@t1H 0024  
                     TMR1_Timer_reset@t1L 0023                                   _ECANCON 000F77  
                                 _CANSTAT 000F6E                                ??_NVMWrite 0031  
                 ??_CAN_MoveBuffIntoFrame 002C                                ??_NVMalloc 002C  
            __end_of_TMR1_Update_flag_Get 1C86              __end_of_TMR1_Update_flag_Set 1C7C  
         __size_ofi1_TMR1_Update_flag_Set 000A              __end_of_FRAME_HandleCanFrame 07B0  
                                 _INI_All 1B6C                  __end_of_TMR1_Timer_reset 1B6C  
                                 _RXB0DLC 000F65                                   _RXB0CON 000F60  
                                 _RXB1CON 000F50                     ??_INI_GlobalInterrupt 0028  
                                 _TXB0CON 000F40                                   _ISR_low 0018  
                                 _RXFCON0 000DD4                                   _RXFCON1 000DD5  
                                 _NVMInit 1912                                   _NVMRead 1A8E  
                                 _DaneCan 0001              __end_of_MOCK_PrzyspieszenieX 1C68  
            __end_of_MOCK_PrzyspieszenieY 1C5E              __end_of_MOCK_PrzyspieszenieZ 1C54  
      __end_of_FRAME_ExcitationMultiplier 1838                _FRAME_ExcitationMultiplier 17EA  
             FRAME_HandleCanFrame@message 0034                                   __Hparam 0000  
        ??_MOC_Wynikowa_wartosc_roznicowa 002A           ?_MOC_Wynikowa_wartosc_roznicowa 0028  
                                 __Lparam 0000                    __size_of_CAN_TakeFrame 027C  
                               _CAN_GenID 1468                                   ___awdiv 12EE  
                               _CAN_Setup 1630                    __size_of_CAN_SendFrame 0172  
                                 ___lwdiv 1798                         LED_Light_Pos@pos2 0036  
                                 __pcinit 168C                                   __ramtop 0D00  
  FRAME_DataUpdateAndChangeOption@message 0028                                   __ptext0 0F54  
                                 __ptext1 1838                                   __ptext2 05AA  
                                 __ptext3 1BAE                                   __ptext4 15CA  
                                 __ptext5 0D4A                                   __ptext6 1C36  
                                 __ptext7 1C90                                   __ptext8 1C0C  
                                 __ptext9 1C40                    ?_FRAME_SoftwareVersion 0028  
                          _ReadfromEEPROM 1BFA                           ??_WritetoEEPROM 002B  
                  __size_of_CAN_SetupMask 0074         __size_of_MOC_Aktualna_Temperatura 000A  
          FRAME_AdressOfNeighbors@nrRamki 002A                 ?_MOC_Aktualna_Temperatura 0028  
        __size_of_FRAME_AdressOfNeighbors 02CC                          ??_CAN_SetupClock 0028  
          FRAME_AdressOfNeighbors@message 0028                                   main@adr 003D  
                               _LED_Error 1BAE                            __pintcode_body 1CA0  
                               _LED_Right 1884                      end_of_initialization 16D8  
    FRAME_SensorExcitationStatus@statwect 0007                             __Lmediumconst 0000  
                                 int_func 1CA0                                 _INI_Timer 1BCC  
                  i1_TMR1_Update_flag_Set 1C86          TRM_DataTransmition@czujnikWeWyU8 000C  
                              ?_CAN_GenID 0028                             ??_FLASH_Write 002E  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              ?_CAN_Setup 0023             __size_of_FRAME_AveragingTimes 0036  
                  __end_of_ReadfromEEPROM 1C0C                      CAN_SendFrame@message 002D  
                        NVMalloc@location 002A                             LED_Update@Red 000F  
                           _CAN_TakeFrame 032E                               NVMRead@addr 002C  
                           _CAN_SendFrame 093E                                ?_LED_Error 0023  
                             NVMRead@dest 002A               FRAME_AdressOfNeighbors@kier 0030  
                              ?_LED_Right 0028                          _FRAME_AxisStatus 19B8  
                 ??_FRAME_ExcitationValue 002A                                ?_INI_Timer 0023  
                 ?_MOCK_Klikniecie_Spadek 0028                           _ramkaCanRxKarty 0060  
                    _TMR1_Update_flag_Get 1C7C                           _ramkaCanTxKarty 00B5  
                    _TMR1_Update_flag_Set 1C72                             _CAN_SetupMask 1556  
                       __size_of_LED_Left 0042                      _FRAME_HandleCanFrame 05AA  
                  __size_of_IsInNeighbors 00CA                         __size_of_LOCK_Get 0004  
                       __size_of_LOCK_Set 0008                         _WriteDataToEEPROM 0E56  
                __end_of_ReadDataToEEPROM 093E                            CAN_TakeFrame@k 0035  
                      ?_WriteDataToEEPROM 0023                           ?_ReadfromEEPROM 0028  
                           __pidataCOMRAM 1C28                         __size_of_ISR_high 1C9E  
                    _MOCK_PrzyspieszenieX 1C5E                      _MOCK_PrzyspieszenieY 1C54  
                    _MOCK_PrzyspieszenieZ 1C4A                                LED_Right@a 0028  
                              LED_Right@b 002C                       __end_of_FLASH_Write 13EE  
                   MOC_Frame_Counter@zeta 003F                         __size_of_NVMWrite 0036  
                           ??_LED_Control 002A                       ??_WriteDataToEEPROM 0031  
                       __size_of_NVMalloc 0036                       start_initialization 168C  
                          ?_CAN_TakeFrame 0030                                 _Init_Data 0048  
                          ?_CAN_SendFrame 002D           FRAME_SensorExcitationStatus@tru 002E  
          __end_of_MOCK_Klikniecie_Spadek 1C72                          __CFG_OSC$IRCIO67 000000  
       __size_of_FRAME_PrzypisanieDokarty 009E                 ?_FRAME_PrzypisanieDokarty 0028  
                   ?_TMR1_Update_flag_Get 0028                     ?_TMR1_Update_flag_Set 0028  
                          ?_CAN_SetupMask 0023                     __end_of_LED_Light_Pos 11BA  
                   ?_FRAME_HandleCanFrame 0034                 __end_of_WriteDataToEEPROM 0F54  
                             ??_CAN_GenID 002B                               ??_CAN_Setup 0028  
                        __CFG_LPT1OSC$OFF 000000                     ?_MOCK_PrzyspieszenieX 0028  
                   ?_MOCK_PrzyspieszenieY 0028                     ?_MOCK_PrzyspieszenieZ 0028  
                CAN_MoveBuffIntoFrame@Buf 002A      __end_of_FRAME_SensorExcitationStatus 0E56  
   __size_of_FRAME_SensorExcitationStatus 010C                  CAN_MoveBuffIntoFrame@Ram 0028  
            _FRAME_SensorExcitationStatus 0D4A            __size_of_CAN_MoveBuffIntoFrame 002A  
                             __pbssBIGRAM 00E3             __end_of_CAN_MoveBuffIntoFrame 1B20  
                         _Fulfillment_Lvl 0045                               __pbssCOMRAM 0001  
                                ?_INI_All 0023                   _FRAME_AdressOfNeighbors 0062  
                         FLASH_Write@addr 0028                             __pcstackBANK0 00D2  
                           _IsInNeighbors 1040                         ?_TMR1_Timer_reset 0023  
                         _ustawieniaKarty 0013                               _BRGCON1bits 000F70  
                             _BRGCON2bits 000F71                               _BRGCON3bits 000F72  
                                ?_ISR_low 0023   __end_of_FRAME_DataUpdateAndChangeOption 1740  
__size_of_FRAME_DataUpdateAndChangeOption 005A         ??_FRAME_DataUpdateAndChangeOption 002A  
        ?_FRAME_DataUpdateAndChangeOption 0028           _FRAME_DataUpdateAndChangeOption 16E6  
                           ??_MOC_NOTWORK 002A                __end_of_CAN_SetupFilter_Ne 12EE  
                                ?_NVMInit 0023                                  ?_NVMRead 002A  
                      ??_TMR1_Timer_reset 0023                               ??_LED_Error 002D  
                          NVMWrite@source 002B                               ??_LED_Right 002A  
            __size_of_TRM_DataTransmition 004C                       __end_of_LED_Control 0C02  
             ?_FRAME_ExcitationMultiplier 0028                               ??_INI_Timer 0028  
                   __end_of_INI_LED_Start 1AF6                          ___lwdiv@dividend 0028  
                               __pintcode 0008                                  ?___awdiv 0028  
                             _FLASH_Write 1372                   ??_FRAME_SoftwareVersion 002A  
        __end_of_MOC_Aktualna_Temperatura 1C4A                                  ?___lwdiv 0028  
                       FRAME_Plot@message 002F                               __pintcodelo 0018  
             __end_of_INI_GlobalInterrupt 1C28                           ??_CAN_TakeFrame 0032  
           ?_FRAME_SensorExcitationStatus 002A    __end_of_MOC_Wynikowa_wartosc_roznicowa 1C40  
 __size_of_MOC_Wynikowa_wartosc_roznicowa 000A            _MOC_Wynikowa_wartosc_roznicowa 1C36  
                             _COMSTATbits 000F74                            ?_IsInNeighbors 0028  
                         ??_CAN_SendFrame 002F                          ___lwdiv@quotient 002D  
                 ?i1_TMR1_Update_flag_Set 0023               FRAME_AveragingTimes@message 0028  
                  ??_TMR1_Update_flag_Get 002A                    ??_TMR1_Update_flag_Set 002A  
                         ??_CAN_SetupMask 0028                                  _LED_Left 18D0  
                  ??_FRAME_HandleCanFrame 0036                      CAN_TakeFrame@message 0030  
                     __end_of_MOC_NOTWORK 1C98                                  _LOCK_Get 1CA6  
                    CAN_TakeFrame@tempCON 0034                                  _LOCK_Set 1C98  
              __size_of_WriteDataToEEPROM 00FE                                  _RXB0EIDH 000F63  
                                _RXB0EIDL 000F64                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXF0EIDH 000F02  
                                _RXF0EIDL 000F03                                  _RXF1EIDH 000F06  
                                _RXF1EIDL 000F07                                  _RXF2EIDH 000F0A  
                                _RXF2EIDL 000F0B                                  _RXF3EIDH 000F0E  
                                _RXF3EIDL 000F0F                                  _RXF4EIDH 000F12  
                                _RXF4EIDL 000F13                                  _RXF5EIDH 000F16  
                                _RXF5EIDL 000F17                                  _RXF6EIDH 000D62  
                                _RXF6EIDL 000D63                                  _RXF0SIDH 000F00  
                                _RXF7EIDH 000D66                                  _RXF0SIDL 000F01  
                                _RXF7EIDL 000D67                                  _RXF1SIDH 000F04  
                                _RXF8EIDH 000D6A                                  _RXF1SIDL 000F05  
                                _RXF8EIDL 000D6B                                  _RXF2SIDH 000F08  
                                _RXF9EIDH 000D72                                  _RXF2SIDL 000F09  
                                _RXF9EIDL 000D73                                  _RXF3SIDH 000F0C  
                                _RXF3SIDL 000F0D                                  _ISR_high 0008  
                                _RXF4SIDH 000F10                                  _RXF4SIDL 000F11  
                                _RXF5SIDH 000F14                                  _RXF5SIDL 000F15  
                                _RXF6SIDH 000D60                                  _RXF6SIDL 000D61  
                                _RXM0EIDH 000F1A                                  _RXF7SIDH 000D64  
                                _RXM0EIDL 000F1B                                  _RXF7SIDL 000D65  
                                _RXM1EIDH 000F1E                                  _RXF8SIDH 000D68  
                                _RXM1EIDL 000F1F                                  _RXF8SIDL 000D69  
                                _RXF9SIDH 000D70                    ??_MOCK_PrzyspieszenieX 002A  
                  ??_MOCK_PrzyspieszenieY 002A                                  _RXF9SIDL 000D71  
                  ??_MOCK_PrzyspieszenieZ 002A                                  _RXFBCON0 000DE0  
                                _RXFBCON1 000DE1                                  _RXFBCON2 000DE2  
                                _RXFBCON3 000DE3                                  _RXFBCON4 000DE4  
                                _RXM0SIDH 000F18                                  _RXM0SIDL 000F19  
                                _RXM1SIDH 000F1C                                  _RXM1SIDL 000F1D  
                __end_of_FRAME_AxisStatus 19EE                                  _NVMWrite 1982  
                  FLASH_Write@GIEBitValue 0030                                  _NVMalloc 1A24  
               ??_FRAME_AdressOfNeighbors 002C                          _DetectorLedRadar 00CB  
                             _LED_Control 0AB0                          __size_of_INI_All 0022  
            FRAME_ExcitationValue@message 0028                     __end_of_WritetoEEPROM 1A8E  
          __end_ofi1_TMR1_Update_flag_Set 1C90                            _nextEEPosition 0005  
                               copy_data0 16A0                          __size_of_ISR_low 0046  
      __size_of_FRAME_AccelerometerStatus 0076              __end_of_FRAME_AveragingTimes 1A24  
                        __size_of_NVMInit 003A                          __size_of_NVMRead 0034  
              ?_FRAME_AccelerometerStatus 002A            __size_of_FRAME_ExcitationValue 0036  
           __end_of_FRAME_ExcitationValue 1982                                _EECON1bits 000FA6  
                                __Hrparam 0000                              _RXB0SIDLbits 000F62  
                        ??_ReadfromEEPROM 002A                                  __Lrparam 0000  
                       ?_ReadDataToEEPROM 0023                          __size_of___awdiv 0084  
                        __size_of___lwdiv 0052                        ??_ReadDataToEEPROM 0030  
                         ??_IsInNeighbors 002A                  _MOC_Aktualna_Temperatura 1C40  
         FRAME_PrzypisanieDokarty@message 0028                        LED_Light_Pos@flage 0038  
                      LED_Light_Pos@color 0033          __end_of_FRAME_PrzypisanieDokarty 1258  
                            _RXF0SIDLbits 000F01                  FRAME_AnalogValue@message 0028  
                         ___lwdiv@divisor 002A                              _RXF1SIDLbits 000F05  
                              _FLASH_Read 1BE4                           ___lwdiv@counter 002C  
                                __ptext10 1C98                                  __ptext11 1CA6  
                                __ptext20 1982                                  __ptext12 1040  
                                __ptext21 1A5A                                  __ptext13 11BA  
                                __ptext30 1C5E                                  __ptext22 16E6  
                                __ptext14 1740                                  __ptext31 1C68  
                                __ptext23 19B8                                  __ptext15 1CAA  
                                __ptext40 110A                                  __ptext32 093E  
                                __ptext24 19EE                                  __ptext16 194C  
                                __ptext41 1798                                  __ptext33 1468  
                                __ptext25 1CAC                                  __ptext17 17EA  
                                __ptext50 1BCC                                  __ptext42 1884  
                                __ptext34 032E                                  __ptext26 0062  
                                __ptext18 0C02                                  __ptext51 1B8E  
                                __ptext43 18D0                                  __ptext35 12EE  
                                __ptext27 14E0                                  __ptext19 0E56  
                                __ptext60 1BE4                                  __ptext52 1AC2  
                                __ptext44 1B6C                                  __ptext36 1AF6  
                                __ptext28 1C4A            ??_FRAME_SensorExcitationStatus 002C  
                                __ptext53 0AB0                                  __ptext45 07B0  
                                __ptext37 1C72                                  __ptext29 1C54  
                                __ptext62 1C86                                  __ptext54 1C1A  
                                __ptext46 1A8E                                  __ptext38 1C7C  
                                __ptext63 1B48                                  __ptext55 1630  
                                __ptext47 1BFA                                  __ptext39 13EE  
                                __ptext56 1556                                  __ptext48 1912  
                                __ptext57 1258                                  __ptext49 1A24  
                                __ptext58 1B20                                  __ptext59 1372  
           TRM_DataTransmition@canMessage 00D2                              _RXF2SIDLbits 000F09  
                             _MOC_NOTWORK 1C90                              _RXF3SIDLbits 000F0D  
               FRAME_HandleCanFrame@ident 003A                              _RXF4SIDLbits 000F11  
                FRAME_DeviceReset@message 0031         __end_of_FRAME_AccelerometerStatus 1556  
                            _RXF5SIDLbits 000F15                                _FRAME_Plot 1740  
                           __size_of_main 00EC                              _RXF6SIDLbits 000D61  
                            _RXF7SIDLbits 000D65                   __size_of_CAN_SetupClock 0028  
                            _RXF8SIDLbits 000D69                              _RXF9SIDLbits 000D71  
                                int$flags 004C                       _TRM_DataTransmition 1838  
                             _RXB0DLCbits 000F65                                _LED_Update 13EE  
                             _RXB0CONbits 000F60                                _INTCONbits 000FF2  
                              _INI_OUTPUT 1B8E                         _FRAME_AnalogValue 1CAC  
                    ?_TRM_DataTransmition 0023              FRAME_SoftwareVersion@message 0028  
                                intlevel1 0000                                  intlevel2 0000  
                         _czujnikiNaMapie 00CE                        ?_FRAME_AnalogValue 0028  
     FRAME_SensorExcitationStatus@message 002A                               _TXB0CONbits 000F40  
                     ??_FRAME_AnalogValue 002C                 __size_of_TMR1_Timer_reset 0024  
                      _CAN_SetupFilter_Ne 1258                              ?_FLASH_Write 0028  
                LED_Light_Pos@fulfillment 0031                      _FRAME_AveragingTimes 19EE  
                     ?_CAN_SetupFilter_Ne 0023            __size_of_FRAME_SoftwareVersion 0066  
                       _FRAME_DeviceReset 0C02             __end_of_FRAME_SoftwareVersion 1630  
                      ?_FRAME_DeviceReset 0031                           LED_Update@Green 0047  
               __end_of_FRAME_AnalogValue 1CAE                    __size_of_LED_Light_Pos 00B0  
                             ?_FLASH_Read 0028                     _CAN_MoveBuffIntoFrame 1AF6  
                              _WDTCONbits 000FD1                       ??_FRAME_DeviceReset 0033  
                   ??_TRM_DataTransmition 003D                  _FRAME_PrzypisanieDokarty 11BA  
                  LED_Light_Pos@LED_array 0034                      ??_CAN_SetupFilter_Ne 0028  
                          LED_Update@pos1 0043                            LED_Update@pos2 0041  
                             ?_FRAME_Plot 002F  
>>>>>>> test
